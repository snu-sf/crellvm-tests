; ModuleID = 'fold-const.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i32 }
%struct.realvaluetype = type { [3 x i64] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.rtx_def*, %struct.anon }
%struct.anon = type { i64, i64 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.tree_exp = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.tree_complex = type { %struct.tree_common, %struct.rtx_def*, %union.tree_node*, %union.tree_node* }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_real_cst = type { %struct.tree_common, %struct.rtx_def*, %struct.realvaluetype }
%struct.tree_vector = type { %struct.tree_common, %struct.rtx_def*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, %struct.rtx_def*, i32, i8* }
%struct.fc_args = type { %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.cb_args = type { i32, %union.tree_node*, %struct.realvaluetype, %struct.realvaluetype, %union.tree_node* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@target_flags = external global i32, align 4
@.str = private unnamed_addr constant [13 x i8] c"fold-const.c\00", align 1
@__FUNCTION__.div_and_round_double = private unnamed_addr constant [21 x i8] c"div_and_round_double\00", align 1
@sizetype_tab = external global [6 x %union.tree_node*], align 16
@size_int_type_wide.size_htab = internal global %struct.htab* null, align 8
@size_int_type_wide.new_const = internal global %union.tree_node* null, align 8
@__FUNCTION__.size_binop = private unnamed_addr constant [11 x i8] c"size_binop\00", align 1
@global_trees = external global [51 x %union.tree_node*], align 16
@__FUNCTION__.size_diffop = private unnamed_addr constant [12 x i8] c"size_diffop\00", align 1
@pedantic_lvalues = common global i32 0, align 4
@tree_code_type = external global [256 x i8], align 16
@flag_unsafe_math_optimizations = external global i32, align 4
@__FUNCTION__.invert_truthvalue = private unnamed_addr constant [18 x i8] c"invert_truthvalue\00", align 1
@mode_bitsize = external constant [59 x i16], align 16
@dconst0 = external global %struct.realvaluetype, align 8
@dconst1 = external global %struct.realvaluetype, align 8
@optimize = external global i32, align 4
@__FUNCTION__.fold = private unnamed_addr constant [5 x i8] c"fold\00", align 1
@integer_types = external global [11 x %union.tree_node*], align 16
@pedantic = external global i32, align 4
@__FUNCTION__.int_const_binop = private unnamed_addr constant [16 x i8] c"int_const_binop\00", align 1
@__FUNCTION__.invert_tree_comparison = private unnamed_addr constant [23 x i8] c"invert_tree_comparison\00", align 1
@__FUNCTION__.const_binop = private unnamed_addr constant [12 x i8] c"const_binop\00", align 1
@mode_size = external constant [59 x i8], align 16
@ix86_branch_cost = external global i32, align 4
@tree_code_length = external global [256 x i32], align 16
@__FUNCTION__.make_range = private unnamed_addr constant [11 x i8] c"make_range\00", align 1
@__FUNCTION__.range_binop = private unnamed_addr constant [12 x i8] c"range_binop\00", align 1
@word_mode = external global i32, align 4
@.str.1 = private unnamed_addr constant [24 x i8] c"comparison is always %d\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"`or' of unmatched not-equal tests is always 1\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"`and' of mutually exclusive equal-tests is always 0\00", align 1
@__FUNCTION__.swap_tree_comparison = private unnamed_addr constant [21 x i8] c"swap_tree_comparison\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"comparison is always %d due to width of bit-field\00", align 1

; Function Attrs: nounwind uwtable
define i32 @force_fit_type(%union.tree_node* %t, i32 %overflow) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %union.tree_node*, align 8
  %overflow.addr = alloca i32, align 4
  %low = alloca i64, align 8
  %high = alloca i64, align 8
  %prec = alloca i32, align 4
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store i32 %overflow, i32* %overflow.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 26
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %overflow.addr, align 4
  store i32 %1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp ne i32 %bf.clear4, 25
  br i1 %cmp5, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %if.else
  %3 = load i32, i32* %overflow.addr, align 4
  store i32 %3, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.7

if.end.7:                                         ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst = bitcast %union.tree_node* %4 to %struct.tree_int_cst*
  %int_cst8 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low9 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst8, i32 0, i32 0
  %5 = load i64, i64* %low9, align 8
  store i64 %5, i64* %low, align 8
  %6 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst10 = bitcast %union.tree_node* %6 to %struct.tree_int_cst*
  %int_cst11 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst10, i32 0, i32 2
  %high12 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst11, i32 0, i32 1
  %7 = load i64, i64* %high12, align 8
  store i64 %7, i64* %high, align 8
  %8 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common13 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common14 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 13
  br i1 %cmp18, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.7
  %10 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common19 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %common21 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 15
  br i1 %cmp25, label %if.then.26, label %if.else.27

if.then.26:                                       ; preds = %lor.lhs.false, %if.end.7
  %12 = load i32, i32* @target_flags, align 4
  %and = and i32 %12, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 64, i32 32
  store i32 %cond, i32* %prec, align 4
  br label %if.end.33

if.else.27:                                       ; preds = %lor.lhs.false
  %13 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common28 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type29, align 8
  %type30 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 6
  %bf.load31 = load i32, i32* %precision, align 4
  %bf.clear32 = and i32 %bf.load31, 511
  store i32 %bf.clear32, i32* %prec, align 4
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.27, %if.then.26
  %15 = load i32, i32* %prec, align 4
  %cmp34 = icmp eq i32 %15, 128
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %if.end.33
  br label %if.end.58

if.else.36:                                       ; preds = %if.end.33
  %16 = load i32, i32* %prec, align 4
  %cmp37 = icmp ugt i32 %16, 64
  br i1 %cmp37, label %if.then.38, label %if.else.43

if.then.38:                                       ; preds = %if.else.36
  %17 = load i32, i32* %prec, align 4
  %sub = sub i32 %17, 64
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 -1, %sh_prom
  %neg = xor i64 %shl, -1
  %18 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst39 = bitcast %union.tree_node* %18 to %struct.tree_int_cst*
  %int_cst40 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst39, i32 0, i32 2
  %high41 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst40, i32 0, i32 1
  %19 = load i64, i64* %high41, align 8
  %and42 = and i64 %19, %neg
  store i64 %and42, i64* %high41, align 8
  br label %if.end.57

if.else.43:                                       ; preds = %if.else.36
  %20 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst44 = bitcast %union.tree_node* %20 to %struct.tree_int_cst*
  %int_cst45 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst44, i32 0, i32 2
  %high46 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst45, i32 0, i32 1
  store i64 0, i64* %high46, align 8
  %21 = load i32, i32* %prec, align 4
  %cmp47 = icmp ult i32 %21, 64
  br i1 %cmp47, label %if.then.48, label %if.end.56

if.then.48:                                       ; preds = %if.else.43
  %22 = load i32, i32* %prec, align 4
  %sh_prom49 = zext i32 %22 to i64
  %shl50 = shl i64 -1, %sh_prom49
  %neg51 = xor i64 %shl50, -1
  %23 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst52 = bitcast %union.tree_node* %23 to %struct.tree_int_cst*
  %int_cst53 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst52, i32 0, i32 2
  %low54 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst53, i32 0, i32 0
  %24 = load i64, i64* %low54, align 8
  %and55 = and i64 %24, %neg51
  store i64 %and55, i64* %low54, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.48, %if.else.43
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then.38
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.then.35
  %25 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common59 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %type60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %type60, align 8
  %common61 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load62 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load62, 13
  %bf.clear63 = and i32 %bf.lshr, 1
  %tobool64 = icmp ne i32 %bf.clear63, 0
  br i1 %tobool64, label %land.lhs.true, label %if.end.81

land.lhs.true:                                    ; preds = %if.end.58
  %27 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common65 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %common67 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 2
  %bf.load69 = load i32, i32* %code68, align 8
  %bf.clear70 = and i32 %bf.load69, 255
  %cmp71 = icmp eq i32 %bf.clear70, 6
  br i1 %cmp71, label %land.lhs.true.72, label %if.then.80

land.lhs.true.72:                                 ; preds = %land.lhs.true
  %29 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common73 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %type75 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i32 0, i32 6
  %bf.load76 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr77 = lshr i32 %bf.load76, 17
  %bf.clear78 = and i32 %bf.lshr77, 1
  %tobool79 = icmp ne i32 %bf.clear78, 0
  br i1 %tobool79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %land.lhs.true.72, %land.lhs.true
  %31 = load i32, i32* %overflow.addr, align 4
  store i32 %31, i32* %retval
  br label %return

if.end.81:                                        ; preds = %land.lhs.true.72, %if.end.58
  %32 = load i32, i32* %prec, align 4
  %cmp82 = icmp ne i32 %32, 128
  br i1 %cmp82, label %land.lhs.true.83, label %if.end.125

land.lhs.true.83:                                 ; preds = %if.end.81
  %33 = load i32, i32* %prec, align 4
  %cmp84 = icmp ugt i32 %33, 64
  br i1 %cmp84, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.83
  %34 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst85 = bitcast %union.tree_node* %34 to %struct.tree_int_cst*
  %int_cst86 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst85, i32 0, i32 2
  %high87 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst86, i32 0, i32 1
  %35 = load i64, i64* %high87, align 8
  %36 = load i32, i32* %prec, align 4
  %sub88 = sub i32 %36, 64
  %sub89 = sub i32 %sub88, 1
  %sh_prom90 = zext i32 %sub89 to i64
  %shl91 = shl i64 1, %sh_prom90
  %and92 = and i64 %35, %shl91
  %cmp93 = icmp ne i64 0, %and92
  br i1 %cmp93, label %if.then.102, label %if.end.125

cond.false:                                       ; preds = %land.lhs.true.83
  %37 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst94 = bitcast %union.tree_node* %37 to %struct.tree_int_cst*
  %int_cst95 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst94, i32 0, i32 2
  %low96 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst95, i32 0, i32 0
  %38 = load i64, i64* %low96, align 8
  %39 = load i32, i32* %prec, align 4
  %sub97 = sub i32 %39, 1
  %sh_prom98 = zext i32 %sub97 to i64
  %shl99 = shl i64 1, %sh_prom98
  %and100 = and i64 %38, %shl99
  %cmp101 = icmp ne i64 0, %and100
  br i1 %cmp101, label %if.then.102, label %if.end.125

if.then.102:                                      ; preds = %cond.false, %cond.true
  %40 = load i32, i32* %prec, align 4
  %cmp103 = icmp ugt i32 %40, 64
  br i1 %cmp103, label %if.then.104, label %if.else.111

if.then.104:                                      ; preds = %if.then.102
  %41 = load i32, i32* %prec, align 4
  %sub105 = sub i32 %41, 64
  %sh_prom106 = zext i32 %sub105 to i64
  %shl107 = shl i64 -1, %sh_prom106
  %42 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst108 = bitcast %union.tree_node* %42 to %struct.tree_int_cst*
  %int_cst109 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst108, i32 0, i32 2
  %high110 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst109, i32 0, i32 1
  %43 = load i64, i64* %high110, align 8
  %or = or i64 %43, %shl107
  store i64 %or, i64* %high110, align 8
  br label %if.end.124

if.else.111:                                      ; preds = %if.then.102
  %44 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst112 = bitcast %union.tree_node* %44 to %struct.tree_int_cst*
  %int_cst113 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst112, i32 0, i32 2
  %high114 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst113, i32 0, i32 1
  store i64 -1, i64* %high114, align 8
  %45 = load i32, i32* %prec, align 4
  %cmp115 = icmp ult i32 %45, 64
  br i1 %cmp115, label %if.then.116, label %if.end.123

if.then.116:                                      ; preds = %if.else.111
  %46 = load i32, i32* %prec, align 4
  %sh_prom117 = zext i32 %46 to i64
  %shl118 = shl i64 -1, %sh_prom117
  %47 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst119 = bitcast %union.tree_node* %47 to %struct.tree_int_cst*
  %int_cst120 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst119, i32 0, i32 2
  %low121 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst120, i32 0, i32 0
  %48 = load i64, i64* %low121, align 8
  %or122 = or i64 %48, %shl118
  store i64 %or122, i64* %low121, align 8
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.116, %if.else.111
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.then.104
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %cond.false, %cond.true, %if.end.81
  %49 = load i32, i32* %overflow.addr, align 4
  %conv = sext i32 %49 to i64
  %50 = load i64, i64* %low, align 8
  %51 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst126 = bitcast %union.tree_node* %51 to %struct.tree_int_cst*
  %int_cst127 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst126, i32 0, i32 2
  %low128 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst127, i32 0, i32 0
  %52 = load i64, i64* %low128, align 8
  %xor = xor i64 %50, %52
  %or129 = or i64 %conv, %xor
  %53 = load i64, i64* %high, align 8
  %54 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %int_cst130 = bitcast %union.tree_node* %54 to %struct.tree_int_cst*
  %int_cst131 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst130, i32 0, i32 2
  %high132 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst131, i32 0, i32 1
  %55 = load i64, i64* %high132, align 8
  %xor133 = xor i64 %53, %55
  %or134 = or i64 %or129, %xor133
  %cmp135 = icmp ne i64 %or134, 0
  %conv136 = zext i1 %cmp135 to i32
  store i32 %conv136, i32* %retval
  br label %return

return:                                           ; preds = %if.end.125, %if.then.80, %if.then.6, %if.then
  %56 = load i32, i32* %retval
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define i32 @add_double(i64 %l1, i64 %h1, i64 %l2, i64 %h2, i64* %lv, i64* %hv) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %l2.addr = alloca i64, align 8
  %h2.addr = alloca i64, align 8
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %l = alloca i64, align 8
  %h = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %l2, i64* %l2.addr, align 8
  store i64 %h2, i64* %h2.addr, align 8
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  %0 = load i64, i64* %l1.addr, align 8
  %1 = load i64, i64* %l2.addr, align 8
  %add = add i64 %0, %1
  store i64 %add, i64* %l, align 8
  %2 = load i64, i64* %h1.addr, align 8
  %3 = load i64, i64* %h2.addr, align 8
  %add1 = add nsw i64 %2, %3
  %4 = load i64, i64* %l, align 8
  %5 = load i64, i64* %l1.addr, align 8
  %cmp = icmp ult i64 %4, %5
  %conv = zext i1 %cmp to i32
  %conv2 = sext i32 %conv to i64
  %add3 = add nsw i64 %add1, %conv2
  store i64 %add3, i64* %h, align 8
  %6 = load i64, i64* %l, align 8
  %7 = load i64*, i64** %lv.addr, align 8
  store i64 %6, i64* %7, align 8
  %8 = load i64, i64* %h, align 8
  %9 = load i64*, i64** %hv.addr, align 8
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* %h1.addr, align 8
  %11 = load i64, i64* %h2.addr, align 8
  %xor = xor i64 %10, %11
  %neg = xor i64 %xor, -1
  %12 = load i64, i64* %h1.addr, align 8
  %13 = load i64, i64* %h, align 8
  %xor4 = xor i64 %12, %13
  %and = and i64 %neg, %xor4
  %cmp5 = icmp slt i64 %and, 0
  %conv6 = zext i1 %cmp5 to i32
  ret i32 %conv6
}

; Function Attrs: nounwind uwtable
define i32 @neg_double(i64 %l1, i64 %h1, i64* %lv, i64* %hv) #0 {
entry:
  %retval = alloca i32, align 4
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  %0 = load i64, i64* %l1.addr, align 8
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %lv.addr, align 8
  store i64 0, i64* %1, align 8
  %2 = load i64, i64* %h1.addr, align 8
  %sub = sub nsw i64 0, %2
  %3 = load i64*, i64** %hv.addr, align 8
  store i64 %sub, i64* %3, align 8
  %4 = load i64*, i64** %hv.addr, align 8
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* %h1.addr, align 8
  %and = and i64 %5, %6
  %cmp1 = icmp slt i64 %and, 0
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %7 = load i64, i64* %l1.addr, align 8
  %sub2 = sub i64 0, %7
  %8 = load i64*, i64** %lv.addr, align 8
  store i64 %sub2, i64* %8, align 8
  %9 = load i64, i64* %h1.addr, align 8
  %neg = xor i64 %9, -1
  %10 = load i64*, i64** %hv.addr, align 8
  store i64 %neg, i64* %10, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @mul_double(i64 %l1, i64 %h1, i64 %l2, i64 %h2, i64* %lv, i64* %hv) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %l2.addr = alloca i64, align 8
  %h2.addr = alloca i64, align 8
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %arg1 = alloca [4 x i64], align 16
  %arg2 = alloca [4 x i64], align 16
  %prod = alloca [8 x i64], align 16
  %carry = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %toplow = alloca i64, align 8
  %neglow = alloca i64, align 8
  %tophigh = alloca i64, align 8
  %neghigh = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %l2, i64* %l2.addr, align 8
  store i64 %h2, i64* %h2.addr, align 8
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %arg1, i32 0, i32 0
  %0 = load i64, i64* %l1.addr, align 8
  %1 = load i64, i64* %h1.addr, align 8
  call void @encode(i64* %arraydecay, i64 %0, i64 %1)
  %arraydecay1 = getelementptr inbounds [4 x i64], [4 x i64]* %arg2, i32 0, i32 0
  %2 = load i64, i64* %l2.addr, align 8
  %3 = load i64, i64* %h2.addr, align 8
  call void @encode(i64* %arraydecay1, i64 %2, i64 %3)
  %arraydecay2 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i32 0
  %4 = bitcast i64* %arraydecay2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 64, i32 1, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.17, %entry
  %5 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %5, 4
  br i1 %cmp, label %for.body, label %for.end.19

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %carry, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4
  %cmp4 = icmp slt i32 %6, 4
  br i1 %cmp4, label %for.body.5, label %for.end

for.body.5:                                       ; preds = %for.cond.3
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %j, align 4
  %add = add nsw i32 %7, %8
  store i32 %add, i32* %k, align 4
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [4 x i64], [4 x i64]* %arg1, i32 0, i64 %idxprom
  %10 = load i64, i64* %arrayidx, align 8
  %11 = load i32, i32* %j, align 4
  %idxprom6 = sext i32 %11 to i64
  %arrayidx7 = getelementptr inbounds [4 x i64], [4 x i64]* %arg2, i32 0, i64 %idxprom6
  %12 = load i64, i64* %arrayidx7, align 8
  %mul = mul nsw i64 %10, %12
  %13 = load i64, i64* %carry, align 8
  %add8 = add i64 %13, %mul
  store i64 %add8, i64* %carry, align 8
  %14 = load i32, i32* %k, align 4
  %idxprom9 = sext i32 %14 to i64
  %arrayidx10 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i64 %idxprom9
  %15 = load i64, i64* %arrayidx10, align 8
  %16 = load i64, i64* %carry, align 8
  %add11 = add i64 %16, %15
  store i64 %add11, i64* %carry, align 8
  %17 = load i64, i64* %carry, align 8
  %and = and i64 %17, 4294967295
  %18 = load i32, i32* %k, align 4
  %idxprom12 = sext i32 %18 to i64
  %arrayidx13 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i64 %idxprom12
  store i64 %and, i64* %arrayidx13, align 8
  %19 = load i64, i64* %carry, align 8
  %shr = lshr i64 %19, 32
  store i64 %shr, i64* %carry, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body.5
  %20 = load i32, i32* %j, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.3

for.end:                                          ; preds = %for.cond.3
  %21 = load i64, i64* %carry, align 8
  %22 = load i32, i32* %i, align 4
  %add14 = add nsw i32 %22, 4
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i64 %idxprom15
  store i64 %21, i64* %arrayidx16, align 8
  br label %for.inc.17

for.inc.17:                                       ; preds = %for.end
  %23 = load i32, i32* %i, align 4
  %inc18 = add nsw i32 %23, 1
  store i32 %inc18, i32* %i, align 4
  br label %for.cond

for.end.19:                                       ; preds = %for.cond
  %arraydecay20 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i32 0
  %24 = load i64*, i64** %lv.addr, align 8
  %25 = load i64*, i64** %hv.addr, align 8
  call void @decode(i64* %arraydecay20, i64* %24, i64* %25)
  %arraydecay21 = getelementptr inbounds [8 x i64], [8 x i64]* %prod, i32 0, i32 0
  %add.ptr = getelementptr inbounds i64, i64* %arraydecay21, i64 4
  call void @decode(i64* %add.ptr, i64* %toplow, i64* %tophigh)
  %26 = load i64, i64* %h1.addr, align 8
  %cmp22 = icmp slt i64 %26, 0
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %for.end.19
  %27 = load i64, i64* %l2.addr, align 8
  %28 = load i64, i64* %h2.addr, align 8
  %call = call i32 @neg_double(i64 %27, i64 %28, i64* %neglow, i64* %neghigh)
  %29 = load i64, i64* %neglow, align 8
  %30 = load i64, i64* %neghigh, align 8
  %31 = load i64, i64* %toplow, align 8
  %32 = load i64, i64* %tophigh, align 8
  %call23 = call i32 @add_double(i64 %29, i64 %30, i64 %31, i64 %32, i64* %toplow, i64* %tophigh)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end.19
  %33 = load i64, i64* %h2.addr, align 8
  %cmp24 = icmp slt i64 %33, 0
  br i1 %cmp24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %if.end
  %34 = load i64, i64* %l1.addr, align 8
  %35 = load i64, i64* %h1.addr, align 8
  %call26 = call i32 @neg_double(i64 %34, i64 %35, i64* %neglow, i64* %neghigh)
  %36 = load i64, i64* %neglow, align 8
  %37 = load i64, i64* %neghigh, align 8
  %38 = load i64, i64* %toplow, align 8
  %39 = load i64, i64* %tophigh, align 8
  %call27 = call i32 @add_double(i64 %36, i64 %37, i64 %38, i64 %39, i64* %toplow, i64* %tophigh)
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %if.end
  %40 = load i64*, i64** %hv.addr, align 8
  %41 = load i64, i64* %40, align 8
  %cmp29 = icmp slt i64 %41, 0
  br i1 %cmp29, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.28
  %42 = load i64, i64* %toplow, align 8
  %43 = load i64, i64* %tophigh, align 8
  %and30 = and i64 %42, %43
  %neg = xor i64 %and30, -1
  br label %cond.end

cond.false:                                       ; preds = %if.end.28
  %44 = load i64, i64* %toplow, align 8
  %45 = load i64, i64* %tophigh, align 8
  %or = or i64 %44, %45
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %neg, %cond.true ], [ %or, %cond.false ]
  %cmp31 = icmp ne i64 %cond, 0
  %conv = zext i1 %cmp31 to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal void @encode(i64* %words, i64 %low, i64 %hi) #0 {
entry:
  %words.addr = alloca i64*, align 8
  %low.addr = alloca i64, align 8
  %hi.addr = alloca i64, align 8
  store i64* %words, i64** %words.addr, align 8
  store i64 %low, i64* %low.addr, align 8
  store i64 %hi, i64* %hi.addr, align 8
  %0 = load i64, i64* %low.addr, align 8
  %and = and i64 %0, 4294967295
  %1 = load i64*, i64** %words.addr, align 8
  %arrayidx = getelementptr inbounds i64, i64* %1, i64 0
  store i64 %and, i64* %arrayidx, align 8
  %2 = load i64, i64* %low.addr, align 8
  %shr = lshr i64 %2, 32
  %3 = load i64*, i64** %words.addr, align 8
  %arrayidx1 = getelementptr inbounds i64, i64* %3, i64 1
  store i64 %shr, i64* %arrayidx1, align 8
  %4 = load i64, i64* %hi.addr, align 8
  %and2 = and i64 %4, 4294967295
  %5 = load i64*, i64** %words.addr, align 8
  %arrayidx3 = getelementptr inbounds i64, i64* %5, i64 2
  store i64 %and2, i64* %arrayidx3, align 8
  %6 = load i64, i64* %hi.addr, align 8
  %shr4 = lshr i64 %6, 32
  %7 = load i64*, i64** %words.addr, align 8
  %arrayidx5 = getelementptr inbounds i64, i64* %7, i64 3
  store i64 %shr4, i64* %arrayidx5, align 8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal void @decode(i64* %words, i64* %low, i64* %hi) #0 {
entry:
  %words.addr = alloca i64*, align 8
  %low.addr = alloca i64*, align 8
  %hi.addr = alloca i64*, align 8
  store i64* %words, i64** %words.addr, align 8
  store i64* %low, i64** %low.addr, align 8
  store i64* %hi, i64** %hi.addr, align 8
  %0 = load i64*, i64** %words.addr, align 8
  %arrayidx = getelementptr inbounds i64, i64* %0, i64 0
  %1 = load i64, i64* %arrayidx, align 8
  %2 = load i64*, i64** %words.addr, align 8
  %arrayidx1 = getelementptr inbounds i64, i64* %2, i64 1
  %3 = load i64, i64* %arrayidx1, align 8
  %mul = mul i64 %3, 4294967296
  %add = add i64 %1, %mul
  %4 = load i64*, i64** %low.addr, align 8
  store i64 %add, i64* %4, align 8
  %5 = load i64*, i64** %words.addr, align 8
  %arrayidx2 = getelementptr inbounds i64, i64* %5, i64 2
  %6 = load i64, i64* %arrayidx2, align 8
  %7 = load i64*, i64** %words.addr, align 8
  %arrayidx3 = getelementptr inbounds i64, i64* %7, i64 3
  %8 = load i64, i64* %arrayidx3, align 8
  %mul4 = mul i64 %8, 4294967296
  %add5 = add i64 %6, %mul4
  %9 = load i64*, i64** %hi.addr, align 8
  store i64 %add5, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @lshift_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* %lv, i64* %hv, i32 %arith) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %prec.addr = alloca i32, align 4
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %arith.addr = alloca i32, align 4
  %signmask = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i32 %prec, i32* %prec.addr, align 4
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  store i32 %arith, i32* %arith.addr, align 4
  %0 = load i64, i64* %count.addr, align 8
  %cmp = icmp slt i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %l1.addr, align 8
  %2 = load i64, i64* %h1.addr, align 8
  %3 = load i64, i64* %count.addr, align 8
  %sub = sub nsw i64 0, %3
  %4 = load i32, i32* %prec.addr, align 4
  %5 = load i64*, i64** %lv.addr, align 8
  %6 = load i64*, i64** %hv.addr, align 8
  %7 = load i32, i32* %arith.addr, align 4
  call void @rshift_double(i64 %1, i64 %2, i64 %sub, i32 %4, i64* %5, i64* %6, i32 %7)
  br label %if.end.44

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %count.addr, align 8
  %cmp1 = icmp sge i64 %8, 128
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %9 = load i64*, i64** %hv.addr, align 8
  store i64 0, i64* %9, align 8
  %10 = load i64*, i64** %lv.addr, align 8
  store i64 0, i64* %10, align 8
  br label %if.end.13

if.else:                                          ; preds = %if.end
  %11 = load i64, i64* %count.addr, align 8
  %cmp3 = icmp sge i64 %11, 64
  br i1 %cmp3, label %if.then.4, label %if.else.6

if.then.4:                                        ; preds = %if.else
  %12 = load i64, i64* %l1.addr, align 8
  %13 = load i64, i64* %count.addr, align 8
  %sub5 = sub nsw i64 %13, 64
  %shl = shl i64 %12, %sub5
  %14 = load i64*, i64** %hv.addr, align 8
  store i64 %shl, i64* %14, align 8
  %15 = load i64*, i64** %lv.addr, align 8
  store i64 0, i64* %15, align 8
  br label %if.end.12

if.else.6:                                        ; preds = %if.else
  %16 = load i64, i64* %h1.addr, align 8
  %17 = load i64, i64* %count.addr, align 8
  %shl7 = shl i64 %16, %17
  %18 = load i64, i64* %l1.addr, align 8
  %19 = load i64, i64* %count.addr, align 8
  %sub8 = sub nsw i64 64, %19
  %sub9 = sub nsw i64 %sub8, 1
  %shr = lshr i64 %18, %sub9
  %shr10 = lshr i64 %shr, 1
  %or = or i64 %shl7, %shr10
  %20 = load i64*, i64** %hv.addr, align 8
  store i64 %or, i64* %20, align 8
  %21 = load i64, i64* %l1.addr, align 8
  %22 = load i64, i64* %count.addr, align 8
  %shl11 = shl i64 %21, %22
  %23 = load i64*, i64** %lv.addr, align 8
  store i64 %shl11, i64* %23, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.else.6, %if.then.4
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.2
  %24 = load i32, i32* %prec.addr, align 4
  %cmp14 = icmp ugt i32 %24, 64
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.13
  %25 = load i64*, i64** %hv.addr, align 8
  %26 = load i64, i64* %25, align 8
  %27 = load i32, i32* %prec.addr, align 4
  %sub15 = sub i32 %27, 64
  %sub16 = sub i32 %sub15, 1
  %sh_prom = zext i32 %sub16 to i64
  %shr17 = ashr i64 %26, %sh_prom
  br label %cond.end

cond.false:                                       ; preds = %if.end.13
  %28 = load i64*, i64** %lv.addr, align 8
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %prec.addr, align 4
  %sub18 = sub i32 %30, 1
  %sh_prom19 = zext i32 %sub18 to i64
  %shr20 = lshr i64 %29, %sh_prom19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %shr17, %cond.true ], [ %shr20, %cond.false ]
  %and = and i64 %cond, 1
  %sub21 = sub i64 0, %and
  store i64 %sub21, i64* %signmask, align 8
  %31 = load i32, i32* %prec.addr, align 4
  %cmp22 = icmp uge i32 %31, 128
  br i1 %cmp22, label %if.then.23, label %if.else.24

if.then.23:                                       ; preds = %cond.end
  br label %if.end.44

if.else.24:                                       ; preds = %cond.end
  %32 = load i32, i32* %prec.addr, align 4
  %cmp25 = icmp uge i32 %32, 64
  br i1 %cmp25, label %if.then.26, label %if.else.35

if.then.26:                                       ; preds = %if.else.24
  %33 = load i32, i32* %prec.addr, align 4
  %sub27 = sub i32 %33, 64
  %sh_prom28 = zext i32 %sub27 to i64
  %shl29 = shl i64 -1, %sh_prom28
  %neg = xor i64 %shl29, -1
  %34 = load i64*, i64** %hv.addr, align 8
  %35 = load i64, i64* %34, align 8
  %and30 = and i64 %35, %neg
  store i64 %and30, i64* %34, align 8
  %36 = load i64, i64* %signmask, align 8
  %37 = load i32, i32* %prec.addr, align 4
  %sub31 = sub i32 %37, 64
  %sh_prom32 = zext i32 %sub31 to i64
  %shl33 = shl i64 %36, %sh_prom32
  %38 = load i64*, i64** %hv.addr, align 8
  %39 = load i64, i64* %38, align 8
  %or34 = or i64 %39, %shl33
  store i64 %or34, i64* %38, align 8
  br label %if.end.43

if.else.35:                                       ; preds = %if.else.24
  %40 = load i64, i64* %signmask, align 8
  %41 = load i64*, i64** %hv.addr, align 8
  store i64 %40, i64* %41, align 8
  %42 = load i32, i32* %prec.addr, align 4
  %sh_prom36 = zext i32 %42 to i64
  %shl37 = shl i64 -1, %sh_prom36
  %neg38 = xor i64 %shl37, -1
  %43 = load i64*, i64** %lv.addr, align 8
  %44 = load i64, i64* %43, align 8
  %and39 = and i64 %44, %neg38
  store i64 %and39, i64* %43, align 8
  %45 = load i64, i64* %signmask, align 8
  %46 = load i32, i32* %prec.addr, align 4
  %sh_prom40 = zext i32 %46 to i64
  %shl41 = shl i64 %45, %sh_prom40
  %47 = load i64*, i64** %lv.addr, align 8
  %48 = load i64, i64* %47, align 8
  %or42 = or i64 %48, %shl41
  store i64 %or42, i64* %47, align 8
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.35, %if.then.26
  br label %if.end.44

if.end.44:                                        ; preds = %if.then, %if.end.43, %if.then.23
  ret void
}

; Function Attrs: nounwind uwtable
define void @rshift_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* %lv, i64* %hv, i32 %arith) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %prec.addr = alloca i32, align 4
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %arith.addr = alloca i32, align 4
  %signmask = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i32 %prec, i32* %prec.addr, align 4
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  store i32 %arith, i32* %arith.addr, align 4
  %0 = load i32, i32* %arith.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %h1.addr, align 8
  %shr = lshr i64 %1, 63
  %sub = sub i64 0, %shr
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* %signmask, align 8
  %2 = load i64, i64* %count.addr, align 8
  %cmp = icmp sge i64 %2, 128
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %3 = load i64*, i64** %hv.addr, align 8
  store i64 0, i64* %3, align 8
  %4 = load i64*, i64** %lv.addr, align 8
  store i64 0, i64* %4, align 8
  br label %if.end.11

if.else:                                          ; preds = %cond.end
  %5 = load i64, i64* %count.addr, align 8
  %cmp1 = icmp sge i64 %5, 64
  br i1 %cmp1, label %if.then.2, label %if.else.5

if.then.2:                                        ; preds = %if.else
  %6 = load i64*, i64** %hv.addr, align 8
  store i64 0, i64* %6, align 8
  %7 = load i64, i64* %h1.addr, align 8
  %8 = load i64, i64* %count.addr, align 8
  %sub3 = sub nsw i64 %8, 64
  %shr4 = lshr i64 %7, %sub3
  %9 = load i64*, i64** %lv.addr, align 8
  store i64 %shr4, i64* %9, align 8
  br label %if.end

if.else.5:                                        ; preds = %if.else
  %10 = load i64, i64* %h1.addr, align 8
  %11 = load i64, i64* %count.addr, align 8
  %shr6 = lshr i64 %10, %11
  %12 = load i64*, i64** %hv.addr, align 8
  store i64 %shr6, i64* %12, align 8
  %13 = load i64, i64* %l1.addr, align 8
  %14 = load i64, i64* %count.addr, align 8
  %shr7 = lshr i64 %13, %14
  %15 = load i64, i64* %h1.addr, align 8
  %16 = load i64, i64* %count.addr, align 8
  %sub8 = sub nsw i64 64, %16
  %sub9 = sub nsw i64 %sub8, 1
  %shl = shl i64 %15, %sub9
  %shl10 = shl i64 %shl, 1
  %or = or i64 %shr7, %shl10
  %17 = load i64*, i64** %lv.addr, align 8
  store i64 %or, i64* %17, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.5, %if.then.2
  br label %if.end.11

if.end.11:                                        ; preds = %if.end, %if.then
  %18 = load i64, i64* %count.addr, align 8
  %19 = load i32, i32* %prec.addr, align 4
  %conv = zext i32 %19 to i64
  %cmp12 = icmp sge i64 %18, %conv
  br i1 %cmp12, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %if.end.11
  %20 = load i64, i64* %signmask, align 8
  %21 = load i64*, i64** %hv.addr, align 8
  store i64 %20, i64* %21, align 8
  %22 = load i64, i64* %signmask, align 8
  %23 = load i64*, i64** %lv.addr, align 8
  store i64 %22, i64* %23, align 8
  br label %if.end.48

if.else.15:                                       ; preds = %if.end.11
  %24 = load i32, i32* %prec.addr, align 4
  %conv16 = zext i32 %24 to i64
  %25 = load i64, i64* %count.addr, align 8
  %sub17 = sub nsw i64 %conv16, %25
  %cmp18 = icmp sge i64 %sub17, 128
  br i1 %cmp18, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %if.else.15
  br label %if.end.47

if.else.21:                                       ; preds = %if.else.15
  %26 = load i32, i32* %prec.addr, align 4
  %conv22 = zext i32 %26 to i64
  %27 = load i64, i64* %count.addr, align 8
  %sub23 = sub nsw i64 %conv22, %27
  %cmp24 = icmp sge i64 %sub23, 64
  br i1 %cmp24, label %if.then.26, label %if.else.36

if.then.26:                                       ; preds = %if.else.21
  %28 = load i32, i32* %prec.addr, align 4
  %conv27 = zext i32 %28 to i64
  %29 = load i64, i64* %count.addr, align 8
  %sub28 = sub nsw i64 %conv27, %29
  %sub29 = sub nsw i64 %sub28, 64
  %shl30 = shl i64 -1, %sub29
  %neg = xor i64 %shl30, -1
  %30 = load i64*, i64** %hv.addr, align 8
  %31 = load i64, i64* %30, align 8
  %and = and i64 %31, %neg
  store i64 %and, i64* %30, align 8
  %32 = load i64, i64* %signmask, align 8
  %33 = load i32, i32* %prec.addr, align 4
  %conv31 = zext i32 %33 to i64
  %34 = load i64, i64* %count.addr, align 8
  %sub32 = sub nsw i64 %conv31, %34
  %sub33 = sub nsw i64 %sub32, 64
  %shl34 = shl i64 %32, %sub33
  %35 = load i64*, i64** %hv.addr, align 8
  %36 = load i64, i64* %35, align 8
  %or35 = or i64 %36, %shl34
  store i64 %or35, i64* %35, align 8
  br label %if.end.46

if.else.36:                                       ; preds = %if.else.21
  %37 = load i64, i64* %signmask, align 8
  %38 = load i64*, i64** %hv.addr, align 8
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* %prec.addr, align 4
  %conv37 = zext i32 %39 to i64
  %40 = load i64, i64* %count.addr, align 8
  %sub38 = sub nsw i64 %conv37, %40
  %shl39 = shl i64 -1, %sub38
  %neg40 = xor i64 %shl39, -1
  %41 = load i64*, i64** %lv.addr, align 8
  %42 = load i64, i64* %41, align 8
  %and41 = and i64 %42, %neg40
  store i64 %and41, i64* %41, align 8
  %43 = load i64, i64* %signmask, align 8
  %44 = load i32, i32* %prec.addr, align 4
  %conv42 = zext i32 %44 to i64
  %45 = load i64, i64* %count.addr, align 8
  %sub43 = sub nsw i64 %conv42, %45
  %shl44 = shl i64 %43, %sub43
  %46 = load i64*, i64** %lv.addr, align 8
  %47 = load i64, i64* %46, align 8
  %or45 = or i64 %47, %shl44
  store i64 %or45, i64* %46, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.36, %if.then.26
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.then.20
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.then.14
  ret void
}

; Function Attrs: nounwind uwtable
define void @lrotate_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* %lv, i64* %hv) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %prec.addr = alloca i32, align 4
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %s1l = alloca i64, align 8
  %s2l = alloca i64, align 8
  %s1h = alloca i64, align 8
  %s2h = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i32 %prec, i32* %prec.addr, align 4
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  %0 = load i32, i32* %prec.addr, align 4
  %conv = zext i32 %0 to i64
  %1 = load i64, i64* %count.addr, align 8
  %rem = srem i64 %1, %conv
  store i64 %rem, i64* %count.addr, align 8
  %2 = load i64, i64* %count.addr, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %prec.addr, align 4
  %conv2 = zext i32 %3 to i64
  %4 = load i64, i64* %count.addr, align 8
  %add = add nsw i64 %4, %conv2
  store i64 %add, i64* %count.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i64, i64* %l1.addr, align 8
  %6 = load i64, i64* %h1.addr, align 8
  %7 = load i64, i64* %count.addr, align 8
  %8 = load i32, i32* %prec.addr, align 4
  call void @lshift_double(i64 %5, i64 %6, i64 %7, i32 %8, i64* %s1l, i64* %s1h, i32 0)
  %9 = load i64, i64* %l1.addr, align 8
  %10 = load i64, i64* %h1.addr, align 8
  %11 = load i32, i32* %prec.addr, align 4
  %conv3 = zext i32 %11 to i64
  %12 = load i64, i64* %count.addr, align 8
  %sub = sub nsw i64 %conv3, %12
  %13 = load i32, i32* %prec.addr, align 4
  call void @rshift_double(i64 %9, i64 %10, i64 %sub, i32 %13, i64* %s2l, i64* %s2h, i32 0)
  %14 = load i64, i64* %s1l, align 8
  %15 = load i64, i64* %s2l, align 8
  %or = or i64 %14, %15
  %16 = load i64*, i64** %lv.addr, align 8
  store i64 %or, i64* %16, align 8
  %17 = load i64, i64* %s1h, align 8
  %18 = load i64, i64* %s2h, align 8
  %or4 = or i64 %17, %18
  %19 = load i64*, i64** %hv.addr, align 8
  store i64 %or4, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @rrotate_double(i64 %l1, i64 %h1, i64 %count, i32 %prec, i64* %lv, i64* %hv) #0 {
entry:
  %l1.addr = alloca i64, align 8
  %h1.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %prec.addr = alloca i32, align 4
  %lv.addr = alloca i64*, align 8
  %hv.addr = alloca i64*, align 8
  %s1l = alloca i64, align 8
  %s2l = alloca i64, align 8
  %s1h = alloca i64, align 8
  %s2h = alloca i64, align 8
  store i64 %l1, i64* %l1.addr, align 8
  store i64 %h1, i64* %h1.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i32 %prec, i32* %prec.addr, align 4
  store i64* %lv, i64** %lv.addr, align 8
  store i64* %hv, i64** %hv.addr, align 8
  %0 = load i32, i32* %prec.addr, align 4
  %conv = zext i32 %0 to i64
  %1 = load i64, i64* %count.addr, align 8
  %rem = srem i64 %1, %conv
  store i64 %rem, i64* %count.addr, align 8
  %2 = load i64, i64* %count.addr, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %prec.addr, align 4
  %conv2 = zext i32 %3 to i64
  %4 = load i64, i64* %count.addr, align 8
  %add = add nsw i64 %4, %conv2
  store i64 %add, i64* %count.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i64, i64* %l1.addr, align 8
  %6 = load i64, i64* %h1.addr, align 8
  %7 = load i64, i64* %count.addr, align 8
  %8 = load i32, i32* %prec.addr, align 4
  call void @rshift_double(i64 %5, i64 %6, i64 %7, i32 %8, i64* %s1l, i64* %s1h, i32 0)
  %9 = load i64, i64* %l1.addr, align 8
  %10 = load i64, i64* %h1.addr, align 8
  %11 = load i32, i32* %prec.addr, align 4
  %conv3 = zext i32 %11 to i64
  %12 = load i64, i64* %count.addr, align 8
  %sub = sub nsw i64 %conv3, %12
  %13 = load i32, i32* %prec.addr, align 4
  call void @lshift_double(i64 %9, i64 %10, i64 %sub, i32 %13, i64* %s2l, i64* %s2h, i32 0)
  %14 = load i64, i64* %s1l, align 8
  %15 = load i64, i64* %s2l, align 8
  %or = or i64 %14, %15
  %16 = load i64*, i64** %lv.addr, align 8
  store i64 %or, i64* %16, align 8
  %17 = load i64, i64* %s1h, align 8
  %18 = load i64, i64* %s2h, align 8
  %or4 = or i64 %17, %18
  %19 = load i64*, i64** %hv.addr, align 8
  store i64 %or4, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @div_and_round_double(i32 %code, i32 %uns, i64 %lnum_orig, i64 %hnum_orig, i64 %lden_orig, i64 %hden_orig, i64* %lquo, i64* %hquo, i64* %lrem, i64* %hrem) #0 {
entry:
  %retval = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %uns.addr = alloca i32, align 4
  %lnum_orig.addr = alloca i64, align 8
  %hnum_orig.addr = alloca i64, align 8
  %lden_orig.addr = alloca i64, align 8
  %hden_orig.addr = alloca i64, align 8
  %lquo.addr = alloca i64*, align 8
  %hquo.addr = alloca i64*, align 8
  %lrem.addr = alloca i64*, align 8
  %hrem.addr = alloca i64*, align 8
  %quo_neg = alloca i32, align 4
  %num = alloca [5 x i64], align 16
  %den = alloca [4 x i64], align 16
  %quo = alloca [4 x i64], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %work = alloca i64, align 8
  %carry = alloca i64, align 8
  %lnum = alloca i64, align 8
  %hnum = alloca i64, align 8
  %lden = alloca i64, align 8
  %hden = alloca i64, align 8
  %overflow = alloca i32, align 4
  %num_hi_sig = alloca i32, align 4
  %den_hi_sig = alloca i32, align 4
  %quo_est = alloca i64, align 8
  %scale = alloca i64, align 8
  %tmp = alloca i64, align 8
  %labs_rem = alloca i64, align 8
  %habs_rem = alloca i64, align 8
  %labs_den = alloca i64, align 8
  %ltwice = alloca i64, align 8
  %habs_den = alloca i64, align 8
  %htwice = alloca i64, align 8
  store i32 %code, i32* %code.addr, align 4
  store i32 %uns, i32* %uns.addr, align 4
  store i64 %lnum_orig, i64* %lnum_orig.addr, align 8
  store i64 %hnum_orig, i64* %hnum_orig.addr, align 8
  store i64 %lden_orig, i64* %lden_orig.addr, align 8
  store i64 %hden_orig, i64* %hden_orig.addr, align 8
  store i64* %lquo, i64** %lquo.addr, align 8
  store i64* %hquo, i64** %hquo.addr, align 8
  store i64* %lrem, i64** %lrem.addr, align 8
  store i64* %hrem, i64** %hrem.addr, align 8
  store i32 0, i32* %quo_neg, align 4
  store i64 0, i64* %carry, align 8
  %0 = load i64, i64* %lnum_orig.addr, align 8
  store i64 %0, i64* %lnum, align 8
  %1 = load i64, i64* %hnum_orig.addr, align 8
  store i64 %1, i64* %hnum, align 8
  %2 = load i64, i64* %lden_orig.addr, align 8
  store i64 %2, i64* %lden, align 8
  %3 = load i64, i64* %hden_orig.addr, align 8
  store i64 %3, i64* %hden, align 8
  store i32 0, i32* %overflow, align 4
  %4 = load i64, i64* %hden, align 8
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i64, i64* %lden, align 8
  %cmp1 = icmp eq i64 %5, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %overflow, align 4
  store i64 1, i64* %lden, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i32, i32* %uns.addr, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end.16, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %7 = load i64, i64* %hnum, align 8
  %cmp3 = icmp slt i64 %7, 0
  br i1 %cmp3, label %if.then.4, label %if.end.10

if.then.4:                                        ; preds = %if.then.2
  %8 = load i32, i32* %quo_neg, align 4
  %neg = xor i32 %8, -1
  store i32 %neg, i32* %quo_neg, align 4
  %9 = load i64, i64* %lnum, align 8
  %10 = load i64, i64* %hnum, align 8
  %call = call i32 @neg_double(i64 %9, i64 %10, i64* %lnum, i64* %hnum)
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %land.lhs.true.6, label %if.end.9

land.lhs.true.6:                                  ; preds = %if.then.4
  %11 = load i64, i64* %lden, align 8
  %12 = load i64, i64* %hden, align 8
  %and = and i64 %11, %12
  %cmp7 = icmp eq i64 %and, -1
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %land.lhs.true.6
  store i32 1, i32* %overflow, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %land.lhs.true.6, %if.then.4
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.2
  %13 = load i64, i64* %hden, align 8
  %cmp11 = icmp slt i64 %13, 0
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %if.end.10
  %14 = load i32, i32* %quo_neg, align 4
  %neg13 = xor i32 %14, -1
  store i32 %neg13, i32* %quo_neg, align 4
  %15 = load i64, i64* %lden, align 8
  %16 = load i64, i64* %hden, align 8
  %call14 = call i32 @neg_double(i64 %15, i64 %16, i64* %lden, i64* %hden)
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %if.end.10
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.end
  %17 = load i64, i64* %hnum, align 8
  %cmp17 = icmp eq i64 %17, 0
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.21

land.lhs.true.18:                                 ; preds = %if.end.16
  %18 = load i64, i64* %hden, align 8
  %cmp19 = icmp eq i64 %18, 0
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %land.lhs.true.18
  %19 = load i64*, i64** %hrem.addr, align 8
  store i64 0, i64* %19, align 8
  %20 = load i64*, i64** %hquo.addr, align 8
  store i64 0, i64* %20, align 8
  %21 = load i64, i64* %lnum, align 8
  %22 = load i64, i64* %lden, align 8
  %div = udiv i64 %21, %22
  %23 = load i64*, i64** %lquo.addr, align 8
  store i64 %div, i64* %23, align 8
  br label %finish_up

if.end.21:                                        ; preds = %land.lhs.true.18, %if.end.16
  %24 = load i64, i64* %hnum, align 8
  %cmp22 = icmp eq i64 %24, 0
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.21
  %25 = load i64*, i64** %lquo.addr, align 8
  store i64 0, i64* %25, align 8
  %26 = load i64*, i64** %hquo.addr, align 8
  store i64 0, i64* %26, align 8
  %27 = load i64, i64* %hnum, align 8
  %28 = load i64*, i64** %hrem.addr, align 8
  store i64 %27, i64* %28, align 8
  %29 = load i64, i64* %lnum, align 8
  %30 = load i64*, i64** %lrem.addr, align 8
  store i64 %29, i64* %30, align 8
  br label %finish_up

if.end.24:                                        ; preds = %if.end.21
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %quo, i32 0, i32 0
  %31 = bitcast i64* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 32, i32 1, i1 false)
  %arraydecay25 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i32 0
  %32 = bitcast i64* %arraydecay25 to i8*
  call void @llvm.memset.p0i8.i64(i8* %32, i8 0, i64 40, i32 1, i1 false)
  %arraydecay26 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i32 0
  %33 = bitcast i64* %arraydecay26 to i8*
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 32, i32 1, i1 false)
  %arraydecay27 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i32 0
  %34 = load i64, i64* %lnum, align 8
  %35 = load i64, i64* %hnum, align 8
  call void @encode(i64* %arraydecay27, i64 %34, i64 %35)
  %arraydecay28 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i32 0
  %36 = load i64, i64* %lden, align 8
  %37 = load i64, i64* %hden, align 8
  call void @encode(i64* %arraydecay28, i64 %36, i64 %37)
  %38 = load i64, i64* %hden, align 8
  %cmp29 = icmp eq i64 %38, 0
  br i1 %cmp29, label %land.lhs.true.30, label %if.else

land.lhs.true.30:                                 ; preds = %if.end.24
  %39 = load i64, i64* %lden, align 8
  %cmp31 = icmp ult i64 %39, 4294967296
  br i1 %cmp31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %land.lhs.true.30
  store i32 3, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.32
  %40 = load i32, i32* %i, align 4
  %cmp33 = icmp sge i32 %40, 0
  br i1 %cmp33, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %i, align 4
  %idxprom = sext i32 %41 to i64
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom
  %42 = load i64, i64* %arrayidx, align 8
  %43 = load i64, i64* %carry, align 8
  %mul = mul i64 %43, 4294967296
  %add = add i64 %42, %mul
  store i64 %add, i64* %work, align 8
  %44 = load i64, i64* %work, align 8
  %45 = load i64, i64* %lden, align 8
  %div34 = udiv i64 %44, %45
  %46 = load i32, i32* %i, align 4
  %idxprom35 = sext i32 %46 to i64
  %arrayidx36 = getelementptr inbounds [4 x i64], [4 x i64]* %quo, i32 0, i64 %idxprom35
  store i64 %div34, i64* %arrayidx36, align 8
  %47 = load i64, i64* %work, align 8
  %48 = load i64, i64* %lden, align 8
  %rem = urem i64 %47, %48
  store i64 %rem, i64* %carry, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %i, align 4
  %dec = add nsw i32 %49, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.186

if.else:                                          ; preds = %land.lhs.true.30, %if.end.24
  store i32 3, i32* %i, align 4
  br label %for.cond.37

for.cond.37:                                      ; preds = %for.inc.43, %if.else
  %50 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %50 to i64
  %arrayidx39 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom38
  %51 = load i64, i64* %arrayidx39, align 8
  %cmp40 = icmp ne i64 %51, 0
  br i1 %cmp40, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %for.cond.37
  %52 = load i32, i32* %i, align 4
  store i32 %52, i32* %den_hi_sig, align 4
  br label %for.end.45

if.end.42:                                        ; preds = %for.cond.37
  br label %for.inc.43

for.inc.43:                                       ; preds = %if.end.42
  %53 = load i32, i32* %i, align 4
  %dec44 = add nsw i32 %53, -1
  store i32 %dec44, i32* %i, align 4
  br label %for.cond.37

for.end.45:                                       ; preds = %if.then.41
  %54 = load i32, i32* %den_hi_sig, align 4
  %idxprom46 = sext i32 %54 to i64
  %arrayidx47 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom46
  %55 = load i64, i64* %arrayidx47, align 8
  %add48 = add nsw i64 %55, 1
  %div49 = udiv i64 4294967296, %add48
  store i64 %div49, i64* %scale, align 8
  %56 = load i64, i64* %scale, align 8
  %cmp50 = icmp ugt i64 %56, 1
  br i1 %cmp50, label %if.then.51, label %if.end.84

if.then.51:                                       ; preds = %for.end.45
  store i64 0, i64* %carry, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.52

for.cond.52:                                      ; preds = %for.inc.62, %if.then.51
  %57 = load i32, i32* %i, align 4
  %cmp53 = icmp sle i32 %57, 3
  br i1 %cmp53, label %for.body.54, label %for.end.63

for.body.54:                                      ; preds = %for.cond.52
  %58 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %58 to i64
  %arrayidx56 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom55
  %59 = load i64, i64* %arrayidx56, align 8
  %60 = load i64, i64* %scale, align 8
  %mul57 = mul i64 %59, %60
  %61 = load i64, i64* %carry, align 8
  %add58 = add i64 %mul57, %61
  store i64 %add58, i64* %work, align 8
  %62 = load i64, i64* %work, align 8
  %and59 = and i64 %62, 4294967295
  %63 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %63 to i64
  %arrayidx61 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom60
  store i64 %and59, i64* %arrayidx61, align 8
  %64 = load i64, i64* %work, align 8
  %shr = lshr i64 %64, 32
  store i64 %shr, i64* %carry, align 8
  br label %for.inc.62

for.inc.62:                                       ; preds = %for.body.54
  %65 = load i32, i32* %i, align 4
  %inc = add nsw i32 %65, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.52

for.end.63:                                       ; preds = %for.cond.52
  %66 = load i64, i64* %carry, align 8
  %arrayidx64 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 4
  store i64 %66, i64* %arrayidx64, align 8
  store i64 0, i64* %carry, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.65

for.cond.65:                                      ; preds = %for.inc.81, %for.end.63
  %67 = load i32, i32* %i, align 4
  %cmp66 = icmp sle i32 %67, 3
  br i1 %cmp66, label %for.body.67, label %for.end.83

for.body.67:                                      ; preds = %for.cond.65
  %68 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %68 to i64
  %arrayidx69 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom68
  %69 = load i64, i64* %arrayidx69, align 8
  %70 = load i64, i64* %scale, align 8
  %mul70 = mul i64 %69, %70
  %71 = load i64, i64* %carry, align 8
  %add71 = add i64 %mul70, %71
  store i64 %add71, i64* %work, align 8
  %72 = load i64, i64* %work, align 8
  %and72 = and i64 %72, 4294967295
  %73 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %73 to i64
  %arrayidx74 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom73
  store i64 %and72, i64* %arrayidx74, align 8
  %74 = load i64, i64* %work, align 8
  %shr75 = lshr i64 %74, 32
  store i64 %shr75, i64* %carry, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %75 to i64
  %arrayidx77 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom76
  %76 = load i64, i64* %arrayidx77, align 8
  %cmp78 = icmp ne i64 %76, 0
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %for.body.67
  %77 = load i32, i32* %i, align 4
  store i32 %77, i32* %den_hi_sig, align 4
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.79, %for.body.67
  br label %for.inc.81

for.inc.81:                                       ; preds = %if.end.80
  %78 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %78, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond.65

for.end.83:                                       ; preds = %for.cond.65
  br label %if.end.84

if.end.84:                                        ; preds = %for.end.83, %for.end.45
  store i32 4, i32* %num_hi_sig, align 4
  %79 = load i32, i32* %num_hi_sig, align 4
  %80 = load i32, i32* %den_hi_sig, align 4
  %sub = sub nsw i32 %79, %80
  %sub85 = sub nsw i32 %sub, 1
  store i32 %sub85, i32* %i, align 4
  br label %for.cond.86

for.cond.86:                                      ; preds = %for.inc.183, %if.end.84
  %81 = load i32, i32* %i, align 4
  %cmp87 = icmp sge i32 %81, 0
  br i1 %cmp87, label %for.body.88, label %for.end.185

for.body.88:                                      ; preds = %for.cond.86
  %82 = load i32, i32* %i, align 4
  %83 = load i32, i32* %den_hi_sig, align 4
  %add89 = add nsw i32 %82, %83
  %add90 = add nsw i32 %add89, 1
  store i32 %add90, i32* %num_hi_sig, align 4
  %84 = load i32, i32* %num_hi_sig, align 4
  %idxprom91 = sext i32 %84 to i64
  %arrayidx92 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom91
  %85 = load i64, i64* %arrayidx92, align 8
  %mul93 = mul i64 %85, 4294967296
  %86 = load i32, i32* %num_hi_sig, align 4
  %sub94 = sub nsw i32 %86, 1
  %idxprom95 = sext i32 %sub94 to i64
  %arrayidx96 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom95
  %87 = load i64, i64* %arrayidx96, align 8
  %add97 = add i64 %mul93, %87
  store i64 %add97, i64* %work, align 8
  %88 = load i32, i32* %num_hi_sig, align 4
  %idxprom98 = sext i32 %88 to i64
  %arrayidx99 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom98
  %89 = load i64, i64* %arrayidx99, align 8
  %90 = load i32, i32* %den_hi_sig, align 4
  %idxprom100 = sext i32 %90 to i64
  %arrayidx101 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom100
  %91 = load i64, i64* %arrayidx101, align 8
  %cmp102 = icmp ne i64 %89, %91
  br i1 %cmp102, label %if.then.103, label %if.else.107

if.then.103:                                      ; preds = %for.body.88
  %92 = load i64, i64* %work, align 8
  %93 = load i32, i32* %den_hi_sig, align 4
  %idxprom104 = sext i32 %93 to i64
  %arrayidx105 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom104
  %94 = load i64, i64* %arrayidx105, align 8
  %div106 = udiv i64 %92, %94
  store i64 %div106, i64* %quo_est, align 8
  br label %if.end.108

if.else.107:                                      ; preds = %for.body.88
  store i64 4294967295, i64* %quo_est, align 8
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.107, %if.then.103
  %95 = load i64, i64* %work, align 8
  %96 = load i64, i64* %quo_est, align 8
  %97 = load i32, i32* %den_hi_sig, align 4
  %idxprom109 = sext i32 %97 to i64
  %arrayidx110 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom109
  %98 = load i64, i64* %arrayidx110, align 8
  %mul111 = mul i64 %96, %98
  %sub112 = sub i64 %95, %mul111
  store i64 %sub112, i64* %tmp, align 8
  %99 = load i64, i64* %tmp, align 8
  %cmp113 = icmp ult i64 %99, 4294967296
  br i1 %cmp113, label %land.lhs.true.114, label %if.end.127

land.lhs.true.114:                                ; preds = %if.end.108
  %100 = load i32, i32* %den_hi_sig, align 4
  %sub115 = sub nsw i32 %100, 1
  %idxprom116 = sext i32 %sub115 to i64
  %arrayidx117 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom116
  %101 = load i64, i64* %arrayidx117, align 8
  %102 = load i64, i64* %quo_est, align 8
  %mul118 = mul i64 %101, %102
  %103 = load i64, i64* %tmp, align 8
  %mul119 = mul i64 %103, 4294967296
  %104 = load i32, i32* %num_hi_sig, align 4
  %sub120 = sub nsw i32 %104, 2
  %idxprom121 = sext i32 %sub120 to i64
  %arrayidx122 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom121
  %105 = load i64, i64* %arrayidx122, align 8
  %add123 = add i64 %mul119, %105
  %cmp124 = icmp ugt i64 %mul118, %add123
  br i1 %cmp124, label %if.then.125, label %if.end.127

if.then.125:                                      ; preds = %land.lhs.true.114
  %106 = load i64, i64* %quo_est, align 8
  %dec126 = add i64 %106, -1
  store i64 %dec126, i64* %quo_est, align 8
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.125, %land.lhs.true.114, %if.end.108
  store i64 0, i64* %carry, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.128

for.cond.128:                                     ; preds = %for.inc.149, %if.end.127
  %107 = load i32, i32* %j, align 4
  %108 = load i32, i32* %den_hi_sig, align 4
  %cmp129 = icmp sle i32 %107, %108
  br i1 %cmp129, label %for.body.130, label %for.end.151

for.body.130:                                     ; preds = %for.cond.128
  %109 = load i64, i64* %quo_est, align 8
  %110 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %110 to i64
  %arrayidx132 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom131
  %111 = load i64, i64* %arrayidx132, align 8
  %mul133 = mul i64 %109, %111
  %112 = load i64, i64* %carry, align 8
  %add134 = add i64 %mul133, %112
  store i64 %add134, i64* %work, align 8
  %113 = load i64, i64* %work, align 8
  %shr135 = lshr i64 %113, 32
  store i64 %shr135, i64* %carry, align 8
  %114 = load i32, i32* %i, align 4
  %115 = load i32, i32* %j, align 4
  %add136 = add nsw i32 %114, %115
  %idxprom137 = sext i32 %add136 to i64
  %arrayidx138 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom137
  %116 = load i64, i64* %arrayidx138, align 8
  %117 = load i64, i64* %work, align 8
  %and139 = and i64 %117, 4294967295
  %sub140 = sub i64 %116, %and139
  store i64 %sub140, i64* %work, align 8
  %118 = load i64, i64* %work, align 8
  %and141 = and i64 %118, 4294967295
  %119 = load i32, i32* %i, align 4
  %120 = load i32, i32* %j, align 4
  %add142 = add nsw i32 %119, %120
  %idxprom143 = sext i32 %add142 to i64
  %arrayidx144 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom143
  store i64 %and141, i64* %arrayidx144, align 8
  %121 = load i64, i64* %work, align 8
  %shr145 = lshr i64 %121, 32
  %cmp146 = icmp ne i64 %shr145, 0
  %conv = zext i1 %cmp146 to i32
  %conv147 = sext i32 %conv to i64
  %122 = load i64, i64* %carry, align 8
  %add148 = add i64 %122, %conv147
  store i64 %add148, i64* %carry, align 8
  br label %for.inc.149

for.inc.149:                                      ; preds = %for.body.130
  %123 = load i32, i32* %j, align 4
  %inc150 = add nsw i32 %123, 1
  store i32 %inc150, i32* %j, align 4
  br label %for.cond.128

for.end.151:                                      ; preds = %for.cond.128
  %124 = load i32, i32* %num_hi_sig, align 4
  %idxprom152 = sext i32 %124 to i64
  %arrayidx153 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom152
  %125 = load i64, i64* %arrayidx153, align 8
  %126 = load i64, i64* %carry, align 8
  %cmp154 = icmp ult i64 %125, %126
  br i1 %cmp154, label %if.then.156, label %if.end.180

if.then.156:                                      ; preds = %for.end.151
  %127 = load i64, i64* %quo_est, align 8
  %dec157 = add i64 %127, -1
  store i64 %dec157, i64* %quo_est, align 8
  store i64 0, i64* %carry, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.158

for.cond.158:                                     ; preds = %for.inc.174, %if.then.156
  %128 = load i32, i32* %j, align 4
  %129 = load i32, i32* %den_hi_sig, align 4
  %cmp159 = icmp sle i32 %128, %129
  br i1 %cmp159, label %for.body.161, label %for.end.176

for.body.161:                                     ; preds = %for.cond.158
  %130 = load i32, i32* %i, align 4
  %131 = load i32, i32* %j, align 4
  %add162 = add nsw i32 %130, %131
  %idxprom163 = sext i32 %add162 to i64
  %arrayidx164 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom163
  %132 = load i64, i64* %arrayidx164, align 8
  %133 = load i32, i32* %j, align 4
  %idxprom165 = sext i32 %133 to i64
  %arrayidx166 = getelementptr inbounds [4 x i64], [4 x i64]* %den, i32 0, i64 %idxprom165
  %134 = load i64, i64* %arrayidx166, align 8
  %add167 = add nsw i64 %132, %134
  %135 = load i64, i64* %carry, align 8
  %add168 = add i64 %add167, %135
  store i64 %add168, i64* %work, align 8
  %136 = load i64, i64* %work, align 8
  %shr169 = lshr i64 %136, 32
  store i64 %shr169, i64* %carry, align 8
  %137 = load i64, i64* %work, align 8
  %and170 = and i64 %137, 4294967295
  %138 = load i32, i32* %i, align 4
  %139 = load i32, i32* %j, align 4
  %add171 = add nsw i32 %138, %139
  %idxprom172 = sext i32 %add171 to i64
  %arrayidx173 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom172
  store i64 %and170, i64* %arrayidx173, align 8
  br label %for.inc.174

for.inc.174:                                      ; preds = %for.body.161
  %140 = load i32, i32* %j, align 4
  %inc175 = add nsw i32 %140, 1
  store i32 %inc175, i32* %j, align 4
  br label %for.cond.158

for.end.176:                                      ; preds = %for.cond.158
  %141 = load i64, i64* %carry, align 8
  %142 = load i32, i32* %num_hi_sig, align 4
  %idxprom177 = sext i32 %142 to i64
  %arrayidx178 = getelementptr inbounds [5 x i64], [5 x i64]* %num, i32 0, i64 %idxprom177
  %143 = load i64, i64* %arrayidx178, align 8
  %add179 = add i64 %143, %141
  store i64 %add179, i64* %arrayidx178, align 8
  br label %if.end.180

if.end.180:                                       ; preds = %for.end.176, %for.end.151
  %144 = load i64, i64* %quo_est, align 8
  %145 = load i32, i32* %i, align 4
  %idxprom181 = sext i32 %145 to i64
  %arrayidx182 = getelementptr inbounds [4 x i64], [4 x i64]* %quo, i32 0, i64 %idxprom181
  store i64 %144, i64* %arrayidx182, align 8
  br label %for.inc.183

for.inc.183:                                      ; preds = %if.end.180
  %146 = load i32, i32* %i, align 4
  %dec184 = add nsw i32 %146, -1
  store i32 %dec184, i32* %i, align 4
  br label %for.cond.86

for.end.185:                                      ; preds = %for.cond.86
  br label %if.end.186

if.end.186:                                       ; preds = %for.end.185, %for.end
  %arraydecay187 = getelementptr inbounds [4 x i64], [4 x i64]* %quo, i32 0, i32 0
  %147 = load i64*, i64** %lquo.addr, align 8
  %148 = load i64*, i64** %hquo.addr, align 8
  call void @decode(i64* %arraydecay187, i64* %147, i64* %148)
  br label %finish_up

finish_up:                                        ; preds = %if.end.186, %if.then.23, %if.then.20
  %149 = load i32, i32* %quo_neg, align 4
  %tobool188 = icmp ne i32 %149, 0
  br i1 %tobool188, label %if.then.189, label %if.end.191

if.then.189:                                      ; preds = %finish_up
  %150 = load i64*, i64** %lquo.addr, align 8
  %151 = load i64, i64* %150, align 8
  %152 = load i64*, i64** %hquo.addr, align 8
  %153 = load i64, i64* %152, align 8
  %154 = load i64*, i64** %lquo.addr, align 8
  %155 = load i64*, i64** %hquo.addr, align 8
  %call190 = call i32 @neg_double(i64 %151, i64 %153, i64* %154, i64* %155)
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.189, %finish_up
  %156 = load i64*, i64** %lquo.addr, align 8
  %157 = load i64, i64* %156, align 8
  %158 = load i64*, i64** %hquo.addr, align 8
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %lden_orig.addr, align 8
  %161 = load i64, i64* %hden_orig.addr, align 8
  %162 = load i64*, i64** %lrem.addr, align 8
  %163 = load i64*, i64** %hrem.addr, align 8
  %call192 = call i32 @mul_double(i64 %157, i64 %159, i64 %160, i64 %161, i64* %162, i64* %163)
  %164 = load i64*, i64** %lrem.addr, align 8
  %165 = load i64, i64* %164, align 8
  %166 = load i64*, i64** %hrem.addr, align 8
  %167 = load i64, i64* %166, align 8
  %168 = load i64*, i64** %lrem.addr, align 8
  %169 = load i64*, i64** %hrem.addr, align 8
  %call193 = call i32 @neg_double(i64 %165, i64 %167, i64* %168, i64* %169)
  %170 = load i64, i64* %lnum_orig.addr, align 8
  %171 = load i64, i64* %hnum_orig.addr, align 8
  %172 = load i64*, i64** %lrem.addr, align 8
  %173 = load i64, i64* %172, align 8
  %174 = load i64*, i64** %hrem.addr, align 8
  %175 = load i64, i64* %174, align 8
  %176 = load i64*, i64** %lrem.addr, align 8
  %177 = load i64*, i64** %hrem.addr, align 8
  %call194 = call i32 @add_double(i64 %170, i64 %171, i64 %173, i64 %175, i64* %176, i64* %177)
  %178 = load i32, i32* %code.addr, align 4
  switch i32 %178, label %sw.default [
    i32 62, label %sw.bb
    i32 66, label %sw.bb
    i32 71, label %sw.bb
    i32 64, label %sw.bb.195
    i32 68, label %sw.bb.195
    i32 63, label %sw.bb.206
    i32 67, label %sw.bb.206
    i32 65, label %sw.bb.218
    i32 69, label %sw.bb.218
  ]

sw.bb:                                            ; preds = %if.end.191, %if.end.191, %if.end.191
  %179 = load i32, i32* %overflow, align 4
  store i32 %179, i32* %retval
  br label %return

sw.bb.195:                                        ; preds = %if.end.191, %if.end.191
  %180 = load i32, i32* %quo_neg, align 4
  %tobool196 = icmp ne i32 %180, 0
  br i1 %tobool196, label %land.lhs.true.197, label %if.else.204

land.lhs.true.197:                                ; preds = %sw.bb.195
  %181 = load i64*, i64** %lrem.addr, align 8
  %182 = load i64, i64* %181, align 8
  %cmp198 = icmp ne i64 %182, 0
  br i1 %cmp198, label %if.then.202, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.197
  %183 = load i64*, i64** %hrem.addr, align 8
  %184 = load i64, i64* %183, align 8
  %cmp200 = icmp ne i64 %184, 0
  br i1 %cmp200, label %if.then.202, label %if.else.204

if.then.202:                                      ; preds = %lor.lhs.false, %land.lhs.true.197
  %185 = load i64*, i64** %lquo.addr, align 8
  %186 = load i64, i64* %185, align 8
  %187 = load i64*, i64** %hquo.addr, align 8
  %188 = load i64, i64* %187, align 8
  %189 = load i64*, i64** %lquo.addr, align 8
  %190 = load i64*, i64** %hquo.addr, align 8
  %call203 = call i32 @add_double(i64 %186, i64 %188, i64 -1, i64 -1, i64* %189, i64* %190)
  br label %if.end.205

if.else.204:                                      ; preds = %lor.lhs.false, %sw.bb.195
  %191 = load i32, i32* %overflow, align 4
  store i32 %191, i32* %retval
  br label %return

if.end.205:                                       ; preds = %if.then.202
  br label %sw.epilog

sw.bb.206:                                        ; preds = %if.end.191, %if.end.191
  %192 = load i32, i32* %quo_neg, align 4
  %tobool207 = icmp ne i32 %192, 0
  br i1 %tobool207, label %if.else.216, label %land.lhs.true.208

land.lhs.true.208:                                ; preds = %sw.bb.206
  %193 = load i64*, i64** %lrem.addr, align 8
  %194 = load i64, i64* %193, align 8
  %cmp209 = icmp ne i64 %194, 0
  br i1 %cmp209, label %if.then.214, label %lor.lhs.false.211

lor.lhs.false.211:                                ; preds = %land.lhs.true.208
  %195 = load i64*, i64** %hrem.addr, align 8
  %196 = load i64, i64* %195, align 8
  %cmp212 = icmp ne i64 %196, 0
  br i1 %cmp212, label %if.then.214, label %if.else.216

if.then.214:                                      ; preds = %lor.lhs.false.211, %land.lhs.true.208
  %197 = load i64*, i64** %lquo.addr, align 8
  %198 = load i64, i64* %197, align 8
  %199 = load i64*, i64** %hquo.addr, align 8
  %200 = load i64, i64* %199, align 8
  %201 = load i64*, i64** %lquo.addr, align 8
  %202 = load i64*, i64** %hquo.addr, align 8
  %call215 = call i32 @add_double(i64 %198, i64 %200, i64 1, i64 0, i64* %201, i64* %202)
  br label %if.end.217

if.else.216:                                      ; preds = %lor.lhs.false.211, %sw.bb.206
  %203 = load i32, i32* %overflow, align 4
  store i32 %203, i32* %retval
  br label %return

if.end.217:                                       ; preds = %if.then.214
  br label %sw.epilog

sw.bb.218:                                        ; preds = %if.end.191, %if.end.191
  %204 = load i64*, i64** %lrem.addr, align 8
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %labs_rem, align 8
  %206 = load i64*, i64** %hrem.addr, align 8
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %habs_rem, align 8
  %208 = load i64, i64* %lden, align 8
  store i64 %208, i64* %labs_den, align 8
  %209 = load i64, i64* %hden, align 8
  store i64 %209, i64* %habs_den, align 8
  %210 = load i64*, i64** %hrem.addr, align 8
  %211 = load i64, i64* %210, align 8
  %cmp225 = icmp slt i64 %211, 0
  br i1 %cmp225, label %if.then.227, label %if.end.229

if.then.227:                                      ; preds = %sw.bb.218
  %212 = load i64*, i64** %lrem.addr, align 8
  %213 = load i64, i64* %212, align 8
  %214 = load i64*, i64** %hrem.addr, align 8
  %215 = load i64, i64* %214, align 8
  %call228 = call i32 @neg_double(i64 %213, i64 %215, i64* %labs_rem, i64* %habs_rem)
  br label %if.end.229

if.end.229:                                       ; preds = %if.then.227, %sw.bb.218
  %216 = load i64, i64* %hden, align 8
  %cmp230 = icmp slt i64 %216, 0
  br i1 %cmp230, label %if.then.232, label %if.end.234

if.then.232:                                      ; preds = %if.end.229
  %217 = load i64, i64* %lden, align 8
  %218 = load i64, i64* %hden, align 8
  %call233 = call i32 @neg_double(i64 %217, i64 %218, i64* %labs_den, i64* %habs_den)
  br label %if.end.234

if.end.234:                                       ; preds = %if.then.232, %if.end.229
  %219 = load i64, i64* %labs_rem, align 8
  %220 = load i64, i64* %habs_rem, align 8
  %call235 = call i32 @mul_double(i64 2, i64 0, i64 %219, i64 %220, i64* %ltwice, i64* %htwice)
  %221 = load i64, i64* %habs_den, align 8
  %222 = load i64, i64* %htwice, align 8
  %cmp236 = icmp ult i64 %221, %222
  br i1 %cmp236, label %if.then.244, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %if.end.234
  %223 = load i64, i64* %habs_den, align 8
  %224 = load i64, i64* %htwice, align 8
  %cmp239 = icmp eq i64 %223, %224
  br i1 %cmp239, label %land.lhs.true.241, label %if.else.252

land.lhs.true.241:                                ; preds = %lor.lhs.false.238
  %225 = load i64, i64* %labs_den, align 8
  %226 = load i64, i64* %ltwice, align 8
  %cmp242 = icmp ult i64 %225, %226
  br i1 %cmp242, label %if.then.244, label %if.else.252

if.then.244:                                      ; preds = %land.lhs.true.241, %if.end.234
  %227 = load i64*, i64** %hquo.addr, align 8
  %228 = load i64, i64* %227, align 8
  %cmp245 = icmp slt i64 %228, 0
  br i1 %cmp245, label %if.then.247, label %if.else.249

if.then.247:                                      ; preds = %if.then.244
  %229 = load i64*, i64** %lquo.addr, align 8
  %230 = load i64, i64* %229, align 8
  %231 = load i64*, i64** %hquo.addr, align 8
  %232 = load i64, i64* %231, align 8
  %233 = load i64*, i64** %lquo.addr, align 8
  %234 = load i64*, i64** %hquo.addr, align 8
  %call248 = call i32 @add_double(i64 %230, i64 %232, i64 -1, i64 -1, i64* %233, i64* %234)
  br label %if.end.251

if.else.249:                                      ; preds = %if.then.244
  %235 = load i64*, i64** %lquo.addr, align 8
  %236 = load i64, i64* %235, align 8
  %237 = load i64*, i64** %hquo.addr, align 8
  %238 = load i64, i64* %237, align 8
  %239 = load i64*, i64** %lquo.addr, align 8
  %240 = load i64*, i64** %hquo.addr, align 8
  %call250 = call i32 @add_double(i64 %236, i64 %238, i64 1, i64 0, i64* %239, i64* %240)
  br label %if.end.251

if.end.251:                                       ; preds = %if.else.249, %if.then.247
  br label %if.end.253

if.else.252:                                      ; preds = %land.lhs.true.241, %lor.lhs.false.238
  %241 = load i32, i32* %overflow, align 4
  store i32 %241, i32* %retval
  br label %return

if.end.253:                                       ; preds = %if.end.251
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.191
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 823, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.div_and_round_double, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %if.end.253, %if.end.217, %if.end.205
  %242 = load i64*, i64** %lquo.addr, align 8
  %243 = load i64, i64* %242, align 8
  %244 = load i64*, i64** %hquo.addr, align 8
  %245 = load i64, i64* %244, align 8
  %246 = load i64, i64* %lden_orig.addr, align 8
  %247 = load i64, i64* %hden_orig.addr, align 8
  %248 = load i64*, i64** %lrem.addr, align 8
  %249 = load i64*, i64** %hrem.addr, align 8
  %call254 = call i32 @mul_double(i64 %243, i64 %245, i64 %246, i64 %247, i64* %248, i64* %249)
  %250 = load i64*, i64** %lrem.addr, align 8
  %251 = load i64, i64* %250, align 8
  %252 = load i64*, i64** %hrem.addr, align 8
  %253 = load i64, i64* %252, align 8
  %254 = load i64*, i64** %lrem.addr, align 8
  %255 = load i64*, i64** %hrem.addr, align 8
  %call255 = call i32 @neg_double(i64 %251, i64 %253, i64* %254, i64* %255)
  %256 = load i64, i64* %lnum_orig.addr, align 8
  %257 = load i64, i64* %hnum_orig.addr, align 8
  %258 = load i64*, i64** %lrem.addr, align 8
  %259 = load i64, i64* %258, align 8
  %260 = load i64*, i64** %hrem.addr, align 8
  %261 = load i64, i64* %260, align 8
  %262 = load i64*, i64** %lrem.addr, align 8
  %263 = load i64*, i64** %hrem.addr, align 8
  %call256 = call i32 @add_double(i64 %256, i64 %257, i64 %259, i64 %261, i64* %262, i64* %263)
  %264 = load i32, i32* %overflow, align 4
  store i32 %264, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.else.252, %if.else.216, %if.else.204, %sw.bb
  %265 = load i32, i32* %retval
  ret i32 %265
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_int_wide(i64 %number, i32 %kind) #0 {
entry:
  %number.addr = alloca i64, align 8
  %kind.addr = alloca i32, align 4
  store i64 %number, i64* %number.addr, align 8
  store i32 %kind, i32* %kind.addr, align 4
  %0 = load i64, i64* %number.addr, align 8
  %1 = load i32, i32* %kind.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 %idxprom
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call = call %union.tree_node* @size_int_type_wide(i64 %0, %union.tree_node* %2)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_int_type_wide(i64 %number, %union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %number.addr = alloca i64, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %slot = alloca i8**, align 8
  %t = alloca %union.tree_node*, align 8
  store i64 %number, i64* %number.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %struct.htab*, %struct.htab** @size_int_type_wide.size_htab, align 8
  %cmp = icmp eq %struct.htab* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call %struct.htab* @htab_create(i64 1024, i32 (i8*)* @size_htab_hash, i32 (i8*, i8*)* @size_htab_eq, void (i8*)* null)
  store %struct.htab* %call, %struct.htab** @size_int_type_wide.size_htab, align 8
  %1 = load %struct.htab*, %struct.htab** @size_int_type_wide.size_htab, align 8
  %2 = bitcast %struct.htab* %1 to i8*
  call void @ggc_add_deletable_htab(i8* %2, i32 (i8*)* null, void (i8*)* null)
  %call1 = call %union.tree_node* @make_node(i32 25)
  store %union.tree_node* %call1, %union.tree_node** @size_int_type_wide.new_const, align 8
  call void @ggc_add_tree_root(%union.tree_node** @size_int_type_wide.new_const, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %number.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %int_cst = bitcast %union.tree_node* %4 to %struct.tree_int_cst*
  %int_cst2 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2, i32 0, i32 0
  store i64 %3, i64* %low, align 8
  %5 = load i64, i64* %number.addr, align 8
  %cmp3 = icmp slt i64 %5, 0
  %cond = select i1 %cmp3, i32 -1, i32 0
  %conv = sext i32 %cond to i64
  %6 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %int_cst4 = bitcast %union.tree_node* %6 to %struct.tree_int_cst*
  %int_cst5 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst4, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5, i32 0, i32 1
  store i64 %conv, i64* %high, align 8
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  store %union.tree_node* %7, %union.tree_node** %type6, align 8
  %9 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %call7 = call i32 @force_fit_type(%union.tree_node* %9, i32 0)
  %10 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %common8 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load = load i32, i32* %static_flag, align 8
  %bf.value = and i32 %call7, 1
  %bf.shl = shl i32 %bf.value, 18
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %static_flag, align 8
  %11 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %common9 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load10 = load i32, i32* %public_flag, align 8
  %bf.value11 = and i32 %bf.value, 1
  %bf.shl12 = shl i32 %bf.value11, 19
  %bf.clear13 = and i32 %bf.load10, -524289
  %bf.set14 = or i32 %bf.clear13, %bf.shl12
  store i32 %bf.set14, i32* %public_flag, align 8
  %12 = load %struct.htab*, %struct.htab** @size_int_type_wide.size_htab, align 8
  %13 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %14 = bitcast %union.tree_node* %13 to i8*
  %call15 = call i8** @htab_find_slot(%struct.htab* %12, i8* %14, i32 1)
  store i8** %call15, i8*** %slot, align 8
  %15 = load i8**, i8*** %slot, align 8
  %16 = load i8*, i8** %15, align 8
  %cmp16 = icmp eq i8* %16, null
  br i1 %cmp16, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.end
  %17 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  store %union.tree_node* %17, %union.tree_node** %t, align 8
  %18 = load %union.tree_node*, %union.tree_node** @size_int_type_wide.new_const, align 8
  %19 = bitcast %union.tree_node* %18 to i8*
  %20 = load i8**, i8*** %slot, align 8
  store i8* %19, i8** %20, align 8
  %call19 = call %union.tree_node* @make_node(i32 25)
  store %union.tree_node* %call19, %union.tree_node** @size_int_type_wide.new_const, align 8
  %21 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %21, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %if.end
  %22 = load i8**, i8*** %slot, align 8
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast i8* %23 to %union.tree_node*
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.18
  %25 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %25
}

declare %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) #3

; Function Attrs: nounwind uwtable
define internal i32 @size_htab_hash(i8* %x) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %t = alloca %union.tree_node*, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load i8*, i8** %x.addr, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  store %union.tree_node* %1, %union.tree_node** %t, align 8
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8
  %int_cst = bitcast %union.tree_node* %2 to %struct.tree_int_cst*
  %int_cst1 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1, i32 0, i32 1
  %3 = load i64, i64* %high, align 8
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8
  %int_cst2 = bitcast %union.tree_node* %4 to %struct.tree_int_cst*
  %int_cst3 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3, i32 0, i32 0
  %5 = load i64, i64* %low, align 8
  %xor = xor i64 %3, %5
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %8 = ptrtoint %union.tree_node* %7 to i64
  %shr = ashr i64 %8, 3
  %conv = trunc i64 %shr to i32
  %conv4 = zext i32 %conv to i64
  %xor5 = xor i64 %xor, %conv4
  %9 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common6 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %bf.clear = and i32 %bf.lshr, 1
  %shl = shl i32 %bf.clear, 20
  %conv7 = sext i32 %shl to i64
  %xor8 = xor i64 %xor5, %conv7
  %conv9 = trunc i64 %xor8 to i32
  ret i32 %conv9
}

; Function Attrs: nounwind uwtable
define internal i32 @size_htab_eq(i8* %x, i8* %y) #0 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %xt = alloca %union.tree_node*, align 8
  %yt = alloca %union.tree_node*, align 8
  store i8* %x, i8** %x.addr, align 8
  store i8* %y, i8** %y.addr, align 8
  %0 = load i8*, i8** %x.addr, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  store %union.tree_node* %1, %union.tree_node** %xt, align 8
  %2 = load i8*, i8** %y.addr, align 8
  %3 = bitcast i8* %2 to %union.tree_node*
  store %union.tree_node* %3, %union.tree_node** %yt, align 8
  %4 = load %union.tree_node*, %union.tree_node** %xt, align 8
  %int_cst = bitcast %union.tree_node* %4 to %struct.tree_int_cst*
  %int_cst1 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1, i32 0, i32 1
  %5 = load i64, i64* %high, align 8
  %6 = load %union.tree_node*, %union.tree_node** %yt, align 8
  %int_cst2 = bitcast %union.tree_node* %6 to %struct.tree_int_cst*
  %int_cst3 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2, i32 0, i32 2
  %high4 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3, i32 0, i32 1
  %7 = load i64, i64* %high4, align 8
  %cmp = icmp eq i64 %5, %7
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %8 = load %union.tree_node*, %union.tree_node** %xt, align 8
  %int_cst5 = bitcast %union.tree_node* %8 to %struct.tree_int_cst*
  %int_cst6 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6, i32 0, i32 0
  %9 = load i64, i64* %low, align 8
  %10 = load %union.tree_node*, %union.tree_node** %yt, align 8
  %int_cst7 = bitcast %union.tree_node* %10 to %struct.tree_int_cst*
  %int_cst8 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst7, i32 0, i32 2
  %low9 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst8, i32 0, i32 0
  %11 = load i64, i64* %low9, align 8
  %cmp10 = icmp eq i64 %9, %11
  br i1 %cmp10, label %land.lhs.true.11, label %land.end

land.lhs.true.11:                                 ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** %xt, align 8
  %common = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8
  %14 = load %union.tree_node*, %union.tree_node** %yt, align 8
  %common12 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type13, align 8
  %cmp14 = icmp eq %union.tree_node* %13, %15
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.11
  %16 = load %union.tree_node*, %union.tree_node** %xt, align 8
  %common15 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %bf.clear = and i32 %bf.lshr, 1
  %17 = load %union.tree_node*, %union.tree_node** %yt, align 8
  %common16 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %public_flag17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %public_flag17, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 19
  %bf.clear20 = and i32 %bf.lshr19, 1
  %cmp21 = icmp eq i32 %bf.clear, %bf.clear20
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.11, %land.lhs.true, %entry
  %18 = phi i1 [ false, %land.lhs.true.11 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp21, %land.rhs ]
  %land.ext = zext i1 %18 to i32
  ret i32 %land.ext
}

declare void @ggc_add_deletable_htab(i8*, i32 (i8*)*, void (i8*)*) #3

declare %union.tree_node* @make_node(i32) #3

declare void @ggc_add_tree_root(%union.tree_node**, i32) #3

declare i8** @htab_find_slot(%struct.htab*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_binop(i32 %code, %union.tree_node* %arg0, %union.tree_node* %arg1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %arg0.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 6
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type4 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i32 0, i32 6
  %bf.load5 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr = lshr i32 %bf.load5, 17
  %bf.clear6 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear6, 0
  br i1 %tobool, label %lor.lhs.false.7, label %if.then

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %5 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common8 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type9, align 8
  %cmp10 = icmp ne %union.tree_node* %4, %6
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.7, %lor.lhs.false, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 2014, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.size_binop, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false.7
  %7 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common11 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 25
  br i1 %cmp15, label %land.lhs.true, label %if.end.43

land.lhs.true:                                    ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common16 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 25
  br i1 %cmp20, label %if.then.21, label %if.end.43

if.then.21:                                       ; preds = %land.lhs.true
  %9 = load i32, i32* %code.addr, align 4
  %cmp22 = icmp eq i32 %9, 59
  br i1 %cmp22, label %land.lhs.true.23, label %if.else

land.lhs.true.23:                                 ; preds = %if.then.21
  %10 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %call = call i32 @integer_zerop(%union.tree_node* %10)
  %tobool24 = icmp ne i32 %call, 0
  br i1 %tobool24, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %land.lhs.true.23
  %11 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %11, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.23, %if.then.21
  %12 = load i32, i32* %code.addr, align 4
  %cmp26 = icmp eq i32 %12, 60
  br i1 %cmp26, label %land.lhs.true.29, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %if.else
  %13 = load i32, i32* %code.addr, align 4
  %cmp28 = icmp eq i32 %13, 59
  br i1 %cmp28, label %land.lhs.true.29, label %if.else.33

land.lhs.true.29:                                 ; preds = %lor.lhs.false.27, %if.else
  %14 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call30 = call i32 @integer_zerop(%union.tree_node* %14)
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.then.32, label %if.else.33

if.then.32:                                       ; preds = %land.lhs.true.29
  %15 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %15, %union.tree_node** %retval
  br label %return

if.else.33:                                       ; preds = %land.lhs.true.29, %lor.lhs.false.27
  %16 = load i32, i32* %code.addr, align 4
  %cmp34 = icmp eq i32 %16, 61
  br i1 %cmp34, label %land.lhs.true.35, label %if.end.39

land.lhs.true.35:                                 ; preds = %if.else.33
  %17 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %call36 = call i32 @integer_onep(%union.tree_node* %17)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.lhs.true.35
  %18 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %18, %union.tree_node** %retval
  br label %return

if.end.39:                                        ; preds = %land.lhs.true.35, %if.else.33
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40
  %19 = load i32, i32* %code.addr, align 4
  %20 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %21 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call42 = call %union.tree_node* @int_const_binop(i32 %19, %union.tree_node* %20, %union.tree_node* %21, i32 0)
  store %union.tree_node* %call42, %union.tree_node** %retval
  br label %return

if.end.43:                                        ; preds = %land.lhs.true, %if.end
  %22 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp44 = icmp eq %union.tree_node* %22, %23
  br i1 %cmp44, label %if.then.47, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %if.end.43
  %24 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp46 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %lor.lhs.false.45, %if.end.43
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %26, %union.tree_node** %retval
  br label %return

if.end.48:                                        ; preds = %lor.lhs.false.45
  %27 = load i32, i32* %code.addr, align 4
  %28 = load %union.tree_node*, %union.tree_node** %type, align 8
  %29 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call49 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %27, %union.tree_node* %28, %union.tree_node* %29, %union.tree_node* %30)
  %call50 = call %union.tree_node* @fold(%union.tree_node* %call49)
  store %union.tree_node* %call50, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.48, %if.then.47, %if.end.41, %if.then.38, %if.then.32, %if.then.25
  %31 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %31
}

declare i32 @integer_zerop(%union.tree_node*) #3

declare i32 @integer_onep(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @int_const_binop(i32 %code, %union.tree_node* %arg1, %union.tree_node* %arg2, i32 %notrunc) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %arg1.addr = alloca %union.tree_node*, align 8
  %arg2.addr = alloca %union.tree_node*, align 8
  %notrunc.addr = alloca i32, align 4
  %int1l = alloca i64, align 8
  %int2l = alloca i64, align 8
  %int1h = alloca i64, align 8
  %int2h = alloca i64, align 8
  %low = alloca i64, align 8
  %hi = alloca i64, align 8
  %garbagel = alloca i64, align 8
  %garbageh = alloca i64, align 8
  %t = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %uns = alloca i32, align 4
  %is_sizetype = alloca i32, align 4
  %overflow = alloca i32, align 4
  %no_overflow = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %arg2, %union.tree_node** %arg2.addr, align 8
  store i32 %notrunc, i32* %notrunc.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* %uns, align 4
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp = icmp eq i32 %bf.clear6, 6
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 6
  %bf.load8 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr9 = lshr i32 %bf.load8, 17
  %bf.clear10 = and i32 %bf.lshr9, 1
  %tobool = icmp ne i32 %bf.clear10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  store i32 %land.ext, i32* %is_sizetype, align 4
  store i32 0, i32* %overflow, align 4
  store i32 0, i32* %no_overflow, align 4
  %6 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst = bitcast %union.tree_node* %6 to %struct.tree_int_cst*
  %int_cst11 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low12 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst11, i32 0, i32 0
  %7 = load i64, i64* %low12, align 8
  store i64 %7, i64* %int1l, align 8
  %8 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst13 = bitcast %union.tree_node* %8 to %struct.tree_int_cst*
  %int_cst14 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst13, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst14, i32 0, i32 1
  %9 = load i64, i64* %high, align 8
  store i64 %9, i64* %int1h, align 8
  %10 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %int_cst15 = bitcast %union.tree_node* %10 to %struct.tree_int_cst*
  %int_cst16 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst15, i32 0, i32 2
  %low17 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst16, i32 0, i32 0
  %11 = load i64, i64* %low17, align 8
  store i64 %11, i64* %int2l, align 8
  %12 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %int_cst18 = bitcast %union.tree_node* %12 to %struct.tree_int_cst*
  %int_cst19 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst18, i32 0, i32 2
  %high20 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst19, i32 0, i32 1
  %13 = load i64, i64* %high20, align 8
  store i64 %13, i64* %int2h, align 8
  %14 = load i32, i32* %code.addr, align 4
  switch i32 %14, label %sw.default [
    i32 86, label %sw.bb
    i32 87, label %sw.bb.22
    i32 88, label %sw.bb.24
    i32 89, label %sw.bb.26
    i32 83, label %sw.bb.30
    i32 82, label %sw.bb.31
    i32 85, label %sw.bb.36
    i32 84, label %sw.bb.38
    i32 59, label %sw.bb.43
    i32 60, label %sw.bb.44
    i32 61, label %sw.bb.52
    i32 62, label %sw.bb.54
    i32 64, label %sw.bb.54
    i32 63, label %sw.bb.54
    i32 71, label %sw.bb.54
    i32 65, label %sw.bb.83
    i32 66, label %sw.bb.105
    i32 68, label %sw.bb.105
    i32 67, label %sw.bb.105
    i32 69, label %sw.bb.139
    i32 78, label %sw.bb.141
    i32 79, label %sw.bb.141
  ]

sw.bb:                                            ; preds = %land.end
  %15 = load i64, i64* %int1l, align 8
  %16 = load i64, i64* %int2l, align 8
  %or = or i64 %15, %16
  store i64 %or, i64* %low, align 8
  %17 = load i64, i64* %int1h, align 8
  %18 = load i64, i64* %int2h, align 8
  %or21 = or i64 %17, %18
  store i64 %or21, i64* %hi, align 8
  br label %sw.epilog

sw.bb.22:                                         ; preds = %land.end
  %19 = load i64, i64* %int1l, align 8
  %20 = load i64, i64* %int2l, align 8
  %xor = xor i64 %19, %20
  store i64 %xor, i64* %low, align 8
  %21 = load i64, i64* %int1h, align 8
  %22 = load i64, i64* %int2h, align 8
  %xor23 = xor i64 %21, %22
  store i64 %xor23, i64* %hi, align 8
  br label %sw.epilog

sw.bb.24:                                         ; preds = %land.end
  %23 = load i64, i64* %int1l, align 8
  %24 = load i64, i64* %int2l, align 8
  %and = and i64 %23, %24
  store i64 %and, i64* %low, align 8
  %25 = load i64, i64* %int1h, align 8
  %26 = load i64, i64* %int2h, align 8
  %and25 = and i64 %25, %26
  store i64 %and25, i64* %hi, align 8
  br label %sw.epilog

sw.bb.26:                                         ; preds = %land.end
  %27 = load i64, i64* %int1l, align 8
  %28 = load i64, i64* %int2l, align 8
  %neg = xor i64 %28, -1
  %and27 = and i64 %27, %neg
  store i64 %and27, i64* %low, align 8
  %29 = load i64, i64* %int1h, align 8
  %30 = load i64, i64* %int2h, align 8
  %neg28 = xor i64 %30, -1
  %and29 = and i64 %29, %neg28
  store i64 %and29, i64* %hi, align 8
  br label %sw.epilog

sw.bb.30:                                         ; preds = %land.end
  %31 = load i64, i64* %int2l, align 8
  %sub = sub i64 0, %31
  store i64 %sub, i64* %int2l, align 8
  br label %sw.bb.31

sw.bb.31:                                         ; preds = %land.end, %sw.bb.30
  %32 = load i64, i64* %int1l, align 8
  %33 = load i64, i64* %int1h, align 8
  %34 = load i64, i64* %int2l, align 8
  %35 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type32 = bitcast %union.tree_node* %35 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 6
  %bf.load33 = load i32, i32* %precision, align 4
  %bf.clear34 = and i32 %bf.load33, 511
  %36 = load i32, i32* %uns, align 4
  %tobool35 = icmp ne i32 %36, 0
  %lnot = xor i1 %tobool35, true
  %lnot.ext = zext i1 %lnot to i32
  call void @lshift_double(i64 %32, i64 %33, i64 %34, i32 %bf.clear34, i64* %low, i64* %hi, i32 %lnot.ext)
  store i32 1, i32* %no_overflow, align 4
  br label %sw.epilog

sw.bb.36:                                         ; preds = %land.end
  %37 = load i64, i64* %int2l, align 8
  %sub37 = sub i64 0, %37
  store i64 %sub37, i64* %int2l, align 8
  br label %sw.bb.38

sw.bb.38:                                         ; preds = %land.end, %sw.bb.36
  %38 = load i64, i64* %int1l, align 8
  %39 = load i64, i64* %int1h, align 8
  %40 = load i64, i64* %int2l, align 8
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type39 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %precision40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type39, i32 0, i32 6
  %bf.load41 = load i32, i32* %precision40, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  call void @lrotate_double(i64 %38, i64 %39, i64 %40, i32 %bf.clear42, i64* %low, i64* %hi)
  br label %sw.epilog

sw.bb.43:                                         ; preds = %land.end
  %42 = load i64, i64* %int1l, align 8
  %43 = load i64, i64* %int1h, align 8
  %44 = load i64, i64* %int2l, align 8
  %45 = load i64, i64* %int2h, align 8
  %call = call i32 @add_double(i64 %42, i64 %43, i64 %44, i64 %45, i64* %low, i64* %hi)
  store i32 %call, i32* %overflow, align 4
  br label %sw.epilog

sw.bb.44:                                         ; preds = %land.end
  %46 = load i64, i64* %int2l, align 8
  %47 = load i64, i64* %int2h, align 8
  %call45 = call i32 @neg_double(i64 %46, i64 %47, i64* %low, i64* %hi)
  %48 = load i64, i64* %int1l, align 8
  %49 = load i64, i64* %int1h, align 8
  %50 = load i64, i64* %low, align 8
  %51 = load i64, i64* %hi, align 8
  %call46 = call i32 @add_double(i64 %48, i64 %49, i64 %50, i64 %51, i64* %low, i64* %hi)
  %52 = load i64, i64* %hi, align 8
  %53 = load i64, i64* %int2h, align 8
  %xor47 = xor i64 %52, %53
  %neg48 = xor i64 %xor47, -1
  %54 = load i64, i64* %hi, align 8
  %55 = load i64, i64* %int1h, align 8
  %xor49 = xor i64 %54, %55
  %and50 = and i64 %neg48, %xor49
  %cmp51 = icmp slt i64 %and50, 0
  %conv = zext i1 %cmp51 to i32
  store i32 %conv, i32* %overflow, align 4
  br label %sw.epilog

sw.bb.52:                                         ; preds = %land.end
  %56 = load i64, i64* %int1l, align 8
  %57 = load i64, i64* %int1h, align 8
  %58 = load i64, i64* %int2l, align 8
  %59 = load i64, i64* %int2h, align 8
  %call53 = call i32 @mul_double(i64 %56, i64 %57, i64 %58, i64 %59, i64* %low, i64* %hi)
  store i32 %call53, i32* %overflow, align 4
  br label %sw.epilog

sw.bb.54:                                         ; preds = %land.end, %land.end, %land.end, %land.end
  %60 = load i64, i64* %int2h, align 8
  %cmp55 = icmp eq i64 %60, 0
  br i1 %cmp55, label %land.lhs.true, label %if.end.82

land.lhs.true:                                    ; preds = %sw.bb.54
  %61 = load i64, i64* %int2l, align 8
  %cmp57 = icmp sgt i64 %61, 0
  br i1 %cmp57, label %land.lhs.true.59, label %if.end.82

land.lhs.true.59:                                 ; preds = %land.lhs.true
  %62 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common60 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load61 = load i32, i32* %static_flag, align 8
  %bf.lshr62 = lshr i32 %bf.load61, 18
  %bf.clear63 = and i32 %bf.lshr62, 1
  %tobool64 = icmp ne i32 %bf.clear63, 0
  br i1 %tobool64, label %if.end.82, label %land.lhs.true.65

land.lhs.true.65:                                 ; preds = %land.lhs.true.59
  %63 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common66 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %static_flag67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load68 = load i32, i32* %static_flag67, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 18
  %bf.clear70 = and i32 %bf.lshr69, 1
  %tobool71 = icmp ne i32 %bf.clear70, 0
  br i1 %tobool71, label %if.end.82, label %land.lhs.true.72

land.lhs.true.72:                                 ; preds = %land.lhs.true.65
  %64 = load i64, i64* %int1h, align 8
  %cmp73 = icmp eq i64 %64, 0
  br i1 %cmp73, label %land.lhs.true.75, label %if.end.82

land.lhs.true.75:                                 ; preds = %land.lhs.true.72
  %65 = load i64, i64* %int1l, align 8
  %cmp76 = icmp sge i64 %65, 0
  br i1 %cmp76, label %if.then, label %if.end.82

if.then:                                          ; preds = %land.lhs.true.75
  %66 = load i32, i32* %code.addr, align 4
  %cmp78 = icmp eq i32 %66, 63
  br i1 %cmp78, label %if.then.80, label %if.end

if.then.80:                                       ; preds = %if.then
  %67 = load i64, i64* %int2l, align 8
  %sub81 = sub i64 %67, 1
  %68 = load i64, i64* %int1l, align 8
  %add = add i64 %68, %sub81
  store i64 %add, i64* %int1l, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.80, %if.then
  %69 = load i64, i64* %int1l, align 8
  %70 = load i64, i64* %int2l, align 8
  %div = udiv i64 %69, %70
  store i64 %div, i64* %low, align 8
  store i64 0, i64* %hi, align 8
  br label %sw.epilog

if.end.82:                                        ; preds = %land.lhs.true.75, %land.lhs.true.72, %land.lhs.true.65, %land.lhs.true.59, %land.lhs.true, %sw.bb.54
  br label %sw.bb.83

sw.bb.83:                                         ; preds = %land.end, %if.end.82
  %71 = load i64, i64* %int2h, align 8
  %cmp84 = icmp eq i64 %71, 0
  br i1 %cmp84, label %land.lhs.true.86, label %if.end.90

land.lhs.true.86:                                 ; preds = %sw.bb.83
  %72 = load i64, i64* %int2l, align 8
  %cmp87 = icmp eq i64 %72, 1
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %land.lhs.true.86
  %73 = load i64, i64* %int1l, align 8
  store i64 %73, i64* %low, align 8
  %74 = load i64, i64* %int1h, align 8
  store i64 %74, i64* %hi, align 8
  br label %sw.epilog

if.end.90:                                        ; preds = %land.lhs.true.86, %sw.bb.83
  %75 = load i64, i64* %int1l, align 8
  %76 = load i64, i64* %int2l, align 8
  %cmp91 = icmp eq i64 %75, %76
  br i1 %cmp91, label %land.lhs.true.93, label %if.end.103

land.lhs.true.93:                                 ; preds = %if.end.90
  %77 = load i64, i64* %int1h, align 8
  %78 = load i64, i64* %int2h, align 8
  %cmp94 = icmp eq i64 %77, %78
  br i1 %cmp94, label %land.lhs.true.96, label %if.end.103

land.lhs.true.96:                                 ; preds = %land.lhs.true.93
  %79 = load i64, i64* %int1l, align 8
  %cmp97 = icmp eq i64 %79, 0
  br i1 %cmp97, label %land.lhs.true.99, label %if.then.102

land.lhs.true.99:                                 ; preds = %land.lhs.true.96
  %80 = load i64, i64* %int1h, align 8
  %cmp100 = icmp eq i64 %80, 0
  br i1 %cmp100, label %if.end.103, label %if.then.102

if.then.102:                                      ; preds = %land.lhs.true.99, %land.lhs.true.96
  store i64 1, i64* %low, align 8
  store i64 0, i64* %hi, align 8
  br label %sw.epilog

if.end.103:                                       ; preds = %land.lhs.true.99, %land.lhs.true.93, %if.end.90
  %81 = load i32, i32* %code.addr, align 4
  %82 = load i32, i32* %uns, align 4
  %83 = load i64, i64* %int1l, align 8
  %84 = load i64, i64* %int1h, align 8
  %85 = load i64, i64* %int2l, align 8
  %86 = load i64, i64* %int2h, align 8
  %call104 = call i32 @div_and_round_double(i32 %81, i32 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64* %low, i64* %hi, i64* %garbagel, i64* %garbageh)
  store i32 %call104, i32* %overflow, align 4
  br label %sw.epilog

sw.bb.105:                                        ; preds = %land.end, %land.end, %land.end
  %87 = load i64, i64* %int2h, align 8
  %cmp106 = icmp eq i64 %87, 0
  br i1 %cmp106, label %land.lhs.true.108, label %if.end.138

land.lhs.true.108:                                ; preds = %sw.bb.105
  %88 = load i64, i64* %int2l, align 8
  %cmp109 = icmp sgt i64 %88, 0
  br i1 %cmp109, label %land.lhs.true.111, label %if.end.138

land.lhs.true.111:                                ; preds = %land.lhs.true.108
  %89 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common112 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %static_flag113 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common112, i32 0, i32 2
  %bf.load114 = load i32, i32* %static_flag113, align 8
  %bf.lshr115 = lshr i32 %bf.load114, 18
  %bf.clear116 = and i32 %bf.lshr115, 1
  %tobool117 = icmp ne i32 %bf.clear116, 0
  br i1 %tobool117, label %if.end.138, label %land.lhs.true.118

land.lhs.true.118:                                ; preds = %land.lhs.true.111
  %90 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common119 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %static_flag120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 2
  %bf.load121 = load i32, i32* %static_flag120, align 8
  %bf.lshr122 = lshr i32 %bf.load121, 18
  %bf.clear123 = and i32 %bf.lshr122, 1
  %tobool124 = icmp ne i32 %bf.clear123, 0
  br i1 %tobool124, label %if.end.138, label %land.lhs.true.125

land.lhs.true.125:                                ; preds = %land.lhs.true.118
  %91 = load i64, i64* %int1h, align 8
  %cmp126 = icmp eq i64 %91, 0
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.138

land.lhs.true.128:                                ; preds = %land.lhs.true.125
  %92 = load i64, i64* %int1l, align 8
  %cmp129 = icmp sge i64 %92, 0
  br i1 %cmp129, label %if.then.131, label %if.end.138

if.then.131:                                      ; preds = %land.lhs.true.128
  %93 = load i32, i32* %code.addr, align 4
  %cmp132 = icmp eq i32 %93, 67
  br i1 %cmp132, label %if.then.134, label %if.end.137

if.then.134:                                      ; preds = %if.then.131
  %94 = load i64, i64* %int2l, align 8
  %sub135 = sub i64 %94, 1
  %95 = load i64, i64* %int1l, align 8
  %add136 = add i64 %95, %sub135
  store i64 %add136, i64* %int1l, align 8
  br label %if.end.137

if.end.137:                                       ; preds = %if.then.134, %if.then.131
  %96 = load i64, i64* %int1l, align 8
  %97 = load i64, i64* %int2l, align 8
  %rem = urem i64 %96, %97
  store i64 %rem, i64* %low, align 8
  store i64 0, i64* %hi, align 8
  br label %sw.epilog

if.end.138:                                       ; preds = %land.lhs.true.128, %land.lhs.true.125, %land.lhs.true.118, %land.lhs.true.111, %land.lhs.true.108, %sw.bb.105
  br label %sw.bb.139

sw.bb.139:                                        ; preds = %land.end, %if.end.138
  %98 = load i32, i32* %code.addr, align 4
  %99 = load i32, i32* %uns, align 4
  %100 = load i64, i64* %int1l, align 8
  %101 = load i64, i64* %int1h, align 8
  %102 = load i64, i64* %int2l, align 8
  %103 = load i64, i64* %int2h, align 8
  %call140 = call i32 @div_and_round_double(i32 %98, i32 %99, i64 %100, i64 %101, i64 %102, i64 %103, i64* %garbagel, i64* %garbageh, i64* %low, i64* %hi)
  store i32 %call140, i32* %overflow, align 4
  br label %sw.epilog

sw.bb.141:                                        ; preds = %land.end, %land.end
  %104 = load i32, i32* %uns, align 4
  %tobool142 = icmp ne i32 %104, 0
  br i1 %tobool142, label %if.then.143, label %if.else

if.then.143:                                      ; preds = %sw.bb.141
  %105 = load i64, i64* %int1h, align 8
  %106 = load i64, i64* %int2h, align 8
  %cmp144 = icmp ult i64 %105, %106
  br i1 %cmp144, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.143
  %107 = load i64, i64* %int1h, align 8
  %108 = load i64, i64* %int2h, align 8
  %cmp146 = icmp eq i64 %107, %108
  br i1 %cmp146, label %land.rhs.148, label %land.end.151

land.rhs.148:                                     ; preds = %lor.rhs
  %109 = load i64, i64* %int1l, align 8
  %110 = load i64, i64* %int2l, align 8
  %cmp149 = icmp ult i64 %109, %110
  br label %land.end.151

land.end.151:                                     ; preds = %land.rhs.148, %lor.rhs
  %111 = phi i1 [ false, %lor.rhs ], [ %cmp149, %land.rhs.148 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.151, %if.then.143
  %112 = phi i1 [ true, %if.then.143 ], [ %111, %land.end.151 ]
  %lor.ext = zext i1 %112 to i32
  %conv153 = sext i32 %lor.ext to i64
  store i64 %conv153, i64* %low, align 8
  br label %if.end.167

if.else:                                          ; preds = %sw.bb.141
  %113 = load i64, i64* %int1h, align 8
  %114 = load i64, i64* %int2h, align 8
  %cmp154 = icmp slt i64 %113, %114
  br i1 %cmp154, label %lor.end.164, label %lor.rhs.156

lor.rhs.156:                                      ; preds = %if.else
  %115 = load i64, i64* %int1h, align 8
  %116 = load i64, i64* %int2h, align 8
  %cmp157 = icmp eq i64 %115, %116
  br i1 %cmp157, label %land.rhs.159, label %land.end.162

land.rhs.159:                                     ; preds = %lor.rhs.156
  %117 = load i64, i64* %int1l, align 8
  %118 = load i64, i64* %int2l, align 8
  %cmp160 = icmp ult i64 %117, %118
  br label %land.end.162

land.end.162:                                     ; preds = %land.rhs.159, %lor.rhs.156
  %119 = phi i1 [ false, %lor.rhs.156 ], [ %cmp160, %land.rhs.159 ]
  br label %lor.end.164

lor.end.164:                                      ; preds = %land.end.162, %if.else
  %120 = phi i1 [ true, %if.else ], [ %119, %land.end.162 ]
  %lor.ext165 = zext i1 %120 to i32
  %conv166 = sext i32 %lor.ext165 to i64
  store i64 %conv166, i64* %low, align 8
  br label %if.end.167

if.end.167:                                       ; preds = %lor.end.164, %lor.end
  %121 = load i64, i64* %low, align 8
  %122 = load i32, i32* %code.addr, align 4
  %cmp168 = icmp eq i32 %122, 78
  %conv169 = zext i1 %cmp168 to i32
  %conv170 = sext i32 %conv169 to i64
  %cmp171 = icmp eq i64 %121, %conv170
  br i1 %cmp171, label %if.then.173, label %if.else.174

if.then.173:                                      ; preds = %if.end.167
  %123 = load i64, i64* %int1l, align 8
  store i64 %123, i64* %low, align 8
  %124 = load i64, i64* %int1h, align 8
  store i64 %124, i64* %hi, align 8
  br label %if.end.175

if.else.174:                                      ; preds = %if.end.167
  %125 = load i64, i64* %int2l, align 8
  store i64 %125, i64* %low, align 8
  %126 = load i64, i64* %int2h, align 8
  store i64 %126, i64* %hi, align 8
  br label %if.end.175

if.end.175:                                       ; preds = %if.else.174, %if.then.173
  br label %sw.epilog

sw.default:                                       ; preds = %land.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 1671, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.int_const_binop, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %if.end.175, %sw.bb.139, %if.end.137, %if.end.103, %if.then.102, %if.then.89, %if.end, %sw.bb.52, %sw.bb.44, %sw.bb.43, %sw.bb.38, %sw.bb.31, %sw.bb.26, %sw.bb.24, %sw.bb.22, %sw.bb
  %127 = load i32, i32* %is_sizetype, align 4
  %tobool176 = icmp ne i32 %127, 0
  br i1 %tobool176, label %land.lhs.true.177, label %if.else.206

land.lhs.true.177:                                ; preds = %sw.epilog
  %128 = load i64, i64* %hi, align 8
  %cmp178 = icmp eq i64 %128, 0
  br i1 %cmp178, label %land.lhs.true.180, label %lor.lhs.false

land.lhs.true.180:                                ; preds = %land.lhs.true.177
  %129 = load i64, i64* %low, align 8
  %cmp181 = icmp sge i64 %129, 0
  br i1 %cmp181, label %land.lhs.true.188, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.180, %land.lhs.true.177
  %130 = load i64, i64* %hi, align 8
  %cmp183 = icmp eq i64 %130, -1
  br i1 %cmp183, label %land.lhs.true.185, label %if.else.206

land.lhs.true.185:                                ; preds = %lor.lhs.false
  %131 = load i64, i64* %low, align 8
  %cmp186 = icmp slt i64 %131, 0
  br i1 %cmp186, label %land.lhs.true.188, label %if.else.206

land.lhs.true.188:                                ; preds = %land.lhs.true.185, %land.lhs.true.180
  %132 = load i32, i32* %overflow, align 4
  %cmp189 = icmp eq i32 %132, 0
  br i1 %cmp189, label %land.lhs.true.191, label %if.else.206

land.lhs.true.191:                                ; preds = %land.lhs.true.188
  %133 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common192 = bitcast %union.tree_node* %133 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common192, i32 0, i32 2
  %bf.load193 = load i32, i32* %public_flag, align 8
  %bf.lshr194 = lshr i32 %bf.load193, 19
  %bf.clear195 = and i32 %bf.lshr194, 1
  %tobool196 = icmp ne i32 %bf.clear195, 0
  br i1 %tobool196, label %if.else.206, label %land.lhs.true.197

land.lhs.true.197:                                ; preds = %land.lhs.true.191
  %134 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common198 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %public_flag199 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common198, i32 0, i32 2
  %bf.load200 = load i32, i32* %public_flag199, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 19
  %bf.clear202 = and i32 %bf.lshr201, 1
  %tobool203 = icmp ne i32 %bf.clear202, 0
  br i1 %tobool203, label %if.else.206, label %if.then.204

if.then.204:                                      ; preds = %land.lhs.true.197
  %135 = load i64, i64* %low, align 8
  %136 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call205 = call %union.tree_node* @size_int_type_wide(i64 %135, %union.tree_node* %136)
  store %union.tree_node* %call205, %union.tree_node** %retval
  br label %return

if.else.206:                                      ; preds = %land.lhs.true.197, %land.lhs.true.191, %land.lhs.true.188, %land.lhs.true.185, %lor.lhs.false, %sw.epilog
  %137 = load i64, i64* %low, align 8
  %138 = load i64, i64* %hi, align 8
  %call207 = call %union.tree_node* @build_int_2_wide(i64 %137, i64 %138)
  store %union.tree_node* %call207, %union.tree_node** %t, align 8
  %139 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common208 = bitcast %union.tree_node* %139 to %struct.tree_common*
  %type209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 1
  %140 = load %union.tree_node*, %union.tree_node** %type209, align 8
  %141 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common210 = bitcast %union.tree_node* %141 to %struct.tree_common*
  %type211 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common210, i32 0, i32 1
  store %union.tree_node* %140, %union.tree_node** %type211, align 8
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.206
  %142 = load i32, i32* %notrunc.addr, align 4
  %tobool213 = icmp ne i32 %142, 0
  br i1 %tobool213, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.212
  %143 = load i32, i32* %uns, align 4
  %tobool214 = icmp ne i32 %143, 0
  br i1 %tobool214, label %lor.lhs.false.215, label %land.rhs.217

lor.lhs.false.215:                                ; preds = %cond.true
  %144 = load i32, i32* %is_sizetype, align 4
  %tobool216 = icmp ne i32 %144, 0
  br i1 %tobool216, label %land.rhs.217, label %land.end.219

land.rhs.217:                                     ; preds = %lor.lhs.false.215, %cond.true
  %145 = load i32, i32* %overflow, align 4
  %tobool218 = icmp ne i32 %145, 0
  br label %land.end.219

land.end.219:                                     ; preds = %land.rhs.217, %lor.lhs.false.215
  %146 = phi i1 [ false, %lor.lhs.false.215 ], [ %tobool218, %land.rhs.217 ]
  %land.ext220 = zext i1 %146 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end.212
  %147 = load %union.tree_node*, %union.tree_node** %t, align 8
  %148 = load i32, i32* %uns, align 4
  %tobool221 = icmp ne i32 %148, 0
  br i1 %tobool221, label %lor.lhs.false.222, label %land.rhs.224

lor.lhs.false.222:                                ; preds = %cond.false
  %149 = load i32, i32* %is_sizetype, align 4
  %tobool223 = icmp ne i32 %149, 0
  br i1 %tobool223, label %land.rhs.224, label %land.end.226

land.rhs.224:                                     ; preds = %lor.lhs.false.222, %cond.false
  %150 = load i32, i32* %overflow, align 4
  %tobool225 = icmp ne i32 %150, 0
  br label %land.end.226

land.end.226:                                     ; preds = %land.rhs.224, %lor.lhs.false.222
  %151 = phi i1 [ false, %lor.lhs.false.222 ], [ %tobool225, %land.rhs.224 ]
  %land.ext227 = zext i1 %151 to i32
  %call228 = call i32 @force_fit_type(%union.tree_node* %147, i32 %land.ext227)
  %tobool229 = icmp ne i32 %call228, 0
  br i1 %tobool229, label %land.rhs.230, label %land.end.234

land.rhs.230:                                     ; preds = %land.end.226
  %152 = load i32, i32* %no_overflow, align 4
  %tobool231 = icmp ne i32 %152, 0
  %lnot232 = xor i1 %tobool231, true
  br label %land.end.234

land.end.234:                                     ; preds = %land.rhs.230, %land.end.226
  %153 = phi i1 [ false, %land.end.226 ], [ %lnot232, %land.rhs.230 ]
  %land.ext235 = zext i1 %153 to i32
  br label %cond.end

cond.end:                                         ; preds = %land.end.234, %land.end.219
  %cond = phi i32 [ %land.ext220, %land.end.219 ], [ %land.ext235, %land.end.234 ]
  %154 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common236 = bitcast %union.tree_node* %154 to %struct.tree_common*
  %public_flag237 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common236, i32 0, i32 2
  %bf.load238 = load i32, i32* %public_flag237, align 8
  %bf.lshr239 = lshr i32 %bf.load238, 19
  %bf.clear240 = and i32 %bf.lshr239, 1
  %or241 = or i32 %cond, %bf.clear240
  %155 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common242 = bitcast %union.tree_node* %155 to %struct.tree_common*
  %public_flag243 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 2
  %bf.load244 = load i32, i32* %public_flag243, align 8
  %bf.lshr245 = lshr i32 %bf.load244, 19
  %bf.clear246 = and i32 %bf.lshr245, 1
  %or247 = or i32 %or241, %bf.clear246
  %156 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common248 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %public_flag249 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common248, i32 0, i32 2
  %bf.load250 = load i32, i32* %public_flag249, align 8
  %bf.value = and i32 %or247, 1
  %bf.shl = shl i32 %bf.value, 19
  %bf.clear251 = and i32 %bf.load250, -524289
  %bf.set = or i32 %bf.clear251, %bf.shl
  store i32 %bf.set, i32* %public_flag249, align 8
  %157 = load i32, i32* %is_sizetype, align 4
  %tobool252 = icmp ne i32 %157, 0
  br i1 %tobool252, label %land.lhs.true.253, label %if.end.278

land.lhs.true.253:                                ; preds = %cond.end
  %158 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common254 = bitcast %union.tree_node* %158 to %struct.tree_common*
  %public_flag255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common254, i32 0, i32 2
  %bf.load256 = load i32, i32* %public_flag255, align 8
  %bf.lshr257 = lshr i32 %bf.load256, 19
  %bf.clear258 = and i32 %bf.lshr257, 1
  %tobool259 = icmp ne i32 %bf.clear258, 0
  br i1 %tobool259, label %if.end.278, label %land.lhs.true.260

land.lhs.true.260:                                ; preds = %land.lhs.true.253
  %159 = load %union.tree_node*, %union.tree_node** %t, align 8
  %int_cst261 = bitcast %union.tree_node* %159 to %struct.tree_int_cst*
  %int_cst262 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst261, i32 0, i32 2
  %high263 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst262, i32 0, i32 1
  %160 = load i64, i64* %high263, align 8
  %161 = load i64, i64* %hi, align 8
  %cmp264 = icmp ne i64 %160, %161
  br i1 %cmp264, label %if.then.272, label %lor.lhs.false.266

lor.lhs.false.266:                                ; preds = %land.lhs.true.260
  %162 = load %union.tree_node*, %union.tree_node** %t, align 8
  %int_cst267 = bitcast %union.tree_node* %162 to %struct.tree_int_cst*
  %int_cst268 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst267, i32 0, i32 2
  %low269 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst268, i32 0, i32 0
  %163 = load i64, i64* %low269, align 8
  %164 = load i64, i64* %low, align 8
  %cmp270 = icmp ne i64 %163, %164
  br i1 %cmp270, label %if.then.272, label %if.end.278

if.then.272:                                      ; preds = %lor.lhs.false.266, %land.lhs.true.260
  %165 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common273 = bitcast %union.tree_node* %165 to %struct.tree_common*
  %public_flag274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 2
  %bf.load275 = load i32, i32* %public_flag274, align 8
  %bf.clear276 = and i32 %bf.load275, -524289
  %bf.set277 = or i32 %bf.clear276, 524288
  store i32 %bf.set277, i32* %public_flag274, align 8
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.272, %lor.lhs.false.266, %land.lhs.true.253, %cond.end
  %166 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common279 = bitcast %union.tree_node* %166 to %struct.tree_common*
  %public_flag280 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common279, i32 0, i32 2
  %bf.load281 = load i32, i32* %public_flag280, align 8
  %bf.lshr282 = lshr i32 %bf.load281, 19
  %bf.clear283 = and i32 %bf.lshr282, 1
  %167 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common284 = bitcast %union.tree_node* %167 to %struct.tree_common*
  %static_flag285 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common284, i32 0, i32 2
  %bf.load286 = load i32, i32* %static_flag285, align 8
  %bf.lshr287 = lshr i32 %bf.load286, 18
  %bf.clear288 = and i32 %bf.lshr287, 1
  %or289 = or i32 %bf.clear283, %bf.clear288
  %168 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common290 = bitcast %union.tree_node* %168 to %struct.tree_common*
  %static_flag291 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common290, i32 0, i32 2
  %bf.load292 = load i32, i32* %static_flag291, align 8
  %bf.lshr293 = lshr i32 %bf.load292, 18
  %bf.clear294 = and i32 %bf.lshr293, 1
  %or295 = or i32 %or289, %bf.clear294
  %169 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common296 = bitcast %union.tree_node* %169 to %struct.tree_common*
  %static_flag297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common296, i32 0, i32 2
  %bf.load298 = load i32, i32* %static_flag297, align 8
  %bf.value299 = and i32 %or295, 1
  %bf.shl300 = shl i32 %bf.value299, 18
  %bf.clear301 = and i32 %bf.load298, -262145
  %bf.set302 = or i32 %bf.clear301, %bf.shl300
  store i32 %bf.set302, i32* %static_flag297, align 8
  %170 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %170, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.278, %if.then.204
  %171 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %171
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @fold(%union.tree_node* %expr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %t1 = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %arg0 = alloca %union.tree_node*, align 8
  %arg1 = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %kind = alloca i32, align 4
  %invert = alloca i32, align 4
  %wins = alloca i32, align 4
  %subop = alloca %union.tree_node*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %op = alloca %union.tree_node*, align 8
  %subop146 = alloca %union.tree_node*, align 8
  %inside_type = alloca %union.tree_node*, align 8
  %inter_type = alloca %union.tree_node*, align 8
  %final_type = alloca %union.tree_node*, align 8
  %inside_int = alloca i32, align 4
  %inside_ptr = alloca i32, align 4
  %inside_float = alloca i32, align 4
  %inside_prec = alloca i32, align 4
  %inside_unsignedp = alloca i32, align 4
  %inter_int = alloca i32, align 4
  %inter_ptr = alloca i32, align 4
  %inter_float = alloca i32, align 4
  %inter_prec = alloca i32, align 4
  %inter_unsignedp = alloca i32, align 4
  %final_int = alloca i32, align 4
  %final_ptr = alloca i32, align 4
  %final_float = alloca i32, align 4
  %final_prec = alloca i32, align 4
  %final_unsignedp = alloca i32, align 4
  %prev = alloca %union.tree_node*, align 8
  %m = alloca %union.tree_node*, align 8
  %low = alloca i64, align 8
  %high = alloca i64, align 8
  %overflow = alloca i32, align 4
  %agg.tmp = alloca %struct.realvaluetype, align 8
  %low1663 = alloca i64, align 8
  %high1664 = alloca i64, align 8
  %overflow1665 = alloca i32, align 4
  %agg.tmp1723 = alloca %struct.realvaluetype, align 8
  %parg0 = alloca %union.tree_node*, align 8
  %parg1 = alloca %union.tree_node*, align 8
  %parg = alloca %union.tree_node*, align 8
  %marg = alloca %union.tree_node*, align 8
  %arg00 = alloca %union.tree_node*, align 8
  %arg01 = alloca %union.tree_node*, align 8
  %arg10 = alloca %union.tree_node*, align 8
  %arg11 = alloca %union.tree_node*, align 8
  %alt0 = alloca %union.tree_node*, align 8
  %alt1 = alloca %union.tree_node*, align 8
  %same = alloca %union.tree_node*, align 8
  %int01 = alloca i64, align 8
  %int11 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %code0 = alloca i32, align 4
  %code1 = alloca i32, align 4
  %tree01 = alloca %union.tree_node*, align 8
  %tree11 = alloca %union.tree_node*, align 8
  %code01 = alloca i32, align 4
  %code11 = alloca i32, align 4
  %tree110 = alloca %union.tree_node*, align 8
  %tree111 = alloca %union.tree_node*, align 8
  %tree010 = alloca %union.tree_node*, align 8
  %tree011 = alloca %union.tree_node*, align 8
  %var0 = alloca %union.tree_node*, align 8
  %con0 = alloca %union.tree_node*, align 8
  %lit0 = alloca %union.tree_node*, align 8
  %minus_lit0 = alloca %union.tree_node*, align 8
  %var1 = alloca %union.tree_node*, align 8
  %con1 = alloca %union.tree_node*, align 8
  %lit1 = alloca %union.tree_node*, align 8
  %minus_lit1 = alloca %union.tree_node*, align 8
  %agg.tmp3008 = alloca %struct.realvaluetype, align 8
  %arg = alloca %union.tree_node*, align 8
  %prec = alloca i32, align 4
  %prec3487 = alloca i32, align 4
  %r = alloca %struct.realvaluetype, align 8
  %a00 = alloca %union.tree_node*, align 8
  %a01 = alloca %union.tree_node*, align 8
  %a10 = alloca %union.tree_node*, align 8
  %a11 = alloca %union.tree_node*, align 8
  %commutative = alloca i32, align 4
  %agg.tmp4439 = alloca %struct.realvaluetype, align 8
  %constop = alloca %union.tree_node*, align 8
  %varop = alloca %union.tree_node*, align 8
  %constopnum = alloca i32, align 4
  %newconst = alloca %union.tree_node*, align 8
  %size = alloca i32, align 4
  %mask = alloca %union.tree_node*, align 8
  %unsigned_type = alloca %union.tree_node*, align 8
  %precision4644 = alloca i32, align 4
  %folded_compare = alloca %union.tree_node*, align 8
  %newconst4768 = alloca %union.tree_node*, align 8
  %size4810 = alloca i32, align 4
  %mask4824 = alloca %union.tree_node*, align 8
  %unsigned_type4826 = alloca %union.tree_node*, align 8
  %precision4828 = alloca i32, align 4
  %folded_compare4830 = alloca %union.tree_node*, align 8
  %width = alloca i32, align 4
  %newtype = alloca %union.tree_node*, align 8
  %newmod = alloca %union.tree_node*, align 8
  %cval1 = alloca %union.tree_node*, align 8
  %cval2 = alloca %union.tree_node*, align 8
  %save_p = alloca i32, align 4
  %maxval6142 = alloca %union.tree_node*, align 8
  %minval6148 = alloca %union.tree_node*, align 8
  %high_result = alloca %union.tree_node*, align 8
  %equal_result = alloca %union.tree_node*, align 8
  %low_result = alloca %union.tree_node*, align 8
  %subtype = alloca %union.tree_node*, align 8
  %real0 = alloca %union.tree_node*, align 8
  %imag0 = alloca %union.tree_node*, align 8
  %real1 = alloca %union.tree_node*, align 8
  %imag1 = alloca %union.tree_node*, align 8
  %fndecl = alloca %union.tree_node*, align 8
  %arglist = alloca %union.tree_node*, align 8
  %arg2 = alloca %union.tree_node*, align 8
  %comp_code = alloca i32, align 4
  %comp_op0 = alloca %union.tree_node*, align 8
  %comp_op1 = alloca %union.tree_node*, align 8
  %comp_type = alloca %union.tree_node*, align 8
  %code07575 = alloca i32, align 4
  %kind0 = alloca i32, align 4
  %arg007585 = alloca %union.tree_node*, align 8
  %arg017590 = alloca %union.tree_node*, align 8
  %tmp7706 = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %t, align 8
  store %union.tree_node* null, %union.tree_node** %t1, align 8
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %2, %union.tree_node** %type, align 8
  store %union.tree_node* null, %union.tree_node** %arg0, align 8
  store %union.tree_node* null, %union.tree_node** %arg1, align 8
  %3 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %4 = load i32, i32* %code, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  store i32 %conv, i32* %kind, align 4
  store i32 1, i32* %wins, align 4
  %6 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %6, 120
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %code, align 4
  %cmp5 = icmp eq i32 %7, 118
  br i1 %cmp5, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx7 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 2
  %9 = bitcast %union.tree_node** %arrayidx7 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8
  %cmp8 = icmp ne %struct.rtx_def* %10, null
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %entry
  %11 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %11, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %12 = load i32, i32* %kind, align 4
  %cmp10 = icmp eq i32 %12, 99
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %13, %union.tree_node** %retval
  br label %return

if.end.13:                                        ; preds = %if.end
  %14 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %14, 115
  br i1 %cmp14, label %if.then.22, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %if.end.13
  %15 = load i32, i32* %code, align 4
  %cmp17 = icmp eq i32 %15, 76
  br i1 %cmp17, label %if.then.22, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %lor.lhs.false.16
  %16 = load i32, i32* %code, align 4
  %cmp20 = icmp eq i32 %16, 114
  br i1 %cmp20, label %if.then.22, label %if.else.124

if.then.22:                                       ; preds = %lor.lhs.false.19, %lor.lhs.false.16, %if.end.13
  %17 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp23 = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %operands24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp23, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands24, i32 0, i64 0
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8
  store %union.tree_node* %18, %union.tree_node** %arg0, align 8
  %19 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %cmp26 = icmp ne %union.tree_node* %19, null
  br i1 %cmp26, label %if.then.28, label %if.end.94

if.then.28:                                       ; preds = %if.then.22
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.28
  %20 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common29 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 115
  br i1 %cmp33, label %land.lhs.true.49, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %while.cond
  %21 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common36 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 114
  br i1 %cmp40, label %land.lhs.true.49, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.35
  %22 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common43 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load45 = load i32, i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 116
  br i1 %cmp47, label %land.lhs.true.49, label %land.end

land.lhs.true.49:                                 ; preds = %lor.lhs.false.42, %lor.lhs.false.35, %while.cond
  %23 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp50 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp50, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands51, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp53 = icmp ne %union.tree_node* %24, %25
  br i1 %cmp53, label %land.lhs.true.55, label %land.end

land.lhs.true.55:                                 ; preds = %land.lhs.true.49
  %26 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common56 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type57, align 8
  %type58 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type58, i32 0, i32 6
  %bf.load59 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load59, 9
  %bf.clear60 = and i32 %bf.lshr, 127
  %28 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp61 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands62 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp61, i32 0, i32 2
  %arrayidx63 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands62, i32 0, i64 0
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx63, align 8
  %common64 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type65, align 8
  %type66 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %mode67 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type66, i32 0, i32 6
  %bf.load68 = load i32, i32* %mode67, align 4
  %bf.lshr69 = lshr i32 %bf.load68, 9
  %bf.clear70 = and i32 %bf.lshr69, 127
  %cmp71 = icmp eq i32 %bf.clear60, %bf.clear70
  br i1 %cmp71, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.55
  %31 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common73 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %common75 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load76 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 13
  %bf.clear78 = and i32 %bf.lshr77, 1
  %33 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp79 = bitcast %union.tree_node* %33 to %struct.tree_exp*
  %operands80 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp79, i32 0, i32 2
  %arrayidx81 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands80, i32 0, i64 0
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx81, align 8
  %common82 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type83, align 8
  %common84 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %unsigned_flag85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %unsigned_flag85, align 8
  %bf.lshr87 = lshr i32 %bf.load86, 13
  %bf.clear88 = and i32 %bf.lshr87, 1
  %cmp89 = icmp eq i32 %bf.clear78, %bf.clear88
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.55, %land.lhs.true.49, %lor.lhs.false.42
  %36 = phi i1 [ false, %land.lhs.true.55 ], [ false, %land.lhs.true.49 ], [ false, %lor.lhs.false.42 ], [ %cmp89, %land.rhs ]
  br i1 %36, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %37 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp91 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands92 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp91, i32 0, i32 2
  %arrayidx93 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands92, i32 0, i64 0
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx93, align 8
  store %union.tree_node* %38, %union.tree_node** %arg0, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.94

if.end.94:                                        ; preds = %while.end, %if.then.22
  %39 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %cmp95 = icmp ne %union.tree_node* %39, null
  br i1 %cmp95, label %land.lhs.true.97, label %if.else

land.lhs.true.97:                                 ; preds = %if.end.94
  %40 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common98 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %code99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 2
  %bf.load100 = load i32, i32* %code99, align 8
  %bf.clear101 = and i32 %bf.load100, 255
  %cmp102 = icmp eq i32 %bf.clear101, 27
  br i1 %cmp102, label %if.then.104, label %if.else

if.then.104:                                      ; preds = %land.lhs.true.97
  %41 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %complex = bitcast %union.tree_node* %41 to %struct.tree_complex*
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex, i32 0, i32 2
  %42 = load %union.tree_node*, %union.tree_node** %real, align 8
  store %union.tree_node* %42, %union.tree_node** %subop, align 8
  br label %if.end.105

if.else:                                          ; preds = %land.lhs.true.97, %if.end.94
  %43 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %43, %union.tree_node** %subop, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.else, %if.then.104
  %44 = load %union.tree_node*, %union.tree_node** %subop, align 8
  %cmp106 = icmp ne %union.tree_node* %44, null
  br i1 %cmp106, label %land.lhs.true.108, label %if.end.123

land.lhs.true.108:                                ; preds = %if.end.105
  %45 = load %union.tree_node*, %union.tree_node** %subop, align 8
  %common109 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 2
  %bf.load111 = load i32, i32* %code110, align 8
  %bf.clear112 = and i32 %bf.load111, 255
  %cmp113 = icmp ne i32 %bf.clear112, 25
  br i1 %cmp113, label %land.lhs.true.115, label %if.end.123

land.lhs.true.115:                                ; preds = %land.lhs.true.108
  %46 = load %union.tree_node*, %union.tree_node** %subop, align 8
  %common116 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %code117 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 2
  %bf.load118 = load i32, i32* %code117, align 8
  %bf.clear119 = and i32 %bf.load118, 255
  %cmp120 = icmp ne i32 %bf.clear119, 26
  br i1 %cmp120, label %if.then.122, label %if.end.123

if.then.122:                                      ; preds = %land.lhs.true.115
  store i32 0, i32* %wins, align 4
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.122, %land.lhs.true.115, %land.lhs.true.108, %if.end.105
  br label %if.end.321

if.else.124:                                      ; preds = %lor.lhs.false.19
  %47 = load i32, i32* %kind, align 4
  %cmp125 = icmp eq i32 %47, 60
  br i1 %cmp125, label %if.then.139, label %lor.lhs.false.127

lor.lhs.false.127:                                ; preds = %if.else.124
  %48 = load i32, i32* %kind, align 4
  %cmp128 = icmp eq i32 %48, 49
  br i1 %cmp128, label %if.then.139, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %lor.lhs.false.127
  %49 = load i32, i32* %kind, align 4
  %cmp131 = icmp eq i32 %49, 50
  br i1 %cmp131, label %if.then.139, label %lor.lhs.false.133

lor.lhs.false.133:                                ; preds = %lor.lhs.false.130
  %50 = load i32, i32* %kind, align 4
  %cmp134 = icmp eq i32 %50, 101
  br i1 %cmp134, label %if.then.139, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false.133
  %51 = load i32, i32* %kind, align 4
  %cmp137 = icmp eq i32 %51, 114
  br i1 %cmp137, label %if.then.139, label %if.end.320

if.then.139:                                      ; preds = %lor.lhs.false.136, %lor.lhs.false.133, %lor.lhs.false.130, %lor.lhs.false.127, %if.else.124
  %52 = load i32, i32* %code, align 4
  %call = call i32 @first_rtl_op(i32 %52)
  store i32 %call, i32* %len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.139
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %len, align 4
  %cmp140 = icmp slt i32 %53, %54
  br i1 %cmp140, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4
  %idxprom142 = sext i32 %55 to i64
  %56 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp143 = bitcast %union.tree_node* %56 to %struct.tree_exp*
  %operands144 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp143, i32 0, i32 2
  %arrayidx145 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands144, i32 0, i64 %idxprom142
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8
  store %union.tree_node* %57, %union.tree_node** %op, align 8
  %58 = load %union.tree_node*, %union.tree_node** %op, align 8
  %cmp147 = icmp eq %union.tree_node* %58, null
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %for.body
  br label %for.inc

if.end.150:                                       ; preds = %for.body
  %59 = load i32, i32* %kind, align 4
  %cmp151 = icmp eq i32 %59, 60
  br i1 %cmp151, label %if.then.156, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %if.end.150
  %60 = load i32, i32* %code, align 4
  %cmp154 = icmp eq i32 %60, 83
  br i1 %cmp154, label %if.then.156, label %if.else.230

if.then.156:                                      ; preds = %lor.lhs.false.153, %if.end.150
  br label %while.cond.157

while.cond.157:                                   ; preds = %while.body.225, %if.then.156
  %61 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common158 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %code159 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common158, i32 0, i32 2
  %bf.load160 = load i32, i32* %code159, align 8
  %bf.clear161 = and i32 %bf.load160, 255
  %cmp162 = icmp eq i32 %bf.clear161, 115
  br i1 %cmp162, label %land.lhs.true.178, label %lor.lhs.false.164

lor.lhs.false.164:                                ; preds = %while.cond.157
  %62 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common165 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common165, i32 0, i32 2
  %bf.load167 = load i32, i32* %code166, align 8
  %bf.clear168 = and i32 %bf.load167, 255
  %cmp169 = icmp eq i32 %bf.clear168, 114
  br i1 %cmp169, label %land.lhs.true.178, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %lor.lhs.false.164
  %63 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common172 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %code173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 2
  %bf.load174 = load i32, i32* %code173, align 8
  %bf.clear175 = and i32 %bf.load174, 255
  %cmp176 = icmp eq i32 %bf.clear175, 116
  br i1 %cmp176, label %land.lhs.true.178, label %land.end.224

land.lhs.true.178:                                ; preds = %lor.lhs.false.171, %lor.lhs.false.164, %while.cond.157
  %64 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp179 = bitcast %union.tree_node* %64 to %struct.tree_exp*
  %operands180 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp179, i32 0, i32 2
  %arrayidx181 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands180, i32 0, i64 0
  %65 = load %union.tree_node*, %union.tree_node** %arrayidx181, align 8
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp182 = icmp ne %union.tree_node* %65, %66
  br i1 %cmp182, label %land.lhs.true.184, label %land.end.224

land.lhs.true.184:                                ; preds = %land.lhs.true.178
  %67 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common185 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %type186 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common185, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %type186, align 8
  %type187 = bitcast %union.tree_node* %68 to %struct.tree_type*
  %mode188 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type187, i32 0, i32 6
  %bf.load189 = load i32, i32* %mode188, align 4
  %bf.lshr190 = lshr i32 %bf.load189, 9
  %bf.clear191 = and i32 %bf.lshr190, 127
  %69 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp192 = bitcast %union.tree_node* %69 to %struct.tree_exp*
  %operands193 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp192, i32 0, i32 2
  %arrayidx194 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands193, i32 0, i64 0
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx194, align 8
  %common195 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type196, align 8
  %type197 = bitcast %union.tree_node* %71 to %struct.tree_type*
  %mode198 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type197, i32 0, i32 6
  %bf.load199 = load i32, i32* %mode198, align 4
  %bf.lshr200 = lshr i32 %bf.load199, 9
  %bf.clear201 = and i32 %bf.lshr200, 127
  %cmp202 = icmp eq i32 %bf.clear191, %bf.clear201
  br i1 %cmp202, label %land.rhs.204, label %land.end.224

land.rhs.204:                                     ; preds = %land.lhs.true.184
  %72 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common205 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %type206 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common205, i32 0, i32 1
  %73 = load %union.tree_node*, %union.tree_node** %type206, align 8
  %common207 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %unsigned_flag208 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common207, i32 0, i32 2
  %bf.load209 = load i32, i32* %unsigned_flag208, align 8
  %bf.lshr210 = lshr i32 %bf.load209, 13
  %bf.clear211 = and i32 %bf.lshr210, 1
  %74 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp212 = bitcast %union.tree_node* %74 to %struct.tree_exp*
  %operands213 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp212, i32 0, i32 2
  %arrayidx214 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands213, i32 0, i64 0
  %75 = load %union.tree_node*, %union.tree_node** %arrayidx214, align 8
  %common215 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %type216 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common215, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %type216, align 8
  %common217 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %unsigned_flag218 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common217, i32 0, i32 2
  %bf.load219 = load i32, i32* %unsigned_flag218, align 8
  %bf.lshr220 = lshr i32 %bf.load219, 13
  %bf.clear221 = and i32 %bf.lshr220, 1
  %cmp222 = icmp eq i32 %bf.clear211, %bf.clear221
  br label %land.end.224

land.end.224:                                     ; preds = %land.rhs.204, %land.lhs.true.184, %land.lhs.true.178, %lor.lhs.false.171
  %77 = phi i1 [ false, %land.lhs.true.184 ], [ false, %land.lhs.true.178 ], [ false, %lor.lhs.false.171 ], [ %cmp222, %land.rhs.204 ]
  br i1 %77, label %while.body.225, label %while.end.229

while.body.225:                                   ; preds = %land.end.224
  %78 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp226 = bitcast %union.tree_node* %78 to %struct.tree_exp*
  %operands227 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp226, i32 0, i32 2
  %arrayidx228 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands227, i32 0, i64 0
  %79 = load %union.tree_node*, %union.tree_node** %arrayidx228, align 8
  store %union.tree_node* %79, %union.tree_node** %op, align 8
  br label %while.cond.157

while.end.229:                                    ; preds = %land.end.224
  br label %if.end.284

if.else.230:                                      ; preds = %lor.lhs.false.153
  br label %while.cond.231

while.cond.231:                                   ; preds = %while.body.279, %if.else.230
  %80 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common232 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %code233 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common232, i32 0, i32 2
  %bf.load234 = load i32, i32* %code233, align 8
  %bf.clear235 = and i32 %bf.load234, 255
  %cmp236 = icmp eq i32 %bf.clear235, 115
  br i1 %cmp236, label %land.lhs.true.252, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %while.cond.231
  %81 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common239 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %code240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load241 = load i32, i32* %code240, align 8
  %bf.clear242 = and i32 %bf.load241, 255
  %cmp243 = icmp eq i32 %bf.clear242, 114
  br i1 %cmp243, label %land.lhs.true.252, label %lor.lhs.false.245

lor.lhs.false.245:                                ; preds = %lor.lhs.false.238
  %82 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common246 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %code247 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common246, i32 0, i32 2
  %bf.load248 = load i32, i32* %code247, align 8
  %bf.clear249 = and i32 %bf.load248, 255
  %cmp250 = icmp eq i32 %bf.clear249, 116
  br i1 %cmp250, label %land.lhs.true.252, label %land.end.278

land.lhs.true.252:                                ; preds = %lor.lhs.false.245, %lor.lhs.false.238, %while.cond.231
  %83 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp253 = bitcast %union.tree_node* %83 to %struct.tree_exp*
  %operands254 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp253, i32 0, i32 2
  %arrayidx255 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands254, i32 0, i64 0
  %84 = load %union.tree_node*, %union.tree_node** %arrayidx255, align 8
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp256 = icmp ne %union.tree_node* %84, %85
  br i1 %cmp256, label %land.rhs.258, label %land.end.278

land.rhs.258:                                     ; preds = %land.lhs.true.252
  %86 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common259 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type260 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common259, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type260, align 8
  %type261 = bitcast %union.tree_node* %87 to %struct.tree_type*
  %mode262 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type261, i32 0, i32 6
  %bf.load263 = load i32, i32* %mode262, align 4
  %bf.lshr264 = lshr i32 %bf.load263, 9
  %bf.clear265 = and i32 %bf.lshr264, 127
  %88 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp266 = bitcast %union.tree_node* %88 to %struct.tree_exp*
  %operands267 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp266, i32 0, i32 2
  %arrayidx268 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands267, i32 0, i64 0
  %89 = load %union.tree_node*, %union.tree_node** %arrayidx268, align 8
  %common269 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %type270 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common269, i32 0, i32 1
  %90 = load %union.tree_node*, %union.tree_node** %type270, align 8
  %type271 = bitcast %union.tree_node* %90 to %struct.tree_type*
  %mode272 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type271, i32 0, i32 6
  %bf.load273 = load i32, i32* %mode272, align 4
  %bf.lshr274 = lshr i32 %bf.load273, 9
  %bf.clear275 = and i32 %bf.lshr274, 127
  %cmp276 = icmp eq i32 %bf.clear265, %bf.clear275
  br label %land.end.278

land.end.278:                                     ; preds = %land.rhs.258, %land.lhs.true.252, %lor.lhs.false.245
  %91 = phi i1 [ false, %land.lhs.true.252 ], [ false, %lor.lhs.false.245 ], [ %cmp276, %land.rhs.258 ]
  br i1 %91, label %while.body.279, label %while.end.283

while.body.279:                                   ; preds = %land.end.278
  %92 = load %union.tree_node*, %union.tree_node** %op, align 8
  %exp280 = bitcast %union.tree_node* %92 to %struct.tree_exp*
  %operands281 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp280, i32 0, i32 2
  %arrayidx282 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands281, i32 0, i64 0
  %93 = load %union.tree_node*, %union.tree_node** %arrayidx282, align 8
  store %union.tree_node* %93, %union.tree_node** %op, align 8
  br label %while.cond.231

while.end.283:                                    ; preds = %land.end.278
  br label %if.end.284

if.end.284:                                       ; preds = %while.end.283, %while.end.229
  %94 = load %union.tree_node*, %union.tree_node** %op, align 8
  %common285 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %code286 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common285, i32 0, i32 2
  %bf.load287 = load i32, i32* %code286, align 8
  %bf.clear288 = and i32 %bf.load287, 255
  %cmp289 = icmp eq i32 %bf.clear288, 27
  br i1 %cmp289, label %if.then.291, label %if.else.294

if.then.291:                                      ; preds = %if.end.284
  %95 = load %union.tree_node*, %union.tree_node** %op, align 8
  %complex292 = bitcast %union.tree_node* %95 to %struct.tree_complex*
  %real293 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex292, i32 0, i32 2
  %96 = load %union.tree_node*, %union.tree_node** %real293, align 8
  store %union.tree_node* %96, %union.tree_node** %subop146, align 8
  br label %if.end.295

if.else.294:                                      ; preds = %if.end.284
  %97 = load %union.tree_node*, %union.tree_node** %op, align 8
  store %union.tree_node* %97, %union.tree_node** %subop146, align 8
  br label %if.end.295

if.end.295:                                       ; preds = %if.else.294, %if.then.291
  %98 = load %union.tree_node*, %union.tree_node** %subop146, align 8
  %common296 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %code297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common296, i32 0, i32 2
  %bf.load298 = load i32, i32* %code297, align 8
  %bf.clear299 = and i32 %bf.load298, 255
  %cmp300 = icmp ne i32 %bf.clear299, 25
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.310

land.lhs.true.302:                                ; preds = %if.end.295
  %99 = load %union.tree_node*, %union.tree_node** %subop146, align 8
  %common303 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %code304 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common303, i32 0, i32 2
  %bf.load305 = load i32, i32* %code304, align 8
  %bf.clear306 = and i32 %bf.load305, 255
  %cmp307 = icmp ne i32 %bf.clear306, 26
  br i1 %cmp307, label %if.then.309, label %if.end.310

if.then.309:                                      ; preds = %land.lhs.true.302
  store i32 0, i32* %wins, align 4
  br label %if.end.310

if.end.310:                                       ; preds = %if.then.309, %land.lhs.true.302, %if.end.295
  %100 = load i32, i32* %i, align 4
  %cmp311 = icmp eq i32 %100, 0
  br i1 %cmp311, label %if.then.313, label %if.else.314

if.then.313:                                      ; preds = %if.end.310
  %101 = load %union.tree_node*, %union.tree_node** %op, align 8
  store %union.tree_node* %101, %union.tree_node** %arg0, align 8
  br label %if.end.319

if.else.314:                                      ; preds = %if.end.310
  %102 = load i32, i32* %i, align 4
  %cmp315 = icmp eq i32 %102, 1
  br i1 %cmp315, label %if.then.317, label %if.end.318

if.then.317:                                      ; preds = %if.else.314
  %103 = load %union.tree_node*, %union.tree_node** %op, align 8
  store %union.tree_node* %103, %union.tree_node** %arg1, align 8
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.317, %if.else.314
  br label %if.end.319

if.end.319:                                       ; preds = %if.end.318, %if.then.313
  br label %for.inc

for.inc:                                          ; preds = %if.end.319, %if.then.149
  %104 = load i32, i32* %i, align 4
  %inc = add nsw i32 %104, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.320

if.end.320:                                       ; preds = %for.end, %lor.lhs.false.136
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.320, %if.end.123
  %105 = load i32, i32* %code, align 4
  %cmp322 = icmp eq i32 %105, 59
  br i1 %cmp322, label %land.lhs.true.342, label %lor.lhs.false.324

lor.lhs.false.324:                                ; preds = %if.end.321
  %106 = load i32, i32* %code, align 4
  %cmp325 = icmp eq i32 %106, 61
  br i1 %cmp325, label %land.lhs.true.342, label %lor.lhs.false.327

lor.lhs.false.327:                                ; preds = %lor.lhs.false.324
  %107 = load i32, i32* %code, align 4
  %cmp328 = icmp eq i32 %107, 78
  br i1 %cmp328, label %land.lhs.true.342, label %lor.lhs.false.330

lor.lhs.false.330:                                ; preds = %lor.lhs.false.327
  %108 = load i32, i32* %code, align 4
  %cmp331 = icmp eq i32 %108, 79
  br i1 %cmp331, label %land.lhs.true.342, label %lor.lhs.false.333

lor.lhs.false.333:                                ; preds = %lor.lhs.false.330
  %109 = load i32, i32* %code, align 4
  %cmp334 = icmp eq i32 %109, 86
  br i1 %cmp334, label %land.lhs.true.342, label %lor.lhs.false.336

lor.lhs.false.336:                                ; preds = %lor.lhs.false.333
  %110 = load i32, i32* %code, align 4
  %cmp337 = icmp eq i32 %110, 87
  br i1 %cmp337, label %land.lhs.true.342, label %lor.lhs.false.339

lor.lhs.false.339:                                ; preds = %lor.lhs.false.336
  %111 = load i32, i32* %code, align 4
  %cmp340 = icmp eq i32 %111, 88
  br i1 %cmp340, label %land.lhs.true.342, label %if.end.369

land.lhs.true.342:                                ; preds = %lor.lhs.false.339, %lor.lhs.false.336, %lor.lhs.false.333, %lor.lhs.false.330, %lor.lhs.false.327, %lor.lhs.false.324, %if.end.321
  %112 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common343 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %code344 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common343, i32 0, i32 2
  %bf.load345 = load i32, i32* %code344, align 8
  %bf.clear346 = and i32 %bf.load345, 255
  %cmp347 = icmp eq i32 %bf.clear346, 25
  br i1 %cmp347, label %if.then.356, label %lor.lhs.false.349

lor.lhs.false.349:                                ; preds = %land.lhs.true.342
  %113 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common350 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code351 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common350, i32 0, i32 2
  %bf.load352 = load i32, i32* %code351, align 8
  %bf.clear353 = and i32 %bf.load352, 255
  %cmp354 = icmp eq i32 %bf.clear353, 26
  br i1 %cmp354, label %if.then.356, label %if.end.369

if.then.356:                                      ; preds = %lor.lhs.false.349, %land.lhs.true.342
  %114 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %114, %union.tree_node** %tem, align 8
  %115 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %115, %union.tree_node** %arg0, align 8
  %116 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %116, %union.tree_node** %arg1, align 8
  %117 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp357 = bitcast %union.tree_node* %117 to %struct.tree_exp*
  %operands358 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp357, i32 0, i32 2
  %arrayidx359 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands358, i32 0, i64 0
  %118 = load %union.tree_node*, %union.tree_node** %arrayidx359, align 8
  store %union.tree_node* %118, %union.tree_node** %tem, align 8
  %119 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp360 = bitcast %union.tree_node* %119 to %struct.tree_exp*
  %operands361 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp360, i32 0, i32 2
  %arrayidx362 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands361, i32 0, i64 1
  %120 = load %union.tree_node*, %union.tree_node** %arrayidx362, align 8
  %121 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp363 = bitcast %union.tree_node* %121 to %struct.tree_exp*
  %operands364 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp363, i32 0, i32 2
  %arrayidx365 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands364, i32 0, i64 0
  store %union.tree_node* %120, %union.tree_node** %arrayidx365, align 8
  %122 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %123 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp366 = bitcast %union.tree_node* %123 to %struct.tree_exp*
  %operands367 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp366, i32 0, i32 2
  %arrayidx368 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands367, i32 0, i64 1
  store %union.tree_node* %122, %union.tree_node** %arrayidx368, align 8
  br label %if.end.369

if.end.369:                                       ; preds = %if.then.356, %lor.lhs.false.349, %lor.lhs.false.339
  %124 = load i32, i32* %code, align 4
  %cmp370 = icmp eq i32 %124, 88
  br i1 %cmp370, label %land.lhs.true.381, label %lor.lhs.false.372

lor.lhs.false.372:                                ; preds = %if.end.369
  %125 = load i32, i32* %code, align 4
  %cmp373 = icmp eq i32 %125, 86
  br i1 %cmp373, label %land.lhs.true.381, label %lor.lhs.false.375

lor.lhs.false.375:                                ; preds = %lor.lhs.false.372
  %126 = load i32, i32* %code, align 4
  %cmp376 = icmp eq i32 %126, 101
  br i1 %cmp376, label %land.lhs.true.381, label %lor.lhs.false.378

lor.lhs.false.378:                                ; preds = %lor.lhs.false.375
  %127 = load i32, i32* %code, align 4
  %cmp379 = icmp eq i32 %127, 102
  br i1 %cmp379, label %land.lhs.true.381, label %if.end.447

land.lhs.true.381:                                ; preds = %lor.lhs.false.378, %lor.lhs.false.375, %lor.lhs.false.372, %if.end.369
  %128 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common382 = bitcast %union.tree_node* %128 to %struct.tree_common*
  %code383 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common382, i32 0, i32 2
  %bf.load384 = load i32, i32* %code383, align 8
  %bf.clear385 = and i32 %bf.load384, 255
  %call386 = call i32 @truth_value_p(i32 %bf.clear385)
  %tobool = icmp ne i32 %call386, 0
  br i1 %tobool, label %land.lhs.true.387, label %lor.lhs.false.407

land.lhs.true.387:                                ; preds = %land.lhs.true.381
  %129 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common388 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %code389 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common388, i32 0, i32 2
  %bf.load390 = load i32, i32* %code389, align 8
  %bf.clear391 = and i32 %bf.load390, 255
  %call392 = call i32 @truth_value_p(i32 %bf.clear391)
  %tobool393 = icmp ne i32 %call392, 0
  br i1 %tobool393, label %if.then.434, label %lor.lhs.false.394

lor.lhs.false.394:                                ; preds = %land.lhs.true.387
  %130 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common395 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %code396 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common395, i32 0, i32 2
  %bf.load397 = load i32, i32* %code396, align 8
  %bf.clear398 = and i32 %bf.load397, 255
  %cmp399 = icmp eq i32 %bf.clear398, 88
  br i1 %cmp399, label %land.lhs.true.401, label %lor.lhs.false.407

land.lhs.true.401:                                ; preds = %lor.lhs.false.394
  %131 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp402 = bitcast %union.tree_node* %131 to %struct.tree_exp*
  %operands403 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp402, i32 0, i32 2
  %arrayidx404 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands403, i32 0, i64 1
  %132 = load %union.tree_node*, %union.tree_node** %arrayidx404, align 8
  %call405 = call i32 @integer_onep(%union.tree_node* %132)
  %tobool406 = icmp ne i32 %call405, 0
  br i1 %tobool406, label %if.then.434, label %lor.lhs.false.407

lor.lhs.false.407:                                ; preds = %land.lhs.true.401, %lor.lhs.false.394, %land.lhs.true.381
  %133 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common408 = bitcast %union.tree_node* %133 to %struct.tree_common*
  %code409 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common408, i32 0, i32 2
  %bf.load410 = load i32, i32* %code409, align 8
  %bf.clear411 = and i32 %bf.load410, 255
  %call412 = call i32 @truth_value_p(i32 %bf.clear411)
  %tobool413 = icmp ne i32 %call412, 0
  br i1 %tobool413, label %land.lhs.true.414, label %if.end.447

land.lhs.true.414:                                ; preds = %lor.lhs.false.407
  %134 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common415 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %code416 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common415, i32 0, i32 2
  %bf.load417 = load i32, i32* %code416, align 8
  %bf.clear418 = and i32 %bf.load417, 255
  %call419 = call i32 @truth_value_p(i32 %bf.clear418)
  %tobool420 = icmp ne i32 %call419, 0
  br i1 %tobool420, label %if.then.434, label %lor.lhs.false.421

lor.lhs.false.421:                                ; preds = %land.lhs.true.414
  %135 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common422 = bitcast %union.tree_node* %135 to %struct.tree_common*
  %code423 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common422, i32 0, i32 2
  %bf.load424 = load i32, i32* %code423, align 8
  %bf.clear425 = and i32 %bf.load424, 255
  %cmp426 = icmp eq i32 %bf.clear425, 88
  br i1 %cmp426, label %land.lhs.true.428, label %if.end.447

land.lhs.true.428:                                ; preds = %lor.lhs.false.421
  %136 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp429 = bitcast %union.tree_node* %136 to %struct.tree_exp*
  %operands430 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp429, i32 0, i32 2
  %arrayidx431 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands430, i32 0, i64 1
  %137 = load %union.tree_node*, %union.tree_node** %arrayidx431, align 8
  %call432 = call i32 @integer_onep(%union.tree_node* %137)
  %tobool433 = icmp ne i32 %call432, 0
  br i1 %tobool433, label %if.then.434, label %if.end.447

if.then.434:                                      ; preds = %land.lhs.true.428, %land.lhs.true.414, %land.lhs.true.401, %land.lhs.true.387
  %138 = load i32, i32* %code, align 4
  %cmp435 = icmp eq i32 %138, 88
  br i1 %cmp435, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.434
  br label %cond.end

cond.false:                                       ; preds = %if.then.434
  %139 = load i32, i32* %code, align 4
  %cmp437 = icmp eq i32 %139, 86
  %cond = select i1 %cmp437, i32 94, i32 95
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond439 = phi i32 [ 93, %cond.true ], [ %cond, %cond.false ]
  %140 = load %union.tree_node*, %union.tree_node** %type, align 8
  %141 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %142 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call440 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond439, %union.tree_node* %140, %union.tree_node* %141, %union.tree_node* %142)
  %call441 = call %union.tree_node* @fold(%union.tree_node* %call440)
  store %union.tree_node* %call441, %union.tree_node** %t, align 8
  %143 = load i32, i32* %code, align 4
  %cmp442 = icmp eq i32 %143, 101
  br i1 %cmp442, label %if.then.444, label %if.end.446

if.then.444:                                      ; preds = %cond.end
  %144 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call445 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %144)
  store %union.tree_node* %call445, %union.tree_node** %t, align 8
  br label %if.end.446

if.end.446:                                       ; preds = %if.then.444, %cond.end
  %145 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %145, %union.tree_node** %retval
  br label %return

if.end.447:                                       ; preds = %land.lhs.true.428, %lor.lhs.false.421, %lor.lhs.false.407, %lor.lhs.false.378
  %146 = load i32, i32* %code, align 4
  %idxprom448 = sext i32 %146 to i64
  %arrayidx449 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom448
  %147 = load i8, i8* %arrayidx449, align 1
  %conv450 = sext i8 %147 to i32
  %cmp451 = icmp eq i32 %conv450, 49
  br i1 %cmp451, label %if.then.453, label %if.else.700

if.then.453:                                      ; preds = %if.end.447
  %148 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common454 = bitcast %union.tree_node* %148 to %struct.tree_common*
  %code455 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common454, i32 0, i32 2
  %bf.load456 = load i32, i32* %code455, align 8
  %bf.clear457 = and i32 %bf.load456, 255
  %cmp458 = icmp eq i32 %bf.clear457, 47
  br i1 %cmp458, label %if.then.460, label %if.else.470

if.then.460:                                      ; preds = %if.then.453
  %149 = load %union.tree_node*, %union.tree_node** %type, align 8
  %150 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp461 = bitcast %union.tree_node* %150 to %struct.tree_exp*
  %operands462 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp461, i32 0, i32 2
  %arrayidx463 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands462, i32 0, i64 0
  %151 = load %union.tree_node*, %union.tree_node** %arrayidx463, align 8
  %152 = load i32, i32* %code, align 4
  %153 = load %union.tree_node*, %union.tree_node** %type, align 8
  %154 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp464 = bitcast %union.tree_node* %154 to %struct.tree_exp*
  %operands465 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp464, i32 0, i32 2
  %arrayidx466 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands465, i32 0, i64 1
  %155 = load %union.tree_node*, %union.tree_node** %arrayidx466, align 8
  %call467 = call %union.tree_node* @build1(i32 %152, %union.tree_node* %153, %union.tree_node* %155)
  %call468 = call %union.tree_node* @fold(%union.tree_node* %call467)
  %call469 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %149, %union.tree_node* %151, %union.tree_node* %call468)
  store %union.tree_node* %call469, %union.tree_node** %retval
  br label %return

if.else.470:                                      ; preds = %if.then.453
  %156 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common471 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %code472 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common471, i32 0, i32 2
  %bf.load473 = load i32, i32* %code472, align 8
  %bf.clear474 = and i32 %bf.load473, 255
  %cmp475 = icmp eq i32 %bf.clear474, 51
  br i1 %cmp475, label %if.then.477, label %if.else.680

if.then.477:                                      ; preds = %if.else.470
  %157 = load %union.tree_node*, %union.tree_node** %type, align 8
  %158 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp478 = bitcast %union.tree_node* %158 to %struct.tree_exp*
  %operands479 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp478, i32 0, i32 2
  %arrayidx480 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands479, i32 0, i64 0
  %159 = load %union.tree_node*, %union.tree_node** %arrayidx480, align 8
  %160 = load i32, i32* %code, align 4
  %161 = load %union.tree_node*, %union.tree_node** %type, align 8
  %162 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp481 = bitcast %union.tree_node* %162 to %struct.tree_exp*
  %operands482 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp481, i32 0, i32 2
  %arrayidx483 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands482, i32 0, i64 1
  %163 = load %union.tree_node*, %union.tree_node** %arrayidx483, align 8
  %call484 = call %union.tree_node* @build1(i32 %160, %union.tree_node* %161, %union.tree_node* %163)
  %call485 = call %union.tree_node* @fold(%union.tree_node* %call484)
  %164 = load i32, i32* %code, align 4
  %165 = load %union.tree_node*, %union.tree_node** %type, align 8
  %166 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp486 = bitcast %union.tree_node* %166 to %struct.tree_exp*
  %operands487 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp486, i32 0, i32 2
  %arrayidx488 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands487, i32 0, i64 2
  %167 = load %union.tree_node*, %union.tree_node** %arrayidx488, align 8
  %call489 = call %union.tree_node* @build1(i32 %164, %union.tree_node* %165, %union.tree_node* %167)
  %call490 = call %union.tree_node* @fold(%union.tree_node* %call489)
  %call491 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %157, %union.tree_node* %159, %union.tree_node* %call485, %union.tree_node* %call490)
  %call492 = call %union.tree_node* @fold(%union.tree_node* %call491)
  store %union.tree_node* %call492, %union.tree_node** %t, align 8
  %168 = load i32, i32* %code, align 4
  %cmp493 = icmp eq i32 %168, 115
  br i1 %cmp493, label %land.lhs.true.501, label %lor.lhs.false.495

lor.lhs.false.495:                                ; preds = %if.then.477
  %169 = load i32, i32* %code, align 4
  %cmp496 = icmp eq i32 %169, 114
  br i1 %cmp496, label %land.lhs.true.501, label %lor.lhs.false.498

lor.lhs.false.498:                                ; preds = %lor.lhs.false.495
  %170 = load i32, i32* %code, align 4
  %cmp499 = icmp eq i32 %170, 116
  br i1 %cmp499, label %land.lhs.true.501, label %if.end.679

land.lhs.true.501:                                ; preds = %lor.lhs.false.498, %lor.lhs.false.495, %if.then.477
  %171 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common502 = bitcast %union.tree_node* %171 to %struct.tree_common*
  %code503 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common502, i32 0, i32 2
  %bf.load504 = load i32, i32* %code503, align 8
  %bf.clear505 = and i32 %bf.load504, 255
  %cmp506 = icmp eq i32 %bf.clear505, 51
  br i1 %cmp506, label %land.lhs.true.508, label %if.end.679

land.lhs.true.508:                                ; preds = %land.lhs.true.501
  %172 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp509 = bitcast %union.tree_node* %172 to %struct.tree_exp*
  %operands510 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp509, i32 0, i32 2
  %arrayidx511 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands510, i32 0, i64 1
  %173 = load %union.tree_node*, %union.tree_node** %arrayidx511, align 8
  %common512 = bitcast %union.tree_node* %173 to %struct.tree_common*
  %code513 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common512, i32 0, i32 2
  %bf.load514 = load i32, i32* %code513, align 8
  %bf.clear515 = and i32 %bf.load514, 255
  %174 = load i32, i32* %code, align 4
  %cmp516 = icmp eq i32 %bf.clear515, %174
  br i1 %cmp516, label %land.lhs.true.518, label %if.end.679

land.lhs.true.518:                                ; preds = %land.lhs.true.508
  %175 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp519 = bitcast %union.tree_node* %175 to %struct.tree_exp*
  %operands520 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp519, i32 0, i32 2
  %arrayidx521 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands520, i32 0, i64 2
  %176 = load %union.tree_node*, %union.tree_node** %arrayidx521, align 8
  %common522 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %code523 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common522, i32 0, i32 2
  %bf.load524 = load i32, i32* %code523, align 8
  %bf.clear525 = and i32 %bf.load524, 255
  %177 = load i32, i32* %code, align 4
  %cmp526 = icmp eq i32 %bf.clear525, %177
  br i1 %cmp526, label %land.lhs.true.528, label %if.end.679

land.lhs.true.528:                                ; preds = %land.lhs.true.518
  %178 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp529 = bitcast %union.tree_node* %178 to %struct.tree_exp*
  %operands530 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp529, i32 0, i32 2
  %arrayidx531 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands530, i32 0, i64 1
  %179 = load %union.tree_node*, %union.tree_node** %arrayidx531, align 8
  %exp532 = bitcast %union.tree_node* %179 to %struct.tree_exp*
  %operands533 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp532, i32 0, i32 2
  %arrayidx534 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands533, i32 0, i64 0
  %180 = load %union.tree_node*, %union.tree_node** %arrayidx534, align 8
  %common535 = bitcast %union.tree_node* %180 to %struct.tree_common*
  %type536 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common535, i32 0, i32 1
  %181 = load %union.tree_node*, %union.tree_node** %type536, align 8
  %182 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp537 = bitcast %union.tree_node* %182 to %struct.tree_exp*
  %operands538 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp537, i32 0, i32 2
  %arrayidx539 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands538, i32 0, i64 2
  %183 = load %union.tree_node*, %union.tree_node** %arrayidx539, align 8
  %exp540 = bitcast %union.tree_node* %183 to %struct.tree_exp*
  %operands541 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp540, i32 0, i32 2
  %arrayidx542 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands541, i32 0, i64 0
  %184 = load %union.tree_node*, %union.tree_node** %arrayidx542, align 8
  %common543 = bitcast %union.tree_node* %184 to %struct.tree_common*
  %type544 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common543, i32 0, i32 1
  %185 = load %union.tree_node*, %union.tree_node** %type544, align 8
  %cmp545 = icmp eq %union.tree_node* %181, %185
  br i1 %cmp545, label %land.lhs.true.547, label %if.end.679

land.lhs.true.547:                                ; preds = %land.lhs.true.528
  %186 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common548 = bitcast %union.tree_node* %186 to %struct.tree_common*
  %type549 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common548, i32 0, i32 1
  %187 = load %union.tree_node*, %union.tree_node** %type549, align 8
  %common550 = bitcast %union.tree_node* %187 to %struct.tree_common*
  %code551 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common550, i32 0, i32 2
  %bf.load552 = load i32, i32* %code551, align 8
  %bf.clear553 = and i32 %bf.load552, 255
  %cmp554 = icmp eq i32 %bf.clear553, 6
  br i1 %cmp554, label %land.lhs.true.583, label %lor.lhs.false.556

lor.lhs.false.556:                                ; preds = %land.lhs.true.547
  %188 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common557 = bitcast %union.tree_node* %188 to %struct.tree_common*
  %type558 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common557, i32 0, i32 1
  %189 = load %union.tree_node*, %union.tree_node** %type558, align 8
  %common559 = bitcast %union.tree_node* %189 to %struct.tree_common*
  %code560 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common559, i32 0, i32 2
  %bf.load561 = load i32, i32* %code560, align 8
  %bf.clear562 = and i32 %bf.load561, 255
  %cmp563 = icmp eq i32 %bf.clear562, 10
  br i1 %cmp563, label %land.lhs.true.583, label %lor.lhs.false.565

lor.lhs.false.565:                                ; preds = %lor.lhs.false.556
  %190 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common566 = bitcast %union.tree_node* %190 to %struct.tree_common*
  %type567 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common566, i32 0, i32 1
  %191 = load %union.tree_node*, %union.tree_node** %type567, align 8
  %common568 = bitcast %union.tree_node* %191 to %struct.tree_common*
  %code569 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common568, i32 0, i32 2
  %bf.load570 = load i32, i32* %code569, align 8
  %bf.clear571 = and i32 %bf.load570, 255
  %cmp572 = icmp eq i32 %bf.clear571, 11
  br i1 %cmp572, label %land.lhs.true.583, label %lor.lhs.false.574

lor.lhs.false.574:                                ; preds = %lor.lhs.false.565
  %192 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common575 = bitcast %union.tree_node* %192 to %struct.tree_common*
  %type576 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common575, i32 0, i32 1
  %193 = load %union.tree_node*, %union.tree_node** %type576, align 8
  %common577 = bitcast %union.tree_node* %193 to %struct.tree_common*
  %code578 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common577, i32 0, i32 2
  %bf.load579 = load i32, i32* %code578, align 8
  %bf.clear580 = and i32 %bf.load579, 255
  %cmp581 = icmp eq i32 %bf.clear580, 12
  br i1 %cmp581, label %land.lhs.true.583, label %if.then.653

land.lhs.true.583:                                ; preds = %lor.lhs.false.574, %lor.lhs.false.565, %lor.lhs.false.556, %land.lhs.true.547
  %194 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp584 = bitcast %union.tree_node* %194 to %struct.tree_exp*
  %operands585 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp584, i32 0, i32 2
  %arrayidx586 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands585, i32 0, i64 1
  %195 = load %union.tree_node*, %union.tree_node** %arrayidx586, align 8
  %exp587 = bitcast %union.tree_node* %195 to %struct.tree_exp*
  %operands588 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp587, i32 0, i32 2
  %arrayidx589 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands588, i32 0, i64 0
  %196 = load %union.tree_node*, %union.tree_node** %arrayidx589, align 8
  %common590 = bitcast %union.tree_node* %196 to %struct.tree_common*
  %type591 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common590, i32 0, i32 1
  %197 = load %union.tree_node*, %union.tree_node** %type591, align 8
  %common592 = bitcast %union.tree_node* %197 to %struct.tree_common*
  %code593 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common592, i32 0, i32 2
  %bf.load594 = load i32, i32* %code593, align 8
  %bf.clear595 = and i32 %bf.load594, 255
  %cmp596 = icmp eq i32 %bf.clear595, 6
  br i1 %cmp596, label %land.lhs.true.643, label %lor.lhs.false.598

lor.lhs.false.598:                                ; preds = %land.lhs.true.583
  %198 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp599 = bitcast %union.tree_node* %198 to %struct.tree_exp*
  %operands600 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp599, i32 0, i32 2
  %arrayidx601 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands600, i32 0, i64 1
  %199 = load %union.tree_node*, %union.tree_node** %arrayidx601, align 8
  %exp602 = bitcast %union.tree_node* %199 to %struct.tree_exp*
  %operands603 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp602, i32 0, i32 2
  %arrayidx604 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands603, i32 0, i64 0
  %200 = load %union.tree_node*, %union.tree_node** %arrayidx604, align 8
  %common605 = bitcast %union.tree_node* %200 to %struct.tree_common*
  %type606 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common605, i32 0, i32 1
  %201 = load %union.tree_node*, %union.tree_node** %type606, align 8
  %common607 = bitcast %union.tree_node* %201 to %struct.tree_common*
  %code608 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common607, i32 0, i32 2
  %bf.load609 = load i32, i32* %code608, align 8
  %bf.clear610 = and i32 %bf.load609, 255
  %cmp611 = icmp eq i32 %bf.clear610, 10
  br i1 %cmp611, label %land.lhs.true.643, label %lor.lhs.false.613

lor.lhs.false.613:                                ; preds = %lor.lhs.false.598
  %202 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp614 = bitcast %union.tree_node* %202 to %struct.tree_exp*
  %operands615 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp614, i32 0, i32 2
  %arrayidx616 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands615, i32 0, i64 1
  %203 = load %union.tree_node*, %union.tree_node** %arrayidx616, align 8
  %exp617 = bitcast %union.tree_node* %203 to %struct.tree_exp*
  %operands618 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp617, i32 0, i32 2
  %arrayidx619 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands618, i32 0, i64 0
  %204 = load %union.tree_node*, %union.tree_node** %arrayidx619, align 8
  %common620 = bitcast %union.tree_node* %204 to %struct.tree_common*
  %type621 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common620, i32 0, i32 1
  %205 = load %union.tree_node*, %union.tree_node** %type621, align 8
  %common622 = bitcast %union.tree_node* %205 to %struct.tree_common*
  %code623 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common622, i32 0, i32 2
  %bf.load624 = load i32, i32* %code623, align 8
  %bf.clear625 = and i32 %bf.load624, 255
  %cmp626 = icmp eq i32 %bf.clear625, 11
  br i1 %cmp626, label %land.lhs.true.643, label %lor.lhs.false.628

lor.lhs.false.628:                                ; preds = %lor.lhs.false.613
  %206 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp629 = bitcast %union.tree_node* %206 to %struct.tree_exp*
  %operands630 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp629, i32 0, i32 2
  %arrayidx631 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands630, i32 0, i64 1
  %207 = load %union.tree_node*, %union.tree_node** %arrayidx631, align 8
  %exp632 = bitcast %union.tree_node* %207 to %struct.tree_exp*
  %operands633 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp632, i32 0, i32 2
  %arrayidx634 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands633, i32 0, i64 0
  %208 = load %union.tree_node*, %union.tree_node** %arrayidx634, align 8
  %common635 = bitcast %union.tree_node* %208 to %struct.tree_common*
  %type636 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common635, i32 0, i32 1
  %209 = load %union.tree_node*, %union.tree_node** %type636, align 8
  %common637 = bitcast %union.tree_node* %209 to %struct.tree_common*
  %code638 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common637, i32 0, i32 2
  %bf.load639 = load i32, i32* %code638, align 8
  %bf.clear640 = and i32 %bf.load639, 255
  %cmp641 = icmp eq i32 %bf.clear640, 12
  br i1 %cmp641, label %land.lhs.true.643, label %if.then.653

land.lhs.true.643:                                ; preds = %lor.lhs.false.628, %lor.lhs.false.613, %lor.lhs.false.598, %land.lhs.true.583
  %210 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common644 = bitcast %union.tree_node* %210 to %struct.tree_common*
  %type645 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common644, i32 0, i32 1
  %211 = load %union.tree_node*, %union.tree_node** %type645, align 8
  %type646 = bitcast %union.tree_node* %211 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type646, i32 0, i32 6
  %bf.load647 = load i32, i32* %precision, align 4
  %bf.clear648 = and i32 %bf.load647, 511
  %212 = load i32, i32* @target_flags, align 4
  %and = and i32 %212, 33554432
  %tobool649 = icmp ne i32 %and, 0
  %cond650 = select i1 %tobool649, i32 64, i32 32
  %cmp651 = icmp sle i32 %bf.clear648, %cond650
  br i1 %cmp651, label %if.end.679, label %if.then.653

if.then.653:                                      ; preds = %land.lhs.true.643, %lor.lhs.false.628, %lor.lhs.false.574
  %213 = load i32, i32* %code, align 4
  %214 = load %union.tree_node*, %union.tree_node** %type, align 8
  %215 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp654 = bitcast %union.tree_node* %215 to %struct.tree_exp*
  %operands655 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp654, i32 0, i32 2
  %arrayidx656 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands655, i32 0, i64 1
  %216 = load %union.tree_node*, %union.tree_node** %arrayidx656, align 8
  %exp657 = bitcast %union.tree_node* %216 to %struct.tree_exp*
  %operands658 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp657, i32 0, i32 2
  %arrayidx659 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands658, i32 0, i64 0
  %217 = load %union.tree_node*, %union.tree_node** %arrayidx659, align 8
  %common660 = bitcast %union.tree_node* %217 to %struct.tree_common*
  %type661 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common660, i32 0, i32 1
  %218 = load %union.tree_node*, %union.tree_node** %type661, align 8
  %219 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp662 = bitcast %union.tree_node* %219 to %struct.tree_exp*
  %operands663 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp662, i32 0, i32 2
  %arrayidx664 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands663, i32 0, i64 0
  %220 = load %union.tree_node*, %union.tree_node** %arrayidx664, align 8
  %221 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp665 = bitcast %union.tree_node* %221 to %struct.tree_exp*
  %operands666 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp665, i32 0, i32 2
  %arrayidx667 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands666, i32 0, i64 1
  %222 = load %union.tree_node*, %union.tree_node** %arrayidx667, align 8
  %exp668 = bitcast %union.tree_node* %222 to %struct.tree_exp*
  %operands669 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp668, i32 0, i32 2
  %arrayidx670 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands669, i32 0, i64 0
  %223 = load %union.tree_node*, %union.tree_node** %arrayidx670, align 8
  %224 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp671 = bitcast %union.tree_node* %224 to %struct.tree_exp*
  %operands672 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp671, i32 0, i32 2
  %arrayidx673 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands672, i32 0, i64 2
  %225 = load %union.tree_node*, %union.tree_node** %arrayidx673, align 8
  %exp674 = bitcast %union.tree_node* %225 to %struct.tree_exp*
  %operands675 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp674, i32 0, i32 2
  %arrayidx676 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands675, i32 0, i64 0
  %226 = load %union.tree_node*, %union.tree_node** %arrayidx676, align 8
  %call677 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %218, %union.tree_node* %220, %union.tree_node* %223, %union.tree_node* %226)
  %call678 = call %union.tree_node* @build1(i32 %213, %union.tree_node* %214, %union.tree_node* %call677)
  store %union.tree_node* %call678, %union.tree_node** %t, align 8
  br label %if.end.679

if.end.679:                                       ; preds = %if.then.653, %land.lhs.true.643, %land.lhs.true.528, %land.lhs.true.518, %land.lhs.true.508, %land.lhs.true.501, %lor.lhs.false.498
  %227 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %227, %union.tree_node** %retval
  br label %return

if.else.680:                                      ; preds = %if.else.470
  %228 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common681 = bitcast %union.tree_node* %228 to %struct.tree_common*
  %code682 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common681, i32 0, i32 2
  %bf.load683 = load i32, i32* %code682, align 8
  %bf.clear684 = and i32 %bf.load683, 255
  %idxprom685 = sext i32 %bf.clear684 to i64
  %arrayidx686 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom685
  %229 = load i8, i8* %arrayidx686, align 1
  %conv687 = sext i8 %229 to i32
  %cmp688 = icmp eq i32 %conv687, 60
  br i1 %cmp688, label %if.then.690, label %if.end.697

if.then.690:                                      ; preds = %if.else.680
  %230 = load %union.tree_node*, %union.tree_node** %type, align 8
  %231 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %232 = load i32, i32* %code, align 4
  %233 = load %union.tree_node*, %union.tree_node** %type, align 8
  %234 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call691 = call %union.tree_node* @build1(i32 %232, %union.tree_node* %233, %union.tree_node* %234)
  %call692 = call %union.tree_node* @fold(%union.tree_node* %call691)
  %235 = load i32, i32* %code, align 4
  %236 = load %union.tree_node*, %union.tree_node** %type, align 8
  %237 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call693 = call %union.tree_node* @build1(i32 %235, %union.tree_node* %236, %union.tree_node* %237)
  %call694 = call %union.tree_node* @fold(%union.tree_node* %call693)
  %call695 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %230, %union.tree_node* %231, %union.tree_node* %call692, %union.tree_node* %call694)
  %call696 = call %union.tree_node* @fold(%union.tree_node* %call695)
  store %union.tree_node* %call696, %union.tree_node** %retval
  br label %return

if.end.697:                                       ; preds = %if.else.680
  br label %if.end.698

if.end.698:                                       ; preds = %if.end.697
  br label %if.end.699

if.end.699:                                       ; preds = %if.end.698
  br label %if.end.901

if.else.700:                                      ; preds = %if.end.447
  %238 = load i32, i32* %code, align 4
  %idxprom701 = sext i32 %238 to i64
  %arrayidx702 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom701
  %239 = load i8, i8* %arrayidx702, align 1
  %conv703 = sext i8 %239 to i32
  %cmp704 = icmp eq i32 %conv703, 50
  br i1 %cmp704, label %if.then.712, label %lor.lhs.false.706

lor.lhs.false.706:                                ; preds = %if.else.700
  %240 = load i32, i32* %code, align 4
  %idxprom707 = sext i32 %240 to i64
  %arrayidx708 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom707
  %241 = load i8, i8* %arrayidx708, align 1
  %conv709 = sext i8 %241 to i32
  %cmp710 = icmp eq i32 %conv709, 60
  br i1 %cmp710, label %if.then.712, label %if.else.852

if.then.712:                                      ; preds = %lor.lhs.false.706, %if.else.700
  %242 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common713 = bitcast %union.tree_node* %242 to %struct.tree_common*
  %code714 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common713, i32 0, i32 2
  %bf.load715 = load i32, i32* %code714, align 8
  %bf.clear716 = and i32 %bf.load715, 255
  %cmp717 = icmp eq i32 %bf.clear716, 47
  br i1 %cmp717, label %if.then.719, label %if.else.729

if.then.719:                                      ; preds = %if.then.712
  %243 = load %union.tree_node*, %union.tree_node** %type, align 8
  %244 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp720 = bitcast %union.tree_node* %244 to %struct.tree_exp*
  %operands721 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp720, i32 0, i32 2
  %arrayidx722 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands721, i32 0, i64 0
  %245 = load %union.tree_node*, %union.tree_node** %arrayidx722, align 8
  %246 = load i32, i32* %code, align 4
  %247 = load %union.tree_node*, %union.tree_node** %type, align 8
  %248 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %249 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp723 = bitcast %union.tree_node* %249 to %struct.tree_exp*
  %operands724 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp723, i32 0, i32 2
  %arrayidx725 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands724, i32 0, i64 1
  %250 = load %union.tree_node*, %union.tree_node** %arrayidx725, align 8
  %call726 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %246, %union.tree_node* %247, %union.tree_node* %248, %union.tree_node* %250)
  %call727 = call %union.tree_node* @fold(%union.tree_node* %call726)
  %call728 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %243, %union.tree_node* %245, %union.tree_node* %call727)
  store %union.tree_node* %call728, %union.tree_node** %retval
  br label %return

if.else.729:                                      ; preds = %if.then.712
  %251 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common730 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %code731 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common730, i32 0, i32 2
  %bf.load732 = load i32, i32* %code731, align 8
  %bf.clear733 = and i32 %bf.load732, 255
  %cmp734 = icmp eq i32 %bf.clear733, 51
  br i1 %cmp734, label %land.lhs.true.752, label %lor.lhs.false.736

lor.lhs.false.736:                                ; preds = %if.else.729
  %252 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common737 = bitcast %union.tree_node* %252 to %struct.tree_common*
  %code738 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common737, i32 0, i32 2
  %bf.load739 = load i32, i32* %code738, align 8
  %bf.clear740 = and i32 %bf.load739, 255
  %idxprom741 = sext i32 %bf.clear740 to i64
  %arrayidx742 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom741
  %253 = load i8, i8* %arrayidx742, align 1
  %conv743 = sext i8 %253 to i32
  %cmp744 = icmp eq i32 %conv743, 60
  br i1 %cmp744, label %land.lhs.true.746, label %if.else.779

land.lhs.true.746:                                ; preds = %lor.lhs.false.736
  %254 = load i32, i32* %code, align 4
  %idxprom747 = sext i32 %254 to i64
  %arrayidx748 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom747
  %255 = load i8, i8* %arrayidx748, align 1
  %conv749 = sext i8 %255 to i32
  %cmp750 = icmp ne i32 %conv749, 60
  br i1 %cmp750, label %land.lhs.true.752, label %if.else.779

land.lhs.true.752:                                ; preds = %land.lhs.true.746, %if.else.729
  %256 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common753 = bitcast %union.tree_node* %256 to %struct.tree_common*
  %code754 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common753, i32 0, i32 2
  %bf.load755 = load i32, i32* %code754, align 8
  %bf.clear756 = and i32 %bf.load755, 255
  %cmp757 = icmp ne i32 %bf.clear756, 51
  br i1 %cmp757, label %land.lhs.true.764, label %lor.lhs.false.759

lor.lhs.false.759:                                ; preds = %land.lhs.true.752
  %257 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call760 = call i32 @count_cond(%union.tree_node* %257, i32 25)
  %258 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call761 = call i32 @count_cond(%union.tree_node* %258, i32 25)
  %add = add nsw i32 %call760, %call761
  %cmp762 = icmp sle i32 %add, 25
  br i1 %cmp762, label %land.lhs.true.764, label %if.else.779

land.lhs.true.764:                                ; preds = %lor.lhs.false.759, %land.lhs.true.752
  %259 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common765 = bitcast %union.tree_node* %259 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common765, i32 0, i32 2
  %bf.load766 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr767 = lshr i32 %bf.load766, 8
  %bf.clear768 = and i32 %bf.lshr767, 1
  %tobool769 = icmp ne i32 %bf.clear768, 0
  br i1 %tobool769, label %lor.lhs.false.770, label %if.then.777

lor.lhs.false.770:                                ; preds = %land.lhs.true.764
  %call771 = call i32 @global_bindings_p()
  %cmp772 = icmp eq i32 %call771, 0
  br i1 %cmp772, label %land.lhs.true.774, label %if.else.779

land.lhs.true.774:                                ; preds = %lor.lhs.false.770
  %260 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call775 = call i32 @contains_placeholder_p(%union.tree_node* %260)
  %tobool776 = icmp ne i32 %call775, 0
  br i1 %tobool776, label %if.else.779, label %if.then.777

if.then.777:                                      ; preds = %land.lhs.true.774, %land.lhs.true.764
  %261 = load i32, i32* %code, align 4
  %262 = load %union.tree_node*, %union.tree_node** %type, align 8
  %263 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %264 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call778 = call %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %261, %union.tree_node* %262, %union.tree_node* %263, %union.tree_node* %264, i32 0)
  store %union.tree_node* %call778, %union.tree_node** %retval
  br label %return

if.else.779:                                      ; preds = %land.lhs.true.774, %lor.lhs.false.770, %lor.lhs.false.759, %land.lhs.true.746, %lor.lhs.false.736
  %265 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common780 = bitcast %union.tree_node* %265 to %struct.tree_common*
  %code781 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common780, i32 0, i32 2
  %bf.load782 = load i32, i32* %code781, align 8
  %bf.clear783 = and i32 %bf.load782, 255
  %cmp784 = icmp eq i32 %bf.clear783, 47
  br i1 %cmp784, label %if.then.786, label %if.else.796

if.then.786:                                      ; preds = %if.else.779
  %266 = load %union.tree_node*, %union.tree_node** %type, align 8
  %267 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp787 = bitcast %union.tree_node* %267 to %struct.tree_exp*
  %operands788 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp787, i32 0, i32 2
  %arrayidx789 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands788, i32 0, i64 0
  %268 = load %union.tree_node*, %union.tree_node** %arrayidx789, align 8
  %269 = load i32, i32* %code, align 4
  %270 = load %union.tree_node*, %union.tree_node** %type, align 8
  %271 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp790 = bitcast %union.tree_node* %271 to %struct.tree_exp*
  %operands791 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp790, i32 0, i32 2
  %arrayidx792 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands791, i32 0, i64 1
  %272 = load %union.tree_node*, %union.tree_node** %arrayidx792, align 8
  %273 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call793 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %269, %union.tree_node* %270, %union.tree_node* %272, %union.tree_node* %273)
  %call794 = call %union.tree_node* @fold(%union.tree_node* %call793)
  %call795 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %266, %union.tree_node* %268, %union.tree_node* %call794)
  store %union.tree_node* %call795, %union.tree_node** %retval
  br label %return

if.else.796:                                      ; preds = %if.else.779
  %274 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common797 = bitcast %union.tree_node* %274 to %struct.tree_common*
  %code798 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common797, i32 0, i32 2
  %bf.load799 = load i32, i32* %code798, align 8
  %bf.clear800 = and i32 %bf.load799, 255
  %cmp801 = icmp eq i32 %bf.clear800, 51
  br i1 %cmp801, label %land.lhs.true.819, label %lor.lhs.false.803

lor.lhs.false.803:                                ; preds = %if.else.796
  %275 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common804 = bitcast %union.tree_node* %275 to %struct.tree_common*
  %code805 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common804, i32 0, i32 2
  %bf.load806 = load i32, i32* %code805, align 8
  %bf.clear807 = and i32 %bf.load806, 255
  %idxprom808 = sext i32 %bf.clear807 to i64
  %arrayidx809 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom808
  %276 = load i8, i8* %arrayidx809, align 1
  %conv810 = sext i8 %276 to i32
  %cmp811 = icmp eq i32 %conv810, 60
  br i1 %cmp811, label %land.lhs.true.813, label %if.end.848

land.lhs.true.813:                                ; preds = %lor.lhs.false.803
  %277 = load i32, i32* %code, align 4
  %idxprom814 = sext i32 %277 to i64
  %arrayidx815 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom814
  %278 = load i8, i8* %arrayidx815, align 1
  %conv816 = sext i8 %278 to i32
  %cmp817 = icmp ne i32 %conv816, 60
  br i1 %cmp817, label %land.lhs.true.819, label %if.end.848

land.lhs.true.819:                                ; preds = %land.lhs.true.813, %if.else.796
  %279 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common820 = bitcast %union.tree_node* %279 to %struct.tree_common*
  %code821 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common820, i32 0, i32 2
  %bf.load822 = load i32, i32* %code821, align 8
  %bf.clear823 = and i32 %bf.load822, 255
  %cmp824 = icmp ne i32 %bf.clear823, 51
  br i1 %cmp824, label %land.lhs.true.832, label %lor.lhs.false.826

lor.lhs.false.826:                                ; preds = %land.lhs.true.819
  %280 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call827 = call i32 @count_cond(%union.tree_node* %280, i32 25)
  %281 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call828 = call i32 @count_cond(%union.tree_node* %281, i32 25)
  %add829 = add nsw i32 %call827, %call828
  %cmp830 = icmp sle i32 %add829, 25
  br i1 %cmp830, label %land.lhs.true.832, label %if.end.848

land.lhs.true.832:                                ; preds = %lor.lhs.false.826, %land.lhs.true.819
  %282 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common833 = bitcast %union.tree_node* %282 to %struct.tree_common*
  %side_effects_flag834 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common833, i32 0, i32 2
  %bf.load835 = load i32, i32* %side_effects_flag834, align 8
  %bf.lshr836 = lshr i32 %bf.load835, 8
  %bf.clear837 = and i32 %bf.lshr836, 1
  %tobool838 = icmp ne i32 %bf.clear837, 0
  br i1 %tobool838, label %lor.lhs.false.839, label %if.then.846

lor.lhs.false.839:                                ; preds = %land.lhs.true.832
  %call840 = call i32 @global_bindings_p()
  %cmp841 = icmp eq i32 %call840, 0
  br i1 %cmp841, label %land.lhs.true.843, label %if.end.848

land.lhs.true.843:                                ; preds = %lor.lhs.false.839
  %283 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call844 = call i32 @contains_placeholder_p(%union.tree_node* %283)
  %tobool845 = icmp ne i32 %call844, 0
  br i1 %tobool845, label %if.end.848, label %if.then.846

if.then.846:                                      ; preds = %land.lhs.true.843, %land.lhs.true.832
  %284 = load i32, i32* %code, align 4
  %285 = load %union.tree_node*, %union.tree_node** %type, align 8
  %286 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %287 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call847 = call %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %284, %union.tree_node* %285, %union.tree_node* %286, %union.tree_node* %287, i32 1)
  store %union.tree_node* %call847, %union.tree_node** %retval
  br label %return

if.end.848:                                       ; preds = %land.lhs.true.843, %lor.lhs.false.839, %lor.lhs.false.826, %land.lhs.true.813, %lor.lhs.false.803
  br label %if.end.849

if.end.849:                                       ; preds = %if.end.848
  br label %if.end.850

if.end.850:                                       ; preds = %if.end.849
  br label %if.end.851

if.end.851:                                       ; preds = %if.end.850
  br label %if.end.900

if.else.852:                                      ; preds = %lor.lhs.false.706
  %288 = load i32, i32* %code, align 4
  %idxprom853 = sext i32 %288 to i64
  %arrayidx854 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom853
  %289 = load i8, i8* %arrayidx854, align 1
  %conv855 = sext i8 %289 to i32
  %cmp856 = icmp eq i32 %conv855, 60
  br i1 %cmp856, label %land.lhs.true.858, label %if.else.875

land.lhs.true.858:                                ; preds = %if.else.852
  %290 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common859 = bitcast %union.tree_node* %290 to %struct.tree_common*
  %code860 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common859, i32 0, i32 2
  %bf.load861 = load i32, i32* %code860, align 8
  %bf.clear862 = and i32 %bf.load861, 255
  %cmp863 = icmp eq i32 %bf.clear862, 47
  br i1 %cmp863, label %if.then.865, label %if.else.875

if.then.865:                                      ; preds = %land.lhs.true.858
  %291 = load %union.tree_node*, %union.tree_node** %type, align 8
  %292 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp866 = bitcast %union.tree_node* %292 to %struct.tree_exp*
  %operands867 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp866, i32 0, i32 2
  %arrayidx868 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands867, i32 0, i64 0
  %293 = load %union.tree_node*, %union.tree_node** %arrayidx868, align 8
  %294 = load i32, i32* %code, align 4
  %295 = load %union.tree_node*, %union.tree_node** %type, align 8
  %296 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp869 = bitcast %union.tree_node* %296 to %struct.tree_exp*
  %operands870 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp869, i32 0, i32 2
  %arrayidx871 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands870, i32 0, i64 1
  %297 = load %union.tree_node*, %union.tree_node** %arrayidx871, align 8
  %298 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call872 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %294, %union.tree_node* %295, %union.tree_node* %297, %union.tree_node* %298)
  %call873 = call %union.tree_node* @fold(%union.tree_node* %call872)
  %call874 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %291, %union.tree_node* %293, %union.tree_node* %call873)
  store %union.tree_node* %call874, %union.tree_node** %retval
  br label %return

if.else.875:                                      ; preds = %land.lhs.true.858, %if.else.852
  %299 = load i32, i32* %code, align 4
  %idxprom876 = sext i32 %299 to i64
  %arrayidx877 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom876
  %300 = load i8, i8* %arrayidx877, align 1
  %conv878 = sext i8 %300 to i32
  %cmp879 = icmp eq i32 %conv878, 60
  br i1 %cmp879, label %land.lhs.true.881, label %if.end.898

land.lhs.true.881:                                ; preds = %if.else.875
  %301 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common882 = bitcast %union.tree_node* %301 to %struct.tree_common*
  %code883 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common882, i32 0, i32 2
  %bf.load884 = load i32, i32* %code883, align 8
  %bf.clear885 = and i32 %bf.load884, 255
  %cmp886 = icmp eq i32 %bf.clear885, 47
  br i1 %cmp886, label %if.then.888, label %if.end.898

if.then.888:                                      ; preds = %land.lhs.true.881
  %302 = load %union.tree_node*, %union.tree_node** %type, align 8
  %303 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp889 = bitcast %union.tree_node* %303 to %struct.tree_exp*
  %operands890 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp889, i32 0, i32 2
  %arrayidx891 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands890, i32 0, i64 0
  %304 = load %union.tree_node*, %union.tree_node** %arrayidx891, align 8
  %305 = load i32, i32* %code, align 4
  %306 = load %union.tree_node*, %union.tree_node** %type, align 8
  %307 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %308 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp892 = bitcast %union.tree_node* %308 to %struct.tree_exp*
  %operands893 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp892, i32 0, i32 2
  %arrayidx894 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands893, i32 0, i64 1
  %309 = load %union.tree_node*, %union.tree_node** %arrayidx894, align 8
  %call895 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %305, %union.tree_node* %306, %union.tree_node* %307, %union.tree_node* %309)
  %call896 = call %union.tree_node* @fold(%union.tree_node* %call895)
  %call897 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %302, %union.tree_node* %304, %union.tree_node* %call896)
  store %union.tree_node* %call897, %union.tree_node** %retval
  br label %return

if.end.898:                                       ; preds = %land.lhs.true.881, %if.else.875
  br label %if.end.899

if.end.899:                                       ; preds = %if.end.898
  br label %if.end.900

if.end.900:                                       ; preds = %if.end.899, %if.end.851
  br label %if.end.901

if.end.901:                                       ; preds = %if.end.900, %if.end.699
  %310 = load i32, i32* %code, align 4
  switch i32 %310, label %sw.default.7712 [
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 27, label %sw.bb
    i32 46, label %sw.bb
    i32 32, label %sw.bb.902
    i32 115, label %sw.bb.904
    i32 76, label %sw.bb.904
    i32 114, label %sw.bb.904
    i32 72, label %sw.bb.904
    i32 117, label %sw.bb.1450
    i32 39, label %sw.bb.1469
    i32 113, label %sw.bb.1485
    i32 77, label %sw.bb.1493
    i32 80, label %sw.bb.1617
    i32 126, label %sw.bb.1751
    i32 90, label %sw.bb.1838
    i32 59, label %sw.bb.1889
    i32 60, label %sw.bb.2978
    i32 61, label %sw.bb.3141
    i32 86, label %sw.bb.3284
    i32 87, label %sw.bb.3325
    i32 88, label %sw.bb.3383
    i32 89, label %sw.bb.3547
    i32 70, label %sw.bb.3569
    i32 62, label %sw.bb.3676
    i32 65, label %sw.bb.3676
    i32 64, label %sw.bb.3676
    i32 63, label %sw.bb.3676
    i32 71, label %sw.bb.3676
    i32 67, label %sw.bb.3715
    i32 68, label %sw.bb.3715
    i32 69, label %sw.bb.3715
    i32 66, label %sw.bb.3715
    i32 82, label %sw.bb.3741
    i32 83, label %sw.bb.3741
    i32 84, label %sw.bb.3741
    i32 85, label %sw.bb.3741
    i32 78, label %sw.bb.3930
    i32 79, label %sw.bb.3970
    i32 96, label %sw.bb.4014
    i32 91, label %sw.bb.4025
    i32 93, label %sw.bb.4031
    i32 92, label %sw.bb.4265
    i32 94, label %sw.bb.4278
    i32 95, label %sw.bb.4339
    i32 101, label %sw.bb.4366
    i32 102, label %sw.bb.4366
    i32 97, label %sw.bb.4366
    i32 99, label %sw.bb.4366
    i32 98, label %sw.bb.4366
    i32 100, label %sw.bb.4366
    i32 51, label %sw.bb.6598
    i32 47, label %sw.bb.7403
    i32 125, label %sw.bb.7420
    i32 127, label %sw.bb.7425
    i32 128, label %sw.bb.7495
    i32 56, label %sw.bb.7566
    i32 53, label %sw.bb.7666
  ]

sw.bb:                                            ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %311 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %311, %union.tree_node** %retval
  br label %return

sw.bb.902:                                        ; preds = %if.end.901
  %312 = load %union.tree_node*, %union.tree_node** %t, align 8
  %decl = bitcast %union.tree_node* %312 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 12
  %313 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %call903 = call %union.tree_node* @fold(%union.tree_node* %313)
  store %union.tree_node* %call903, %union.tree_node** %retval
  br label %return

sw.bb.904:                                        ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %314 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp905 = bitcast %union.tree_node* %314 to %struct.tree_exp*
  %operands906 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp905, i32 0, i32 2
  %arrayidx907 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands906, i32 0, i64 0
  %315 = load %union.tree_node*, %union.tree_node** %arrayidx907, align 8
  %common908 = bitcast %union.tree_node* %315 to %struct.tree_common*
  %type909 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common908, i32 0, i32 1
  %316 = load %union.tree_node*, %union.tree_node** %type909, align 8
  %317 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common910 = bitcast %union.tree_node* %317 to %struct.tree_common*
  %type911 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common910, i32 0, i32 1
  %318 = load %union.tree_node*, %union.tree_node** %type911, align 8
  %cmp912 = icmp eq %union.tree_node* %316, %318
  br i1 %cmp912, label %if.then.914, label %if.end.918

if.then.914:                                      ; preds = %sw.bb.904
  %319 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp915 = bitcast %union.tree_node* %319 to %struct.tree_exp*
  %operands916 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp915, i32 0, i32 2
  %arrayidx917 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands916, i32 0, i64 0
  %320 = load %union.tree_node*, %union.tree_node** %arrayidx917, align 8
  store %union.tree_node* %320, %union.tree_node** %retval
  br label %return

if.end.918:                                       ; preds = %sw.bb.904
  %321 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp919 = bitcast %union.tree_node* %321 to %struct.tree_exp*
  %operands920 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp919, i32 0, i32 2
  %arrayidx921 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands920, i32 0, i64 0
  %322 = load %union.tree_node*, %union.tree_node** %arrayidx921, align 8
  %common922 = bitcast %union.tree_node* %322 to %struct.tree_common*
  %code923 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common922, i32 0, i32 2
  %bf.load924 = load i32, i32* %code923, align 8
  %bf.clear925 = and i32 %bf.load924, 255
  %cmp926 = icmp eq i32 %bf.clear925, 115
  br i1 %cmp926, label %if.then.938, label %lor.lhs.false.928

lor.lhs.false.928:                                ; preds = %if.end.918
  %323 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp929 = bitcast %union.tree_node* %323 to %struct.tree_exp*
  %operands930 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp929, i32 0, i32 2
  %arrayidx931 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands930, i32 0, i64 0
  %324 = load %union.tree_node*, %union.tree_node** %arrayidx931, align 8
  %common932 = bitcast %union.tree_node* %324 to %struct.tree_common*
  %code933 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common932, i32 0, i32 2
  %bf.load934 = load i32, i32* %code933, align 8
  %bf.clear935 = and i32 %bf.load934, 255
  %cmp936 = icmp eq i32 %bf.clear935, 114
  br i1 %cmp936, label %if.then.938, label %if.end.1368

if.then.938:                                      ; preds = %lor.lhs.false.928, %if.end.918
  %325 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp939 = bitcast %union.tree_node* %325 to %struct.tree_exp*
  %operands940 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp939, i32 0, i32 2
  %arrayidx941 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands940, i32 0, i64 0
  %326 = load %union.tree_node*, %union.tree_node** %arrayidx941, align 8
  %exp942 = bitcast %union.tree_node* %326 to %struct.tree_exp*
  %operands943 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp942, i32 0, i32 2
  %arrayidx944 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands943, i32 0, i64 0
  %327 = load %union.tree_node*, %union.tree_node** %arrayidx944, align 8
  %common945 = bitcast %union.tree_node* %327 to %struct.tree_common*
  %type946 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common945, i32 0, i32 1
  %328 = load %union.tree_node*, %union.tree_node** %type946, align 8
  store %union.tree_node* %328, %union.tree_node** %inside_type, align 8
  %329 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp947 = bitcast %union.tree_node* %329 to %struct.tree_exp*
  %operands948 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp947, i32 0, i32 2
  %arrayidx949 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands948, i32 0, i64 0
  %330 = load %union.tree_node*, %union.tree_node** %arrayidx949, align 8
  %common950 = bitcast %union.tree_node* %330 to %struct.tree_common*
  %type951 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common950, i32 0, i32 1
  %331 = load %union.tree_node*, %union.tree_node** %type951, align 8
  store %union.tree_node* %331, %union.tree_node** %inter_type, align 8
  %332 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common952 = bitcast %union.tree_node* %332 to %struct.tree_common*
  %type953 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common952, i32 0, i32 1
  %333 = load %union.tree_node*, %union.tree_node** %type953, align 8
  store %union.tree_node* %333, %union.tree_node** %final_type, align 8
  %334 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common954 = bitcast %union.tree_node* %334 to %struct.tree_common*
  %code955 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common954, i32 0, i32 2
  %bf.load956 = load i32, i32* %code955, align 8
  %bf.clear957 = and i32 %bf.load956, 255
  %cmp958 = icmp eq i32 %bf.clear957, 6
  br i1 %cmp958, label %lor.end, label %lor.lhs.false.960

lor.lhs.false.960:                                ; preds = %if.then.938
  %335 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common961 = bitcast %union.tree_node* %335 to %struct.tree_common*
  %code962 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common961, i32 0, i32 2
  %bf.load963 = load i32, i32* %code962, align 8
  %bf.clear964 = and i32 %bf.load963, 255
  %cmp965 = icmp eq i32 %bf.clear964, 10
  br i1 %cmp965, label %lor.end, label %lor.lhs.false.967

lor.lhs.false.967:                                ; preds = %lor.lhs.false.960
  %336 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common968 = bitcast %union.tree_node* %336 to %struct.tree_common*
  %code969 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common968, i32 0, i32 2
  %bf.load970 = load i32, i32* %code969, align 8
  %bf.clear971 = and i32 %bf.load970, 255
  %cmp972 = icmp eq i32 %bf.clear971, 11
  br i1 %cmp972, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.967
  %337 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common974 = bitcast %union.tree_node* %337 to %struct.tree_common*
  %code975 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common974, i32 0, i32 2
  %bf.load976 = load i32, i32* %code975, align 8
  %bf.clear977 = and i32 %bf.load976, 255
  %cmp978 = icmp eq i32 %bf.clear977, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.967, %lor.lhs.false.960, %if.then.938
  %338 = phi i1 [ true, %lor.lhs.false.967 ], [ true, %lor.lhs.false.960 ], [ true, %if.then.938 ], [ %cmp978, %lor.rhs ]
  %lor.ext = zext i1 %338 to i32
  store i32 %lor.ext, i32* %inside_int, align 4
  %339 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common980 = bitcast %union.tree_node* %339 to %struct.tree_common*
  %code981 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common980, i32 0, i32 2
  %bf.load982 = load i32, i32* %code981, align 8
  %bf.clear983 = and i32 %bf.load982, 255
  %cmp984 = icmp eq i32 %bf.clear983, 13
  br i1 %cmp984, label %lor.end.993, label %lor.rhs.986

lor.rhs.986:                                      ; preds = %lor.end
  %340 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common987 = bitcast %union.tree_node* %340 to %struct.tree_common*
  %code988 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common987, i32 0, i32 2
  %bf.load989 = load i32, i32* %code988, align 8
  %bf.clear990 = and i32 %bf.load989, 255
  %cmp991 = icmp eq i32 %bf.clear990, 15
  br label %lor.end.993

lor.end.993:                                      ; preds = %lor.rhs.986, %lor.end
  %341 = phi i1 [ true, %lor.end ], [ %cmp991, %lor.rhs.986 ]
  %lor.ext994 = zext i1 %341 to i32
  store i32 %lor.ext994, i32* %inside_ptr, align 4
  %342 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common995 = bitcast %union.tree_node* %342 to %struct.tree_common*
  %code996 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common995, i32 0, i32 2
  %bf.load997 = load i32, i32* %code996, align 8
  %bf.clear998 = and i32 %bf.load997, 255
  %cmp999 = icmp eq i32 %bf.clear998, 7
  br i1 %cmp999, label %lor.end.1018, label %lor.rhs.1001

lor.rhs.1001:                                     ; preds = %lor.end.993
  %343 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common1002 = bitcast %union.tree_node* %343 to %struct.tree_common*
  %code1003 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1002, i32 0, i32 2
  %bf.load1004 = load i32, i32* %code1003, align 8
  %bf.clear1005 = and i32 %bf.load1004, 255
  %cmp1006 = icmp eq i32 %bf.clear1005, 8
  br i1 %cmp1006, label %land.rhs.1008, label %land.end.1017

land.rhs.1008:                                    ; preds = %lor.rhs.1001
  %344 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common1009 = bitcast %union.tree_node* %344 to %struct.tree_common*
  %type1010 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1009, i32 0, i32 1
  %345 = load %union.tree_node*, %union.tree_node** %type1010, align 8
  %common1011 = bitcast %union.tree_node* %345 to %struct.tree_common*
  %code1012 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1011, i32 0, i32 2
  %bf.load1013 = load i32, i32* %code1012, align 8
  %bf.clear1014 = and i32 %bf.load1013, 255
  %cmp1015 = icmp eq i32 %bf.clear1014, 7
  br label %land.end.1017

land.end.1017:                                    ; preds = %land.rhs.1008, %lor.rhs.1001
  %346 = phi i1 [ false, %lor.rhs.1001 ], [ %cmp1015, %land.rhs.1008 ]
  br label %lor.end.1018

lor.end.1018:                                     ; preds = %land.end.1017, %lor.end.993
  %347 = phi i1 [ true, %lor.end.993 ], [ %346, %land.end.1017 ]
  %lor.ext1019 = zext i1 %347 to i32
  store i32 %lor.ext1019, i32* %inside_float, align 4
  %348 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %type1020 = bitcast %union.tree_node* %348 to %struct.tree_type*
  %precision1021 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1020, i32 0, i32 6
  %bf.load1022 = load i32, i32* %precision1021, align 4
  %bf.clear1023 = and i32 %bf.load1022, 511
  store i32 %bf.clear1023, i32* %inside_prec, align 4
  %349 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %common1024 = bitcast %union.tree_node* %349 to %struct.tree_common*
  %unsigned_flag1025 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1024, i32 0, i32 2
  %bf.load1026 = load i32, i32* %unsigned_flag1025, align 8
  %bf.lshr1027 = lshr i32 %bf.load1026, 13
  %bf.clear1028 = and i32 %bf.lshr1027, 1
  store i32 %bf.clear1028, i32* %inside_unsignedp, align 4
  %350 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1029 = bitcast %union.tree_node* %350 to %struct.tree_common*
  %code1030 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1029, i32 0, i32 2
  %bf.load1031 = load i32, i32* %code1030, align 8
  %bf.clear1032 = and i32 %bf.load1031, 255
  %cmp1033 = icmp eq i32 %bf.clear1032, 6
  br i1 %cmp1033, label %lor.end.1056, label %lor.lhs.false.1035

lor.lhs.false.1035:                               ; preds = %lor.end.1018
  %351 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1036 = bitcast %union.tree_node* %351 to %struct.tree_common*
  %code1037 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1036, i32 0, i32 2
  %bf.load1038 = load i32, i32* %code1037, align 8
  %bf.clear1039 = and i32 %bf.load1038, 255
  %cmp1040 = icmp eq i32 %bf.clear1039, 10
  br i1 %cmp1040, label %lor.end.1056, label %lor.lhs.false.1042

lor.lhs.false.1042:                               ; preds = %lor.lhs.false.1035
  %352 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1043 = bitcast %union.tree_node* %352 to %struct.tree_common*
  %code1044 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1043, i32 0, i32 2
  %bf.load1045 = load i32, i32* %code1044, align 8
  %bf.clear1046 = and i32 %bf.load1045, 255
  %cmp1047 = icmp eq i32 %bf.clear1046, 11
  br i1 %cmp1047, label %lor.end.1056, label %lor.rhs.1049

lor.rhs.1049:                                     ; preds = %lor.lhs.false.1042
  %353 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1050 = bitcast %union.tree_node* %353 to %struct.tree_common*
  %code1051 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1050, i32 0, i32 2
  %bf.load1052 = load i32, i32* %code1051, align 8
  %bf.clear1053 = and i32 %bf.load1052, 255
  %cmp1054 = icmp eq i32 %bf.clear1053, 12
  br label %lor.end.1056

lor.end.1056:                                     ; preds = %lor.rhs.1049, %lor.lhs.false.1042, %lor.lhs.false.1035, %lor.end.1018
  %354 = phi i1 [ true, %lor.lhs.false.1042 ], [ true, %lor.lhs.false.1035 ], [ true, %lor.end.1018 ], [ %cmp1054, %lor.rhs.1049 ]
  %lor.ext1057 = zext i1 %354 to i32
  store i32 %lor.ext1057, i32* %inter_int, align 4
  %355 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1058 = bitcast %union.tree_node* %355 to %struct.tree_common*
  %code1059 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1058, i32 0, i32 2
  %bf.load1060 = load i32, i32* %code1059, align 8
  %bf.clear1061 = and i32 %bf.load1060, 255
  %cmp1062 = icmp eq i32 %bf.clear1061, 13
  br i1 %cmp1062, label %lor.end.1071, label %lor.rhs.1064

lor.rhs.1064:                                     ; preds = %lor.end.1056
  %356 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1065 = bitcast %union.tree_node* %356 to %struct.tree_common*
  %code1066 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1065, i32 0, i32 2
  %bf.load1067 = load i32, i32* %code1066, align 8
  %bf.clear1068 = and i32 %bf.load1067, 255
  %cmp1069 = icmp eq i32 %bf.clear1068, 15
  br label %lor.end.1071

lor.end.1071:                                     ; preds = %lor.rhs.1064, %lor.end.1056
  %357 = phi i1 [ true, %lor.end.1056 ], [ %cmp1069, %lor.rhs.1064 ]
  %lor.ext1072 = zext i1 %357 to i32
  store i32 %lor.ext1072, i32* %inter_ptr, align 4
  %358 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1073 = bitcast %union.tree_node* %358 to %struct.tree_common*
  %code1074 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1073, i32 0, i32 2
  %bf.load1075 = load i32, i32* %code1074, align 8
  %bf.clear1076 = and i32 %bf.load1075, 255
  %cmp1077 = icmp eq i32 %bf.clear1076, 7
  br i1 %cmp1077, label %lor.end.1096, label %lor.rhs.1079

lor.rhs.1079:                                     ; preds = %lor.end.1071
  %359 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1080 = bitcast %union.tree_node* %359 to %struct.tree_common*
  %code1081 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1080, i32 0, i32 2
  %bf.load1082 = load i32, i32* %code1081, align 8
  %bf.clear1083 = and i32 %bf.load1082, 255
  %cmp1084 = icmp eq i32 %bf.clear1083, 8
  br i1 %cmp1084, label %land.rhs.1086, label %land.end.1095

land.rhs.1086:                                    ; preds = %lor.rhs.1079
  %360 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1087 = bitcast %union.tree_node* %360 to %struct.tree_common*
  %type1088 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1087, i32 0, i32 1
  %361 = load %union.tree_node*, %union.tree_node** %type1088, align 8
  %common1089 = bitcast %union.tree_node* %361 to %struct.tree_common*
  %code1090 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1089, i32 0, i32 2
  %bf.load1091 = load i32, i32* %code1090, align 8
  %bf.clear1092 = and i32 %bf.load1091, 255
  %cmp1093 = icmp eq i32 %bf.clear1092, 7
  br label %land.end.1095

land.end.1095:                                    ; preds = %land.rhs.1086, %lor.rhs.1079
  %362 = phi i1 [ false, %lor.rhs.1079 ], [ %cmp1093, %land.rhs.1086 ]
  br label %lor.end.1096

lor.end.1096:                                     ; preds = %land.end.1095, %lor.end.1071
  %363 = phi i1 [ true, %lor.end.1071 ], [ %362, %land.end.1095 ]
  %lor.ext1097 = zext i1 %363 to i32
  store i32 %lor.ext1097, i32* %inter_float, align 4
  %364 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %type1098 = bitcast %union.tree_node* %364 to %struct.tree_type*
  %precision1099 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1098, i32 0, i32 6
  %bf.load1100 = load i32, i32* %precision1099, align 4
  %bf.clear1101 = and i32 %bf.load1100, 511
  store i32 %bf.clear1101, i32* %inter_prec, align 4
  %365 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %common1102 = bitcast %union.tree_node* %365 to %struct.tree_common*
  %unsigned_flag1103 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1102, i32 0, i32 2
  %bf.load1104 = load i32, i32* %unsigned_flag1103, align 8
  %bf.lshr1105 = lshr i32 %bf.load1104, 13
  %bf.clear1106 = and i32 %bf.lshr1105, 1
  store i32 %bf.clear1106, i32* %inter_unsignedp, align 4
  %366 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1107 = bitcast %union.tree_node* %366 to %struct.tree_common*
  %code1108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1107, i32 0, i32 2
  %bf.load1109 = load i32, i32* %code1108, align 8
  %bf.clear1110 = and i32 %bf.load1109, 255
  %cmp1111 = icmp eq i32 %bf.clear1110, 6
  br i1 %cmp1111, label %lor.end.1134, label %lor.lhs.false.1113

lor.lhs.false.1113:                               ; preds = %lor.end.1096
  %367 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1114 = bitcast %union.tree_node* %367 to %struct.tree_common*
  %code1115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1114, i32 0, i32 2
  %bf.load1116 = load i32, i32* %code1115, align 8
  %bf.clear1117 = and i32 %bf.load1116, 255
  %cmp1118 = icmp eq i32 %bf.clear1117, 10
  br i1 %cmp1118, label %lor.end.1134, label %lor.lhs.false.1120

lor.lhs.false.1120:                               ; preds = %lor.lhs.false.1113
  %368 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1121 = bitcast %union.tree_node* %368 to %struct.tree_common*
  %code1122 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1121, i32 0, i32 2
  %bf.load1123 = load i32, i32* %code1122, align 8
  %bf.clear1124 = and i32 %bf.load1123, 255
  %cmp1125 = icmp eq i32 %bf.clear1124, 11
  br i1 %cmp1125, label %lor.end.1134, label %lor.rhs.1127

lor.rhs.1127:                                     ; preds = %lor.lhs.false.1120
  %369 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1128 = bitcast %union.tree_node* %369 to %struct.tree_common*
  %code1129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1128, i32 0, i32 2
  %bf.load1130 = load i32, i32* %code1129, align 8
  %bf.clear1131 = and i32 %bf.load1130, 255
  %cmp1132 = icmp eq i32 %bf.clear1131, 12
  br label %lor.end.1134

lor.end.1134:                                     ; preds = %lor.rhs.1127, %lor.lhs.false.1120, %lor.lhs.false.1113, %lor.end.1096
  %370 = phi i1 [ true, %lor.lhs.false.1120 ], [ true, %lor.lhs.false.1113 ], [ true, %lor.end.1096 ], [ %cmp1132, %lor.rhs.1127 ]
  %lor.ext1135 = zext i1 %370 to i32
  store i32 %lor.ext1135, i32* %final_int, align 4
  %371 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1136 = bitcast %union.tree_node* %371 to %struct.tree_common*
  %code1137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1136, i32 0, i32 2
  %bf.load1138 = load i32, i32* %code1137, align 8
  %bf.clear1139 = and i32 %bf.load1138, 255
  %cmp1140 = icmp eq i32 %bf.clear1139, 13
  br i1 %cmp1140, label %lor.end.1149, label %lor.rhs.1142

lor.rhs.1142:                                     ; preds = %lor.end.1134
  %372 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1143 = bitcast %union.tree_node* %372 to %struct.tree_common*
  %code1144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1143, i32 0, i32 2
  %bf.load1145 = load i32, i32* %code1144, align 8
  %bf.clear1146 = and i32 %bf.load1145, 255
  %cmp1147 = icmp eq i32 %bf.clear1146, 15
  br label %lor.end.1149

lor.end.1149:                                     ; preds = %lor.rhs.1142, %lor.end.1134
  %373 = phi i1 [ true, %lor.end.1134 ], [ %cmp1147, %lor.rhs.1142 ]
  %lor.ext1150 = zext i1 %373 to i32
  store i32 %lor.ext1150, i32* %final_ptr, align 4
  %374 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1151 = bitcast %union.tree_node* %374 to %struct.tree_common*
  %code1152 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1151, i32 0, i32 2
  %bf.load1153 = load i32, i32* %code1152, align 8
  %bf.clear1154 = and i32 %bf.load1153, 255
  %cmp1155 = icmp eq i32 %bf.clear1154, 7
  br i1 %cmp1155, label %lor.end.1174, label %lor.rhs.1157

lor.rhs.1157:                                     ; preds = %lor.end.1149
  %375 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1158 = bitcast %union.tree_node* %375 to %struct.tree_common*
  %code1159 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1158, i32 0, i32 2
  %bf.load1160 = load i32, i32* %code1159, align 8
  %bf.clear1161 = and i32 %bf.load1160, 255
  %cmp1162 = icmp eq i32 %bf.clear1161, 8
  br i1 %cmp1162, label %land.rhs.1164, label %land.end.1173

land.rhs.1164:                                    ; preds = %lor.rhs.1157
  %376 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1165 = bitcast %union.tree_node* %376 to %struct.tree_common*
  %type1166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1165, i32 0, i32 1
  %377 = load %union.tree_node*, %union.tree_node** %type1166, align 8
  %common1167 = bitcast %union.tree_node* %377 to %struct.tree_common*
  %code1168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1167, i32 0, i32 2
  %bf.load1169 = load i32, i32* %code1168, align 8
  %bf.clear1170 = and i32 %bf.load1169, 255
  %cmp1171 = icmp eq i32 %bf.clear1170, 7
  br label %land.end.1173

land.end.1173:                                    ; preds = %land.rhs.1164, %lor.rhs.1157
  %378 = phi i1 [ false, %lor.rhs.1157 ], [ %cmp1171, %land.rhs.1164 ]
  br label %lor.end.1174

lor.end.1174:                                     ; preds = %land.end.1173, %lor.end.1149
  %379 = phi i1 [ true, %lor.end.1149 ], [ %378, %land.end.1173 ]
  %lor.ext1175 = zext i1 %379 to i32
  store i32 %lor.ext1175, i32* %final_float, align 4
  %380 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1176 = bitcast %union.tree_node* %380 to %struct.tree_type*
  %precision1177 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1176, i32 0, i32 6
  %bf.load1178 = load i32, i32* %precision1177, align 4
  %bf.clear1179 = and i32 %bf.load1178, 511
  store i32 %bf.clear1179, i32* %final_prec, align 4
  %381 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %common1180 = bitcast %union.tree_node* %381 to %struct.tree_common*
  %unsigned_flag1181 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1180, i32 0, i32 2
  %bf.load1182 = load i32, i32* %unsigned_flag1181, align 8
  %bf.lshr1183 = lshr i32 %bf.load1182, 13
  %bf.clear1184 = and i32 %bf.lshr1183, 1
  store i32 %bf.clear1184, i32* %final_unsignedp, align 4
  %382 = load %union.tree_node*, %union.tree_node** %inside_type, align 8
  %type1185 = bitcast %union.tree_node* %382 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1185, i32 0, i32 15
  %383 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %384 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1186 = bitcast %union.tree_node* %384 to %struct.tree_type*
  %main_variant1187 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1186, i32 0, i32 15
  %385 = load %union.tree_node*, %union.tree_node** %main_variant1187, align 8
  %cmp1188 = icmp eq %union.tree_node* %383, %385
  br i1 %cmp1188, label %land.lhs.true.1190, label %if.end.1209

land.lhs.true.1190:                               ; preds = %lor.end.1174
  %386 = load i32, i32* %inter_int, align 4
  %tobool1191 = icmp ne i32 %386, 0
  br i1 %tobool1191, label %land.lhs.true.1192, label %lor.lhs.false.1194

land.lhs.true.1192:                               ; preds = %land.lhs.true.1190
  %387 = load i32, i32* %final_int, align 4
  %tobool1193 = icmp ne i32 %387, 0
  br i1 %tobool1193, label %land.lhs.true.1198, label %lor.lhs.false.1194

lor.lhs.false.1194:                               ; preds = %land.lhs.true.1192, %land.lhs.true.1190
  %388 = load i32, i32* %inter_float, align 4
  %tobool1195 = icmp ne i32 %388, 0
  br i1 %tobool1195, label %land.lhs.true.1196, label %if.end.1209

land.lhs.true.1196:                               ; preds = %lor.lhs.false.1194
  %389 = load i32, i32* %final_float, align 4
  %tobool1197 = icmp ne i32 %389, 0
  br i1 %tobool1197, label %land.lhs.true.1198, label %if.end.1209

land.lhs.true.1198:                               ; preds = %land.lhs.true.1196, %land.lhs.true.1192
  %390 = load i32, i32* %inter_prec, align 4
  %391 = load i32, i32* %final_prec, align 4
  %cmp1199 = icmp uge i32 %390, %391
  br i1 %cmp1199, label %if.then.1201, label %if.end.1209

if.then.1201:                                     ; preds = %land.lhs.true.1198
  %392 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %393 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1202 = bitcast %union.tree_node* %393 to %struct.tree_exp*
  %operands1203 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1202, i32 0, i32 2
  %arrayidx1204 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1203, i32 0, i64 0
  %394 = load %union.tree_node*, %union.tree_node** %arrayidx1204, align 8
  %exp1205 = bitcast %union.tree_node* %394 to %struct.tree_exp*
  %operands1206 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1205, i32 0, i32 2
  %arrayidx1207 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1206, i32 0, i64 0
  %395 = load %union.tree_node*, %union.tree_node** %arrayidx1207, align 8
  %call1208 = call %union.tree_node* @convert(%union.tree_node* %392, %union.tree_node* %395)
  store %union.tree_node* %call1208, %union.tree_node** %retval
  br label %return

if.end.1209:                                      ; preds = %land.lhs.true.1198, %land.lhs.true.1196, %lor.lhs.false.1194, %lor.end.1174
  %396 = load i32, i32* %inter_int, align 4
  %tobool1210 = icmp ne i32 %396, 0
  br i1 %tobool1210, label %land.lhs.true.1213, label %lor.lhs.false.1211

lor.lhs.false.1211:                               ; preds = %if.end.1209
  %397 = load i32, i32* %inter_ptr, align 4
  %tobool1212 = icmp ne i32 %397, 0
  br i1 %tobool1212, label %land.lhs.true.1213, label %lor.lhs.false.1217

land.lhs.true.1213:                               ; preds = %lor.lhs.false.1211, %if.end.1209
  %398 = load i32, i32* %inside_int, align 4
  %tobool1214 = icmp ne i32 %398, 0
  br i1 %tobool1214, label %land.lhs.true.1221, label %lor.lhs.false.1215

lor.lhs.false.1215:                               ; preds = %land.lhs.true.1213
  %399 = load i32, i32* %inside_ptr, align 4
  %tobool1216 = icmp ne i32 %399, 0
  br i1 %tobool1216, label %land.lhs.true.1221, label %lor.lhs.false.1217

lor.lhs.false.1217:                               ; preds = %lor.lhs.false.1215, %lor.lhs.false.1211
  %400 = load i32, i32* %inter_float, align 4
  %tobool1218 = icmp ne i32 %400, 0
  br i1 %tobool1218, label %land.lhs.true.1219, label %if.end.1263

land.lhs.true.1219:                               ; preds = %lor.lhs.false.1217
  %401 = load i32, i32* %inside_float, align 4
  %tobool1220 = icmp ne i32 %401, 0
  br i1 %tobool1220, label %land.lhs.true.1221, label %if.end.1263

land.lhs.true.1221:                               ; preds = %land.lhs.true.1219, %lor.lhs.false.1215, %land.lhs.true.1213
  %402 = load i32, i32* %inter_prec, align 4
  %403 = load i32, i32* %inside_prec, align 4
  %cmp1222 = icmp uge i32 %402, %403
  br i1 %cmp1222, label %land.lhs.true.1224, label %if.end.1263

land.lhs.true.1224:                               ; preds = %land.lhs.true.1221
  %404 = load i32, i32* %inter_float, align 4
  %tobool1225 = icmp ne i32 %404, 0
  br i1 %tobool1225, label %land.lhs.true.1229, label %lor.lhs.false.1226

lor.lhs.false.1226:                               ; preds = %land.lhs.true.1224
  %405 = load i32, i32* %inter_unsignedp, align 4
  %406 = load i32, i32* %inside_unsignedp, align 4
  %cmp1227 = icmp eq i32 %405, %406
  br i1 %cmp1227, label %land.lhs.true.1229, label %if.end.1263

land.lhs.true.1229:                               ; preds = %lor.lhs.false.1226, %land.lhs.true.1224
  %407 = load i32, i32* %final_prec, align 4
  %408 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1230 = bitcast %union.tree_node* %408 to %struct.tree_type*
  %mode1231 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1230, i32 0, i32 6
  %bf.load1232 = load i32, i32* %mode1231, align 4
  %bf.lshr1233 = lshr i32 %bf.load1232, 9
  %bf.clear1234 = and i32 %bf.lshr1233, 127
  %idxprom1235 = sext i32 %bf.clear1234 to i64
  %arrayidx1236 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1235
  %409 = load i16, i16* %arrayidx1236, align 2
  %conv1237 = zext i16 %409 to i32
  %cmp1238 = icmp ne i32 %407, %conv1237
  br i1 %cmp1238, label %land.lhs.true.1240, label %land.lhs.true.1253

land.lhs.true.1240:                               ; preds = %land.lhs.true.1229
  %410 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1241 = bitcast %union.tree_node* %410 to %struct.tree_type*
  %mode1242 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1241, i32 0, i32 6
  %bf.load1243 = load i32, i32* %mode1242, align 4
  %bf.lshr1244 = lshr i32 %bf.load1243, 9
  %bf.clear1245 = and i32 %bf.lshr1244, 127
  %411 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %type1246 = bitcast %union.tree_node* %411 to %struct.tree_type*
  %mode1247 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1246, i32 0, i32 6
  %bf.load1248 = load i32, i32* %mode1247, align 4
  %bf.lshr1249 = lshr i32 %bf.load1248, 9
  %bf.clear1250 = and i32 %bf.lshr1249, 127
  %cmp1251 = icmp eq i32 %bf.clear1245, %bf.clear1250
  br i1 %cmp1251, label %if.end.1263, label %land.lhs.true.1253

land.lhs.true.1253:                               ; preds = %land.lhs.true.1240, %land.lhs.true.1229
  %412 = load i32, i32* %final_ptr, align 4
  %tobool1254 = icmp ne i32 %412, 0
  br i1 %tobool1254, label %if.end.1263, label %if.then.1255

if.then.1255:                                     ; preds = %land.lhs.true.1253
  %413 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %414 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1256 = bitcast %union.tree_node* %414 to %struct.tree_exp*
  %operands1257 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1256, i32 0, i32 2
  %arrayidx1258 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1257, i32 0, i64 0
  %415 = load %union.tree_node*, %union.tree_node** %arrayidx1258, align 8
  %exp1259 = bitcast %union.tree_node* %415 to %struct.tree_exp*
  %operands1260 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1259, i32 0, i32 2
  %arrayidx1261 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1260, i32 0, i64 0
  %416 = load %union.tree_node*, %union.tree_node** %arrayidx1261, align 8
  %call1262 = call %union.tree_node* @convert(%union.tree_node* %413, %union.tree_node* %416)
  store %union.tree_node* %call1262, %union.tree_node** %retval
  br label %return

if.end.1263:                                      ; preds = %land.lhs.true.1253, %land.lhs.true.1240, %lor.lhs.false.1226, %land.lhs.true.1221, %land.lhs.true.1219, %lor.lhs.false.1217
  %417 = load i32, i32* %inside_int, align 4
  %tobool1264 = icmp ne i32 %417, 0
  br i1 %tobool1264, label %land.lhs.true.1265, label %if.end.1287

land.lhs.true.1265:                               ; preds = %if.end.1263
  %418 = load i32, i32* %inter_int, align 4
  %tobool1266 = icmp ne i32 %418, 0
  br i1 %tobool1266, label %land.lhs.true.1267, label %if.end.1287

land.lhs.true.1267:                               ; preds = %land.lhs.true.1265
  %419 = load i32, i32* %final_int, align 4
  %tobool1268 = icmp ne i32 %419, 0
  br i1 %tobool1268, label %land.lhs.true.1269, label %if.end.1287

land.lhs.true.1269:                               ; preds = %land.lhs.true.1267
  %420 = load i32, i32* %inside_prec, align 4
  %421 = load i32, i32* %inter_prec, align 4
  %cmp1270 = icmp ult i32 %420, %421
  br i1 %cmp1270, label %land.lhs.true.1272, label %if.end.1287

land.lhs.true.1272:                               ; preds = %land.lhs.true.1269
  %422 = load i32, i32* %inter_prec, align 4
  %423 = load i32, i32* %final_prec, align 4
  %cmp1273 = icmp ult i32 %422, %423
  br i1 %cmp1273, label %land.lhs.true.1275, label %if.end.1287

land.lhs.true.1275:                               ; preds = %land.lhs.true.1272
  %424 = load i32, i32* %inside_unsignedp, align 4
  %tobool1276 = icmp ne i32 %424, 0
  br i1 %tobool1276, label %land.lhs.true.1277, label %if.end.1287

land.lhs.true.1277:                               ; preds = %land.lhs.true.1275
  %425 = load i32, i32* %inter_unsignedp, align 4
  %tobool1278 = icmp ne i32 %425, 0
  br i1 %tobool1278, label %if.end.1287, label %if.then.1279

if.then.1279:                                     ; preds = %land.lhs.true.1277
  %426 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %427 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1280 = bitcast %union.tree_node* %427 to %struct.tree_exp*
  %operands1281 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1280, i32 0, i32 2
  %arrayidx1282 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1281, i32 0, i64 0
  %428 = load %union.tree_node*, %union.tree_node** %arrayidx1282, align 8
  %exp1283 = bitcast %union.tree_node* %428 to %struct.tree_exp*
  %operands1284 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1283, i32 0, i32 2
  %arrayidx1285 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1284, i32 0, i64 0
  %429 = load %union.tree_node*, %union.tree_node** %arrayidx1285, align 8
  %call1286 = call %union.tree_node* @convert(%union.tree_node* %426, %union.tree_node* %429)
  store %union.tree_node* %call1286, %union.tree_node** %retval
  br label %return

if.end.1287:                                      ; preds = %land.lhs.true.1277, %land.lhs.true.1275, %land.lhs.true.1272, %land.lhs.true.1269, %land.lhs.true.1267, %land.lhs.true.1265, %if.end.1263
  %430 = load i32, i32* %inside_float, align 4
  %tobool1288 = icmp ne i32 %430, 0
  br i1 %tobool1288, label %if.end.1367, label %land.lhs.true.1289

land.lhs.true.1289:                               ; preds = %if.end.1287
  %431 = load i32, i32* %inter_float, align 4
  %tobool1290 = icmp ne i32 %431, 0
  br i1 %tobool1290, label %if.end.1367, label %land.lhs.true.1291

land.lhs.true.1291:                               ; preds = %land.lhs.true.1289
  %432 = load i32, i32* %final_float, align 4
  %tobool1292 = icmp ne i32 %432, 0
  br i1 %tobool1292, label %if.end.1367, label %land.lhs.true.1293

land.lhs.true.1293:                               ; preds = %land.lhs.true.1291
  %433 = load i32, i32* %inter_prec, align 4
  %434 = load i32, i32* %inside_prec, align 4
  %cmp1294 = icmp ugt i32 %433, %434
  br i1 %cmp1294, label %land.lhs.true.1299, label %lor.lhs.false.1296

lor.lhs.false.1296:                               ; preds = %land.lhs.true.1293
  %435 = load i32, i32* %inter_prec, align 4
  %436 = load i32, i32* %final_prec, align 4
  %cmp1297 = icmp ugt i32 %435, %436
  br i1 %cmp1297, label %land.lhs.true.1299, label %if.end.1367

land.lhs.true.1299:                               ; preds = %lor.lhs.false.1296, %land.lhs.true.1293
  %437 = load i32, i32* %inside_int, align 4
  %tobool1300 = icmp ne i32 %437, 0
  br i1 %tobool1300, label %land.lhs.true.1301, label %land.lhs.true.1309

land.lhs.true.1301:                               ; preds = %land.lhs.true.1299
  %438 = load i32, i32* %inter_int, align 4
  %tobool1302 = icmp ne i32 %438, 0
  br i1 %tobool1302, label %land.lhs.true.1303, label %land.lhs.true.1309

land.lhs.true.1303:                               ; preds = %land.lhs.true.1301
  %439 = load i32, i32* %inter_unsignedp, align 4
  %440 = load i32, i32* %inside_unsignedp, align 4
  %cmp1304 = icmp ne i32 %439, %440
  br i1 %cmp1304, label %land.lhs.true.1306, label %land.lhs.true.1309

land.lhs.true.1306:                               ; preds = %land.lhs.true.1303
  %441 = load i32, i32* %inter_prec, align 4
  %442 = load i32, i32* %final_prec, align 4
  %cmp1307 = icmp ult i32 %441, %442
  br i1 %cmp1307, label %if.end.1367, label %land.lhs.true.1309

land.lhs.true.1309:                               ; preds = %land.lhs.true.1306, %land.lhs.true.1303, %land.lhs.true.1301, %land.lhs.true.1299
  %443 = load i32, i32* %inter_unsignedp, align 4
  %tobool1310 = icmp ne i32 %443, 0
  br i1 %tobool1310, label %land.rhs.1311, label %land.end.1314

land.rhs.1311:                                    ; preds = %land.lhs.true.1309
  %444 = load i32, i32* %inter_prec, align 4
  %445 = load i32, i32* %inside_prec, align 4
  %cmp1312 = icmp ugt i32 %444, %445
  br label %land.end.1314

land.end.1314:                                    ; preds = %land.rhs.1311, %land.lhs.true.1309
  %446 = phi i1 [ false, %land.lhs.true.1309 ], [ %cmp1312, %land.rhs.1311 ]
  %land.ext = zext i1 %446 to i32
  %447 = load i32, i32* %final_unsignedp, align 4
  %tobool1315 = icmp ne i32 %447, 0
  br i1 %tobool1315, label %land.rhs.1316, label %land.end.1319

land.rhs.1316:                                    ; preds = %land.end.1314
  %448 = load i32, i32* %final_prec, align 4
  %449 = load i32, i32* %inter_prec, align 4
  %cmp1317 = icmp ugt i32 %448, %449
  br label %land.end.1319

land.end.1319:                                    ; preds = %land.rhs.1316, %land.end.1314
  %450 = phi i1 [ false, %land.end.1314 ], [ %cmp1317, %land.rhs.1316 ]
  %land.ext1320 = zext i1 %450 to i32
  %cmp1321 = icmp eq i32 %land.ext, %land.ext1320
  br i1 %cmp1321, label %land.lhs.true.1323, label %if.end.1367

land.lhs.true.1323:                               ; preds = %land.end.1319
  %451 = load i32, i32* %inside_ptr, align 4
  %tobool1324 = icmp ne i32 %451, 0
  br i1 %tobool1324, label %land.lhs.true.1325, label %land.lhs.true.1328

land.lhs.true.1325:                               ; preds = %land.lhs.true.1323
  %452 = load i32, i32* %inter_prec, align 4
  %453 = load i32, i32* %final_prec, align 4
  %cmp1326 = icmp ne i32 %452, %453
  br i1 %cmp1326, label %if.end.1367, label %land.lhs.true.1328

land.lhs.true.1328:                               ; preds = %land.lhs.true.1325, %land.lhs.true.1323
  %454 = load i32, i32* %final_ptr, align 4
  %tobool1329 = icmp ne i32 %454, 0
  br i1 %tobool1329, label %land.lhs.true.1330, label %land.lhs.true.1333

land.lhs.true.1330:                               ; preds = %land.lhs.true.1328
  %455 = load i32, i32* %inside_prec, align 4
  %456 = load i32, i32* %inter_prec, align 4
  %cmp1331 = icmp ne i32 %455, %456
  br i1 %cmp1331, label %if.end.1367, label %land.lhs.true.1333

land.lhs.true.1333:                               ; preds = %land.lhs.true.1330, %land.lhs.true.1328
  %457 = load i32, i32* %final_prec, align 4
  %458 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1334 = bitcast %union.tree_node* %458 to %struct.tree_type*
  %mode1335 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1334, i32 0, i32 6
  %bf.load1336 = load i32, i32* %mode1335, align 4
  %bf.lshr1337 = lshr i32 %bf.load1336, 9
  %bf.clear1338 = and i32 %bf.lshr1337, 127
  %idxprom1339 = sext i32 %bf.clear1338 to i64
  %arrayidx1340 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom1339
  %459 = load i16, i16* %arrayidx1340, align 2
  %conv1341 = zext i16 %459 to i32
  %cmp1342 = icmp ne i32 %457, %conv1341
  br i1 %cmp1342, label %land.lhs.true.1344, label %land.lhs.true.1357

land.lhs.true.1344:                               ; preds = %land.lhs.true.1333
  %460 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %type1345 = bitcast %union.tree_node* %460 to %struct.tree_type*
  %mode1346 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1345, i32 0, i32 6
  %bf.load1347 = load i32, i32* %mode1346, align 4
  %bf.lshr1348 = lshr i32 %bf.load1347, 9
  %bf.clear1349 = and i32 %bf.lshr1348, 127
  %461 = load %union.tree_node*, %union.tree_node** %inter_type, align 8
  %type1350 = bitcast %union.tree_node* %461 to %struct.tree_type*
  %mode1351 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1350, i32 0, i32 6
  %bf.load1352 = load i32, i32* %mode1351, align 4
  %bf.lshr1353 = lshr i32 %bf.load1352, 9
  %bf.clear1354 = and i32 %bf.lshr1353, 127
  %cmp1355 = icmp eq i32 %bf.clear1349, %bf.clear1354
  br i1 %cmp1355, label %if.end.1367, label %land.lhs.true.1357

land.lhs.true.1357:                               ; preds = %land.lhs.true.1344, %land.lhs.true.1333
  %462 = load i32, i32* %final_ptr, align 4
  %tobool1358 = icmp ne i32 %462, 0
  br i1 %tobool1358, label %if.end.1367, label %if.then.1359

if.then.1359:                                     ; preds = %land.lhs.true.1357
  %463 = load %union.tree_node*, %union.tree_node** %final_type, align 8
  %464 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1360 = bitcast %union.tree_node* %464 to %struct.tree_exp*
  %operands1361 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1360, i32 0, i32 2
  %arrayidx1362 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1361, i32 0, i64 0
  %465 = load %union.tree_node*, %union.tree_node** %arrayidx1362, align 8
  %exp1363 = bitcast %union.tree_node* %465 to %struct.tree_exp*
  %operands1364 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1363, i32 0, i32 2
  %arrayidx1365 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1364, i32 0, i64 0
  %466 = load %union.tree_node*, %union.tree_node** %arrayidx1365, align 8
  %call1366 = call %union.tree_node* @convert(%union.tree_node* %463, %union.tree_node* %466)
  store %union.tree_node* %call1366, %union.tree_node** %retval
  br label %return

if.end.1367:                                      ; preds = %land.lhs.true.1357, %land.lhs.true.1344, %land.lhs.true.1330, %land.lhs.true.1325, %land.end.1319, %land.lhs.true.1306, %lor.lhs.false.1296, %land.lhs.true.1291, %land.lhs.true.1289, %if.end.1287
  br label %if.end.1368

if.end.1368:                                      ; preds = %if.end.1367, %lor.lhs.false.928
  %467 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1369 = bitcast %union.tree_node* %467 to %struct.tree_exp*
  %operands1370 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1369, i32 0, i32 2
  %arrayidx1371 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1370, i32 0, i64 0
  %468 = load %union.tree_node*, %union.tree_node** %arrayidx1371, align 8
  %common1372 = bitcast %union.tree_node* %468 to %struct.tree_common*
  %code1373 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1372, i32 0, i32 2
  %bf.load1374 = load i32, i32* %code1373, align 8
  %bf.clear1375 = and i32 %bf.load1374, 255
  %cmp1376 = icmp eq i32 %bf.clear1375, 48
  br i1 %cmp1376, label %land.lhs.true.1378, label %if.end.1435

land.lhs.true.1378:                               ; preds = %if.end.1368
  %469 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1379 = bitcast %union.tree_node* %469 to %struct.tree_exp*
  %operands1380 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1379, i32 0, i32 2
  %arrayidx1381 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1380, i32 0, i64 0
  %470 = load %union.tree_node*, %union.tree_node** %arrayidx1381, align 8
  %exp1382 = bitcast %union.tree_node* %470 to %struct.tree_exp*
  %operands1383 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1382, i32 0, i32 2
  %arrayidx1384 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1383, i32 0, i64 1
  %471 = load %union.tree_node*, %union.tree_node** %arrayidx1384, align 8
  %common1385 = bitcast %union.tree_node* %471 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1385, i32 0, i32 2
  %bf.load1386 = load i32, i32* %constant_flag, align 8
  %bf.lshr1387 = lshr i32 %bf.load1386, 9
  %bf.clear1388 = and i32 %bf.lshr1387, 1
  %tobool1389 = icmp ne i32 %bf.clear1388, 0
  br i1 %tobool1389, label %land.lhs.true.1390, label %if.end.1435

land.lhs.true.1390:                               ; preds = %land.lhs.true.1378
  %472 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1391 = bitcast %union.tree_node* %472 to %struct.tree_exp*
  %operands1392 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1391, i32 0, i32 2
  %arrayidx1393 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1392, i32 0, i64 0
  %473 = load %union.tree_node*, %union.tree_node** %arrayidx1393, align 8
  %exp1394 = bitcast %union.tree_node* %473 to %struct.tree_exp*
  %operands1395 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1394, i32 0, i32 2
  %arrayidx1396 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1395, i32 0, i64 0
  %474 = load %union.tree_node*, %union.tree_node** %arrayidx1396, align 8
  %common1397 = bitcast %union.tree_node* %474 to %struct.tree_common*
  %code1398 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1397, i32 0, i32 2
  %bf.load1399 = load i32, i32* %code1398, align 8
  %bf.clear1400 = and i32 %bf.load1399, 255
  %cmp1401 = icmp eq i32 %bf.clear1400, 39
  br i1 %cmp1401, label %land.lhs.true.1403, label %if.then.1418

land.lhs.true.1403:                               ; preds = %land.lhs.true.1390
  %475 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1404 = bitcast %union.tree_node* %475 to %struct.tree_exp*
  %operands1405 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1404, i32 0, i32 2
  %arrayidx1406 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1405, i32 0, i64 0
  %476 = load %union.tree_node*, %union.tree_node** %arrayidx1406, align 8
  %exp1407 = bitcast %union.tree_node* %476 to %struct.tree_exp*
  %operands1408 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1407, i32 0, i32 2
  %arrayidx1409 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1408, i32 0, i64 0
  %477 = load %union.tree_node*, %union.tree_node** %arrayidx1409, align 8
  %exp1410 = bitcast %union.tree_node* %477 to %struct.tree_exp*
  %operands1411 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1410, i32 0, i32 2
  %arrayidx1412 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1411, i32 0, i64 1
  %478 = load %union.tree_node*, %union.tree_node** %arrayidx1412, align 8
  %decl1413 = bitcast %union.tree_node* %478 to %struct.tree_decl*
  %bit_field_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1413, i32 0, i32 5
  %479 = bitcast i48* %bit_field_flag to i64*
  %bf.load1414 = load i64, i64* %479, align 8
  %bf.lshr1415 = lshr i64 %bf.load1414, 12
  %bf.clear1416 = and i64 %bf.lshr1415, 1
  %bf.cast = trunc i64 %bf.clear1416 to i32
  %tobool1417 = icmp ne i32 %bf.cast, 0
  br i1 %tobool1417, label %if.end.1435, label %if.then.1418

if.then.1418:                                     ; preds = %land.lhs.true.1403, %land.lhs.true.1390
  %480 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1419 = bitcast %union.tree_node* %480 to %struct.tree_exp*
  %operands1420 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1419, i32 0, i32 2
  %arrayidx1421 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1420, i32 0, i64 0
  %481 = load %union.tree_node*, %union.tree_node** %arrayidx1421, align 8
  store %union.tree_node* %481, %union.tree_node** %prev, align 8
  %482 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %exp1422 = bitcast %union.tree_node* %482 to %struct.tree_exp*
  %operands1423 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1422, i32 0, i32 2
  %arrayidx1424 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1423, i32 0, i64 1
  %483 = load %union.tree_node*, %union.tree_node** %arrayidx1424, align 8
  %484 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1425 = bitcast %union.tree_node* %484 to %struct.tree_exp*
  %operands1426 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1425, i32 0, i32 2
  %arrayidx1427 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1426, i32 0, i64 0
  store %union.tree_node* %483, %union.tree_node** %arrayidx1427, align 8
  %485 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1428 = bitcast %union.tree_node* %485 to %struct.tree_common*
  %type1429 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1428, i32 0, i32 1
  %486 = load %union.tree_node*, %union.tree_node** %type1429, align 8
  %487 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %488 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call1430 = call %union.tree_node* @fold(%union.tree_node* %488)
  %call1431 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %486, %union.tree_node* %487, %union.tree_node* %call1430)
  store %union.tree_node* %call1431, %union.tree_node** %t, align 8
  %489 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1432 = bitcast %union.tree_node* %489 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1432, i32 0, i32 2
  %bf.load1433 = load i32, i32* %used_flag, align 8
  %bf.clear1434 = and i32 %bf.load1433, -65537
  %bf.set = or i32 %bf.clear1434, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  %490 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %490, %union.tree_node** %retval
  br label %return

if.end.1435:                                      ; preds = %land.lhs.true.1403, %land.lhs.true.1378, %if.end.1368
  %491 = load i32, i32* %wins, align 4
  %tobool1436 = icmp ne i32 %491, 0
  br i1 %tobool1436, label %if.end.1448, label %if.then.1437

if.then.1437:                                     ; preds = %if.end.1435
  %492 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1438 = bitcast %union.tree_node* %492 to %struct.tree_common*
  %constant_flag1439 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1438, i32 0, i32 2
  %bf.load1440 = load i32, i32* %constant_flag1439, align 8
  %bf.lshr1441 = lshr i32 %bf.load1440, 9
  %bf.clear1442 = and i32 %bf.lshr1441, 1
  %493 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1443 = bitcast %union.tree_node* %493 to %struct.tree_common*
  %constant_flag1444 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1443, i32 0, i32 2
  %bf.load1445 = load i32, i32* %constant_flag1444, align 8
  %bf.value = and i32 %bf.clear1442, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear1446 = and i32 %bf.load1445, -513
  %bf.set1447 = or i32 %bf.clear1446, %bf.shl
  store i32 %bf.set1447, i32* %constant_flag1444, align 8
  %494 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %494, %union.tree_node** %retval
  br label %return

if.end.1448:                                      ; preds = %if.end.1435
  %495 = load %union.tree_node*, %union.tree_node** %t, align 8
  %496 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call1449 = call %union.tree_node* @fold_convert(%union.tree_node* %495, %union.tree_node* %496)
  store %union.tree_node* %call1449, %union.tree_node** %retval
  br label %return

sw.bb.1450:                                       ; preds = %if.end.901
  %497 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1451 = bitcast %union.tree_node* %497 to %struct.tree_exp*
  %operands1452 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1451, i32 0, i32 2
  %arrayidx1453 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1452, i32 0, i64 0
  %498 = load %union.tree_node*, %union.tree_node** %arrayidx1453, align 8
  %common1454 = bitcast %union.tree_node* %498 to %struct.tree_common*
  %code1455 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1454, i32 0, i32 2
  %bf.load1456 = load i32, i32* %code1455, align 8
  %bf.clear1457 = and i32 %bf.load1456, 255
  %cmp1458 = icmp eq i32 %bf.clear1457, 117
  br i1 %cmp1458, label %if.then.1460, label %if.end.1468

if.then.1460:                                     ; preds = %sw.bb.1450
  %499 = load %union.tree_node*, %union.tree_node** %type, align 8
  %500 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp1461 = bitcast %union.tree_node* %500 to %struct.tree_exp*
  %operands1462 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1461, i32 0, i32 2
  %arrayidx1463 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1462, i32 0, i64 0
  %501 = load %union.tree_node*, %union.tree_node** %arrayidx1463, align 8
  %exp1464 = bitcast %union.tree_node* %501 to %struct.tree_exp*
  %operands1465 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1464, i32 0, i32 2
  %arrayidx1466 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1465, i32 0, i64 0
  %502 = load %union.tree_node*, %union.tree_node** %arrayidx1466, align 8
  %call1467 = call %union.tree_node* @build1(i32 117, %union.tree_node* %499, %union.tree_node* %502)
  store %union.tree_node* %call1467, %union.tree_node** %retval
  br label %return

if.end.1468:                                      ; preds = %sw.bb.1450
  %503 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %503, %union.tree_node** %retval
  br label %return

sw.bb.1469:                                       ; preds = %if.end.901
  %504 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1470 = bitcast %union.tree_node* %504 to %struct.tree_common*
  %code1471 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1470, i32 0, i32 2
  %bf.load1472 = load i32, i32* %code1471, align 8
  %bf.clear1473 = and i32 %bf.load1472, 255
  %cmp1474 = icmp eq i32 %bf.clear1473, 46
  br i1 %cmp1474, label %if.then.1476, label %if.end.1484

if.then.1476:                                     ; preds = %sw.bb.1469
  %505 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %506 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1477 = bitcast %union.tree_node* %506 to %struct.tree_exp*
  %operands1478 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1477, i32 0, i32 2
  %arrayidx1479 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1478, i32 0, i64 1
  %507 = load %union.tree_node*, %union.tree_node** %arrayidx1479, align 8
  %call1480 = call %union.tree_node* @purpose_member(%union.tree_node* %505, %union.tree_node* %507)
  store %union.tree_node* %call1480, %union.tree_node** %m, align 8
  %508 = load %union.tree_node*, %union.tree_node** %m, align 8
  %tobool1481 = icmp ne %union.tree_node* %508, null
  br i1 %tobool1481, label %if.then.1482, label %if.end.1483

if.then.1482:                                     ; preds = %if.then.1476
  %509 = load %union.tree_node*, %union.tree_node** %m, align 8
  %list = bitcast %union.tree_node* %509 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %510 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %510, %union.tree_node** %t, align 8
  br label %if.end.1483

if.end.1483:                                      ; preds = %if.then.1482, %if.then.1476
  br label %if.end.1484

if.end.1484:                                      ; preds = %if.end.1483, %sw.bb.1469
  %511 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %511, %union.tree_node** %retval
  br label %return

sw.bb.1485:                                       ; preds = %if.end.901
  %512 = load i32, i32* %wins, align 4
  %513 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1486 = bitcast %union.tree_node* %513 to %struct.tree_common*
  %constant_flag1487 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1486, i32 0, i32 2
  %bf.load1488 = load i32, i32* %constant_flag1487, align 8
  %bf.value1489 = and i32 %512, 1
  %bf.shl1490 = shl i32 %bf.value1489, 9
  %bf.clear1491 = and i32 %bf.load1488, -513
  %bf.set1492 = or i32 %bf.clear1491, %bf.shl1490
  store i32 %bf.set1492, i32* %constant_flag1487, align 8
  %514 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %514, %union.tree_node** %retval
  br label %return

sw.bb.1493:                                       ; preds = %if.end.901
  %515 = load i32, i32* %wins, align 4
  %tobool1494 = icmp ne i32 %515, 0
  br i1 %tobool1494, label %if.then.1495, label %if.else.1563

if.then.1495:                                     ; preds = %sw.bb.1493
  %516 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1496 = bitcast %union.tree_node* %516 to %struct.tree_common*
  %code1497 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1496, i32 0, i32 2
  %bf.load1498 = load i32, i32* %code1497, align 8
  %bf.clear1499 = and i32 %bf.load1498, 255
  %cmp1500 = icmp eq i32 %bf.clear1499, 25
  br i1 %cmp1500, label %if.then.1502, label %if.else.1551

if.then.1502:                                     ; preds = %if.then.1495
  %517 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst = bitcast %union.tree_node* %517 to %struct.tree_int_cst*
  %int_cst1503 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low1504 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1503, i32 0, i32 0
  %518 = load i64, i64* %low1504, align 8
  %519 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1505 = bitcast %union.tree_node* %519 to %struct.tree_int_cst*
  %int_cst1506 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1505, i32 0, i32 2
  %high1507 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1506, i32 0, i32 1
  %520 = load i64, i64* %high1507, align 8
  %call1508 = call i32 @neg_double(i64 %518, i64 %520, i64* %low, i64* %high)
  store i32 %call1508, i32* %overflow, align 4
  %521 = load i64, i64* %low, align 8
  %522 = load i64, i64* %high, align 8
  %call1509 = call %union.tree_node* @build_int_2_wide(i64 %521, i64 %522)
  store %union.tree_node* %call1509, %union.tree_node** %t, align 8
  %523 = load %union.tree_node*, %union.tree_node** %type, align 8
  %524 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1510 = bitcast %union.tree_node* %524 to %struct.tree_common*
  %type1511 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1510, i32 0, i32 1
  store %union.tree_node* %523, %union.tree_node** %type1511, align 8
  %525 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1512 = bitcast %union.tree_node* %525 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1512, i32 0, i32 2
  %bf.load1513 = load i32, i32* %public_flag, align 8
  %bf.lshr1514 = lshr i32 %bf.load1513, 19
  %bf.clear1515 = and i32 %bf.lshr1514, 1
  %526 = load %union.tree_node*, %union.tree_node** %t, align 8
  %527 = load i32, i32* %overflow, align 4
  %tobool1516 = icmp ne i32 %527, 0
  br i1 %tobool1516, label %land.rhs.1517, label %land.end.1524

land.rhs.1517:                                    ; preds = %if.then.1502
  %528 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1518 = bitcast %union.tree_node* %528 to %struct.tree_common*
  %unsigned_flag1519 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1518, i32 0, i32 2
  %bf.load1520 = load i32, i32* %unsigned_flag1519, align 8
  %bf.lshr1521 = lshr i32 %bf.load1520, 13
  %bf.clear1522 = and i32 %bf.lshr1521, 1
  %tobool1523 = icmp ne i32 %bf.clear1522, 0
  %lnot = xor i1 %tobool1523, true
  br label %land.end.1524

land.end.1524:                                    ; preds = %land.rhs.1517, %if.then.1502
  %529 = phi i1 [ false, %if.then.1502 ], [ %lnot, %land.rhs.1517 ]
  %land.ext1525 = zext i1 %529 to i32
  %call1526 = call i32 @force_fit_type(%union.tree_node* %526, i32 %land.ext1525)
  %or = or i32 %bf.clear1515, %call1526
  %530 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1527 = bitcast %union.tree_node* %530 to %struct.tree_common*
  %public_flag1528 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1527, i32 0, i32 2
  %bf.load1529 = load i32, i32* %public_flag1528, align 8
  %bf.value1530 = and i32 %or, 1
  %bf.shl1531 = shl i32 %bf.value1530, 19
  %bf.clear1532 = and i32 %bf.load1529, -524289
  %bf.set1533 = or i32 %bf.clear1532, %bf.shl1531
  store i32 %bf.set1533, i32* %public_flag1528, align 8
  %531 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1534 = bitcast %union.tree_node* %531 to %struct.tree_common*
  %public_flag1535 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1534, i32 0, i32 2
  %bf.load1536 = load i32, i32* %public_flag1535, align 8
  %bf.lshr1537 = lshr i32 %bf.load1536, 19
  %bf.clear1538 = and i32 %bf.lshr1537, 1
  %532 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1539 = bitcast %union.tree_node* %532 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1539, i32 0, i32 2
  %bf.load1540 = load i32, i32* %static_flag, align 8
  %bf.lshr1541 = lshr i32 %bf.load1540, 18
  %bf.clear1542 = and i32 %bf.lshr1541, 1
  %or1543 = or i32 %bf.clear1538, %bf.clear1542
  %533 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1544 = bitcast %union.tree_node* %533 to %struct.tree_common*
  %static_flag1545 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1544, i32 0, i32 2
  %bf.load1546 = load i32, i32* %static_flag1545, align 8
  %bf.value1547 = and i32 %or1543, 1
  %bf.shl1548 = shl i32 %bf.value1547, 18
  %bf.clear1549 = and i32 %bf.load1546, -262145
  %bf.set1550 = or i32 %bf.clear1549, %bf.shl1548
  store i32 %bf.set1550, i32* %static_flag1545, align 8
  br label %if.end.1562

if.else.1551:                                     ; preds = %if.then.1495
  %534 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1552 = bitcast %union.tree_node* %534 to %struct.tree_common*
  %code1553 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1552, i32 0, i32 2
  %bf.load1554 = load i32, i32* %code1553, align 8
  %bf.clear1555 = and i32 %bf.load1554, 255
  %cmp1556 = icmp eq i32 %bf.clear1555, 26
  br i1 %cmp1556, label %if.then.1558, label %if.end.1561

if.then.1558:                                     ; preds = %if.else.1551
  %535 = load %union.tree_node*, %union.tree_node** %type, align 8
  %536 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst = bitcast %union.tree_node* %536 to %struct.tree_real_cst*
  %real_cst1559 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst, i32 0, i32 2
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp, %struct.realvaluetype* byval align 8 %real_cst1559)
  %call1560 = call %union.tree_node* @build_real(%union.tree_node* %535, %struct.realvaluetype* byval align 8 %agg.tmp)
  store %union.tree_node* %call1560, %union.tree_node** %t, align 8
  br label %if.end.1561

if.end.1561:                                      ; preds = %if.then.1558, %if.else.1551
  br label %if.end.1562

if.end.1562:                                      ; preds = %if.end.1561, %land.end.1524
  br label %if.end.1616

if.else.1563:                                     ; preds = %sw.bb.1493
  %537 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1564 = bitcast %union.tree_node* %537 to %struct.tree_common*
  %code1565 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1564, i32 0, i32 2
  %bf.load1566 = load i32, i32* %code1565, align 8
  %bf.clear1567 = and i32 %bf.load1566, 255
  %cmp1568 = icmp eq i32 %bf.clear1567, 77
  br i1 %cmp1568, label %if.then.1570, label %if.else.1574

if.then.1570:                                     ; preds = %if.else.1563
  %538 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1571 = bitcast %union.tree_node* %538 to %struct.tree_exp*
  %operands1572 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1571, i32 0, i32 2
  %arrayidx1573 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1572, i32 0, i64 0
  %539 = load %union.tree_node*, %union.tree_node** %arrayidx1573, align 8
  store %union.tree_node* %539, %union.tree_node** %retval
  br label %return

if.else.1574:                                     ; preds = %if.else.1563
  %540 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1575 = bitcast %union.tree_node* %540 to %struct.tree_common*
  %code1576 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1575, i32 0, i32 2
  %bf.load1577 = load i32, i32* %code1576, align 8
  %bf.clear1578 = and i32 %bf.load1577, 255
  %cmp1579 = icmp eq i32 %bf.clear1578, 60
  br i1 %cmp1579, label %land.lhs.true.1581, label %if.end.1614

land.lhs.true.1581:                               ; preds = %if.else.1574
  %541 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1582 = bitcast %union.tree_node* %541 to %struct.tree_common*
  %code1583 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1582, i32 0, i32 2
  %bf.load1584 = load i32, i32* %code1583, align 8
  %bf.clear1585 = and i32 %bf.load1584, 255
  %cmp1586 = icmp eq i32 %bf.clear1585, 7
  br i1 %cmp1586, label %lor.lhs.false.1604, label %lor.lhs.false.1588

lor.lhs.false.1588:                               ; preds = %land.lhs.true.1581
  %542 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1589 = bitcast %union.tree_node* %542 to %struct.tree_common*
  %code1590 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1589, i32 0, i32 2
  %bf.load1591 = load i32, i32* %code1590, align 8
  %bf.clear1592 = and i32 %bf.load1591, 255
  %cmp1593 = icmp eq i32 %bf.clear1592, 8
  br i1 %cmp1593, label %land.lhs.true.1595, label %if.then.1606

land.lhs.true.1595:                               ; preds = %lor.lhs.false.1588
  %543 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1596 = bitcast %union.tree_node* %543 to %struct.tree_common*
  %type1597 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1596, i32 0, i32 1
  %544 = load %union.tree_node*, %union.tree_node** %type1597, align 8
  %common1598 = bitcast %union.tree_node* %544 to %struct.tree_common*
  %code1599 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1598, i32 0, i32 2
  %bf.load1600 = load i32, i32* %code1599, align 8
  %bf.clear1601 = and i32 %bf.load1600, 255
  %cmp1602 = icmp eq i32 %bf.clear1601, 7
  br i1 %cmp1602, label %lor.lhs.false.1604, label %if.then.1606

lor.lhs.false.1604:                               ; preds = %land.lhs.true.1595, %land.lhs.true.1581
  %545 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool1605 = icmp ne i32 %545, 0
  br i1 %tobool1605, label %if.then.1606, label %if.end.1614

if.then.1606:                                     ; preds = %lor.lhs.false.1604, %land.lhs.true.1595, %lor.lhs.false.1588
  %546 = load %union.tree_node*, %union.tree_node** %type, align 8
  %547 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1607 = bitcast %union.tree_node* %547 to %struct.tree_exp*
  %operands1608 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1607, i32 0, i32 2
  %arrayidx1609 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1608, i32 0, i64 1
  %548 = load %union.tree_node*, %union.tree_node** %arrayidx1609, align 8
  %549 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1610 = bitcast %union.tree_node* %549 to %struct.tree_exp*
  %operands1611 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1610, i32 0, i32 2
  %arrayidx1612 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1611, i32 0, i64 0
  %550 = load %union.tree_node*, %union.tree_node** %arrayidx1612, align 8
  %call1613 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %546, %union.tree_node* %548, %union.tree_node* %550)
  store %union.tree_node* %call1613, %union.tree_node** %retval
  br label %return

if.end.1614:                                      ; preds = %lor.lhs.false.1604, %if.else.1574
  br label %if.end.1615

if.end.1615:                                      ; preds = %if.end.1614
  br label %if.end.1616

if.end.1616:                                      ; preds = %if.end.1615, %if.end.1562
  %551 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %551, %union.tree_node** %retval
  br label %return

sw.bb.1617:                                       ; preds = %if.end.901
  %552 = load i32, i32* %wins, align 4
  %tobool1618 = icmp ne i32 %552, 0
  br i1 %tobool1618, label %if.then.1619, label %if.else.1730

if.then.1619:                                     ; preds = %sw.bb.1617
  %553 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1620 = bitcast %union.tree_node* %553 to %struct.tree_common*
  %code1621 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1620, i32 0, i32 2
  %bf.load1622 = load i32, i32* %code1621, align 8
  %bf.clear1623 = and i32 %bf.load1622, 255
  %cmp1624 = icmp eq i32 %bf.clear1623, 25
  br i1 %cmp1624, label %if.then.1626, label %if.else.1710

if.then.1626:                                     ; preds = %if.then.1619
  %554 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1627 = bitcast %union.tree_node* %554 to %struct.tree_common*
  %unsigned_flag1628 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1627, i32 0, i32 2
  %bf.load1629 = load i32, i32* %unsigned_flag1628, align 8
  %bf.lshr1630 = lshr i32 %bf.load1629, 13
  %bf.clear1631 = and i32 %bf.lshr1630, 1
  %tobool1632 = icmp ne i32 %bf.clear1631, 0
  br i1 %tobool1632, label %if.then.1633, label %if.else.1634

if.then.1633:                                     ; preds = %if.then.1626
  %555 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %555, %union.tree_node** %retval
  br label %return

if.else.1634:                                     ; preds = %if.then.1626
  %556 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 13), align 8
  %int_cst1635 = bitcast %union.tree_node* %556 to %struct.tree_int_cst*
  %int_cst1636 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1635, i32 0, i32 2
  %high1637 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1636, i32 0, i32 1
  %557 = load i64, i64* %high1637, align 8
  %558 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1638 = bitcast %union.tree_node* %558 to %struct.tree_int_cst*
  %int_cst1639 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1638, i32 0, i32 2
  %high1640 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1639, i32 0, i32 1
  %559 = load i64, i64* %high1640, align 8
  %cmp1641 = icmp slt i64 %557, %559
  br i1 %cmp1641, label %if.then.1661, label %lor.lhs.false.1643

lor.lhs.false.1643:                               ; preds = %if.else.1634
  %560 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 13), align 8
  %int_cst1644 = bitcast %union.tree_node* %560 to %struct.tree_int_cst*
  %int_cst1645 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1644, i32 0, i32 2
  %high1646 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1645, i32 0, i32 1
  %561 = load i64, i64* %high1646, align 8
  %562 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1647 = bitcast %union.tree_node* %562 to %struct.tree_int_cst*
  %int_cst1648 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1647, i32 0, i32 2
  %high1649 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1648, i32 0, i32 1
  %563 = load i64, i64* %high1649, align 8
  %cmp1650 = icmp eq i64 %561, %563
  br i1 %cmp1650, label %land.lhs.true.1652, label %if.else.1662

land.lhs.true.1652:                               ; preds = %lor.lhs.false.1643
  %564 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 13), align 8
  %int_cst1653 = bitcast %union.tree_node* %564 to %struct.tree_int_cst*
  %int_cst1654 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1653, i32 0, i32 2
  %low1655 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1654, i32 0, i32 0
  %565 = load i64, i64* %low1655, align 8
  %566 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1656 = bitcast %union.tree_node* %566 to %struct.tree_int_cst*
  %int_cst1657 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1656, i32 0, i32 2
  %low1658 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1657, i32 0, i32 0
  %567 = load i64, i64* %low1658, align 8
  %cmp1659 = icmp ult i64 %565, %567
  br i1 %cmp1659, label %if.then.1661, label %if.else.1662

if.then.1661:                                     ; preds = %land.lhs.true.1652, %if.else.1634
  %568 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %568, %union.tree_node** %retval
  br label %return

if.else.1662:                                     ; preds = %land.lhs.true.1652, %lor.lhs.false.1643
  %569 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1666 = bitcast %union.tree_node* %569 to %struct.tree_int_cst*
  %int_cst1667 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1666, i32 0, i32 2
  %low1668 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1667, i32 0, i32 0
  %570 = load i64, i64* %low1668, align 8
  %571 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1669 = bitcast %union.tree_node* %571 to %struct.tree_int_cst*
  %int_cst1670 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1669, i32 0, i32 2
  %high1671 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1670, i32 0, i32 1
  %572 = load i64, i64* %high1671, align 8
  %call1672 = call i32 @neg_double(i64 %570, i64 %572, i64* %low1663, i64* %high1664)
  store i32 %call1672, i32* %overflow1665, align 4
  %573 = load i64, i64* %low1663, align 8
  %574 = load i64, i64* %high1664, align 8
  %call1673 = call %union.tree_node* @build_int_2_wide(i64 %573, i64 %574)
  store %union.tree_node* %call1673, %union.tree_node** %t, align 8
  %575 = load %union.tree_node*, %union.tree_node** %type, align 8
  %576 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1674 = bitcast %union.tree_node* %576 to %struct.tree_common*
  %type1675 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1674, i32 0, i32 1
  store %union.tree_node* %575, %union.tree_node** %type1675, align 8
  %577 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1676 = bitcast %union.tree_node* %577 to %struct.tree_common*
  %public_flag1677 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1676, i32 0, i32 2
  %bf.load1678 = load i32, i32* %public_flag1677, align 8
  %bf.lshr1679 = lshr i32 %bf.load1678, 19
  %bf.clear1680 = and i32 %bf.lshr1679, 1
  %578 = load %union.tree_node*, %union.tree_node** %t, align 8
  %579 = load i32, i32* %overflow1665, align 4
  %call1681 = call i32 @force_fit_type(%union.tree_node* %578, i32 %579)
  %or1682 = or i32 %bf.clear1680, %call1681
  %580 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1683 = bitcast %union.tree_node* %580 to %struct.tree_common*
  %public_flag1684 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1683, i32 0, i32 2
  %bf.load1685 = load i32, i32* %public_flag1684, align 8
  %bf.value1686 = and i32 %or1682, 1
  %bf.shl1687 = shl i32 %bf.value1686, 19
  %bf.clear1688 = and i32 %bf.load1685, -524289
  %bf.set1689 = or i32 %bf.clear1688, %bf.shl1687
  store i32 %bf.set1689, i32* %public_flag1684, align 8
  %581 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1690 = bitcast %union.tree_node* %581 to %struct.tree_common*
  %public_flag1691 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1690, i32 0, i32 2
  %bf.load1692 = load i32, i32* %public_flag1691, align 8
  %bf.lshr1693 = lshr i32 %bf.load1692, 19
  %bf.clear1694 = and i32 %bf.lshr1693, 1
  %582 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1695 = bitcast %union.tree_node* %582 to %struct.tree_common*
  %static_flag1696 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1695, i32 0, i32 2
  %bf.load1697 = load i32, i32* %static_flag1696, align 8
  %bf.lshr1698 = lshr i32 %bf.load1697, 18
  %bf.clear1699 = and i32 %bf.lshr1698, 1
  %or1700 = or i32 %bf.clear1694, %bf.clear1699
  %583 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1701 = bitcast %union.tree_node* %583 to %struct.tree_common*
  %static_flag1702 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1701, i32 0, i32 2
  %bf.load1703 = load i32, i32* %static_flag1702, align 8
  %bf.value1704 = and i32 %or1700, 1
  %bf.shl1705 = shl i32 %bf.value1704, 18
  %bf.clear1706 = and i32 %bf.load1703, -262145
  %bf.set1707 = or i32 %bf.clear1706, %bf.shl1705
  store i32 %bf.set1707, i32* %static_flag1702, align 8
  br label %if.end.1708

if.end.1708:                                      ; preds = %if.else.1662
  br label %if.end.1709

if.end.1709:                                      ; preds = %if.end.1708
  br label %if.end.1729

if.else.1710:                                     ; preds = %if.then.1619
  %584 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1711 = bitcast %union.tree_node* %584 to %struct.tree_common*
  %code1712 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1711, i32 0, i32 2
  %bf.load1713 = load i32, i32* %code1712, align 8
  %bf.clear1714 = and i32 %bf.load1713, 255
  %cmp1715 = icmp eq i32 %bf.clear1714, 26
  br i1 %cmp1715, label %if.then.1717, label %if.end.1728

if.then.1717:                                     ; preds = %if.else.1710
  %585 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst1718 = bitcast %union.tree_node* %585 to %struct.tree_real_cst*
  %real_cst1719 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst1718, i32 0, i32 2
  %call1720 = call i32 @target_negative(%struct.realvaluetype* byval align 8 %real_cst1719)
  %tobool1721 = icmp ne i32 %call1720, 0
  br i1 %tobool1721, label %if.then.1722, label %if.end.1727

if.then.1722:                                     ; preds = %if.then.1717
  %586 = load %union.tree_node*, %union.tree_node** %type, align 8
  %587 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst1724 = bitcast %union.tree_node* %587 to %struct.tree_real_cst*
  %real_cst1725 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst1724, i32 0, i32 2
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp1723, %struct.realvaluetype* byval align 8 %real_cst1725)
  %call1726 = call %union.tree_node* @build_real(%union.tree_node* %586, %struct.realvaluetype* byval align 8 %agg.tmp1723)
  store %union.tree_node* %call1726, %union.tree_node** %t, align 8
  br label %if.end.1727

if.end.1727:                                      ; preds = %if.then.1722, %if.then.1717
  br label %if.end.1728

if.end.1728:                                      ; preds = %if.end.1727, %if.else.1710
  br label %if.end.1729

if.end.1729:                                      ; preds = %if.end.1728, %if.end.1709
  br label %if.end.1750

if.else.1730:                                     ; preds = %sw.bb.1617
  %588 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1731 = bitcast %union.tree_node* %588 to %struct.tree_common*
  %code1732 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1731, i32 0, i32 2
  %bf.load1733 = load i32, i32* %code1732, align 8
  %bf.clear1734 = and i32 %bf.load1733, 255
  %cmp1735 = icmp eq i32 %bf.clear1734, 80
  br i1 %cmp1735, label %if.then.1744, label %lor.lhs.false.1737

lor.lhs.false.1737:                               ; preds = %if.else.1730
  %589 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1738 = bitcast %union.tree_node* %589 to %struct.tree_common*
  %code1739 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1738, i32 0, i32 2
  %bf.load1740 = load i32, i32* %code1739, align 8
  %bf.clear1741 = and i32 %bf.load1740, 255
  %cmp1742 = icmp eq i32 %bf.clear1741, 77
  br i1 %cmp1742, label %if.then.1744, label %if.end.1749

if.then.1744:                                     ; preds = %lor.lhs.false.1737, %if.else.1730
  %590 = load %union.tree_node*, %union.tree_node** %type, align 8
  %591 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1745 = bitcast %union.tree_node* %591 to %struct.tree_exp*
  %operands1746 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1745, i32 0, i32 2
  %arrayidx1747 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1746, i32 0, i64 0
  %592 = load %union.tree_node*, %union.tree_node** %arrayidx1747, align 8
  %call1748 = call %union.tree_node* @build1(i32 80, %union.tree_node* %590, %union.tree_node* %592)
  store %union.tree_node* %call1748, %union.tree_node** %retval
  br label %return

if.end.1749:                                      ; preds = %lor.lhs.false.1737
  br label %if.end.1750

if.end.1750:                                      ; preds = %if.end.1749, %if.end.1729
  %593 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %593, %union.tree_node** %retval
  br label %return

sw.bb.1751:                                       ; preds = %if.end.901
  %594 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1752 = bitcast %union.tree_node* %594 to %struct.tree_common*
  %type1753 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1752, i32 0, i32 1
  %595 = load %union.tree_node*, %union.tree_node** %type1753, align 8
  %common1754 = bitcast %union.tree_node* %595 to %struct.tree_common*
  %code1755 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1754, i32 0, i32 2
  %bf.load1756 = load i32, i32* %code1755, align 8
  %bf.clear1757 = and i32 %bf.load1756, 255
  %cmp1758 = icmp ne i32 %bf.clear1757, 8
  br i1 %cmp1758, label %if.then.1760, label %if.else.1762

if.then.1760:                                     ; preds = %sw.bb.1751
  %596 = load %union.tree_node*, %union.tree_node** %type, align 8
  %597 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call1761 = call %union.tree_node* @convert(%union.tree_node* %596, %union.tree_node* %597)
  store %union.tree_node* %call1761, %union.tree_node** %retval
  br label %return

if.else.1762:                                     ; preds = %sw.bb.1751
  %598 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1763 = bitcast %union.tree_node* %598 to %struct.tree_common*
  %code1764 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1763, i32 0, i32 2
  %bf.load1765 = load i32, i32* %code1764, align 8
  %bf.clear1766 = and i32 %bf.load1765, 255
  %cmp1767 = icmp eq i32 %bf.clear1766, 125
  br i1 %cmp1767, label %if.then.1769, label %if.else.1778

if.then.1769:                                     ; preds = %if.else.1762
  %599 = load %union.tree_node*, %union.tree_node** %type, align 8
  %600 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1770 = bitcast %union.tree_node* %600 to %struct.tree_exp*
  %operands1771 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1770, i32 0, i32 2
  %arrayidx1772 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1771, i32 0, i64 0
  %601 = load %union.tree_node*, %union.tree_node** %arrayidx1772, align 8
  %602 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1773 = bitcast %union.tree_node* %602 to %struct.tree_exp*
  %operands1774 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1773, i32 0, i32 2
  %arrayidx1775 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1774, i32 0, i64 1
  %603 = load %union.tree_node*, %union.tree_node** %arrayidx1775, align 8
  %call1776 = call %union.tree_node* @negate_expr(%union.tree_node* %603)
  %call1777 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 125, %union.tree_node* %599, %union.tree_node* %601, %union.tree_node* %call1776)
  store %union.tree_node* %call1777, %union.tree_node** %retval
  br label %return

if.else.1778:                                     ; preds = %if.else.1762
  %604 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1779 = bitcast %union.tree_node* %604 to %struct.tree_common*
  %code1780 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1779, i32 0, i32 2
  %bf.load1781 = load i32, i32* %code1780, align 8
  %bf.clear1782 = and i32 %bf.load1781, 255
  %cmp1783 = icmp eq i32 %bf.clear1782, 27
  br i1 %cmp1783, label %if.then.1785, label %if.else.1791

if.then.1785:                                     ; preds = %if.else.1778
  %605 = load %union.tree_node*, %union.tree_node** %type, align 8
  %606 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %complex1786 = bitcast %union.tree_node* %606 to %struct.tree_complex*
  %real1787 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex1786, i32 0, i32 2
  %607 = load %union.tree_node*, %union.tree_node** %real1787, align 8
  %608 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %complex1788 = bitcast %union.tree_node* %608 to %struct.tree_complex*
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex1788, i32 0, i32 3
  %609 = load %union.tree_node*, %union.tree_node** %imag, align 8
  %call1789 = call %union.tree_node* @negate_expr(%union.tree_node* %609)
  %call1790 = call %union.tree_node* @build_complex(%union.tree_node* %605, %union.tree_node* %607, %union.tree_node* %call1789)
  store %union.tree_node* %call1790, %union.tree_node** %retval
  br label %return

if.else.1791:                                     ; preds = %if.else.1778
  %610 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1792 = bitcast %union.tree_node* %610 to %struct.tree_common*
  %code1793 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1792, i32 0, i32 2
  %bf.load1794 = load i32, i32* %code1793, align 8
  %bf.clear1795 = and i32 %bf.load1794, 255
  %cmp1796 = icmp eq i32 %bf.clear1795, 59
  br i1 %cmp1796, label %if.then.1805, label %lor.lhs.false.1798

lor.lhs.false.1798:                               ; preds = %if.else.1791
  %611 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1799 = bitcast %union.tree_node* %611 to %struct.tree_common*
  %code1800 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1799, i32 0, i32 2
  %bf.load1801 = load i32, i32* %code1800, align 8
  %bf.clear1802 = and i32 %bf.load1801, 255
  %cmp1803 = icmp eq i32 %bf.clear1802, 60
  br i1 %cmp1803, label %if.then.1805, label %if.else.1822

if.then.1805:                                     ; preds = %lor.lhs.false.1798, %if.else.1791
  %612 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1806 = bitcast %union.tree_node* %612 to %struct.tree_common*
  %code1807 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1806, i32 0, i32 2
  %bf.load1808 = load i32, i32* %code1807, align 8
  %bf.clear1809 = and i32 %bf.load1808, 255
  %613 = load %union.tree_node*, %union.tree_node** %type, align 8
  %614 = load %union.tree_node*, %union.tree_node** %type, align 8
  %615 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1810 = bitcast %union.tree_node* %615 to %struct.tree_exp*
  %operands1811 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1810, i32 0, i32 2
  %arrayidx1812 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1811, i32 0, i64 0
  %616 = load %union.tree_node*, %union.tree_node** %arrayidx1812, align 8
  %call1813 = call %union.tree_node* @build1(i32 126, %union.tree_node* %614, %union.tree_node* %616)
  %call1814 = call %union.tree_node* @fold(%union.tree_node* %call1813)
  %617 = load %union.tree_node*, %union.tree_node** %type, align 8
  %618 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1815 = bitcast %union.tree_node* %618 to %struct.tree_exp*
  %operands1816 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1815, i32 0, i32 2
  %arrayidx1817 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1816, i32 0, i64 1
  %619 = load %union.tree_node*, %union.tree_node** %arrayidx1817, align 8
  %call1818 = call %union.tree_node* @build1(i32 126, %union.tree_node* %617, %union.tree_node* %619)
  %call1819 = call %union.tree_node* @fold(%union.tree_node* %call1818)
  %call1820 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear1809, %union.tree_node* %613, %union.tree_node* %call1814, %union.tree_node* %call1819)
  %call1821 = call %union.tree_node* @fold(%union.tree_node* %call1820)
  store %union.tree_node* %call1821, %union.tree_node** %retval
  br label %return

if.else.1822:                                     ; preds = %lor.lhs.false.1798
  %620 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1823 = bitcast %union.tree_node* %620 to %struct.tree_common*
  %code1824 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1823, i32 0, i32 2
  %bf.load1825 = load i32, i32* %code1824, align 8
  %bf.clear1826 = and i32 %bf.load1825, 255
  %cmp1827 = icmp eq i32 %bf.clear1826, 126
  br i1 %cmp1827, label %if.then.1829, label %if.end.1833

if.then.1829:                                     ; preds = %if.else.1822
  %621 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1830 = bitcast %union.tree_node* %621 to %struct.tree_exp*
  %operands1831 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1830, i32 0, i32 2
  %arrayidx1832 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1831, i32 0, i64 0
  %622 = load %union.tree_node*, %union.tree_node** %arrayidx1832, align 8
  store %union.tree_node* %622, %union.tree_node** %retval
  br label %return

if.end.1833:                                      ; preds = %if.else.1822
  br label %if.end.1834

if.end.1834:                                      ; preds = %if.end.1833
  br label %if.end.1835

if.end.1835:                                      ; preds = %if.end.1834
  br label %if.end.1836

if.end.1836:                                      ; preds = %if.end.1835
  br label %if.end.1837

if.end.1837:                                      ; preds = %if.end.1836
  %623 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %623, %union.tree_node** %retval
  br label %return

sw.bb.1838:                                       ; preds = %if.end.901
  %624 = load i32, i32* %wins, align 4
  %tobool1839 = icmp ne i32 %624, 0
  br i1 %tobool1839, label %if.then.1840, label %if.else.1876

if.then.1840:                                     ; preds = %sw.bb.1838
  %625 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1841 = bitcast %union.tree_node* %625 to %struct.tree_int_cst*
  %int_cst1842 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1841, i32 0, i32 2
  %low1843 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1842, i32 0, i32 0
  %626 = load i64, i64* %low1843, align 8
  %neg = xor i64 %626, -1
  %627 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst1844 = bitcast %union.tree_node* %627 to %struct.tree_int_cst*
  %int_cst1845 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst1844, i32 0, i32 2
  %high1846 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst1845, i32 0, i32 1
  %628 = load i64, i64* %high1846, align 8
  %neg1847 = xor i64 %628, -1
  %call1848 = call %union.tree_node* @build_int_2_wide(i64 %neg, i64 %neg1847)
  store %union.tree_node* %call1848, %union.tree_node** %t, align 8
  %629 = load %union.tree_node*, %union.tree_node** %type, align 8
  %630 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1849 = bitcast %union.tree_node* %630 to %struct.tree_common*
  %type1850 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1849, i32 0, i32 1
  store %union.tree_node* %629, %union.tree_node** %type1850, align 8
  %631 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call1851 = call i32 @force_fit_type(%union.tree_node* %631, i32 0)
  %632 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1852 = bitcast %union.tree_node* %632 to %struct.tree_common*
  %public_flag1853 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1852, i32 0, i32 2
  %bf.load1854 = load i32, i32* %public_flag1853, align 8
  %bf.lshr1855 = lshr i32 %bf.load1854, 19
  %bf.clear1856 = and i32 %bf.lshr1855, 1
  %633 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1857 = bitcast %union.tree_node* %633 to %struct.tree_common*
  %public_flag1858 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1857, i32 0, i32 2
  %bf.load1859 = load i32, i32* %public_flag1858, align 8
  %bf.value1860 = and i32 %bf.clear1856, 1
  %bf.shl1861 = shl i32 %bf.value1860, 19
  %bf.clear1862 = and i32 %bf.load1859, -524289
  %bf.set1863 = or i32 %bf.clear1862, %bf.shl1861
  store i32 %bf.set1863, i32* %public_flag1858, align 8
  %634 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1864 = bitcast %union.tree_node* %634 to %struct.tree_common*
  %static_flag1865 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1864, i32 0, i32 2
  %bf.load1866 = load i32, i32* %static_flag1865, align 8
  %bf.lshr1867 = lshr i32 %bf.load1866, 18
  %bf.clear1868 = and i32 %bf.lshr1867, 1
  %635 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1869 = bitcast %union.tree_node* %635 to %struct.tree_common*
  %static_flag1870 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1869, i32 0, i32 2
  %bf.load1871 = load i32, i32* %static_flag1870, align 8
  %bf.value1872 = and i32 %bf.clear1868, 1
  %bf.shl1873 = shl i32 %bf.value1872, 18
  %bf.clear1874 = and i32 %bf.load1871, -262145
  %bf.set1875 = or i32 %bf.clear1874, %bf.shl1873
  store i32 %bf.set1875, i32* %static_flag1870, align 8
  br label %if.end.1888

if.else.1876:                                     ; preds = %sw.bb.1838
  %636 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1877 = bitcast %union.tree_node* %636 to %struct.tree_common*
  %code1878 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1877, i32 0, i32 2
  %bf.load1879 = load i32, i32* %code1878, align 8
  %bf.clear1880 = and i32 %bf.load1879, 255
  %cmp1881 = icmp eq i32 %bf.clear1880, 90
  br i1 %cmp1881, label %if.then.1883, label %if.end.1887

if.then.1883:                                     ; preds = %if.else.1876
  %637 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1884 = bitcast %union.tree_node* %637 to %struct.tree_exp*
  %operands1885 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1884, i32 0, i32 2
  %arrayidx1886 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1885, i32 0, i64 0
  %638 = load %union.tree_node*, %union.tree_node** %arrayidx1886, align 8
  store %union.tree_node* %638, %union.tree_node** %retval
  br label %return

if.end.1887:                                      ; preds = %if.else.1876
  br label %if.end.1888

if.end.1888:                                      ; preds = %if.end.1887, %if.then.1840
  %639 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %639, %union.tree_node** %retval
  br label %return

sw.bb.1889:                                       ; preds = %if.end.901
  %640 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common1890 = bitcast %union.tree_node* %640 to %struct.tree_common*
  %code1891 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1890, i32 0, i32 2
  %bf.load1892 = load i32, i32* %code1891, align 8
  %bf.clear1893 = and i32 %bf.load1892, 255
  %cmp1894 = icmp eq i32 %bf.clear1893, 77
  br i1 %cmp1894, label %if.then.1896, label %if.end.1902

if.then.1896:                                     ; preds = %sw.bb.1889
  %641 = load %union.tree_node*, %union.tree_node** %type, align 8
  %642 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %643 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp1897 = bitcast %union.tree_node* %643 to %struct.tree_exp*
  %operands1898 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1897, i32 0, i32 2
  %arrayidx1899 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1898, i32 0, i64 0
  %644 = load %union.tree_node*, %union.tree_node** %arrayidx1899, align 8
  %call1900 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %641, %union.tree_node* %642, %union.tree_node* %644)
  %call1901 = call %union.tree_node* @fold(%union.tree_node* %call1900)
  store %union.tree_node* %call1901, %union.tree_node** %retval
  br label %return

if.end.1902:                                      ; preds = %sw.bb.1889
  %645 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1903 = bitcast %union.tree_node* %645 to %struct.tree_common*
  %code1904 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1903, i32 0, i32 2
  %bf.load1905 = load i32, i32* %code1904, align 8
  %bf.clear1906 = and i32 %bf.load1905, 255
  %cmp1907 = icmp eq i32 %bf.clear1906, 77
  br i1 %cmp1907, label %if.then.1909, label %if.else.1915

if.then.1909:                                     ; preds = %if.end.1902
  %646 = load %union.tree_node*, %union.tree_node** %type, align 8
  %647 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %648 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1910 = bitcast %union.tree_node* %648 to %struct.tree_exp*
  %operands1911 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1910, i32 0, i32 2
  %arrayidx1912 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1911, i32 0, i64 0
  %649 = load %union.tree_node*, %union.tree_node** %arrayidx1912, align 8
  %call1913 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %646, %union.tree_node* %647, %union.tree_node* %649)
  %call1914 = call %union.tree_node* @fold(%union.tree_node* %call1913)
  store %union.tree_node* %call1914, %union.tree_node** %retval
  br label %return

if.else.1915:                                     ; preds = %if.end.1902
  %650 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1916 = bitcast %union.tree_node* %650 to %struct.tree_common*
  %code1917 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1916, i32 0, i32 2
  %bf.load1918 = load i32, i32* %code1917, align 8
  %bf.clear1919 = and i32 %bf.load1918, 255
  %cmp1920 = icmp eq i32 %bf.clear1919, 7
  br i1 %cmp1920, label %if.else.2295, label %lor.lhs.false.1922

lor.lhs.false.1922:                               ; preds = %if.else.1915
  %651 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1923 = bitcast %union.tree_node* %651 to %struct.tree_common*
  %code1924 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1923, i32 0, i32 2
  %bf.load1925 = load i32, i32* %code1924, align 8
  %bf.clear1926 = and i32 %bf.load1925, 255
  %cmp1927 = icmp eq i32 %bf.clear1926, 8
  br i1 %cmp1927, label %land.lhs.true.1929, label %if.then.1938

land.lhs.true.1929:                               ; preds = %lor.lhs.false.1922
  %652 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1930 = bitcast %union.tree_node* %652 to %struct.tree_common*
  %type1931 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1930, i32 0, i32 1
  %653 = load %union.tree_node*, %union.tree_node** %type1931, align 8
  %common1932 = bitcast %union.tree_node* %653 to %struct.tree_common*
  %code1933 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1932, i32 0, i32 2
  %bf.load1934 = load i32, i32* %code1933, align 8
  %bf.clear1935 = and i32 %bf.load1934, 255
  %cmp1936 = icmp eq i32 %bf.clear1935, 7
  br i1 %cmp1936, label %if.else.2295, label %if.then.1938

if.then.1938:                                     ; preds = %land.lhs.true.1929, %lor.lhs.false.1922
  %654 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call1939 = call i32 @integer_zerop(%union.tree_node* %654)
  %tobool1940 = icmp ne i32 %call1939, 0
  br i1 %tobool1940, label %if.then.1941, label %if.end.1944

if.then.1941:                                     ; preds = %if.then.1938
  %655 = load %union.tree_node*, %union.tree_node** %type, align 8
  %656 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call1942 = call %union.tree_node* @convert(%union.tree_node* %655, %union.tree_node* %656)
  %call1943 = call %union.tree_node* @non_lvalue(%union.tree_node* %call1942)
  store %union.tree_node* %call1943, %union.tree_node** %retval
  br label %return

if.end.1944:                                      ; preds = %if.then.1938
  %657 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1945 = bitcast %union.tree_node* %657 to %struct.tree_common*
  %code1946 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1945, i32 0, i32 2
  %bf.load1947 = load i32, i32* %code1946, align 8
  %bf.clear1948 = and i32 %bf.load1947, 255
  %cmp1949 = icmp eq i32 %bf.clear1948, 88
  br i1 %cmp1949, label %land.lhs.true.1951, label %if.end.1989

land.lhs.true.1951:                               ; preds = %if.end.1944
  %658 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common1952 = bitcast %union.tree_node* %658 to %struct.tree_common*
  %code1953 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1952, i32 0, i32 2
  %bf.load1954 = load i32, i32* %code1953, align 8
  %bf.clear1955 = and i32 %bf.load1954, 255
  %cmp1956 = icmp eq i32 %bf.clear1955, 88
  br i1 %cmp1956, label %land.lhs.true.1958, label %if.end.1989

land.lhs.true.1958:                               ; preds = %land.lhs.true.1951
  %659 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1959 = bitcast %union.tree_node* %659 to %struct.tree_exp*
  %operands1960 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1959, i32 0, i32 2
  %arrayidx1961 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1960, i32 0, i64 1
  %660 = load %union.tree_node*, %union.tree_node** %arrayidx1961, align 8
  %common1962 = bitcast %union.tree_node* %660 to %struct.tree_common*
  %code1963 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1962, i32 0, i32 2
  %bf.load1964 = load i32, i32* %code1963, align 8
  %bf.clear1965 = and i32 %bf.load1964, 255
  %cmp1966 = icmp eq i32 %bf.clear1965, 25
  br i1 %cmp1966, label %land.lhs.true.1968, label %if.end.1989

land.lhs.true.1968:                               ; preds = %land.lhs.true.1958
  %661 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp1969 = bitcast %union.tree_node* %661 to %struct.tree_exp*
  %operands1970 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1969, i32 0, i32 2
  %arrayidx1971 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1970, i32 0, i64 1
  %662 = load %union.tree_node*, %union.tree_node** %arrayidx1971, align 8
  %common1972 = bitcast %union.tree_node* %662 to %struct.tree_common*
  %code1973 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1972, i32 0, i32 2
  %bf.load1974 = load i32, i32* %code1973, align 8
  %bf.clear1975 = and i32 %bf.load1974, 255
  %cmp1976 = icmp eq i32 %bf.clear1975, 25
  br i1 %cmp1976, label %land.lhs.true.1978, label %if.end.1989

land.lhs.true.1978:                               ; preds = %land.lhs.true.1968
  %663 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp1979 = bitcast %union.tree_node* %663 to %struct.tree_exp*
  %operands1980 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1979, i32 0, i32 2
  %arrayidx1981 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1980, i32 0, i64 1
  %664 = load %union.tree_node*, %union.tree_node** %arrayidx1981, align 8
  %665 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp1982 = bitcast %union.tree_node* %665 to %struct.tree_exp*
  %operands1983 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1982, i32 0, i32 2
  %arrayidx1984 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1983, i32 0, i64 1
  %666 = load %union.tree_node*, %union.tree_node** %arrayidx1984, align 8
  %call1985 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %664, %union.tree_node* %666, i32 0)
  %call1986 = call i32 @integer_zerop(%union.tree_node* %call1985)
  %tobool1987 = icmp ne i32 %call1986, 0
  br i1 %tobool1987, label %if.then.1988, label %if.end.1989

if.then.1988:                                     ; preds = %land.lhs.true.1978
  store i32 86, i32* %code, align 4
  br label %bit_ior

if.end.1989:                                      ; preds = %land.lhs.true.1978, %land.lhs.true.1968, %land.lhs.true.1958, %land.lhs.true.1951, %if.end.1944
  %667 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common1990 = bitcast %union.tree_node* %667 to %struct.tree_common*
  %code1991 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1990, i32 0, i32 2
  %bf.load1992 = load i32, i32* %code1991, align 8
  %bf.clear1993 = and i32 %bf.load1992, 255
  %cmp1994 = icmp eq i32 %bf.clear1993, 59
  br i1 %cmp1994, label %land.lhs.true.1996, label %lor.lhs.false.2003

land.lhs.true.1996:                               ; preds = %if.end.1989
  %668 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common1997 = bitcast %union.tree_node* %668 to %struct.tree_common*
  %code1998 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1997, i32 0, i32 2
  %bf.load1999 = load i32, i32* %code1998, align 8
  %bf.clear2000 = and i32 %bf.load1999, 255
  %cmp2001 = icmp eq i32 %bf.clear2000, 61
  br i1 %cmp2001, label %if.then.2017, label %lor.lhs.false.2003

lor.lhs.false.2003:                               ; preds = %land.lhs.true.1996, %if.end.1989
  %669 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2004 = bitcast %union.tree_node* %669 to %struct.tree_common*
  %code2005 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2004, i32 0, i32 2
  %bf.load2006 = load i32, i32* %code2005, align 8
  %bf.clear2007 = and i32 %bf.load2006, 255
  %cmp2008 = icmp eq i32 %bf.clear2007, 59
  br i1 %cmp2008, label %land.lhs.true.2010, label %if.end.2179

land.lhs.true.2010:                               ; preds = %lor.lhs.false.2003
  %670 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common2011 = bitcast %union.tree_node* %670 to %struct.tree_common*
  %code2012 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2011, i32 0, i32 2
  %bf.load2013 = load i32, i32* %code2012, align 8
  %bf.clear2014 = and i32 %bf.load2013, 255
  %cmp2015 = icmp eq i32 %bf.clear2014, 61
  br i1 %cmp2015, label %if.then.2017, label %if.end.2179

if.then.2017:                                     ; preds = %land.lhs.true.2010, %land.lhs.true.1996
  %671 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common2018 = bitcast %union.tree_node* %671 to %struct.tree_common*
  %code2019 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2018, i32 0, i32 2
  %bf.load2020 = load i32, i32* %code2019, align 8
  %bf.clear2021 = and i32 %bf.load2020, 255
  %cmp2022 = icmp eq i32 %bf.clear2021, 59
  br i1 %cmp2022, label %if.then.2024, label %if.else.2025

if.then.2024:                                     ; preds = %if.then.2017
  %672 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %672, %union.tree_node** %parg, align 8
  %673 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %673, %union.tree_node** %marg, align 8
  br label %if.end.2026

if.else.2025:                                     ; preds = %if.then.2017
  %674 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %674, %union.tree_node** %parg, align 8
  %675 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %675, %union.tree_node** %marg, align 8
  br label %if.end.2026

if.end.2026:                                      ; preds = %if.else.2025, %if.then.2024
  %676 = load %union.tree_node*, %union.tree_node** %parg, align 8
  %exp2027 = bitcast %union.tree_node* %676 to %struct.tree_exp*
  %operands2028 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2027, i32 0, i32 2
  %arrayidx2029 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2028, i32 0, i64 0
  %677 = load %union.tree_node*, %union.tree_node** %arrayidx2029, align 8
  store %union.tree_node* %677, %union.tree_node** %parg0, align 8
  %678 = load %union.tree_node*, %union.tree_node** %parg, align 8
  %exp2030 = bitcast %union.tree_node* %678 to %struct.tree_exp*
  %operands2031 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2030, i32 0, i32 2
  %arrayidx2032 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2031, i32 0, i64 1
  %679 = load %union.tree_node*, %union.tree_node** %arrayidx2032, align 8
  store %union.tree_node* %679, %union.tree_node** %parg1, align 8
  br label %while.cond.2033

while.cond.2033:                                  ; preds = %while.body.2082, %if.end.2026
  %680 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2034 = bitcast %union.tree_node* %680 to %struct.tree_common*
  %code2035 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2034, i32 0, i32 2
  %bf.load2036 = load i32, i32* %code2035, align 8
  %bf.clear2037 = and i32 %bf.load2036, 255
  %cmp2038 = icmp eq i32 %bf.clear2037, 115
  br i1 %cmp2038, label %land.lhs.true.2054, label %lor.lhs.false.2040

lor.lhs.false.2040:                               ; preds = %while.cond.2033
  %681 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2041 = bitcast %union.tree_node* %681 to %struct.tree_common*
  %code2042 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2041, i32 0, i32 2
  %bf.load2043 = load i32, i32* %code2042, align 8
  %bf.clear2044 = and i32 %bf.load2043, 255
  %cmp2045 = icmp eq i32 %bf.clear2044, 114
  br i1 %cmp2045, label %land.lhs.true.2054, label %lor.lhs.false.2047

lor.lhs.false.2047:                               ; preds = %lor.lhs.false.2040
  %682 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2048 = bitcast %union.tree_node* %682 to %struct.tree_common*
  %code2049 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2048, i32 0, i32 2
  %bf.load2050 = load i32, i32* %code2049, align 8
  %bf.clear2051 = and i32 %bf.load2050, 255
  %cmp2052 = icmp eq i32 %bf.clear2051, 116
  br i1 %cmp2052, label %land.lhs.true.2054, label %land.end.2080

land.lhs.true.2054:                               ; preds = %lor.lhs.false.2047, %lor.lhs.false.2040, %while.cond.2033
  %683 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %exp2055 = bitcast %union.tree_node* %683 to %struct.tree_exp*
  %operands2056 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2055, i32 0, i32 2
  %arrayidx2057 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2056, i32 0, i64 0
  %684 = load %union.tree_node*, %union.tree_node** %arrayidx2057, align 8
  %685 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2058 = icmp ne %union.tree_node* %684, %685
  br i1 %cmp2058, label %land.rhs.2060, label %land.end.2080

land.rhs.2060:                                    ; preds = %land.lhs.true.2054
  %686 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2061 = bitcast %union.tree_node* %686 to %struct.tree_common*
  %type2062 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2061, i32 0, i32 1
  %687 = load %union.tree_node*, %union.tree_node** %type2062, align 8
  %type2063 = bitcast %union.tree_node* %687 to %struct.tree_type*
  %mode2064 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2063, i32 0, i32 6
  %bf.load2065 = load i32, i32* %mode2064, align 4
  %bf.lshr2066 = lshr i32 %bf.load2065, 9
  %bf.clear2067 = and i32 %bf.lshr2066, 127
  %688 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %exp2068 = bitcast %union.tree_node* %688 to %struct.tree_exp*
  %operands2069 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2068, i32 0, i32 2
  %arrayidx2070 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2069, i32 0, i64 0
  %689 = load %union.tree_node*, %union.tree_node** %arrayidx2070, align 8
  %common2071 = bitcast %union.tree_node* %689 to %struct.tree_common*
  %type2072 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2071, i32 0, i32 1
  %690 = load %union.tree_node*, %union.tree_node** %type2072, align 8
  %type2073 = bitcast %union.tree_node* %690 to %struct.tree_type*
  %mode2074 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2073, i32 0, i32 6
  %bf.load2075 = load i32, i32* %mode2074, align 4
  %bf.lshr2076 = lshr i32 %bf.load2075, 9
  %bf.clear2077 = and i32 %bf.lshr2076, 127
  %cmp2078 = icmp eq i32 %bf.clear2067, %bf.clear2077
  br label %land.end.2080

land.end.2080:                                    ; preds = %land.rhs.2060, %land.lhs.true.2054, %lor.lhs.false.2047
  %691 = phi i1 [ false, %land.lhs.true.2054 ], [ false, %lor.lhs.false.2047 ], [ %cmp2078, %land.rhs.2060 ]
  br i1 %691, label %while.body.2082, label %while.end.2086

while.body.2082:                                  ; preds = %land.end.2080
  %692 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %exp2083 = bitcast %union.tree_node* %692 to %struct.tree_exp*
  %operands2084 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2083, i32 0, i32 2
  %arrayidx2085 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2084, i32 0, i64 0
  %693 = load %union.tree_node*, %union.tree_node** %arrayidx2085, align 8
  store %union.tree_node* %693, %union.tree_node** %parg0, align 8
  br label %while.cond.2033

while.end.2086:                                   ; preds = %land.end.2080
  br label %while.cond.2087

while.cond.2087:                                  ; preds = %while.body.2136, %while.end.2086
  %694 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2088 = bitcast %union.tree_node* %694 to %struct.tree_common*
  %code2089 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2088, i32 0, i32 2
  %bf.load2090 = load i32, i32* %code2089, align 8
  %bf.clear2091 = and i32 %bf.load2090, 255
  %cmp2092 = icmp eq i32 %bf.clear2091, 115
  br i1 %cmp2092, label %land.lhs.true.2108, label %lor.lhs.false.2094

lor.lhs.false.2094:                               ; preds = %while.cond.2087
  %695 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2095 = bitcast %union.tree_node* %695 to %struct.tree_common*
  %code2096 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2095, i32 0, i32 2
  %bf.load2097 = load i32, i32* %code2096, align 8
  %bf.clear2098 = and i32 %bf.load2097, 255
  %cmp2099 = icmp eq i32 %bf.clear2098, 114
  br i1 %cmp2099, label %land.lhs.true.2108, label %lor.lhs.false.2101

lor.lhs.false.2101:                               ; preds = %lor.lhs.false.2094
  %696 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2102 = bitcast %union.tree_node* %696 to %struct.tree_common*
  %code2103 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2102, i32 0, i32 2
  %bf.load2104 = load i32, i32* %code2103, align 8
  %bf.clear2105 = and i32 %bf.load2104, 255
  %cmp2106 = icmp eq i32 %bf.clear2105, 116
  br i1 %cmp2106, label %land.lhs.true.2108, label %land.end.2134

land.lhs.true.2108:                               ; preds = %lor.lhs.false.2101, %lor.lhs.false.2094, %while.cond.2087
  %697 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %exp2109 = bitcast %union.tree_node* %697 to %struct.tree_exp*
  %operands2110 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2109, i32 0, i32 2
  %arrayidx2111 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2110, i32 0, i64 0
  %698 = load %union.tree_node*, %union.tree_node** %arrayidx2111, align 8
  %699 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2112 = icmp ne %union.tree_node* %698, %699
  br i1 %cmp2112, label %land.rhs.2114, label %land.end.2134

land.rhs.2114:                                    ; preds = %land.lhs.true.2108
  %700 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2115 = bitcast %union.tree_node* %700 to %struct.tree_common*
  %type2116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2115, i32 0, i32 1
  %701 = load %union.tree_node*, %union.tree_node** %type2116, align 8
  %type2117 = bitcast %union.tree_node* %701 to %struct.tree_type*
  %mode2118 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2117, i32 0, i32 6
  %bf.load2119 = load i32, i32* %mode2118, align 4
  %bf.lshr2120 = lshr i32 %bf.load2119, 9
  %bf.clear2121 = and i32 %bf.lshr2120, 127
  %702 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %exp2122 = bitcast %union.tree_node* %702 to %struct.tree_exp*
  %operands2123 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2122, i32 0, i32 2
  %arrayidx2124 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2123, i32 0, i64 0
  %703 = load %union.tree_node*, %union.tree_node** %arrayidx2124, align 8
  %common2125 = bitcast %union.tree_node* %703 to %struct.tree_common*
  %type2126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2125, i32 0, i32 1
  %704 = load %union.tree_node*, %union.tree_node** %type2126, align 8
  %type2127 = bitcast %union.tree_node* %704 to %struct.tree_type*
  %mode2128 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2127, i32 0, i32 6
  %bf.load2129 = load i32, i32* %mode2128, align 4
  %bf.lshr2130 = lshr i32 %bf.load2129, 9
  %bf.clear2131 = and i32 %bf.lshr2130, 127
  %cmp2132 = icmp eq i32 %bf.clear2121, %bf.clear2131
  br label %land.end.2134

land.end.2134:                                    ; preds = %land.rhs.2114, %land.lhs.true.2108, %lor.lhs.false.2101
  %705 = phi i1 [ false, %land.lhs.true.2108 ], [ false, %lor.lhs.false.2101 ], [ %cmp2132, %land.rhs.2114 ]
  br i1 %705, label %while.body.2136, label %while.end.2140

while.body.2136:                                  ; preds = %land.end.2134
  %706 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %exp2137 = bitcast %union.tree_node* %706 to %struct.tree_exp*
  %operands2138 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2137, i32 0, i32 2
  %arrayidx2139 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2138, i32 0, i64 0
  %707 = load %union.tree_node*, %union.tree_node** %arrayidx2139, align 8
  store %union.tree_node* %707, %union.tree_node** %parg1, align 8
  br label %while.cond.2087

while.end.2140:                                   ; preds = %land.end.2134
  %708 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2141 = bitcast %union.tree_node* %708 to %struct.tree_common*
  %code2142 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2141, i32 0, i32 2
  %bf.load2143 = load i32, i32* %code2142, align 8
  %bf.clear2144 = and i32 %bf.load2143, 255
  %cmp2145 = icmp eq i32 %bf.clear2144, 61
  br i1 %cmp2145, label %land.lhs.true.2147, label %if.end.2159

land.lhs.true.2147:                               ; preds = %while.end.2140
  %709 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2148 = bitcast %union.tree_node* %709 to %struct.tree_common*
  %code2149 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2148, i32 0, i32 2
  %bf.load2150 = load i32, i32* %code2149, align 8
  %bf.clear2151 = and i32 %bf.load2150, 255
  %cmp2152 = icmp ne i32 %bf.clear2151, 61
  br i1 %cmp2152, label %if.then.2154, label %if.end.2159

if.then.2154:                                     ; preds = %land.lhs.true.2147
  %710 = load %union.tree_node*, %union.tree_node** %type, align 8
  %711 = load %union.tree_node*, %union.tree_node** %type, align 8
  %712 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %713 = load %union.tree_node*, %union.tree_node** %marg, align 8
  %call2155 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %711, %union.tree_node* %712, %union.tree_node* %713)
  %call2156 = call %union.tree_node* @fold(%union.tree_node* %call2155)
  %714 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %call2157 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %710, %union.tree_node* %call2156, %union.tree_node* %714)
  %call2158 = call %union.tree_node* @fold(%union.tree_node* %call2157)
  store %union.tree_node* %call2158, %union.tree_node** %retval
  br label %return

if.end.2159:                                      ; preds = %land.lhs.true.2147, %while.end.2140
  %715 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %common2160 = bitcast %union.tree_node* %715 to %struct.tree_common*
  %code2161 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2160, i32 0, i32 2
  %bf.load2162 = load i32, i32* %code2161, align 8
  %bf.clear2163 = and i32 %bf.load2162, 255
  %cmp2164 = icmp ne i32 %bf.clear2163, 61
  br i1 %cmp2164, label %land.lhs.true.2166, label %if.end.2178

land.lhs.true.2166:                               ; preds = %if.end.2159
  %716 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %common2167 = bitcast %union.tree_node* %716 to %struct.tree_common*
  %code2168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2167, i32 0, i32 2
  %bf.load2169 = load i32, i32* %code2168, align 8
  %bf.clear2170 = and i32 %bf.load2169, 255
  %cmp2171 = icmp eq i32 %bf.clear2170, 61
  br i1 %cmp2171, label %if.then.2173, label %if.end.2178

if.then.2173:                                     ; preds = %land.lhs.true.2166
  %717 = load %union.tree_node*, %union.tree_node** %type, align 8
  %718 = load %union.tree_node*, %union.tree_node** %type, align 8
  %719 = load %union.tree_node*, %union.tree_node** %parg1, align 8
  %720 = load %union.tree_node*, %union.tree_node** %marg, align 8
  %call2174 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %718, %union.tree_node* %719, %union.tree_node* %720)
  %call2175 = call %union.tree_node* @fold(%union.tree_node* %call2174)
  %721 = load %union.tree_node*, %union.tree_node** %parg0, align 8
  %call2176 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %717, %union.tree_node* %call2175, %union.tree_node* %721)
  %call2177 = call %union.tree_node* @fold(%union.tree_node* %call2176)
  store %union.tree_node* %call2177, %union.tree_node** %retval
  br label %return

if.end.2178:                                      ; preds = %land.lhs.true.2166, %if.end.2159
  br label %if.end.2179

if.end.2179:                                      ; preds = %if.end.2178, %land.lhs.true.2010, %lor.lhs.false.2003
  %722 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common2180 = bitcast %union.tree_node* %722 to %struct.tree_common*
  %code2181 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2180, i32 0, i32 2
  %bf.load2182 = load i32, i32* %code2181, align 8
  %bf.clear2183 = and i32 %bf.load2182, 255
  %cmp2184 = icmp eq i32 %bf.clear2183, 61
  br i1 %cmp2184, label %land.lhs.true.2186, label %if.end.2294

land.lhs.true.2186:                               ; preds = %if.end.2179
  %723 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2187 = bitcast %union.tree_node* %723 to %struct.tree_common*
  %code2188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2187, i32 0, i32 2
  %bf.load2189 = load i32, i32* %code2188, align 8
  %bf.clear2190 = and i32 %bf.load2189, 255
  %cmp2191 = icmp eq i32 %bf.clear2190, 61
  br i1 %cmp2191, label %if.then.2193, label %if.end.2294

if.then.2193:                                     ; preds = %land.lhs.true.2186
  store %union.tree_node* null, %union.tree_node** %alt0, align 8
  store %union.tree_node* null, %union.tree_node** %alt1, align 8
  %724 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2194 = bitcast %union.tree_node* %724 to %struct.tree_exp*
  %operands2195 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2194, i32 0, i32 2
  %arrayidx2196 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2195, i32 0, i64 0
  %725 = load %union.tree_node*, %union.tree_node** %arrayidx2196, align 8
  store %union.tree_node* %725, %union.tree_node** %arg00, align 8
  %726 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2197 = bitcast %union.tree_node* %726 to %struct.tree_exp*
  %operands2198 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2197, i32 0, i32 2
  %arrayidx2199 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2198, i32 0, i64 1
  %727 = load %union.tree_node*, %union.tree_node** %arrayidx2199, align 8
  store %union.tree_node* %727, %union.tree_node** %arg01, align 8
  %728 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp2200 = bitcast %union.tree_node* %728 to %struct.tree_exp*
  %operands2201 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2200, i32 0, i32 2
  %arrayidx2202 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2201, i32 0, i64 0
  %729 = load %union.tree_node*, %union.tree_node** %arrayidx2202, align 8
  store %union.tree_node* %729, %union.tree_node** %arg10, align 8
  %730 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp2203 = bitcast %union.tree_node* %730 to %struct.tree_exp*
  %operands2204 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2203, i32 0, i32 2
  %arrayidx2205 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2204, i32 0, i64 1
  %731 = load %union.tree_node*, %union.tree_node** %arrayidx2205, align 8
  store %union.tree_node* %731, %union.tree_node** %arg11, align 8
  store %union.tree_node* null, %union.tree_node** %same, align 8
  %732 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  %733 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  %call2206 = call i32 @operand_equal_p(%union.tree_node* %732, %union.tree_node* %733, i32 0)
  %tobool2207 = icmp ne i32 %call2206, 0
  br i1 %tobool2207, label %if.then.2208, label %if.else.2209

if.then.2208:                                     ; preds = %if.then.2193
  %734 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  store %union.tree_node* %734, %union.tree_node** %same, align 8
  %735 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  store %union.tree_node* %735, %union.tree_node** %alt0, align 8
  %736 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  store %union.tree_node* %736, %union.tree_node** %alt1, align 8
  br label %if.end.2286

if.else.2209:                                     ; preds = %if.then.2193
  %737 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  %738 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  %call2210 = call i32 @operand_equal_p(%union.tree_node* %737, %union.tree_node* %738, i32 0)
  %tobool2211 = icmp ne i32 %call2210, 0
  br i1 %tobool2211, label %if.then.2212, label %if.else.2213

if.then.2212:                                     ; preds = %if.else.2209
  %739 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  store %union.tree_node* %739, %union.tree_node** %same, align 8
  %740 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  store %union.tree_node* %740, %union.tree_node** %alt0, align 8
  %741 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  store %union.tree_node* %741, %union.tree_node** %alt1, align 8
  br label %if.end.2285

if.else.2213:                                     ; preds = %if.else.2209
  %742 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  %743 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  %call2214 = call i32 @operand_equal_p(%union.tree_node* %742, %union.tree_node* %743, i32 0)
  %tobool2215 = icmp ne i32 %call2214, 0
  br i1 %tobool2215, label %if.then.2216, label %if.else.2217

if.then.2216:                                     ; preds = %if.else.2213
  %744 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  store %union.tree_node* %744, %union.tree_node** %same, align 8
  %745 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  store %union.tree_node* %745, %union.tree_node** %alt0, align 8
  %746 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  store %union.tree_node* %746, %union.tree_node** %alt1, align 8
  br label %if.end.2284

if.else.2217:                                     ; preds = %if.else.2213
  %747 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  %748 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  %call2218 = call i32 @operand_equal_p(%union.tree_node* %747, %union.tree_node* %748, i32 0)
  %tobool2219 = icmp ne i32 %call2218, 0
  br i1 %tobool2219, label %if.then.2220, label %if.else.2221

if.then.2220:                                     ; preds = %if.else.2217
  %749 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  store %union.tree_node* %749, %union.tree_node** %same, align 8
  %750 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  store %union.tree_node* %750, %union.tree_node** %alt0, align 8
  %751 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  store %union.tree_node* %751, %union.tree_node** %alt1, align 8
  br label %if.end.2283

if.else.2221:                                     ; preds = %if.else.2217
  %752 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  %common2222 = bitcast %union.tree_node* %752 to %struct.tree_common*
  %code2223 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2222, i32 0, i32 2
  %bf.load2224 = load i32, i32* %code2223, align 8
  %bf.clear2225 = and i32 %bf.load2224, 255
  %cmp2226 = icmp eq i32 %bf.clear2225, 25
  br i1 %cmp2226, label %land.lhs.true.2228, label %if.end.2282

land.lhs.true.2228:                               ; preds = %if.else.2221
  %753 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  %common2229 = bitcast %union.tree_node* %753 to %struct.tree_common*
  %code2230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2229, i32 0, i32 2
  %bf.load2231 = load i32, i32* %code2230, align 8
  %bf.clear2232 = and i32 %bf.load2231, 255
  %cmp2233 = icmp eq i32 %bf.clear2232, 25
  br i1 %cmp2233, label %land.lhs.true.2235, label %if.end.2282

land.lhs.true.2235:                               ; preds = %land.lhs.true.2228
  %754 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  %int_cst2236 = bitcast %union.tree_node* %754 to %struct.tree_int_cst*
  %int_cst2237 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2236, i32 0, i32 2
  %high2238 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2237, i32 0, i32 1
  %755 = load i64, i64* %high2238, align 8
  %cmp2239 = icmp eq i64 %755, 0
  br i1 %cmp2239, label %land.lhs.true.2241, label %if.end.2282

land.lhs.true.2241:                               ; preds = %land.lhs.true.2235
  %756 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  %int_cst2242 = bitcast %union.tree_node* %756 to %struct.tree_int_cst*
  %int_cst2243 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2242, i32 0, i32 2
  %high2244 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2243, i32 0, i32 1
  %757 = load i64, i64* %high2244, align 8
  %cmp2245 = icmp eq i64 %757, 0
  br i1 %cmp2245, label %if.then.2247, label %if.end.2282

if.then.2247:                                     ; preds = %land.lhs.true.2241
  %758 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  %int_cst2248 = bitcast %union.tree_node* %758 to %struct.tree_int_cst*
  %int_cst2249 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2248, i32 0, i32 2
  %low2250 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2249, i32 0, i32 0
  %759 = load i64, i64* %low2250, align 8
  store i64 %759, i64* %int01, align 8
  %760 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  %int_cst2251 = bitcast %union.tree_node* %760 to %struct.tree_int_cst*
  %int_cst2252 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2251, i32 0, i32 2
  %low2253 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2252, i32 0, i32 0
  %761 = load i64, i64* %low2253, align 8
  store i64 %761, i64* %int11, align 8
  %762 = load i64, i64* %int01, align 8
  %cmp2254 = icmp sge i64 %762, 0
  br i1 %cmp2254, label %cond.true.2256, label %cond.false.2257

cond.true.2256:                                   ; preds = %if.then.2247
  %763 = load i64, i64* %int01, align 8
  br label %cond.end.2258

cond.false.2257:                                  ; preds = %if.then.2247
  %764 = load i64, i64* %int01, align 8
  %sub = sub nsw i64 0, %764
  br label %cond.end.2258

cond.end.2258:                                    ; preds = %cond.false.2257, %cond.true.2256
  %cond2259 = phi i64 [ %763, %cond.true.2256 ], [ %sub, %cond.false.2257 ]
  %765 = load i64, i64* %int11, align 8
  %cmp2260 = icmp sge i64 %765, 0
  br i1 %cmp2260, label %cond.true.2262, label %cond.false.2263

cond.true.2262:                                   ; preds = %cond.end.2258
  %766 = load i64, i64* %int11, align 8
  br label %cond.end.2265

cond.false.2263:                                  ; preds = %cond.end.2258
  %767 = load i64, i64* %int11, align 8
  %sub2264 = sub nsw i64 0, %767
  br label %cond.end.2265

cond.end.2265:                                    ; preds = %cond.false.2263, %cond.true.2262
  %cond2266 = phi i64 [ %766, %cond.true.2262 ], [ %sub2264, %cond.false.2263 ]
  %cmp2267 = icmp slt i64 %cond2259, %cond2266
  br i1 %cmp2267, label %if.then.2269, label %if.end.2270

if.then.2269:                                     ; preds = %cond.end.2265
  %768 = load i64, i64* %int01, align 8
  store i64 %768, i64* %tmp, align 8
  %769 = load i64, i64* %int11, align 8
  store i64 %769, i64* %int01, align 8
  %770 = load i64, i64* %tmp, align 8
  store i64 %770, i64* %int11, align 8
  %771 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  store %union.tree_node* %771, %union.tree_node** %alt0, align 8
  %772 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  store %union.tree_node* %772, %union.tree_node** %arg00, align 8
  %773 = load %union.tree_node*, %union.tree_node** %alt0, align 8
  store %union.tree_node* %773, %union.tree_node** %arg10, align 8
  %774 = load %union.tree_node*, %union.tree_node** %arg01, align 8
  store %union.tree_node* %774, %union.tree_node** %alt0, align 8
  %775 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  store %union.tree_node* %775, %union.tree_node** %arg01, align 8
  %776 = load %union.tree_node*, %union.tree_node** %alt0, align 8
  store %union.tree_node* %776, %union.tree_node** %arg11, align 8
  br label %if.end.2270

if.end.2270:                                      ; preds = %if.then.2269, %cond.end.2265
  %777 = load i64, i64* %int11, align 8
  %call2271 = call i32 @exact_log2_wide(i64 %777)
  %cmp2272 = icmp sgt i32 %call2271, 0
  br i1 %cmp2272, label %land.lhs.true.2274, label %if.end.2281

land.lhs.true.2274:                               ; preds = %if.end.2270
  %778 = load i64, i64* %int01, align 8
  %779 = load i64, i64* %int11, align 8
  %rem = srem i64 %778, %779
  %cmp2275 = icmp eq i64 %rem, 0
  br i1 %cmp2275, label %if.then.2277, label %if.end.2281

if.then.2277:                                     ; preds = %land.lhs.true.2274
  %780 = load %union.tree_node*, %union.tree_node** %type, align 8
  %781 = load %union.tree_node*, %union.tree_node** %arg00, align 8
  %782 = load i64, i64* %int01, align 8
  %783 = load i64, i64* %int11, align 8
  %div = sdiv i64 %782, %783
  %call2278 = call %union.tree_node* @build_int_2_wide(i64 %div, i64 0)
  %call2279 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %780, %union.tree_node* %781, %union.tree_node* %call2278)
  %call2280 = call %union.tree_node* @fold(%union.tree_node* %call2279)
  store %union.tree_node* %call2280, %union.tree_node** %alt0, align 8
  %784 = load %union.tree_node*, %union.tree_node** %arg10, align 8
  store %union.tree_node* %784, %union.tree_node** %alt1, align 8
  %785 = load %union.tree_node*, %union.tree_node** %arg11, align 8
  store %union.tree_node* %785, %union.tree_node** %same, align 8
  br label %if.end.2281

if.end.2281:                                      ; preds = %if.then.2277, %land.lhs.true.2274, %if.end.2270
  br label %if.end.2282

if.end.2282:                                      ; preds = %if.end.2281, %land.lhs.true.2241, %land.lhs.true.2235, %land.lhs.true.2228, %if.else.2221
  br label %if.end.2283

if.end.2283:                                      ; preds = %if.end.2282, %if.then.2220
  br label %if.end.2284

if.end.2284:                                      ; preds = %if.end.2283, %if.then.2216
  br label %if.end.2285

if.end.2285:                                      ; preds = %if.end.2284, %if.then.2212
  br label %if.end.2286

if.end.2286:                                      ; preds = %if.end.2285, %if.then.2208
  %786 = load %union.tree_node*, %union.tree_node** %same, align 8
  %tobool2287 = icmp ne %union.tree_node* %786, null
  br i1 %tobool2287, label %if.then.2288, label %if.end.2293

if.then.2288:                                     ; preds = %if.end.2286
  %787 = load %union.tree_node*, %union.tree_node** %type, align 8
  %788 = load %union.tree_node*, %union.tree_node** %type, align 8
  %789 = load %union.tree_node*, %union.tree_node** %alt0, align 8
  %790 = load %union.tree_node*, %union.tree_node** %alt1, align 8
  %call2289 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %788, %union.tree_node* %789, %union.tree_node* %790)
  %call2290 = call %union.tree_node* @fold(%union.tree_node* %call2289)
  %791 = load %union.tree_node*, %union.tree_node** %same, align 8
  %call2291 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %787, %union.tree_node* %call2290, %union.tree_node* %791)
  %call2292 = call %union.tree_node* @fold(%union.tree_node* %call2291)
  store %union.tree_node* %call2292, %union.tree_node** %retval
  br label %return

if.end.2293:                                      ; preds = %if.end.2286
  br label %if.end.2294

if.end.2294:                                      ; preds = %if.end.2293, %land.lhs.true.2186, %if.end.2179
  br label %if.end.2327

if.else.2295:                                     ; preds = %land.lhs.true.1929, %if.else.1915
  %792 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool2296 = icmp ne i32 %792, 0
  br i1 %tobool2296, label %land.lhs.true.2297, label %if.else.2303

land.lhs.true.2297:                               ; preds = %if.else.2295
  %793 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call2298 = call i32 @real_zerop(%union.tree_node* %793)
  %tobool2299 = icmp ne i32 %call2298, 0
  br i1 %tobool2299, label %if.then.2300, label %if.else.2303

if.then.2300:                                     ; preds = %land.lhs.true.2297
  %794 = load %union.tree_node*, %union.tree_node** %type, align 8
  %795 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call2301 = call %union.tree_node* @convert(%union.tree_node* %794, %union.tree_node* %795)
  %call2302 = call %union.tree_node* @non_lvalue(%union.tree_node* %call2301)
  store %union.tree_node* %call2302, %union.tree_node** %retval
  br label %return

if.else.2303:                                     ; preds = %land.lhs.true.2297, %if.else.2295
  %796 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2304 = bitcast %union.tree_node* %796 to %struct.tree_common*
  %code2305 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2304, i32 0, i32 2
  %bf.load2306 = load i32, i32* %code2305, align 8
  %bf.clear2307 = and i32 %bf.load2306, 255
  %cmp2308 = icmp eq i32 %bf.clear2307, 26
  br i1 %cmp2308, label %land.lhs.true.2310, label %if.end.2325

land.lhs.true.2310:                               ; preds = %if.else.2303
  %797 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst2311 = bitcast %union.tree_node* %797 to %struct.tree_real_cst*
  %real_cst2312 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst2311, i32 0, i32 2
  %call2313 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %real_cst2312, %struct.realvaluetype* byval align 8 @dconst0)
  %cmp2314 = icmp eq i32 %call2313, 0
  br i1 %cmp2314, label %land.lhs.true.2316, label %if.end.2325

land.lhs.true.2316:                               ; preds = %land.lhs.true.2310
  %798 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst2317 = bitcast %union.tree_node* %798 to %struct.tree_real_cst*
  %real_cst2318 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst2317, i32 0, i32 2
  %call2319 = call i32 @ereal_isneg(%struct.realvaluetype* byval align 8 %real_cst2318)
  %cmp2320 = icmp ne i32 %call2319, 0
  br i1 %cmp2320, label %if.then.2322, label %if.end.2325

if.then.2322:                                     ; preds = %land.lhs.true.2316
  %799 = load %union.tree_node*, %union.tree_node** %type, align 8
  %800 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call2323 = call %union.tree_node* @convert(%union.tree_node* %799, %union.tree_node* %800)
  %call2324 = call %union.tree_node* @non_lvalue(%union.tree_node* %call2323)
  store %union.tree_node* %call2324, %union.tree_node** %retval
  br label %return

if.end.2325:                                      ; preds = %land.lhs.true.2316, %land.lhs.true.2310, %if.else.2303
  br label %if.end.2326

if.end.2326:                                      ; preds = %if.end.2325
  br label %if.end.2327

if.end.2327:                                      ; preds = %if.end.2326, %if.end.2294
  br label %if.end.2328

if.end.2328:                                      ; preds = %if.end.2327
  br label %bit_rotate

bit_rotate:                                       ; preds = %if.end.3382, %if.end.3324, %if.end.2328
  %801 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common2331 = bitcast %union.tree_node* %801 to %struct.tree_common*
  %code2332 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2331, i32 0, i32 2
  %bf.load2333 = load i32, i32* %code2332, align 8
  %bf.clear2334 = and i32 %bf.load2333, 255
  store i32 %bf.clear2334, i32* %code0, align 4
  %802 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2335 = bitcast %union.tree_node* %802 to %struct.tree_common*
  %code2336 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2335, i32 0, i32 2
  %bf.load2337 = load i32, i32* %code2336, align 8
  %bf.clear2338 = and i32 %bf.load2337, 255
  store i32 %bf.clear2338, i32* %code1, align 4
  %803 = load i32, i32* %code0, align 4
  %cmp2339 = icmp eq i32 %803, 83
  br i1 %cmp2339, label %land.lhs.true.2341, label %lor.lhs.false.2344

land.lhs.true.2341:                               ; preds = %bit_rotate
  %804 = load i32, i32* %code1, align 4
  %cmp2342 = icmp eq i32 %804, 82
  br i1 %cmp2342, label %land.lhs.true.2350, label %lor.lhs.false.2344

lor.lhs.false.2344:                               ; preds = %land.lhs.true.2341, %bit_rotate
  %805 = load i32, i32* %code1, align 4
  %cmp2345 = icmp eq i32 %805, 83
  br i1 %cmp2345, label %land.lhs.true.2347, label %if.end.2853

land.lhs.true.2347:                               ; preds = %lor.lhs.false.2344
  %806 = load i32, i32* %code0, align 4
  %cmp2348 = icmp eq i32 %806, 82
  br i1 %cmp2348, label %land.lhs.true.2350, label %if.end.2853

land.lhs.true.2350:                               ; preds = %land.lhs.true.2347, %land.lhs.true.2341
  %807 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2351 = bitcast %union.tree_node* %807 to %struct.tree_exp*
  %operands2352 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2351, i32 0, i32 2
  %arrayidx2353 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2352, i32 0, i64 0
  %808 = load %union.tree_node*, %union.tree_node** %arrayidx2353, align 8
  %809 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp2354 = bitcast %union.tree_node* %809 to %struct.tree_exp*
  %operands2355 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2354, i32 0, i32 2
  %arrayidx2356 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2355, i32 0, i64 0
  %810 = load %union.tree_node*, %union.tree_node** %arrayidx2356, align 8
  %call2357 = call i32 @operand_equal_p(%union.tree_node* %808, %union.tree_node* %810, i32 0)
  %tobool2358 = icmp ne i32 %call2357, 0
  br i1 %tobool2358, label %land.lhs.true.2359, label %if.end.2853

land.lhs.true.2359:                               ; preds = %land.lhs.true.2350
  %811 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2360 = bitcast %union.tree_node* %811 to %struct.tree_exp*
  %operands2361 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2360, i32 0, i32 2
  %arrayidx2362 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2361, i32 0, i64 0
  %812 = load %union.tree_node*, %union.tree_node** %arrayidx2362, align 8
  %common2363 = bitcast %union.tree_node* %812 to %struct.tree_common*
  %type2364 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2363, i32 0, i32 1
  %813 = load %union.tree_node*, %union.tree_node** %type2364, align 8
  %common2365 = bitcast %union.tree_node* %813 to %struct.tree_common*
  %unsigned_flag2366 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2365, i32 0, i32 2
  %bf.load2367 = load i32, i32* %unsigned_flag2366, align 8
  %bf.lshr2368 = lshr i32 %bf.load2367, 13
  %bf.clear2369 = and i32 %bf.lshr2368, 1
  %tobool2370 = icmp ne i32 %bf.clear2369, 0
  br i1 %tobool2370, label %if.then.2371, label %if.end.2853

if.then.2371:                                     ; preds = %land.lhs.true.2359
  %814 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2376 = bitcast %union.tree_node* %814 to %struct.tree_exp*
  %operands2377 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2376, i32 0, i32 2
  %arrayidx2378 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2377, i32 0, i64 1
  %815 = load %union.tree_node*, %union.tree_node** %arrayidx2378, align 8
  store %union.tree_node* %815, %union.tree_node** %tree01, align 8
  %816 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp2379 = bitcast %union.tree_node* %816 to %struct.tree_exp*
  %operands2380 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2379, i32 0, i32 2
  %arrayidx2381 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2380, i32 0, i64 1
  %817 = load %union.tree_node*, %union.tree_node** %arrayidx2381, align 8
  store %union.tree_node* %817, %union.tree_node** %tree11, align 8
  br label %while.cond.2382

while.cond.2382:                                  ; preds = %while.body.2431, %if.then.2371
  %818 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %common2383 = bitcast %union.tree_node* %818 to %struct.tree_common*
  %code2384 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2383, i32 0, i32 2
  %bf.load2385 = load i32, i32* %code2384, align 8
  %bf.clear2386 = and i32 %bf.load2385, 255
  %cmp2387 = icmp eq i32 %bf.clear2386, 115
  br i1 %cmp2387, label %land.lhs.true.2403, label %lor.lhs.false.2389

lor.lhs.false.2389:                               ; preds = %while.cond.2382
  %819 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %common2390 = bitcast %union.tree_node* %819 to %struct.tree_common*
  %code2391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2390, i32 0, i32 2
  %bf.load2392 = load i32, i32* %code2391, align 8
  %bf.clear2393 = and i32 %bf.load2392, 255
  %cmp2394 = icmp eq i32 %bf.clear2393, 114
  br i1 %cmp2394, label %land.lhs.true.2403, label %lor.lhs.false.2396

lor.lhs.false.2396:                               ; preds = %lor.lhs.false.2389
  %820 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %common2397 = bitcast %union.tree_node* %820 to %struct.tree_common*
  %code2398 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2397, i32 0, i32 2
  %bf.load2399 = load i32, i32* %code2398, align 8
  %bf.clear2400 = and i32 %bf.load2399, 255
  %cmp2401 = icmp eq i32 %bf.clear2400, 116
  br i1 %cmp2401, label %land.lhs.true.2403, label %land.end.2429

land.lhs.true.2403:                               ; preds = %lor.lhs.false.2396, %lor.lhs.false.2389, %while.cond.2382
  %821 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %exp2404 = bitcast %union.tree_node* %821 to %struct.tree_exp*
  %operands2405 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2404, i32 0, i32 2
  %arrayidx2406 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2405, i32 0, i64 0
  %822 = load %union.tree_node*, %union.tree_node** %arrayidx2406, align 8
  %823 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2407 = icmp ne %union.tree_node* %822, %823
  br i1 %cmp2407, label %land.rhs.2409, label %land.end.2429

land.rhs.2409:                                    ; preds = %land.lhs.true.2403
  %824 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %common2410 = bitcast %union.tree_node* %824 to %struct.tree_common*
  %type2411 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2410, i32 0, i32 1
  %825 = load %union.tree_node*, %union.tree_node** %type2411, align 8
  %type2412 = bitcast %union.tree_node* %825 to %struct.tree_type*
  %mode2413 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2412, i32 0, i32 6
  %bf.load2414 = load i32, i32* %mode2413, align 4
  %bf.lshr2415 = lshr i32 %bf.load2414, 9
  %bf.clear2416 = and i32 %bf.lshr2415, 127
  %826 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %exp2417 = bitcast %union.tree_node* %826 to %struct.tree_exp*
  %operands2418 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2417, i32 0, i32 2
  %arrayidx2419 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2418, i32 0, i64 0
  %827 = load %union.tree_node*, %union.tree_node** %arrayidx2419, align 8
  %common2420 = bitcast %union.tree_node* %827 to %struct.tree_common*
  %type2421 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2420, i32 0, i32 1
  %828 = load %union.tree_node*, %union.tree_node** %type2421, align 8
  %type2422 = bitcast %union.tree_node* %828 to %struct.tree_type*
  %mode2423 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2422, i32 0, i32 6
  %bf.load2424 = load i32, i32* %mode2423, align 4
  %bf.lshr2425 = lshr i32 %bf.load2424, 9
  %bf.clear2426 = and i32 %bf.lshr2425, 127
  %cmp2427 = icmp eq i32 %bf.clear2416, %bf.clear2426
  br label %land.end.2429

land.end.2429:                                    ; preds = %land.rhs.2409, %land.lhs.true.2403, %lor.lhs.false.2396
  %829 = phi i1 [ false, %land.lhs.true.2403 ], [ false, %lor.lhs.false.2396 ], [ %cmp2427, %land.rhs.2409 ]
  br i1 %829, label %while.body.2431, label %while.end.2435

while.body.2431:                                  ; preds = %land.end.2429
  %830 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %exp2432 = bitcast %union.tree_node* %830 to %struct.tree_exp*
  %operands2433 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2432, i32 0, i32 2
  %arrayidx2434 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2433, i32 0, i64 0
  %831 = load %union.tree_node*, %union.tree_node** %arrayidx2434, align 8
  store %union.tree_node* %831, %union.tree_node** %tree01, align 8
  br label %while.cond.2382

while.end.2435:                                   ; preds = %land.end.2429
  br label %while.cond.2436

while.cond.2436:                                  ; preds = %while.body.2485, %while.end.2435
  %832 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %common2437 = bitcast %union.tree_node* %832 to %struct.tree_common*
  %code2438 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2437, i32 0, i32 2
  %bf.load2439 = load i32, i32* %code2438, align 8
  %bf.clear2440 = and i32 %bf.load2439, 255
  %cmp2441 = icmp eq i32 %bf.clear2440, 115
  br i1 %cmp2441, label %land.lhs.true.2457, label %lor.lhs.false.2443

lor.lhs.false.2443:                               ; preds = %while.cond.2436
  %833 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %common2444 = bitcast %union.tree_node* %833 to %struct.tree_common*
  %code2445 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2444, i32 0, i32 2
  %bf.load2446 = load i32, i32* %code2445, align 8
  %bf.clear2447 = and i32 %bf.load2446, 255
  %cmp2448 = icmp eq i32 %bf.clear2447, 114
  br i1 %cmp2448, label %land.lhs.true.2457, label %lor.lhs.false.2450

lor.lhs.false.2450:                               ; preds = %lor.lhs.false.2443
  %834 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %common2451 = bitcast %union.tree_node* %834 to %struct.tree_common*
  %code2452 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2451, i32 0, i32 2
  %bf.load2453 = load i32, i32* %code2452, align 8
  %bf.clear2454 = and i32 %bf.load2453, 255
  %cmp2455 = icmp eq i32 %bf.clear2454, 116
  br i1 %cmp2455, label %land.lhs.true.2457, label %land.end.2483

land.lhs.true.2457:                               ; preds = %lor.lhs.false.2450, %lor.lhs.false.2443, %while.cond.2436
  %835 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %exp2458 = bitcast %union.tree_node* %835 to %struct.tree_exp*
  %operands2459 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2458, i32 0, i32 2
  %arrayidx2460 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2459, i32 0, i64 0
  %836 = load %union.tree_node*, %union.tree_node** %arrayidx2460, align 8
  %837 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2461 = icmp ne %union.tree_node* %836, %837
  br i1 %cmp2461, label %land.rhs.2463, label %land.end.2483

land.rhs.2463:                                    ; preds = %land.lhs.true.2457
  %838 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %common2464 = bitcast %union.tree_node* %838 to %struct.tree_common*
  %type2465 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2464, i32 0, i32 1
  %839 = load %union.tree_node*, %union.tree_node** %type2465, align 8
  %type2466 = bitcast %union.tree_node* %839 to %struct.tree_type*
  %mode2467 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2466, i32 0, i32 6
  %bf.load2468 = load i32, i32* %mode2467, align 4
  %bf.lshr2469 = lshr i32 %bf.load2468, 9
  %bf.clear2470 = and i32 %bf.lshr2469, 127
  %840 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %exp2471 = bitcast %union.tree_node* %840 to %struct.tree_exp*
  %operands2472 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2471, i32 0, i32 2
  %arrayidx2473 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2472, i32 0, i64 0
  %841 = load %union.tree_node*, %union.tree_node** %arrayidx2473, align 8
  %common2474 = bitcast %union.tree_node* %841 to %struct.tree_common*
  %type2475 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2474, i32 0, i32 1
  %842 = load %union.tree_node*, %union.tree_node** %type2475, align 8
  %type2476 = bitcast %union.tree_node* %842 to %struct.tree_type*
  %mode2477 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2476, i32 0, i32 6
  %bf.load2478 = load i32, i32* %mode2477, align 4
  %bf.lshr2479 = lshr i32 %bf.load2478, 9
  %bf.clear2480 = and i32 %bf.lshr2479, 127
  %cmp2481 = icmp eq i32 %bf.clear2470, %bf.clear2480
  br label %land.end.2483

land.end.2483:                                    ; preds = %land.rhs.2463, %land.lhs.true.2457, %lor.lhs.false.2450
  %843 = phi i1 [ false, %land.lhs.true.2457 ], [ false, %lor.lhs.false.2450 ], [ %cmp2481, %land.rhs.2463 ]
  br i1 %843, label %while.body.2485, label %while.end.2489

while.body.2485:                                  ; preds = %land.end.2483
  %844 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %exp2486 = bitcast %union.tree_node* %844 to %struct.tree_exp*
  %operands2487 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2486, i32 0, i32 2
  %arrayidx2488 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2487, i32 0, i64 0
  %845 = load %union.tree_node*, %union.tree_node** %arrayidx2488, align 8
  store %union.tree_node* %845, %union.tree_node** %tree11, align 8
  br label %while.cond.2436

while.end.2489:                                   ; preds = %land.end.2483
  %846 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %common2490 = bitcast %union.tree_node* %846 to %struct.tree_common*
  %code2491 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2490, i32 0, i32 2
  %bf.load2492 = load i32, i32* %code2491, align 8
  %bf.clear2493 = and i32 %bf.load2492, 255
  store i32 %bf.clear2493, i32* %code01, align 4
  %847 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %common2494 = bitcast %union.tree_node* %847 to %struct.tree_common*
  %code2495 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2494, i32 0, i32 2
  %bf.load2496 = load i32, i32* %code2495, align 8
  %bf.clear2497 = and i32 %bf.load2496, 255
  store i32 %bf.clear2497, i32* %code11, align 4
  %848 = load i32, i32* %code01, align 4
  %cmp2498 = icmp eq i32 %848, 25
  br i1 %cmp2498, label %land.lhs.true.2500, label %if.else.2546

land.lhs.true.2500:                               ; preds = %while.end.2489
  %849 = load i32, i32* %code11, align 4
  %cmp2501 = icmp eq i32 %849, 25
  br i1 %cmp2501, label %land.lhs.true.2503, label %if.else.2546

land.lhs.true.2503:                               ; preds = %land.lhs.true.2500
  %850 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %int_cst2504 = bitcast %union.tree_node* %850 to %struct.tree_int_cst*
  %int_cst2505 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2504, i32 0, i32 2
  %high2506 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2505, i32 0, i32 1
  %851 = load i64, i64* %high2506, align 8
  %cmp2507 = icmp eq i64 %851, 0
  br i1 %cmp2507, label %land.lhs.true.2509, label %if.else.2546

land.lhs.true.2509:                               ; preds = %land.lhs.true.2503
  %852 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %int_cst2510 = bitcast %union.tree_node* %852 to %struct.tree_int_cst*
  %int_cst2511 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2510, i32 0, i32 2
  %high2512 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2511, i32 0, i32 1
  %853 = load i64, i64* %high2512, align 8
  %cmp2513 = icmp eq i64 %853, 0
  br i1 %cmp2513, label %land.lhs.true.2515, label %if.else.2546

land.lhs.true.2515:                               ; preds = %land.lhs.true.2509
  %854 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %int_cst2516 = bitcast %union.tree_node* %854 to %struct.tree_int_cst*
  %int_cst2517 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2516, i32 0, i32 2
  %low2518 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2517, i32 0, i32 0
  %855 = load i64, i64* %low2518, align 8
  %856 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %int_cst2519 = bitcast %union.tree_node* %856 to %struct.tree_int_cst*
  %int_cst2520 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst2519, i32 0, i32 2
  %low2521 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst2520, i32 0, i32 0
  %857 = load i64, i64* %low2521, align 8
  %add2522 = add i64 %855, %857
  %858 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2523 = bitcast %union.tree_node* %858 to %struct.tree_exp*
  %operands2524 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2523, i32 0, i32 2
  %arrayidx2525 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2524, i32 0, i64 0
  %859 = load %union.tree_node*, %union.tree_node** %arrayidx2525, align 8
  %common2526 = bitcast %union.tree_node* %859 to %struct.tree_common*
  %type2527 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2526, i32 0, i32 1
  %860 = load %union.tree_node*, %union.tree_node** %type2527, align 8
  %type2528 = bitcast %union.tree_node* %860 to %struct.tree_type*
  %precision2529 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2528, i32 0, i32 6
  %bf.load2530 = load i32, i32* %precision2529, align 4
  %bf.clear2531 = and i32 %bf.load2530, 511
  %conv2532 = zext i32 %bf.clear2531 to i64
  %cmp2533 = icmp eq i64 %add2522, %conv2532
  br i1 %cmp2533, label %if.then.2535, label %if.else.2546

if.then.2535:                                     ; preds = %land.lhs.true.2515
  %861 = load %union.tree_node*, %union.tree_node** %type, align 8
  %862 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2536 = bitcast %union.tree_node* %862 to %struct.tree_exp*
  %operands2537 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2536, i32 0, i32 2
  %arrayidx2538 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2537, i32 0, i64 0
  %863 = load %union.tree_node*, %union.tree_node** %arrayidx2538, align 8
  %864 = load i32, i32* %code0, align 4
  %cmp2539 = icmp eq i32 %864, 82
  br i1 %cmp2539, label %cond.true.2541, label %cond.false.2542

cond.true.2541:                                   ; preds = %if.then.2535
  %865 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  br label %cond.end.2543

cond.false.2542:                                  ; preds = %if.then.2535
  %866 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  br label %cond.end.2543

cond.end.2543:                                    ; preds = %cond.false.2542, %cond.true.2541
  %cond2544 = phi %union.tree_node* [ %865, %cond.true.2541 ], [ %866, %cond.false.2542 ]
  %call2545 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 84, %union.tree_node* %861, %union.tree_node* %863, %union.tree_node* %cond2544)
  store %union.tree_node* %call2545, %union.tree_node** %retval
  br label %return

if.else.2546:                                     ; preds = %land.lhs.true.2515, %land.lhs.true.2509, %land.lhs.true.2503, %land.lhs.true.2500, %while.end.2489
  %867 = load i32, i32* %code11, align 4
  %cmp2547 = icmp eq i32 %867, 60
  br i1 %cmp2547, label %if.then.2549, label %if.else.2698

if.then.2549:                                     ; preds = %if.else.2546
  %868 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %exp2552 = bitcast %union.tree_node* %868 to %struct.tree_exp*
  %operands2553 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2552, i32 0, i32 2
  %arrayidx2554 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2553, i32 0, i64 0
  %869 = load %union.tree_node*, %union.tree_node** %arrayidx2554, align 8
  store %union.tree_node* %869, %union.tree_node** %tree110, align 8
  %870 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %exp2555 = bitcast %union.tree_node* %870 to %struct.tree_exp*
  %operands2556 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2555, i32 0, i32 2
  %arrayidx2557 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2556, i32 0, i64 1
  %871 = load %union.tree_node*, %union.tree_node** %arrayidx2557, align 8
  store %union.tree_node* %871, %union.tree_node** %tree111, align 8
  br label %while.cond.2558

while.cond.2558:                                  ; preds = %while.body.2607, %if.then.2549
  %872 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %common2559 = bitcast %union.tree_node* %872 to %struct.tree_common*
  %code2560 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2559, i32 0, i32 2
  %bf.load2561 = load i32, i32* %code2560, align 8
  %bf.clear2562 = and i32 %bf.load2561, 255
  %cmp2563 = icmp eq i32 %bf.clear2562, 115
  br i1 %cmp2563, label %land.lhs.true.2579, label %lor.lhs.false.2565

lor.lhs.false.2565:                               ; preds = %while.cond.2558
  %873 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %common2566 = bitcast %union.tree_node* %873 to %struct.tree_common*
  %code2567 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2566, i32 0, i32 2
  %bf.load2568 = load i32, i32* %code2567, align 8
  %bf.clear2569 = and i32 %bf.load2568, 255
  %cmp2570 = icmp eq i32 %bf.clear2569, 114
  br i1 %cmp2570, label %land.lhs.true.2579, label %lor.lhs.false.2572

lor.lhs.false.2572:                               ; preds = %lor.lhs.false.2565
  %874 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %common2573 = bitcast %union.tree_node* %874 to %struct.tree_common*
  %code2574 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2573, i32 0, i32 2
  %bf.load2575 = load i32, i32* %code2574, align 8
  %bf.clear2576 = and i32 %bf.load2575, 255
  %cmp2577 = icmp eq i32 %bf.clear2576, 116
  br i1 %cmp2577, label %land.lhs.true.2579, label %land.end.2605

land.lhs.true.2579:                               ; preds = %lor.lhs.false.2572, %lor.lhs.false.2565, %while.cond.2558
  %875 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %exp2580 = bitcast %union.tree_node* %875 to %struct.tree_exp*
  %operands2581 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2580, i32 0, i32 2
  %arrayidx2582 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2581, i32 0, i64 0
  %876 = load %union.tree_node*, %union.tree_node** %arrayidx2582, align 8
  %877 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2583 = icmp ne %union.tree_node* %876, %877
  br i1 %cmp2583, label %land.rhs.2585, label %land.end.2605

land.rhs.2585:                                    ; preds = %land.lhs.true.2579
  %878 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %common2586 = bitcast %union.tree_node* %878 to %struct.tree_common*
  %type2587 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2586, i32 0, i32 1
  %879 = load %union.tree_node*, %union.tree_node** %type2587, align 8
  %type2588 = bitcast %union.tree_node* %879 to %struct.tree_type*
  %mode2589 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2588, i32 0, i32 6
  %bf.load2590 = load i32, i32* %mode2589, align 4
  %bf.lshr2591 = lshr i32 %bf.load2590, 9
  %bf.clear2592 = and i32 %bf.lshr2591, 127
  %880 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %exp2593 = bitcast %union.tree_node* %880 to %struct.tree_exp*
  %operands2594 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2593, i32 0, i32 2
  %arrayidx2595 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2594, i32 0, i64 0
  %881 = load %union.tree_node*, %union.tree_node** %arrayidx2595, align 8
  %common2596 = bitcast %union.tree_node* %881 to %struct.tree_common*
  %type2597 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2596, i32 0, i32 1
  %882 = load %union.tree_node*, %union.tree_node** %type2597, align 8
  %type2598 = bitcast %union.tree_node* %882 to %struct.tree_type*
  %mode2599 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2598, i32 0, i32 6
  %bf.load2600 = load i32, i32* %mode2599, align 4
  %bf.lshr2601 = lshr i32 %bf.load2600, 9
  %bf.clear2602 = and i32 %bf.lshr2601, 127
  %cmp2603 = icmp eq i32 %bf.clear2592, %bf.clear2602
  br label %land.end.2605

land.end.2605:                                    ; preds = %land.rhs.2585, %land.lhs.true.2579, %lor.lhs.false.2572
  %883 = phi i1 [ false, %land.lhs.true.2579 ], [ false, %lor.lhs.false.2572 ], [ %cmp2603, %land.rhs.2585 ]
  br i1 %883, label %while.body.2607, label %while.end.2611

while.body.2607:                                  ; preds = %land.end.2605
  %884 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %exp2608 = bitcast %union.tree_node* %884 to %struct.tree_exp*
  %operands2609 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2608, i32 0, i32 2
  %arrayidx2610 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2609, i32 0, i64 0
  %885 = load %union.tree_node*, %union.tree_node** %arrayidx2610, align 8
  store %union.tree_node* %885, %union.tree_node** %tree110, align 8
  br label %while.cond.2558

while.end.2611:                                   ; preds = %land.end.2605
  br label %while.cond.2612

while.cond.2612:                                  ; preds = %while.body.2661, %while.end.2611
  %886 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %common2613 = bitcast %union.tree_node* %886 to %struct.tree_common*
  %code2614 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2613, i32 0, i32 2
  %bf.load2615 = load i32, i32* %code2614, align 8
  %bf.clear2616 = and i32 %bf.load2615, 255
  %cmp2617 = icmp eq i32 %bf.clear2616, 115
  br i1 %cmp2617, label %land.lhs.true.2633, label %lor.lhs.false.2619

lor.lhs.false.2619:                               ; preds = %while.cond.2612
  %887 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %common2620 = bitcast %union.tree_node* %887 to %struct.tree_common*
  %code2621 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2620, i32 0, i32 2
  %bf.load2622 = load i32, i32* %code2621, align 8
  %bf.clear2623 = and i32 %bf.load2622, 255
  %cmp2624 = icmp eq i32 %bf.clear2623, 114
  br i1 %cmp2624, label %land.lhs.true.2633, label %lor.lhs.false.2626

lor.lhs.false.2626:                               ; preds = %lor.lhs.false.2619
  %888 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %common2627 = bitcast %union.tree_node* %888 to %struct.tree_common*
  %code2628 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2627, i32 0, i32 2
  %bf.load2629 = load i32, i32* %code2628, align 8
  %bf.clear2630 = and i32 %bf.load2629, 255
  %cmp2631 = icmp eq i32 %bf.clear2630, 116
  br i1 %cmp2631, label %land.lhs.true.2633, label %land.end.2659

land.lhs.true.2633:                               ; preds = %lor.lhs.false.2626, %lor.lhs.false.2619, %while.cond.2612
  %889 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %exp2634 = bitcast %union.tree_node* %889 to %struct.tree_exp*
  %operands2635 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2634, i32 0, i32 2
  %arrayidx2636 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2635, i32 0, i64 0
  %890 = load %union.tree_node*, %union.tree_node** %arrayidx2636, align 8
  %891 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2637 = icmp ne %union.tree_node* %890, %891
  br i1 %cmp2637, label %land.rhs.2639, label %land.end.2659

land.rhs.2639:                                    ; preds = %land.lhs.true.2633
  %892 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %common2640 = bitcast %union.tree_node* %892 to %struct.tree_common*
  %type2641 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2640, i32 0, i32 1
  %893 = load %union.tree_node*, %union.tree_node** %type2641, align 8
  %type2642 = bitcast %union.tree_node* %893 to %struct.tree_type*
  %mode2643 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2642, i32 0, i32 6
  %bf.load2644 = load i32, i32* %mode2643, align 4
  %bf.lshr2645 = lshr i32 %bf.load2644, 9
  %bf.clear2646 = and i32 %bf.lshr2645, 127
  %894 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %exp2647 = bitcast %union.tree_node* %894 to %struct.tree_exp*
  %operands2648 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2647, i32 0, i32 2
  %arrayidx2649 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2648, i32 0, i64 0
  %895 = load %union.tree_node*, %union.tree_node** %arrayidx2649, align 8
  %common2650 = bitcast %union.tree_node* %895 to %struct.tree_common*
  %type2651 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2650, i32 0, i32 1
  %896 = load %union.tree_node*, %union.tree_node** %type2651, align 8
  %type2652 = bitcast %union.tree_node* %896 to %struct.tree_type*
  %mode2653 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2652, i32 0, i32 6
  %bf.load2654 = load i32, i32* %mode2653, align 4
  %bf.lshr2655 = lshr i32 %bf.load2654, 9
  %bf.clear2656 = and i32 %bf.lshr2655, 127
  %cmp2657 = icmp eq i32 %bf.clear2646, %bf.clear2656
  br label %land.end.2659

land.end.2659:                                    ; preds = %land.rhs.2639, %land.lhs.true.2633, %lor.lhs.false.2626
  %897 = phi i1 [ false, %land.lhs.true.2633 ], [ false, %lor.lhs.false.2626 ], [ %cmp2657, %land.rhs.2639 ]
  br i1 %897, label %while.body.2661, label %while.end.2665

while.body.2661:                                  ; preds = %land.end.2659
  %898 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %exp2662 = bitcast %union.tree_node* %898 to %struct.tree_exp*
  %operands2663 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2662, i32 0, i32 2
  %arrayidx2664 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2663, i32 0, i64 0
  %899 = load %union.tree_node*, %union.tree_node** %arrayidx2664, align 8
  store %union.tree_node* %899, %union.tree_node** %tree111, align 8
  br label %while.cond.2612

while.end.2665:                                   ; preds = %land.end.2659
  %900 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %common2666 = bitcast %union.tree_node* %900 to %struct.tree_common*
  %code2667 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2666, i32 0, i32 2
  %bf.load2668 = load i32, i32* %code2667, align 8
  %bf.clear2669 = and i32 %bf.load2668, 255
  %cmp2670 = icmp eq i32 %bf.clear2669, 25
  br i1 %cmp2670, label %land.lhs.true.2672, label %if.end.2697

land.lhs.true.2672:                               ; preds = %while.end.2665
  %901 = load %union.tree_node*, %union.tree_node** %tree110, align 8
  %902 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2673 = bitcast %union.tree_node* %902 to %struct.tree_exp*
  %operands2674 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2673, i32 0, i32 2
  %arrayidx2675 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2674, i32 0, i64 0
  %903 = load %union.tree_node*, %union.tree_node** %arrayidx2675, align 8
  %common2676 = bitcast %union.tree_node* %903 to %struct.tree_common*
  %type2677 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2676, i32 0, i32 1
  %904 = load %union.tree_node*, %union.tree_node** %type2677, align 8
  %type2678 = bitcast %union.tree_node* %904 to %struct.tree_type*
  %precision2679 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2678, i32 0, i32 6
  %bf.load2680 = load i32, i32* %precision2679, align 4
  %bf.clear2681 = and i32 %bf.load2680, 511
  %conv2682 = zext i32 %bf.clear2681 to i64
  %call2683 = call i32 @compare_tree_int(%union.tree_node* %901, i64 %conv2682)
  %cmp2684 = icmp eq i32 0, %call2683
  br i1 %cmp2684, label %land.lhs.true.2686, label %if.end.2697

land.lhs.true.2686:                               ; preds = %land.lhs.true.2672
  %905 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %906 = load %union.tree_node*, %union.tree_node** %tree111, align 8
  %call2687 = call i32 @operand_equal_p(%union.tree_node* %905, %union.tree_node* %906, i32 0)
  %tobool2688 = icmp ne i32 %call2687, 0
  br i1 %tobool2688, label %if.then.2689, label %if.end.2697

if.then.2689:                                     ; preds = %land.lhs.true.2686
  %907 = load i32, i32* %code0, align 4
  %cmp2690 = icmp eq i32 %907, 82
  %cond2692 = select i1 %cmp2690, i32 84, i32 85
  %908 = load %union.tree_node*, %union.tree_node** %type, align 8
  %909 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2693 = bitcast %union.tree_node* %909 to %struct.tree_exp*
  %operands2694 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2693, i32 0, i32 2
  %arrayidx2695 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2694, i32 0, i64 0
  %910 = load %union.tree_node*, %union.tree_node** %arrayidx2695, align 8
  %911 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %call2696 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond2692, %union.tree_node* %908, %union.tree_node* %910, %union.tree_node* %911)
  store %union.tree_node* %call2696, %union.tree_node** %retval
  br label %return

if.end.2697:                                      ; preds = %land.lhs.true.2686, %land.lhs.true.2672, %while.end.2665
  br label %if.end.2851

if.else.2698:                                     ; preds = %if.else.2546
  %912 = load i32, i32* %code01, align 4
  %cmp2699 = icmp eq i32 %912, 60
  br i1 %cmp2699, label %if.then.2701, label %if.end.2850

if.then.2701:                                     ; preds = %if.else.2698
  %913 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %exp2704 = bitcast %union.tree_node* %913 to %struct.tree_exp*
  %operands2705 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2704, i32 0, i32 2
  %arrayidx2706 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2705, i32 0, i64 0
  %914 = load %union.tree_node*, %union.tree_node** %arrayidx2706, align 8
  store %union.tree_node* %914, %union.tree_node** %tree010, align 8
  %915 = load %union.tree_node*, %union.tree_node** %tree01, align 8
  %exp2707 = bitcast %union.tree_node* %915 to %struct.tree_exp*
  %operands2708 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2707, i32 0, i32 2
  %arrayidx2709 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2708, i32 0, i64 1
  %916 = load %union.tree_node*, %union.tree_node** %arrayidx2709, align 8
  store %union.tree_node* %916, %union.tree_node** %tree011, align 8
  br label %while.cond.2710

while.cond.2710:                                  ; preds = %while.body.2759, %if.then.2701
  %917 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %common2711 = bitcast %union.tree_node* %917 to %struct.tree_common*
  %code2712 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2711, i32 0, i32 2
  %bf.load2713 = load i32, i32* %code2712, align 8
  %bf.clear2714 = and i32 %bf.load2713, 255
  %cmp2715 = icmp eq i32 %bf.clear2714, 115
  br i1 %cmp2715, label %land.lhs.true.2731, label %lor.lhs.false.2717

lor.lhs.false.2717:                               ; preds = %while.cond.2710
  %918 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %common2718 = bitcast %union.tree_node* %918 to %struct.tree_common*
  %code2719 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2718, i32 0, i32 2
  %bf.load2720 = load i32, i32* %code2719, align 8
  %bf.clear2721 = and i32 %bf.load2720, 255
  %cmp2722 = icmp eq i32 %bf.clear2721, 114
  br i1 %cmp2722, label %land.lhs.true.2731, label %lor.lhs.false.2724

lor.lhs.false.2724:                               ; preds = %lor.lhs.false.2717
  %919 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %common2725 = bitcast %union.tree_node* %919 to %struct.tree_common*
  %code2726 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2725, i32 0, i32 2
  %bf.load2727 = load i32, i32* %code2726, align 8
  %bf.clear2728 = and i32 %bf.load2727, 255
  %cmp2729 = icmp eq i32 %bf.clear2728, 116
  br i1 %cmp2729, label %land.lhs.true.2731, label %land.end.2757

land.lhs.true.2731:                               ; preds = %lor.lhs.false.2724, %lor.lhs.false.2717, %while.cond.2710
  %920 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %exp2732 = bitcast %union.tree_node* %920 to %struct.tree_exp*
  %operands2733 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2732, i32 0, i32 2
  %arrayidx2734 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2733, i32 0, i64 0
  %921 = load %union.tree_node*, %union.tree_node** %arrayidx2734, align 8
  %922 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2735 = icmp ne %union.tree_node* %921, %922
  br i1 %cmp2735, label %land.rhs.2737, label %land.end.2757

land.rhs.2737:                                    ; preds = %land.lhs.true.2731
  %923 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %common2738 = bitcast %union.tree_node* %923 to %struct.tree_common*
  %type2739 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2738, i32 0, i32 1
  %924 = load %union.tree_node*, %union.tree_node** %type2739, align 8
  %type2740 = bitcast %union.tree_node* %924 to %struct.tree_type*
  %mode2741 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2740, i32 0, i32 6
  %bf.load2742 = load i32, i32* %mode2741, align 4
  %bf.lshr2743 = lshr i32 %bf.load2742, 9
  %bf.clear2744 = and i32 %bf.lshr2743, 127
  %925 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %exp2745 = bitcast %union.tree_node* %925 to %struct.tree_exp*
  %operands2746 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2745, i32 0, i32 2
  %arrayidx2747 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2746, i32 0, i64 0
  %926 = load %union.tree_node*, %union.tree_node** %arrayidx2747, align 8
  %common2748 = bitcast %union.tree_node* %926 to %struct.tree_common*
  %type2749 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2748, i32 0, i32 1
  %927 = load %union.tree_node*, %union.tree_node** %type2749, align 8
  %type2750 = bitcast %union.tree_node* %927 to %struct.tree_type*
  %mode2751 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2750, i32 0, i32 6
  %bf.load2752 = load i32, i32* %mode2751, align 4
  %bf.lshr2753 = lshr i32 %bf.load2752, 9
  %bf.clear2754 = and i32 %bf.lshr2753, 127
  %cmp2755 = icmp eq i32 %bf.clear2744, %bf.clear2754
  br label %land.end.2757

land.end.2757:                                    ; preds = %land.rhs.2737, %land.lhs.true.2731, %lor.lhs.false.2724
  %928 = phi i1 [ false, %land.lhs.true.2731 ], [ false, %lor.lhs.false.2724 ], [ %cmp2755, %land.rhs.2737 ]
  br i1 %928, label %while.body.2759, label %while.end.2763

while.body.2759:                                  ; preds = %land.end.2757
  %929 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %exp2760 = bitcast %union.tree_node* %929 to %struct.tree_exp*
  %operands2761 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2760, i32 0, i32 2
  %arrayidx2762 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2761, i32 0, i64 0
  %930 = load %union.tree_node*, %union.tree_node** %arrayidx2762, align 8
  store %union.tree_node* %930, %union.tree_node** %tree010, align 8
  br label %while.cond.2710

while.end.2763:                                   ; preds = %land.end.2757
  br label %while.cond.2764

while.cond.2764:                                  ; preds = %while.body.2813, %while.end.2763
  %931 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %common2765 = bitcast %union.tree_node* %931 to %struct.tree_common*
  %code2766 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2765, i32 0, i32 2
  %bf.load2767 = load i32, i32* %code2766, align 8
  %bf.clear2768 = and i32 %bf.load2767, 255
  %cmp2769 = icmp eq i32 %bf.clear2768, 115
  br i1 %cmp2769, label %land.lhs.true.2785, label %lor.lhs.false.2771

lor.lhs.false.2771:                               ; preds = %while.cond.2764
  %932 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %common2772 = bitcast %union.tree_node* %932 to %struct.tree_common*
  %code2773 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2772, i32 0, i32 2
  %bf.load2774 = load i32, i32* %code2773, align 8
  %bf.clear2775 = and i32 %bf.load2774, 255
  %cmp2776 = icmp eq i32 %bf.clear2775, 114
  br i1 %cmp2776, label %land.lhs.true.2785, label %lor.lhs.false.2778

lor.lhs.false.2778:                               ; preds = %lor.lhs.false.2771
  %933 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %common2779 = bitcast %union.tree_node* %933 to %struct.tree_common*
  %code2780 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2779, i32 0, i32 2
  %bf.load2781 = load i32, i32* %code2780, align 8
  %bf.clear2782 = and i32 %bf.load2781, 255
  %cmp2783 = icmp eq i32 %bf.clear2782, 116
  br i1 %cmp2783, label %land.lhs.true.2785, label %land.end.2811

land.lhs.true.2785:                               ; preds = %lor.lhs.false.2778, %lor.lhs.false.2771, %while.cond.2764
  %934 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %exp2786 = bitcast %union.tree_node* %934 to %struct.tree_exp*
  %operands2787 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2786, i32 0, i32 2
  %arrayidx2788 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2787, i32 0, i64 0
  %935 = load %union.tree_node*, %union.tree_node** %arrayidx2788, align 8
  %936 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2789 = icmp ne %union.tree_node* %935, %936
  br i1 %cmp2789, label %land.rhs.2791, label %land.end.2811

land.rhs.2791:                                    ; preds = %land.lhs.true.2785
  %937 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %common2792 = bitcast %union.tree_node* %937 to %struct.tree_common*
  %type2793 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2792, i32 0, i32 1
  %938 = load %union.tree_node*, %union.tree_node** %type2793, align 8
  %type2794 = bitcast %union.tree_node* %938 to %struct.tree_type*
  %mode2795 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2794, i32 0, i32 6
  %bf.load2796 = load i32, i32* %mode2795, align 4
  %bf.lshr2797 = lshr i32 %bf.load2796, 9
  %bf.clear2798 = and i32 %bf.lshr2797, 127
  %939 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %exp2799 = bitcast %union.tree_node* %939 to %struct.tree_exp*
  %operands2800 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2799, i32 0, i32 2
  %arrayidx2801 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2800, i32 0, i64 0
  %940 = load %union.tree_node*, %union.tree_node** %arrayidx2801, align 8
  %common2802 = bitcast %union.tree_node* %940 to %struct.tree_common*
  %type2803 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2802, i32 0, i32 1
  %941 = load %union.tree_node*, %union.tree_node** %type2803, align 8
  %type2804 = bitcast %union.tree_node* %941 to %struct.tree_type*
  %mode2805 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2804, i32 0, i32 6
  %bf.load2806 = load i32, i32* %mode2805, align 4
  %bf.lshr2807 = lshr i32 %bf.load2806, 9
  %bf.clear2808 = and i32 %bf.lshr2807, 127
  %cmp2809 = icmp eq i32 %bf.clear2798, %bf.clear2808
  br label %land.end.2811

land.end.2811:                                    ; preds = %land.rhs.2791, %land.lhs.true.2785, %lor.lhs.false.2778
  %942 = phi i1 [ false, %land.lhs.true.2785 ], [ false, %lor.lhs.false.2778 ], [ %cmp2809, %land.rhs.2791 ]
  br i1 %942, label %while.body.2813, label %while.end.2817

while.body.2813:                                  ; preds = %land.end.2811
  %943 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %exp2814 = bitcast %union.tree_node* %943 to %struct.tree_exp*
  %operands2815 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2814, i32 0, i32 2
  %arrayidx2816 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2815, i32 0, i64 0
  %944 = load %union.tree_node*, %union.tree_node** %arrayidx2816, align 8
  store %union.tree_node* %944, %union.tree_node** %tree011, align 8
  br label %while.cond.2764

while.end.2817:                                   ; preds = %land.end.2811
  %945 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %common2818 = bitcast %union.tree_node* %945 to %struct.tree_common*
  %code2819 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2818, i32 0, i32 2
  %bf.load2820 = load i32, i32* %code2819, align 8
  %bf.clear2821 = and i32 %bf.load2820, 255
  %cmp2822 = icmp eq i32 %bf.clear2821, 25
  br i1 %cmp2822, label %land.lhs.true.2824, label %if.end.2849

land.lhs.true.2824:                               ; preds = %while.end.2817
  %946 = load %union.tree_node*, %union.tree_node** %tree010, align 8
  %947 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2825 = bitcast %union.tree_node* %947 to %struct.tree_exp*
  %operands2826 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2825, i32 0, i32 2
  %arrayidx2827 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2826, i32 0, i64 0
  %948 = load %union.tree_node*, %union.tree_node** %arrayidx2827, align 8
  %common2828 = bitcast %union.tree_node* %948 to %struct.tree_common*
  %type2829 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2828, i32 0, i32 1
  %949 = load %union.tree_node*, %union.tree_node** %type2829, align 8
  %type2830 = bitcast %union.tree_node* %949 to %struct.tree_type*
  %precision2831 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2830, i32 0, i32 6
  %bf.load2832 = load i32, i32* %precision2831, align 4
  %bf.clear2833 = and i32 %bf.load2832, 511
  %conv2834 = zext i32 %bf.clear2833 to i64
  %call2835 = call i32 @compare_tree_int(%union.tree_node* %946, i64 %conv2834)
  %cmp2836 = icmp eq i32 0, %call2835
  br i1 %cmp2836, label %land.lhs.true.2838, label %if.end.2849

land.lhs.true.2838:                               ; preds = %land.lhs.true.2824
  %950 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %951 = load %union.tree_node*, %union.tree_node** %tree011, align 8
  %call2839 = call i32 @operand_equal_p(%union.tree_node* %950, %union.tree_node* %951, i32 0)
  %tobool2840 = icmp ne i32 %call2839, 0
  br i1 %tobool2840, label %if.then.2841, label %if.end.2849

if.then.2841:                                     ; preds = %land.lhs.true.2838
  %952 = load i32, i32* %code0, align 4
  %cmp2842 = icmp ne i32 %952, 82
  %cond2844 = select i1 %cmp2842, i32 84, i32 85
  %953 = load %union.tree_node*, %union.tree_node** %type, align 8
  %954 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp2845 = bitcast %union.tree_node* %954 to %struct.tree_exp*
  %operands2846 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2845, i32 0, i32 2
  %arrayidx2847 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2846, i32 0, i64 0
  %955 = load %union.tree_node*, %union.tree_node** %arrayidx2847, align 8
  %956 = load %union.tree_node*, %union.tree_node** %tree11, align 8
  %call2848 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond2844, %union.tree_node* %953, %union.tree_node* %955, %union.tree_node* %956)
  store %union.tree_node* %call2848, %union.tree_node** %retval
  br label %return

if.end.2849:                                      ; preds = %land.lhs.true.2838, %land.lhs.true.2824, %while.end.2817
  br label %if.end.2850

if.end.2850:                                      ; preds = %if.end.2849, %if.else.2698
  br label %if.end.2851

if.end.2851:                                      ; preds = %if.end.2850, %if.end.2697
  br label %if.end.2852

if.end.2852:                                      ; preds = %if.end.2851
  br label %if.end.2853

if.end.2853:                                      ; preds = %if.end.2852, %land.lhs.true.2359, %land.lhs.true.2350, %land.lhs.true.2347, %lor.lhs.false.2344
  br label %associate

associate:                                        ; preds = %if.end.4013, %if.end.3969, %if.end.3546, %if.end.3283, %if.end.3140, %if.end.2853
  %957 = load i32, i32* %wins, align 4
  %tobool2854 = icmp ne i32 %957, 0
  br i1 %tobool2854, label %if.end.2958, label %land.lhs.true.2855

land.lhs.true.2855:                               ; preds = %associate
  %958 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2856 = bitcast %union.tree_node* %958 to %struct.tree_common*
  %code2857 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2856, i32 0, i32 2
  %bf.load2858 = load i32, i32* %code2857, align 8
  %bf.clear2859 = and i32 %bf.load2858, 255
  %cmp2860 = icmp eq i32 %bf.clear2859, 7
  br i1 %cmp2860, label %lor.lhs.false.2878, label %lor.lhs.false.2862

lor.lhs.false.2862:                               ; preds = %land.lhs.true.2855
  %959 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2863 = bitcast %union.tree_node* %959 to %struct.tree_common*
  %code2864 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2863, i32 0, i32 2
  %bf.load2865 = load i32, i32* %code2864, align 8
  %bf.clear2866 = and i32 %bf.load2865, 255
  %cmp2867 = icmp eq i32 %bf.clear2866, 8
  br i1 %cmp2867, label %land.lhs.true.2869, label %if.then.2883

land.lhs.true.2869:                               ; preds = %lor.lhs.false.2862
  %960 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2870 = bitcast %union.tree_node* %960 to %struct.tree_common*
  %type2871 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2870, i32 0, i32 1
  %961 = load %union.tree_node*, %union.tree_node** %type2871, align 8
  %common2872 = bitcast %union.tree_node* %961 to %struct.tree_common*
  %code2873 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2872, i32 0, i32 2
  %bf.load2874 = load i32, i32* %code2873, align 8
  %bf.clear2875 = and i32 %bf.load2874, 255
  %cmp2876 = icmp eq i32 %bf.clear2875, 7
  br i1 %cmp2876, label %lor.lhs.false.2878, label %if.then.2883

lor.lhs.false.2878:                               ; preds = %land.lhs.true.2869, %land.lhs.true.2855
  %962 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool2879 = icmp ne i32 %962, 0
  br i1 %tobool2879, label %land.lhs.true.2880, label %if.end.2958

land.lhs.true.2880:                               ; preds = %lor.lhs.false.2878
  %963 = load i32, i32* %code, align 4
  %cmp2881 = icmp eq i32 %963, 61
  br i1 %cmp2881, label %if.then.2883, label %if.end.2958

if.then.2883:                                     ; preds = %land.lhs.true.2880, %land.lhs.true.2869, %lor.lhs.false.2862
  %964 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %965 = load i32, i32* %code, align 4
  %call2892 = call %union.tree_node* @split_tree(%union.tree_node* %964, i32 %965, %union.tree_node** %con0, %union.tree_node** %lit0, %union.tree_node** %minus_lit0, i32 0)
  store %union.tree_node* %call2892, %union.tree_node** %var0, align 8
  %966 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %967 = load i32, i32* %code, align 4
  %968 = load i32, i32* %code, align 4
  %cmp2893 = icmp eq i32 %968, 60
  %conv2894 = zext i1 %cmp2893 to i32
  %call2895 = call %union.tree_node* @split_tree(%union.tree_node* %966, i32 %967, %union.tree_node** %con1, %union.tree_node** %lit1, %union.tree_node** %minus_lit1, i32 %conv2894)
  store %union.tree_node* %call2895, %union.tree_node** %var1, align 8
  %969 = load %union.tree_node*, %union.tree_node** %var0, align 8
  %cmp2896 = icmp ne %union.tree_node* %969, null
  %conv2897 = zext i1 %cmp2896 to i32
  %970 = load %union.tree_node*, %union.tree_node** %var1, align 8
  %cmp2898 = icmp ne %union.tree_node* %970, null
  %conv2899 = zext i1 %cmp2898 to i32
  %add2900 = add nsw i32 %conv2897, %conv2899
  %971 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %cmp2901 = icmp ne %union.tree_node* %971, null
  %conv2902 = zext i1 %cmp2901 to i32
  %add2903 = add nsw i32 %add2900, %conv2902
  %972 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %cmp2904 = icmp ne %union.tree_node* %972, null
  %conv2905 = zext i1 %cmp2904 to i32
  %add2906 = add nsw i32 %add2903, %conv2905
  %973 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %cmp2907 = icmp ne %union.tree_node* %973, null
  %conv2908 = zext i1 %cmp2907 to i32
  %add2909 = add nsw i32 %add2906, %conv2908
  %974 = load %union.tree_node*, %union.tree_node** %lit1, align 8
  %cmp2910 = icmp ne %union.tree_node* %974, null
  %conv2911 = zext i1 %cmp2910 to i32
  %add2912 = add nsw i32 %add2909, %conv2911
  %975 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %cmp2913 = icmp ne %union.tree_node* %975, null
  %conv2914 = zext i1 %cmp2913 to i32
  %add2915 = add nsw i32 %add2912, %conv2914
  %976 = load %union.tree_node*, %union.tree_node** %minus_lit1, align 8
  %cmp2916 = icmp ne %union.tree_node* %976, null
  %conv2917 = zext i1 %cmp2916 to i32
  %add2918 = add nsw i32 %add2915, %conv2917
  %cmp2919 = icmp slt i32 2, %add2918
  br i1 %cmp2919, label %if.then.2921, label %if.end.2957

if.then.2921:                                     ; preds = %if.then.2883
  %977 = load i32, i32* %code, align 4
  %cmp2922 = icmp eq i32 %977, 60
  br i1 %cmp2922, label %if.then.2924, label %if.end.2925

if.then.2924:                                     ; preds = %if.then.2921
  store i32 59, i32* %code, align 4
  br label %if.end.2925

if.end.2925:                                      ; preds = %if.then.2924, %if.then.2921
  %978 = load %union.tree_node*, %union.tree_node** %var0, align 8
  %979 = load %union.tree_node*, %union.tree_node** %var1, align 8
  %980 = load i32, i32* %code, align 4
  %981 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2926 = call %union.tree_node* @associate_trees(%union.tree_node* %978, %union.tree_node* %979, i32 %980, %union.tree_node* %981)
  store %union.tree_node* %call2926, %union.tree_node** %var0, align 8
  %982 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %983 = load %union.tree_node*, %union.tree_node** %con1, align 8
  %984 = load i32, i32* %code, align 4
  %985 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2927 = call %union.tree_node* @associate_trees(%union.tree_node* %982, %union.tree_node* %983, i32 %984, %union.tree_node* %985)
  store %union.tree_node* %call2927, %union.tree_node** %con0, align 8
  %986 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %987 = load %union.tree_node*, %union.tree_node** %lit1, align 8
  %988 = load i32, i32* %code, align 4
  %989 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2928 = call %union.tree_node* @associate_trees(%union.tree_node* %986, %union.tree_node* %987, i32 %988, %union.tree_node* %989)
  store %union.tree_node* %call2928, %union.tree_node** %lit0, align 8
  %990 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %991 = load %union.tree_node*, %union.tree_node** %minus_lit1, align 8
  %992 = load i32, i32* %code, align 4
  %993 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2929 = call %union.tree_node* @associate_trees(%union.tree_node* %990, %union.tree_node* %991, i32 %992, %union.tree_node* %993)
  store %union.tree_node* %call2929, %union.tree_node** %minus_lit0, align 8
  %994 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %tobool2930 = icmp ne %union.tree_node* %994, null
  br i1 %tobool2930, label %land.lhs.true.2931, label %if.end.2941

land.lhs.true.2931:                               ; preds = %if.end.2925
  %995 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %tobool2932 = icmp ne %union.tree_node* %995, null
  br i1 %tobool2932, label %if.then.2933, label %if.end.2941

if.then.2933:                                     ; preds = %land.lhs.true.2931
  %996 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %997 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %call2934 = call i32 @tree_int_cst_lt(%union.tree_node* %996, %union.tree_node* %997)
  %tobool2935 = icmp ne i32 %call2934, 0
  br i1 %tobool2935, label %if.then.2936, label %if.else.2938

if.then.2936:                                     ; preds = %if.then.2933
  %998 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %999 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %1000 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2937 = call %union.tree_node* @associate_trees(%union.tree_node* %998, %union.tree_node* %999, i32 60, %union.tree_node* %1000)
  store %union.tree_node* %call2937, %union.tree_node** %minus_lit0, align 8
  store %union.tree_node* null, %union.tree_node** %lit0, align 8
  br label %if.end.2940

if.else.2938:                                     ; preds = %if.then.2933
  %1001 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %1002 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %1003 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2939 = call %union.tree_node* @associate_trees(%union.tree_node* %1001, %union.tree_node* %1002, i32 60, %union.tree_node* %1003)
  store %union.tree_node* %call2939, %union.tree_node** %lit0, align 8
  store %union.tree_node* null, %union.tree_node** %minus_lit0, align 8
  br label %if.end.2940

if.end.2940:                                      ; preds = %if.else.2938, %if.then.2936
  br label %if.end.2941

if.end.2941:                                      ; preds = %if.end.2940, %land.lhs.true.2931, %if.end.2925
  %1004 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %tobool2942 = icmp ne %union.tree_node* %1004, null
  br i1 %tobool2942, label %if.then.2943, label %if.end.2953

if.then.2943:                                     ; preds = %if.end.2941
  %1005 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %cmp2944 = icmp eq %union.tree_node* %1005, null
  br i1 %cmp2944, label %if.then.2946, label %if.else.2949

if.then.2946:                                     ; preds = %if.then.2943
  %1006 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1007 = load %union.tree_node*, %union.tree_node** %var0, align 8
  %1008 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %1009 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2947 = call %union.tree_node* @associate_trees(%union.tree_node* %1007, %union.tree_node* %1008, i32 60, %union.tree_node* %1009)
  %call2948 = call %union.tree_node* @convert(%union.tree_node* %1006, %union.tree_node* %call2947)
  store %union.tree_node* %call2948, %union.tree_node** %retval
  br label %return

if.else.2949:                                     ; preds = %if.then.2943
  %1010 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %1011 = load %union.tree_node*, %union.tree_node** %minus_lit0, align 8
  %1012 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2950 = call %union.tree_node* @associate_trees(%union.tree_node* %1010, %union.tree_node* %1011, i32 60, %union.tree_node* %1012)
  store %union.tree_node* %call2950, %union.tree_node** %con0, align 8
  %1013 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1014 = load %union.tree_node*, %union.tree_node** %var0, align 8
  %1015 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %1016 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2951 = call %union.tree_node* @associate_trees(%union.tree_node* %1014, %union.tree_node* %1015, i32 59, %union.tree_node* %1016)
  %call2952 = call %union.tree_node* @convert(%union.tree_node* %1013, %union.tree_node* %call2951)
  store %union.tree_node* %call2952, %union.tree_node** %retval
  br label %return

if.end.2953:                                      ; preds = %if.end.2941
  %1017 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %1018 = load %union.tree_node*, %union.tree_node** %lit0, align 8
  %1019 = load i32, i32* %code, align 4
  %1020 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2954 = call %union.tree_node* @associate_trees(%union.tree_node* %1017, %union.tree_node* %1018, i32 %1019, %union.tree_node* %1020)
  store %union.tree_node* %call2954, %union.tree_node** %con0, align 8
  %1021 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1022 = load %union.tree_node*, %union.tree_node** %var0, align 8
  %1023 = load %union.tree_node*, %union.tree_node** %con0, align 8
  %1024 = load i32, i32* %code, align 4
  %1025 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call2955 = call %union.tree_node* @associate_trees(%union.tree_node* %1022, %union.tree_node* %1023, i32 %1024, %union.tree_node* %1025)
  %call2956 = call %union.tree_node* @convert(%union.tree_node* %1021, %union.tree_node* %call2955)
  store %union.tree_node* %call2956, %union.tree_node** %retval
  br label %return

if.end.2957:                                      ; preds = %if.then.2883
  br label %if.end.2958

if.end.2958:                                      ; preds = %if.end.2957, %land.lhs.true.2880, %lor.lhs.false.2878, %associate
  br label %binary

binary:                                           ; preds = %if.end.3929, %if.end.3740, %if.end.3714, %if.end.3675, %if.end.3568, %if.end.2958
  %1026 = load i32, i32* %wins, align 4
  %tobool2959 = icmp ne i32 %1026, 0
  br i1 %tobool2959, label %if.then.2960, label %if.end.2962

if.then.2960:                                     ; preds = %binary
  %1027 = load i32, i32* %code, align 4
  %1028 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1029 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call2961 = call %union.tree_node* @const_binop(i32 %1027, %union.tree_node* %1028, %union.tree_node* %1029, i32 0)
  store %union.tree_node* %call2961, %union.tree_node** %t1, align 8
  br label %if.end.2962

if.end.2962:                                      ; preds = %if.then.2960, %binary
  %1030 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp2963 = icmp ne %union.tree_node* %1030, null
  br i1 %cmp2963, label %if.then.2965, label %if.end.2977

if.then.2965:                                     ; preds = %if.end.2962
  %1031 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common2966 = bitcast %union.tree_node* %1031 to %struct.tree_common*
  %type2967 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2966, i32 0, i32 1
  %1032 = load %union.tree_node*, %union.tree_node** %type2967, align 8
  %1033 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common2968 = bitcast %union.tree_node* %1033 to %struct.tree_common*
  %type2969 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2968, i32 0, i32 1
  %1034 = load %union.tree_node*, %union.tree_node** %type2969, align 8
  %cmp2970 = icmp ne %union.tree_node* %1032, %1034
  br i1 %cmp2970, label %if.then.2972, label %if.end.2976

if.then.2972:                                     ; preds = %if.then.2965
  %1035 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common2973 = bitcast %union.tree_node* %1035 to %struct.tree_common*
  %type2974 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2973, i32 0, i32 1
  %1036 = load %union.tree_node*, %union.tree_node** %type2974, align 8
  %1037 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call2975 = call %union.tree_node* @convert(%union.tree_node* %1036, %union.tree_node* %1037)
  store %union.tree_node* %call2975, %union.tree_node** %t1, align 8
  br label %if.end.2976

if.end.2976:                                      ; preds = %if.then.2972, %if.then.2965
  %1038 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %1038, %union.tree_node** %retval
  br label %return

if.end.2977:                                      ; preds = %if.end.2962
  %1039 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1039, %union.tree_node** %retval
  br label %return

sw.bb.2978:                                       ; preds = %if.end.901
  %1040 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2979 = bitcast %union.tree_node* %1040 to %struct.tree_common*
  %code2980 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2979, i32 0, i32 2
  %bf.load2981 = load i32, i32* %code2980, align 8
  %bf.clear2982 = and i32 %bf.load2981, 255
  %cmp2983 = icmp eq i32 %bf.clear2982, 77
  br i1 %cmp2983, label %if.then.2985, label %if.end.2991

if.then.2985:                                     ; preds = %sw.bb.2978
  %1041 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1042 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1043 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp2986 = bitcast %union.tree_node* %1043 to %struct.tree_exp*
  %operands2987 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2986, i32 0, i32 2
  %arrayidx2988 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands2987, i32 0, i64 0
  %1044 = load %union.tree_node*, %union.tree_node** %arrayidx2988, align 8
  %call2989 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %1041, %union.tree_node* %1042, %union.tree_node* %1044)
  %call2990 = call %union.tree_node* @fold(%union.tree_node* %call2989)
  store %union.tree_node* %call2990, %union.tree_node** %retval
  br label %return

if.end.2991:                                      ; preds = %sw.bb.2978
  %1045 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common2992 = bitcast %union.tree_node* %1045 to %struct.tree_common*
  %code2993 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2992, i32 0, i32 2
  %bf.load2994 = load i32, i32* %code2993, align 8
  %bf.clear2995 = and i32 %bf.load2994, 255
  %cmp2996 = icmp eq i32 %bf.clear2995, 77
  br i1 %cmp2996, label %land.lhs.true.2998, label %if.end.3017

land.lhs.true.2998:                               ; preds = %if.end.2991
  %1046 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common2999 = bitcast %union.tree_node* %1046 to %struct.tree_common*
  %code3000 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2999, i32 0, i32 2
  %bf.load3001 = load i32, i32* %code3000, align 8
  %bf.clear3002 = and i32 %bf.load3001, 255
  %cmp3003 = icmp eq i32 %bf.clear3002, 26
  br i1 %cmp3003, label %if.then.3005, label %if.end.3017

if.then.3005:                                     ; preds = %land.lhs.true.2998
  %1047 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1048 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3006 = bitcast %union.tree_node* %1048 to %struct.tree_common*
  %type3007 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3006, i32 0, i32 1
  %1049 = load %union.tree_node*, %union.tree_node** %type3007, align 8
  %1050 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst3009 = bitcast %union.tree_node* %1050 to %struct.tree_real_cst*
  %real_cst3010 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst3009, i32 0, i32 2
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp3008, %struct.realvaluetype* byval align 8 %real_cst3010)
  %call3011 = call %union.tree_node* @build_real(%union.tree_node* %1049, %struct.realvaluetype* byval align 8 %agg.tmp3008)
  %1051 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3012 = bitcast %union.tree_node* %1051 to %struct.tree_exp*
  %operands3013 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3012, i32 0, i32 2
  %arrayidx3014 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3013, i32 0, i64 0
  %1052 = load %union.tree_node*, %union.tree_node** %arrayidx3014, align 8
  %call3015 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %1047, %union.tree_node* %call3011, %union.tree_node* %1052)
  %call3016 = call %union.tree_node* @fold(%union.tree_node* %call3015)
  store %union.tree_node* %call3016, %union.tree_node** %retval
  br label %return

if.end.3017:                                      ; preds = %land.lhs.true.2998, %if.end.2991
  %1053 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3018 = bitcast %union.tree_node* %1053 to %struct.tree_common*
  %code3019 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3018, i32 0, i32 2
  %bf.load3020 = load i32, i32* %code3019, align 8
  %bf.clear3021 = and i32 %bf.load3020, 255
  %cmp3022 = icmp eq i32 %bf.clear3021, 7
  br i1 %cmp3022, label %if.else.3092, label %lor.lhs.false.3024

lor.lhs.false.3024:                               ; preds = %if.end.3017
  %1054 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3025 = bitcast %union.tree_node* %1054 to %struct.tree_common*
  %code3026 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3025, i32 0, i32 2
  %bf.load3027 = load i32, i32* %code3026, align 8
  %bf.clear3028 = and i32 %bf.load3027, 255
  %cmp3029 = icmp eq i32 %bf.clear3028, 8
  br i1 %cmp3029, label %land.lhs.true.3031, label %if.then.3040

land.lhs.true.3031:                               ; preds = %lor.lhs.false.3024
  %1055 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3032 = bitcast %union.tree_node* %1055 to %struct.tree_common*
  %type3033 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3032, i32 0, i32 1
  %1056 = load %union.tree_node*, %union.tree_node** %type3033, align 8
  %common3034 = bitcast %union.tree_node* %1056 to %struct.tree_common*
  %code3035 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3034, i32 0, i32 2
  %bf.load3036 = load i32, i32* %code3035, align 8
  %bf.clear3037 = and i32 %bf.load3036, 255
  %cmp3038 = icmp eq i32 %bf.clear3037, 7
  br i1 %cmp3038, label %if.else.3092, label %if.then.3040

if.then.3040:                                     ; preds = %land.lhs.true.3031, %lor.lhs.false.3024
  %1057 = load i32, i32* %wins, align 4
  %tobool3041 = icmp ne i32 %1057, 0
  br i1 %tobool3041, label %if.end.3048, label %land.lhs.true.3042

land.lhs.true.3042:                               ; preds = %if.then.3040
  %1058 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3043 = call i32 @integer_zerop(%union.tree_node* %1058)
  %tobool3044 = icmp ne i32 %call3043, 0
  br i1 %tobool3044, label %if.then.3045, label %if.end.3048

if.then.3045:                                     ; preds = %land.lhs.true.3042
  %1059 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1060 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3046 = call %union.tree_node* @convert(%union.tree_node* %1059, %union.tree_node* %1060)
  %call3047 = call %union.tree_node* @negate_expr(%union.tree_node* %call3046)
  store %union.tree_node* %call3047, %union.tree_node** %retval
  br label %return

if.end.3048:                                      ; preds = %land.lhs.true.3042, %if.then.3040
  %1061 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3049 = call i32 @integer_zerop(%union.tree_node* %1061)
  %tobool3050 = icmp ne i32 %call3049, 0
  br i1 %tobool3050, label %if.then.3051, label %if.end.3054

if.then.3051:                                     ; preds = %if.end.3048
  %1062 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1063 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3052 = call %union.tree_node* @convert(%union.tree_node* %1062, %union.tree_node* %1063)
  %call3053 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3052)
  store %union.tree_node* %call3053, %union.tree_node** %retval
  br label %return

if.end.3054:                                      ; preds = %if.end.3048
  %1064 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3055 = bitcast %union.tree_node* %1064 to %struct.tree_common*
  %code3056 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3055, i32 0, i32 2
  %bf.load3057 = load i32, i32* %code3056, align 8
  %bf.clear3058 = and i32 %bf.load3057, 255
  %cmp3059 = icmp eq i32 %bf.clear3058, 61
  br i1 %cmp3059, label %land.lhs.true.3061, label %if.end.3091

land.lhs.true.3061:                               ; preds = %if.end.3054
  %1065 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3062 = bitcast %union.tree_node* %1065 to %struct.tree_common*
  %code3063 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3062, i32 0, i32 2
  %bf.load3064 = load i32, i32* %code3063, align 8
  %bf.clear3065 = and i32 %bf.load3064, 255
  %cmp3066 = icmp eq i32 %bf.clear3065, 61
  br i1 %cmp3066, label %land.lhs.true.3068, label %if.end.3091

land.lhs.true.3068:                               ; preds = %land.lhs.true.3061
  %1066 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3069 = bitcast %union.tree_node* %1066 to %struct.tree_exp*
  %operands3070 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3069, i32 0, i32 2
  %arrayidx3071 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3070, i32 0, i64 1
  %1067 = load %union.tree_node*, %union.tree_node** %arrayidx3071, align 8
  %1068 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3072 = bitcast %union.tree_node* %1068 to %struct.tree_exp*
  %operands3073 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3072, i32 0, i32 2
  %arrayidx3074 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3073, i32 0, i64 1
  %1069 = load %union.tree_node*, %union.tree_node** %arrayidx3074, align 8
  %call3075 = call i32 @operand_equal_p(%union.tree_node* %1067, %union.tree_node* %1069, i32 0)
  %tobool3076 = icmp ne i32 %call3075, 0
  br i1 %tobool3076, label %if.then.3077, label %if.end.3091

if.then.3077:                                     ; preds = %land.lhs.true.3068
  %1070 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1071 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1072 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3078 = bitcast %union.tree_node* %1072 to %struct.tree_exp*
  %operands3079 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3078, i32 0, i32 2
  %arrayidx3080 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3079, i32 0, i64 0
  %1073 = load %union.tree_node*, %union.tree_node** %arrayidx3080, align 8
  %1074 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3081 = bitcast %union.tree_node* %1074 to %struct.tree_exp*
  %operands3082 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3081, i32 0, i32 2
  %arrayidx3083 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3082, i32 0, i64 0
  %1075 = load %union.tree_node*, %union.tree_node** %arrayidx3083, align 8
  %call3084 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %1071, %union.tree_node* %1073, %union.tree_node* %1075)
  %call3085 = call %union.tree_node* @fold(%union.tree_node* %call3084)
  %1076 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3086 = bitcast %union.tree_node* %1076 to %struct.tree_exp*
  %operands3087 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3086, i32 0, i32 2
  %arrayidx3088 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3087, i32 0, i64 1
  %1077 = load %union.tree_node*, %union.tree_node** %arrayidx3088, align 8
  %call3089 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1070, %union.tree_node* %call3085, %union.tree_node* %1077)
  %call3090 = call %union.tree_node* @fold(%union.tree_node* %call3089)
  store %union.tree_node* %call3090, %union.tree_node** %retval
  br label %return

if.end.3091:                                      ; preds = %land.lhs.true.3068, %land.lhs.true.3061, %if.end.3054
  br label %if.end.3110

if.else.3092:                                     ; preds = %land.lhs.true.3031, %if.end.3017
  %1078 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3093 = icmp ne i32 %1078, 0
  br i1 %tobool3093, label %if.then.3094, label %if.end.3109

if.then.3094:                                     ; preds = %if.else.3092
  %1079 = load i32, i32* %wins, align 4
  %tobool3095 = icmp ne i32 %1079, 0
  br i1 %tobool3095, label %if.end.3102, label %land.lhs.true.3096

land.lhs.true.3096:                               ; preds = %if.then.3094
  %1080 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3097 = call i32 @real_zerop(%union.tree_node* %1080)
  %tobool3098 = icmp ne i32 %call3097, 0
  br i1 %tobool3098, label %if.then.3099, label %if.end.3102

if.then.3099:                                     ; preds = %land.lhs.true.3096
  %1081 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1082 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3100 = call %union.tree_node* @convert(%union.tree_node* %1081, %union.tree_node* %1082)
  %call3101 = call %union.tree_node* @negate_expr(%union.tree_node* %call3100)
  store %union.tree_node* %call3101, %union.tree_node** %retval
  br label %return

if.end.3102:                                      ; preds = %land.lhs.true.3096, %if.then.3094
  %1083 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3103 = call i32 @real_zerop(%union.tree_node* %1083)
  %tobool3104 = icmp ne i32 %call3103, 0
  br i1 %tobool3104, label %if.then.3105, label %if.end.3108

if.then.3105:                                     ; preds = %if.end.3102
  %1084 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1085 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3106 = call %union.tree_node* @convert(%union.tree_node* %1084, %union.tree_node* %1085)
  %call3107 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3106)
  store %union.tree_node* %call3107, %union.tree_node** %retval
  br label %return

if.end.3108:                                      ; preds = %if.end.3102
  br label %if.end.3109

if.end.3109:                                      ; preds = %if.end.3108, %if.else.3092
  br label %if.end.3110

if.end.3110:                                      ; preds = %if.end.3109, %if.end.3091
  %1086 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3111 = bitcast %union.tree_node* %1086 to %struct.tree_common*
  %code3112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3111, i32 0, i32 2
  %bf.load3113 = load i32, i32* %code3112, align 8
  %bf.clear3114 = and i32 %bf.load3113, 255
  %cmp3115 = icmp eq i32 %bf.clear3114, 7
  br i1 %cmp3115, label %lor.lhs.false.3133, label %lor.lhs.false.3117

lor.lhs.false.3117:                               ; preds = %if.end.3110
  %1087 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3118 = bitcast %union.tree_node* %1087 to %struct.tree_common*
  %code3119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3118, i32 0, i32 2
  %bf.load3120 = load i32, i32* %code3119, align 8
  %bf.clear3121 = and i32 %bf.load3120, 255
  %cmp3122 = icmp eq i32 %bf.clear3121, 8
  br i1 %cmp3122, label %land.lhs.true.3124, label %land.lhs.true.3135

land.lhs.true.3124:                               ; preds = %lor.lhs.false.3117
  %1088 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3125 = bitcast %union.tree_node* %1088 to %struct.tree_common*
  %type3126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3125, i32 0, i32 1
  %1089 = load %union.tree_node*, %union.tree_node** %type3126, align 8
  %common3127 = bitcast %union.tree_node* %1089 to %struct.tree_common*
  %code3128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3127, i32 0, i32 2
  %bf.load3129 = load i32, i32* %code3128, align 8
  %bf.clear3130 = and i32 %bf.load3129, 255
  %cmp3131 = icmp eq i32 %bf.clear3130, 7
  br i1 %cmp3131, label %lor.lhs.false.3133, label %land.lhs.true.3135

lor.lhs.false.3133:                               ; preds = %land.lhs.true.3124, %if.end.3110
  %1090 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3134 = icmp ne i32 %1090, 0
  br i1 %tobool3134, label %land.lhs.true.3135, label %if.end.3140

land.lhs.true.3135:                               ; preds = %lor.lhs.false.3133, %land.lhs.true.3124, %lor.lhs.false.3117
  %1091 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1092 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3136 = call i32 @operand_equal_p(%union.tree_node* %1091, %union.tree_node* %1092, i32 0)
  %tobool3137 = icmp ne i32 %call3136, 0
  br i1 %tobool3137, label %if.then.3138, label %if.end.3140

if.then.3138:                                     ; preds = %land.lhs.true.3135
  %1093 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1094 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call3139 = call %union.tree_node* @convert(%union.tree_node* %1093, %union.tree_node* %1094)
  store %union.tree_node* %call3139, %union.tree_node** %retval
  br label %return

if.end.3140:                                      ; preds = %land.lhs.true.3135, %lor.lhs.false.3133
  br label %associate

sw.bb.3141:                                       ; preds = %if.end.901
  %1095 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3142 = bitcast %union.tree_node* %1095 to %struct.tree_common*
  %code3143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3142, i32 0, i32 2
  %bf.load3144 = load i32, i32* %code3143, align 8
  %bf.clear3145 = and i32 %bf.load3144, 255
  %cmp3146 = icmp eq i32 %bf.clear3145, 77
  br i1 %cmp3146, label %land.lhs.true.3148, label %if.end.3164

land.lhs.true.3148:                               ; preds = %sw.bb.3141
  %1096 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3149 = bitcast %union.tree_node* %1096 to %struct.tree_common*
  %code3150 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3149, i32 0, i32 2
  %bf.load3151 = load i32, i32* %code3150, align 8
  %bf.clear3152 = and i32 %bf.load3151, 255
  %cmp3153 = icmp eq i32 %bf.clear3152, 77
  br i1 %cmp3153, label %if.then.3155, label %if.end.3164

if.then.3155:                                     ; preds = %land.lhs.true.3148
  %1097 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1098 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3156 = bitcast %union.tree_node* %1098 to %struct.tree_exp*
  %operands3157 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3156, i32 0, i32 2
  %arrayidx3158 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3157, i32 0, i64 0
  %1099 = load %union.tree_node*, %union.tree_node** %arrayidx3158, align 8
  %1100 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3159 = bitcast %union.tree_node* %1100 to %struct.tree_exp*
  %operands3160 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3159, i32 0, i32 2
  %arrayidx3161 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3160, i32 0, i64 0
  %1101 = load %union.tree_node*, %union.tree_node** %arrayidx3161, align 8
  %call3162 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1097, %union.tree_node* %1099, %union.tree_node* %1101)
  %call3163 = call %union.tree_node* @fold(%union.tree_node* %call3162)
  store %union.tree_node* %call3163, %union.tree_node** %retval
  br label %return

if.end.3164:                                      ; preds = %land.lhs.true.3148, %sw.bb.3141
  %1102 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3165 = bitcast %union.tree_node* %1102 to %struct.tree_common*
  %code3166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3165, i32 0, i32 2
  %bf.load3167 = load i32, i32* %code3166, align 8
  %bf.clear3168 = and i32 %bf.load3167, 255
  %cmp3169 = icmp eq i32 %bf.clear3168, 7
  br i1 %cmp3169, label %if.else.3253, label %lor.lhs.false.3171

lor.lhs.false.3171:                               ; preds = %if.end.3164
  %1103 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3172 = bitcast %union.tree_node* %1103 to %struct.tree_common*
  %code3173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3172, i32 0, i32 2
  %bf.load3174 = load i32, i32* %code3173, align 8
  %bf.clear3175 = and i32 %bf.load3174, 255
  %cmp3176 = icmp eq i32 %bf.clear3175, 8
  br i1 %cmp3176, label %land.lhs.true.3178, label %if.then.3187

land.lhs.true.3178:                               ; preds = %lor.lhs.false.3171
  %1104 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3179 = bitcast %union.tree_node* %1104 to %struct.tree_common*
  %type3180 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3179, i32 0, i32 1
  %1105 = load %union.tree_node*, %union.tree_node** %type3180, align 8
  %common3181 = bitcast %union.tree_node* %1105 to %struct.tree_common*
  %code3182 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3181, i32 0, i32 2
  %bf.load3183 = load i32, i32* %code3182, align 8
  %bf.clear3184 = and i32 %bf.load3183, 255
  %cmp3185 = icmp eq i32 %bf.clear3184, 7
  br i1 %cmp3185, label %if.else.3253, label %if.then.3187

if.then.3187:                                     ; preds = %land.lhs.true.3178, %lor.lhs.false.3171
  %1106 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3188 = call i32 @integer_zerop(%union.tree_node* %1106)
  %tobool3189 = icmp ne i32 %call3188, 0
  br i1 %tobool3189, label %if.then.3190, label %if.end.3192

if.then.3190:                                     ; preds = %if.then.3187
  %1107 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1108 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1109 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3191 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1107, %union.tree_node* %1108, %union.tree_node* %1109)
  store %union.tree_node* %call3191, %union.tree_node** %retval
  br label %return

if.end.3192:                                      ; preds = %if.then.3187
  %1110 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3193 = call i32 @integer_onep(%union.tree_node* %1110)
  %tobool3194 = icmp ne i32 %call3193, 0
  br i1 %tobool3194, label %if.then.3195, label %if.end.3198

if.then.3195:                                     ; preds = %if.end.3192
  %1111 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1112 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3196 = call %union.tree_node* @convert(%union.tree_node* %1111, %union.tree_node* %1112)
  %call3197 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3196)
  store %union.tree_node* %call3197, %union.tree_node** %retval
  br label %return

if.end.3198:                                      ; preds = %if.end.3192
  %1113 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3199 = bitcast %union.tree_node* %1113 to %struct.tree_common*
  %code3200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3199, i32 0, i32 2
  %bf.load3201 = load i32, i32* %code3200, align 8
  %bf.clear3202 = and i32 %bf.load3201, 255
  %cmp3203 = icmp eq i32 %bf.clear3202, 82
  br i1 %cmp3203, label %land.lhs.true.3205, label %if.end.3217

land.lhs.true.3205:                               ; preds = %if.end.3198
  %1114 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3206 = bitcast %union.tree_node* %1114 to %struct.tree_exp*
  %operands3207 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3206, i32 0, i32 2
  %arrayidx3208 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3207, i32 0, i64 0
  %1115 = load %union.tree_node*, %union.tree_node** %arrayidx3208, align 8
  %call3209 = call i32 @integer_onep(%union.tree_node* %1115)
  %tobool3210 = icmp ne i32 %call3209, 0
  br i1 %tobool3210, label %if.then.3211, label %if.end.3217

if.then.3211:                                     ; preds = %land.lhs.true.3205
  %1116 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1117 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1118 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3212 = bitcast %union.tree_node* %1118 to %struct.tree_exp*
  %operands3213 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3212, i32 0, i32 2
  %arrayidx3214 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3213, i32 0, i64 1
  %1119 = load %union.tree_node*, %union.tree_node** %arrayidx3214, align 8
  %call3215 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 82, %union.tree_node* %1116, %union.tree_node* %1117, %union.tree_node* %1119)
  %call3216 = call %union.tree_node* @fold(%union.tree_node* %call3215)
  store %union.tree_node* %call3216, %union.tree_node** %retval
  br label %return

if.end.3217:                                      ; preds = %land.lhs.true.3205, %if.end.3198
  %1120 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3218 = bitcast %union.tree_node* %1120 to %struct.tree_common*
  %code3219 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3218, i32 0, i32 2
  %bf.load3220 = load i32, i32* %code3219, align 8
  %bf.clear3221 = and i32 %bf.load3220, 255
  %cmp3222 = icmp eq i32 %bf.clear3221, 82
  br i1 %cmp3222, label %land.lhs.true.3224, label %if.end.3236

land.lhs.true.3224:                               ; preds = %if.end.3217
  %1121 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3225 = bitcast %union.tree_node* %1121 to %struct.tree_exp*
  %operands3226 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3225, i32 0, i32 2
  %arrayidx3227 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3226, i32 0, i64 0
  %1122 = load %union.tree_node*, %union.tree_node** %arrayidx3227, align 8
  %call3228 = call i32 @integer_onep(%union.tree_node* %1122)
  %tobool3229 = icmp ne i32 %call3228, 0
  br i1 %tobool3229, label %if.then.3230, label %if.end.3236

if.then.3230:                                     ; preds = %land.lhs.true.3224
  %1123 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1124 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1125 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3231 = bitcast %union.tree_node* %1125 to %struct.tree_exp*
  %operands3232 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3231, i32 0, i32 2
  %arrayidx3233 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3232, i32 0, i64 1
  %1126 = load %union.tree_node*, %union.tree_node** %arrayidx3233, align 8
  %call3234 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 82, %union.tree_node* %1123, %union.tree_node* %1124, %union.tree_node* %1126)
  %call3235 = call %union.tree_node* @fold(%union.tree_node* %call3234)
  store %union.tree_node* %call3235, %union.tree_node** %retval
  br label %return

if.end.3236:                                      ; preds = %land.lhs.true.3224, %if.end.3217
  %1127 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3237 = bitcast %union.tree_node* %1127 to %struct.tree_common*
  %code3238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3237, i32 0, i32 2
  %bf.load3239 = load i32, i32* %code3238, align 8
  %bf.clear3240 = and i32 %bf.load3239, 255
  %cmp3241 = icmp eq i32 %bf.clear3240, 25
  br i1 %cmp3241, label %land.lhs.true.3243, label %if.end.3252

land.lhs.true.3243:                               ; preds = %if.end.3236
  %1128 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp3244 = bitcast %union.tree_node* %1128 to %struct.tree_exp*
  %operands3245 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3244, i32 0, i32 2
  %arrayidx3246 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3245, i32 0, i64 0
  %1129 = load %union.tree_node*, %union.tree_node** %arrayidx3246, align 8
  %1130 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1131 = load i32, i32* %code, align 4
  %call3247 = call %union.tree_node* @extract_muldiv(%union.tree_node* %1129, %union.tree_node* %1130, i32 %1131, %union.tree_node* null)
  store %union.tree_node* %call3247, %union.tree_node** %tem, align 8
  %cmp3248 = icmp ne %union.tree_node* null, %call3247
  br i1 %cmp3248, label %if.then.3250, label %if.end.3252

if.then.3250:                                     ; preds = %land.lhs.true.3243
  %1132 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1133 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call3251 = call %union.tree_node* @convert(%union.tree_node* %1132, %union.tree_node* %1133)
  store %union.tree_node* %call3251, %union.tree_node** %retval
  br label %return

if.end.3252:                                      ; preds = %land.lhs.true.3243, %if.end.3236
  br label %if.end.3283

if.else.3253:                                     ; preds = %land.lhs.true.3178, %if.end.3164
  %1134 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3254 = icmp ne i32 %1134, 0
  br i1 %tobool3254, label %land.lhs.true.3255, label %if.end.3260

land.lhs.true.3255:                               ; preds = %if.else.3253
  %1135 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3256 = call i32 @real_zerop(%union.tree_node* %1135)
  %tobool3257 = icmp ne i32 %call3256, 0
  br i1 %tobool3257, label %if.then.3258, label %if.end.3260

if.then.3258:                                     ; preds = %land.lhs.true.3255
  %1136 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1137 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1138 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3259 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1136, %union.tree_node* %1137, %union.tree_node* %1138)
  store %union.tree_node* %call3259, %union.tree_node** %retval
  br label %return

if.end.3260:                                      ; preds = %land.lhs.true.3255, %if.else.3253
  %1139 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3261 = call i32 @real_onep(%union.tree_node* %1139)
  %tobool3262 = icmp ne i32 %call3261, 0
  br i1 %tobool3262, label %if.then.3263, label %if.end.3266

if.then.3263:                                     ; preds = %if.end.3260
  %1140 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1141 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3264 = call %union.tree_node* @convert(%union.tree_node* %1140, %union.tree_node* %1141)
  %call3265 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3264)
  store %union.tree_node* %call3265, %union.tree_node** %retval
  br label %return

if.end.3266:                                      ; preds = %if.end.3260
  %1142 = load i32, i32* %wins, align 4
  %tobool3267 = icmp ne i32 %1142, 0
  br i1 %tobool3267, label %if.end.3282, label %land.lhs.true.3268

land.lhs.true.3268:                               ; preds = %if.end.3266
  %1143 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3269 = call i32 @real_twop(%union.tree_node* %1143)
  %tobool3270 = icmp ne i32 %call3269, 0
  br i1 %tobool3270, label %land.lhs.true.3271, label %if.end.3282

land.lhs.true.3271:                               ; preds = %land.lhs.true.3268
  %call3272 = call i32 @global_bindings_p()
  %cmp3273 = icmp eq i32 %call3272, 0
  br i1 %cmp3273, label %land.lhs.true.3275, label %if.end.3282

land.lhs.true.3275:                               ; preds = %land.lhs.true.3271
  %1144 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3276 = call i32 @contains_placeholder_p(%union.tree_node* %1144)
  %tobool3277 = icmp ne i32 %call3276, 0
  br i1 %tobool3277, label %if.end.3282, label %if.then.3278

if.then.3278:                                     ; preds = %land.lhs.true.3275
  %1145 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3280 = call %union.tree_node* @save_expr(%union.tree_node* %1145)
  store %union.tree_node* %call3280, %union.tree_node** %arg, align 8
  %1146 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1147 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %1148 = load %union.tree_node*, %union.tree_node** %arg, align 8
  %call3281 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %1146, %union.tree_node* %1147, %union.tree_node* %1148)
  store %union.tree_node* %call3281, %union.tree_node** %retval
  br label %return

if.end.3282:                                      ; preds = %land.lhs.true.3275, %land.lhs.true.3271, %land.lhs.true.3268, %if.end.3266
  br label %if.end.3283

if.end.3283:                                      ; preds = %if.end.3282, %if.end.3252
  br label %associate

sw.bb.3284:                                       ; preds = %if.end.901
  br label %bit_ior

bit_ior:                                          ; preds = %if.then.3381, %sw.bb.3284, %if.then.1988
  %1149 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3285 = call i32 @integer_all_onesp(%union.tree_node* %1149)
  %tobool3286 = icmp ne i32 %call3285, 0
  br i1 %tobool3286, label %if.then.3287, label %if.end.3289

if.then.3287:                                     ; preds = %bit_ior
  %1150 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1151 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1152 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3288 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1150, %union.tree_node* %1151, %union.tree_node* %1152)
  store %union.tree_node* %call3288, %union.tree_node** %retval
  br label %return

if.end.3289:                                      ; preds = %bit_ior
  %1153 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3290 = call i32 @integer_zerop(%union.tree_node* %1153)
  %tobool3291 = icmp ne i32 %call3290, 0
  br i1 %tobool3291, label %if.then.3292, label %if.end.3295

if.then.3292:                                     ; preds = %if.end.3289
  %1154 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1155 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3293 = call %union.tree_node* @convert(%union.tree_node* %1154, %union.tree_node* %1155)
  %call3294 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3293)
  store %union.tree_node* %call3294, %union.tree_node** %retval
  br label %return

if.end.3295:                                      ; preds = %if.end.3289
  %1156 = load i32, i32* %code, align 4
  %1157 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1158 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1159 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3296 = call %union.tree_node* @distribute_bit_expr(i32 %1156, %union.tree_node* %1157, %union.tree_node* %1158, %union.tree_node* %1159)
  store %union.tree_node* %call3296, %union.tree_node** %t1, align 8
  %1160 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp3297 = icmp ne %union.tree_node* %1160, null
  br i1 %cmp3297, label %if.then.3299, label %if.end.3300

if.then.3299:                                     ; preds = %if.end.3295
  %1161 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %1161, %union.tree_node** %retval
  br label %return

if.end.3300:                                      ; preds = %if.end.3295
  %1162 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3301 = bitcast %union.tree_node* %1162 to %struct.tree_common*
  %code3302 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3301, i32 0, i32 2
  %bf.load3303 = load i32, i32* %code3302, align 8
  %bf.clear3304 = and i32 %bf.load3303, 255
  %cmp3305 = icmp eq i32 %bf.clear3304, 90
  br i1 %cmp3305, label %land.lhs.true.3307, label %if.end.3324

land.lhs.true.3307:                               ; preds = %if.end.3300
  %1163 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3308 = bitcast %union.tree_node* %1163 to %struct.tree_common*
  %code3309 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3308, i32 0, i32 2
  %bf.load3310 = load i32, i32* %code3309, align 8
  %bf.clear3311 = and i32 %bf.load3310, 255
  %cmp3312 = icmp eq i32 %bf.clear3311, 90
  br i1 %cmp3312, label %if.then.3314, label %if.end.3324

if.then.3314:                                     ; preds = %land.lhs.true.3307
  %1164 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1165 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1166 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3315 = bitcast %union.tree_node* %1166 to %struct.tree_exp*
  %operands3316 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3315, i32 0, i32 2
  %arrayidx3317 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3316, i32 0, i64 0
  %1167 = load %union.tree_node*, %union.tree_node** %arrayidx3317, align 8
  %1168 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3318 = bitcast %union.tree_node* %1168 to %struct.tree_exp*
  %operands3319 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3318, i32 0, i32 2
  %arrayidx3320 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3319, i32 0, i64 0
  %1169 = load %union.tree_node*, %union.tree_node** %arrayidx3320, align 8
  %call3321 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %1165, %union.tree_node* %1167, %union.tree_node* %1169)
  %call3322 = call %union.tree_node* @build1(i32 90, %union.tree_node* %1164, %union.tree_node* %call3321)
  %call3323 = call %union.tree_node* @fold(%union.tree_node* %call3322)
  store %union.tree_node* %call3323, %union.tree_node** %retval
  br label %return

if.end.3324:                                      ; preds = %land.lhs.true.3307, %if.end.3300
  br label %bit_rotate

sw.bb.3325:                                       ; preds = %if.end.901
  %1170 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3326 = call i32 @integer_zerop(%union.tree_node* %1170)
  %tobool3327 = icmp ne i32 %call3326, 0
  br i1 %tobool3327, label %if.then.3328, label %if.end.3331

if.then.3328:                                     ; preds = %sw.bb.3325
  %1171 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1172 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3329 = call %union.tree_node* @convert(%union.tree_node* %1171, %union.tree_node* %1172)
  %call3330 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3329)
  store %union.tree_node* %call3330, %union.tree_node** %retval
  br label %return

if.end.3331:                                      ; preds = %sw.bb.3325
  %1173 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3332 = call i32 @integer_all_onesp(%union.tree_node* %1173)
  %tobool3333 = icmp ne i32 %call3332, 0
  br i1 %tobool3333, label %if.then.3334, label %if.end.3337

if.then.3334:                                     ; preds = %if.end.3331
  %1174 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1175 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3335 = call %union.tree_node* @build1(i32 90, %union.tree_node* %1174, %union.tree_node* %1175)
  %call3336 = call %union.tree_node* @fold(%union.tree_node* %call3335)
  store %union.tree_node* %call3336, %union.tree_node** %retval
  br label %return

if.end.3337:                                      ; preds = %if.end.3331
  %1176 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3338 = bitcast %union.tree_node* %1176 to %struct.tree_common*
  %code3339 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3338, i32 0, i32 2
  %bf.load3340 = load i32, i32* %code3339, align 8
  %bf.clear3341 = and i32 %bf.load3340, 255
  %cmp3342 = icmp eq i32 %bf.clear3341, 88
  br i1 %cmp3342, label %land.lhs.true.3344, label %if.end.3382

land.lhs.true.3344:                               ; preds = %if.end.3337
  %1177 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3345 = bitcast %union.tree_node* %1177 to %struct.tree_common*
  %code3346 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3345, i32 0, i32 2
  %bf.load3347 = load i32, i32* %code3346, align 8
  %bf.clear3348 = and i32 %bf.load3347, 255
  %cmp3349 = icmp eq i32 %bf.clear3348, 88
  br i1 %cmp3349, label %land.lhs.true.3351, label %if.end.3382

land.lhs.true.3351:                               ; preds = %land.lhs.true.3344
  %1178 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3352 = bitcast %union.tree_node* %1178 to %struct.tree_exp*
  %operands3353 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3352, i32 0, i32 2
  %arrayidx3354 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3353, i32 0, i64 1
  %1179 = load %union.tree_node*, %union.tree_node** %arrayidx3354, align 8
  %common3355 = bitcast %union.tree_node* %1179 to %struct.tree_common*
  %code3356 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3355, i32 0, i32 2
  %bf.load3357 = load i32, i32* %code3356, align 8
  %bf.clear3358 = and i32 %bf.load3357, 255
  %cmp3359 = icmp eq i32 %bf.clear3358, 25
  br i1 %cmp3359, label %land.lhs.true.3361, label %if.end.3382

land.lhs.true.3361:                               ; preds = %land.lhs.true.3351
  %1180 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3362 = bitcast %union.tree_node* %1180 to %struct.tree_exp*
  %operands3363 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3362, i32 0, i32 2
  %arrayidx3364 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3363, i32 0, i64 1
  %1181 = load %union.tree_node*, %union.tree_node** %arrayidx3364, align 8
  %common3365 = bitcast %union.tree_node* %1181 to %struct.tree_common*
  %code3366 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3365, i32 0, i32 2
  %bf.load3367 = load i32, i32* %code3366, align 8
  %bf.clear3368 = and i32 %bf.load3367, 255
  %cmp3369 = icmp eq i32 %bf.clear3368, 25
  br i1 %cmp3369, label %land.lhs.true.3371, label %if.end.3382

land.lhs.true.3371:                               ; preds = %land.lhs.true.3361
  %1182 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3372 = bitcast %union.tree_node* %1182 to %struct.tree_exp*
  %operands3373 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3372, i32 0, i32 2
  %arrayidx3374 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3373, i32 0, i64 1
  %1183 = load %union.tree_node*, %union.tree_node** %arrayidx3374, align 8
  %1184 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3375 = bitcast %union.tree_node* %1184 to %struct.tree_exp*
  %operands3376 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3375, i32 0, i32 2
  %arrayidx3377 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3376, i32 0, i64 1
  %1185 = load %union.tree_node*, %union.tree_node** %arrayidx3377, align 8
  %call3378 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %1183, %union.tree_node* %1185, i32 0)
  %call3379 = call i32 @integer_zerop(%union.tree_node* %call3378)
  %tobool3380 = icmp ne i32 %call3379, 0
  br i1 %tobool3380, label %if.then.3381, label %if.end.3382

if.then.3381:                                     ; preds = %land.lhs.true.3371
  store i32 86, i32* %code, align 4
  br label %bit_ior

if.end.3382:                                      ; preds = %land.lhs.true.3371, %land.lhs.true.3361, %land.lhs.true.3351, %land.lhs.true.3344, %if.end.3337
  br label %bit_rotate

sw.bb.3383:                                       ; preds = %if.end.901
  br label %bit_and

bit_and:                                          ; preds = %if.then.3565, %sw.bb.3383
  %1186 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3384 = call i32 @integer_all_onesp(%union.tree_node* %1186)
  %tobool3385 = icmp ne i32 %call3384, 0
  br i1 %tobool3385, label %if.then.3386, label %if.end.3389

if.then.3386:                                     ; preds = %bit_and
  %1187 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1188 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3387 = call %union.tree_node* @convert(%union.tree_node* %1187, %union.tree_node* %1188)
  %call3388 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3387)
  store %union.tree_node* %call3388, %union.tree_node** %retval
  br label %return

if.end.3389:                                      ; preds = %bit_and
  %1189 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3390 = call i32 @integer_zerop(%union.tree_node* %1189)
  %tobool3391 = icmp ne i32 %call3390, 0
  br i1 %tobool3391, label %if.then.3392, label %if.end.3394

if.then.3392:                                     ; preds = %if.end.3389
  %1190 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1191 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1192 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3393 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1190, %union.tree_node* %1191, %union.tree_node* %1192)
  store %union.tree_node* %call3393, %union.tree_node** %retval
  br label %return

if.end.3394:                                      ; preds = %if.end.3389
  %1193 = load i32, i32* %code, align 4
  %1194 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1195 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1196 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3395 = call %union.tree_node* @distribute_bit_expr(i32 %1193, %union.tree_node* %1194, %union.tree_node* %1195, %union.tree_node* %1196)
  store %union.tree_node* %call3395, %union.tree_node** %t1, align 8
  %1197 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp3396 = icmp ne %union.tree_node* %1197, null
  br i1 %cmp3396, label %if.then.3398, label %if.end.3399

if.then.3398:                                     ; preds = %if.end.3394
  %1198 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %1198, %union.tree_node** %retval
  br label %return

if.end.3399:                                      ; preds = %if.end.3394
  %1199 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3400 = bitcast %union.tree_node* %1199 to %struct.tree_common*
  %code3401 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3400, i32 0, i32 2
  %bf.load3402 = load i32, i32* %code3401, align 8
  %bf.clear3403 = and i32 %bf.load3402, 255
  %cmp3404 = icmp eq i32 %bf.clear3403, 25
  br i1 %cmp3404, label %land.lhs.true.3406, label %if.end.3459

land.lhs.true.3406:                               ; preds = %if.end.3399
  %1200 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3407 = bitcast %union.tree_node* %1200 to %struct.tree_common*
  %code3408 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3407, i32 0, i32 2
  %bf.load3409 = load i32, i32* %code3408, align 8
  %bf.clear3410 = and i32 %bf.load3409, 255
  %cmp3411 = icmp eq i32 %bf.clear3410, 115
  br i1 %cmp3411, label %land.lhs.true.3413, label %if.end.3459

land.lhs.true.3413:                               ; preds = %land.lhs.true.3406
  %1201 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3414 = bitcast %union.tree_node* %1201 to %struct.tree_exp*
  %operands3415 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3414, i32 0, i32 2
  %arrayidx3416 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3415, i32 0, i64 0
  %1202 = load %union.tree_node*, %union.tree_node** %arrayidx3416, align 8
  %common3417 = bitcast %union.tree_node* %1202 to %struct.tree_common*
  %type3418 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3417, i32 0, i32 1
  %1203 = load %union.tree_node*, %union.tree_node** %type3418, align 8
  %common3419 = bitcast %union.tree_node* %1203 to %struct.tree_common*
  %unsigned_flag3420 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3419, i32 0, i32 2
  %bf.load3421 = load i32, i32* %unsigned_flag3420, align 8
  %bf.lshr3422 = lshr i32 %bf.load3421, 13
  %bf.clear3423 = and i32 %bf.lshr3422, 1
  %tobool3424 = icmp ne i32 %bf.clear3423, 0
  br i1 %tobool3424, label %if.then.3425, label %if.end.3459

if.then.3425:                                     ; preds = %land.lhs.true.3413
  %1204 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3427 = bitcast %union.tree_node* %1204 to %struct.tree_exp*
  %operands3428 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3427, i32 0, i32 2
  %arrayidx3429 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3428, i32 0, i64 0
  %1205 = load %union.tree_node*, %union.tree_node** %arrayidx3429, align 8
  %common3430 = bitcast %union.tree_node* %1205 to %struct.tree_common*
  %type3431 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3430, i32 0, i32 1
  %1206 = load %union.tree_node*, %union.tree_node** %type3431, align 8
  %type3432 = bitcast %union.tree_node* %1206 to %struct.tree_type*
  %precision3433 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3432, i32 0, i32 6
  %bf.load3434 = load i32, i32* %precision3433, align 4
  %bf.clear3435 = and i32 %bf.load3434, 511
  store i32 %bf.clear3435, i32* %prec, align 4
  %1207 = load i32, i32* %prec, align 4
  %1208 = load i32, i32* @target_flags, align 4
  %and3436 = and i32 %1208, 33554432
  %tobool3437 = icmp ne i32 %and3436, 0
  %cond3438 = select i1 %tobool3437, i32 64, i32 32
  %cmp3439 = icmp ult i32 %1207, %cond3438
  br i1 %cmp3439, label %land.lhs.true.3441, label %if.end.3458

land.lhs.true.3441:                               ; preds = %if.then.3425
  %1209 = load i32, i32* %prec, align 4
  %cmp3442 = icmp ult i32 %1209, 64
  br i1 %cmp3442, label %land.lhs.true.3444, label %if.end.3458

land.lhs.true.3444:                               ; preds = %land.lhs.true.3441
  %1210 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst3445 = bitcast %union.tree_node* %1210 to %struct.tree_int_cst*
  %int_cst3446 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3445, i32 0, i32 2
  %low3447 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3446, i32 0, i32 0
  %1211 = load i64, i64* %low3447, align 8
  %neg3448 = xor i64 %1211, -1
  %1212 = load i32, i32* %prec, align 4
  %sh_prom = zext i32 %1212 to i64
  %shl = shl i64 1, %sh_prom
  %sub3449 = sub nsw i64 %shl, 1
  %and3450 = and i64 %neg3448, %sub3449
  %cmp3451 = icmp eq i64 %and3450, 0
  br i1 %cmp3451, label %if.then.3453, label %if.end.3458

if.then.3453:                                     ; preds = %land.lhs.true.3444
  %1213 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1214 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3454 = bitcast %union.tree_node* %1214 to %struct.tree_exp*
  %operands3455 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3454, i32 0, i32 2
  %arrayidx3456 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3455, i32 0, i64 0
  %1215 = load %union.tree_node*, %union.tree_node** %arrayidx3456, align 8
  %call3457 = call %union.tree_node* @build1(i32 115, %union.tree_node* %1213, %union.tree_node* %1215)
  store %union.tree_node* %call3457, %union.tree_node** %retval
  br label %return

if.end.3458:                                      ; preds = %land.lhs.true.3444, %land.lhs.true.3441, %if.then.3425
  br label %if.end.3459

if.end.3459:                                      ; preds = %if.end.3458, %land.lhs.true.3413, %land.lhs.true.3406, %if.end.3399
  %1216 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3460 = bitcast %union.tree_node* %1216 to %struct.tree_common*
  %code3461 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3460, i32 0, i32 2
  %bf.load3462 = load i32, i32* %code3461, align 8
  %bf.clear3463 = and i32 %bf.load3462, 255
  %cmp3464 = icmp eq i32 %bf.clear3463, 25
  br i1 %cmp3464, label %land.lhs.true.3466, label %if.end.3522

land.lhs.true.3466:                               ; preds = %if.end.3459
  %1217 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3467 = bitcast %union.tree_node* %1217 to %struct.tree_common*
  %code3468 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3467, i32 0, i32 2
  %bf.load3469 = load i32, i32* %code3468, align 8
  %bf.clear3470 = and i32 %bf.load3469, 255
  %cmp3471 = icmp eq i32 %bf.clear3470, 115
  br i1 %cmp3471, label %land.lhs.true.3473, label %if.end.3522

land.lhs.true.3473:                               ; preds = %land.lhs.true.3466
  %1218 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3474 = bitcast %union.tree_node* %1218 to %struct.tree_exp*
  %operands3475 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3474, i32 0, i32 2
  %arrayidx3476 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3475, i32 0, i64 0
  %1219 = load %union.tree_node*, %union.tree_node** %arrayidx3476, align 8
  %common3477 = bitcast %union.tree_node* %1219 to %struct.tree_common*
  %type3478 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3477, i32 0, i32 1
  %1220 = load %union.tree_node*, %union.tree_node** %type3478, align 8
  %common3479 = bitcast %union.tree_node* %1220 to %struct.tree_common*
  %unsigned_flag3480 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3479, i32 0, i32 2
  %bf.load3481 = load i32, i32* %unsigned_flag3480, align 8
  %bf.lshr3482 = lshr i32 %bf.load3481, 13
  %bf.clear3483 = and i32 %bf.lshr3482, 1
  %tobool3484 = icmp ne i32 %bf.clear3483, 0
  br i1 %tobool3484, label %if.then.3485, label %if.end.3522

if.then.3485:                                     ; preds = %land.lhs.true.3473
  %1221 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3488 = bitcast %union.tree_node* %1221 to %struct.tree_exp*
  %operands3489 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3488, i32 0, i32 2
  %arrayidx3490 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3489, i32 0, i64 0
  %1222 = load %union.tree_node*, %union.tree_node** %arrayidx3490, align 8
  %common3491 = bitcast %union.tree_node* %1222 to %struct.tree_common*
  %type3492 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3491, i32 0, i32 1
  %1223 = load %union.tree_node*, %union.tree_node** %type3492, align 8
  %type3493 = bitcast %union.tree_node* %1223 to %struct.tree_type*
  %precision3494 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3493, i32 0, i32 6
  %bf.load3495 = load i32, i32* %precision3494, align 4
  %bf.clear3496 = and i32 %bf.load3495, 511
  store i32 %bf.clear3496, i32* %prec3487, align 4
  %1224 = load i32, i32* %prec3487, align 4
  %1225 = load i32, i32* @target_flags, align 4
  %and3497 = and i32 %1225, 33554432
  %tobool3498 = icmp ne i32 %and3497, 0
  %cond3499 = select i1 %tobool3498, i32 64, i32 32
  %cmp3500 = icmp ult i32 %1224, %cond3499
  br i1 %cmp3500, label %land.lhs.true.3502, label %if.end.3521

land.lhs.true.3502:                               ; preds = %if.then.3485
  %1226 = load i32, i32* %prec3487, align 4
  %cmp3503 = icmp ult i32 %1226, 64
  br i1 %cmp3503, label %land.lhs.true.3505, label %if.end.3521

land.lhs.true.3505:                               ; preds = %land.lhs.true.3502
  %1227 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst3506 = bitcast %union.tree_node* %1227 to %struct.tree_int_cst*
  %int_cst3507 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3506, i32 0, i32 2
  %low3508 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3507, i32 0, i32 0
  %1228 = load i64, i64* %low3508, align 8
  %neg3509 = xor i64 %1228, -1
  %1229 = load i32, i32* %prec3487, align 4
  %sh_prom3510 = zext i32 %1229 to i64
  %shl3511 = shl i64 1, %sh_prom3510
  %sub3512 = sub nsw i64 %shl3511, 1
  %and3513 = and i64 %neg3509, %sub3512
  %cmp3514 = icmp eq i64 %and3513, 0
  br i1 %cmp3514, label %if.then.3516, label %if.end.3521

if.then.3516:                                     ; preds = %land.lhs.true.3505
  %1230 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1231 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3517 = bitcast %union.tree_node* %1231 to %struct.tree_exp*
  %operands3518 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3517, i32 0, i32 2
  %arrayidx3519 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3518, i32 0, i64 0
  %1232 = load %union.tree_node*, %union.tree_node** %arrayidx3519, align 8
  %call3520 = call %union.tree_node* @build1(i32 115, %union.tree_node* %1230, %union.tree_node* %1232)
  store %union.tree_node* %call3520, %union.tree_node** %retval
  br label %return

if.end.3521:                                      ; preds = %land.lhs.true.3505, %land.lhs.true.3502, %if.then.3485
  br label %if.end.3522

if.end.3522:                                      ; preds = %if.end.3521, %land.lhs.true.3473, %land.lhs.true.3466, %if.end.3459
  %1233 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3523 = bitcast %union.tree_node* %1233 to %struct.tree_common*
  %code3524 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3523, i32 0, i32 2
  %bf.load3525 = load i32, i32* %code3524, align 8
  %bf.clear3526 = and i32 %bf.load3525, 255
  %cmp3527 = icmp eq i32 %bf.clear3526, 90
  br i1 %cmp3527, label %land.lhs.true.3529, label %if.end.3546

land.lhs.true.3529:                               ; preds = %if.end.3522
  %1234 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3530 = bitcast %union.tree_node* %1234 to %struct.tree_common*
  %code3531 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3530, i32 0, i32 2
  %bf.load3532 = load i32, i32* %code3531, align 8
  %bf.clear3533 = and i32 %bf.load3532, 255
  %cmp3534 = icmp eq i32 %bf.clear3533, 90
  br i1 %cmp3534, label %if.then.3536, label %if.end.3546

if.then.3536:                                     ; preds = %land.lhs.true.3529
  %1235 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1236 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1237 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3537 = bitcast %union.tree_node* %1237 to %struct.tree_exp*
  %operands3538 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3537, i32 0, i32 2
  %arrayidx3539 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3538, i32 0, i64 0
  %1238 = load %union.tree_node*, %union.tree_node** %arrayidx3539, align 8
  %1239 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3540 = bitcast %union.tree_node* %1239 to %struct.tree_exp*
  %operands3541 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3540, i32 0, i32 2
  %arrayidx3542 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3541, i32 0, i64 0
  %1240 = load %union.tree_node*, %union.tree_node** %arrayidx3542, align 8
  %call3543 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 86, %union.tree_node* %1236, %union.tree_node* %1238, %union.tree_node* %1240)
  %call3544 = call %union.tree_node* @build1(i32 90, %union.tree_node* %1235, %union.tree_node* %call3543)
  %call3545 = call %union.tree_node* @fold(%union.tree_node* %call3544)
  store %union.tree_node* %call3545, %union.tree_node** %retval
  br label %return

if.end.3546:                                      ; preds = %land.lhs.true.3529, %if.end.3522
  br label %associate

sw.bb.3547:                                       ; preds = %if.end.901
  %1241 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3548 = call i32 @integer_all_onesp(%union.tree_node* %1241)
  %tobool3549 = icmp ne i32 %call3548, 0
  br i1 %tobool3549, label %if.then.3550, label %if.end.3553

if.then.3550:                                     ; preds = %sw.bb.3547
  %1242 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1243 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3551 = call %union.tree_node* @convert(%union.tree_node* %1242, %union.tree_node* %1243)
  %call3552 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3551)
  store %union.tree_node* %call3552, %union.tree_node** %retval
  br label %return

if.end.3553:                                      ; preds = %sw.bb.3547
  %1244 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3554 = call i32 @integer_zerop(%union.tree_node* %1244)
  %tobool3555 = icmp ne i32 %call3554, 0
  br i1 %tobool3555, label %if.then.3556, label %if.end.3558

if.then.3556:                                     ; preds = %if.end.3553
  %1245 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1246 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1247 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3557 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1245, %union.tree_node* %1246, %union.tree_node* %1247)
  store %union.tree_node* %call3557, %union.tree_node** %retval
  br label %return

if.end.3558:                                      ; preds = %if.end.3553
  %1248 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3559 = bitcast %union.tree_node* %1248 to %struct.tree_common*
  %code3560 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3559, i32 0, i32 2
  %bf.load3561 = load i32, i32* %code3560, align 8
  %bf.clear3562 = and i32 %bf.load3561, 255
  %cmp3563 = icmp eq i32 %bf.clear3562, 25
  br i1 %cmp3563, label %if.then.3565, label %if.end.3568

if.then.3565:                                     ; preds = %if.end.3558
  %1249 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1250 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3566 = call %union.tree_node* @build1(i32 90, %union.tree_node* %1249, %union.tree_node* %1250)
  %call3567 = call %union.tree_node* @fold(%union.tree_node* %call3566)
  store %union.tree_node* %call3567, %union.tree_node** %arg1, align 8
  store i32 88, i32* %code, align 4
  br label %bit_and

if.end.3568:                                      ; preds = %if.end.3558
  br label %binary

sw.bb.3569:                                       ; preds = %if.end.901
  %1251 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3570 = bitcast %union.tree_node* %1251 to %struct.tree_common*
  %code3571 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3570, i32 0, i32 2
  %bf.load3572 = load i32, i32* %code3571, align 8
  %bf.clear3573 = and i32 %bf.load3572, 255
  %cmp3574 = icmp eq i32 %bf.clear3573, 77
  br i1 %cmp3574, label %land.lhs.true.3576, label %if.end.3592

land.lhs.true.3576:                               ; preds = %sw.bb.3569
  %1252 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3577 = bitcast %union.tree_node* %1252 to %struct.tree_common*
  %code3578 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3577, i32 0, i32 2
  %bf.load3579 = load i32, i32* %code3578, align 8
  %bf.clear3580 = and i32 %bf.load3579, 255
  %cmp3581 = icmp eq i32 %bf.clear3580, 77
  br i1 %cmp3581, label %if.then.3583, label %if.end.3592

if.then.3583:                                     ; preds = %land.lhs.true.3576
  %1253 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1254 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3584 = bitcast %union.tree_node* %1254 to %struct.tree_exp*
  %operands3585 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3584, i32 0, i32 2
  %arrayidx3586 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3585, i32 0, i64 0
  %1255 = load %union.tree_node*, %union.tree_node** %arrayidx3586, align 8
  %1256 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3587 = bitcast %union.tree_node* %1256 to %struct.tree_exp*
  %operands3588 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3587, i32 0, i32 2
  %arrayidx3589 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3588, i32 0, i64 0
  %1257 = load %union.tree_node*, %union.tree_node** %arrayidx3589, align 8
  %call3590 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 70, %union.tree_node* %1253, %union.tree_node* %1255, %union.tree_node* %1257)
  %call3591 = call %union.tree_node* @fold(%union.tree_node* %call3590)
  store %union.tree_node* %call3591, %union.tree_node** %retval
  br label %return

if.end.3592:                                      ; preds = %land.lhs.true.3576, %sw.bb.3569
  %1258 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3593 = call i32 @real_onep(%union.tree_node* %1258)
  %tobool3594 = icmp ne i32 %call3593, 0
  br i1 %tobool3594, label %if.then.3595, label %if.end.3598

if.then.3595:                                     ; preds = %if.end.3592
  %1259 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1260 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3596 = call %union.tree_node* @convert(%union.tree_node* %1259, %union.tree_node* %1260)
  %call3597 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3596)
  store %union.tree_node* %call3597, %union.tree_node** %retval
  br label %return

if.end.3598:                                      ; preds = %if.end.3592
  %1261 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3599 = bitcast %union.tree_node* %1261 to %struct.tree_common*
  %code3600 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3599, i32 0, i32 2
  %bf.load3601 = load i32, i32* %code3600, align 8
  %bf.clear3602 = and i32 %bf.load3601, 255
  %cmp3603 = icmp eq i32 %bf.clear3602, 26
  br i1 %cmp3603, label %if.then.3605, label %if.end.3637

if.then.3605:                                     ; preds = %if.end.3598
  %1262 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3606 = icmp ne i32 %1262, 0
  br i1 %tobool3606, label %land.lhs.true.3607, label %if.else.3615

land.lhs.true.3607:                               ; preds = %if.then.3605
  %1263 = load i32, i32* %code, align 4
  %1264 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call3608 = call %union.tree_node* @build_real(%union.tree_node* %1264, %struct.realvaluetype* byval align 8 @dconst1)
  %1265 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3609 = call %union.tree_node* @const_binop(i32 %1263, %union.tree_node* %call3608, %union.tree_node* %1265, i32 0)
  store %union.tree_node* %call3609, %union.tree_node** %tem, align 8
  %cmp3610 = icmp ne %union.tree_node* null, %call3609
  br i1 %cmp3610, label %if.then.3612, label %if.else.3615

if.then.3612:                                     ; preds = %land.lhs.true.3607
  %1266 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1267 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1268 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call3613 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1266, %union.tree_node* %1267, %union.tree_node* %1268)
  %call3614 = call %union.tree_node* @fold(%union.tree_node* %call3613)
  store %union.tree_node* %call3614, %union.tree_node** %retval
  br label %return

if.else.3615:                                     ; preds = %land.lhs.true.3607, %if.then.3605
  %1269 = load i32, i32* @optimize, align 4
  %tobool3616 = icmp ne i32 %1269, 0
  br i1 %tobool3616, label %if.then.3617, label %if.end.3635

if.then.3617:                                     ; preds = %if.else.3615
  %1270 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst3619 = bitcast %union.tree_node* %1270 to %struct.tree_real_cst*
  %real_cst3620 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst3619, i32 0, i32 2
  %1271 = bitcast %struct.realvaluetype* %r to i8*
  %1272 = bitcast %struct.realvaluetype* %real_cst3620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1271, i8* %1272, i64 24, i32 8, i1 false)
  %1273 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3621 = bitcast %union.tree_node* %1273 to %struct.tree_common*
  %type3622 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3621, i32 0, i32 1
  %1274 = load %union.tree_node*, %union.tree_node** %type3622, align 8
  %type3623 = bitcast %union.tree_node* %1274 to %struct.tree_type*
  %mode3624 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3623, i32 0, i32 6
  %bf.load3625 = load i32, i32* %mode3624, align 4
  %bf.lshr3626 = lshr i32 %bf.load3625, 9
  %bf.clear3627 = and i32 %bf.lshr3626, 127
  %call3628 = call i32 @exact_real_inverse(i32 %bf.clear3627, %struct.realvaluetype* %r)
  %tobool3629 = icmp ne i32 %call3628, 0
  br i1 %tobool3629, label %if.then.3630, label %if.end.3634

if.then.3630:                                     ; preds = %if.then.3617
  %1275 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call3631 = call %union.tree_node* @build_real(%union.tree_node* %1275, %struct.realvaluetype* byval align 8 %r)
  store %union.tree_node* %call3631, %union.tree_node** %tem, align 8
  %1276 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1277 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1278 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call3632 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1276, %union.tree_node* %1277, %union.tree_node* %1278)
  %call3633 = call %union.tree_node* @fold(%union.tree_node* %call3632)
  store %union.tree_node* %call3633, %union.tree_node** %retval
  br label %return

if.end.3634:                                      ; preds = %if.then.3617
  br label %if.end.3635

if.end.3635:                                      ; preds = %if.end.3634, %if.else.3615
  br label %if.end.3636

if.end.3636:                                      ; preds = %if.end.3635
  br label %if.end.3637

if.end.3637:                                      ; preds = %if.end.3636, %if.end.3598
  %1279 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3638 = icmp ne i32 %1279, 0
  br i1 %tobool3638, label %land.lhs.true.3639, label %if.end.3656

land.lhs.true.3639:                               ; preds = %if.end.3637
  %1280 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3640 = bitcast %union.tree_node* %1280 to %struct.tree_common*
  %code3641 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3640, i32 0, i32 2
  %bf.load3642 = load i32, i32* %code3641, align 8
  %bf.clear3643 = and i32 %bf.load3642, 255
  %cmp3644 = icmp eq i32 %bf.clear3643, 70
  br i1 %cmp3644, label %if.then.3646, label %if.end.3656

if.then.3646:                                     ; preds = %land.lhs.true.3639
  %1281 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1282 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3647 = bitcast %union.tree_node* %1282 to %struct.tree_exp*
  %operands3648 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3647, i32 0, i32 2
  %arrayidx3649 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3648, i32 0, i64 0
  %1283 = load %union.tree_node*, %union.tree_node** %arrayidx3649, align 8
  %1284 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1285 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3650 = bitcast %union.tree_node* %1285 to %struct.tree_exp*
  %operands3651 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3650, i32 0, i32 2
  %arrayidx3652 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3651, i32 0, i64 1
  %1286 = load %union.tree_node*, %union.tree_node** %arrayidx3652, align 8
  %1287 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3653 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1284, %union.tree_node* %1286, %union.tree_node* %1287)
  %call3654 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 70, %union.tree_node* %1281, %union.tree_node* %1283, %union.tree_node* %call3653)
  %call3655 = call %union.tree_node* @fold(%union.tree_node* %call3654)
  store %union.tree_node* %call3655, %union.tree_node** %retval
  br label %return

if.end.3656:                                      ; preds = %land.lhs.true.3639, %if.end.3637
  %1288 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool3657 = icmp ne i32 %1288, 0
  br i1 %tobool3657, label %land.lhs.true.3658, label %if.end.3675

land.lhs.true.3658:                               ; preds = %if.end.3656
  %1289 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3659 = bitcast %union.tree_node* %1289 to %struct.tree_common*
  %code3660 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3659, i32 0, i32 2
  %bf.load3661 = load i32, i32* %code3660, align 8
  %bf.clear3662 = and i32 %bf.load3661, 255
  %cmp3663 = icmp eq i32 %bf.clear3662, 70
  br i1 %cmp3663, label %if.then.3665, label %if.end.3675

if.then.3665:                                     ; preds = %land.lhs.true.3658
  %1290 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1291 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1292 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1293 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3666 = bitcast %union.tree_node* %1293 to %struct.tree_exp*
  %operands3667 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3666, i32 0, i32 2
  %arrayidx3668 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3667, i32 0, i64 0
  %1294 = load %union.tree_node*, %union.tree_node** %arrayidx3668, align 8
  %call3669 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 70, %union.tree_node* %1291, %union.tree_node* %1292, %union.tree_node* %1294)
  %1295 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp3670 = bitcast %union.tree_node* %1295 to %struct.tree_exp*
  %operands3671 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3670, i32 0, i32 2
  %arrayidx3672 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3671, i32 0, i64 1
  %1296 = load %union.tree_node*, %union.tree_node** %arrayidx3672, align 8
  %call3673 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 61, %union.tree_node* %1290, %union.tree_node* %call3669, %union.tree_node* %1296)
  %call3674 = call %union.tree_node* @fold(%union.tree_node* %call3673)
  store %union.tree_node* %call3674, %union.tree_node** %retval
  br label %return

if.end.3675:                                      ; preds = %land.lhs.true.3658, %if.end.3656
  br label %binary

sw.bb.3676:                                       ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %1297 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3677 = call i32 @integer_onep(%union.tree_node* %1297)
  %tobool3678 = icmp ne i32 %call3677, 0
  br i1 %tobool3678, label %if.then.3679, label %if.end.3682

if.then.3679:                                     ; preds = %sw.bb.3676
  %1298 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1299 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3680 = call %union.tree_node* @convert(%union.tree_node* %1298, %union.tree_node* %1299)
  %call3681 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3680)
  store %union.tree_node* %call3681, %union.tree_node** %retval
  br label %return

if.end.3682:                                      ; preds = %sw.bb.3676
  %1300 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3683 = call i32 @integer_zerop(%union.tree_node* %1300)
  %tobool3684 = icmp ne i32 %call3683, 0
  br i1 %tobool3684, label %if.then.3685, label %if.end.3686

if.then.3685:                                     ; preds = %if.end.3682
  %1301 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1301, %union.tree_node** %retval
  br label %return

if.end.3686:                                      ; preds = %if.end.3682
  %1302 = load i32, i32* %code, align 4
  %cmp3687 = icmp eq i32 %1302, 63
  br i1 %cmp3687, label %land.lhs.true.3692, label %lor.lhs.false.3689

lor.lhs.false.3689:                               ; preds = %if.end.3686
  %1303 = load i32, i32* %code, align 4
  %cmp3690 = icmp eq i32 %1303, 64
  br i1 %cmp3690, label %land.lhs.true.3692, label %if.end.3698

land.lhs.true.3692:                               ; preds = %lor.lhs.false.3689, %if.end.3686
  %1304 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1305 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1306 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3693 = call i32 @multiple_of_p(%union.tree_node* %1304, %union.tree_node* %1305, %union.tree_node* %1306)
  %tobool3694 = icmp ne i32 %call3693, 0
  br i1 %tobool3694, label %if.then.3695, label %if.end.3698

if.then.3695:                                     ; preds = %land.lhs.true.3692
  %1307 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1308 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1309 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3696 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 71, %union.tree_node* %1307, %union.tree_node* %1308, %union.tree_node* %1309)
  %call3697 = call %union.tree_node* @fold(%union.tree_node* %call3696)
  store %union.tree_node* %call3697, %union.tree_node** %retval
  br label %return

if.end.3698:                                      ; preds = %land.lhs.true.3692, %lor.lhs.false.3689
  %1310 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3699 = bitcast %union.tree_node* %1310 to %struct.tree_common*
  %code3700 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3699, i32 0, i32 2
  %bf.load3701 = load i32, i32* %code3700, align 8
  %bf.clear3702 = and i32 %bf.load3701, 255
  %cmp3703 = icmp eq i32 %bf.clear3702, 25
  br i1 %cmp3703, label %land.lhs.true.3705, label %if.end.3714

land.lhs.true.3705:                               ; preds = %if.end.3698
  %1311 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp3706 = bitcast %union.tree_node* %1311 to %struct.tree_exp*
  %operands3707 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3706, i32 0, i32 2
  %arrayidx3708 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3707, i32 0, i64 0
  %1312 = load %union.tree_node*, %union.tree_node** %arrayidx3708, align 8
  %1313 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1314 = load i32, i32* %code, align 4
  %call3709 = call %union.tree_node* @extract_muldiv(%union.tree_node* %1312, %union.tree_node* %1313, i32 %1314, %union.tree_node* null)
  store %union.tree_node* %call3709, %union.tree_node** %tem, align 8
  %cmp3710 = icmp ne %union.tree_node* null, %call3709
  br i1 %cmp3710, label %if.then.3712, label %if.end.3714

if.then.3712:                                     ; preds = %land.lhs.true.3705
  %1315 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1316 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call3713 = call %union.tree_node* @convert(%union.tree_node* %1315, %union.tree_node* %1316)
  store %union.tree_node* %call3713, %union.tree_node** %retval
  br label %return

if.end.3714:                                      ; preds = %land.lhs.true.3705, %if.end.3698
  br label %binary

sw.bb.3715:                                       ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %1317 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3716 = call i32 @integer_onep(%union.tree_node* %1317)
  %tobool3717 = icmp ne i32 %call3716, 0
  br i1 %tobool3717, label %if.then.3718, label %if.end.3720

if.then.3718:                                     ; preds = %sw.bb.3715
  %1318 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1319 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %1320 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3719 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1318, %union.tree_node* %1319, %union.tree_node* %1320)
  store %union.tree_node* %call3719, %union.tree_node** %retval
  br label %return

if.end.3720:                                      ; preds = %sw.bb.3715
  %1321 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3721 = call i32 @integer_zerop(%union.tree_node* %1321)
  %tobool3722 = icmp ne i32 %call3721, 0
  br i1 %tobool3722, label %if.then.3723, label %if.end.3724

if.then.3723:                                     ; preds = %if.end.3720
  %1322 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1322, %union.tree_node** %retval
  br label %return

if.end.3724:                                      ; preds = %if.end.3720
  %1323 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3725 = bitcast %union.tree_node* %1323 to %struct.tree_common*
  %code3726 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3725, i32 0, i32 2
  %bf.load3727 = load i32, i32* %code3726, align 8
  %bf.clear3728 = and i32 %bf.load3727, 255
  %cmp3729 = icmp eq i32 %bf.clear3728, 25
  br i1 %cmp3729, label %land.lhs.true.3731, label %if.end.3740

land.lhs.true.3731:                               ; preds = %if.end.3724
  %1324 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp3732 = bitcast %union.tree_node* %1324 to %struct.tree_exp*
  %operands3733 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3732, i32 0, i32 2
  %arrayidx3734 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3733, i32 0, i64 0
  %1325 = load %union.tree_node*, %union.tree_node** %arrayidx3734, align 8
  %1326 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1327 = load i32, i32* %code, align 4
  %call3735 = call %union.tree_node* @extract_muldiv(%union.tree_node* %1325, %union.tree_node* %1326, i32 %1327, %union.tree_node* null)
  store %union.tree_node* %call3735, %union.tree_node** %tem, align 8
  %cmp3736 = icmp ne %union.tree_node* null, %call3735
  br i1 %cmp3736, label %if.then.3738, label %if.end.3740

if.then.3738:                                     ; preds = %land.lhs.true.3731
  %1328 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1329 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call3739 = call %union.tree_node* @convert(%union.tree_node* %1328, %union.tree_node* %1329)
  store %union.tree_node* %call3739, %union.tree_node** %retval
  br label %return

if.end.3740:                                      ; preds = %land.lhs.true.3731, %if.end.3724
  br label %binary

sw.bb.3741:                                       ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %1330 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3742 = call i32 @integer_zerop(%union.tree_node* %1330)
  %tobool3743 = icmp ne i32 %call3742, 0
  br i1 %tobool3743, label %if.then.3744, label %if.end.3747

if.then.3744:                                     ; preds = %sw.bb.3741
  %1331 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1332 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3745 = call %union.tree_node* @convert(%union.tree_node* %1331, %union.tree_node* %1332)
  %call3746 = call %union.tree_node* @non_lvalue(%union.tree_node* %call3745)
  store %union.tree_node* %call3746, %union.tree_node** %retval
  br label %return

if.end.3747:                                      ; preds = %sw.bb.3741
  %1333 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3748 = bitcast %union.tree_node* %1333 to %struct.tree_common*
  %code3749 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3748, i32 0, i32 2
  %bf.load3750 = load i32, i32* %code3749, align 8
  %bf.clear3751 = and i32 %bf.load3750, 255
  %cmp3752 = icmp eq i32 %bf.clear3751, 25
  br i1 %cmp3752, label %land.lhs.true.3754, label %if.end.3759

land.lhs.true.3754:                               ; preds = %if.end.3747
  %1334 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3755 = call i32 @tree_int_cst_sgn(%union.tree_node* %1334)
  %cmp3756 = icmp slt i32 %call3755, 0
  br i1 %cmp3756, label %if.then.3758, label %if.end.3759

if.then.3758:                                     ; preds = %land.lhs.true.3754
  %1335 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1335, %union.tree_node** %retval
  br label %return

if.end.3759:                                      ; preds = %land.lhs.true.3754, %if.end.3747
  %1336 = load i32, i32* %code, align 4
  %cmp3760 = icmp eq i32 %1336, 84
  br i1 %cmp3760, label %land.lhs.true.3762, label %if.end.3796

land.lhs.true.3762:                               ; preds = %if.end.3759
  %1337 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3763 = bitcast %union.tree_node* %1337 to %struct.tree_common*
  %code3764 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3763, i32 0, i32 2
  %bf.load3765 = load i32, i32* %code3764, align 8
  %bf.clear3766 = and i32 %bf.load3765, 255
  %cmp3767 = icmp eq i32 %bf.clear3766, 25
  br i1 %cmp3767, label %if.then.3769, label %if.end.3796

if.then.3769:                                     ; preds = %land.lhs.true.3762
  %1338 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common3770 = bitcast %union.tree_node* %1338 to %struct.tree_common*
  %code3771 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3770, i32 0, i32 2
  %bf.load3772 = load i32, i32* %code3771, align 8
  %bf.clear3773 = and i32 %bf.load3772, -256
  %bf.set3774 = or i32 %bf.clear3773, 85
  store i32 %bf.set3774, i32* %code3771, align 8
  store i32 85, i32* %code, align 4
  %1339 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3775 = bitcast %union.tree_node* %1339 to %struct.tree_common*
  %type3776 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3775, i32 0, i32 1
  %1340 = load %union.tree_node*, %union.tree_node** %type3776, align 8
  %1341 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3777 = bitcast %union.tree_node* %1341 to %struct.tree_type*
  %mode3778 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3777, i32 0, i32 6
  %bf.load3779 = load i32, i32* %mode3778, align 4
  %bf.lshr3780 = lshr i32 %bf.load3779, 9
  %bf.clear3781 = and i32 %bf.lshr3780, 127
  %idxprom3782 = sext i32 %bf.clear3781 to i64
  %arrayidx3783 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom3782
  %1342 = load i16, i16* %arrayidx3783, align 2
  %conv3784 = zext i16 %1342 to i64
  %call3785 = call %union.tree_node* @build_int_2_wide(i64 %conv3784, i64 0)
  %call3786 = call %union.tree_node* @convert(%union.tree_node* %1340, %union.tree_node* %call3785)
  %1343 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3787 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %call3786, %union.tree_node* %1343, i32 0)
  store %union.tree_node* %call3787, %union.tree_node** %arg1, align 8
  %1344 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp3788 = bitcast %union.tree_node* %1344 to %struct.tree_exp*
  %operands3789 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3788, i32 0, i32 2
  %arrayidx3790 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3789, i32 0, i64 1
  store %union.tree_node* %call3787, %union.tree_node** %arrayidx3790, align 8
  %1345 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3791 = call i32 @tree_int_cst_sgn(%union.tree_node* %1345)
  %cmp3792 = icmp slt i32 %call3791, 0
  br i1 %cmp3792, label %if.then.3794, label %if.end.3795

if.then.3794:                                     ; preds = %if.then.3769
  %1346 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1346, %union.tree_node** %retval
  br label %return

if.end.3795:                                      ; preds = %if.then.3769
  br label %if.end.3796

if.end.3796:                                      ; preds = %if.end.3795, %land.lhs.true.3762, %if.end.3759
  %1347 = load i32, i32* %code, align 4
  %cmp3797 = icmp eq i32 %1347, 85
  br i1 %cmp3797, label %land.lhs.true.3799, label %if.end.3861

land.lhs.true.3799:                               ; preds = %if.end.3796
  %1348 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3800 = bitcast %union.tree_node* %1348 to %struct.tree_common*
  %code3801 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3800, i32 0, i32 2
  %bf.load3802 = load i32, i32* %code3801, align 8
  %bf.clear3803 = and i32 %bf.load3802, 255
  %cmp3804 = icmp eq i32 %bf.clear3803, 25
  br i1 %cmp3804, label %land.lhs.true.3806, label %if.end.3861

land.lhs.true.3806:                               ; preds = %land.lhs.true.3799
  %1349 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3807 = bitcast %union.tree_node* %1349 to %struct.tree_common*
  %code3808 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3807, i32 0, i32 2
  %bf.load3809 = load i32, i32* %code3808, align 8
  %bf.clear3810 = and i32 %bf.load3809, 255
  %cmp3811 = icmp eq i32 %bf.clear3810, 88
  br i1 %cmp3811, label %land.lhs.true.3834, label %lor.lhs.false.3813

lor.lhs.false.3813:                               ; preds = %land.lhs.true.3806
  %1350 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3814 = bitcast %union.tree_node* %1350 to %struct.tree_common*
  %code3815 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3814, i32 0, i32 2
  %bf.load3816 = load i32, i32* %code3815, align 8
  %bf.clear3817 = and i32 %bf.load3816, 255
  %cmp3818 = icmp eq i32 %bf.clear3817, 89
  br i1 %cmp3818, label %land.lhs.true.3834, label %lor.lhs.false.3820

lor.lhs.false.3820:                               ; preds = %lor.lhs.false.3813
  %1351 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3821 = bitcast %union.tree_node* %1351 to %struct.tree_common*
  %code3822 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3821, i32 0, i32 2
  %bf.load3823 = load i32, i32* %code3822, align 8
  %bf.clear3824 = and i32 %bf.load3823, 255
  %cmp3825 = icmp eq i32 %bf.clear3824, 86
  br i1 %cmp3825, label %land.lhs.true.3834, label %lor.lhs.false.3827

lor.lhs.false.3827:                               ; preds = %lor.lhs.false.3820
  %1352 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3828 = bitcast %union.tree_node* %1352 to %struct.tree_common*
  %code3829 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3828, i32 0, i32 2
  %bf.load3830 = load i32, i32* %code3829, align 8
  %bf.clear3831 = and i32 %bf.load3830, 255
  %cmp3832 = icmp eq i32 %bf.clear3831, 87
  br i1 %cmp3832, label %land.lhs.true.3834, label %if.end.3861

land.lhs.true.3834:                               ; preds = %lor.lhs.false.3827, %lor.lhs.false.3820, %lor.lhs.false.3813, %land.lhs.true.3806
  %1353 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3835 = bitcast %union.tree_node* %1353 to %struct.tree_exp*
  %operands3836 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3835, i32 0, i32 2
  %arrayidx3837 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3836, i32 0, i64 1
  %1354 = load %union.tree_node*, %union.tree_node** %arrayidx3837, align 8
  %common3838 = bitcast %union.tree_node* %1354 to %struct.tree_common*
  %code3839 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3838, i32 0, i32 2
  %bf.load3840 = load i32, i32* %code3839, align 8
  %bf.clear3841 = and i32 %bf.load3840, 255
  %cmp3842 = icmp eq i32 %bf.clear3841, 25
  br i1 %cmp3842, label %if.then.3844, label %if.end.3861

if.then.3844:                                     ; preds = %land.lhs.true.3834
  %1355 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3845 = bitcast %union.tree_node* %1355 to %struct.tree_common*
  %code3846 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3845, i32 0, i32 2
  %bf.load3847 = load i32, i32* %code3846, align 8
  %bf.clear3848 = and i32 %bf.load3847, 255
  %1356 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1357 = load i32, i32* %code, align 4
  %1358 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1359 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3849 = bitcast %union.tree_node* %1359 to %struct.tree_exp*
  %operands3850 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3849, i32 0, i32 2
  %arrayidx3851 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3850, i32 0, i64 0
  %1360 = load %union.tree_node*, %union.tree_node** %arrayidx3851, align 8
  %1361 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3852 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1357, %union.tree_node* %1358, %union.tree_node* %1360, %union.tree_node* %1361)
  %call3853 = call %union.tree_node* @fold(%union.tree_node* %call3852)
  %1362 = load i32, i32* %code, align 4
  %1363 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1364 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3854 = bitcast %union.tree_node* %1364 to %struct.tree_exp*
  %operands3855 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3854, i32 0, i32 2
  %arrayidx3856 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3855, i32 0, i64 1
  %1365 = load %union.tree_node*, %union.tree_node** %arrayidx3856, align 8
  %1366 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3857 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1362, %union.tree_node* %1363, %union.tree_node* %1365, %union.tree_node* %1366)
  %call3858 = call %union.tree_node* @fold(%union.tree_node* %call3857)
  %call3859 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear3848, %union.tree_node* %1356, %union.tree_node* %call3853, %union.tree_node* %call3858)
  %call3860 = call %union.tree_node* @fold(%union.tree_node* %call3859)
  store %union.tree_node* %call3860, %union.tree_node** %retval
  br label %return

if.end.3861:                                      ; preds = %land.lhs.true.3834, %lor.lhs.false.3827, %land.lhs.true.3799, %if.end.3796
  %1367 = load i32, i32* %code, align 4
  %cmp3862 = icmp eq i32 %1367, 85
  br i1 %cmp3862, label %land.lhs.true.3864, label %if.end.3929

land.lhs.true.3864:                               ; preds = %if.end.3861
  %1368 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common3865 = bitcast %union.tree_node* %1368 to %struct.tree_common*
  %code3866 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3865, i32 0, i32 2
  %bf.load3867 = load i32, i32* %code3866, align 8
  %bf.clear3868 = and i32 %bf.load3867, 255
  %cmp3869 = icmp eq i32 %bf.clear3868, 25
  br i1 %cmp3869, label %land.lhs.true.3871, label %if.end.3929

land.lhs.true.3871:                               ; preds = %land.lhs.true.3864
  %1369 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common3872 = bitcast %union.tree_node* %1369 to %struct.tree_common*
  %code3873 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3872, i32 0, i32 2
  %bf.load3874 = load i32, i32* %code3873, align 8
  %bf.clear3875 = and i32 %bf.load3874, 255
  %cmp3876 = icmp eq i32 %bf.clear3875, 85
  br i1 %cmp3876, label %land.lhs.true.3878, label %if.end.3929

land.lhs.true.3878:                               ; preds = %land.lhs.true.3871
  %1370 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3879 = bitcast %union.tree_node* %1370 to %struct.tree_exp*
  %operands3880 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3879, i32 0, i32 2
  %arrayidx3881 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3880, i32 0, i64 1
  %1371 = load %union.tree_node*, %union.tree_node** %arrayidx3881, align 8
  %common3882 = bitcast %union.tree_node* %1371 to %struct.tree_common*
  %code3883 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3882, i32 0, i32 2
  %bf.load3884 = load i32, i32* %code3883, align 8
  %bf.clear3885 = and i32 %bf.load3884, 255
  %cmp3886 = icmp eq i32 %bf.clear3885, 25
  br i1 %cmp3886, label %land.lhs.true.3888, label %if.end.3929

land.lhs.true.3888:                               ; preds = %land.lhs.true.3878
  %1372 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst3889 = bitcast %union.tree_node* %1372 to %struct.tree_int_cst*
  %int_cst3890 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3889, i32 0, i32 2
  %high3891 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3890, i32 0, i32 1
  %1373 = load i64, i64* %high3891, align 8
  %cmp3892 = icmp eq i64 %1373, 0
  br i1 %cmp3892, label %land.lhs.true.3894, label %if.end.3929

land.lhs.true.3894:                               ; preds = %land.lhs.true.3888
  %1374 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3895 = bitcast %union.tree_node* %1374 to %struct.tree_exp*
  %operands3896 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3895, i32 0, i32 2
  %arrayidx3897 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3896, i32 0, i64 1
  %1375 = load %union.tree_node*, %union.tree_node** %arrayidx3897, align 8
  %int_cst3898 = bitcast %union.tree_node* %1375 to %struct.tree_int_cst*
  %int_cst3899 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3898, i32 0, i32 2
  %high3900 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3899, i32 0, i32 1
  %1376 = load i64, i64* %high3900, align 8
  %cmp3901 = icmp eq i64 %1376, 0
  br i1 %cmp3901, label %land.lhs.true.3903, label %if.end.3929

land.lhs.true.3903:                               ; preds = %land.lhs.true.3894
  %1377 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst3904 = bitcast %union.tree_node* %1377 to %struct.tree_int_cst*
  %int_cst3905 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3904, i32 0, i32 2
  %low3906 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3905, i32 0, i32 0
  %1378 = load i64, i64* %low3906, align 8
  %1379 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3907 = bitcast %union.tree_node* %1379 to %struct.tree_exp*
  %operands3908 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3907, i32 0, i32 2
  %arrayidx3909 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3908, i32 0, i64 1
  %1380 = load %union.tree_node*, %union.tree_node** %arrayidx3909, align 8
  %int_cst3910 = bitcast %union.tree_node* %1380 to %struct.tree_int_cst*
  %int_cst3911 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst3910, i32 0, i32 2
  %low3912 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst3911, i32 0, i32 0
  %1381 = load i64, i64* %low3912, align 8
  %add3913 = add i64 %1378, %1381
  %1382 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3914 = bitcast %union.tree_node* %1382 to %struct.tree_type*
  %mode3915 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3914, i32 0, i32 6
  %bf.load3916 = load i32, i32* %mode3915, align 4
  %bf.lshr3917 = lshr i32 %bf.load3916, 9
  %bf.clear3918 = and i32 %bf.lshr3917, 127
  %idxprom3919 = sext i32 %bf.clear3918 to i64
  %arrayidx3920 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom3919
  %1383 = load i16, i16* %arrayidx3920, align 2
  %conv3921 = zext i16 %1383 to i32
  %conv3922 = zext i32 %conv3921 to i64
  %cmp3923 = icmp eq i64 %add3913, %conv3922
  br i1 %cmp3923, label %if.then.3925, label %if.end.3929

if.then.3925:                                     ; preds = %land.lhs.true.3903
  %1384 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp3926 = bitcast %union.tree_node* %1384 to %struct.tree_exp*
  %operands3927 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3926, i32 0, i32 2
  %arrayidx3928 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3927, i32 0, i64 0
  %1385 = load %union.tree_node*, %union.tree_node** %arrayidx3928, align 8
  store %union.tree_node* %1385, %union.tree_node** %retval
  br label %return

if.end.3929:                                      ; preds = %land.lhs.true.3903, %land.lhs.true.3894, %land.lhs.true.3888, %land.lhs.true.3878, %land.lhs.true.3871, %land.lhs.true.3864, %if.end.3861
  br label %binary

sw.bb.3930:                                       ; preds = %if.end.901
  %1386 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1387 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3931 = call i32 @operand_equal_p(%union.tree_node* %1386, %union.tree_node* %1387, i32 0)
  %tobool3932 = icmp ne i32 %call3931, 0
  br i1 %tobool3932, label %if.then.3933, label %if.end.3935

if.then.3933:                                     ; preds = %sw.bb.3930
  %1388 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1389 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1390 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3934 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1388, %union.tree_node* %1389, %union.tree_node* %1390)
  store %union.tree_node* %call3934, %union.tree_node** %retval
  br label %return

if.end.3935:                                      ; preds = %sw.bb.3930
  %1391 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3936 = bitcast %union.tree_node* %1391 to %struct.tree_common*
  %code3937 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3936, i32 0, i32 2
  %bf.load3938 = load i32, i32* %code3937, align 8
  %bf.clear3939 = and i32 %bf.load3938, 255
  %cmp3940 = icmp eq i32 %bf.clear3939, 6
  br i1 %cmp3940, label %land.lhs.true.3963, label %lor.lhs.false.3942

lor.lhs.false.3942:                               ; preds = %if.end.3935
  %1392 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3943 = bitcast %union.tree_node* %1392 to %struct.tree_common*
  %code3944 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3943, i32 0, i32 2
  %bf.load3945 = load i32, i32* %code3944, align 8
  %bf.clear3946 = and i32 %bf.load3945, 255
  %cmp3947 = icmp eq i32 %bf.clear3946, 10
  br i1 %cmp3947, label %land.lhs.true.3963, label %lor.lhs.false.3949

lor.lhs.false.3949:                               ; preds = %lor.lhs.false.3942
  %1393 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3950 = bitcast %union.tree_node* %1393 to %struct.tree_common*
  %code3951 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3950, i32 0, i32 2
  %bf.load3952 = load i32, i32* %code3951, align 8
  %bf.clear3953 = and i32 %bf.load3952, 255
  %cmp3954 = icmp eq i32 %bf.clear3953, 11
  br i1 %cmp3954, label %land.lhs.true.3963, label %lor.lhs.false.3956

lor.lhs.false.3956:                               ; preds = %lor.lhs.false.3949
  %1394 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3957 = bitcast %union.tree_node* %1394 to %struct.tree_common*
  %code3958 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3957, i32 0, i32 2
  %bf.load3959 = load i32, i32* %code3958, align 8
  %bf.clear3960 = and i32 %bf.load3959, 255
  %cmp3961 = icmp eq i32 %bf.clear3960, 12
  br i1 %cmp3961, label %land.lhs.true.3963, label %if.end.3969

land.lhs.true.3963:                               ; preds = %lor.lhs.false.3956, %lor.lhs.false.3949, %lor.lhs.false.3942, %if.end.3935
  %1395 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1396 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3964 = bitcast %union.tree_node* %1396 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3964, i32 0, i32 12
  %1397 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %call3965 = call i32 @operand_equal_p(%union.tree_node* %1395, %union.tree_node* %1397, i32 1)
  %tobool3966 = icmp ne i32 %call3965, 0
  br i1 %tobool3966, label %if.then.3967, label %if.end.3969

if.then.3967:                                     ; preds = %land.lhs.true.3963
  %1398 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1399 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1400 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call3968 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1398, %union.tree_node* %1399, %union.tree_node* %1400)
  store %union.tree_node* %call3968, %union.tree_node** %retval
  br label %return

if.end.3969:                                      ; preds = %land.lhs.true.3963, %lor.lhs.false.3956
  br label %associate

sw.bb.3970:                                       ; preds = %if.end.901
  %1401 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1402 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3971 = call i32 @operand_equal_p(%union.tree_node* %1401, %union.tree_node* %1402, i32 0)
  %tobool3972 = icmp ne i32 %call3971, 0
  br i1 %tobool3972, label %if.then.3973, label %if.end.3975

if.then.3973:                                     ; preds = %sw.bb.3970
  %1403 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1404 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1405 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call3974 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1403, %union.tree_node* %1404, %union.tree_node* %1405)
  store %union.tree_node* %call3974, %union.tree_node** %retval
  br label %return

if.end.3975:                                      ; preds = %sw.bb.3970
  %1406 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3976 = bitcast %union.tree_node* %1406 to %struct.tree_common*
  %code3977 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3976, i32 0, i32 2
  %bf.load3978 = load i32, i32* %code3977, align 8
  %bf.clear3979 = and i32 %bf.load3978, 255
  %cmp3980 = icmp eq i32 %bf.clear3979, 6
  br i1 %cmp3980, label %land.lhs.true.4003, label %lor.lhs.false.3982

lor.lhs.false.3982:                               ; preds = %if.end.3975
  %1407 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3983 = bitcast %union.tree_node* %1407 to %struct.tree_common*
  %code3984 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3983, i32 0, i32 2
  %bf.load3985 = load i32, i32* %code3984, align 8
  %bf.clear3986 = and i32 %bf.load3985, 255
  %cmp3987 = icmp eq i32 %bf.clear3986, 10
  br i1 %cmp3987, label %land.lhs.true.4003, label %lor.lhs.false.3989

lor.lhs.false.3989:                               ; preds = %lor.lhs.false.3982
  %1408 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3990 = bitcast %union.tree_node* %1408 to %struct.tree_common*
  %code3991 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3990, i32 0, i32 2
  %bf.load3992 = load i32, i32* %code3991, align 8
  %bf.clear3993 = and i32 %bf.load3992, 255
  %cmp3994 = icmp eq i32 %bf.clear3993, 11
  br i1 %cmp3994, label %land.lhs.true.4003, label %lor.lhs.false.3996

lor.lhs.false.3996:                               ; preds = %lor.lhs.false.3989
  %1409 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3997 = bitcast %union.tree_node* %1409 to %struct.tree_common*
  %code3998 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3997, i32 0, i32 2
  %bf.load3999 = load i32, i32* %code3998, align 8
  %bf.clear4000 = and i32 %bf.load3999, 255
  %cmp4001 = icmp eq i32 %bf.clear4000, 12
  br i1 %cmp4001, label %land.lhs.true.4003, label %if.end.4013

land.lhs.true.4003:                               ; preds = %lor.lhs.false.3996, %lor.lhs.false.3989, %lor.lhs.false.3982, %if.end.3975
  %1410 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type4004 = bitcast %union.tree_node* %1410 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4004, i32 0, i32 13
  %1411 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %tobool4005 = icmp ne %union.tree_node* %1411, null
  br i1 %tobool4005, label %land.lhs.true.4006, label %if.end.4013

land.lhs.true.4006:                               ; preds = %land.lhs.true.4003
  %1412 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1413 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type4007 = bitcast %union.tree_node* %1413 to %struct.tree_type*
  %maxval4008 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4007, i32 0, i32 13
  %1414 = load %union.tree_node*, %union.tree_node** %maxval4008, align 8
  %call4009 = call i32 @operand_equal_p(%union.tree_node* %1412, %union.tree_node* %1414, i32 1)
  %tobool4010 = icmp ne i32 %call4009, 0
  br i1 %tobool4010, label %if.then.4011, label %if.end.4013

if.then.4011:                                     ; preds = %land.lhs.true.4006
  %1415 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1416 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1417 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4012 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1415, %union.tree_node* %1416, %union.tree_node* %1417)
  store %union.tree_node* %call4012, %union.tree_node** %retval
  br label %return

if.end.4013:                                      ; preds = %land.lhs.true.4006, %land.lhs.true.4003, %lor.lhs.false.3996
  br label %associate

sw.bb.4014:                                       ; preds = %if.end.901
  %1418 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4015 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %1418)
  store %union.tree_node* %call4015, %union.tree_node** %tem, align 8
  %1419 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common4016 = bitcast %union.tree_node* %1419 to %struct.tree_common*
  %code4017 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4016, i32 0, i32 2
  %bf.load4018 = load i32, i32* %code4017, align 8
  %bf.clear4019 = and i32 %bf.load4018, 255
  %cmp4020 = icmp eq i32 %bf.clear4019, 96
  br i1 %cmp4020, label %if.then.4022, label %if.end.4023

if.then.4022:                                     ; preds = %sw.bb.4014
  %1420 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1420, %union.tree_node** %retval
  br label %return

if.end.4023:                                      ; preds = %sw.bb.4014
  %1421 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1422 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call4024 = call %union.tree_node* @convert(%union.tree_node* %1421, %union.tree_node* %1422)
  store %union.tree_node* %call4024, %union.tree_node** %retval
  br label %return

sw.bb.4025:                                       ; preds = %if.end.901
  %1423 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4026 = call i32 @integer_zerop(%union.tree_node* %1423)
  %tobool4027 = icmp ne i32 %call4026, 0
  br i1 %tobool4027, label %if.then.4028, label %if.end.4030

if.then.4028:                                     ; preds = %sw.bb.4025
  %1424 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1425 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4029 = call %union.tree_node* @convert(%union.tree_node* %1424, %union.tree_node* %1425)
  store %union.tree_node* %call4029, %union.tree_node** %retval
  br label %return

if.end.4030:                                      ; preds = %sw.bb.4025
  br label %sw.bb.4031

sw.bb.4031:                                       ; preds = %if.end.901, %if.end.4030
  %1426 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4032 = bitcast %union.tree_node* %1426 to %struct.tree_common*
  %code4033 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4032, i32 0, i32 2
  %bf.load4034 = load i32, i32* %code4033, align 8
  %bf.clear4035 = and i32 %bf.load4034, 255
  %cmp4036 = icmp eq i32 %bf.clear4035, 25
  br i1 %cmp4036, label %land.lhs.true.4038, label %if.end.4044

land.lhs.true.4038:                               ; preds = %sw.bb.4031
  %1427 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4039 = call i32 @integer_zerop(%union.tree_node* %1427)
  %tobool4040 = icmp ne i32 %call4039, 0
  br i1 %tobool4040, label %if.end.4044, label %if.then.4041

if.then.4041:                                     ; preds = %land.lhs.true.4038
  %1428 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1429 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4042 = call %union.tree_node* @convert(%union.tree_node* %1428, %union.tree_node* %1429)
  %call4043 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4042)
  store %union.tree_node* %call4043, %union.tree_node** %retval
  br label %return

if.end.4044:                                      ; preds = %land.lhs.true.4038, %sw.bb.4031
  %1430 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4045 = bitcast %union.tree_node* %1430 to %struct.tree_common*
  %code4046 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4045, i32 0, i32 2
  %bf.load4047 = load i32, i32* %code4046, align 8
  %bf.clear4048 = and i32 %bf.load4047, 255
  %cmp4049 = icmp eq i32 %bf.clear4048, 25
  br i1 %cmp4049, label %land.lhs.true.4051, label %if.end.4067

land.lhs.true.4051:                               ; preds = %if.end.4044
  %1431 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4052 = call i32 @integer_zerop(%union.tree_node* %1431)
  %tobool4053 = icmp ne i32 %call4052, 0
  br i1 %tobool4053, label %if.end.4067, label %land.lhs.true.4054

land.lhs.true.4054:                               ; preds = %land.lhs.true.4051
  %1432 = load i32, i32* %code, align 4
  %cmp4055 = icmp ne i32 %1432, 91
  br i1 %cmp4055, label %if.then.4064, label %lor.lhs.false.4057

lor.lhs.false.4057:                               ; preds = %land.lhs.true.4054
  %1433 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4058 = bitcast %union.tree_node* %1433 to %struct.tree_common*
  %side_effects_flag4059 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4058, i32 0, i32 2
  %bf.load4060 = load i32, i32* %side_effects_flag4059, align 8
  %bf.lshr4061 = lshr i32 %bf.load4060, 8
  %bf.clear4062 = and i32 %bf.lshr4061, 1
  %tobool4063 = icmp ne i32 %bf.clear4062, 0
  br i1 %tobool4063, label %if.end.4067, label %if.then.4064

if.then.4064:                                     ; preds = %lor.lhs.false.4057, %land.lhs.true.4054
  %1434 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1435 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4065 = call %union.tree_node* @convert(%union.tree_node* %1434, %union.tree_node* %1435)
  %call4066 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4065)
  store %union.tree_node* %call4066, %union.tree_node** %retval
  br label %return

if.end.4067:                                      ; preds = %lor.lhs.false.4057, %land.lhs.true.4051, %if.end.4044
  %1436 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4068 = call i32 @integer_zerop(%union.tree_node* %1436)
  %tobool4069 = icmp ne i32 %call4068, 0
  br i1 %tobool4069, label %if.then.4070, label %if.end.4072

if.then.4070:                                     ; preds = %if.end.4067
  %1437 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1438 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1439 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4071 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1437, %union.tree_node* %1438, %union.tree_node* %1439)
  store %union.tree_node* %call4071, %union.tree_node** %retval
  br label %return

if.end.4072:                                      ; preds = %if.end.4067
  %1440 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4073 = call i32 @integer_zerop(%union.tree_node* %1440)
  %tobool4074 = icmp ne i32 %call4073, 0
  br i1 %tobool4074, label %if.then.4075, label %if.end.4077

if.then.4075:                                     ; preds = %if.end.4072
  %1441 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1442 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1443 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4076 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1441, %union.tree_node* %1442, %union.tree_node* %1443)
  store %union.tree_node* %call4076, %union.tree_node** %retval
  br label %return

if.end.4077:                                      ; preds = %if.end.4072
  br label %truth_andor

truth_andor:                                      ; preds = %if.end.4338, %if.end.4077
  %1444 = load i32, i32* @optimize, align 4
  %tobool4078 = icmp ne i32 %1444, 0
  br i1 %tobool4078, label %if.end.4080, label %if.then.4079

if.then.4079:                                     ; preds = %truth_andor
  %1445 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1445, %union.tree_node** %retval
  br label %return

if.end.4080:                                      ; preds = %truth_andor
  %1446 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4081 = bitcast %union.tree_node* %1446 to %struct.tree_common*
  %code4082 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4081, i32 0, i32 2
  %bf.load4083 = load i32, i32* %code4082, align 8
  %bf.clear4084 = and i32 %bf.load4083, 255
  %1447 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4085 = bitcast %union.tree_node* %1447 to %struct.tree_common*
  %code4086 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4085, i32 0, i32 2
  %bf.load4087 = load i32, i32* %code4086, align 8
  %bf.clear4088 = and i32 %bf.load4087, 255
  %cmp4089 = icmp eq i32 %bf.clear4084, %bf.clear4088
  br i1 %cmp4089, label %land.lhs.true.4091, label %if.end.4234

land.lhs.true.4091:                               ; preds = %if.end.4080
  %1448 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4092 = bitcast %union.tree_node* %1448 to %struct.tree_common*
  %code4093 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4092, i32 0, i32 2
  %bf.load4094 = load i32, i32* %code4093, align 8
  %bf.clear4095 = and i32 %bf.load4094, 255
  %cmp4096 = icmp eq i32 %bf.clear4095, 91
  br i1 %cmp4096, label %land.lhs.true.4119, label %lor.lhs.false.4098

lor.lhs.false.4098:                               ; preds = %land.lhs.true.4091
  %1449 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4099 = bitcast %union.tree_node* %1449 to %struct.tree_common*
  %code4100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4099, i32 0, i32 2
  %bf.load4101 = load i32, i32* %code4100, align 8
  %bf.clear4102 = and i32 %bf.load4101, 255
  %cmp4103 = icmp eq i32 %bf.clear4102, 92
  br i1 %cmp4103, label %land.lhs.true.4119, label %lor.lhs.false.4105

lor.lhs.false.4105:                               ; preds = %lor.lhs.false.4098
  %1450 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4106 = bitcast %union.tree_node* %1450 to %struct.tree_common*
  %code4107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4106, i32 0, i32 2
  %bf.load4108 = load i32, i32* %code4107, align 8
  %bf.clear4109 = and i32 %bf.load4108, 255
  %cmp4110 = icmp eq i32 %bf.clear4109, 93
  br i1 %cmp4110, label %land.lhs.true.4119, label %lor.lhs.false.4112

lor.lhs.false.4112:                               ; preds = %lor.lhs.false.4105
  %1451 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4113 = bitcast %union.tree_node* %1451 to %struct.tree_common*
  %code4114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4113, i32 0, i32 2
  %bf.load4115 = load i32, i32* %code4114, align 8
  %bf.clear4116 = and i32 %bf.load4115, 255
  %cmp4117 = icmp eq i32 %bf.clear4116, 94
  br i1 %cmp4117, label %land.lhs.true.4119, label %if.end.4234

land.lhs.true.4119:                               ; preds = %lor.lhs.false.4112, %lor.lhs.false.4105, %lor.lhs.false.4098, %land.lhs.true.4091
  %1452 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4120 = bitcast %union.tree_node* %1452 to %struct.tree_exp*
  %operands4121 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4120, i32 0, i32 2
  %arrayidx4122 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4121, i32 0, i64 1
  %1453 = load %union.tree_node*, %union.tree_node** %arrayidx4122, align 8
  %common4123 = bitcast %union.tree_node* %1453 to %struct.tree_common*
  %side_effects_flag4124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4123, i32 0, i32 2
  %bf.load4125 = load i32, i32* %side_effects_flag4124, align 8
  %bf.lshr4126 = lshr i32 %bf.load4125, 8
  %bf.clear4127 = and i32 %bf.lshr4126, 1
  %tobool4128 = icmp ne i32 %bf.clear4127, 0
  br i1 %tobool4128, label %if.end.4234, label %if.then.4129

if.then.4129:                                     ; preds = %land.lhs.true.4119
  %1454 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4131 = bitcast %union.tree_node* %1454 to %struct.tree_exp*
  %operands4132 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4131, i32 0, i32 2
  %arrayidx4133 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4132, i32 0, i64 0
  %1455 = load %union.tree_node*, %union.tree_node** %arrayidx4133, align 8
  store %union.tree_node* %1455, %union.tree_node** %a00, align 8
  %1456 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4135 = bitcast %union.tree_node* %1456 to %struct.tree_exp*
  %operands4136 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4135, i32 0, i32 2
  %arrayidx4137 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4136, i32 0, i64 1
  %1457 = load %union.tree_node*, %union.tree_node** %arrayidx4137, align 8
  store %union.tree_node* %1457, %union.tree_node** %a01, align 8
  %1458 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp4139 = bitcast %union.tree_node* %1458 to %struct.tree_exp*
  %operands4140 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4139, i32 0, i32 2
  %arrayidx4141 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4140, i32 0, i64 0
  %1459 = load %union.tree_node*, %union.tree_node** %arrayidx4141, align 8
  store %union.tree_node* %1459, %union.tree_node** %a10, align 8
  %1460 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp4143 = bitcast %union.tree_node* %1460 to %struct.tree_exp*
  %operands4144 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4143, i32 0, i32 2
  %arrayidx4145 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4144, i32 0, i64 1
  %1461 = load %union.tree_node*, %union.tree_node** %arrayidx4145, align 8
  store %union.tree_node* %1461, %union.tree_node** %a11, align 8
  %1462 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4147 = bitcast %union.tree_node* %1462 to %struct.tree_common*
  %code4148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4147, i32 0, i32 2
  %bf.load4149 = load i32, i32* %code4148, align 8
  %bf.clear4150 = and i32 %bf.load4149, 255
  %cmp4151 = icmp eq i32 %bf.clear4150, 94
  br i1 %cmp4151, label %land.rhs.4160, label %lor.lhs.false.4153

lor.lhs.false.4153:                               ; preds = %if.then.4129
  %1463 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4154 = bitcast %union.tree_node* %1463 to %struct.tree_common*
  %code4155 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4154, i32 0, i32 2
  %bf.load4156 = load i32, i32* %code4155, align 8
  %bf.clear4157 = and i32 %bf.load4156, 255
  %cmp4158 = icmp eq i32 %bf.clear4157, 93
  br i1 %cmp4158, label %land.rhs.4160, label %land.end.4168

land.rhs.4160:                                    ; preds = %lor.lhs.false.4153, %if.then.4129
  %1464 = load i32, i32* %code, align 4
  %cmp4161 = icmp eq i32 %1464, 93
  br i1 %cmp4161, label %lor.end.4166, label %lor.rhs.4163

lor.rhs.4163:                                     ; preds = %land.rhs.4160
  %1465 = load i32, i32* %code, align 4
  %cmp4164 = icmp eq i32 %1465, 94
  br label %lor.end.4166

lor.end.4166:                                     ; preds = %lor.rhs.4163, %land.rhs.4160
  %1466 = phi i1 [ true, %land.rhs.4160 ], [ %cmp4164, %lor.rhs.4163 ]
  br label %land.end.4168

land.end.4168:                                    ; preds = %lor.end.4166, %lor.lhs.false.4153
  %1467 = phi i1 [ false, %lor.lhs.false.4153 ], [ %1466, %lor.end.4166 ]
  %land.ext4169 = zext i1 %1467 to i32
  store i32 %land.ext4169, i32* %commutative, align 4
  %1468 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1469 = load %union.tree_node*, %union.tree_node** %a10, align 8
  %call4170 = call i32 @operand_equal_p(%union.tree_node* %1468, %union.tree_node* %1469, i32 0)
  %tobool4171 = icmp ne i32 %call4170, 0
  br i1 %tobool4171, label %if.then.4172, label %if.else.4181

if.then.4172:                                     ; preds = %land.end.4168
  %1470 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4173 = bitcast %union.tree_node* %1470 to %struct.tree_common*
  %code4174 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4173, i32 0, i32 2
  %bf.load4175 = load i32, i32* %code4174, align 8
  %bf.clear4176 = and i32 %bf.load4175, 255
  %1471 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1472 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1473 = load i32, i32* %code, align 4
  %1474 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1475 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %1476 = load %union.tree_node*, %union.tree_node** %a11, align 8
  %call4177 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1473, %union.tree_node* %1474, %union.tree_node* %1475, %union.tree_node* %1476)
  %call4178 = call %union.tree_node* @fold(%union.tree_node* %call4177)
  %call4179 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear4176, %union.tree_node* %1471, %union.tree_node* %1472, %union.tree_node* %call4178)
  %call4180 = call %union.tree_node* @fold(%union.tree_node* %call4179)
  store %union.tree_node* %call4180, %union.tree_node** %retval
  br label %return

if.else.4181:                                     ; preds = %land.end.4168
  %1477 = load i32, i32* %commutative, align 4
  %tobool4182 = icmp ne i32 %1477, 0
  br i1 %tobool4182, label %land.lhs.true.4183, label %if.else.4195

land.lhs.true.4183:                               ; preds = %if.else.4181
  %1478 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1479 = load %union.tree_node*, %union.tree_node** %a11, align 8
  %call4184 = call i32 @operand_equal_p(%union.tree_node* %1478, %union.tree_node* %1479, i32 0)
  %tobool4185 = icmp ne i32 %call4184, 0
  br i1 %tobool4185, label %if.then.4186, label %if.else.4195

if.then.4186:                                     ; preds = %land.lhs.true.4183
  %1480 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4187 = bitcast %union.tree_node* %1480 to %struct.tree_common*
  %code4188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4187, i32 0, i32 2
  %bf.load4189 = load i32, i32* %code4188, align 8
  %bf.clear4190 = and i32 %bf.load4189, 255
  %1481 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1482 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1483 = load i32, i32* %code, align 4
  %1484 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1485 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %1486 = load %union.tree_node*, %union.tree_node** %a10, align 8
  %call4191 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1483, %union.tree_node* %1484, %union.tree_node* %1485, %union.tree_node* %1486)
  %call4192 = call %union.tree_node* @fold(%union.tree_node* %call4191)
  %call4193 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear4190, %union.tree_node* %1481, %union.tree_node* %1482, %union.tree_node* %call4192)
  %call4194 = call %union.tree_node* @fold(%union.tree_node* %call4193)
  store %union.tree_node* %call4194, %union.tree_node** %retval
  br label %return

if.else.4195:                                     ; preds = %land.lhs.true.4183, %if.else.4181
  %1487 = load i32, i32* %commutative, align 4
  %tobool4196 = icmp ne i32 %1487, 0
  br i1 %tobool4196, label %land.lhs.true.4197, label %if.else.4209

land.lhs.true.4197:                               ; preds = %if.else.4195
  %1488 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %1489 = load %union.tree_node*, %union.tree_node** %a10, align 8
  %call4198 = call i32 @operand_equal_p(%union.tree_node* %1488, %union.tree_node* %1489, i32 0)
  %tobool4199 = icmp ne i32 %call4198, 0
  br i1 %tobool4199, label %if.then.4200, label %if.else.4209

if.then.4200:                                     ; preds = %land.lhs.true.4197
  %1490 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4201 = bitcast %union.tree_node* %1490 to %struct.tree_common*
  %code4202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4201, i32 0, i32 2
  %bf.load4203 = load i32, i32* %code4202, align 8
  %bf.clear4204 = and i32 %bf.load4203, 255
  %1491 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1492 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %1493 = load i32, i32* %code, align 4
  %1494 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1495 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1496 = load %union.tree_node*, %union.tree_node** %a11, align 8
  %call4205 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1493, %union.tree_node* %1494, %union.tree_node* %1495, %union.tree_node* %1496)
  %call4206 = call %union.tree_node* @fold(%union.tree_node* %call4205)
  %call4207 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear4204, %union.tree_node* %1491, %union.tree_node* %1492, %union.tree_node* %call4206)
  %call4208 = call %union.tree_node* @fold(%union.tree_node* %call4207)
  store %union.tree_node* %call4208, %union.tree_node** %retval
  br label %return

if.else.4209:                                     ; preds = %land.lhs.true.4197, %if.else.4195
  %1497 = load i32, i32* %commutative, align 4
  %tobool4210 = icmp ne i32 %1497, 0
  br i1 %tobool4210, label %land.lhs.true.4218, label %lor.lhs.false.4211

lor.lhs.false.4211:                               ; preds = %if.else.4209
  %1498 = load %union.tree_node*, %union.tree_node** %a10, align 8
  %common4212 = bitcast %union.tree_node* %1498 to %struct.tree_common*
  %side_effects_flag4213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4212, i32 0, i32 2
  %bf.load4214 = load i32, i32* %side_effects_flag4213, align 8
  %bf.lshr4215 = lshr i32 %bf.load4214, 8
  %bf.clear4216 = and i32 %bf.lshr4215, 1
  %tobool4217 = icmp ne i32 %bf.clear4216, 0
  br i1 %tobool4217, label %if.end.4230, label %land.lhs.true.4218

land.lhs.true.4218:                               ; preds = %lor.lhs.false.4211, %if.else.4209
  %1499 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %1500 = load %union.tree_node*, %union.tree_node** %a11, align 8
  %call4219 = call i32 @operand_equal_p(%union.tree_node* %1499, %union.tree_node* %1500, i32 0)
  %tobool4220 = icmp ne i32 %call4219, 0
  br i1 %tobool4220, label %if.then.4221, label %if.end.4230

if.then.4221:                                     ; preds = %land.lhs.true.4218
  %1501 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4222 = bitcast %union.tree_node* %1501 to %struct.tree_common*
  %code4223 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4222, i32 0, i32 2
  %bf.load4224 = load i32, i32* %code4223, align 8
  %bf.clear4225 = and i32 %bf.load4224, 255
  %1502 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1503 = load i32, i32* %code, align 4
  %1504 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1505 = load %union.tree_node*, %union.tree_node** %a00, align 8
  %1506 = load %union.tree_node*, %union.tree_node** %a10, align 8
  %call4226 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1503, %union.tree_node* %1504, %union.tree_node* %1505, %union.tree_node* %1506)
  %call4227 = call %union.tree_node* @fold(%union.tree_node* %call4226)
  %1507 = load %union.tree_node*, %union.tree_node** %a01, align 8
  %call4228 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear4225, %union.tree_node* %1502, %union.tree_node* %call4227, %union.tree_node* %1507)
  %call4229 = call %union.tree_node* @fold(%union.tree_node* %call4228)
  store %union.tree_node* %call4229, %union.tree_node** %retval
  br label %return

if.end.4230:                                      ; preds = %land.lhs.true.4218, %lor.lhs.false.4211
  br label %if.end.4231

if.end.4231:                                      ; preds = %if.end.4230
  br label %if.end.4232

if.end.4232:                                      ; preds = %if.end.4231
  br label %if.end.4233

if.end.4233:                                      ; preds = %if.end.4232
  br label %if.end.4234

if.end.4234:                                      ; preds = %if.end.4233, %land.lhs.true.4119, %lor.lhs.false.4112, %if.end.4080
  %1508 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call4235 = call %union.tree_node* @fold_range_test(%union.tree_node* %1508)
  store %union.tree_node* %call4235, %union.tree_node** %tem, align 8
  %cmp4236 = icmp ne %union.tree_node* null, %call4235
  br i1 %cmp4236, label %if.then.4238, label %if.end.4239

if.then.4238:                                     ; preds = %if.end.4234
  %1509 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %1509, %union.tree_node** %retval
  br label %return

if.end.4239:                                      ; preds = %if.end.4234
  %1510 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4240 = bitcast %union.tree_node* %1510 to %struct.tree_common*
  %code4241 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4240, i32 0, i32 2
  %bf.load4242 = load i32, i32* %code4241, align 8
  %bf.clear4243 = and i32 %bf.load4242, 255
  %1511 = load i32, i32* %code, align 4
  %cmp4244 = icmp eq i32 %bf.clear4243, %1511
  br i1 %cmp4244, label %land.lhs.true.4246, label %if.end.4259

land.lhs.true.4246:                               ; preds = %if.end.4239
  %1512 = load i32, i32* %code, align 4
  %1513 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1514 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4247 = bitcast %union.tree_node* %1514 to %struct.tree_exp*
  %operands4248 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4247, i32 0, i32 2
  %arrayidx4249 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4248, i32 0, i64 1
  %1515 = load %union.tree_node*, %union.tree_node** %arrayidx4249, align 8
  %1516 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4250 = call %union.tree_node* @fold_truthop(i32 %1512, %union.tree_node* %1513, %union.tree_node* %1515, %union.tree_node* %1516)
  store %union.tree_node* %call4250, %union.tree_node** %tem, align 8
  %cmp4251 = icmp ne %union.tree_node* null, %call4250
  br i1 %cmp4251, label %if.then.4253, label %if.end.4259

if.then.4253:                                     ; preds = %land.lhs.true.4246
  %1517 = load i32, i32* %code, align 4
  %1518 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1519 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4254 = bitcast %union.tree_node* %1519 to %struct.tree_exp*
  %operands4255 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4254, i32 0, i32 2
  %arrayidx4256 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4255, i32 0, i64 0
  %1520 = load %union.tree_node*, %union.tree_node** %arrayidx4256, align 8
  %1521 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call4257 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1517, %union.tree_node* %1518, %union.tree_node* %1520, %union.tree_node* %1521)
  %call4258 = call %union.tree_node* @fold(%union.tree_node* %call4257)
  store %union.tree_node* %call4258, %union.tree_node** %retval
  br label %return

if.end.4259:                                      ; preds = %land.lhs.true.4246, %if.end.4239
  %1522 = load i32, i32* %code, align 4
  %1523 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1524 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1525 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4260 = call %union.tree_node* @fold_truthop(i32 %1522, %union.tree_node* %1523, %union.tree_node* %1524, %union.tree_node* %1525)
  store %union.tree_node* %call4260, %union.tree_node** %tem, align 8
  %cmp4261 = icmp ne %union.tree_node* %call4260, null
  br i1 %cmp4261, label %if.then.4263, label %if.end.4264

if.then.4263:                                     ; preds = %if.end.4259
  %1526 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %1526, %union.tree_node** %retval
  br label %return

if.end.4264:                                      ; preds = %if.end.4259
  %1527 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1527, %union.tree_node** %retval
  br label %return

sw.bb.4265:                                       ; preds = %if.end.901
  %1528 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4266 = bitcast %union.tree_node* %1528 to %struct.tree_common*
  %code4267 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4266, i32 0, i32 2
  %bf.load4268 = load i32, i32* %code4267, align 8
  %bf.clear4269 = and i32 %bf.load4268, 255
  %cmp4270 = icmp eq i32 %bf.clear4269, 25
  br i1 %cmp4270, label %land.lhs.true.4272, label %if.end.4277

land.lhs.true.4272:                               ; preds = %sw.bb.4265
  %1529 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4273 = call i32 @integer_zerop(%union.tree_node* %1529)
  %tobool4274 = icmp ne i32 %call4273, 0
  br i1 %tobool4274, label %if.end.4277, label %if.then.4275

if.then.4275:                                     ; preds = %land.lhs.true.4272
  %1530 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1531 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4276 = call %union.tree_node* @convert(%union.tree_node* %1530, %union.tree_node* %1531)
  store %union.tree_node* %call4276, %union.tree_node** %retval
  br label %return

if.end.4277:                                      ; preds = %land.lhs.true.4272, %sw.bb.4265
  br label %sw.bb.4278

sw.bb.4278:                                       ; preds = %if.end.901, %if.end.4277
  %1532 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4279 = bitcast %union.tree_node* %1532 to %struct.tree_common*
  %code4280 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4279, i32 0, i32 2
  %bf.load4281 = load i32, i32* %code4280, align 8
  %bf.clear4282 = and i32 %bf.load4281, 255
  %cmp4283 = icmp eq i32 %bf.clear4282, 25
  br i1 %cmp4283, label %land.lhs.true.4285, label %if.end.4291

land.lhs.true.4285:                               ; preds = %sw.bb.4278
  %1533 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4286 = call i32 @integer_zerop(%union.tree_node* %1533)
  %tobool4287 = icmp ne i32 %call4286, 0
  br i1 %tobool4287, label %if.then.4288, label %if.end.4291

if.then.4288:                                     ; preds = %land.lhs.true.4285
  %1534 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1535 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4289 = call %union.tree_node* @convert(%union.tree_node* %1534, %union.tree_node* %1535)
  %call4290 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4289)
  store %union.tree_node* %call4290, %union.tree_node** %retval
  br label %return

if.end.4291:                                      ; preds = %land.lhs.true.4285, %sw.bb.4278
  %1536 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4292 = bitcast %union.tree_node* %1536 to %struct.tree_common*
  %code4293 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4292, i32 0, i32 2
  %bf.load4294 = load i32, i32* %code4293, align 8
  %bf.clear4295 = and i32 %bf.load4294, 255
  %cmp4296 = icmp eq i32 %bf.clear4295, 25
  br i1 %cmp4296, label %land.lhs.true.4298, label %if.end.4314

land.lhs.true.4298:                               ; preds = %if.end.4291
  %1537 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4299 = call i32 @integer_zerop(%union.tree_node* %1537)
  %tobool4300 = icmp ne i32 %call4299, 0
  br i1 %tobool4300, label %land.lhs.true.4301, label %if.end.4314

land.lhs.true.4301:                               ; preds = %land.lhs.true.4298
  %1538 = load i32, i32* %code, align 4
  %cmp4302 = icmp ne i32 %1538, 92
  br i1 %cmp4302, label %if.then.4311, label %lor.lhs.false.4304

lor.lhs.false.4304:                               ; preds = %land.lhs.true.4301
  %1539 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4305 = bitcast %union.tree_node* %1539 to %struct.tree_common*
  %side_effects_flag4306 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4305, i32 0, i32 2
  %bf.load4307 = load i32, i32* %side_effects_flag4306, align 8
  %bf.lshr4308 = lshr i32 %bf.load4307, 8
  %bf.clear4309 = and i32 %bf.lshr4308, 1
  %tobool4310 = icmp ne i32 %bf.clear4309, 0
  br i1 %tobool4310, label %if.end.4314, label %if.then.4311

if.then.4311:                                     ; preds = %lor.lhs.false.4304, %land.lhs.true.4301
  %1540 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1541 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4312 = call %union.tree_node* @convert(%union.tree_node* %1540, %union.tree_node* %1541)
  %call4313 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4312)
  store %union.tree_node* %call4313, %union.tree_node** %retval
  br label %return

if.end.4314:                                      ; preds = %lor.lhs.false.4304, %land.lhs.true.4298, %if.end.4291
  %1542 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4315 = bitcast %union.tree_node* %1542 to %struct.tree_common*
  %code4316 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4315, i32 0, i32 2
  %bf.load4317 = load i32, i32* %code4316, align 8
  %bf.clear4318 = and i32 %bf.load4317, 255
  %cmp4319 = icmp eq i32 %bf.clear4318, 25
  br i1 %cmp4319, label %land.lhs.true.4321, label %if.end.4326

land.lhs.true.4321:                               ; preds = %if.end.4314
  %1543 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4322 = call i32 @integer_zerop(%union.tree_node* %1543)
  %tobool4323 = icmp ne i32 %call4322, 0
  br i1 %tobool4323, label %if.end.4326, label %if.then.4324

if.then.4324:                                     ; preds = %land.lhs.true.4321
  %1544 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1545 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1546 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4325 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1544, %union.tree_node* %1545, %union.tree_node* %1546)
  store %union.tree_node* %call4325, %union.tree_node** %retval
  br label %return

if.end.4326:                                      ; preds = %land.lhs.true.4321, %if.end.4314
  %1547 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4327 = bitcast %union.tree_node* %1547 to %struct.tree_common*
  %code4328 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4327, i32 0, i32 2
  %bf.load4329 = load i32, i32* %code4328, align 8
  %bf.clear4330 = and i32 %bf.load4329, 255
  %cmp4331 = icmp eq i32 %bf.clear4330, 25
  br i1 %cmp4331, label %land.lhs.true.4333, label %if.end.4338

land.lhs.true.4333:                               ; preds = %if.end.4326
  %1548 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4334 = call i32 @integer_zerop(%union.tree_node* %1548)
  %tobool4335 = icmp ne i32 %call4334, 0
  br i1 %tobool4335, label %if.end.4338, label %if.then.4336

if.then.4336:                                     ; preds = %land.lhs.true.4333
  %1549 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1550 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1551 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4337 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1549, %union.tree_node* %1550, %union.tree_node* %1551)
  store %union.tree_node* %call4337, %union.tree_node** %retval
  br label %return

if.end.4338:                                      ; preds = %land.lhs.true.4333, %if.end.4326
  br label %truth_andor

sw.bb.4339:                                       ; preds = %if.end.901
  %1552 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4340 = call i32 @integer_zerop(%union.tree_node* %1552)
  %tobool4341 = icmp ne i32 %call4340, 0
  br i1 %tobool4341, label %if.then.4342, label %if.end.4345

if.then.4342:                                     ; preds = %sw.bb.4339
  %1553 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1554 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4343 = call %union.tree_node* @convert(%union.tree_node* %1553, %union.tree_node* %1554)
  %call4344 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4343)
  store %union.tree_node* %call4344, %union.tree_node** %retval
  br label %return

if.end.4345:                                      ; preds = %sw.bb.4339
  %1555 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4346 = call i32 @integer_zerop(%union.tree_node* %1555)
  %tobool4347 = icmp ne i32 %call4346, 0
  br i1 %tobool4347, label %if.then.4348, label %if.end.4351

if.then.4348:                                     ; preds = %if.end.4345
  %1556 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1557 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4349 = call %union.tree_node* @convert(%union.tree_node* %1556, %union.tree_node* %1557)
  %call4350 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4349)
  store %union.tree_node* %call4350, %union.tree_node** %retval
  br label %return

if.end.4351:                                      ; preds = %if.end.4345
  %1558 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4352 = call i32 @integer_onep(%union.tree_node* %1558)
  %tobool4353 = icmp ne i32 %call4352, 0
  br i1 %tobool4353, label %if.then.4354, label %if.end.4358

if.then.4354:                                     ; preds = %if.end.4351
  %1559 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1560 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4355 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %1560)
  %call4356 = call %union.tree_node* @convert(%union.tree_node* %1559, %union.tree_node* %call4355)
  %call4357 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4356)
  store %union.tree_node* %call4357, %union.tree_node** %retval
  br label %return

if.end.4358:                                      ; preds = %if.end.4351
  %1561 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call4359 = call i32 @integer_onep(%union.tree_node* %1561)
  %tobool4360 = icmp ne i32 %call4359, 0
  br i1 %tobool4360, label %if.then.4361, label %if.end.4365

if.then.4361:                                     ; preds = %if.end.4358
  %1562 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1563 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call4362 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %1563)
  %call4363 = call %union.tree_node* @convert(%union.tree_node* %1562, %union.tree_node* %call4362)
  %call4364 = call %union.tree_node* @non_lvalue(%union.tree_node* %call4363)
  store %union.tree_node* %call4364, %union.tree_node** %retval
  br label %return

if.end.4365:                                      ; preds = %if.end.4358
  %1564 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1564, %union.tree_node** %retval
  br label %return

sw.bb.4366:                                       ; preds = %if.end.901, %if.end.901, %if.end.901, %if.end.901, %if.end.901, %if.end.901
  %1565 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4367 = bitcast %union.tree_node* %1565 to %struct.tree_common*
  %type4368 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4367, i32 0, i32 1
  %1566 = load %union.tree_node*, %union.tree_node** %type4368, align 8
  %common4369 = bitcast %union.tree_node* %1566 to %struct.tree_common*
  %code4370 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4369, i32 0, i32 2
  %bf.load4371 = load i32, i32* %code4370, align 8
  %bf.clear4372 = and i32 %bf.load4371, 255
  %cmp4373 = icmp eq i32 %bf.clear4372, 7
  br i1 %cmp4373, label %if.then.4395, label %lor.lhs.false.4375

lor.lhs.false.4375:                               ; preds = %sw.bb.4366
  %1567 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4376 = bitcast %union.tree_node* %1567 to %struct.tree_common*
  %type4377 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4376, i32 0, i32 1
  %1568 = load %union.tree_node*, %union.tree_node** %type4377, align 8
  %common4378 = bitcast %union.tree_node* %1568 to %struct.tree_common*
  %code4379 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4378, i32 0, i32 2
  %bf.load4380 = load i32, i32* %code4379, align 8
  %bf.clear4381 = and i32 %bf.load4380, 255
  %cmp4382 = icmp eq i32 %bf.clear4381, 8
  br i1 %cmp4382, label %land.lhs.true.4384, label %if.end.4471

land.lhs.true.4384:                               ; preds = %lor.lhs.false.4375
  %1569 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4385 = bitcast %union.tree_node* %1569 to %struct.tree_common*
  %type4386 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4385, i32 0, i32 1
  %1570 = load %union.tree_node*, %union.tree_node** %type4386, align 8
  %common4387 = bitcast %union.tree_node* %1570 to %struct.tree_common*
  %type4388 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4387, i32 0, i32 1
  %1571 = load %union.tree_node*, %union.tree_node** %type4388, align 8
  %common4389 = bitcast %union.tree_node* %1571 to %struct.tree_common*
  %code4390 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4389, i32 0, i32 2
  %bf.load4391 = load i32, i32* %code4390, align 8
  %bf.clear4392 = and i32 %bf.load4391, 255
  %cmp4393 = icmp eq i32 %bf.clear4392, 7
  br i1 %cmp4393, label %if.then.4395, label %if.end.4471

if.then.4395:                                     ; preds = %land.lhs.true.4384, %sw.bb.4366
  %1572 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4396 = bitcast %union.tree_node* %1572 to %struct.tree_common*
  %code4397 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4396, i32 0, i32 2
  %bf.load4398 = load i32, i32* %code4397, align 8
  %bf.clear4399 = and i32 %bf.load4398, 255
  %cmp4400 = icmp eq i32 %bf.clear4399, 77
  br i1 %cmp4400, label %land.lhs.true.4402, label %if.end.4418

land.lhs.true.4402:                               ; preds = %if.then.4395
  %1573 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4403 = bitcast %union.tree_node* %1573 to %struct.tree_common*
  %code4404 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4403, i32 0, i32 2
  %bf.load4405 = load i32, i32* %code4404, align 8
  %bf.clear4406 = and i32 %bf.load4405, 255
  %cmp4407 = icmp eq i32 %bf.clear4406, 77
  br i1 %cmp4407, label %if.then.4409, label %if.end.4418

if.then.4409:                                     ; preds = %land.lhs.true.4402
  %1574 = load i32, i32* %code, align 4
  %1575 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1576 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp4410 = bitcast %union.tree_node* %1576 to %struct.tree_exp*
  %operands4411 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4410, i32 0, i32 2
  %arrayidx4412 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4411, i32 0, i64 0
  %1577 = load %union.tree_node*, %union.tree_node** %arrayidx4412, align 8
  %1578 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4413 = bitcast %union.tree_node* %1578 to %struct.tree_exp*
  %operands4414 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4413, i32 0, i32 2
  %arrayidx4415 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4414, i32 0, i64 0
  %1579 = load %union.tree_node*, %union.tree_node** %arrayidx4415, align 8
  %call4416 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1574, %union.tree_node* %1575, %union.tree_node* %1577, %union.tree_node* %1579)
  %call4417 = call %union.tree_node* @fold(%union.tree_node* %call4416)
  store %union.tree_node* %call4417, %union.tree_node** %retval
  br label %return

if.end.4418:                                      ; preds = %land.lhs.true.4402, %if.then.4395
  %1580 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4419 = bitcast %union.tree_node* %1580 to %struct.tree_common*
  %code4420 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4419, i32 0, i32 2
  %bf.load4421 = load i32, i32* %code4420, align 8
  %bf.clear4422 = and i32 %bf.load4421, 255
  %cmp4423 = icmp eq i32 %bf.clear4422, 77
  br i1 %cmp4423, label %land.lhs.true.4425, label %if.end.4445

land.lhs.true.4425:                               ; preds = %if.end.4418
  %1581 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4426 = bitcast %union.tree_node* %1581 to %struct.tree_common*
  %code4427 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4426, i32 0, i32 2
  %bf.load4428 = load i32, i32* %code4427, align 8
  %bf.clear4429 = and i32 %bf.load4428, 255
  %cmp4430 = icmp eq i32 %bf.clear4429, 26
  br i1 %cmp4430, label %if.then.4432, label %if.end.4445

if.then.4432:                                     ; preds = %land.lhs.true.4425
  %1582 = load i32, i32* %code, align 4
  %call4433 = call i32 @swap_tree_comparison(i32 %1582)
  %1583 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1584 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp4434 = bitcast %union.tree_node* %1584 to %struct.tree_exp*
  %operands4435 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4434, i32 0, i32 2
  %arrayidx4436 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4435, i32 0, i64 0
  %1585 = load %union.tree_node*, %union.tree_node** %arrayidx4436, align 8
  %1586 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4437 = bitcast %union.tree_node* %1586 to %struct.tree_common*
  %type4438 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4437, i32 0, i32 1
  %1587 = load %union.tree_node*, %union.tree_node** %type4438, align 8
  %1588 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst4440 = bitcast %union.tree_node* %1588 to %struct.tree_real_cst*
  %real_cst4441 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst4440, i32 0, i32 2
  call void @ereal_negate(%struct.realvaluetype* sret %agg.tmp4439, %struct.realvaluetype* byval align 8 %real_cst4441)
  %call4442 = call %union.tree_node* @build_real(%union.tree_node* %1587, %struct.realvaluetype* byval align 8 %agg.tmp4439)
  %call4443 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %call4433, %union.tree_node* %1583, %union.tree_node* %1585, %union.tree_node* %call4442)
  %call4444 = call %union.tree_node* @fold(%union.tree_node* %call4443)
  store %union.tree_node* %call4444, %union.tree_node** %retval
  br label %return

if.end.4445:                                      ; preds = %land.lhs.true.4425, %if.end.4418
  %1589 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4446 = bitcast %union.tree_node* %1589 to %struct.tree_common*
  %code4447 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4446, i32 0, i32 2
  %bf.load4448 = load i32, i32* %code4447, align 8
  %bf.clear4449 = and i32 %bf.load4448, 255
  %cmp4450 = icmp eq i32 %bf.clear4449, 26
  br i1 %cmp4450, label %land.lhs.true.4452, label %if.end.4470

land.lhs.true.4452:                               ; preds = %if.end.4445
  %1590 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst4453 = bitcast %union.tree_node* %1590 to %struct.tree_real_cst*
  %real_cst4454 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst4453, i32 0, i32 2
  %call4455 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %real_cst4454, %struct.realvaluetype* byval align 8 @dconst0)
  %cmp4456 = icmp eq i32 %call4455, 0
  br i1 %cmp4456, label %land.lhs.true.4458, label %if.end.4470

land.lhs.true.4458:                               ; preds = %land.lhs.true.4452
  %1591 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst4459 = bitcast %union.tree_node* %1591 to %struct.tree_real_cst*
  %real_cst4460 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst4459, i32 0, i32 2
  %call4461 = call i32 @ereal_isneg(%struct.realvaluetype* byval align 8 %real_cst4460)
  %cmp4462 = icmp ne i32 %call4461, 0
  br i1 %cmp4462, label %if.then.4464, label %if.end.4470

if.then.4464:                                     ; preds = %land.lhs.true.4458
  %1592 = load i32, i32* %code, align 4
  %1593 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1594 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1595 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4465 = bitcast %union.tree_node* %1595 to %struct.tree_common*
  %type4466 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4465, i32 0, i32 1
  %1596 = load %union.tree_node*, %union.tree_node** %type4466, align 8
  %call4467 = call %union.tree_node* @build_real(%union.tree_node* %1596, %struct.realvaluetype* byval align 8 @dconst0)
  %call4468 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1592, %union.tree_node* %1593, %union.tree_node* %1594, %union.tree_node* %call4467)
  %call4469 = call %union.tree_node* @fold(%union.tree_node* %call4468)
  store %union.tree_node* %call4469, %union.tree_node** %retval
  br label %return

if.end.4470:                                      ; preds = %land.lhs.true.4458, %land.lhs.true.4452, %if.end.4445
  br label %if.end.4471

if.end.4471:                                      ; preds = %if.end.4470, %land.lhs.true.4384, %lor.lhs.false.4375
  %1597 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4472 = bitcast %union.tree_node* %1597 to %struct.tree_common*
  %code4473 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4472, i32 0, i32 2
  %bf.load4474 = load i32, i32* %code4473, align 8
  %bf.clear4475 = and i32 %bf.load4474, 255
  %cmp4476 = icmp eq i32 %bf.clear4475, 25
  br i1 %cmp4476, label %land.lhs.true.4478, label %if.end.4505

land.lhs.true.4478:                               ; preds = %if.end.4471
  %1598 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4479 = bitcast %union.tree_node* %1598 to %struct.tree_common*
  %code4480 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4479, i32 0, i32 2
  %bf.load4481 = load i32, i32* %code4480, align 8
  %bf.clear4482 = and i32 %bf.load4481, 255
  %cmp4483 = icmp ne i32 %bf.clear4482, 25
  br i1 %cmp4483, label %if.then.4485, label %if.end.4505

if.then.4485:                                     ; preds = %land.lhs.true.4478
  %1599 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1600 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp4486 = bitcast %union.tree_node* %1600 to %struct.tree_exp*
  %operands4487 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4486, i32 0, i32 2
  %arrayidx4488 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4487, i32 0, i64 0
  store %union.tree_node* %1599, %union.tree_node** %arrayidx4488, align 8
  %1601 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %1602 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp4489 = bitcast %union.tree_node* %1602 to %struct.tree_exp*
  %operands4490 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4489, i32 0, i32 2
  %arrayidx4491 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4490, i32 0, i64 1
  store %union.tree_node* %1601, %union.tree_node** %arrayidx4491, align 8
  %1603 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp4492 = bitcast %union.tree_node* %1603 to %struct.tree_exp*
  %operands4493 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4492, i32 0, i32 2
  %arrayidx4494 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4493, i32 0, i64 0
  %1604 = load %union.tree_node*, %union.tree_node** %arrayidx4494, align 8
  store %union.tree_node* %1604, %union.tree_node** %arg0, align 8
  %1605 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp4495 = bitcast %union.tree_node* %1605 to %struct.tree_exp*
  %operands4496 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4495, i32 0, i32 2
  %arrayidx4497 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4496, i32 0, i64 1
  %1606 = load %union.tree_node*, %union.tree_node** %arrayidx4497, align 8
  store %union.tree_node* %1606, %union.tree_node** %arg1, align 8
  %1607 = load i32, i32* %code, align 4
  %call4498 = call i32 @swap_tree_comparison(i32 %1607)
  store i32 %call4498, i32* %code, align 4
  %1608 = load i32, i32* %code, align 4
  %1609 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common4499 = bitcast %union.tree_node* %1609 to %struct.tree_common*
  %code4500 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4499, i32 0, i32 2
  %bf.load4501 = load i32, i32* %code4500, align 8
  %bf.value4502 = and i32 %1608, 255
  %bf.clear4503 = and i32 %bf.load4501, -256
  %bf.set4504 = or i32 %bf.clear4503, %bf.value4502
  store i32 %bf.set4504, i32* %code4500, align 8
  br label %if.end.4505

if.end.4505:                                      ; preds = %if.then.4485, %land.lhs.true.4478, %if.end.4471
  store %union.tree_node* null, %union.tree_node** %constop, align 8
  store %union.tree_node* null, %union.tree_node** %varop, align 8
  store i32 -1, i32* %constopnum, align 4
  %1610 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4509 = bitcast %union.tree_node* %1610 to %struct.tree_common*
  %constant_flag4510 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4509, i32 0, i32 2
  %bf.load4511 = load i32, i32* %constant_flag4510, align 8
  %bf.lshr4512 = lshr i32 %bf.load4511, 9
  %bf.clear4513 = and i32 %bf.lshr4512, 1
  %tobool4514 = icmp ne i32 %bf.clear4513, 0
  br i1 %tobool4514, label %if.then.4515, label %if.end.4516

if.then.4515:                                     ; preds = %if.end.4505
  store i32 1, i32* %constopnum, align 4
  %1611 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %1611, %union.tree_node** %constop, align 8
  %1612 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %1612, %union.tree_node** %varop, align 8
  br label %if.end.4516

if.end.4516:                                      ; preds = %if.then.4515, %if.end.4505
  %1613 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common4517 = bitcast %union.tree_node* %1613 to %struct.tree_common*
  %constant_flag4518 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4517, i32 0, i32 2
  %bf.load4519 = load i32, i32* %constant_flag4518, align 8
  %bf.lshr4520 = lshr i32 %bf.load4519, 9
  %bf.clear4521 = and i32 %bf.lshr4520, 1
  %tobool4522 = icmp ne i32 %bf.clear4521, 0
  br i1 %tobool4522, label %if.then.4523, label %if.end.4524

if.then.4523:                                     ; preds = %if.end.4516
  store i32 0, i32* %constopnum, align 4
  %1614 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %1614, %union.tree_node** %constop, align 8
  %1615 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %1615, %union.tree_node** %varop, align 8
  br label %if.end.4524

if.end.4524:                                      ; preds = %if.then.4523, %if.end.4516
  %1616 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %tobool4525 = icmp ne %union.tree_node* %1616, null
  br i1 %tobool4525, label %land.lhs.true.4526, label %if.else.4704

land.lhs.true.4526:                               ; preds = %if.end.4524
  %1617 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4527 = bitcast %union.tree_node* %1617 to %struct.tree_common*
  %code4528 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4527, i32 0, i32 2
  %bf.load4529 = load i32, i32* %code4528, align 8
  %bf.clear4530 = and i32 %bf.load4529, 255
  %cmp4531 = icmp eq i32 %bf.clear4530, 132
  br i1 %cmp4531, label %if.then.4533, label %if.else.4704

if.then.4533:                                     ; preds = %land.lhs.true.4526
  %1618 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4534 = bitcast %union.tree_node* %1618 to %struct.tree_common*
  %type4535 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4534, i32 0, i32 1
  %1619 = load %union.tree_node*, %union.tree_node** %type4535, align 8
  %common4536 = bitcast %union.tree_node* %1619 to %struct.tree_common*
  %code4537 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4536, i32 0, i32 2
  %bf.load4538 = load i32, i32* %code4537, align 8
  %bf.clear4539 = and i32 %bf.load4538, 255
  %cmp4540 = icmp eq i32 %bf.clear4539, 13
  br i1 %cmp4540, label %if.then.4586, label %lor.lhs.false.4542

lor.lhs.false.4542:                               ; preds = %if.then.4533
  %1620 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4543 = bitcast %union.tree_node* %1620 to %struct.tree_common*
  %type4544 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4543, i32 0, i32 1
  %1621 = load %union.tree_node*, %union.tree_node** %type4544, align 8
  %common4545 = bitcast %union.tree_node* %1621 to %struct.tree_common*
  %code4546 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4545, i32 0, i32 2
  %bf.load4547 = load i32, i32* %code4546, align 8
  %bf.clear4548 = and i32 %bf.load4547, 255
  %cmp4549 = icmp eq i32 %bf.clear4548, 15
  br i1 %cmp4549, label %if.then.4586, label %lor.lhs.false.4551

lor.lhs.false.4551:                               ; preds = %lor.lhs.false.4542
  %1622 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4552 = bitcast %union.tree_node* %1622 to %struct.tree_common*
  %type4553 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4552, i32 0, i32 1
  %1623 = load %union.tree_node*, %union.tree_node** %type4553, align 8
  %common4554 = bitcast %union.tree_node* %1623 to %struct.tree_common*
  %code4555 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4554, i32 0, i32 2
  %bf.load4556 = load i32, i32* %code4555, align 8
  %bf.clear4557 = and i32 %bf.load4556, 255
  %cmp4558 = icmp eq i32 %bf.clear4557, 7
  br i1 %cmp4558, label %if.end.4703, label %lor.lhs.false.4560

lor.lhs.false.4560:                               ; preds = %lor.lhs.false.4551
  %1624 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4561 = bitcast %union.tree_node* %1624 to %struct.tree_common*
  %type4562 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4561, i32 0, i32 1
  %1625 = load %union.tree_node*, %union.tree_node** %type4562, align 8
  %common4563 = bitcast %union.tree_node* %1625 to %struct.tree_common*
  %code4564 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4563, i32 0, i32 2
  %bf.load4565 = load i32, i32* %code4564, align 8
  %bf.clear4566 = and i32 %bf.load4565, 255
  %cmp4567 = icmp eq i32 %bf.clear4566, 8
  br i1 %cmp4567, label %land.lhs.true.4569, label %land.lhs.true.4580

land.lhs.true.4569:                               ; preds = %lor.lhs.false.4560
  %1626 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4570 = bitcast %union.tree_node* %1626 to %struct.tree_common*
  %type4571 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4570, i32 0, i32 1
  %1627 = load %union.tree_node*, %union.tree_node** %type4571, align 8
  %common4572 = bitcast %union.tree_node* %1627 to %struct.tree_common*
  %type4573 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4572, i32 0, i32 1
  %1628 = load %union.tree_node*, %union.tree_node** %type4573, align 8
  %common4574 = bitcast %union.tree_node* %1628 to %struct.tree_common*
  %code4575 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4574, i32 0, i32 2
  %bf.load4576 = load i32, i32* %code4575, align 8
  %bf.clear4577 = and i32 %bf.load4576, 255
  %cmp4578 = icmp eq i32 %bf.clear4577, 7
  br i1 %cmp4578, label %if.end.4703, label %land.lhs.true.4580

land.lhs.true.4580:                               ; preds = %land.lhs.true.4569, %lor.lhs.false.4560
  %1629 = load i32, i32* %code, align 4
  %cmp4581 = icmp eq i32 %1629, 101
  br i1 %cmp4581, label %if.then.4586, label %lor.lhs.false.4583

lor.lhs.false.4583:                               ; preds = %land.lhs.true.4580
  %1630 = load i32, i32* %code, align 4
  %cmp4584 = icmp eq i32 %1630, 102
  br i1 %cmp4584, label %if.then.4586, label %if.end.4703

if.then.4586:                                     ; preds = %lor.lhs.false.4583, %land.lhs.true.4580, %lor.lhs.false.4542, %if.then.4533
  %1631 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4588 = bitcast %union.tree_node* %1631 to %struct.tree_common*
  %type4589 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4588, i32 0, i32 1
  %1632 = load %union.tree_node*, %union.tree_node** %type4589, align 8
  %1633 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %1634 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4590 = bitcast %union.tree_node* %1634 to %struct.tree_exp*
  %operands4591 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4590, i32 0, i32 2
  %arrayidx4592 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4591, i32 0, i64 1
  %1635 = load %union.tree_node*, %union.tree_node** %arrayidx4592, align 8
  %call4593 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %1632, %union.tree_node* %1633, %union.tree_node* %1635)
  %call4594 = call %union.tree_node* @fold(%union.tree_node* %call4593)
  store %union.tree_node* %call4594, %union.tree_node** %newconst, align 8
  %1636 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4595 = bitcast %union.tree_node* %1636 to %struct.tree_common*
  %type4596 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4595, i32 0, i32 1
  %1637 = load %union.tree_node*, %union.tree_node** %type4596, align 8
  %1638 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4597 = bitcast %union.tree_node* %1638 to %struct.tree_exp*
  %operands4598 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4597, i32 0, i32 2
  %arrayidx4599 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4598, i32 0, i64 0
  %1639 = load %union.tree_node*, %union.tree_node** %arrayidx4599, align 8
  %1640 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4600 = bitcast %union.tree_node* %1640 to %struct.tree_exp*
  %operands4601 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4600, i32 0, i32 2
  %arrayidx4602 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4601, i32 0, i64 1
  %1641 = load %union.tree_node*, %union.tree_node** %arrayidx4602, align 8
  %call4603 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 130, %union.tree_node* %1637, %union.tree_node* %1639, %union.tree_node* %1641)
  store %union.tree_node* %call4603, %union.tree_node** %varop, align 8
  %1642 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4604 = bitcast %union.tree_node* %1642 to %struct.tree_exp*
  %operands4605 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4604, i32 0, i32 2
  %arrayidx4606 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4605, i32 0, i64 0
  %1643 = load %union.tree_node*, %union.tree_node** %arrayidx4606, align 8
  %common4607 = bitcast %union.tree_node* %1643 to %struct.tree_common*
  %code4608 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4607, i32 0, i32 2
  %bf.load4609 = load i32, i32* %code4608, align 8
  %bf.clear4610 = and i32 %bf.load4609, 255
  %cmp4611 = icmp eq i32 %bf.clear4610, 39
  br i1 %cmp4611, label %land.lhs.true.4613, label %if.end.4689

land.lhs.true.4613:                               ; preds = %if.then.4586
  %1644 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4614 = bitcast %union.tree_node* %1644 to %struct.tree_exp*
  %operands4615 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4614, i32 0, i32 2
  %arrayidx4616 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4615, i32 0, i64 0
  %1645 = load %union.tree_node*, %union.tree_node** %arrayidx4616, align 8
  %exp4617 = bitcast %union.tree_node* %1645 to %struct.tree_exp*
  %operands4618 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4617, i32 0, i32 2
  %arrayidx4619 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4618, i32 0, i64 1
  %1646 = load %union.tree_node*, %union.tree_node** %arrayidx4619, align 8
  %decl4620 = bitcast %union.tree_node* %1646 to %struct.tree_decl*
  %bit_field_flag4621 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4620, i32 0, i32 5
  %1647 = bitcast i48* %bit_field_flag4621 to i64*
  %bf.load4622 = load i64, i64* %1647, align 8
  %bf.lshr4623 = lshr i64 %bf.load4622, 12
  %bf.clear4624 = and i64 %bf.lshr4623, 1
  %bf.cast4625 = trunc i64 %bf.clear4624 to i32
  %tobool4626 = icmp ne i32 %bf.cast4625, 0
  br i1 %tobool4626, label %if.then.4627, label %if.end.4689

if.then.4627:                                     ; preds = %land.lhs.true.4613
  %1648 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4629 = bitcast %union.tree_node* %1648 to %struct.tree_exp*
  %operands4630 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4629, i32 0, i32 2
  %arrayidx4631 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4630, i32 0, i64 0
  %1649 = load %union.tree_node*, %union.tree_node** %arrayidx4631, align 8
  %exp4632 = bitcast %union.tree_node* %1649 to %struct.tree_exp*
  %operands4633 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4632, i32 0, i32 2
  %arrayidx4634 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4633, i32 0, i64 1
  %1650 = load %union.tree_node*, %union.tree_node** %arrayidx4634, align 8
  %decl4635 = bitcast %union.tree_node* %1650 to %struct.tree_decl*
  %size4636 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4635, i32 0, i32 4
  %1651 = load %union.tree_node*, %union.tree_node** %size4636, align 8
  %int_cst4637 = bitcast %union.tree_node* %1651 to %struct.tree_int_cst*
  %int_cst4638 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst4637, i32 0, i32 2
  %low4639 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst4638, i32 0, i32 0
  %1652 = load i64, i64* %low4639, align 8
  %conv4640 = trunc i64 %1652 to i32
  store i32 %conv4640, i32* %size, align 4
  %1653 = load i32, i32* %constopnum, align 4
  %cmp4646 = icmp eq i32 %1653, 0
  br i1 %cmp4646, label %if.then.4648, label %if.else.4654

if.then.4648:                                     ; preds = %if.then.4627
  %1654 = load i32, i32* %code, align 4
  %1655 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1656 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %1657 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4649 = bitcast %union.tree_node* %1657 to %struct.tree_exp*
  %operands4650 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4649, i32 0, i32 2
  %arrayidx4651 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4650, i32 0, i64 0
  %1658 = load %union.tree_node*, %union.tree_node** %arrayidx4651, align 8
  %call4652 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1654, %union.tree_node* %1655, %union.tree_node* %1656, %union.tree_node* %1658)
  %call4653 = call %union.tree_node* @fold(%union.tree_node* %call4652)
  store %union.tree_node* %call4653, %union.tree_node** %folded_compare, align 8
  br label %if.end.4660

if.else.4654:                                     ; preds = %if.then.4627
  %1659 = load i32, i32* %code, align 4
  %1660 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1661 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4655 = bitcast %union.tree_node* %1661 to %struct.tree_exp*
  %operands4656 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4655, i32 0, i32 2
  %arrayidx4657 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4656, i32 0, i64 0
  %1662 = load %union.tree_node*, %union.tree_node** %arrayidx4657, align 8
  %1663 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %call4658 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1659, %union.tree_node* %1660, %union.tree_node* %1662, %union.tree_node* %1663)
  %call4659 = call %union.tree_node* @fold(%union.tree_node* %call4658)
  store %union.tree_node* %call4659, %union.tree_node** %folded_compare, align 8
  br label %if.end.4660

if.end.4660:                                      ; preds = %if.else.4654, %if.then.4648
  %1664 = load %union.tree_node*, %union.tree_node** %folded_compare, align 8
  %call4661 = call i32 @integer_zerop(%union.tree_node* %1664)
  %tobool4662 = icmp ne i32 %call4661, 0
  br i1 %tobool4662, label %if.then.4666, label %lor.lhs.false.4663

lor.lhs.false.4663:                               ; preds = %if.end.4660
  %1665 = load %union.tree_node*, %union.tree_node** %folded_compare, align 8
  %call4664 = call i32 @integer_onep(%union.tree_node* %1665)
  %tobool4665 = icmp ne i32 %call4664, 0
  br i1 %tobool4665, label %if.then.4666, label %if.end.4668

if.then.4666:                                     ; preds = %lor.lhs.false.4663, %if.end.4660
  %1666 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1667 = load %union.tree_node*, %union.tree_node** %folded_compare, align 8
  %1668 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %call4667 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1666, %union.tree_node* %1667, %union.tree_node* %1668)
  store %union.tree_node* %call4667, %union.tree_node** %retval
  br label %return

if.end.4668:                                      ; preds = %lor.lhs.false.4663
  %1669 = load i32, i32* %size, align 4
  %call4669 = call %union.tree_node* @type_for_size(i32 %1669, i32 1)
  store %union.tree_node* %call4669, %union.tree_node** %unsigned_type, align 8
  %1670 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %type4670 = bitcast %union.tree_node* %1670 to %struct.tree_type*
  %precision4671 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4670, i32 0, i32 6
  %bf.load4672 = load i32, i32* %precision4671, align 4
  %bf.clear4673 = and i32 %bf.load4672, 511
  store i32 %bf.clear4673, i32* %precision4644, align 4
  %call4674 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call4674, %union.tree_node** %mask, align 8
  %1671 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %1672 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %common4675 = bitcast %union.tree_node* %1672 to %struct.tree_common*
  %type4676 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4675, i32 0, i32 1
  store %union.tree_node* %1671, %union.tree_node** %type4676, align 8
  %1673 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call4677 = call i32 @force_fit_type(%union.tree_node* %1673, i32 0)
  %1674 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %1675 = load i32, i32* %precision4644, align 4
  %1676 = load i32, i32* %size, align 4
  %sub4678 = sub i32 %1675, %1676
  %conv4679 = zext i32 %sub4678 to i64
  %call4680 = call %union.tree_node* @size_int_wide(i64 %conv4679, i32 0)
  %call4681 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %1674, %union.tree_node* %call4680, i32 0)
  store %union.tree_node* %call4681, %union.tree_node** %mask, align 8
  %1677 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4682 = bitcast %union.tree_node* %1677 to %struct.tree_common*
  %type4683 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4682, i32 0, i32 1
  %1678 = load %union.tree_node*, %union.tree_node** %type4683, align 8
  %1679 = load %union.tree_node*, %union.tree_node** %newconst, align 8
  %1680 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4684 = bitcast %union.tree_node* %1680 to %struct.tree_common*
  %type4685 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4684, i32 0, i32 1
  %1681 = load %union.tree_node*, %union.tree_node** %type4685, align 8
  %1682 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call4686 = call %union.tree_node* @convert(%union.tree_node* %1681, %union.tree_node* %1682)
  %call4687 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %1678, %union.tree_node* %1679, %union.tree_node* %call4686)
  %call4688 = call %union.tree_node* @fold(%union.tree_node* %call4687)
  store %union.tree_node* %call4688, %union.tree_node** %newconst, align 8
  br label %if.end.4689

if.end.4689:                                      ; preds = %if.end.4668, %land.lhs.true.4613, %if.then.4586
  %1683 = load i32, i32* %code, align 4
  %1684 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1685 = load i32, i32* %constopnum, align 4
  %cmp4690 = icmp eq i32 %1685, 0
  br i1 %cmp4690, label %cond.true.4692, label %cond.false.4693

cond.true.4692:                                   ; preds = %if.end.4689
  %1686 = load %union.tree_node*, %union.tree_node** %newconst, align 8
  br label %cond.end.4694

cond.false.4693:                                  ; preds = %if.end.4689
  %1687 = load %union.tree_node*, %union.tree_node** %varop, align 8
  br label %cond.end.4694

cond.end.4694:                                    ; preds = %cond.false.4693, %cond.true.4692
  %cond4695 = phi %union.tree_node* [ %1686, %cond.true.4692 ], [ %1687, %cond.false.4693 ]
  %1688 = load i32, i32* %constopnum, align 4
  %cmp4696 = icmp eq i32 %1688, 1
  br i1 %cmp4696, label %cond.true.4698, label %cond.false.4699

cond.true.4698:                                   ; preds = %cond.end.4694
  %1689 = load %union.tree_node*, %union.tree_node** %newconst, align 8
  br label %cond.end.4700

cond.false.4699:                                  ; preds = %cond.end.4694
  %1690 = load %union.tree_node*, %union.tree_node** %varop, align 8
  br label %cond.end.4700

cond.end.4700:                                    ; preds = %cond.false.4699, %cond.true.4698
  %cond4701 = phi %union.tree_node* [ %1689, %cond.true.4698 ], [ %1690, %cond.false.4699 ]
  %call4702 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1683, %union.tree_node* %1684, %union.tree_node* %cond4695, %union.tree_node* %cond4701)
  store %union.tree_node* %call4702, %union.tree_node** %t, align 8
  %1691 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1691, %union.tree_node** %retval
  br label %return

if.end.4703:                                      ; preds = %lor.lhs.false.4583, %land.lhs.true.4569, %lor.lhs.false.4551
  br label %if.end.4892

if.else.4704:                                     ; preds = %land.lhs.true.4526, %if.end.4524
  %1692 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %tobool4705 = icmp ne %union.tree_node* %1692, null
  br i1 %tobool4705, label %land.lhs.true.4706, label %if.end.4891

land.lhs.true.4706:                               ; preds = %if.else.4704
  %1693 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4707 = bitcast %union.tree_node* %1693 to %struct.tree_common*
  %code4708 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4707, i32 0, i32 2
  %bf.load4709 = load i32, i32* %code4708, align 8
  %bf.clear4710 = and i32 %bf.load4709, 255
  %cmp4711 = icmp eq i32 %bf.clear4710, 131
  br i1 %cmp4711, label %if.then.4713, label %if.end.4891

if.then.4713:                                     ; preds = %land.lhs.true.4706
  %1694 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4714 = bitcast %union.tree_node* %1694 to %struct.tree_common*
  %type4715 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4714, i32 0, i32 1
  %1695 = load %union.tree_node*, %union.tree_node** %type4715, align 8
  %common4716 = bitcast %union.tree_node* %1695 to %struct.tree_common*
  %code4717 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4716, i32 0, i32 2
  %bf.load4718 = load i32, i32* %code4717, align 8
  %bf.clear4719 = and i32 %bf.load4718, 255
  %cmp4720 = icmp eq i32 %bf.clear4719, 13
  br i1 %cmp4720, label %if.then.4766, label %lor.lhs.false.4722

lor.lhs.false.4722:                               ; preds = %if.then.4713
  %1696 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4723 = bitcast %union.tree_node* %1696 to %struct.tree_common*
  %type4724 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4723, i32 0, i32 1
  %1697 = load %union.tree_node*, %union.tree_node** %type4724, align 8
  %common4725 = bitcast %union.tree_node* %1697 to %struct.tree_common*
  %code4726 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4725, i32 0, i32 2
  %bf.load4727 = load i32, i32* %code4726, align 8
  %bf.clear4728 = and i32 %bf.load4727, 255
  %cmp4729 = icmp eq i32 %bf.clear4728, 15
  br i1 %cmp4729, label %if.then.4766, label %lor.lhs.false.4731

lor.lhs.false.4731:                               ; preds = %lor.lhs.false.4722
  %1698 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4732 = bitcast %union.tree_node* %1698 to %struct.tree_common*
  %type4733 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4732, i32 0, i32 1
  %1699 = load %union.tree_node*, %union.tree_node** %type4733, align 8
  %common4734 = bitcast %union.tree_node* %1699 to %struct.tree_common*
  %code4735 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4734, i32 0, i32 2
  %bf.load4736 = load i32, i32* %code4735, align 8
  %bf.clear4737 = and i32 %bf.load4736, 255
  %cmp4738 = icmp eq i32 %bf.clear4737, 7
  br i1 %cmp4738, label %if.end.4890, label %lor.lhs.false.4740

lor.lhs.false.4740:                               ; preds = %lor.lhs.false.4731
  %1700 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4741 = bitcast %union.tree_node* %1700 to %struct.tree_common*
  %type4742 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4741, i32 0, i32 1
  %1701 = load %union.tree_node*, %union.tree_node** %type4742, align 8
  %common4743 = bitcast %union.tree_node* %1701 to %struct.tree_common*
  %code4744 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4743, i32 0, i32 2
  %bf.load4745 = load i32, i32* %code4744, align 8
  %bf.clear4746 = and i32 %bf.load4745, 255
  %cmp4747 = icmp eq i32 %bf.clear4746, 8
  br i1 %cmp4747, label %land.lhs.true.4749, label %land.lhs.true.4760

land.lhs.true.4749:                               ; preds = %lor.lhs.false.4740
  %1702 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4750 = bitcast %union.tree_node* %1702 to %struct.tree_common*
  %type4751 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4750, i32 0, i32 1
  %1703 = load %union.tree_node*, %union.tree_node** %type4751, align 8
  %common4752 = bitcast %union.tree_node* %1703 to %struct.tree_common*
  %type4753 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4752, i32 0, i32 1
  %1704 = load %union.tree_node*, %union.tree_node** %type4753, align 8
  %common4754 = bitcast %union.tree_node* %1704 to %struct.tree_common*
  %code4755 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4754, i32 0, i32 2
  %bf.load4756 = load i32, i32* %code4755, align 8
  %bf.clear4757 = and i32 %bf.load4756, 255
  %cmp4758 = icmp eq i32 %bf.clear4757, 7
  br i1 %cmp4758, label %if.end.4890, label %land.lhs.true.4760

land.lhs.true.4760:                               ; preds = %land.lhs.true.4749, %lor.lhs.false.4740
  %1705 = load i32, i32* %code, align 4
  %cmp4761 = icmp eq i32 %1705, 101
  br i1 %cmp4761, label %if.then.4766, label %lor.lhs.false.4763

lor.lhs.false.4763:                               ; preds = %land.lhs.true.4760
  %1706 = load i32, i32* %code, align 4
  %cmp4764 = icmp eq i32 %1706, 102
  br i1 %cmp4764, label %if.then.4766, label %if.end.4890

if.then.4766:                                     ; preds = %lor.lhs.false.4763, %land.lhs.true.4760, %lor.lhs.false.4722, %if.then.4713
  %1707 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4769 = bitcast %union.tree_node* %1707 to %struct.tree_common*
  %type4770 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4769, i32 0, i32 1
  %1708 = load %union.tree_node*, %union.tree_node** %type4770, align 8
  %1709 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %1710 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4771 = bitcast %union.tree_node* %1710 to %struct.tree_exp*
  %operands4772 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4771, i32 0, i32 2
  %arrayidx4773 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4772, i32 0, i64 1
  %1711 = load %union.tree_node*, %union.tree_node** %arrayidx4773, align 8
  %call4774 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %1708, %union.tree_node* %1709, %union.tree_node* %1711)
  %call4775 = call %union.tree_node* @fold(%union.tree_node* %call4774)
  store %union.tree_node* %call4775, %union.tree_node** %newconst4768, align 8
  %1712 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4776 = bitcast %union.tree_node* %1712 to %struct.tree_common*
  %type4777 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4776, i32 0, i32 1
  %1713 = load %union.tree_node*, %union.tree_node** %type4777, align 8
  %1714 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4778 = bitcast %union.tree_node* %1714 to %struct.tree_exp*
  %operands4779 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4778, i32 0, i32 2
  %arrayidx4780 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4779, i32 0, i64 0
  %1715 = load %union.tree_node*, %union.tree_node** %arrayidx4780, align 8
  %1716 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4781 = bitcast %union.tree_node* %1716 to %struct.tree_exp*
  %operands4782 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4781, i32 0, i32 2
  %arrayidx4783 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4782, i32 0, i64 1
  %1717 = load %union.tree_node*, %union.tree_node** %arrayidx4783, align 8
  %call4784 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 129, %union.tree_node* %1713, %union.tree_node* %1715, %union.tree_node* %1717)
  store %union.tree_node* %call4784, %union.tree_node** %varop, align 8
  %1718 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4785 = bitcast %union.tree_node* %1718 to %struct.tree_exp*
  %operands4786 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4785, i32 0, i32 2
  %arrayidx4787 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4786, i32 0, i64 0
  %1719 = load %union.tree_node*, %union.tree_node** %arrayidx4787, align 8
  %common4788 = bitcast %union.tree_node* %1719 to %struct.tree_common*
  %code4789 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4788, i32 0, i32 2
  %bf.load4790 = load i32, i32* %code4789, align 8
  %bf.clear4791 = and i32 %bf.load4790, 255
  %cmp4792 = icmp eq i32 %bf.clear4791, 39
  br i1 %cmp4792, label %land.lhs.true.4794, label %if.end.4876

land.lhs.true.4794:                               ; preds = %if.then.4766
  %1720 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4795 = bitcast %union.tree_node* %1720 to %struct.tree_exp*
  %operands4796 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4795, i32 0, i32 2
  %arrayidx4797 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4796, i32 0, i64 0
  %1721 = load %union.tree_node*, %union.tree_node** %arrayidx4797, align 8
  %exp4798 = bitcast %union.tree_node* %1721 to %struct.tree_exp*
  %operands4799 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4798, i32 0, i32 2
  %arrayidx4800 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4799, i32 0, i64 1
  %1722 = load %union.tree_node*, %union.tree_node** %arrayidx4800, align 8
  %decl4801 = bitcast %union.tree_node* %1722 to %struct.tree_decl*
  %bit_field_flag4802 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4801, i32 0, i32 5
  %1723 = bitcast i48* %bit_field_flag4802 to i64*
  %bf.load4803 = load i64, i64* %1723, align 8
  %bf.lshr4804 = lshr i64 %bf.load4803, 12
  %bf.clear4805 = and i64 %bf.lshr4804, 1
  %bf.cast4806 = trunc i64 %bf.clear4805 to i32
  %tobool4807 = icmp ne i32 %bf.cast4806, 0
  br i1 %tobool4807, label %if.then.4808, label %if.end.4876

if.then.4808:                                     ; preds = %land.lhs.true.4794
  %1724 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4811 = bitcast %union.tree_node* %1724 to %struct.tree_exp*
  %operands4812 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4811, i32 0, i32 2
  %arrayidx4813 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4812, i32 0, i64 0
  %1725 = load %union.tree_node*, %union.tree_node** %arrayidx4813, align 8
  %exp4814 = bitcast %union.tree_node* %1725 to %struct.tree_exp*
  %operands4815 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4814, i32 0, i32 2
  %arrayidx4816 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4815, i32 0, i64 1
  %1726 = load %union.tree_node*, %union.tree_node** %arrayidx4816, align 8
  %decl4817 = bitcast %union.tree_node* %1726 to %struct.tree_decl*
  %size4818 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4817, i32 0, i32 4
  %1727 = load %union.tree_node*, %union.tree_node** %size4818, align 8
  %int_cst4819 = bitcast %union.tree_node* %1727 to %struct.tree_int_cst*
  %int_cst4820 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst4819, i32 0, i32 2
  %low4821 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst4820, i32 0, i32 0
  %1728 = load i64, i64* %low4821, align 8
  %conv4822 = trunc i64 %1728 to i32
  store i32 %conv4822, i32* %size4810, align 4
  %1729 = load i32, i32* %constopnum, align 4
  %cmp4831 = icmp eq i32 %1729, 0
  br i1 %cmp4831, label %if.then.4833, label %if.else.4839

if.then.4833:                                     ; preds = %if.then.4808
  %1730 = load i32, i32* %code, align 4
  %1731 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1732 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %1733 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4834 = bitcast %union.tree_node* %1733 to %struct.tree_exp*
  %operands4835 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4834, i32 0, i32 2
  %arrayidx4836 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4835, i32 0, i64 0
  %1734 = load %union.tree_node*, %union.tree_node** %arrayidx4836, align 8
  %call4837 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1730, %union.tree_node* %1731, %union.tree_node* %1732, %union.tree_node* %1734)
  %call4838 = call %union.tree_node* @fold(%union.tree_node* %call4837)
  store %union.tree_node* %call4838, %union.tree_node** %folded_compare4830, align 8
  br label %if.end.4845

if.else.4839:                                     ; preds = %if.then.4808
  %1735 = load i32, i32* %code, align 4
  %1736 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1737 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %exp4840 = bitcast %union.tree_node* %1737 to %struct.tree_exp*
  %operands4841 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4840, i32 0, i32 2
  %arrayidx4842 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4841, i32 0, i64 0
  %1738 = load %union.tree_node*, %union.tree_node** %arrayidx4842, align 8
  %1739 = load %union.tree_node*, %union.tree_node** %constop, align 8
  %call4843 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1735, %union.tree_node* %1736, %union.tree_node* %1738, %union.tree_node* %1739)
  %call4844 = call %union.tree_node* @fold(%union.tree_node* %call4843)
  store %union.tree_node* %call4844, %union.tree_node** %folded_compare4830, align 8
  br label %if.end.4845

if.end.4845:                                      ; preds = %if.else.4839, %if.then.4833
  %1740 = load %union.tree_node*, %union.tree_node** %folded_compare4830, align 8
  %call4846 = call i32 @integer_zerop(%union.tree_node* %1740)
  %tobool4847 = icmp ne i32 %call4846, 0
  br i1 %tobool4847, label %if.then.4851, label %lor.lhs.false.4848

lor.lhs.false.4848:                               ; preds = %if.end.4845
  %1741 = load %union.tree_node*, %union.tree_node** %folded_compare4830, align 8
  %call4849 = call i32 @integer_onep(%union.tree_node* %1741)
  %tobool4850 = icmp ne i32 %call4849, 0
  br i1 %tobool4850, label %if.then.4851, label %if.end.4853

if.then.4851:                                     ; preds = %lor.lhs.false.4848, %if.end.4845
  %1742 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1743 = load %union.tree_node*, %union.tree_node** %folded_compare4830, align 8
  %1744 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %call4852 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1742, %union.tree_node* %1743, %union.tree_node* %1744)
  store %union.tree_node* %call4852, %union.tree_node** %retval
  br label %return

if.end.4853:                                      ; preds = %lor.lhs.false.4848
  %1745 = load i32, i32* %size4810, align 4
  %call4854 = call %union.tree_node* @type_for_size(i32 %1745, i32 1)
  store %union.tree_node* %call4854, %union.tree_node** %unsigned_type4826, align 8
  %1746 = load %union.tree_node*, %union.tree_node** %unsigned_type4826, align 8
  %type4855 = bitcast %union.tree_node* %1746 to %struct.tree_type*
  %precision4856 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4855, i32 0, i32 6
  %bf.load4857 = load i32, i32* %precision4856, align 4
  %bf.clear4858 = and i32 %bf.load4857, 511
  store i32 %bf.clear4858, i32* %precision4828, align 4
  %call4859 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call4859, %union.tree_node** %mask4824, align 8
  %1747 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4860 = bitcast %union.tree_node* %1747 to %struct.tree_common*
  %type4861 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4860, i32 0, i32 1
  %1748 = load %union.tree_node*, %union.tree_node** %type4861, align 8
  %1749 = load %union.tree_node*, %union.tree_node** %mask4824, align 8
  %common4862 = bitcast %union.tree_node* %1749 to %struct.tree_common*
  %type4863 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4862, i32 0, i32 1
  store %union.tree_node* %1748, %union.tree_node** %type4863, align 8
  %1750 = load %union.tree_node*, %union.tree_node** %mask4824, align 8
  %call4864 = call i32 @force_fit_type(%union.tree_node* %1750, i32 0)
  %1751 = load %union.tree_node*, %union.tree_node** %mask4824, align 8
  %1752 = load i32, i32* %precision4828, align 4
  %1753 = load i32, i32* %size4810, align 4
  %sub4865 = sub i32 %1752, %1753
  %conv4866 = zext i32 %sub4865 to i64
  %call4867 = call %union.tree_node* @size_int_wide(i64 %conv4866, i32 0)
  %call4868 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %1751, %union.tree_node* %call4867, i32 0)
  store %union.tree_node* %call4868, %union.tree_node** %mask4824, align 8
  %1754 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4869 = bitcast %union.tree_node* %1754 to %struct.tree_common*
  %type4870 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4869, i32 0, i32 1
  %1755 = load %union.tree_node*, %union.tree_node** %type4870, align 8
  %1756 = load %union.tree_node*, %union.tree_node** %newconst4768, align 8
  %1757 = load %union.tree_node*, %union.tree_node** %varop, align 8
  %common4871 = bitcast %union.tree_node* %1757 to %struct.tree_common*
  %type4872 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4871, i32 0, i32 1
  %1758 = load %union.tree_node*, %union.tree_node** %type4872, align 8
  %1759 = load %union.tree_node*, %union.tree_node** %mask4824, align 8
  %call4873 = call %union.tree_node* @convert(%union.tree_node* %1758, %union.tree_node* %1759)
  %call4874 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %1755, %union.tree_node* %1756, %union.tree_node* %call4873)
  %call4875 = call %union.tree_node* @fold(%union.tree_node* %call4874)
  store %union.tree_node* %call4875, %union.tree_node** %newconst4768, align 8
  br label %if.end.4876

if.end.4876:                                      ; preds = %if.end.4853, %land.lhs.true.4794, %if.then.4766
  %1760 = load i32, i32* %code, align 4
  %1761 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1762 = load i32, i32* %constopnum, align 4
  %cmp4877 = icmp eq i32 %1762, 0
  br i1 %cmp4877, label %cond.true.4879, label %cond.false.4880

cond.true.4879:                                   ; preds = %if.end.4876
  %1763 = load %union.tree_node*, %union.tree_node** %newconst4768, align 8
  br label %cond.end.4881

cond.false.4880:                                  ; preds = %if.end.4876
  %1764 = load %union.tree_node*, %union.tree_node** %varop, align 8
  br label %cond.end.4881

cond.end.4881:                                    ; preds = %cond.false.4880, %cond.true.4879
  %cond4882 = phi %union.tree_node* [ %1763, %cond.true.4879 ], [ %1764, %cond.false.4880 ]
  %1765 = load i32, i32* %constopnum, align 4
  %cmp4883 = icmp eq i32 %1765, 1
  br i1 %cmp4883, label %cond.true.4885, label %cond.false.4886

cond.true.4885:                                   ; preds = %cond.end.4881
  %1766 = load %union.tree_node*, %union.tree_node** %newconst4768, align 8
  br label %cond.end.4887

cond.false.4886:                                  ; preds = %cond.end.4881
  %1767 = load %union.tree_node*, %union.tree_node** %varop, align 8
  br label %cond.end.4887

cond.end.4887:                                    ; preds = %cond.false.4886, %cond.true.4885
  %cond4888 = phi %union.tree_node* [ %1766, %cond.true.4885 ], [ %1767, %cond.false.4886 ]
  %call4889 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1760, %union.tree_node* %1761, %union.tree_node* %cond4882, %union.tree_node* %cond4888)
  store %union.tree_node* %call4889, %union.tree_node** %t, align 8
  %1768 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %1768, %union.tree_node** %retval
  br label %return

if.end.4890:                                      ; preds = %lor.lhs.false.4763, %land.lhs.true.4749, %lor.lhs.false.4731
  br label %if.end.4891

if.end.4891:                                      ; preds = %if.end.4890, %land.lhs.true.4706, %if.else.4704
  br label %if.end.4892

if.end.4892:                                      ; preds = %if.end.4891, %if.end.4703
  %1769 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4894 = bitcast %union.tree_node* %1769 to %struct.tree_common*
  %type4895 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4894, i32 0, i32 1
  %1770 = load %union.tree_node*, %union.tree_node** %type4895, align 8
  %type4896 = bitcast %union.tree_node* %1770 to %struct.tree_type*
  %mode4897 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4896, i32 0, i32 6
  %bf.load4898 = load i32, i32* %mode4897, align 4
  %bf.lshr4899 = lshr i32 %bf.load4898, 9
  %bf.clear4900 = and i32 %bf.lshr4899, 127
  %idxprom4901 = sext i32 %bf.clear4900 to i64
  %arrayidx4902 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom4901
  %1771 = load i16, i16* %arrayidx4902, align 2
  %conv4903 = zext i16 %1771 to i32
  store i32 %conv4903, i32* %width, align 4
  %1772 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4904 = bitcast %union.tree_node* %1772 to %struct.tree_common*
  %code4905 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4904, i32 0, i32 2
  %bf.load4906 = load i32, i32* %code4905, align 8
  %bf.clear4907 = and i32 %bf.load4906, 255
  %cmp4908 = icmp eq i32 %bf.clear4907, 25
  br i1 %cmp4908, label %land.lhs.true.4910, label %if.end.5215

land.lhs.true.4910:                               ; preds = %if.end.4892
  %1773 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4911 = bitcast %union.tree_node* %1773 to %struct.tree_common*
  %static_flag4912 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4911, i32 0, i32 2
  %bf.load4913 = load i32, i32* %static_flag4912, align 8
  %bf.lshr4914 = lshr i32 %bf.load4913, 18
  %bf.clear4915 = and i32 %bf.lshr4914, 1
  %tobool4916 = icmp ne i32 %bf.clear4915, 0
  br i1 %tobool4916, label %if.end.5215, label %land.lhs.true.4917

land.lhs.true.4917:                               ; preds = %land.lhs.true.4910
  %1774 = load i32, i32* %width, align 4
  %cmp4918 = icmp sle i32 %1774, 64
  br i1 %cmp4918, label %land.lhs.true.4920, label %if.end.5215

land.lhs.true.4920:                               ; preds = %land.lhs.true.4917
  %1775 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4921 = bitcast %union.tree_node* %1775 to %struct.tree_common*
  %type4922 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4921, i32 0, i32 1
  %1776 = load %union.tree_node*, %union.tree_node** %type4922, align 8
  %common4923 = bitcast %union.tree_node* %1776 to %struct.tree_common*
  %code4924 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4923, i32 0, i32 2
  %bf.load4925 = load i32, i32* %code4924, align 8
  %bf.clear4926 = and i32 %bf.load4925, 255
  %cmp4927 = icmp eq i32 %bf.clear4926, 6
  br i1 %cmp4927, label %if.then.4974, label %lor.lhs.false.4929

lor.lhs.false.4929:                               ; preds = %land.lhs.true.4920
  %1777 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4930 = bitcast %union.tree_node* %1777 to %struct.tree_common*
  %type4931 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4930, i32 0, i32 1
  %1778 = load %union.tree_node*, %union.tree_node** %type4931, align 8
  %common4932 = bitcast %union.tree_node* %1778 to %struct.tree_common*
  %code4933 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4932, i32 0, i32 2
  %bf.load4934 = load i32, i32* %code4933, align 8
  %bf.clear4935 = and i32 %bf.load4934, 255
  %cmp4936 = icmp eq i32 %bf.clear4935, 10
  br i1 %cmp4936, label %if.then.4974, label %lor.lhs.false.4938

lor.lhs.false.4938:                               ; preds = %lor.lhs.false.4929
  %1779 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4939 = bitcast %union.tree_node* %1779 to %struct.tree_common*
  %type4940 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4939, i32 0, i32 1
  %1780 = load %union.tree_node*, %union.tree_node** %type4940, align 8
  %common4941 = bitcast %union.tree_node* %1780 to %struct.tree_common*
  %code4942 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4941, i32 0, i32 2
  %bf.load4943 = load i32, i32* %code4942, align 8
  %bf.clear4944 = and i32 %bf.load4943, 255
  %cmp4945 = icmp eq i32 %bf.clear4944, 11
  br i1 %cmp4945, label %if.then.4974, label %lor.lhs.false.4947

lor.lhs.false.4947:                               ; preds = %lor.lhs.false.4938
  %1781 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4948 = bitcast %union.tree_node* %1781 to %struct.tree_common*
  %type4949 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4948, i32 0, i32 1
  %1782 = load %union.tree_node*, %union.tree_node** %type4949, align 8
  %common4950 = bitcast %union.tree_node* %1782 to %struct.tree_common*
  %code4951 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4950, i32 0, i32 2
  %bf.load4952 = load i32, i32* %code4951, align 8
  %bf.clear4953 = and i32 %bf.load4952, 255
  %cmp4954 = icmp eq i32 %bf.clear4953, 12
  br i1 %cmp4954, label %if.then.4974, label %lor.lhs.false.4956

lor.lhs.false.4956:                               ; preds = %lor.lhs.false.4947
  %1783 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4957 = bitcast %union.tree_node* %1783 to %struct.tree_common*
  %type4958 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4957, i32 0, i32 1
  %1784 = load %union.tree_node*, %union.tree_node** %type4958, align 8
  %common4959 = bitcast %union.tree_node* %1784 to %struct.tree_common*
  %code4960 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4959, i32 0, i32 2
  %bf.load4961 = load i32, i32* %code4960, align 8
  %bf.clear4962 = and i32 %bf.load4961, 255
  %cmp4963 = icmp eq i32 %bf.clear4962, 13
  br i1 %cmp4963, label %if.then.4974, label %lor.lhs.false.4965

lor.lhs.false.4965:                               ; preds = %lor.lhs.false.4956
  %1785 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4966 = bitcast %union.tree_node* %1785 to %struct.tree_common*
  %type4967 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4966, i32 0, i32 1
  %1786 = load %union.tree_node*, %union.tree_node** %type4967, align 8
  %common4968 = bitcast %union.tree_node* %1786 to %struct.tree_common*
  %code4969 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4968, i32 0, i32 2
  %bf.load4970 = load i32, i32* %code4969, align 8
  %bf.clear4971 = and i32 %bf.load4970, 255
  %cmp4972 = icmp eq i32 %bf.clear4971, 15
  br i1 %cmp4972, label %if.then.4974, label %if.end.5215

if.then.4974:                                     ; preds = %lor.lhs.false.4965, %lor.lhs.false.4956, %lor.lhs.false.4947, %lor.lhs.false.4938, %lor.lhs.false.4929, %land.lhs.true.4920
  %1787 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst4975 = bitcast %union.tree_node* %1787 to %struct.tree_int_cst*
  %int_cst4976 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst4975, i32 0, i32 2
  %high4977 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst4976, i32 0, i32 1
  %1788 = load i64, i64* %high4977, align 8
  %cmp4978 = icmp eq i64 %1788, 0
  br i1 %cmp4978, label %land.lhs.true.4980, label %if.else.5022

land.lhs.true.4980:                               ; preds = %if.then.4974
  %1789 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst4981 = bitcast %union.tree_node* %1789 to %struct.tree_int_cst*
  %int_cst4982 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst4981, i32 0, i32 2
  %low4983 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst4982, i32 0, i32 0
  %1790 = load i64, i64* %low4983, align 8
  %1791 = load i32, i32* %width, align 4
  %sub4984 = sub nsw i32 %1791, 1
  %sh_prom4985 = zext i32 %sub4984 to i64
  %shl4986 = shl i64 1, %sh_prom4985
  %sub4987 = sub i64 %shl4986, 1
  %cmp4988 = icmp eq i64 %1790, %sub4987
  br i1 %cmp4988, label %land.lhs.true.4990, label %if.else.5022

land.lhs.true.4990:                               ; preds = %land.lhs.true.4980
  %1792 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common4991 = bitcast %union.tree_node* %1792 to %struct.tree_common*
  %type4992 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4991, i32 0, i32 1
  %1793 = load %union.tree_node*, %union.tree_node** %type4992, align 8
  %common4993 = bitcast %union.tree_node* %1793 to %struct.tree_common*
  %unsigned_flag4994 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4993, i32 0, i32 2
  %bf.load4995 = load i32, i32* %unsigned_flag4994, align 8
  %bf.lshr4996 = lshr i32 %bf.load4995, 13
  %bf.clear4997 = and i32 %bf.lshr4996, 1
  %tobool4998 = icmp ne i32 %bf.clear4997, 0
  br i1 %tobool4998, label %if.else.5022, label %if.then.4999

if.then.4999:                                     ; preds = %land.lhs.true.4990
  %1794 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5000 = bitcast %union.tree_node* %1794 to %struct.tree_common*
  %code5001 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5000, i32 0, i32 2
  %bf.load5002 = load i32, i32* %code5001, align 8
  %bf.clear5003 = and i32 %bf.load5002, 255
  switch i32 %bf.clear5003, label %sw.default [
    i32 99, label %sw.bb.5004
    i32 100, label %sw.bb.5007
    i32 98, label %sw.bb.5013
    i32 97, label %sw.bb.5016
  ]

sw.bb.5004:                                       ; preds = %if.then.4999
  %1795 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1796 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1797 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5005 = call %union.tree_node* @convert(%union.tree_node* %1796, %union.tree_node* %1797)
  %1798 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5006 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1795, %union.tree_node* %call5005, %union.tree_node* %1798)
  store %union.tree_node* %call5006, %union.tree_node** %retval
  br label %return

sw.bb.5007:                                       ; preds = %if.then.4999
  %1799 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5008 = bitcast %union.tree_node* %1799 to %struct.tree_common*
  %code5009 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5008, i32 0, i32 2
  %bf.load5010 = load i32, i32* %code5009, align 8
  %bf.clear5011 = and i32 %bf.load5010, -256
  %bf.set5012 = or i32 %bf.clear5011, 101
  store i32 %bf.set5012, i32* %code5009, align 8
  br label %sw.epilog

sw.bb.5013:                                       ; preds = %if.then.4999
  %1800 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1801 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1802 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5014 = call %union.tree_node* @convert(%union.tree_node* %1801, %union.tree_node* %1802)
  %1803 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5015 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1800, %union.tree_node* %call5014, %union.tree_node* %1803)
  store %union.tree_node* %call5015, %union.tree_node** %retval
  br label %return

sw.bb.5016:                                       ; preds = %if.then.4999
  %1804 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5017 = bitcast %union.tree_node* %1804 to %struct.tree_common*
  %code5018 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5017, i32 0, i32 2
  %bf.load5019 = load i32, i32* %code5018, align 8
  %bf.clear5020 = and i32 %bf.load5019, -256
  %bf.set5021 = or i32 %bf.clear5020, 102
  store i32 %bf.set5021, i32* %code5018, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.4999
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.5016, %sw.bb.5007
  br label %if.end.5214

if.else.5022:                                     ; preds = %land.lhs.true.4990, %land.lhs.true.4980, %if.then.4974
  %1805 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5023 = bitcast %union.tree_node* %1805 to %struct.tree_int_cst*
  %int_cst5024 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5023, i32 0, i32 2
  %high5025 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5024, i32 0, i32 1
  %1806 = load i64, i64* %high5025, align 8
  %cmp5026 = icmp eq i64 %1806, -1
  br i1 %cmp5026, label %land.lhs.true.5028, label %if.else.5071

land.lhs.true.5028:                               ; preds = %if.else.5022
  %1807 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5029 = bitcast %union.tree_node* %1807 to %struct.tree_int_cst*
  %int_cst5030 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5029, i32 0, i32 2
  %low5031 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5030, i32 0, i32 0
  %1808 = load i64, i64* %low5031, align 8
  %1809 = load i32, i32* %width, align 4
  %sub5032 = sub nsw i32 %1809, 1
  %sh_prom5033 = zext i32 %sub5032 to i64
  %shl5034 = shl i64 1, %sh_prom5033
  %cmp5035 = icmp eq i64 %1808, %shl5034
  br i1 %cmp5035, label %land.lhs.true.5037, label %if.else.5071

land.lhs.true.5037:                               ; preds = %land.lhs.true.5028
  %1810 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5038 = bitcast %union.tree_node* %1810 to %struct.tree_common*
  %type5039 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5038, i32 0, i32 1
  %1811 = load %union.tree_node*, %union.tree_node** %type5039, align 8
  %common5040 = bitcast %union.tree_node* %1811 to %struct.tree_common*
  %unsigned_flag5041 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5040, i32 0, i32 2
  %bf.load5042 = load i32, i32* %unsigned_flag5041, align 8
  %bf.lshr5043 = lshr i32 %bf.load5042, 13
  %bf.clear5044 = and i32 %bf.lshr5043, 1
  %tobool5045 = icmp ne i32 %bf.clear5044, 0
  br i1 %tobool5045, label %if.else.5071, label %if.then.5046

if.then.5046:                                     ; preds = %land.lhs.true.5037
  %1812 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5047 = bitcast %union.tree_node* %1812 to %struct.tree_common*
  %code5048 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5047, i32 0, i32 2
  %bf.load5049 = load i32, i32* %code5048, align 8
  %bf.clear5050 = and i32 %bf.load5049, 255
  switch i32 %bf.clear5050, label %sw.default.5069 [
    i32 97, label %sw.bb.5051
    i32 98, label %sw.bb.5054
    i32 100, label %sw.bb.5060
    i32 99, label %sw.bb.5063
  ]

sw.bb.5051:                                       ; preds = %if.then.5046
  %1813 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1814 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1815 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5052 = call %union.tree_node* @convert(%union.tree_node* %1814, %union.tree_node* %1815)
  %1816 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5053 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1813, %union.tree_node* %call5052, %union.tree_node* %1816)
  store %union.tree_node* %call5053, %union.tree_node** %retval
  br label %return

sw.bb.5054:                                       ; preds = %if.then.5046
  %1817 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5055 = bitcast %union.tree_node* %1817 to %struct.tree_common*
  %code5056 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5055, i32 0, i32 2
  %bf.load5057 = load i32, i32* %code5056, align 8
  %bf.clear5058 = and i32 %bf.load5057, -256
  %bf.set5059 = or i32 %bf.clear5058, 101
  store i32 %bf.set5059, i32* %code5056, align 8
  br label %sw.epilog.5070

sw.bb.5060:                                       ; preds = %if.then.5046
  %1818 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1819 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1820 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5061 = call %union.tree_node* @convert(%union.tree_node* %1819, %union.tree_node* %1820)
  %1821 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5062 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1818, %union.tree_node* %call5061, %union.tree_node* %1821)
  store %union.tree_node* %call5062, %union.tree_node** %retval
  br label %return

sw.bb.5063:                                       ; preds = %if.then.5046
  %1822 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5064 = bitcast %union.tree_node* %1822 to %struct.tree_common*
  %code5065 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5064, i32 0, i32 2
  %bf.load5066 = load i32, i32* %code5065, align 8
  %bf.clear5067 = and i32 %bf.load5066, -256
  %bf.set5068 = or i32 %bf.clear5067, 102
  store i32 %bf.set5068, i32* %code5065, align 8
  br label %sw.epilog.5070

sw.default.5069:                                  ; preds = %if.then.5046
  br label %sw.epilog.5070

sw.epilog.5070:                                   ; preds = %sw.default.5069, %sw.bb.5063, %sw.bb.5054
  br label %if.end.5213

if.else.5071:                                     ; preds = %land.lhs.true.5037, %land.lhs.true.5028, %if.else.5022
  %1823 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5072 = bitcast %union.tree_node* %1823 to %struct.tree_int_cst*
  %int_cst5073 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5072, i32 0, i32 2
  %high5074 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5073, i32 0, i32 1
  %1824 = load i64, i64* %high5074, align 8
  %cmp5075 = icmp eq i64 %1824, 0
  br i1 %cmp5075, label %land.lhs.true.5077, label %if.else.5161

land.lhs.true.5077:                               ; preds = %if.else.5071
  %1825 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5078 = bitcast %union.tree_node* %1825 to %struct.tree_int_cst*
  %int_cst5079 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5078, i32 0, i32 2
  %low5080 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5079, i32 0, i32 0
  %1826 = load i64, i64* %low5080, align 8
  %1827 = load i32, i32* %width, align 4
  %sub5081 = sub nsw i32 %1827, 1
  %sh_prom5082 = zext i32 %sub5081 to i64
  %shl5083 = shl i64 1, %sh_prom5082
  %sub5084 = sub i64 %shl5083, 1
  %cmp5085 = icmp eq i64 %1826, %sub5084
  br i1 %cmp5085, label %land.lhs.true.5087, label %if.else.5161

land.lhs.true.5087:                               ; preds = %land.lhs.true.5077
  %1828 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5088 = bitcast %union.tree_node* %1828 to %struct.tree_common*
  %type5089 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5088, i32 0, i32 1
  %1829 = load %union.tree_node*, %union.tree_node** %type5089, align 8
  %common5090 = bitcast %union.tree_node* %1829 to %struct.tree_common*
  %unsigned_flag5091 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5090, i32 0, i32 2
  %bf.load5092 = load i32, i32* %unsigned_flag5091, align 8
  %bf.lshr5093 = lshr i32 %bf.load5092, 13
  %bf.clear5094 = and i32 %bf.lshr5093, 1
  %tobool5095 = icmp ne i32 %bf.clear5094, 0
  br i1 %tobool5095, label %land.lhs.true.5096, label %if.else.5161

land.lhs.true.5096:                               ; preds = %land.lhs.true.5087
  %1830 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5097 = bitcast %union.tree_node* %1830 to %struct.tree_common*
  %type5098 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5097, i32 0, i32 1
  %1831 = load %union.tree_node*, %union.tree_node** %type5098, align 8
  %common5099 = bitcast %union.tree_node* %1831 to %struct.tree_common*
  %code5100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5099, i32 0, i32 2
  %bf.load5101 = load i32, i32* %code5100, align 8
  %bf.clear5102 = and i32 %bf.load5101, 255
  %cmp5103 = icmp eq i32 %bf.clear5102, 6
  br i1 %cmp5103, label %if.then.5132, label %lor.lhs.false.5105

lor.lhs.false.5105:                               ; preds = %land.lhs.true.5096
  %1832 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5106 = bitcast %union.tree_node* %1832 to %struct.tree_common*
  %type5107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5106, i32 0, i32 1
  %1833 = load %union.tree_node*, %union.tree_node** %type5107, align 8
  %common5108 = bitcast %union.tree_node* %1833 to %struct.tree_common*
  %code5109 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5108, i32 0, i32 2
  %bf.load5110 = load i32, i32* %code5109, align 8
  %bf.clear5111 = and i32 %bf.load5110, 255
  %cmp5112 = icmp eq i32 %bf.clear5111, 10
  br i1 %cmp5112, label %if.then.5132, label %lor.lhs.false.5114

lor.lhs.false.5114:                               ; preds = %lor.lhs.false.5105
  %1834 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5115 = bitcast %union.tree_node* %1834 to %struct.tree_common*
  %type5116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5115, i32 0, i32 1
  %1835 = load %union.tree_node*, %union.tree_node** %type5116, align 8
  %common5117 = bitcast %union.tree_node* %1835 to %struct.tree_common*
  %code5118 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5117, i32 0, i32 2
  %bf.load5119 = load i32, i32* %code5118, align 8
  %bf.clear5120 = and i32 %bf.load5119, 255
  %cmp5121 = icmp eq i32 %bf.clear5120, 11
  br i1 %cmp5121, label %if.then.5132, label %lor.lhs.false.5123

lor.lhs.false.5123:                               ; preds = %lor.lhs.false.5114
  %1836 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5124 = bitcast %union.tree_node* %1836 to %struct.tree_common*
  %type5125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5124, i32 0, i32 1
  %1837 = load %union.tree_node*, %union.tree_node** %type5125, align 8
  %common5126 = bitcast %union.tree_node* %1837 to %struct.tree_common*
  %code5127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5126, i32 0, i32 2
  %bf.load5128 = load i32, i32* %code5127, align 8
  %bf.clear5129 = and i32 %bf.load5128, 255
  %cmp5130 = icmp eq i32 %bf.clear5129, 12
  br i1 %cmp5130, label %if.then.5132, label %if.else.5161

if.then.5132:                                     ; preds = %lor.lhs.false.5123, %lor.lhs.false.5114, %lor.lhs.false.5105, %land.lhs.true.5096
  %1838 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5133 = bitcast %union.tree_node* %1838 to %struct.tree_common*
  %code5134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5133, i32 0, i32 2
  %bf.load5135 = load i32, i32* %code5134, align 8
  %bf.clear5136 = and i32 %bf.load5135, 255
  switch i32 %bf.clear5136, label %sw.default.5159 [
    i32 98, label %sw.bb.5137
    i32 99, label %sw.bb.5148
  ]

sw.bb.5137:                                       ; preds = %if.then.5132
  %1839 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1840 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5138 = bitcast %union.tree_node* %1840 to %struct.tree_common*
  %type5139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5138, i32 0, i32 1
  %1841 = load %union.tree_node*, %union.tree_node** %type5139, align 8
  %call5140 = call %union.tree_node* @signed_type(%union.tree_node* %1841)
  %1842 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5141 = call %union.tree_node* @convert(%union.tree_node* %call5140, %union.tree_node* %1842)
  %1843 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5142 = bitcast %union.tree_node* %1843 to %struct.tree_common*
  %type5143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5142, i32 0, i32 1
  %1844 = load %union.tree_node*, %union.tree_node** %type5143, align 8
  %call5144 = call %union.tree_node* @signed_type(%union.tree_node* %1844)
  %1845 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5145 = call %union.tree_node* @convert(%union.tree_node* %call5144, %union.tree_node* %1845)
  %call5146 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 100, %union.tree_node* %1839, %union.tree_node* %call5141, %union.tree_node* %call5145)
  %call5147 = call %union.tree_node* @fold(%union.tree_node* %call5146)
  store %union.tree_node* %call5147, %union.tree_node** %retval
  br label %return

sw.bb.5148:                                       ; preds = %if.then.5132
  %1846 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1847 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5149 = bitcast %union.tree_node* %1847 to %struct.tree_common*
  %type5150 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5149, i32 0, i32 1
  %1848 = load %union.tree_node*, %union.tree_node** %type5150, align 8
  %call5151 = call %union.tree_node* @signed_type(%union.tree_node* %1848)
  %1849 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5152 = call %union.tree_node* @convert(%union.tree_node* %call5151, %union.tree_node* %1849)
  %1850 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5153 = bitcast %union.tree_node* %1850 to %struct.tree_common*
  %type5154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5153, i32 0, i32 1
  %1851 = load %union.tree_node*, %union.tree_node** %type5154, align 8
  %call5155 = call %union.tree_node* @signed_type(%union.tree_node* %1851)
  %1852 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5156 = call %union.tree_node* @convert(%union.tree_node* %call5155, %union.tree_node* %1852)
  %call5157 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 97, %union.tree_node* %1846, %union.tree_node* %call5152, %union.tree_node* %call5156)
  %call5158 = call %union.tree_node* @fold(%union.tree_node* %call5157)
  store %union.tree_node* %call5158, %union.tree_node** %retval
  br label %return

sw.default.5159:                                  ; preds = %if.then.5132
  br label %sw.epilog.5160

sw.epilog.5160:                                   ; preds = %sw.default.5159
  br label %if.end.5212

if.else.5161:                                     ; preds = %lor.lhs.false.5123, %land.lhs.true.5087, %land.lhs.true.5077, %if.else.5071
  %1853 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5162 = bitcast %union.tree_node* %1853 to %struct.tree_int_cst*
  %int_cst5163 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5162, i32 0, i32 2
  %high5164 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5163, i32 0, i32 1
  %1854 = load i64, i64* %high5164, align 8
  %cmp5165 = icmp eq i64 %1854, 0
  br i1 %cmp5165, label %land.lhs.true.5167, label %if.end.5211

land.lhs.true.5167:                               ; preds = %if.else.5161
  %1855 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst5168 = bitcast %union.tree_node* %1855 to %struct.tree_int_cst*
  %int_cst5169 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst5168, i32 0, i32 2
  %low5170 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst5169, i32 0, i32 0
  %1856 = load i64, i64* %low5170, align 8
  %1857 = load i32, i32* %width, align 4
  %sub5171 = sub nsw i32 %1857, 1
  %sh_prom5172 = zext i32 %sub5171 to i64
  %shl5173 = shl i64 2, %sh_prom5172
  %sub5174 = sub i64 %shl5173, 1
  %cmp5175 = icmp eq i64 %1856, %sub5174
  br i1 %cmp5175, label %land.lhs.true.5177, label %if.end.5211

land.lhs.true.5177:                               ; preds = %land.lhs.true.5167
  %1858 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5178 = bitcast %union.tree_node* %1858 to %struct.tree_common*
  %type5179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5178, i32 0, i32 1
  %1859 = load %union.tree_node*, %union.tree_node** %type5179, align 8
  %common5180 = bitcast %union.tree_node* %1859 to %struct.tree_common*
  %unsigned_flag5181 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5180, i32 0, i32 2
  %bf.load5182 = load i32, i32* %unsigned_flag5181, align 8
  %bf.lshr5183 = lshr i32 %bf.load5182, 13
  %bf.clear5184 = and i32 %bf.lshr5183, 1
  %tobool5185 = icmp ne i32 %bf.clear5184, 0
  br i1 %tobool5185, label %if.then.5186, label %if.end.5211

if.then.5186:                                     ; preds = %land.lhs.true.5177
  %1860 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5187 = bitcast %union.tree_node* %1860 to %struct.tree_common*
  %code5188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5187, i32 0, i32 2
  %bf.load5189 = load i32, i32* %code5188, align 8
  %bf.clear5190 = and i32 %bf.load5189, 255
  switch i32 %bf.clear5190, label %sw.default.5209 [
    i32 99, label %sw.bb.5191
    i32 100, label %sw.bb.5194
    i32 98, label %sw.bb.5200
    i32 97, label %sw.bb.5203
  ]

sw.bb.5191:                                       ; preds = %if.then.5186
  %1861 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1862 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1863 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5192 = call %union.tree_node* @convert(%union.tree_node* %1862, %union.tree_node* %1863)
  %1864 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5193 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1861, %union.tree_node* %call5192, %union.tree_node* %1864)
  store %union.tree_node* %call5193, %union.tree_node** %retval
  br label %return

sw.bb.5194:                                       ; preds = %if.then.5186
  %1865 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5195 = bitcast %union.tree_node* %1865 to %struct.tree_common*
  %code5196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5195, i32 0, i32 2
  %bf.load5197 = load i32, i32* %code5196, align 8
  %bf.clear5198 = and i32 %bf.load5197, -256
  %bf.set5199 = or i32 %bf.clear5198, 101
  store i32 %bf.set5199, i32* %code5196, align 8
  br label %sw.epilog.5210

sw.bb.5200:                                       ; preds = %if.then.5186
  %1866 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1867 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1868 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5201 = call %union.tree_node* @convert(%union.tree_node* %1867, %union.tree_node* %1868)
  %1869 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5202 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1866, %union.tree_node* %call5201, %union.tree_node* %1869)
  store %union.tree_node* %call5202, %union.tree_node** %retval
  br label %return

sw.bb.5203:                                       ; preds = %if.then.5186
  %1870 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5204 = bitcast %union.tree_node* %1870 to %struct.tree_common*
  %code5205 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5204, i32 0, i32 2
  %bf.load5206 = load i32, i32* %code5205, align 8
  %bf.clear5207 = and i32 %bf.load5206, -256
  %bf.set5208 = or i32 %bf.clear5207, 102
  store i32 %bf.set5208, i32* %code5205, align 8
  br label %sw.epilog.5210

sw.default.5209:                                  ; preds = %if.then.5186
  br label %sw.epilog.5210

sw.epilog.5210:                                   ; preds = %sw.default.5209, %sw.bb.5203, %sw.bb.5194
  br label %if.end.5211

if.end.5211:                                      ; preds = %sw.epilog.5210, %land.lhs.true.5177, %land.lhs.true.5167, %if.else.5161
  br label %if.end.5212

if.end.5212:                                      ; preds = %if.end.5211, %sw.epilog.5160
  br label %if.end.5213

if.end.5213:                                      ; preds = %if.end.5212, %sw.epilog.5070
  br label %if.end.5214

if.end.5214:                                      ; preds = %if.end.5213, %sw.epilog
  br label %if.end.5215

if.end.5215:                                      ; preds = %if.end.5214, %lor.lhs.false.4965, %land.lhs.true.4917, %land.lhs.true.4910, %if.end.4892
  %1871 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5216 = bitcast %union.tree_node* %1871 to %struct.tree_common*
  %code5217 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5216, i32 0, i32 2
  %bf.load5218 = load i32, i32* %code5217, align 8
  %bf.clear5219 = and i32 %bf.load5218, 255
  %cmp5220 = icmp eq i32 %bf.clear5219, 25
  br i1 %cmp5220, label %land.lhs.true.5222, label %if.end.5252

land.lhs.true.5222:                               ; preds = %if.end.5215
  %1872 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5223 = bitcast %union.tree_node* %1872 to %struct.tree_common*
  %code5224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5223, i32 0, i32 2
  %bf.load5225 = load i32, i32* %code5224, align 8
  %bf.clear5226 = and i32 %bf.load5225, 255
  %cmp5227 = icmp ne i32 %bf.clear5226, 25
  br i1 %cmp5227, label %land.lhs.true.5229, label %if.end.5252

land.lhs.true.5229:                               ; preds = %land.lhs.true.5222
  %1873 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5230 = call i32 @tree_int_cst_sgn(%union.tree_node* %1873)
  %cmp5231 = icmp sgt i32 %call5230, 0
  br i1 %cmp5231, label %if.then.5233, label %if.end.5252

if.then.5233:                                     ; preds = %land.lhs.true.5229
  %1874 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5234 = bitcast %union.tree_node* %1874 to %struct.tree_common*
  %code5235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5234, i32 0, i32 2
  %bf.load5236 = load i32, i32* %code5235, align 8
  %bf.clear5237 = and i32 %bf.load5236, 255
  switch i32 %bf.clear5237, label %sw.default.5250 [
    i32 100, label %sw.bb.5238
    i32 97, label %sw.bb.5244
  ]

sw.bb.5238:                                       ; preds = %if.then.5233
  store i32 99, i32* %code, align 4
  %1875 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1876 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5239 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %1875, %union.tree_node* %1876, i32 0)
  store %union.tree_node* %call5239, %union.tree_node** %arg1, align 8
  %1877 = load i32, i32* %code, align 4
  %1878 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1879 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp5240 = bitcast %union.tree_node* %1879 to %struct.tree_exp*
  %operands5241 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5240, i32 0, i32 2
  %arrayidx5242 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5241, i32 0, i64 0
  %1880 = load %union.tree_node*, %union.tree_node** %arrayidx5242, align 8
  %1881 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5243 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1877, %union.tree_node* %1878, %union.tree_node* %1880, %union.tree_node* %1881)
  store %union.tree_node* %call5243, %union.tree_node** %t, align 8
  br label %sw.epilog.5251

sw.bb.5244:                                       ; preds = %if.then.5233
  store i32 98, i32* %code, align 4
  %1882 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1883 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5245 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %1882, %union.tree_node* %1883, i32 0)
  store %union.tree_node* %call5245, %union.tree_node** %arg1, align 8
  %1884 = load i32, i32* %code, align 4
  %1885 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1886 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp5246 = bitcast %union.tree_node* %1886 to %struct.tree_exp*
  %operands5247 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5246, i32 0, i32 2
  %arrayidx5248 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5247, i32 0, i64 0
  %1887 = load %union.tree_node*, %union.tree_node** %arrayidx5248, align 8
  %1888 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5249 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1884, %union.tree_node* %1885, %union.tree_node* %1887, %union.tree_node* %1888)
  store %union.tree_node* %call5249, %union.tree_node** %t, align 8
  br label %sw.epilog.5251

sw.default.5250:                                  ; preds = %if.then.5233
  br label %sw.epilog.5251

sw.epilog.5251:                                   ; preds = %sw.default.5250, %sw.bb.5244, %sw.bb.5238
  br label %if.end.5252

if.end.5252:                                      ; preds = %sw.epilog.5251, %land.lhs.true.5229, %land.lhs.true.5222, %if.end.5215
  %1889 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5253 = call i32 @integer_zerop(%union.tree_node* %1889)
  %tobool5254 = icmp ne i32 %call5253, 0
  br i1 %tobool5254, label %land.lhs.true.5255, label %if.end.5343

land.lhs.true.5255:                               ; preds = %if.end.5252
  %1890 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5256 = bitcast %union.tree_node* %1890 to %struct.tree_common*
  %type5257 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5256, i32 0, i32 1
  %1891 = load %union.tree_node*, %union.tree_node** %type5257, align 8
  %common5258 = bitcast %union.tree_node* %1891 to %struct.tree_common*
  %code5259 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5258, i32 0, i32 2
  %bf.load5260 = load i32, i32* %code5259, align 8
  %bf.clear5261 = and i32 %bf.load5260, 255
  %cmp5262 = icmp eq i32 %bf.clear5261, 6
  br i1 %cmp5262, label %land.lhs.true.5309, label %lor.lhs.false.5264

lor.lhs.false.5264:                               ; preds = %land.lhs.true.5255
  %1892 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5265 = bitcast %union.tree_node* %1892 to %struct.tree_common*
  %type5266 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5265, i32 0, i32 1
  %1893 = load %union.tree_node*, %union.tree_node** %type5266, align 8
  %common5267 = bitcast %union.tree_node* %1893 to %struct.tree_common*
  %code5268 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5267, i32 0, i32 2
  %bf.load5269 = load i32, i32* %code5268, align 8
  %bf.clear5270 = and i32 %bf.load5269, 255
  %cmp5271 = icmp eq i32 %bf.clear5270, 10
  br i1 %cmp5271, label %land.lhs.true.5309, label %lor.lhs.false.5273

lor.lhs.false.5273:                               ; preds = %lor.lhs.false.5264
  %1894 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5274 = bitcast %union.tree_node* %1894 to %struct.tree_common*
  %type5275 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5274, i32 0, i32 1
  %1895 = load %union.tree_node*, %union.tree_node** %type5275, align 8
  %common5276 = bitcast %union.tree_node* %1895 to %struct.tree_common*
  %code5277 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5276, i32 0, i32 2
  %bf.load5278 = load i32, i32* %code5277, align 8
  %bf.clear5279 = and i32 %bf.load5278, 255
  %cmp5280 = icmp eq i32 %bf.clear5279, 11
  br i1 %cmp5280, label %land.lhs.true.5309, label %lor.lhs.false.5282

lor.lhs.false.5282:                               ; preds = %lor.lhs.false.5273
  %1896 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5283 = bitcast %union.tree_node* %1896 to %struct.tree_common*
  %type5284 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5283, i32 0, i32 1
  %1897 = load %union.tree_node*, %union.tree_node** %type5284, align 8
  %common5285 = bitcast %union.tree_node* %1897 to %struct.tree_common*
  %code5286 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5285, i32 0, i32 2
  %bf.load5287 = load i32, i32* %code5286, align 8
  %bf.clear5288 = and i32 %bf.load5287, 255
  %cmp5289 = icmp eq i32 %bf.clear5288, 12
  br i1 %cmp5289, label %land.lhs.true.5309, label %lor.lhs.false.5291

lor.lhs.false.5291:                               ; preds = %lor.lhs.false.5282
  %1898 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5292 = bitcast %union.tree_node* %1898 to %struct.tree_common*
  %type5293 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5292, i32 0, i32 1
  %1899 = load %union.tree_node*, %union.tree_node** %type5293, align 8
  %common5294 = bitcast %union.tree_node* %1899 to %struct.tree_common*
  %code5295 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5294, i32 0, i32 2
  %bf.load5296 = load i32, i32* %code5295, align 8
  %bf.clear5297 = and i32 %bf.load5296, 255
  %cmp5298 = icmp eq i32 %bf.clear5297, 13
  br i1 %cmp5298, label %land.lhs.true.5309, label %lor.lhs.false.5300

lor.lhs.false.5300:                               ; preds = %lor.lhs.false.5291
  %1900 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5301 = bitcast %union.tree_node* %1900 to %struct.tree_common*
  %type5302 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5301, i32 0, i32 1
  %1901 = load %union.tree_node*, %union.tree_node** %type5302, align 8
  %common5303 = bitcast %union.tree_node* %1901 to %struct.tree_common*
  %code5304 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5303, i32 0, i32 2
  %bf.load5305 = load i32, i32* %code5304, align 8
  %bf.clear5306 = and i32 %bf.load5305, 255
  %cmp5307 = icmp eq i32 %bf.clear5306, 15
  br i1 %cmp5307, label %land.lhs.true.5309, label %if.end.5343

land.lhs.true.5309:                               ; preds = %lor.lhs.false.5300, %lor.lhs.false.5291, %lor.lhs.false.5282, %lor.lhs.false.5273, %lor.lhs.false.5264, %land.lhs.true.5255
  %1902 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5310 = bitcast %union.tree_node* %1902 to %struct.tree_common*
  %type5311 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5310, i32 0, i32 1
  %1903 = load %union.tree_node*, %union.tree_node** %type5311, align 8
  %common5312 = bitcast %union.tree_node* %1903 to %struct.tree_common*
  %unsigned_flag5313 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5312, i32 0, i32 2
  %bf.load5314 = load i32, i32* %unsigned_flag5313, align 8
  %bf.lshr5315 = lshr i32 %bf.load5314, 13
  %bf.clear5316 = and i32 %bf.lshr5315, 1
  %tobool5317 = icmp ne i32 %bf.clear5316, 0
  br i1 %tobool5317, label %if.then.5318, label %if.end.5343

if.then.5318:                                     ; preds = %land.lhs.true.5309
  %1904 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5319 = bitcast %union.tree_node* %1904 to %struct.tree_common*
  %code5320 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5319, i32 0, i32 2
  %bf.load5321 = load i32, i32* %code5320, align 8
  %bf.clear5322 = and i32 %bf.load5321, 255
  switch i32 %bf.clear5322, label %sw.default.5341 [
    i32 99, label %sw.bb.5323
    i32 98, label %sw.bb.5329
    i32 100, label %sw.bb.5335
    i32 97, label %sw.bb.5338
  ]

sw.bb.5323:                                       ; preds = %if.then.5318
  store i32 102, i32* %code, align 4
  %1905 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5324 = bitcast %union.tree_node* %1905 to %struct.tree_common*
  %code5325 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5324, i32 0, i32 2
  %bf.load5326 = load i32, i32* %code5325, align 8
  %bf.clear5327 = and i32 %bf.load5326, -256
  %bf.set5328 = or i32 %bf.clear5327, 102
  store i32 %bf.set5328, i32* %code5325, align 8
  br label %sw.epilog.5342

sw.bb.5329:                                       ; preds = %if.then.5318
  store i32 101, i32* %code, align 4
  %1906 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5330 = bitcast %union.tree_node* %1906 to %struct.tree_common*
  %code5331 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5330, i32 0, i32 2
  %bf.load5332 = load i32, i32* %code5331, align 8
  %bf.clear5333 = and i32 %bf.load5332, -256
  %bf.set5334 = or i32 %bf.clear5333, 101
  store i32 %bf.set5334, i32* %code5331, align 8
  br label %sw.epilog.5342

sw.bb.5335:                                       ; preds = %if.then.5318
  %1907 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1908 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1909 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5336 = call %union.tree_node* @convert(%union.tree_node* %1908, %union.tree_node* %1909)
  %1910 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5337 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1907, %union.tree_node* %call5336, %union.tree_node* %1910)
  store %union.tree_node* %call5337, %union.tree_node** %retval
  br label %return

sw.bb.5338:                                       ; preds = %if.then.5318
  %1911 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1912 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1913 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5339 = call %union.tree_node* @convert(%union.tree_node* %1912, %union.tree_node* %1913)
  %1914 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5340 = call %union.tree_node* @omit_one_operand(%union.tree_node* %1911, %union.tree_node* %call5339, %union.tree_node* %1914)
  store %union.tree_node* %call5340, %union.tree_node** %retval
  br label %return

sw.default.5341:                                  ; preds = %if.then.5318
  br label %sw.epilog.5342

sw.epilog.5342:                                   ; preds = %sw.default.5341, %sw.bb.5329, %sw.bb.5323
  br label %if.end.5343

if.end.5343:                                      ; preds = %sw.epilog.5342, %land.lhs.true.5309, %lor.lhs.false.5300, %if.end.5252
  %1915 = load i32, i32* %code, align 4
  %cmp5344 = icmp eq i32 %1915, 101
  br i1 %cmp5344, label %land.lhs.true.5349, label %lor.lhs.false.5346

lor.lhs.false.5346:                               ; preds = %if.end.5343
  %1916 = load i32, i32* %code, align 4
  %cmp5347 = icmp eq i32 %1916, 102
  br i1 %cmp5347, label %land.lhs.true.5349, label %if.else.5407

land.lhs.true.5349:                               ; preds = %lor.lhs.false.5346, %if.end.5343
  %1917 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5350 = bitcast %union.tree_node* %1917 to %struct.tree_common*
  %code5351 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5350, i32 0, i32 2
  %bf.load5352 = load i32, i32* %code5351, align 8
  %bf.clear5353 = and i32 %bf.load5352, 255
  %cmp5354 = icmp eq i32 %bf.clear5353, 25
  br i1 %cmp5354, label %land.lhs.true.5356, label %if.else.5407

land.lhs.true.5356:                               ; preds = %land.lhs.true.5349
  %1918 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5357 = bitcast %union.tree_node* %1918 to %struct.tree_common*
  %code5358 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5357, i32 0, i32 2
  %bf.load5359 = load i32, i32* %code5358, align 8
  %bf.clear5360 = and i32 %bf.load5359, 255
  %cmp5361 = icmp eq i32 %bf.clear5360, 59
  br i1 %cmp5361, label %land.lhs.true.5370, label %lor.lhs.false.5363

lor.lhs.false.5363:                               ; preds = %land.lhs.true.5356
  %1919 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5364 = bitcast %union.tree_node* %1919 to %struct.tree_common*
  %code5365 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5364, i32 0, i32 2
  %bf.load5366 = load i32, i32* %code5365, align 8
  %bf.clear5367 = and i32 %bf.load5366, 255
  %cmp5368 = icmp eq i32 %bf.clear5367, 60
  br i1 %cmp5368, label %land.lhs.true.5370, label %if.else.5407

land.lhs.true.5370:                               ; preds = %lor.lhs.false.5363, %land.lhs.true.5356
  %1920 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5371 = bitcast %union.tree_node* %1920 to %struct.tree_exp*
  %operands5372 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5371, i32 0, i32 2
  %arrayidx5373 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5372, i32 0, i64 1
  %1921 = load %union.tree_node*, %union.tree_node** %arrayidx5373, align 8
  %common5374 = bitcast %union.tree_node* %1921 to %struct.tree_common*
  %code5375 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5374, i32 0, i32 2
  %bf.load5376 = load i32, i32* %code5375, align 8
  %bf.clear5377 = and i32 %bf.load5376, 255
  %cmp5378 = icmp eq i32 %bf.clear5377, 25
  br i1 %cmp5378, label %land.lhs.true.5380, label %if.else.5407

land.lhs.true.5380:                               ; preds = %land.lhs.true.5370
  %1922 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5381 = bitcast %union.tree_node* %1922 to %struct.tree_common*
  %code5382 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5381, i32 0, i32 2
  %bf.load5383 = load i32, i32* %code5382, align 8
  %bf.clear5384 = and i32 %bf.load5383, 255
  %cmp5385 = icmp eq i32 %bf.clear5384, 59
  %cond5387 = select i1 %cmp5385, i32 60, i32 59
  %1923 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1924 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5388 = bitcast %union.tree_node* %1924 to %struct.tree_exp*
  %operands5389 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5388, i32 0, i32 2
  %arrayidx5390 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5389, i32 0, i64 1
  %1925 = load %union.tree_node*, %union.tree_node** %arrayidx5390, align 8
  %call5391 = call %union.tree_node* @const_binop(i32 %cond5387, %union.tree_node* %1923, %union.tree_node* %1925, i32 0)
  store %union.tree_node* %call5391, %union.tree_node** %tem, align 8
  %cmp5392 = icmp ne %union.tree_node* null, %call5391
  br i1 %cmp5392, label %land.lhs.true.5394, label %if.else.5407

land.lhs.true.5394:                               ; preds = %land.lhs.true.5380
  %1926 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5395 = bitcast %union.tree_node* %1926 to %struct.tree_common*
  %static_flag5396 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5395, i32 0, i32 2
  %bf.load5397 = load i32, i32* %static_flag5396, align 8
  %bf.lshr5398 = lshr i32 %bf.load5397, 18
  %bf.clear5399 = and i32 %bf.lshr5398, 1
  %tobool5400 = icmp ne i32 %bf.clear5399, 0
  br i1 %tobool5400, label %if.else.5407, label %if.then.5401

if.then.5401:                                     ; preds = %land.lhs.true.5394
  %1927 = load i32, i32* %code, align 4
  %1928 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1929 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5402 = bitcast %union.tree_node* %1929 to %struct.tree_exp*
  %operands5403 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5402, i32 0, i32 2
  %arrayidx5404 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5403, i32 0, i64 0
  %1930 = load %union.tree_node*, %union.tree_node** %arrayidx5404, align 8
  %1931 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call5405 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1927, %union.tree_node* %1928, %union.tree_node* %1930, %union.tree_node* %1931)
  %call5406 = call %union.tree_node* @fold(%union.tree_node* %call5405)
  store %union.tree_node* %call5406, %union.tree_node** %retval
  br label %return

if.else.5407:                                     ; preds = %land.lhs.true.5394, %land.lhs.true.5380, %land.lhs.true.5370, %lor.lhs.false.5363, %land.lhs.true.5349, %lor.lhs.false.5346
  %1932 = load i32, i32* %code, align 4
  %cmp5408 = icmp eq i32 %1932, 101
  br i1 %cmp5408, label %land.lhs.true.5413, label %lor.lhs.false.5410

lor.lhs.false.5410:                               ; preds = %if.else.5407
  %1933 = load i32, i32* %code, align 4
  %cmp5411 = icmp eq i32 %1933, 102
  br i1 %cmp5411, label %land.lhs.true.5413, label %if.else.5451

land.lhs.true.5413:                               ; preds = %lor.lhs.false.5410, %if.else.5407
  %1934 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5414 = bitcast %union.tree_node* %1934 to %struct.tree_common*
  %code5415 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5414, i32 0, i32 2
  %bf.load5416 = load i32, i32* %code5415, align 8
  %bf.clear5417 = and i32 %bf.load5416, 255
  %cmp5418 = icmp eq i32 %bf.clear5417, 77
  br i1 %cmp5418, label %land.lhs.true.5420, label %if.else.5451

land.lhs.true.5420:                               ; preds = %land.lhs.true.5413
  %1935 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5421 = bitcast %union.tree_node* %1935 to %struct.tree_common*
  %code5422 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5421, i32 0, i32 2
  %bf.load5423 = load i32, i32* %code5422, align 8
  %bf.clear5424 = and i32 %bf.load5423, 255
  %cmp5425 = icmp eq i32 %bf.clear5424, 25
  br i1 %cmp5425, label %land.lhs.true.5427, label %if.else.5451

land.lhs.true.5427:                               ; preds = %land.lhs.true.5420
  %1936 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5428 = call %union.tree_node* @negate_expr(%union.tree_node* %1936)
  store %union.tree_node* %call5428, %union.tree_node** %tem, align 8
  %cmp5429 = icmp ne %union.tree_node* null, %call5428
  br i1 %cmp5429, label %land.lhs.true.5431, label %if.else.5451

land.lhs.true.5431:                               ; preds = %land.lhs.true.5427
  %1937 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5432 = bitcast %union.tree_node* %1937 to %struct.tree_common*
  %code5433 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5432, i32 0, i32 2
  %bf.load5434 = load i32, i32* %code5433, align 8
  %bf.clear5435 = and i32 %bf.load5434, 255
  %cmp5436 = icmp eq i32 %bf.clear5435, 25
  br i1 %cmp5436, label %land.lhs.true.5438, label %if.else.5451

land.lhs.true.5438:                               ; preds = %land.lhs.true.5431
  %1938 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5439 = bitcast %union.tree_node* %1938 to %struct.tree_common*
  %static_flag5440 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5439, i32 0, i32 2
  %bf.load5441 = load i32, i32* %static_flag5440, align 8
  %bf.lshr5442 = lshr i32 %bf.load5441, 18
  %bf.clear5443 = and i32 %bf.lshr5442, 1
  %tobool5444 = icmp ne i32 %bf.clear5443, 0
  br i1 %tobool5444, label %if.else.5451, label %if.then.5445

if.then.5445:                                     ; preds = %land.lhs.true.5438
  %1939 = load i32, i32* %code, align 4
  %1940 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1941 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5446 = bitcast %union.tree_node* %1941 to %struct.tree_exp*
  %operands5447 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5446, i32 0, i32 2
  %arrayidx5448 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5447, i32 0, i64 0
  %1942 = load %union.tree_node*, %union.tree_node** %arrayidx5448, align 8
  %1943 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call5449 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1939, %union.tree_node* %1940, %union.tree_node* %1942, %union.tree_node* %1943)
  %call5450 = call %union.tree_node* @fold(%union.tree_node* %call5449)
  store %union.tree_node* %call5450, %union.tree_node** %retval
  br label %return

if.else.5451:                                     ; preds = %land.lhs.true.5438, %land.lhs.true.5431, %land.lhs.true.5427, %land.lhs.true.5420, %land.lhs.true.5413, %lor.lhs.false.5410
  %1944 = load i32, i32* %code, align 4
  %cmp5452 = icmp eq i32 %1944, 102
  br i1 %cmp5452, label %land.lhs.true.5457, label %lor.lhs.false.5454

lor.lhs.false.5454:                               ; preds = %if.else.5451
  %1945 = load i32, i32* %code, align 4
  %cmp5455 = icmp eq i32 %1945, 101
  br i1 %cmp5455, label %land.lhs.true.5457, label %if.else.5476

land.lhs.true.5457:                               ; preds = %lor.lhs.false.5454, %if.else.5451
  %1946 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5458 = call i32 @integer_zerop(%union.tree_node* %1946)
  %tobool5459 = icmp ne i32 %call5458, 0
  br i1 %tobool5459, label %land.lhs.true.5460, label %if.else.5476

land.lhs.true.5460:                               ; preds = %land.lhs.true.5457
  %1947 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5461 = bitcast %union.tree_node* %1947 to %struct.tree_common*
  %code5462 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5461, i32 0, i32 2
  %bf.load5463 = load i32, i32* %code5462, align 8
  %bf.clear5464 = and i32 %bf.load5463, 255
  %cmp5465 = icmp eq i32 %bf.clear5464, 60
  br i1 %cmp5465, label %if.then.5467, label %if.else.5476

if.then.5467:                                     ; preds = %land.lhs.true.5460
  %1948 = load i32, i32* %code, align 4
  %1949 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1950 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5468 = bitcast %union.tree_node* %1950 to %struct.tree_exp*
  %operands5469 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5468, i32 0, i32 2
  %arrayidx5470 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5469, i32 0, i64 0
  %1951 = load %union.tree_node*, %union.tree_node** %arrayidx5470, align 8
  %1952 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5471 = bitcast %union.tree_node* %1952 to %struct.tree_exp*
  %operands5472 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5471, i32 0, i32 2
  %arrayidx5473 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5472, i32 0, i64 1
  %1953 = load %union.tree_node*, %union.tree_node** %arrayidx5473, align 8
  %call5474 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1948, %union.tree_node* %1949, %union.tree_node* %1951, %union.tree_node* %1953)
  %call5475 = call %union.tree_node* @fold(%union.tree_node* %call5474)
  store %union.tree_node* %call5475, %union.tree_node** %retval
  br label %return

if.else.5476:                                     ; preds = %land.lhs.true.5460, %land.lhs.true.5457, %lor.lhs.false.5454
  %1954 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5477 = bitcast %union.tree_node* %1954 to %struct.tree_common*
  %type5478 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5477, i32 0, i32 1
  %1955 = load %union.tree_node*, %union.tree_node** %type5478, align 8
  %common5479 = bitcast %union.tree_node* %1955 to %struct.tree_common*
  %code5480 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5479, i32 0, i32 2
  %bf.load5481 = load i32, i32* %code5480, align 8
  %bf.clear5482 = and i32 %bf.load5481, 255
  %cmp5483 = icmp eq i32 %bf.clear5482, 6
  br i1 %cmp5483, label %land.lhs.true.5485, label %if.else.5527

land.lhs.true.5485:                               ; preds = %if.else.5476
  %1956 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5486 = bitcast %union.tree_node* %1956 to %struct.tree_common*
  %code5487 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5486, i32 0, i32 2
  %bf.load5488 = load i32, i32* %code5487, align 8
  %bf.clear5489 = and i32 %bf.load5488, 255
  %cmp5490 = icmp eq i32 %bf.clear5489, 115
  br i1 %cmp5490, label %land.lhs.true.5492, label %if.else.5527

land.lhs.true.5492:                               ; preds = %land.lhs.true.5485
  %1957 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5493 = call %union.tree_node* @get_unwidened(%union.tree_node* %1957, %union.tree_node* null)
  store %union.tree_node* %call5493, %union.tree_node** %tem, align 8
  %1958 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %cmp5494 = icmp ne %union.tree_node* %call5493, %1958
  br i1 %cmp5494, label %land.lhs.true.5496, label %if.else.5527

land.lhs.true.5496:                               ; preds = %land.lhs.true.5492
  %1959 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %1960 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5497 = bitcast %union.tree_node* %1960 to %struct.tree_common*
  %type5498 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5497, i32 0, i32 1
  %1961 = load %union.tree_node*, %union.tree_node** %type5498, align 8
  %call5499 = call %union.tree_node* @get_unwidened(%union.tree_node* %1959, %union.tree_node* %1961)
  store %union.tree_node* %call5499, %union.tree_node** %t1, align 8
  %cmp5500 = icmp ne %union.tree_node* %call5499, null
  br i1 %cmp5500, label %land.lhs.true.5502, label %if.else.5527

land.lhs.true.5502:                               ; preds = %land.lhs.true.5496
  %1962 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common5503 = bitcast %union.tree_node* %1962 to %struct.tree_common*
  %type5504 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5503, i32 0, i32 1
  %1963 = load %union.tree_node*, %union.tree_node** %type5504, align 8
  %1964 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5505 = bitcast %union.tree_node* %1964 to %struct.tree_common*
  %type5506 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5505, i32 0, i32 1
  %1965 = load %union.tree_node*, %union.tree_node** %type5506, align 8
  %cmp5507 = icmp eq %union.tree_node* %1963, %1965
  br i1 %cmp5507, label %if.then.5521, label %lor.lhs.false.5509

lor.lhs.false.5509:                               ; preds = %land.lhs.true.5502
  %1966 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common5510 = bitcast %union.tree_node* %1966 to %struct.tree_common*
  %code5511 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5510, i32 0, i32 2
  %bf.load5512 = load i32, i32* %code5511, align 8
  %bf.clear5513 = and i32 %bf.load5512, 255
  %cmp5514 = icmp eq i32 %bf.clear5513, 25
  br i1 %cmp5514, label %land.lhs.true.5516, label %if.else.5527

land.lhs.true.5516:                               ; preds = %lor.lhs.false.5509
  %1967 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %1968 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5517 = bitcast %union.tree_node* %1968 to %struct.tree_common*
  %type5518 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5517, i32 0, i32 1
  %1969 = load %union.tree_node*, %union.tree_node** %type5518, align 8
  %call5519 = call i32 @int_fits_type_p(%union.tree_node* %1967, %union.tree_node* %1969)
  %tobool5520 = icmp ne i32 %call5519, 0
  br i1 %tobool5520, label %if.then.5521, label %if.else.5527

if.then.5521:                                     ; preds = %land.lhs.true.5516, %land.lhs.true.5502
  %1970 = load i32, i32* %code, align 4
  %1971 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1972 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %1973 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5522 = bitcast %union.tree_node* %1973 to %struct.tree_common*
  %type5523 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5522, i32 0, i32 1
  %1974 = load %union.tree_node*, %union.tree_node** %type5523, align 8
  %1975 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call5524 = call %union.tree_node* @convert(%union.tree_node* %1974, %union.tree_node* %1975)
  %call5525 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %1970, %union.tree_node* %1971, %union.tree_node* %1972, %union.tree_node* %call5524)
  %call5526 = call %union.tree_node* @fold(%union.tree_node* %call5525)
  store %union.tree_node* %call5526, %union.tree_node** %retval
  br label %return

if.else.5527:                                     ; preds = %land.lhs.true.5516, %lor.lhs.false.5509, %land.lhs.true.5496, %land.lhs.true.5492, %land.lhs.true.5485, %if.else.5476
  %1976 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5528 = bitcast %union.tree_node* %1976 to %struct.tree_common*
  %code5529 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5528, i32 0, i32 2
  %bf.load5530 = load i32, i32* %code5529, align 8
  %bf.clear5531 = and i32 %bf.load5530, 255
  %cmp5532 = icmp eq i32 %bf.clear5531, 25
  br i1 %cmp5532, label %land.lhs.true.5534, label %if.else.5560

land.lhs.true.5534:                               ; preds = %if.else.5527
  %1977 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5535 = bitcast %union.tree_node* %1977 to %struct.tree_common*
  %code5536 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5535, i32 0, i32 2
  %bf.load5537 = load i32, i32* %code5536, align 8
  %bf.clear5538 = and i32 %bf.load5537, 255
  %cmp5539 = icmp eq i32 %bf.clear5538, 78
  br i1 %cmp5539, label %land.lhs.true.5548, label %lor.lhs.false.5541

lor.lhs.false.5541:                               ; preds = %land.lhs.true.5534
  %1978 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5542 = bitcast %union.tree_node* %1978 to %struct.tree_common*
  %code5543 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5542, i32 0, i32 2
  %bf.load5544 = load i32, i32* %code5543, align 8
  %bf.clear5545 = and i32 %bf.load5544, 255
  %cmp5546 = icmp eq i32 %bf.clear5545, 79
  br i1 %cmp5546, label %land.lhs.true.5548, label %if.else.5560

land.lhs.true.5548:                               ; preds = %lor.lhs.false.5541, %land.lhs.true.5534
  %1979 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5549 = bitcast %union.tree_node* %1979 to %struct.tree_exp*
  %operands5550 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5549, i32 0, i32 2
  %arrayidx5551 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5550, i32 0, i64 1
  %1980 = load %union.tree_node*, %union.tree_node** %arrayidx5551, align 8
  %common5552 = bitcast %union.tree_node* %1980 to %struct.tree_common*
  %code5553 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5552, i32 0, i32 2
  %bf.load5554 = load i32, i32* %code5553, align 8
  %bf.clear5555 = and i32 %bf.load5554, 255
  %cmp5556 = icmp eq i32 %bf.clear5555, 25
  br i1 %cmp5556, label %if.then.5558, label %if.else.5560

if.then.5558:                                     ; preds = %land.lhs.true.5548
  %1981 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call5559 = call %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %1981)
  store %union.tree_node* %call5559, %union.tree_node** %retval
  br label %return

if.else.5560:                                     ; preds = %land.lhs.true.5548, %lor.lhs.false.5541, %if.else.5527
  %1982 = load i32, i32* %code, align 4
  %cmp5561 = icmp eq i32 %1982, 98
  br i1 %cmp5561, label %land.lhs.true.5563, label %if.end.5613

land.lhs.true.5563:                               ; preds = %if.else.5560
  %1983 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5564 = bitcast %union.tree_node* %1983 to %struct.tree_common*
  %code5565 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5564, i32 0, i32 2
  %bf.load5566 = load i32, i32* %code5565, align 8
  %bf.clear5567 = and i32 %bf.load5566, 255
  %cmp5568 = icmp eq i32 %bf.clear5567, 25
  br i1 %cmp5568, label %land.lhs.true.5570, label %if.end.5613

land.lhs.true.5570:                               ; preds = %land.lhs.true.5563
  %1984 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5571 = bitcast %union.tree_node* %1984 to %struct.tree_common*
  %code5572 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5571, i32 0, i32 2
  %bf.load5573 = load i32, i32* %code5572, align 8
  %bf.clear5574 = and i32 %bf.load5573, 255
  %cmp5575 = icmp eq i32 %bf.clear5574, 80
  br i1 %cmp5575, label %land.lhs.true.5577, label %if.end.5613

land.lhs.true.5577:                               ; preds = %land.lhs.true.5570
  %1985 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5578 = bitcast %union.tree_node* %1985 to %struct.tree_common*
  %side_effects_flag5579 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5578, i32 0, i32 2
  %bf.load5580 = load i32, i32* %side_effects_flag5579, align 8
  %bf.lshr5581 = lshr i32 %bf.load5580, 8
  %bf.clear5582 = and i32 %bf.lshr5581, 1
  %tobool5583 = icmp ne i32 %bf.clear5582, 0
  br i1 %tobool5583, label %if.end.5613, label %land.lhs.true.5584

land.lhs.true.5584:                               ; preds = %land.lhs.true.5577
  %1986 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5585 = call %union.tree_node* @negate_expr(%union.tree_node* %1986)
  store %union.tree_node* %call5585, %union.tree_node** %tem, align 8
  %cmp5586 = icmp ne %union.tree_node* null, %call5585
  br i1 %cmp5586, label %land.lhs.true.5588, label %if.end.5613

land.lhs.true.5588:                               ; preds = %land.lhs.true.5584
  %1987 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5589 = bitcast %union.tree_node* %1987 to %struct.tree_common*
  %code5590 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5589, i32 0, i32 2
  %bf.load5591 = load i32, i32* %code5590, align 8
  %bf.clear5592 = and i32 %bf.load5591, 255
  %cmp5593 = icmp eq i32 %bf.clear5592, 25
  br i1 %cmp5593, label %land.lhs.true.5595, label %if.end.5613

land.lhs.true.5595:                               ; preds = %land.lhs.true.5588
  %1988 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common5596 = bitcast %union.tree_node* %1988 to %struct.tree_common*
  %static_flag5597 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5596, i32 0, i32 2
  %bf.load5598 = load i32, i32* %static_flag5597, align 8
  %bf.lshr5599 = lshr i32 %bf.load5598, 18
  %bf.clear5600 = and i32 %bf.lshr5599, 1
  %tobool5601 = icmp ne i32 %bf.clear5600, 0
  br i1 %tobool5601, label %if.end.5613, label %if.then.5602

if.then.5602:                                     ; preds = %land.lhs.true.5595
  %1989 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1990 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1991 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5603 = bitcast %union.tree_node* %1991 to %struct.tree_exp*
  %operands5604 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5603, i32 0, i32 2
  %arrayidx5605 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5604, i32 0, i64 0
  %1992 = load %union.tree_node*, %union.tree_node** %arrayidx5605, align 8
  %1993 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call5606 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 100, %union.tree_node* %1990, %union.tree_node* %1992, %union.tree_node* %1993)
  %1994 = load %union.tree_node*, %union.tree_node** %type, align 8
  %1995 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5607 = bitcast %union.tree_node* %1995 to %struct.tree_exp*
  %operands5608 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5607, i32 0, i32 2
  %arrayidx5609 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5608, i32 0, i64 0
  %1996 = load %union.tree_node*, %union.tree_node** %arrayidx5609, align 8
  %1997 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5610 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 98, %union.tree_node* %1994, %union.tree_node* %1996, %union.tree_node* %1997)
  %call5611 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 91, %union.tree_node* %1989, %union.tree_node* %call5606, %union.tree_node* %call5610)
  %call5612 = call %union.tree_node* @fold(%union.tree_node* %call5611)
  store %union.tree_node* %call5612, %union.tree_node** %retval
  br label %return

if.end.5613:                                      ; preds = %land.lhs.true.5595, %land.lhs.true.5588, %land.lhs.true.5584, %land.lhs.true.5577, %land.lhs.true.5570, %land.lhs.true.5563, %if.else.5560
  br label %if.end.5614

if.end.5614:                                      ; preds = %if.end.5613
  br label %if.end.5615

if.end.5615:                                      ; preds = %if.end.5614
  br label %if.end.5616

if.end.5616:                                      ; preds = %if.end.5615
  br label %if.end.5617

if.end.5617:                                      ; preds = %if.end.5616
  br label %if.end.5618

if.end.5618:                                      ; preds = %if.end.5617
  %1998 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5619 = call i32 @integer_zerop(%union.tree_node* %1998)
  %tobool5620 = icmp ne i32 %call5619, 0
  br i1 %tobool5620, label %land.lhs.true.5621, label %if.end.5722

land.lhs.true.5621:                               ; preds = %if.end.5618
  %1999 = load i32, i32* %code, align 4
  %cmp5622 = icmp eq i32 %1999, 101
  br i1 %cmp5622, label %land.lhs.true.5627, label %lor.lhs.false.5624

lor.lhs.false.5624:                               ; preds = %land.lhs.true.5621
  %2000 = load i32, i32* %code, align 4
  %cmp5625 = icmp eq i32 %2000, 102
  br i1 %cmp5625, label %land.lhs.true.5627, label %if.end.5722

land.lhs.true.5627:                               ; preds = %lor.lhs.false.5624, %land.lhs.true.5621
  %2001 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5628 = bitcast %union.tree_node* %2001 to %struct.tree_common*
  %code5629 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5628, i32 0, i32 2
  %bf.load5630 = load i32, i32* %code5629, align 8
  %bf.clear5631 = and i32 %bf.load5630, 255
  %cmp5632 = icmp eq i32 %bf.clear5631, 88
  br i1 %cmp5632, label %if.then.5634, label %if.end.5722

if.then.5634:                                     ; preds = %land.lhs.true.5627
  %2002 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5635 = bitcast %union.tree_node* %2002 to %struct.tree_exp*
  %operands5636 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5635, i32 0, i32 2
  %arrayidx5637 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5636, i32 0, i64 0
  %2003 = load %union.tree_node*, %union.tree_node** %arrayidx5637, align 8
  %common5638 = bitcast %union.tree_node* %2003 to %struct.tree_common*
  %code5639 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5638, i32 0, i32 2
  %bf.load5640 = load i32, i32* %code5639, align 8
  %bf.clear5641 = and i32 %bf.load5640, 255
  %cmp5642 = icmp eq i32 %bf.clear5641, 82
  br i1 %cmp5642, label %land.lhs.true.5644, label %if.else.5677

land.lhs.true.5644:                               ; preds = %if.then.5634
  %2004 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5645 = bitcast %union.tree_node* %2004 to %struct.tree_exp*
  %operands5646 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5645, i32 0, i32 2
  %arrayidx5647 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5646, i32 0, i64 0
  %2005 = load %union.tree_node*, %union.tree_node** %arrayidx5647, align 8
  %exp5648 = bitcast %union.tree_node* %2005 to %struct.tree_exp*
  %operands5649 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5648, i32 0, i32 2
  %arrayidx5650 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5649, i32 0, i64 0
  %2006 = load %union.tree_node*, %union.tree_node** %arrayidx5650, align 8
  %call5651 = call i32 @integer_onep(%union.tree_node* %2006)
  %tobool5652 = icmp ne i32 %call5651, 0
  br i1 %tobool5652, label %if.then.5653, label %if.else.5677

if.then.5653:                                     ; preds = %land.lhs.true.5644
  %2007 = load i32, i32* %code, align 4
  %2008 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2009 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5654 = bitcast %union.tree_node* %2009 to %struct.tree_common*
  %type5655 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5654, i32 0, i32 1
  %2010 = load %union.tree_node*, %union.tree_node** %type5655, align 8
  %2011 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5656 = bitcast %union.tree_node* %2011 to %struct.tree_exp*
  %operands5657 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5656, i32 0, i32 2
  %arrayidx5658 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5657, i32 0, i64 0
  %2012 = load %union.tree_node*, %union.tree_node** %arrayidx5658, align 8
  %common5659 = bitcast %union.tree_node* %2012 to %struct.tree_common*
  %type5660 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5659, i32 0, i32 1
  %2013 = load %union.tree_node*, %union.tree_node** %type5660, align 8
  %2014 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5661 = bitcast %union.tree_node* %2014 to %struct.tree_exp*
  %operands5662 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5661, i32 0, i32 2
  %arrayidx5663 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5662, i32 0, i64 1
  %2015 = load %union.tree_node*, %union.tree_node** %arrayidx5663, align 8
  %2016 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5664 = bitcast %union.tree_node* %2016 to %struct.tree_exp*
  %operands5665 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5664, i32 0, i32 2
  %arrayidx5666 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5665, i32 0, i64 0
  %2017 = load %union.tree_node*, %union.tree_node** %arrayidx5666, align 8
  %exp5667 = bitcast %union.tree_node* %2017 to %struct.tree_exp*
  %operands5668 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5667, i32 0, i32 2
  %arrayidx5669 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5668, i32 0, i64 1
  %2018 = load %union.tree_node*, %union.tree_node** %arrayidx5669, align 8
  %call5670 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 83, %union.tree_node* %2013, %union.tree_node* %2015, %union.tree_node* %2018)
  %2019 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5671 = bitcast %union.tree_node* %2019 to %struct.tree_common*
  %type5672 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5671, i32 0, i32 1
  %2020 = load %union.tree_node*, %union.tree_node** %type5672, align 8
  %2021 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5673 = call %union.tree_node* @convert(%union.tree_node* %2020, %union.tree_node* %2021)
  %call5674 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %2010, %union.tree_node* %call5670, %union.tree_node* %call5673)
  %2022 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5675 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2007, %union.tree_node* %2008, %union.tree_node* %call5674, %union.tree_node* %2022)
  %call5676 = call %union.tree_node* @fold(%union.tree_node* %call5675)
  store %union.tree_node* %call5676, %union.tree_node** %retval
  br label %return

if.else.5677:                                     ; preds = %land.lhs.true.5644, %if.then.5634
  %2023 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5678 = bitcast %union.tree_node* %2023 to %struct.tree_exp*
  %operands5679 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5678, i32 0, i32 2
  %arrayidx5680 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5679, i32 0, i64 1
  %2024 = load %union.tree_node*, %union.tree_node** %arrayidx5680, align 8
  %common5681 = bitcast %union.tree_node* %2024 to %struct.tree_common*
  %code5682 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5681, i32 0, i32 2
  %bf.load5683 = load i32, i32* %code5682, align 8
  %bf.clear5684 = and i32 %bf.load5683, 255
  %cmp5685 = icmp eq i32 %bf.clear5684, 82
  br i1 %cmp5685, label %land.lhs.true.5687, label %if.end.5720

land.lhs.true.5687:                               ; preds = %if.else.5677
  %2025 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5688 = bitcast %union.tree_node* %2025 to %struct.tree_exp*
  %operands5689 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5688, i32 0, i32 2
  %arrayidx5690 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5689, i32 0, i64 1
  %2026 = load %union.tree_node*, %union.tree_node** %arrayidx5690, align 8
  %exp5691 = bitcast %union.tree_node* %2026 to %struct.tree_exp*
  %operands5692 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5691, i32 0, i32 2
  %arrayidx5693 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5692, i32 0, i64 0
  %2027 = load %union.tree_node*, %union.tree_node** %arrayidx5693, align 8
  %call5694 = call i32 @integer_onep(%union.tree_node* %2027)
  %tobool5695 = icmp ne i32 %call5694, 0
  br i1 %tobool5695, label %if.then.5696, label %if.end.5720

if.then.5696:                                     ; preds = %land.lhs.true.5687
  %2028 = load i32, i32* %code, align 4
  %2029 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2030 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5697 = bitcast %union.tree_node* %2030 to %struct.tree_common*
  %type5698 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5697, i32 0, i32 1
  %2031 = load %union.tree_node*, %union.tree_node** %type5698, align 8
  %2032 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5699 = bitcast %union.tree_node* %2032 to %struct.tree_exp*
  %operands5700 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5699, i32 0, i32 2
  %arrayidx5701 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5700, i32 0, i64 1
  %2033 = load %union.tree_node*, %union.tree_node** %arrayidx5701, align 8
  %common5702 = bitcast %union.tree_node* %2033 to %struct.tree_common*
  %type5703 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5702, i32 0, i32 1
  %2034 = load %union.tree_node*, %union.tree_node** %type5703, align 8
  %2035 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5704 = bitcast %union.tree_node* %2035 to %struct.tree_exp*
  %operands5705 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5704, i32 0, i32 2
  %arrayidx5706 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5705, i32 0, i64 0
  %2036 = load %union.tree_node*, %union.tree_node** %arrayidx5706, align 8
  %2037 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5707 = bitcast %union.tree_node* %2037 to %struct.tree_exp*
  %operands5708 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5707, i32 0, i32 2
  %arrayidx5709 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5708, i32 0, i64 1
  %2038 = load %union.tree_node*, %union.tree_node** %arrayidx5709, align 8
  %exp5710 = bitcast %union.tree_node* %2038 to %struct.tree_exp*
  %operands5711 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5710, i32 0, i32 2
  %arrayidx5712 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5711, i32 0, i64 1
  %2039 = load %union.tree_node*, %union.tree_node** %arrayidx5712, align 8
  %call5713 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 83, %union.tree_node* %2034, %union.tree_node* %2036, %union.tree_node* %2039)
  %2040 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5714 = bitcast %union.tree_node* %2040 to %struct.tree_common*
  %type5715 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5714, i32 0, i32 1
  %2041 = load %union.tree_node*, %union.tree_node** %type5715, align 8
  %2042 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call5716 = call %union.tree_node* @convert(%union.tree_node* %2041, %union.tree_node* %2042)
  %call5717 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %2031, %union.tree_node* %call5713, %union.tree_node* %call5716)
  %2043 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5718 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2028, %union.tree_node* %2029, %union.tree_node* %call5717, %union.tree_node* %2043)
  %call5719 = call %union.tree_node* @fold(%union.tree_node* %call5718)
  store %union.tree_node* %call5719, %union.tree_node** %retval
  br label %return

if.end.5720:                                      ; preds = %land.lhs.true.5687, %if.else.5677
  br label %if.end.5721

if.end.5721:                                      ; preds = %if.end.5720
  br label %if.end.5722

if.end.5722:                                      ; preds = %if.end.5721, %land.lhs.true.5627, %lor.lhs.false.5624, %if.end.5618
  %2044 = load i32, i32* %code, align 4
  %cmp5723 = icmp eq i32 %2044, 102
  br i1 %cmp5723, label %land.lhs.true.5728, label %lor.lhs.false.5725

lor.lhs.false.5725:                               ; preds = %if.end.5722
  %2045 = load i32, i32* %code, align 4
  %cmp5726 = icmp eq i32 %2045, 101
  br i1 %cmp5726, label %land.lhs.true.5728, label %if.end.5795

land.lhs.true.5728:                               ; preds = %lor.lhs.false.5725, %if.end.5722
  %2046 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5729 = call i32 @integer_zerop(%union.tree_node* %2046)
  %tobool5730 = icmp ne i32 %call5729, 0
  br i1 %tobool5730, label %land.lhs.true.5731, label %if.end.5795

land.lhs.true.5731:                               ; preds = %land.lhs.true.5728
  %2047 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5732 = bitcast %union.tree_node* %2047 to %struct.tree_common*
  %type5733 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5732, i32 0, i32 1
  %2048 = load %union.tree_node*, %union.tree_node** %type5733, align 8
  %common5734 = bitcast %union.tree_node* %2048 to %struct.tree_common*
  %unsigned_flag5735 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5734, i32 0, i32 2
  %bf.load5736 = load i32, i32* %unsigned_flag5735, align 8
  %bf.lshr5737 = lshr i32 %bf.load5736, 13
  %bf.clear5738 = and i32 %bf.lshr5737, 1
  %tobool5739 = icmp ne i32 %bf.clear5738, 0
  br i1 %tobool5739, label %if.end.5795, label %land.lhs.true.5740

land.lhs.true.5740:                               ; preds = %land.lhs.true.5731
  %2049 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5741 = bitcast %union.tree_node* %2049 to %struct.tree_common*
  %code5742 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5741, i32 0, i32 2
  %bf.load5743 = load i32, i32* %code5742, align 8
  %bf.clear5744 = and i32 %bf.load5743, 255
  %cmp5745 = icmp eq i32 %bf.clear5744, 66
  br i1 %cmp5745, label %land.lhs.true.5768, label %lor.lhs.false.5747

lor.lhs.false.5747:                               ; preds = %land.lhs.true.5740
  %2050 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5748 = bitcast %union.tree_node* %2050 to %struct.tree_common*
  %code5749 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5748, i32 0, i32 2
  %bf.load5750 = load i32, i32* %code5749, align 8
  %bf.clear5751 = and i32 %bf.load5750, 255
  %cmp5752 = icmp eq i32 %bf.clear5751, 67
  br i1 %cmp5752, label %land.lhs.true.5768, label %lor.lhs.false.5754

lor.lhs.false.5754:                               ; preds = %lor.lhs.false.5747
  %2051 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5755 = bitcast %union.tree_node* %2051 to %struct.tree_common*
  %code5756 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5755, i32 0, i32 2
  %bf.load5757 = load i32, i32* %code5756, align 8
  %bf.clear5758 = and i32 %bf.load5757, 255
  %cmp5759 = icmp eq i32 %bf.clear5758, 68
  br i1 %cmp5759, label %land.lhs.true.5768, label %lor.lhs.false.5761

lor.lhs.false.5761:                               ; preds = %lor.lhs.false.5754
  %2052 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5762 = bitcast %union.tree_node* %2052 to %struct.tree_common*
  %code5763 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5762, i32 0, i32 2
  %bf.load5764 = load i32, i32* %code5763, align 8
  %bf.clear5765 = and i32 %bf.load5764, 255
  %cmp5766 = icmp eq i32 %bf.clear5765, 69
  br i1 %cmp5766, label %land.lhs.true.5768, label %if.end.5795

land.lhs.true.5768:                               ; preds = %lor.lhs.false.5761, %lor.lhs.false.5754, %lor.lhs.false.5747, %land.lhs.true.5740
  %2053 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5769 = bitcast %union.tree_node* %2053 to %struct.tree_exp*
  %operands5770 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5769, i32 0, i32 2
  %arrayidx5771 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5770, i32 0, i64 1
  %2054 = load %union.tree_node*, %union.tree_node** %arrayidx5771, align 8
  %call5772 = call i32 @integer_pow2p(%union.tree_node* %2054)
  %tobool5773 = icmp ne i32 %call5772, 0
  br i1 %tobool5773, label %if.then.5774, label %if.end.5795

if.then.5774:                                     ; preds = %land.lhs.true.5768
  %2055 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5776 = bitcast %union.tree_node* %2055 to %struct.tree_common*
  %type5777 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5776, i32 0, i32 1
  %2056 = load %union.tree_node*, %union.tree_node** %type5777, align 8
  %call5778 = call %union.tree_node* @unsigned_type(%union.tree_node* %2056)
  store %union.tree_node* %call5778, %union.tree_node** %newtype, align 8
  %2057 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5780 = bitcast %union.tree_node* %2057 to %struct.tree_common*
  %code5781 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5780, i32 0, i32 2
  %bf.load5782 = load i32, i32* %code5781, align 8
  %bf.clear5783 = and i32 %bf.load5782, 255
  %2058 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %2059 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %2060 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5784 = bitcast %union.tree_node* %2060 to %struct.tree_exp*
  %operands5785 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5784, i32 0, i32 2
  %arrayidx5786 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5785, i32 0, i64 0
  %2061 = load %union.tree_node*, %union.tree_node** %arrayidx5786, align 8
  %call5787 = call %union.tree_node* @convert(%union.tree_node* %2059, %union.tree_node* %2061)
  %2062 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %2063 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5788 = bitcast %union.tree_node* %2063 to %struct.tree_exp*
  %operands5789 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5788, i32 0, i32 2
  %arrayidx5790 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5789, i32 0, i64 1
  %2064 = load %union.tree_node*, %union.tree_node** %arrayidx5790, align 8
  %call5791 = call %union.tree_node* @convert(%union.tree_node* %2062, %union.tree_node* %2064)
  %call5792 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear5783, %union.tree_node* %2058, %union.tree_node* %call5787, %union.tree_node* %call5791)
  store %union.tree_node* %call5792, %union.tree_node** %newmod, align 8
  %2065 = load i32, i32* %code, align 4
  %2066 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2067 = load %union.tree_node*, %union.tree_node** %newmod, align 8
  %2068 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %2069 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5793 = call %union.tree_node* @convert(%union.tree_node* %2068, %union.tree_node* %2069)
  %call5794 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2065, %union.tree_node* %2066, %union.tree_node* %2067, %union.tree_node* %call5793)
  store %union.tree_node* %call5794, %union.tree_node** %retval
  br label %return

if.end.5795:                                      ; preds = %land.lhs.true.5768, %lor.lhs.false.5761, %land.lhs.true.5731, %land.lhs.true.5728, %lor.lhs.false.5725
  %2070 = load i32, i32* %code, align 4
  %cmp5796 = icmp eq i32 %2070, 102
  br i1 %cmp5796, label %land.lhs.true.5798, label %if.end.5816

land.lhs.true.5798:                               ; preds = %if.end.5795
  %2071 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5799 = call i32 @integer_zerop(%union.tree_node* %2071)
  %tobool5800 = icmp ne i32 %call5799, 0
  br i1 %tobool5800, label %land.lhs.true.5801, label %if.end.5816

land.lhs.true.5801:                               ; preds = %land.lhs.true.5798
  %2072 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5802 = bitcast %union.tree_node* %2072 to %struct.tree_common*
  %code5803 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5802, i32 0, i32 2
  %bf.load5804 = load i32, i32* %code5803, align 8
  %bf.clear5805 = and i32 %bf.load5804, 255
  %cmp5806 = icmp eq i32 %bf.clear5805, 88
  br i1 %cmp5806, label %land.lhs.true.5808, label %if.end.5816

land.lhs.true.5808:                               ; preds = %land.lhs.true.5801
  %2073 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5809 = bitcast %union.tree_node* %2073 to %struct.tree_exp*
  %operands5810 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5809, i32 0, i32 2
  %arrayidx5811 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5810, i32 0, i64 1
  %2074 = load %union.tree_node*, %union.tree_node** %arrayidx5811, align 8
  %call5812 = call i32 @integer_onep(%union.tree_node* %2074)
  %tobool5813 = icmp ne i32 %call5812, 0
  br i1 %tobool5813, label %if.then.5814, label %if.end.5816

if.then.5814:                                     ; preds = %land.lhs.true.5808
  %2075 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2076 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call5815 = call %union.tree_node* @convert(%union.tree_node* %2075, %union.tree_node* %2076)
  store %union.tree_node* %call5815, %union.tree_node** %retval
  br label %return

if.end.5816:                                      ; preds = %land.lhs.true.5808, %land.lhs.true.5801, %land.lhs.true.5798, %if.end.5795
  %2077 = load i32, i32* %code, align 4
  %cmp5817 = icmp eq i32 %2077, 101
  br i1 %cmp5817, label %land.lhs.true.5822, label %lor.lhs.false.5819

lor.lhs.false.5819:                               ; preds = %if.end.5816
  %2078 = load i32, i32* %code, align 4
  %cmp5820 = icmp eq i32 %2078, 102
  br i1 %cmp5820, label %land.lhs.true.5822, label %if.end.5846

land.lhs.true.5822:                               ; preds = %lor.lhs.false.5819, %if.end.5816
  %2079 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5823 = bitcast %union.tree_node* %2079 to %struct.tree_common*
  %code5824 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5823, i32 0, i32 2
  %bf.load5825 = load i32, i32* %code5824, align 8
  %bf.clear5826 = and i32 %bf.load5825, 255
  %cmp5827 = icmp eq i32 %bf.clear5826, 88
  br i1 %cmp5827, label %land.lhs.true.5829, label %if.end.5846

land.lhs.true.5829:                               ; preds = %land.lhs.true.5822
  %2080 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5830 = bitcast %union.tree_node* %2080 to %struct.tree_exp*
  %operands5831 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5830, i32 0, i32 2
  %arrayidx5832 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5831, i32 0, i64 1
  %2081 = load %union.tree_node*, %union.tree_node** %arrayidx5832, align 8
  %call5833 = call i32 @integer_pow2p(%union.tree_node* %2081)
  %tobool5834 = icmp ne i32 %call5833, 0
  br i1 %tobool5834, label %land.lhs.true.5835, label %if.end.5846

land.lhs.true.5835:                               ; preds = %land.lhs.true.5829
  %2082 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp5836 = bitcast %union.tree_node* %2082 to %struct.tree_exp*
  %operands5837 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5836, i32 0, i32 2
  %arrayidx5838 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5837, i32 0, i64 1
  %2083 = load %union.tree_node*, %union.tree_node** %arrayidx5838, align 8
  %2084 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5839 = call i32 @operand_equal_p(%union.tree_node* %2083, %union.tree_node* %2084, i32 0)
  %tobool5840 = icmp ne i32 %call5839, 0
  br i1 %tobool5840, label %if.then.5841, label %if.end.5846

if.then.5841:                                     ; preds = %land.lhs.true.5835
  %2085 = load i32, i32* %code, align 4
  %cmp5842 = icmp eq i32 %2085, 101
  %cond5844 = select i1 %cmp5842, i32 102, i32 101
  %2086 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2087 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2088 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5845 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond5844, %union.tree_node* %2086, %union.tree_node* %2087, %union.tree_node* %2088)
  store %union.tree_node* %call5845, %union.tree_node** %retval
  br label %return

if.end.5846:                                      ; preds = %land.lhs.true.5835, %land.lhs.true.5829, %land.lhs.true.5822, %lor.lhs.false.5819
  %2089 = load i32, i32* %code, align 4
  %cmp5847 = icmp eq i32 %2089, 97
  br i1 %cmp5847, label %land.lhs.true.5852, label %lor.lhs.false.5849

lor.lhs.false.5849:                               ; preds = %if.end.5846
  %2090 = load i32, i32* %code, align 4
  %cmp5850 = icmp eq i32 %2090, 100
  br i1 %cmp5850, label %land.lhs.true.5852, label %if.else.5888

land.lhs.true.5852:                               ; preds = %lor.lhs.false.5849, %if.end.5846
  %2091 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5853 = bitcast %union.tree_node* %2091 to %struct.tree_common*
  %type5854 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5853, i32 0, i32 1
  %2092 = load %union.tree_node*, %union.tree_node** %type5854, align 8
  %common5855 = bitcast %union.tree_node* %2092 to %struct.tree_common*
  %unsigned_flag5856 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5855, i32 0, i32 2
  %bf.load5857 = load i32, i32* %unsigned_flag5856, align 8
  %bf.lshr5858 = lshr i32 %bf.load5857, 13
  %bf.clear5859 = and i32 %bf.lshr5858, 1
  %tobool5860 = icmp ne i32 %bf.clear5859, 0
  br i1 %tobool5860, label %land.lhs.true.5861, label %if.else.5888

land.lhs.true.5861:                               ; preds = %land.lhs.true.5852
  %2093 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5862 = bitcast %union.tree_node* %2093 to %struct.tree_common*
  %code5863 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5862, i32 0, i32 2
  %bf.load5864 = load i32, i32* %code5863, align 8
  %bf.clear5865 = and i32 %bf.load5864, 255
  %cmp5866 = icmp eq i32 %bf.clear5865, 82
  br i1 %cmp5866, label %land.lhs.true.5868, label %if.else.5888

land.lhs.true.5868:                               ; preds = %land.lhs.true.5861
  %2094 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp5869 = bitcast %union.tree_node* %2094 to %struct.tree_exp*
  %operands5870 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5869, i32 0, i32 2
  %arrayidx5871 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5870, i32 0, i64 0
  %2095 = load %union.tree_node*, %union.tree_node** %arrayidx5871, align 8
  %call5872 = call i32 @integer_onep(%union.tree_node* %2095)
  %tobool5873 = icmp ne i32 %call5872, 0
  br i1 %tobool5873, label %if.then.5874, label %if.else.5888

if.then.5874:                                     ; preds = %land.lhs.true.5868
  %2096 = load i32, i32* %code, align 4
  %cmp5875 = icmp eq i32 %2096, 97
  %cond5877 = select i1 %cmp5875, i32 101, i32 102
  %2097 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2098 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5878 = bitcast %union.tree_node* %2098 to %struct.tree_common*
  %type5879 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5878, i32 0, i32 1
  %2099 = load %union.tree_node*, %union.tree_node** %type5879, align 8
  %2100 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2101 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp5880 = bitcast %union.tree_node* %2101 to %struct.tree_exp*
  %operands5881 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5880, i32 0, i32 2
  %arrayidx5882 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5881, i32 0, i64 1
  %2102 = load %union.tree_node*, %union.tree_node** %arrayidx5882, align 8
  %call5883 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 83, %union.tree_node* %2099, %union.tree_node* %2100, %union.tree_node* %2102)
  %2103 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5884 = bitcast %union.tree_node* %2103 to %struct.tree_common*
  %type5885 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5884, i32 0, i32 1
  %2104 = load %union.tree_node*, %union.tree_node** %type5885, align 8
  %2105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5886 = call %union.tree_node* @convert(%union.tree_node* %2104, %union.tree_node* %2105)
  %call5887 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond5877, %union.tree_node* %2097, %union.tree_node* %call5883, %union.tree_node* %call5886)
  store %union.tree_node* %call5887, %union.tree_node** %retval
  br label %return

if.else.5888:                                     ; preds = %land.lhs.true.5868, %land.lhs.true.5861, %land.lhs.true.5852, %lor.lhs.false.5849
  %2106 = load i32, i32* %code, align 4
  %cmp5889 = icmp eq i32 %2106, 97
  br i1 %cmp5889, label %land.lhs.true.5894, label %lor.lhs.false.5891

lor.lhs.false.5891:                               ; preds = %if.else.5888
  %2107 = load i32, i32* %code, align 4
  %cmp5892 = icmp eq i32 %2107, 100
  br i1 %cmp5892, label %land.lhs.true.5894, label %if.end.5956

land.lhs.true.5894:                               ; preds = %lor.lhs.false.5891, %if.else.5888
  %2108 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5895 = bitcast %union.tree_node* %2108 to %struct.tree_common*
  %type5896 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5895, i32 0, i32 1
  %2109 = load %union.tree_node*, %union.tree_node** %type5896, align 8
  %common5897 = bitcast %union.tree_node* %2109 to %struct.tree_common*
  %unsigned_flag5898 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5897, i32 0, i32 2
  %bf.load5899 = load i32, i32* %unsigned_flag5898, align 8
  %bf.lshr5900 = lshr i32 %bf.load5899, 13
  %bf.clear5901 = and i32 %bf.lshr5900, 1
  %tobool5902 = icmp ne i32 %bf.clear5901, 0
  br i1 %tobool5902, label %land.lhs.true.5903, label %if.end.5956

land.lhs.true.5903:                               ; preds = %land.lhs.true.5894
  %2110 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5904 = bitcast %union.tree_node* %2110 to %struct.tree_common*
  %code5905 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5904, i32 0, i32 2
  %bf.load5906 = load i32, i32* %code5905, align 8
  %bf.clear5907 = and i32 %bf.load5906, 255
  %cmp5908 = icmp eq i32 %bf.clear5907, 115
  br i1 %cmp5908, label %land.lhs.true.5917, label %lor.lhs.false.5910

lor.lhs.false.5910:                               ; preds = %land.lhs.true.5903
  %2111 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common5911 = bitcast %union.tree_node* %2111 to %struct.tree_common*
  %code5912 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5911, i32 0, i32 2
  %bf.load5913 = load i32, i32* %code5912, align 8
  %bf.clear5914 = and i32 %bf.load5913, 255
  %cmp5915 = icmp eq i32 %bf.clear5914, 114
  br i1 %cmp5915, label %land.lhs.true.5917, label %if.end.5956

land.lhs.true.5917:                               ; preds = %lor.lhs.false.5910, %land.lhs.true.5903
  %2112 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp5918 = bitcast %union.tree_node* %2112 to %struct.tree_exp*
  %operands5919 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5918, i32 0, i32 2
  %arrayidx5920 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5919, i32 0, i64 0
  %2113 = load %union.tree_node*, %union.tree_node** %arrayidx5920, align 8
  %common5921 = bitcast %union.tree_node* %2113 to %struct.tree_common*
  %code5922 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5921, i32 0, i32 2
  %bf.load5923 = load i32, i32* %code5922, align 8
  %bf.clear5924 = and i32 %bf.load5923, 255
  %cmp5925 = icmp eq i32 %bf.clear5924, 82
  br i1 %cmp5925, label %land.lhs.true.5927, label %if.end.5956

land.lhs.true.5927:                               ; preds = %land.lhs.true.5917
  %2114 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp5928 = bitcast %union.tree_node* %2114 to %struct.tree_exp*
  %operands5929 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5928, i32 0, i32 2
  %arrayidx5930 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5929, i32 0, i64 0
  %2115 = load %union.tree_node*, %union.tree_node** %arrayidx5930, align 8
  %exp5931 = bitcast %union.tree_node* %2115 to %struct.tree_exp*
  %operands5932 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5931, i32 0, i32 2
  %arrayidx5933 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5932, i32 0, i64 0
  %2116 = load %union.tree_node*, %union.tree_node** %arrayidx5933, align 8
  %call5934 = call i32 @integer_onep(%union.tree_node* %2116)
  %tobool5935 = icmp ne i32 %call5934, 0
  br i1 %tobool5935, label %if.then.5936, label %if.end.5956

if.then.5936:                                     ; preds = %land.lhs.true.5927
  %2117 = load i32, i32* %code, align 4
  %cmp5937 = icmp eq i32 %2117, 97
  %cond5939 = select i1 %cmp5937, i32 101, i32 102
  %2118 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2119 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5940 = bitcast %union.tree_node* %2119 to %struct.tree_common*
  %type5941 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5940, i32 0, i32 1
  %2120 = load %union.tree_node*, %union.tree_node** %type5941, align 8
  %2121 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5942 = bitcast %union.tree_node* %2121 to %struct.tree_common*
  %type5943 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5942, i32 0, i32 1
  %2122 = load %union.tree_node*, %union.tree_node** %type5943, align 8
  %2123 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2124 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp5944 = bitcast %union.tree_node* %2124 to %struct.tree_exp*
  %operands5945 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5944, i32 0, i32 2
  %arrayidx5946 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5945, i32 0, i64 0
  %2125 = load %union.tree_node*, %union.tree_node** %arrayidx5946, align 8
  %exp5947 = bitcast %union.tree_node* %2125 to %struct.tree_exp*
  %operands5948 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp5947, i32 0, i32 2
  %arrayidx5949 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5948, i32 0, i64 1
  %2126 = load %union.tree_node*, %union.tree_node** %arrayidx5949, align 8
  %call5950 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 83, %union.tree_node* %2122, %union.tree_node* %2123, %union.tree_node* %2126)
  %call5951 = call %union.tree_node* @convert(%union.tree_node* %2120, %union.tree_node* %call5950)
  %2127 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5952 = bitcast %union.tree_node* %2127 to %struct.tree_common*
  %type5953 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5952, i32 0, i32 1
  %2128 = load %union.tree_node*, %union.tree_node** %type5953, align 8
  %2129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call5954 = call %union.tree_node* @convert(%union.tree_node* %2128, %union.tree_node* %2129)
  %call5955 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond5939, %union.tree_node* %2118, %union.tree_node* %call5951, %union.tree_node* %call5954)
  store %union.tree_node* %call5955, %union.tree_node** %retval
  br label %return

if.end.5956:                                      ; preds = %land.lhs.true.5927, %land.lhs.true.5917, %lor.lhs.false.5910, %land.lhs.true.5894, %lor.lhs.false.5891
  br label %if.end.5957

if.end.5957:                                      ; preds = %if.end.5956
  %2130 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2131 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call5958 = call i32 @operand_equal_p(%union.tree_node* %2130, %union.tree_node* %2131, i32 0)
  %tobool5959 = icmp ne i32 %call5958, 0
  br i1 %tobool5959, label %if.then.5960, label %if.end.6034

if.then.5960:                                     ; preds = %if.end.5957
  %2132 = load i32, i32* %code, align 4
  switch i32 %2132, label %sw.default.6032 [
    i32 101, label %sw.bb.5961
    i32 100, label %sw.bb.5961
    i32 98, label %sw.bb.5961
    i32 102, label %sw.bb.5999
    i32 99, label %sw.bb.6030
    i32 97, label %sw.bb.6030
  ]

sw.bb.5961:                                       ; preds = %if.then.5960, %if.then.5960, %if.then.5960
  %2133 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5962 = bitcast %union.tree_node* %2133 to %struct.tree_common*
  %type5963 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5962, i32 0, i32 1
  %2134 = load %union.tree_node*, %union.tree_node** %type5963, align 8
  %common5964 = bitcast %union.tree_node* %2134 to %struct.tree_common*
  %code5965 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5964, i32 0, i32 2
  %bf.load5966 = load i32, i32* %code5965, align 8
  %bf.clear5967 = and i32 %bf.load5966, 255
  %cmp5968 = icmp eq i32 %bf.clear5967, 7
  br i1 %cmp5968, label %if.end.5992, label %lor.lhs.false.5970

lor.lhs.false.5970:                               ; preds = %sw.bb.5961
  %2135 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5971 = bitcast %union.tree_node* %2135 to %struct.tree_common*
  %type5972 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5971, i32 0, i32 1
  %2136 = load %union.tree_node*, %union.tree_node** %type5972, align 8
  %common5973 = bitcast %union.tree_node* %2136 to %struct.tree_common*
  %code5974 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5973, i32 0, i32 2
  %bf.load5975 = load i32, i32* %code5974, align 8
  %bf.clear5976 = and i32 %bf.load5975, 255
  %cmp5977 = icmp eq i32 %bf.clear5976, 8
  br i1 %cmp5977, label %land.lhs.true.5979, label %if.then.5990

land.lhs.true.5979:                               ; preds = %lor.lhs.false.5970
  %2137 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5980 = bitcast %union.tree_node* %2137 to %struct.tree_common*
  %type5981 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5980, i32 0, i32 1
  %2138 = load %union.tree_node*, %union.tree_node** %type5981, align 8
  %common5982 = bitcast %union.tree_node* %2138 to %struct.tree_common*
  %type5983 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5982, i32 0, i32 1
  %2139 = load %union.tree_node*, %union.tree_node** %type5983, align 8
  %common5984 = bitcast %union.tree_node* %2139 to %struct.tree_common*
  %code5985 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5984, i32 0, i32 2
  %bf.load5986 = load i32, i32* %code5985, align 8
  %bf.clear5987 = and i32 %bf.load5986, 255
  %cmp5988 = icmp eq i32 %bf.clear5987, 7
  br i1 %cmp5988, label %if.end.5992, label %if.then.5990

if.then.5990:                                     ; preds = %land.lhs.true.5979, %lor.lhs.false.5970
  %2140 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call5991 = call %union.tree_node* @constant_boolean_node(i32 1, %union.tree_node* %2140)
  store %union.tree_node* %call5991, %union.tree_node** %retval
  br label %return

if.end.5992:                                      ; preds = %land.lhs.true.5979, %sw.bb.5961
  store i32 101, i32* %code, align 4
  %2141 = load i32, i32* %code, align 4
  %2142 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5993 = bitcast %union.tree_node* %2142 to %struct.tree_common*
  %code5994 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5993, i32 0, i32 2
  %bf.load5995 = load i32, i32* %code5994, align 8
  %bf.value5996 = and i32 %2141, 255
  %bf.clear5997 = and i32 %bf.load5995, -256
  %bf.set5998 = or i32 %bf.clear5997, %bf.value5996
  store i32 %bf.set5998, i32* %code5994, align 8
  br label %sw.epilog.6033

sw.bb.5999:                                       ; preds = %if.then.5960
  %2143 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6000 = bitcast %union.tree_node* %2143 to %struct.tree_common*
  %type6001 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6000, i32 0, i32 1
  %2144 = load %union.tree_node*, %union.tree_node** %type6001, align 8
  %common6002 = bitcast %union.tree_node* %2144 to %struct.tree_common*
  %code6003 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6002, i32 0, i32 2
  %bf.load6004 = load i32, i32* %code6003, align 8
  %bf.clear6005 = and i32 %bf.load6004, 255
  %cmp6006 = icmp eq i32 %bf.clear6005, 7
  br i1 %cmp6006, label %if.then.6028, label %lor.lhs.false.6008

lor.lhs.false.6008:                               ; preds = %sw.bb.5999
  %2145 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6009 = bitcast %union.tree_node* %2145 to %struct.tree_common*
  %type6010 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6009, i32 0, i32 1
  %2146 = load %union.tree_node*, %union.tree_node** %type6010, align 8
  %common6011 = bitcast %union.tree_node* %2146 to %struct.tree_common*
  %code6012 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6011, i32 0, i32 2
  %bf.load6013 = load i32, i32* %code6012, align 8
  %bf.clear6014 = and i32 %bf.load6013, 255
  %cmp6015 = icmp eq i32 %bf.clear6014, 8
  br i1 %cmp6015, label %land.lhs.true.6017, label %if.end.6029

land.lhs.true.6017:                               ; preds = %lor.lhs.false.6008
  %2147 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6018 = bitcast %union.tree_node* %2147 to %struct.tree_common*
  %type6019 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6018, i32 0, i32 1
  %2148 = load %union.tree_node*, %union.tree_node** %type6019, align 8
  %common6020 = bitcast %union.tree_node* %2148 to %struct.tree_common*
  %type6021 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6020, i32 0, i32 1
  %2149 = load %union.tree_node*, %union.tree_node** %type6021, align 8
  %common6022 = bitcast %union.tree_node* %2149 to %struct.tree_common*
  %code6023 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6022, i32 0, i32 2
  %bf.load6024 = load i32, i32* %code6023, align 8
  %bf.clear6025 = and i32 %bf.load6024, 255
  %cmp6026 = icmp eq i32 %bf.clear6025, 7
  br i1 %cmp6026, label %if.then.6028, label %if.end.6029

if.then.6028:                                     ; preds = %land.lhs.true.6017, %sw.bb.5999
  br label %sw.epilog.6033

if.end.6029:                                      ; preds = %land.lhs.true.6017, %lor.lhs.false.6008
  br label %sw.bb.6030

sw.bb.6030:                                       ; preds = %if.then.5960, %if.then.5960, %if.end.6029
  %2150 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call6031 = call %union.tree_node* @constant_boolean_node(i32 0, %union.tree_node* %2150)
  store %union.tree_node* %call6031, %union.tree_node** %retval
  br label %return

sw.default.6032:                                  ; preds = %if.then.5960
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 6853, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.fold, i32 0, i32 0)) #5
  unreachable

sw.epilog.6033:                                   ; preds = %if.then.6028, %if.end.5992
  br label %if.end.6034

if.end.6034:                                      ; preds = %sw.epilog.6033, %if.end.5957
  %2151 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6035 = bitcast %union.tree_node* %2151 to %struct.tree_common*
  %code6036 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6035, i32 0, i32 2
  %bf.load6037 = load i32, i32* %code6036, align 8
  %bf.clear6038 = and i32 %bf.load6037, 255
  %cmp6039 = icmp eq i32 %bf.clear6038, 25
  br i1 %cmp6039, label %land.lhs.true.6041, label %if.end.6208

land.lhs.true.6041:                               ; preds = %if.end.6034
  %2152 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6042 = bitcast %union.tree_node* %2152 to %struct.tree_common*
  %code6043 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6042, i32 0, i32 2
  %bf.load6044 = load i32, i32* %code6043, align 8
  %bf.clear6045 = and i32 %bf.load6044, 255
  %cmp6046 = icmp ne i32 %bf.clear6045, 25
  br i1 %cmp6046, label %if.then.6048, label %if.end.6208

if.then.6048:                                     ; preds = %land.lhs.true.6041
  store %union.tree_node* null, %union.tree_node** %cval1, align 8
  store %union.tree_node* null, %union.tree_node** %cval2, align 8
  store i32 0, i32* %save_p, align 4
  %2153 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6052 = call i32 @twoval_comparison_p(%union.tree_node* %2153, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p)
  %tobool6053 = icmp ne i32 %call6052, 0
  br i1 %tobool6053, label %land.lhs.true.6054, label %if.end.6207

land.lhs.true.6054:                               ; preds = %if.then.6048
  %2154 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %cmp6055 = icmp ne %union.tree_node* %2154, null
  br i1 %cmp6055, label %land.lhs.true.6057, label %if.end.6207

land.lhs.true.6057:                               ; preds = %land.lhs.true.6054
  %2155 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %cmp6058 = icmp ne %union.tree_node* %2155, null
  br i1 %cmp6058, label %land.lhs.true.6060, label %if.end.6207

land.lhs.true.6060:                               ; preds = %land.lhs.true.6057
  %2156 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6061 = bitcast %union.tree_node* %2156 to %struct.tree_common*
  %constant_flag6062 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6061, i32 0, i32 2
  %bf.load6063 = load i32, i32* %constant_flag6062, align 8
  %bf.lshr6064 = lshr i32 %bf.load6063, 9
  %bf.clear6065 = and i32 %bf.lshr6064, 1
  %tobool6066 = icmp ne i32 %bf.clear6065, 0
  br i1 %tobool6066, label %land.lhs.true.6067, label %land.lhs.true.6074

land.lhs.true.6067:                               ; preds = %land.lhs.true.6060
  %2157 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %common6068 = bitcast %union.tree_node* %2157 to %struct.tree_common*
  %constant_flag6069 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6068, i32 0, i32 2
  %bf.load6070 = load i32, i32* %constant_flag6069, align 8
  %bf.lshr6071 = lshr i32 %bf.load6070, 9
  %bf.clear6072 = and i32 %bf.lshr6071, 1
  %tobool6073 = icmp ne i32 %bf.clear6072, 0
  br i1 %tobool6073, label %if.end.6207, label %land.lhs.true.6074

land.lhs.true.6074:                               ; preds = %land.lhs.true.6067, %land.lhs.true.6060
  %2158 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6075 = bitcast %union.tree_node* %2158 to %struct.tree_common*
  %type6076 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6075, i32 0, i32 1
  %2159 = load %union.tree_node*, %union.tree_node** %type6076, align 8
  %2160 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %common6077 = bitcast %union.tree_node* %2160 to %struct.tree_common*
  %type6078 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6077, i32 0, i32 1
  %2161 = load %union.tree_node*, %union.tree_node** %type6078, align 8
  %cmp6079 = icmp eq %union.tree_node* %2159, %2161
  br i1 %cmp6079, label %land.lhs.true.6081, label %if.end.6207

land.lhs.true.6081:                               ; preds = %land.lhs.true.6074
  %2162 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6082 = bitcast %union.tree_node* %2162 to %struct.tree_common*
  %type6083 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6082, i32 0, i32 1
  %2163 = load %union.tree_node*, %union.tree_node** %type6083, align 8
  %common6084 = bitcast %union.tree_node* %2163 to %struct.tree_common*
  %code6085 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6084, i32 0, i32 2
  %bf.load6086 = load i32, i32* %code6085, align 8
  %bf.clear6087 = and i32 %bf.load6086, 255
  %cmp6088 = icmp eq i32 %bf.clear6087, 6
  br i1 %cmp6088, label %land.lhs.true.6117, label %lor.lhs.false.6090

lor.lhs.false.6090:                               ; preds = %land.lhs.true.6081
  %2164 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6091 = bitcast %union.tree_node* %2164 to %struct.tree_common*
  %type6092 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6091, i32 0, i32 1
  %2165 = load %union.tree_node*, %union.tree_node** %type6092, align 8
  %common6093 = bitcast %union.tree_node* %2165 to %struct.tree_common*
  %code6094 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6093, i32 0, i32 2
  %bf.load6095 = load i32, i32* %code6094, align 8
  %bf.clear6096 = and i32 %bf.load6095, 255
  %cmp6097 = icmp eq i32 %bf.clear6096, 10
  br i1 %cmp6097, label %land.lhs.true.6117, label %lor.lhs.false.6099

lor.lhs.false.6099:                               ; preds = %lor.lhs.false.6090
  %2166 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6100 = bitcast %union.tree_node* %2166 to %struct.tree_common*
  %type6101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6100, i32 0, i32 1
  %2167 = load %union.tree_node*, %union.tree_node** %type6101, align 8
  %common6102 = bitcast %union.tree_node* %2167 to %struct.tree_common*
  %code6103 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6102, i32 0, i32 2
  %bf.load6104 = load i32, i32* %code6103, align 8
  %bf.clear6105 = and i32 %bf.load6104, 255
  %cmp6106 = icmp eq i32 %bf.clear6105, 11
  br i1 %cmp6106, label %land.lhs.true.6117, label %lor.lhs.false.6108

lor.lhs.false.6108:                               ; preds = %lor.lhs.false.6099
  %2168 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6109 = bitcast %union.tree_node* %2168 to %struct.tree_common*
  %type6110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6109, i32 0, i32 1
  %2169 = load %union.tree_node*, %union.tree_node** %type6110, align 8
  %common6111 = bitcast %union.tree_node* %2169 to %struct.tree_common*
  %code6112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6111, i32 0, i32 2
  %bf.load6113 = load i32, i32* %code6112, align 8
  %bf.clear6114 = and i32 %bf.load6113, 255
  %cmp6115 = icmp eq i32 %bf.clear6114, 12
  br i1 %cmp6115, label %land.lhs.true.6117, label %if.end.6207

land.lhs.true.6117:                               ; preds = %lor.lhs.false.6108, %lor.lhs.false.6099, %lor.lhs.false.6090, %land.lhs.true.6081
  %2170 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6118 = bitcast %union.tree_node* %2170 to %struct.tree_common*
  %type6119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6118, i32 0, i32 1
  %2171 = load %union.tree_node*, %union.tree_node** %type6119, align 8
  %type6120 = bitcast %union.tree_node* %2171 to %struct.tree_type*
  %maxval6121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6120, i32 0, i32 13
  %2172 = load %union.tree_node*, %union.tree_node** %maxval6121, align 8
  %tobool6122 = icmp ne %union.tree_node* %2172, null
  br i1 %tobool6122, label %land.lhs.true.6123, label %if.end.6207

land.lhs.true.6123:                               ; preds = %land.lhs.true.6117
  %2173 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %common6124 = bitcast %union.tree_node* %2173 to %struct.tree_common*
  %type6125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6124, i32 0, i32 1
  %2174 = load %union.tree_node*, %union.tree_node** %type6125, align 8
  %type6126 = bitcast %union.tree_node* %2174 to %struct.tree_type*
  %maxval6127 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6126, i32 0, i32 13
  %2175 = load %union.tree_node*, %union.tree_node** %maxval6127, align 8
  %tobool6128 = icmp ne %union.tree_node* %2175, null
  br i1 %tobool6128, label %land.lhs.true.6129, label %if.end.6207

land.lhs.true.6129:                               ; preds = %land.lhs.true.6123
  %2176 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6130 = bitcast %union.tree_node* %2176 to %struct.tree_common*
  %type6131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6130, i32 0, i32 1
  %2177 = load %union.tree_node*, %union.tree_node** %type6131, align 8
  %type6132 = bitcast %union.tree_node* %2177 to %struct.tree_type*
  %minval6133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6132, i32 0, i32 12
  %2178 = load %union.tree_node*, %union.tree_node** %minval6133, align 8
  %2179 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %common6134 = bitcast %union.tree_node* %2179 to %struct.tree_common*
  %type6135 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6134, i32 0, i32 1
  %2180 = load %union.tree_node*, %union.tree_node** %type6135, align 8
  %type6136 = bitcast %union.tree_node* %2180 to %struct.tree_type*
  %maxval6137 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6136, i32 0, i32 13
  %2181 = load %union.tree_node*, %union.tree_node** %maxval6137, align 8
  %call6138 = call i32 @operand_equal_p(%union.tree_node* %2178, %union.tree_node* %2181, i32 0)
  %tobool6139 = icmp ne i32 %call6138, 0
  br i1 %tobool6139, label %if.end.6207, label %if.then.6140

if.then.6140:                                     ; preds = %land.lhs.true.6129
  %2182 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6143 = bitcast %union.tree_node* %2182 to %struct.tree_common*
  %type6144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6143, i32 0, i32 1
  %2183 = load %union.tree_node*, %union.tree_node** %type6144, align 8
  %type6145 = bitcast %union.tree_node* %2183 to %struct.tree_type*
  %maxval6146 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6145, i32 0, i32 13
  %2184 = load %union.tree_node*, %union.tree_node** %maxval6146, align 8
  store %union.tree_node* %2184, %union.tree_node** %maxval6142, align 8
  %2185 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %common6149 = bitcast %union.tree_node* %2185 to %struct.tree_common*
  %type6150 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6149, i32 0, i32 1
  %2186 = load %union.tree_node*, %union.tree_node** %type6150, align 8
  %type6151 = bitcast %union.tree_node* %2186 to %struct.tree_type*
  %minval6152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6151, i32 0, i32 12
  %2187 = load %union.tree_node*, %union.tree_node** %minval6152, align 8
  store %union.tree_node* %2187, %union.tree_node** %minval6148, align 8
  %2188 = load i32, i32* %code, align 4
  %2189 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2190 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2191 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %2192 = load %union.tree_node*, %union.tree_node** %maxval6142, align 8
  %2193 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %2194 = load %union.tree_node*, %union.tree_node** %minval6148, align 8
  %call6154 = call %union.tree_node* @eval_subst(%union.tree_node* %2190, %union.tree_node* %2191, %union.tree_node* %2192, %union.tree_node* %2193, %union.tree_node* %2194)
  %2195 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6155 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2188, %union.tree_node* %2189, %union.tree_node* %call6154, %union.tree_node* %2195)
  %call6156 = call %union.tree_node* @fold(%union.tree_node* %call6155)
  store %union.tree_node* %call6156, %union.tree_node** %high_result, align 8
  %2196 = load i32, i32* %code, align 4
  %2197 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2198 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2199 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %2200 = load %union.tree_node*, %union.tree_node** %maxval6142, align 8
  %2201 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %2202 = load %union.tree_node*, %union.tree_node** %maxval6142, align 8
  %call6158 = call %union.tree_node* @eval_subst(%union.tree_node* %2198, %union.tree_node* %2199, %union.tree_node* %2200, %union.tree_node* %2201, %union.tree_node* %2202)
  %2203 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6159 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2196, %union.tree_node* %2197, %union.tree_node* %call6158, %union.tree_node* %2203)
  %call6160 = call %union.tree_node* @fold(%union.tree_node* %call6159)
  store %union.tree_node* %call6160, %union.tree_node** %equal_result, align 8
  %2204 = load i32, i32* %code, align 4
  %2205 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2206 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2207 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %2208 = load %union.tree_node*, %union.tree_node** %minval6148, align 8
  %2209 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %2210 = load %union.tree_node*, %union.tree_node** %maxval6142, align 8
  %call6162 = call %union.tree_node* @eval_subst(%union.tree_node* %2206, %union.tree_node* %2207, %union.tree_node* %2208, %union.tree_node* %2209, %union.tree_node* %2210)
  %2211 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6163 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2204, %union.tree_node* %2205, %union.tree_node* %call6162, %union.tree_node* %2211)
  %call6164 = call %union.tree_node* @fold(%union.tree_node* %call6163)
  store %union.tree_node* %call6164, %union.tree_node** %low_result, align 8
  %2212 = load %union.tree_node*, %union.tree_node** %high_result, align 8
  %call6165 = call i32 @integer_zerop(%union.tree_node* %2212)
  %tobool6166 = icmp ne i32 %call6165, 0
  br i1 %tobool6166, label %land.lhs.true.6170, label %lor.lhs.false.6167

lor.lhs.false.6167:                               ; preds = %if.then.6140
  %2213 = load %union.tree_node*, %union.tree_node** %high_result, align 8
  %call6168 = call i32 @integer_onep(%union.tree_node* %2213)
  %tobool6169 = icmp ne i32 %call6168, 0
  br i1 %tobool6169, label %land.lhs.true.6170, label %if.end.6206

land.lhs.true.6170:                               ; preds = %lor.lhs.false.6167, %if.then.6140
  %2214 = load %union.tree_node*, %union.tree_node** %equal_result, align 8
  %call6171 = call i32 @integer_zerop(%union.tree_node* %2214)
  %tobool6172 = icmp ne i32 %call6171, 0
  br i1 %tobool6172, label %land.lhs.true.6176, label %lor.lhs.false.6173

lor.lhs.false.6173:                               ; preds = %land.lhs.true.6170
  %2215 = load %union.tree_node*, %union.tree_node** %equal_result, align 8
  %call6174 = call i32 @integer_onep(%union.tree_node* %2215)
  %tobool6175 = icmp ne i32 %call6174, 0
  br i1 %tobool6175, label %land.lhs.true.6176, label %if.end.6206

land.lhs.true.6176:                               ; preds = %lor.lhs.false.6173, %land.lhs.true.6170
  %2216 = load %union.tree_node*, %union.tree_node** %low_result, align 8
  %call6177 = call i32 @integer_zerop(%union.tree_node* %2216)
  %tobool6178 = icmp ne i32 %call6177, 0
  br i1 %tobool6178, label %if.then.6182, label %lor.lhs.false.6179

lor.lhs.false.6179:                               ; preds = %land.lhs.true.6176
  %2217 = load %union.tree_node*, %union.tree_node** %low_result, align 8
  %call6180 = call i32 @integer_onep(%union.tree_node* %2217)
  %tobool6181 = icmp ne i32 %call6180, 0
  br i1 %tobool6181, label %if.then.6182, label %if.end.6206

if.then.6182:                                     ; preds = %lor.lhs.false.6179, %land.lhs.true.6176
  %2218 = load %union.tree_node*, %union.tree_node** %high_result, align 8
  %call6183 = call i32 @integer_onep(%union.tree_node* %2218)
  %mul = mul nsw i32 %call6183, 4
  %2219 = load %union.tree_node*, %union.tree_node** %equal_result, align 8
  %call6184 = call i32 @integer_onep(%union.tree_node* %2219)
  %mul6185 = mul nsw i32 %call6184, 2
  %add6186 = add nsw i32 %mul, %mul6185
  %2220 = load %union.tree_node*, %union.tree_node** %low_result, align 8
  %call6187 = call i32 @integer_onep(%union.tree_node* %2220)
  %add6188 = add nsw i32 %add6186, %call6187
  switch i32 %add6188, label %sw.epilog.6199 [
    i32 0, label %sw.bb.6189
    i32 1, label %sw.bb.6191
    i32 2, label %sw.bb.6192
    i32 3, label %sw.bb.6193
    i32 4, label %sw.bb.6194
    i32 5, label %sw.bb.6195
    i32 6, label %sw.bb.6196
    i32 7, label %sw.bb.6197
  ]

sw.bb.6189:                                       ; preds = %if.then.6182
  %2221 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2222 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %2223 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6190 = call %union.tree_node* @omit_one_operand(%union.tree_node* %2221, %union.tree_node* %2222, %union.tree_node* %2223)
  store %union.tree_node* %call6190, %union.tree_node** %retval
  br label %return

sw.bb.6191:                                       ; preds = %if.then.6182
  store i32 97, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6192:                                       ; preds = %if.then.6182
  store i32 101, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6193:                                       ; preds = %if.then.6182
  store i32 98, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6194:                                       ; preds = %if.then.6182
  store i32 99, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6195:                                       ; preds = %if.then.6182
  store i32 102, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6196:                                       ; preds = %if.then.6182
  store i32 100, i32* %code, align 4
  br label %sw.epilog.6199

sw.bb.6197:                                       ; preds = %if.then.6182
  %2224 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2225 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %2226 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6198 = call %union.tree_node* @omit_one_operand(%union.tree_node* %2224, %union.tree_node* %2225, %union.tree_node* %2226)
  store %union.tree_node* %call6198, %union.tree_node** %retval
  br label %return

sw.epilog.6199:                                   ; preds = %if.then.6182, %sw.bb.6196, %sw.bb.6195, %sw.bb.6194, %sw.bb.6193, %sw.bb.6192, %sw.bb.6191
  %2227 = load i32, i32* %code, align 4
  %2228 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2229 = load %union.tree_node*, %union.tree_node** %cval1, align 8
  %2230 = load %union.tree_node*, %union.tree_node** %cval2, align 8
  %call6200 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2227, %union.tree_node* %2228, %union.tree_node* %2229, %union.tree_node* %2230)
  store %union.tree_node* %call6200, %union.tree_node** %t, align 8
  %2231 = load i32, i32* %save_p, align 4
  %tobool6201 = icmp ne i32 %2231, 0
  br i1 %tobool6201, label %if.then.6202, label %if.else.6204

if.then.6202:                                     ; preds = %sw.epilog.6199
  %2232 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call6203 = call %union.tree_node* @save_expr(%union.tree_node* %2232)
  store %union.tree_node* %call6203, %union.tree_node** %retval
  br label %return

if.else.6204:                                     ; preds = %sw.epilog.6199
  %2233 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call6205 = call %union.tree_node* @fold(%union.tree_node* %2233)
  store %union.tree_node* %call6205, %union.tree_node** %retval
  br label %return

if.end.6206:                                      ; preds = %lor.lhs.false.6179, %lor.lhs.false.6173, %lor.lhs.false.6167
  br label %if.end.6207

if.end.6207:                                      ; preds = %if.end.6206, %land.lhs.true.6129, %land.lhs.true.6123, %land.lhs.true.6117, %lor.lhs.false.6108, %land.lhs.true.6074, %land.lhs.true.6067, %land.lhs.true.6057, %land.lhs.true.6054, %if.then.6048
  br label %if.end.6208

if.end.6208:                                      ; preds = %if.end.6207, %land.lhs.true.6041, %if.end.6034
  %2234 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6209 = bitcast %union.tree_node* %2234 to %struct.tree_common*
  %code6210 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6209, i32 0, i32 2
  %bf.load6211 = load i32, i32* %code6210, align 8
  %bf.clear6212 = and i32 %bf.load6211, 255
  %cmp6213 = icmp eq i32 %bf.clear6212, 39
  br i1 %cmp6213, label %land.lhs.true.6222, label %lor.lhs.false.6215

lor.lhs.false.6215:                               ; preds = %if.end.6208
  %2235 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6216 = bitcast %union.tree_node* %2235 to %struct.tree_common*
  %code6217 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6216, i32 0, i32 2
  %bf.load6218 = load i32, i32* %code6217, align 8
  %bf.clear6219 = and i32 %bf.load6218, 255
  %cmp6220 = icmp eq i32 %bf.clear6219, 40
  br i1 %cmp6220, label %land.lhs.true.6222, label %if.end.6244

land.lhs.true.6222:                               ; preds = %lor.lhs.false.6215, %if.end.6208
  %2236 = load i32, i32* %code, align 4
  %cmp6223 = icmp eq i32 %2236, 101
  br i1 %cmp6223, label %land.lhs.true.6228, label %lor.lhs.false.6225

lor.lhs.false.6225:                               ; preds = %land.lhs.true.6222
  %2237 = load i32, i32* %code, align 4
  %cmp6226 = icmp eq i32 %2237, 102
  br i1 %cmp6226, label %land.lhs.true.6228, label %if.end.6244

land.lhs.true.6228:                               ; preds = %lor.lhs.false.6225, %land.lhs.true.6222
  %2238 = load i32, i32* @optimize, align 4
  %tobool6229 = icmp ne i32 %2238, 0
  br i1 %tobool6229, label %if.then.6237, label %lor.lhs.false.6230

lor.lhs.false.6230:                               ; preds = %land.lhs.true.6228
  %2239 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6231 = bitcast %union.tree_node* %2239 to %struct.tree_common*
  %code6232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6231, i32 0, i32 2
  %bf.load6233 = load i32, i32* %code6232, align 8
  %bf.clear6234 = and i32 %bf.load6233, 255
  %cmp6235 = icmp eq i32 %bf.clear6234, 25
  br i1 %cmp6235, label %if.then.6237, label %if.end.6244

if.then.6237:                                     ; preds = %lor.lhs.false.6230, %land.lhs.true.6228
  %2240 = load i32, i32* %code, align 4
  %2241 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2242 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2243 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6238 = call %union.tree_node* @optimize_bit_field_compare(i32 %2240, %union.tree_node* %2241, %union.tree_node* %2242, %union.tree_node* %2243)
  store %union.tree_node* %call6238, %union.tree_node** %t1, align 8
  %2244 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %tobool6239 = icmp ne %union.tree_node* %2244, null
  br i1 %tobool6239, label %cond.true.6240, label %cond.false.6241

cond.true.6240:                                   ; preds = %if.then.6237
  %2245 = load %union.tree_node*, %union.tree_node** %t1, align 8
  br label %cond.end.6242

cond.false.6241:                                  ; preds = %if.then.6237
  %2246 = load %union.tree_node*, %union.tree_node** %t, align 8
  br label %cond.end.6242

cond.end.6242:                                    ; preds = %cond.false.6241, %cond.true.6240
  %cond6243 = phi %union.tree_node* [ %2245, %cond.true.6240 ], [ %2246, %cond.false.6241 ]
  store %union.tree_node* %cond6243, %union.tree_node** %retval
  br label %return

if.end.6244:                                      ; preds = %lor.lhs.false.6230, %lor.lhs.false.6225, %lor.lhs.false.6215
  %2247 = load i32, i32* %code, align 4
  %cmp6245 = icmp eq i32 %2247, 101
  br i1 %cmp6245, label %land.lhs.true.6250, label %lor.lhs.false.6247

lor.lhs.false.6247:                               ; preds = %if.end.6244
  %2248 = load i32, i32* %code, align 4
  %cmp6248 = icmp eq i32 %2248, 102
  br i1 %cmp6248, label %land.lhs.true.6250, label %if.end.6316

land.lhs.true.6250:                               ; preds = %lor.lhs.false.6247, %if.end.6244
  %2249 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6251 = bitcast %union.tree_node* %2249 to %struct.tree_common*
  %type6252 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6251, i32 0, i32 1
  %2250 = load %union.tree_node*, %union.tree_node** %type6252, align 8
  %common6253 = bitcast %union.tree_node* %2250 to %struct.tree_common*
  %code6254 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6253, i32 0, i32 2
  %bf.load6255 = load i32, i32* %code6254, align 8
  %bf.clear6256 = and i32 %bf.load6255, 255
  %cmp6257 = icmp eq i32 %bf.clear6256, 8
  br i1 %cmp6257, label %land.lhs.true.6259, label %if.end.6316

land.lhs.true.6259:                               ; preds = %land.lhs.true.6250
  %2251 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6260 = bitcast %union.tree_node* %2251 to %struct.tree_common*
  %code6261 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6260, i32 0, i32 2
  %bf.load6262 = load i32, i32* %code6261, align 8
  %bf.clear6263 = and i32 %bf.load6262, 255
  %cmp6264 = icmp eq i32 %bf.clear6263, 125
  br i1 %cmp6264, label %if.then.6287, label %lor.lhs.false.6266

lor.lhs.false.6266:                               ; preds = %land.lhs.true.6259
  %2252 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6267 = bitcast %union.tree_node* %2252 to %struct.tree_common*
  %code6268 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6267, i32 0, i32 2
  %bf.load6269 = load i32, i32* %code6268, align 8
  %bf.clear6270 = and i32 %bf.load6269, 255
  %cmp6271 = icmp eq i32 %bf.clear6270, 125
  br i1 %cmp6271, label %if.then.6287, label %lor.lhs.false.6273

lor.lhs.false.6273:                               ; preds = %lor.lhs.false.6266
  %2253 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6274 = bitcast %union.tree_node* %2253 to %struct.tree_common*
  %code6275 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6274, i32 0, i32 2
  %bf.load6276 = load i32, i32* %code6275, align 8
  %bf.clear6277 = and i32 %bf.load6276, 255
  %cmp6278 = icmp eq i32 %bf.clear6277, 27
  br i1 %cmp6278, label %if.then.6287, label %lor.lhs.false.6280

lor.lhs.false.6280:                               ; preds = %lor.lhs.false.6273
  %2254 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6281 = bitcast %union.tree_node* %2254 to %struct.tree_common*
  %code6282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6281, i32 0, i32 2
  %bf.load6283 = load i32, i32* %code6282, align 8
  %bf.clear6284 = and i32 %bf.load6283, 255
  %cmp6285 = icmp eq i32 %bf.clear6284, 27
  br i1 %cmp6285, label %if.then.6287, label %if.end.6316

if.then.6287:                                     ; preds = %lor.lhs.false.6280, %lor.lhs.false.6273, %lor.lhs.false.6266, %land.lhs.true.6259
  %2255 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6289 = bitcast %union.tree_node* %2255 to %struct.tree_common*
  %type6290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6289, i32 0, i32 1
  %2256 = load %union.tree_node*, %union.tree_node** %type6290, align 8
  %common6291 = bitcast %union.tree_node* %2256 to %struct.tree_common*
  %type6292 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6291, i32 0, i32 1
  %2257 = load %union.tree_node*, %union.tree_node** %type6292, align 8
  store %union.tree_node* %2257, %union.tree_node** %subtype, align 8
  %2258 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6297 = call %union.tree_node* @save_expr(%union.tree_node* %2258)
  store %union.tree_node* %call6297, %union.tree_node** %arg0, align 8
  %2259 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6298 = call %union.tree_node* @save_expr(%union.tree_node* %2259)
  store %union.tree_node* %call6298, %union.tree_node** %arg1, align 8
  %2260 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %2261 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6299 = call %union.tree_node* @build1(i32 127, %union.tree_node* %2260, %union.tree_node* %2261)
  %call6300 = call %union.tree_node* @fold(%union.tree_node* %call6299)
  store %union.tree_node* %call6300, %union.tree_node** %real0, align 8
  %2262 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %2263 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6301 = call %union.tree_node* @build1(i32 128, %union.tree_node* %2262, %union.tree_node* %2263)
  %call6302 = call %union.tree_node* @fold(%union.tree_node* %call6301)
  store %union.tree_node* %call6302, %union.tree_node** %imag0, align 8
  %2264 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %2265 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6303 = call %union.tree_node* @build1(i32 127, %union.tree_node* %2264, %union.tree_node* %2265)
  %call6304 = call %union.tree_node* @fold(%union.tree_node* %call6303)
  store %union.tree_node* %call6304, %union.tree_node** %real1, align 8
  %2266 = load %union.tree_node*, %union.tree_node** %subtype, align 8
  %2267 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6305 = call %union.tree_node* @build1(i32 128, %union.tree_node* %2266, %union.tree_node* %2267)
  %call6306 = call %union.tree_node* @fold(%union.tree_node* %call6305)
  store %union.tree_node* %call6306, %union.tree_node** %imag1, align 8
  %2268 = load i32, i32* %code, align 4
  %cmp6307 = icmp eq i32 %2268, 101
  %cond6309 = select i1 %cmp6307, i32 91, i32 92
  %2269 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2270 = load i32, i32* %code, align 4
  %2271 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2272 = load %union.tree_node*, %union.tree_node** %real0, align 8
  %2273 = load %union.tree_node*, %union.tree_node** %real1, align 8
  %call6310 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2270, %union.tree_node* %2271, %union.tree_node* %2272, %union.tree_node* %2273)
  %call6311 = call %union.tree_node* @fold(%union.tree_node* %call6310)
  %2274 = load i32, i32* %code, align 4
  %2275 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2276 = load %union.tree_node*, %union.tree_node** %imag0, align 8
  %2277 = load %union.tree_node*, %union.tree_node** %imag1, align 8
  %call6312 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2274, %union.tree_node* %2275, %union.tree_node* %2276, %union.tree_node* %2277)
  %call6313 = call %union.tree_node* @fold(%union.tree_node* %call6312)
  %call6314 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond6309, %union.tree_node* %2269, %union.tree_node* %call6311, %union.tree_node* %call6313)
  %call6315 = call %union.tree_node* @fold(%union.tree_node* %call6314)
  store %union.tree_node* %call6315, %union.tree_node** %retval
  br label %return

if.end.6316:                                      ; preds = %lor.lhs.false.6280, %land.lhs.true.6250, %lor.lhs.false.6247
  %2278 = load i32, i32* %code, align 4
  %cmp6317 = icmp eq i32 %2278, 101
  br i1 %cmp6317, label %land.lhs.true.6322, label %lor.lhs.false.6319

lor.lhs.false.6319:                               ; preds = %if.end.6316
  %2279 = load i32, i32* %code, align 4
  %cmp6320 = icmp eq i32 %2279, 102
  br i1 %cmp6320, label %land.lhs.true.6322, label %if.end.6404

land.lhs.true.6322:                               ; preds = %lor.lhs.false.6319, %if.end.6316
  %2280 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6323 = call i32 @integer_zerop(%union.tree_node* %2280)
  %tobool6324 = icmp ne i32 %call6323, 0
  br i1 %tobool6324, label %land.lhs.true.6325, label %if.end.6404

land.lhs.true.6325:                               ; preds = %land.lhs.true.6322
  %2281 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6326 = bitcast %union.tree_node* %2281 to %struct.tree_common*
  %code6327 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6326, i32 0, i32 2
  %bf.load6328 = load i32, i32* %code6327, align 8
  %bf.clear6329 = and i32 %bf.load6328, 255
  %cmp6330 = icmp eq i32 %bf.clear6329, 53
  br i1 %cmp6330, label %land.lhs.true.6332, label %if.end.6404

land.lhs.true.6332:                               ; preds = %land.lhs.true.6325
  %2282 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6333 = bitcast %union.tree_node* %2282 to %struct.tree_exp*
  %operands6334 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6333, i32 0, i32 2
  %arrayidx6335 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6334, i32 0, i64 0
  %2283 = load %union.tree_node*, %union.tree_node** %arrayidx6335, align 8
  %common6336 = bitcast %union.tree_node* %2283 to %struct.tree_common*
  %code6337 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6336, i32 0, i32 2
  %bf.load6338 = load i32, i32* %code6337, align 8
  %bf.clear6339 = and i32 %bf.load6338, 255
  %cmp6340 = icmp eq i32 %bf.clear6339, 121
  br i1 %cmp6340, label %if.then.6342, label %if.end.6404

if.then.6342:                                     ; preds = %land.lhs.true.6332
  %2284 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6344 = bitcast %union.tree_node* %2284 to %struct.tree_exp*
  %operands6345 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6344, i32 0, i32 2
  %arrayidx6346 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6345, i32 0, i64 0
  %2285 = load %union.tree_node*, %union.tree_node** %arrayidx6346, align 8
  %exp6347 = bitcast %union.tree_node* %2285 to %struct.tree_exp*
  %operands6348 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6347, i32 0, i32 2
  %arrayidx6349 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6348, i32 0, i64 0
  %2286 = load %union.tree_node*, %union.tree_node** %arrayidx6349, align 8
  store %union.tree_node* %2286, %union.tree_node** %fndecl, align 8
  %2287 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common6351 = bitcast %union.tree_node* %2287 to %struct.tree_common*
  %code6352 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6351, i32 0, i32 2
  %bf.load6353 = load i32, i32* %code6352, align 8
  %bf.clear6354 = and i32 %bf.load6353, 255
  %cmp6355 = icmp eq i32 %bf.clear6354, 30
  br i1 %cmp6355, label %land.lhs.true.6357, label %if.end.6403

land.lhs.true.6357:                               ; preds = %if.then.6342
  %2288 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl6358 = bitcast %union.tree_node* %2288 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl6358, i32 0, i32 5
  %2289 = bitcast i48* %built_in_class to i64*
  %bf.load6359 = load i64, i64* %2289, align 8
  %bf.lshr6360 = lshr i64 %bf.load6359, 29
  %bf.clear6361 = and i64 %bf.lshr6360, 3
  %bf.cast6362 = trunc i64 %bf.clear6361 to i32
  %cmp6363 = icmp ne i32 %bf.cast6362, 0
  br i1 %cmp6363, label %land.lhs.true.6365, label %if.end.6403

land.lhs.true.6365:                               ; preds = %land.lhs.true.6357
  %2290 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl6366 = bitcast %union.tree_node* %2290 to %struct.tree_decl*
  %built_in_class6367 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl6366, i32 0, i32 5
  %2291 = bitcast i48* %built_in_class6367 to i64*
  %bf.load6368 = load i64, i64* %2291, align 8
  %bf.lshr6369 = lshr i64 %bf.load6368, 29
  %bf.clear6370 = and i64 %bf.lshr6369, 3
  %bf.cast6371 = trunc i64 %bf.clear6370 to i32
  %cmp6372 = icmp ne i32 %bf.cast6371, 2
  br i1 %cmp6372, label %land.lhs.true.6374, label %if.end.6403

land.lhs.true.6374:                               ; preds = %land.lhs.true.6365
  %2292 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl6375 = bitcast %union.tree_node* %2292 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl6375, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %2293 = load i32, i32* %f, align 4
  %cmp6376 = icmp eq i32 %2293, 31
  br i1 %cmp6376, label %land.lhs.true.6378, label %if.end.6403

land.lhs.true.6378:                               ; preds = %land.lhs.true.6374
  %2294 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6379 = bitcast %union.tree_node* %2294 to %struct.tree_exp*
  %operands6380 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6379, i32 0, i32 2
  %arrayidx6381 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6380, i32 0, i64 1
  %2295 = load %union.tree_node*, %union.tree_node** %arrayidx6381, align 8
  store %union.tree_node* %2295, %union.tree_node** %arglist, align 8
  %tobool6382 = icmp ne %union.tree_node* %2295, null
  br i1 %tobool6382, label %land.lhs.true.6383, label %if.end.6403

land.lhs.true.6383:                               ; preds = %land.lhs.true.6378
  %2296 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %list6384 = bitcast %union.tree_node* %2296 to %struct.tree_list*
  %value6385 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6384, i32 0, i32 2
  %2297 = load %union.tree_node*, %union.tree_node** %value6385, align 8
  %common6386 = bitcast %union.tree_node* %2297 to %struct.tree_common*
  %type6387 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6386, i32 0, i32 1
  %2298 = load %union.tree_node*, %union.tree_node** %type6387, align 8
  %common6388 = bitcast %union.tree_node* %2298 to %struct.tree_common*
  %code6389 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6388, i32 0, i32 2
  %bf.load6390 = load i32, i32* %code6389, align 8
  %bf.clear6391 = and i32 %bf.load6390, 255
  %cmp6392 = icmp eq i32 %bf.clear6391, 13
  br i1 %cmp6392, label %land.lhs.true.6394, label %if.end.6403

land.lhs.true.6394:                               ; preds = %land.lhs.true.6383
  %2299 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %common6395 = bitcast %union.tree_node* %2299 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6395, i32 0, i32 0
  %2300 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool6396 = icmp ne %union.tree_node* %2300, null
  br i1 %tobool6396, label %if.end.6403, label %if.then.6397

if.then.6397:                                     ; preds = %land.lhs.true.6394
  %2301 = load i32, i32* %code, align 4
  %2302 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2303 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %2304 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %list6398 = bitcast %union.tree_node* %2304 to %struct.tree_list*
  %value6399 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6398, i32 0, i32 2
  %2305 = load %union.tree_node*, %union.tree_node** %value6399, align 8
  %call6400 = call %union.tree_node* @build1(i32 41, %union.tree_node* %2303, %union.tree_node* %2305)
  %2306 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call6401 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2301, %union.tree_node* %2302, %union.tree_node* %call6400, %union.tree_node* %2306)
  %call6402 = call %union.tree_node* @fold(%union.tree_node* %call6401)
  store %union.tree_node* %call6402, %union.tree_node** %retval
  br label %return

if.end.6403:                                      ; preds = %land.lhs.true.6394, %land.lhs.true.6383, %land.lhs.true.6378, %land.lhs.true.6374, %land.lhs.true.6365, %land.lhs.true.6357, %if.then.6342
  br label %if.end.6404

if.end.6404:                                      ; preds = %if.end.6403, %land.lhs.true.6332, %land.lhs.true.6325, %land.lhs.true.6322, %lor.lhs.false.6319
  %2307 = load i32, i32* %code, align 4
  %cmp6405 = icmp eq i32 %2307, 98
  br i1 %cmp6405, label %if.then.6410, label %lor.lhs.false.6407

lor.lhs.false.6407:                               ; preds = %if.end.6404
  %2308 = load i32, i32* %code, align 4
  %cmp6408 = icmp eq i32 %2308, 99
  br i1 %cmp6408, label %if.then.6410, label %if.end.6412

if.then.6410:                                     ; preds = %lor.lhs.false.6407, %if.end.6404
  %2309 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %2309, %union.tree_node** %tem, align 8
  %2310 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %2310, %union.tree_node** %arg0, align 8
  %2311 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %2311, %union.tree_node** %arg1, align 8
  %2312 = load i32, i32* %code, align 4
  %call6411 = call i32 @swap_tree_comparison(i32 %2312)
  store i32 %call6411, i32* %code, align 4
  br label %if.end.6412

if.end.6412:                                      ; preds = %if.then.6410, %lor.lhs.false.6407
  store %union.tree_node* null, %union.tree_node** %t1, align 8
  store i32 0, i32* %invert, align 4
  %2313 = load i32, i32* %code, align 4
  %cmp6413 = icmp eq i32 %2313, 102
  br i1 %cmp6413, label %if.then.6418, label %lor.lhs.false.6415

lor.lhs.false.6415:                               ; preds = %if.end.6412
  %2314 = load i32, i32* %code, align 4
  %cmp6416 = icmp eq i32 %2314, 100
  br i1 %cmp6416, label %if.then.6418, label %if.end.6420

if.then.6418:                                     ; preds = %lor.lhs.false.6415, %if.end.6412
  store i32 1, i32* %invert, align 4
  %2315 = load i32, i32* %code, align 4
  %call6419 = call i32 @invert_tree_comparison(i32 %2315)
  store i32 %call6419, i32* %code, align 4
  br label %if.end.6420

if.end.6420:                                      ; preds = %if.then.6418, %lor.lhs.false.6415
  %2316 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6421 = bitcast %union.tree_node* %2316 to %struct.tree_common*
  %code6422 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6421, i32 0, i32 2
  %bf.load6423 = load i32, i32* %code6422, align 8
  %bf.clear6424 = and i32 %bf.load6423, 255
  %cmp6425 = icmp eq i32 %bf.clear6424, 25
  br i1 %cmp6425, label %land.lhs.true.6427, label %if.else.6517

land.lhs.true.6427:                               ; preds = %if.end.6420
  %2317 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6428 = bitcast %union.tree_node* %2317 to %struct.tree_common*
  %code6429 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6428, i32 0, i32 2
  %bf.load6430 = load i32, i32* %code6429, align 8
  %bf.clear6431 = and i32 %bf.load6430, 255
  %cmp6432 = icmp eq i32 %bf.clear6431, 25
  br i1 %cmp6432, label %if.then.6434, label %if.else.6517

if.then.6434:                                     ; preds = %land.lhs.true.6427
  %2318 = load i32, i32* %code, align 4
  %cmp6435 = icmp eq i32 %2318, 101
  br i1 %cmp6435, label %if.then.6437, label %if.else.6441

if.then.6437:                                     ; preds = %if.then.6434
  %2319 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2320 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6438 = call i32 @tree_int_cst_equal(%union.tree_node* %2319, %union.tree_node* %2320)
  %conv6439 = sext i32 %call6438 to i64
  %call6440 = call %union.tree_node* @build_int_2_wide(i64 %conv6439, i64 0)
  store %union.tree_node* %call6440, %union.tree_node** %t1, align 8
  br label %if.end.6516

if.else.6441:                                     ; preds = %if.then.6434
  %2321 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6442 = bitcast %union.tree_node* %2321 to %struct.tree_common*
  %type6443 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6442, i32 0, i32 1
  %2322 = load %union.tree_node*, %union.tree_node** %type6443, align 8
  %common6444 = bitcast %union.tree_node* %2322 to %struct.tree_common*
  %unsigned_flag6445 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6444, i32 0, i32 2
  %bf.load6446 = load i32, i32* %unsigned_flag6445, align 8
  %bf.lshr6447 = lshr i32 %bf.load6446, 13
  %bf.clear6448 = and i32 %bf.lshr6447, 1
  %tobool6449 = icmp ne i32 %bf.clear6448, 0
  br i1 %tobool6449, label %cond.true.6450, label %cond.false.6481

cond.true.6450:                                   ; preds = %if.else.6441
  %2323 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6451 = bitcast %union.tree_node* %2323 to %struct.tree_int_cst*
  %int_cst6452 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6451, i32 0, i32 2
  %high6453 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6452, i32 0, i32 1
  %2324 = load i64, i64* %high6453, align 8
  %2325 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6454 = bitcast %union.tree_node* %2325 to %struct.tree_int_cst*
  %int_cst6455 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6454, i32 0, i32 2
  %high6456 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6455, i32 0, i32 1
  %2326 = load i64, i64* %high6456, align 8
  %cmp6457 = icmp ult i64 %2324, %2326
  br i1 %cmp6457, label %lor.end.6479, label %lor.rhs.6459

lor.rhs.6459:                                     ; preds = %cond.true.6450
  %2327 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6460 = bitcast %union.tree_node* %2327 to %struct.tree_int_cst*
  %int_cst6461 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6460, i32 0, i32 2
  %high6462 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6461, i32 0, i32 1
  %2328 = load i64, i64* %high6462, align 8
  %2329 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6463 = bitcast %union.tree_node* %2329 to %struct.tree_int_cst*
  %int_cst6464 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6463, i32 0, i32 2
  %high6465 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6464, i32 0, i32 1
  %2330 = load i64, i64* %high6465, align 8
  %cmp6466 = icmp eq i64 %2328, %2330
  br i1 %cmp6466, label %land.rhs.6468, label %land.end.6477

land.rhs.6468:                                    ; preds = %lor.rhs.6459
  %2331 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6469 = bitcast %union.tree_node* %2331 to %struct.tree_int_cst*
  %int_cst6470 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6469, i32 0, i32 2
  %low6471 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6470, i32 0, i32 0
  %2332 = load i64, i64* %low6471, align 8
  %2333 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6472 = bitcast %union.tree_node* %2333 to %struct.tree_int_cst*
  %int_cst6473 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6472, i32 0, i32 2
  %low6474 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6473, i32 0, i32 0
  %2334 = load i64, i64* %low6474, align 8
  %cmp6475 = icmp ult i64 %2332, %2334
  br label %land.end.6477

land.end.6477:                                    ; preds = %land.rhs.6468, %lor.rhs.6459
  %2335 = phi i1 [ false, %lor.rhs.6459 ], [ %cmp6475, %land.rhs.6468 ]
  br label %lor.end.6479

lor.end.6479:                                     ; preds = %land.end.6477, %cond.true.6450
  %2336 = phi i1 [ true, %cond.true.6450 ], [ %2335, %land.end.6477 ]
  %lor.ext6480 = zext i1 %2336 to i32
  br label %cond.end.6512

cond.false.6481:                                  ; preds = %if.else.6441
  %2337 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6482 = bitcast %union.tree_node* %2337 to %struct.tree_int_cst*
  %int_cst6483 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6482, i32 0, i32 2
  %high6484 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6483, i32 0, i32 1
  %2338 = load i64, i64* %high6484, align 8
  %2339 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6485 = bitcast %union.tree_node* %2339 to %struct.tree_int_cst*
  %int_cst6486 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6485, i32 0, i32 2
  %high6487 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6486, i32 0, i32 1
  %2340 = load i64, i64* %high6487, align 8
  %cmp6488 = icmp slt i64 %2338, %2340
  br i1 %cmp6488, label %lor.end.6510, label %lor.rhs.6490

lor.rhs.6490:                                     ; preds = %cond.false.6481
  %2341 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6491 = bitcast %union.tree_node* %2341 to %struct.tree_int_cst*
  %int_cst6492 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6491, i32 0, i32 2
  %high6493 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6492, i32 0, i32 1
  %2342 = load i64, i64* %high6493, align 8
  %2343 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6494 = bitcast %union.tree_node* %2343 to %struct.tree_int_cst*
  %int_cst6495 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6494, i32 0, i32 2
  %high6496 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6495, i32 0, i32 1
  %2344 = load i64, i64* %high6496, align 8
  %cmp6497 = icmp eq i64 %2342, %2344
  br i1 %cmp6497, label %land.rhs.6499, label %land.end.6508

land.rhs.6499:                                    ; preds = %lor.rhs.6490
  %2345 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %int_cst6500 = bitcast %union.tree_node* %2345 to %struct.tree_int_cst*
  %int_cst6501 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6500, i32 0, i32 2
  %low6502 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6501, i32 0, i32 0
  %2346 = load i64, i64* %low6502, align 8
  %2347 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %int_cst6503 = bitcast %union.tree_node* %2347 to %struct.tree_int_cst*
  %int_cst6504 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6503, i32 0, i32 2
  %low6505 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6504, i32 0, i32 0
  %2348 = load i64, i64* %low6505, align 8
  %cmp6506 = icmp ult i64 %2346, %2348
  br label %land.end.6508

land.end.6508:                                    ; preds = %land.rhs.6499, %lor.rhs.6490
  %2349 = phi i1 [ false, %lor.rhs.6490 ], [ %cmp6506, %land.rhs.6499 ]
  br label %lor.end.6510

lor.end.6510:                                     ; preds = %land.end.6508, %cond.false.6481
  %2350 = phi i1 [ true, %cond.false.6481 ], [ %2349, %land.end.6508 ]
  %lor.ext6511 = zext i1 %2350 to i32
  br label %cond.end.6512

cond.end.6512:                                    ; preds = %lor.end.6510, %lor.end.6479
  %cond6513 = phi i32 [ %lor.ext6480, %lor.end.6479 ], [ %lor.ext6511, %lor.end.6510 ]
  %conv6514 = sext i32 %cond6513 to i64
  %call6515 = call %union.tree_node* @build_int_2_wide(i64 %conv6514, i64 0)
  store %union.tree_node* %call6515, %union.tree_node** %t1, align 8
  br label %if.end.6516

if.end.6516:                                      ; preds = %cond.end.6512, %if.then.6437
  br label %if.end.6576

if.else.6517:                                     ; preds = %land.lhs.true.6427, %if.end.6420
  %2351 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6518 = bitcast %union.tree_node* %2351 to %struct.tree_common*
  %code6519 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6518, i32 0, i32 2
  %bf.load6520 = load i32, i32* %code6519, align 8
  %bf.clear6521 = and i32 %bf.load6520, 255
  %cmp6522 = icmp eq i32 %bf.clear6521, 26
  br i1 %cmp6522, label %land.lhs.true.6524, label %if.end.6575

land.lhs.true.6524:                               ; preds = %if.else.6517
  %2352 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6525 = bitcast %union.tree_node* %2352 to %struct.tree_common*
  %code6526 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6525, i32 0, i32 2
  %bf.load6527 = load i32, i32* %code6526, align 8
  %bf.clear6528 = and i32 %bf.load6527, 255
  %cmp6529 = icmp eq i32 %bf.clear6528, 26
  br i1 %cmp6529, label %if.then.6531, label %if.end.6575

if.then.6531:                                     ; preds = %land.lhs.true.6524
  %2353 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst6532 = bitcast %union.tree_node* %2353 to %struct.tree_real_cst*
  %real_cst6533 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6532, i32 0, i32 2
  %call6534 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %real_cst6533)
  %tobool6535 = icmp ne i32 %call6534, 0
  br i1 %tobool6535, label %if.then.6541, label %lor.lhs.false.6536

lor.lhs.false.6536:                               ; preds = %if.then.6531
  %2354 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst6537 = bitcast %union.tree_node* %2354 to %struct.tree_real_cst*
  %real_cst6538 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6537, i32 0, i32 2
  %call6539 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %real_cst6538)
  %tobool6540 = icmp ne i32 %call6539, 0
  br i1 %tobool6540, label %if.then.6541, label %if.else.6550

if.then.6541:                                     ; preds = %lor.lhs.false.6536, %if.then.6531
  %2355 = load i32, i32* %invert, align 4
  %tobool6542 = icmp ne i32 %2355, 0
  br i1 %tobool6542, label %land.rhs.6543, label %land.end.6546

land.rhs.6543:                                    ; preds = %if.then.6541
  %2356 = load i32, i32* %code, align 4
  %cmp6544 = icmp eq i32 %2356, 97
  br label %land.end.6546

land.end.6546:                                    ; preds = %land.rhs.6543, %if.then.6541
  %2357 = phi i1 [ false, %if.then.6541 ], [ %cmp6544, %land.rhs.6543 ]
  %land.ext6547 = zext i1 %2357 to i32
  %conv6548 = sext i32 %land.ext6547 to i64
  %call6549 = call %union.tree_node* @build_int_2_wide(i64 %conv6548, i64 0)
  store %union.tree_node* %call6549, %union.tree_node** %t1, align 8
  br label %if.end.6574

if.else.6550:                                     ; preds = %lor.lhs.false.6536
  %2358 = load i32, i32* %code, align 4
  %cmp6551 = icmp eq i32 %2358, 101
  br i1 %cmp6551, label %if.then.6553, label %if.else.6563

if.then.6553:                                     ; preds = %if.else.6550
  %2359 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst6554 = bitcast %union.tree_node* %2359 to %struct.tree_real_cst*
  %real_cst6555 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6554, i32 0, i32 2
  %2360 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst6556 = bitcast %union.tree_node* %2360 to %struct.tree_real_cst*
  %real_cst6557 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6556, i32 0, i32 2
  %call6558 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %real_cst6555, %struct.realvaluetype* byval align 8 %real_cst6557)
  %cmp6559 = icmp eq i32 %call6558, 0
  %conv6560 = zext i1 %cmp6559 to i32
  %conv6561 = sext i32 %conv6560 to i64
  %call6562 = call %union.tree_node* @build_int_2_wide(i64 %conv6561, i64 0)
  store %union.tree_node* %call6562, %union.tree_node** %t1, align 8
  br label %if.end.6573

if.else.6563:                                     ; preds = %if.else.6550
  %2361 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %real_cst6564 = bitcast %union.tree_node* %2361 to %struct.tree_real_cst*
  %real_cst6565 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6564, i32 0, i32 2
  %2362 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst6566 = bitcast %union.tree_node* %2362 to %struct.tree_real_cst*
  %real_cst6567 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst6566, i32 0, i32 2
  %call6568 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %real_cst6565, %struct.realvaluetype* byval align 8 %real_cst6567)
  %cmp6569 = icmp eq i32 %call6568, -1
  %conv6570 = zext i1 %cmp6569 to i32
  %conv6571 = sext i32 %conv6570 to i64
  %call6572 = call %union.tree_node* @build_int_2_wide(i64 %conv6571, i64 0)
  store %union.tree_node* %call6572, %union.tree_node** %t1, align 8
  br label %if.end.6573

if.end.6573:                                      ; preds = %if.else.6563, %if.then.6553
  br label %if.end.6574

if.end.6574:                                      ; preds = %if.end.6573, %land.end.6546
  br label %if.end.6575

if.end.6575:                                      ; preds = %if.end.6574, %land.lhs.true.6524, %if.else.6517
  br label %if.end.6576

if.end.6576:                                      ; preds = %if.end.6575, %if.end.6516
  %2363 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp6577 = icmp eq %union.tree_node* %2363, null
  br i1 %cmp6577, label %if.then.6579, label %if.end.6580

if.then.6579:                                     ; preds = %if.end.6576
  %2364 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2364, %union.tree_node** %retval
  br label %return

if.end.6580:                                      ; preds = %if.end.6576
  %2365 = load i32, i32* %invert, align 4
  %tobool6581 = icmp ne i32 %2365, 0
  br i1 %tobool6581, label %if.then.6582, label %if.end.6586

if.then.6582:                                     ; preds = %if.end.6580
  %2366 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %int_cst6583 = bitcast %union.tree_node* %2366 to %struct.tree_int_cst*
  %int_cst6584 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst6583, i32 0, i32 2
  %low6585 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst6584, i32 0, i32 0
  %2367 = load i64, i64* %low6585, align 8
  %xor = xor i64 %2367, 1
  store i64 %xor, i64* %low6585, align 8
  br label %if.end.6586

if.end.6586:                                      ; preds = %if.then.6582, %if.end.6580
  %2368 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2369 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common6587 = bitcast %union.tree_node* %2369 to %struct.tree_common*
  %type6588 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6587, i32 0, i32 1
  store %union.tree_node* %2368, %union.tree_node** %type6588, align 8
  %2370 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common6589 = bitcast %union.tree_node* %2370 to %struct.tree_common*
  %code6590 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6589, i32 0, i32 2
  %bf.load6591 = load i32, i32* %code6590, align 8
  %bf.clear6592 = and i32 %bf.load6591, 255
  %cmp6593 = icmp eq i32 %bf.clear6592, 11
  br i1 %cmp6593, label %if.then.6595, label %if.end.6597

if.then.6595:                                     ; preds = %if.end.6586
  %2371 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call6596 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %2371)
  store %union.tree_node* %call6596, %union.tree_node** %retval
  br label %return

if.end.6597:                                      ; preds = %if.end.6586
  %2372 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %2372, %union.tree_node** %retval
  br label %return

sw.bb.6598:                                       ; preds = %if.end.901
  %2373 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6599 = bitcast %union.tree_node* %2373 to %struct.tree_common*
  %code6600 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6599, i32 0, i32 2
  %bf.load6601 = load i32, i32* %code6600, align 8
  %bf.clear6602 = and i32 %bf.load6601, 255
  %cmp6603 = icmp eq i32 %bf.clear6602, 25
  br i1 %cmp6603, label %if.then.6605, label %if.else.6614

if.then.6605:                                     ; preds = %sw.bb.6598
  %2374 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6606 = call i32 @integer_zerop(%union.tree_node* %2374)
  %tobool6607 = icmp ne i32 %call6606, 0
  %cond6608 = select i1 %tobool6607, i32 2, i32 1
  %idxprom6609 = sext i32 %cond6608 to i64
  %2375 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6610 = bitcast %union.tree_node* %2375 to %struct.tree_exp*
  %operands6611 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6610, i32 0, i32 2
  %arrayidx6612 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6611, i32 0, i64 %idxprom6609
  %2376 = load %union.tree_node*, %union.tree_node** %arrayidx6612, align 8
  %call6613 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %2376)
  store %union.tree_node* %call6613, %union.tree_node** %retval
  br label %return

if.else.6614:                                     ; preds = %sw.bb.6598
  %2377 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2378 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp6615 = bitcast %union.tree_node* %2378 to %struct.tree_exp*
  %operands6616 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6615, i32 0, i32 2
  %arrayidx6617 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6616, i32 0, i64 2
  %2379 = load %union.tree_node*, %union.tree_node** %arrayidx6617, align 8
  %call6618 = call i32 @operand_equal_p(%union.tree_node* %2377, %union.tree_node* %2379, i32 0)
  %tobool6619 = icmp ne i32 %call6618, 0
  br i1 %tobool6619, label %if.then.6620, label %if.end.6622

if.then.6620:                                     ; preds = %if.else.6614
  %2380 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2381 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2382 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6621 = call %union.tree_node* @pedantic_omit_one_operand(%union.tree_node* %2380, %union.tree_node* %2381, %union.tree_node* %2382)
  store %union.tree_node* %call6621, %union.tree_node** %retval
  br label %return

if.end.6622:                                      ; preds = %if.else.6614
  br label %if.end.6623

if.end.6623:                                      ; preds = %if.end.6622
  %2383 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6624 = call i32 @integer_zerop(%union.tree_node* %2383)
  %tobool6625 = icmp ne i32 %call6624, 0
  br i1 %tobool6625, label %if.then.6665, label %lor.lhs.false.6626

lor.lhs.false.6626:                               ; preds = %if.end.6623
  %2384 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6627 = bitcast %union.tree_node* %2384 to %struct.tree_common*
  %constant_flag6628 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6627, i32 0, i32 2
  %bf.load6629 = load i32, i32* %constant_flag6628, align 8
  %bf.lshr6630 = lshr i32 %bf.load6629, 9
  %bf.clear6631 = and i32 %bf.lshr6630, 1
  %tobool6632 = icmp ne i32 %bf.clear6631, 0
  br i1 %tobool6632, label %land.lhs.true.6633, label %lor.lhs.false.6643

land.lhs.true.6633:                               ; preds = %lor.lhs.false.6626
  %2385 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6634 = bitcast %union.tree_node* %2385 to %struct.tree_exp*
  %operands6635 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6634, i32 0, i32 2
  %arrayidx6636 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6635, i32 0, i64 2
  %2386 = load %union.tree_node*, %union.tree_node** %arrayidx6636, align 8
  %common6637 = bitcast %union.tree_node* %2386 to %struct.tree_common*
  %constant_flag6638 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6637, i32 0, i32 2
  %bf.load6639 = load i32, i32* %constant_flag6638, align 8
  %bf.lshr6640 = lshr i32 %bf.load6639, 9
  %bf.clear6641 = and i32 %bf.lshr6640, 1
  %tobool6642 = icmp ne i32 %bf.clear6641, 0
  br i1 %tobool6642, label %lor.lhs.false.6643, label %if.then.6665

lor.lhs.false.6643:                               ; preds = %land.lhs.true.6633, %lor.lhs.false.6626
  %2387 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6644 = bitcast %union.tree_node* %2387 to %struct.tree_common*
  %code6645 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6644, i32 0, i32 2
  %bf.load6646 = load i32, i32* %code6645, align 8
  %bf.clear6647 = and i32 %bf.load6646, 255
  %idxprom6648 = sext i32 %bf.clear6647 to i64
  %arrayidx6649 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom6648
  %2388 = load i8, i8* %arrayidx6649, align 1
  %conv6650 = sext i8 %2388 to i32
  %cmp6651 = icmp eq i32 %conv6650, 60
  br i1 %cmp6651, label %land.lhs.true.6653, label %if.end.6739

land.lhs.true.6653:                               ; preds = %lor.lhs.false.6643
  %2389 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6654 = bitcast %union.tree_node* %2389 to %struct.tree_exp*
  %operands6655 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6654, i32 0, i32 2
  %arrayidx6656 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6655, i32 0, i64 0
  %2390 = load %union.tree_node*, %union.tree_node** %arrayidx6656, align 8
  %2391 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6657 = bitcast %union.tree_node* %2391 to %struct.tree_exp*
  %operands6658 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6657, i32 0, i32 2
  %arrayidx6659 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6658, i32 0, i64 2
  %2392 = load %union.tree_node*, %union.tree_node** %arrayidx6659, align 8
  %2393 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6660 = bitcast %union.tree_node* %2393 to %struct.tree_exp*
  %operands6661 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6660, i32 0, i32 2
  %arrayidx6662 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6661, i32 0, i64 1
  %2394 = load %union.tree_node*, %union.tree_node** %arrayidx6662, align 8
  %call6663 = call i32 @operand_equal_for_comparison_p(%union.tree_node* %2390, %union.tree_node* %2392, %union.tree_node* %2394)
  %tobool6664 = icmp ne i32 %call6663, 0
  br i1 %tobool6664, label %if.then.6665, label %if.end.6739

if.then.6665:                                     ; preds = %land.lhs.true.6653, %land.lhs.true.6633, %if.end.6623
  %2395 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call6666 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %2395)
  store %union.tree_node* %call6666, %union.tree_node** %tem, align 8
  %2396 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common6667 = bitcast %union.tree_node* %2396 to %struct.tree_common*
  %code6668 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6667, i32 0, i32 2
  %bf.load6669 = load i32, i32* %code6668, align 8
  %bf.clear6670 = and i32 %bf.load6669, 255
  %cmp6671 = icmp ne i32 %bf.clear6670, 96
  br i1 %cmp6671, label %if.then.6673, label %if.end.6738

if.then.6673:                                     ; preds = %if.then.6665
  %2397 = load i32, i32* %code, align 4
  %2398 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2399 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %2400 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6674 = bitcast %union.tree_node* %2400 to %struct.tree_exp*
  %operands6675 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6674, i32 0, i32 2
  %arrayidx6676 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6675, i32 0, i64 2
  %2401 = load %union.tree_node*, %union.tree_node** %arrayidx6676, align 8
  %2402 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6677 = bitcast %union.tree_node* %2402 to %struct.tree_exp*
  %operands6678 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6677, i32 0, i32 2
  %arrayidx6679 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6678, i32 0, i64 1
  %2403 = load %union.tree_node*, %union.tree_node** %arrayidx6679, align 8
  %call6680 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2397, %union.tree_node* %2398, %union.tree_node* %2399, %union.tree_node* %2401, %union.tree_node* %2403)
  store %union.tree_node* %call6680, %union.tree_node** %t, align 8
  %2404 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %2404, %union.tree_node** %arg0, align 8
  %2405 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6681 = bitcast %union.tree_node* %2405 to %struct.tree_exp*
  %operands6682 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6681, i32 0, i32 2
  %arrayidx6683 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6682, i32 0, i64 1
  %2406 = load %union.tree_node*, %union.tree_node** %arrayidx6683, align 8
  store %union.tree_node* %2406, %union.tree_node** %arg1, align 8
  br label %while.cond.6684

while.cond.6684:                                  ; preds = %while.body.6733, %if.then.6673
  %2407 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6685 = bitcast %union.tree_node* %2407 to %struct.tree_common*
  %code6686 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6685, i32 0, i32 2
  %bf.load6687 = load i32, i32* %code6686, align 8
  %bf.clear6688 = and i32 %bf.load6687, 255
  %cmp6689 = icmp eq i32 %bf.clear6688, 115
  br i1 %cmp6689, label %land.lhs.true.6705, label %lor.lhs.false.6691

lor.lhs.false.6691:                               ; preds = %while.cond.6684
  %2408 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6692 = bitcast %union.tree_node* %2408 to %struct.tree_common*
  %code6693 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6692, i32 0, i32 2
  %bf.load6694 = load i32, i32* %code6693, align 8
  %bf.clear6695 = and i32 %bf.load6694, 255
  %cmp6696 = icmp eq i32 %bf.clear6695, 114
  br i1 %cmp6696, label %land.lhs.true.6705, label %lor.lhs.false.6698

lor.lhs.false.6698:                               ; preds = %lor.lhs.false.6691
  %2409 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6699 = bitcast %union.tree_node* %2409 to %struct.tree_common*
  %code6700 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6699, i32 0, i32 2
  %bf.load6701 = load i32, i32* %code6700, align 8
  %bf.clear6702 = and i32 %bf.load6701, 255
  %cmp6703 = icmp eq i32 %bf.clear6702, 116
  br i1 %cmp6703, label %land.lhs.true.6705, label %land.end.6731

land.lhs.true.6705:                               ; preds = %lor.lhs.false.6698, %lor.lhs.false.6691, %while.cond.6684
  %2410 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp6706 = bitcast %union.tree_node* %2410 to %struct.tree_exp*
  %operands6707 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6706, i32 0, i32 2
  %arrayidx6708 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6707, i32 0, i64 0
  %2411 = load %union.tree_node*, %union.tree_node** %arrayidx6708, align 8
  %2412 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp6709 = icmp ne %union.tree_node* %2411, %2412
  br i1 %cmp6709, label %land.rhs.6711, label %land.end.6731

land.rhs.6711:                                    ; preds = %land.lhs.true.6705
  %2413 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6712 = bitcast %union.tree_node* %2413 to %struct.tree_common*
  %type6713 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6712, i32 0, i32 1
  %2414 = load %union.tree_node*, %union.tree_node** %type6713, align 8
  %type6714 = bitcast %union.tree_node* %2414 to %struct.tree_type*
  %mode6715 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6714, i32 0, i32 6
  %bf.load6716 = load i32, i32* %mode6715, align 4
  %bf.lshr6717 = lshr i32 %bf.load6716, 9
  %bf.clear6718 = and i32 %bf.lshr6717, 127
  %2415 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp6719 = bitcast %union.tree_node* %2415 to %struct.tree_exp*
  %operands6720 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6719, i32 0, i32 2
  %arrayidx6721 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6720, i32 0, i64 0
  %2416 = load %union.tree_node*, %union.tree_node** %arrayidx6721, align 8
  %common6722 = bitcast %union.tree_node* %2416 to %struct.tree_common*
  %type6723 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6722, i32 0, i32 1
  %2417 = load %union.tree_node*, %union.tree_node** %type6723, align 8
  %type6724 = bitcast %union.tree_node* %2417 to %struct.tree_type*
  %mode6725 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6724, i32 0, i32 6
  %bf.load6726 = load i32, i32* %mode6725, align 4
  %bf.lshr6727 = lshr i32 %bf.load6726, 9
  %bf.clear6728 = and i32 %bf.lshr6727, 127
  %cmp6729 = icmp eq i32 %bf.clear6718, %bf.clear6728
  br label %land.end.6731

land.end.6731:                                    ; preds = %land.rhs.6711, %land.lhs.true.6705, %lor.lhs.false.6698
  %2418 = phi i1 [ false, %land.lhs.true.6705 ], [ false, %lor.lhs.false.6698 ], [ %cmp6729, %land.rhs.6711 ]
  br i1 %2418, label %while.body.6733, label %while.end.6737

while.body.6733:                                  ; preds = %land.end.6731
  %2419 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp6734 = bitcast %union.tree_node* %2419 to %struct.tree_exp*
  %operands6735 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6734, i32 0, i32 2
  %arrayidx6736 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6735, i32 0, i64 0
  %2420 = load %union.tree_node*, %union.tree_node** %arrayidx6736, align 8
  store %union.tree_node* %2420, %union.tree_node** %arg1, align 8
  br label %while.cond.6684

while.end.6737:                                   ; preds = %land.end.6731
  br label %if.end.6738

if.end.6738:                                      ; preds = %while.end.6737, %if.then.6665
  br label %if.end.6739

if.end.6739:                                      ; preds = %if.end.6738, %land.lhs.true.6653, %lor.lhs.false.6643
  %2421 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6740 = bitcast %union.tree_node* %2421 to %struct.tree_common*
  %code6741 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6740, i32 0, i32 2
  %bf.load6742 = load i32, i32* %code6741, align 8
  %bf.clear6743 = and i32 %bf.load6742, 255
  %idxprom6744 = sext i32 %bf.clear6743 to i64
  %arrayidx6745 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom6744
  %2422 = load i8, i8* %arrayidx6745, align 1
  %conv6746 = sext i8 %2422 to i32
  %cmp6747 = icmp eq i32 %conv6746, 60
  br i1 %cmp6747, label %land.lhs.true.6749, label %if.end.7205

land.lhs.true.6749:                               ; preds = %if.end.6739
  %2423 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6750 = bitcast %union.tree_node* %2423 to %struct.tree_exp*
  %operands6751 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6750, i32 0, i32 2
  %arrayidx6752 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6751, i32 0, i64 0
  %2424 = load %union.tree_node*, %union.tree_node** %arrayidx6752, align 8
  %common6753 = bitcast %union.tree_node* %2424 to %struct.tree_common*
  %type6754 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6753, i32 0, i32 1
  %2425 = load %union.tree_node*, %union.tree_node** %type6754, align 8
  %common6755 = bitcast %union.tree_node* %2425 to %struct.tree_common*
  %code6756 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6755, i32 0, i32 2
  %bf.load6757 = load i32, i32* %code6756, align 8
  %bf.clear6758 = and i32 %bf.load6757, 255
  %cmp6759 = icmp eq i32 %bf.clear6758, 7
  br i1 %cmp6759, label %lor.lhs.false.6787, label %lor.lhs.false.6761

lor.lhs.false.6761:                               ; preds = %land.lhs.true.6749
  %2426 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6762 = bitcast %union.tree_node* %2426 to %struct.tree_exp*
  %operands6763 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6762, i32 0, i32 2
  %arrayidx6764 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6763, i32 0, i64 0
  %2427 = load %union.tree_node*, %union.tree_node** %arrayidx6764, align 8
  %common6765 = bitcast %union.tree_node* %2427 to %struct.tree_common*
  %type6766 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6765, i32 0, i32 1
  %2428 = load %union.tree_node*, %union.tree_node** %type6766, align 8
  %common6767 = bitcast %union.tree_node* %2428 to %struct.tree_common*
  %code6768 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6767, i32 0, i32 2
  %bf.load6769 = load i32, i32* %code6768, align 8
  %bf.clear6770 = and i32 %bf.load6769, 255
  %cmp6771 = icmp eq i32 %bf.clear6770, 8
  br i1 %cmp6771, label %land.lhs.true.6773, label %land.lhs.true.6789

land.lhs.true.6773:                               ; preds = %lor.lhs.false.6761
  %2429 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6774 = bitcast %union.tree_node* %2429 to %struct.tree_exp*
  %operands6775 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6774, i32 0, i32 2
  %arrayidx6776 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6775, i32 0, i64 0
  %2430 = load %union.tree_node*, %union.tree_node** %arrayidx6776, align 8
  %common6777 = bitcast %union.tree_node* %2430 to %struct.tree_common*
  %type6778 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6777, i32 0, i32 1
  %2431 = load %union.tree_node*, %union.tree_node** %type6778, align 8
  %common6779 = bitcast %union.tree_node* %2431 to %struct.tree_common*
  %type6780 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6779, i32 0, i32 1
  %2432 = load %union.tree_node*, %union.tree_node** %type6780, align 8
  %common6781 = bitcast %union.tree_node* %2432 to %struct.tree_common*
  %code6782 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6781, i32 0, i32 2
  %bf.load6783 = load i32, i32* %code6782, align 8
  %bf.clear6784 = and i32 %bf.load6783, 255
  %cmp6785 = icmp eq i32 %bf.clear6784, 7
  br i1 %cmp6785, label %lor.lhs.false.6787, label %land.lhs.true.6789

lor.lhs.false.6787:                               ; preds = %land.lhs.true.6773, %land.lhs.true.6749
  %2433 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool6788 = icmp ne i32 %2433, 0
  br i1 %tobool6788, label %land.lhs.true.6789, label %if.end.7205

land.lhs.true.6789:                               ; preds = %lor.lhs.false.6787, %land.lhs.true.6773, %lor.lhs.false.6761
  %2434 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6790 = bitcast %union.tree_node* %2434 to %struct.tree_exp*
  %operands6791 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6790, i32 0, i32 2
  %arrayidx6792 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6791, i32 0, i64 0
  %2435 = load %union.tree_node*, %union.tree_node** %arrayidx6792, align 8
  %2436 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2437 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6793 = bitcast %union.tree_node* %2437 to %struct.tree_exp*
  %operands6794 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6793, i32 0, i32 2
  %arrayidx6795 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6794, i32 0, i64 1
  %2438 = load %union.tree_node*, %union.tree_node** %arrayidx6795, align 8
  %call6796 = call i32 @operand_equal_for_comparison_p(%union.tree_node* %2435, %union.tree_node* %2436, %union.tree_node* %2438)
  %tobool6797 = icmp ne i32 %call6796, 0
  br i1 %tobool6797, label %if.then.6798, label %if.end.7205

if.then.6798:                                     ; preds = %land.lhs.true.6789
  %2439 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6800 = bitcast %union.tree_node* %2439 to %struct.tree_exp*
  %operands6801 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6800, i32 0, i32 2
  %arrayidx6802 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6801, i32 0, i64 2
  %2440 = load %union.tree_node*, %union.tree_node** %arrayidx6802, align 8
  store %union.tree_node* %2440, %union.tree_node** %arg2, align 8
  %2441 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6804 = bitcast %union.tree_node* %2441 to %struct.tree_common*
  %code6805 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6804, i32 0, i32 2
  %bf.load6806 = load i32, i32* %code6805, align 8
  %bf.clear6807 = and i32 %bf.load6806, 255
  store i32 %bf.clear6807, i32* %comp_code, align 4
  br label %while.cond.6808

while.cond.6808:                                  ; preds = %while.body.6857, %if.then.6798
  %2442 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common6809 = bitcast %union.tree_node* %2442 to %struct.tree_common*
  %code6810 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6809, i32 0, i32 2
  %bf.load6811 = load i32, i32* %code6810, align 8
  %bf.clear6812 = and i32 %bf.load6811, 255
  %cmp6813 = icmp eq i32 %bf.clear6812, 115
  br i1 %cmp6813, label %land.lhs.true.6829, label %lor.lhs.false.6815

lor.lhs.false.6815:                               ; preds = %while.cond.6808
  %2443 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common6816 = bitcast %union.tree_node* %2443 to %struct.tree_common*
  %code6817 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6816, i32 0, i32 2
  %bf.load6818 = load i32, i32* %code6817, align 8
  %bf.clear6819 = and i32 %bf.load6818, 255
  %cmp6820 = icmp eq i32 %bf.clear6819, 114
  br i1 %cmp6820, label %land.lhs.true.6829, label %lor.lhs.false.6822

lor.lhs.false.6822:                               ; preds = %lor.lhs.false.6815
  %2444 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common6823 = bitcast %union.tree_node* %2444 to %struct.tree_common*
  %code6824 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6823, i32 0, i32 2
  %bf.load6825 = load i32, i32* %code6824, align 8
  %bf.clear6826 = and i32 %bf.load6825, 255
  %cmp6827 = icmp eq i32 %bf.clear6826, 116
  br i1 %cmp6827, label %land.lhs.true.6829, label %land.end.6855

land.lhs.true.6829:                               ; preds = %lor.lhs.false.6822, %lor.lhs.false.6815, %while.cond.6808
  %2445 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %exp6830 = bitcast %union.tree_node* %2445 to %struct.tree_exp*
  %operands6831 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6830, i32 0, i32 2
  %arrayidx6832 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6831, i32 0, i64 0
  %2446 = load %union.tree_node*, %union.tree_node** %arrayidx6832, align 8
  %2447 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp6833 = icmp ne %union.tree_node* %2446, %2447
  br i1 %cmp6833, label %land.rhs.6835, label %land.end.6855

land.rhs.6835:                                    ; preds = %land.lhs.true.6829
  %2448 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common6836 = bitcast %union.tree_node* %2448 to %struct.tree_common*
  %type6837 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6836, i32 0, i32 1
  %2449 = load %union.tree_node*, %union.tree_node** %type6837, align 8
  %type6838 = bitcast %union.tree_node* %2449 to %struct.tree_type*
  %mode6839 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6838, i32 0, i32 6
  %bf.load6840 = load i32, i32* %mode6839, align 4
  %bf.lshr6841 = lshr i32 %bf.load6840, 9
  %bf.clear6842 = and i32 %bf.lshr6841, 127
  %2450 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %exp6843 = bitcast %union.tree_node* %2450 to %struct.tree_exp*
  %operands6844 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6843, i32 0, i32 2
  %arrayidx6845 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6844, i32 0, i64 0
  %2451 = load %union.tree_node*, %union.tree_node** %arrayidx6845, align 8
  %common6846 = bitcast %union.tree_node* %2451 to %struct.tree_common*
  %type6847 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6846, i32 0, i32 1
  %2452 = load %union.tree_node*, %union.tree_node** %type6847, align 8
  %type6848 = bitcast %union.tree_node* %2452 to %struct.tree_type*
  %mode6849 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6848, i32 0, i32 6
  %bf.load6850 = load i32, i32* %mode6849, align 4
  %bf.lshr6851 = lshr i32 %bf.load6850, 9
  %bf.clear6852 = and i32 %bf.lshr6851, 127
  %cmp6853 = icmp eq i32 %bf.clear6842, %bf.clear6852
  br label %land.end.6855

land.end.6855:                                    ; preds = %land.rhs.6835, %land.lhs.true.6829, %lor.lhs.false.6822
  %2453 = phi i1 [ false, %land.lhs.true.6829 ], [ false, %lor.lhs.false.6822 ], [ %cmp6853, %land.rhs.6835 ]
  br i1 %2453, label %while.body.6857, label %while.end.6861

while.body.6857:                                  ; preds = %land.end.6855
  %2454 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %exp6858 = bitcast %union.tree_node* %2454 to %struct.tree_exp*
  %operands6859 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6858, i32 0, i32 2
  %arrayidx6860 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6859, i32 0, i64 0
  %2455 = load %union.tree_node*, %union.tree_node** %arrayidx6860, align 8
  store %union.tree_node* %2455, %union.tree_node** %arg2, align 8
  br label %while.cond.6808

while.end.6861:                                   ; preds = %land.end.6855
  %2456 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6862 = bitcast %union.tree_node* %2456 to %struct.tree_exp*
  %operands6863 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6862, i32 0, i32 2
  %arrayidx6864 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6863, i32 0, i64 1
  %2457 = load %union.tree_node*, %union.tree_node** %arrayidx6864, align 8
  %common6865 = bitcast %union.tree_node* %2457 to %struct.tree_common*
  %type6866 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6865, i32 0, i32 1
  %2458 = load %union.tree_node*, %union.tree_node** %type6866, align 8
  %common6867 = bitcast %union.tree_node* %2458 to %struct.tree_common*
  %code6868 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6867, i32 0, i32 2
  %bf.load6869 = load i32, i32* %code6868, align 8
  %bf.clear6870 = and i32 %bf.load6869, 255
  %cmp6871 = icmp eq i32 %bf.clear6870, 7
  br i1 %cmp6871, label %cond.true.6899, label %lor.lhs.false.6873

lor.lhs.false.6873:                               ; preds = %while.end.6861
  %2459 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6874 = bitcast %union.tree_node* %2459 to %struct.tree_exp*
  %operands6875 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6874, i32 0, i32 2
  %arrayidx6876 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6875, i32 0, i64 1
  %2460 = load %union.tree_node*, %union.tree_node** %arrayidx6876, align 8
  %common6877 = bitcast %union.tree_node* %2460 to %struct.tree_common*
  %type6878 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6877, i32 0, i32 1
  %2461 = load %union.tree_node*, %union.tree_node** %type6878, align 8
  %common6879 = bitcast %union.tree_node* %2461 to %struct.tree_common*
  %code6880 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6879, i32 0, i32 2
  %bf.load6881 = load i32, i32* %code6880, align 8
  %bf.clear6882 = and i32 %bf.load6881, 255
  %cmp6883 = icmp eq i32 %bf.clear6882, 8
  br i1 %cmp6883, label %land.lhs.true.6885, label %cond.false.6905

land.lhs.true.6885:                               ; preds = %lor.lhs.false.6873
  %2462 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6886 = bitcast %union.tree_node* %2462 to %struct.tree_exp*
  %operands6887 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6886, i32 0, i32 2
  %arrayidx6888 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6887, i32 0, i64 1
  %2463 = load %union.tree_node*, %union.tree_node** %arrayidx6888, align 8
  %common6889 = bitcast %union.tree_node* %2463 to %struct.tree_common*
  %type6890 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6889, i32 0, i32 1
  %2464 = load %union.tree_node*, %union.tree_node** %type6890, align 8
  %common6891 = bitcast %union.tree_node* %2464 to %struct.tree_common*
  %type6892 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6891, i32 0, i32 1
  %2465 = load %union.tree_node*, %union.tree_node** %type6892, align 8
  %common6893 = bitcast %union.tree_node* %2465 to %struct.tree_common*
  %code6894 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6893, i32 0, i32 2
  %bf.load6895 = load i32, i32* %code6894, align 8
  %bf.clear6896 = and i32 %bf.load6895, 255
  %cmp6897 = icmp eq i32 %bf.clear6896, 7
  br i1 %cmp6897, label %cond.true.6899, label %cond.false.6905

cond.true.6899:                                   ; preds = %land.lhs.true.6885, %while.end.6861
  %2466 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6900 = bitcast %union.tree_node* %2466 to %struct.tree_exp*
  %operands6901 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6900, i32 0, i32 2
  %arrayidx6902 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6901, i32 0, i64 1
  %2467 = load %union.tree_node*, %union.tree_node** %arrayidx6902, align 8
  %call6903 = call i32 @real_zerop(%union.tree_node* %2467)
  %tobool6904 = icmp ne i32 %call6903, 0
  br i1 %tobool6904, label %land.lhs.true.6911, label %if.end.6982

cond.false.6905:                                  ; preds = %land.lhs.true.6885, %lor.lhs.false.6873
  %2468 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6906 = bitcast %union.tree_node* %2468 to %struct.tree_exp*
  %operands6907 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6906, i32 0, i32 2
  %arrayidx6908 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6907, i32 0, i64 1
  %2469 = load %union.tree_node*, %union.tree_node** %arrayidx6908, align 8
  %call6909 = call i32 @integer_zerop(%union.tree_node* %2469)
  %tobool6910 = icmp ne i32 %call6909, 0
  br i1 %tobool6910, label %land.lhs.true.6911, label %if.end.6982

land.lhs.true.6911:                               ; preds = %cond.false.6905, %cond.true.6899
  %2470 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common6912 = bitcast %union.tree_node* %2470 to %struct.tree_common*
  %code6913 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6912, i32 0, i32 2
  %bf.load6914 = load i32, i32* %code6913, align 8
  %bf.clear6915 = and i32 %bf.load6914, 255
  %cmp6916 = icmp eq i32 %bf.clear6915, 77
  br i1 %cmp6916, label %land.lhs.true.6918, label %if.end.6982

land.lhs.true.6918:                               ; preds = %land.lhs.true.6911
  %2471 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %exp6919 = bitcast %union.tree_node* %2471 to %struct.tree_exp*
  %operands6920 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6919, i32 0, i32 2
  %arrayidx6921 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6920, i32 0, i64 0
  %2472 = load %union.tree_node*, %union.tree_node** %arrayidx6921, align 8
  %2473 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6922 = call i32 @operand_equal_p(%union.tree_node* %2472, %union.tree_node* %2473, i32 0)
  %tobool6923 = icmp ne i32 %call6922, 0
  br i1 %tobool6923, label %if.then.6924, label %if.end.6982

if.then.6924:                                     ; preds = %land.lhs.true.6918
  %2474 = load i32, i32* %comp_code, align 4
  switch i32 %2474, label %sw.default.6981 [
    i32 101, label %sw.bb.6925
    i32 102, label %sw.bb.6935
    i32 100, label %sw.bb.6938
    i32 99, label %sw.bb.6938
    i32 98, label %sw.bb.6959
    i32 97, label %sw.bb.6959
  ]

sw.bb.6925:                                       ; preds = %if.then.6924
  %2475 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2476 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp6926 = bitcast %union.tree_node* %2476 to %struct.tree_exp*
  %operands6927 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6926, i32 0, i32 2
  %arrayidx6928 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6927, i32 0, i64 1
  %2477 = load %union.tree_node*, %union.tree_node** %arrayidx6928, align 8
  %common6929 = bitcast %union.tree_node* %2477 to %struct.tree_common*
  %type6930 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6929, i32 0, i32 1
  %2478 = load %union.tree_node*, %union.tree_node** %type6930, align 8
  %2479 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6931 = call %union.tree_node* @convert(%union.tree_node* %2478, %union.tree_node* %2479)
  %call6932 = call %union.tree_node* @negate_expr(%union.tree_node* %call6931)
  %call6933 = call %union.tree_node* @convert(%union.tree_node* %2475, %union.tree_node* %call6932)
  %call6934 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call6933)
  store %union.tree_node* %call6934, %union.tree_node** %retval
  br label %return

sw.bb.6935:                                       ; preds = %if.then.6924
  %2480 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2481 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6936 = call %union.tree_node* @convert(%union.tree_node* %2480, %union.tree_node* %2481)
  %call6937 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call6936)
  store %union.tree_node* %call6937, %union.tree_node** %retval
  br label %return

sw.bb.6938:                                       ; preds = %if.then.6924, %if.then.6924
  %2482 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6939 = bitcast %union.tree_node* %2482 to %struct.tree_common*
  %type6940 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6939, i32 0, i32 1
  %2483 = load %union.tree_node*, %union.tree_node** %type6940, align 8
  %common6941 = bitcast %union.tree_node* %2483 to %struct.tree_common*
  %unsigned_flag6942 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6941, i32 0, i32 2
  %bf.load6943 = load i32, i32* %unsigned_flag6942, align 8
  %bf.lshr6944 = lshr i32 %bf.load6943, 13
  %bf.clear6945 = and i32 %bf.lshr6944, 1
  %tobool6946 = icmp ne i32 %bf.clear6945, 0
  br i1 %tobool6946, label %if.then.6947, label %if.end.6952

if.then.6947:                                     ; preds = %sw.bb.6938
  %2484 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6948 = bitcast %union.tree_node* %2484 to %struct.tree_common*
  %type6949 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6948, i32 0, i32 1
  %2485 = load %union.tree_node*, %union.tree_node** %type6949, align 8
  %call6950 = call %union.tree_node* @signed_type(%union.tree_node* %2485)
  %2486 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6951 = call %union.tree_node* @convert(%union.tree_node* %call6950, %union.tree_node* %2486)
  store %union.tree_node* %call6951, %union.tree_node** %arg1, align 8
  br label %if.end.6952

if.end.6952:                                      ; preds = %if.then.6947, %sw.bb.6938
  %2487 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2488 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6953 = bitcast %union.tree_node* %2488 to %struct.tree_common*
  %type6954 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6953, i32 0, i32 1
  %2489 = load %union.tree_node*, %union.tree_node** %type6954, align 8
  %2490 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6955 = call %union.tree_node* @build1(i32 80, %union.tree_node* %2489, %union.tree_node* %2490)
  %call6956 = call %union.tree_node* @fold(%union.tree_node* %call6955)
  %call6957 = call %union.tree_node* @convert(%union.tree_node* %2487, %union.tree_node* %call6956)
  %call6958 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call6957)
  store %union.tree_node* %call6958, %union.tree_node** %retval
  br label %return

sw.bb.6959:                                       ; preds = %if.then.6924, %if.then.6924
  %2491 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6960 = bitcast %union.tree_node* %2491 to %struct.tree_common*
  %type6961 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6960, i32 0, i32 1
  %2492 = load %union.tree_node*, %union.tree_node** %type6961, align 8
  %common6962 = bitcast %union.tree_node* %2492 to %struct.tree_common*
  %unsigned_flag6963 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6962, i32 0, i32 2
  %bf.load6964 = load i32, i32* %unsigned_flag6963, align 8
  %bf.lshr6965 = lshr i32 %bf.load6964, 13
  %bf.clear6966 = and i32 %bf.lshr6965, 1
  %tobool6967 = icmp ne i32 %bf.clear6966, 0
  br i1 %tobool6967, label %if.then.6968, label %if.end.6973

if.then.6968:                                     ; preds = %sw.bb.6959
  %2493 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6969 = bitcast %union.tree_node* %2493 to %struct.tree_common*
  %type6970 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6969, i32 0, i32 1
  %2494 = load %union.tree_node*, %union.tree_node** %type6970, align 8
  %call6971 = call %union.tree_node* @signed_type(%union.tree_node* %2494)
  %2495 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6972 = call %union.tree_node* @convert(%union.tree_node* %call6971, %union.tree_node* %2495)
  store %union.tree_node* %call6972, %union.tree_node** %arg1, align 8
  br label %if.end.6973

if.end.6973:                                      ; preds = %if.then.6968, %sw.bb.6959
  %2496 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2497 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common6974 = bitcast %union.tree_node* %2497 to %struct.tree_common*
  %type6975 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6974, i32 0, i32 1
  %2498 = load %union.tree_node*, %union.tree_node** %type6975, align 8
  %2499 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6976 = call %union.tree_node* @build1(i32 80, %union.tree_node* %2498, %union.tree_node* %2499)
  %call6977 = call %union.tree_node* @fold(%union.tree_node* %call6976)
  %call6978 = call %union.tree_node* @convert(%union.tree_node* %2496, %union.tree_node* %call6977)
  %call6979 = call %union.tree_node* @negate_expr(%union.tree_node* %call6978)
  %call6980 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call6979)
  store %union.tree_node* %call6980, %union.tree_node** %retval
  br label %return

sw.default.6981:                                  ; preds = %if.then.6924
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 7202, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.fold, i32 0, i32 0)) #5
  unreachable

if.end.6982:                                      ; preds = %land.lhs.true.6918, %land.lhs.true.6911, %cond.false.6905, %cond.true.6899
  %2500 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp6983 = bitcast %union.tree_node* %2500 to %struct.tree_exp*
  %operands6984 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6983, i32 0, i32 2
  %arrayidx6985 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands6984, i32 0, i64 1
  %2501 = load %union.tree_node*, %union.tree_node** %arrayidx6985, align 8
  %call6986 = call i32 @integer_zerop(%union.tree_node* %2501)
  %tobool6987 = icmp ne i32 %call6986, 0
  br i1 %tobool6987, label %land.lhs.true.6988, label %if.end.7005

land.lhs.true.6988:                               ; preds = %if.end.6982
  %2502 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call6989 = call i32 @integer_zerop(%union.tree_node* %2502)
  %tobool6990 = icmp ne i32 %call6989, 0
  br i1 %tobool6990, label %if.then.6991, label %if.end.7005

if.then.6991:                                     ; preds = %land.lhs.true.6988
  %2503 = load i32, i32* %comp_code, align 4
  %cmp6992 = icmp eq i32 %2503, 102
  br i1 %cmp6992, label %if.then.6994, label %if.else.6997

if.then.6994:                                     ; preds = %if.then.6991
  %2504 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2505 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call6995 = call %union.tree_node* @convert(%union.tree_node* %2504, %union.tree_node* %2505)
  %call6996 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call6995)
  store %union.tree_node* %call6996, %union.tree_node** %retval
  br label %return

if.else.6997:                                     ; preds = %if.then.6991
  %2506 = load i32, i32* %comp_code, align 4
  %cmp6998 = icmp eq i32 %2506, 101
  br i1 %cmp6998, label %if.then.7000, label %if.end.7003

if.then.7000:                                     ; preds = %if.else.6997
  %2507 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2508 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call7001 = call %union.tree_node* @convert(%union.tree_node* %2507, %union.tree_node* %2508)
  %call7002 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7001)
  store %union.tree_node* %call7002, %union.tree_node** %retval
  br label %return

if.end.7003:                                      ; preds = %if.else.6997
  br label %if.end.7004

if.end.7004:                                      ; preds = %if.end.7003
  br label %if.end.7005

if.end.7005:                                      ; preds = %if.end.7004, %land.lhs.true.6988, %if.end.6982
  %2509 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7006 = bitcast %union.tree_node* %2509 to %struct.tree_exp*
  %operands7007 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7006, i32 0, i32 2
  %arrayidx7008 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7007, i32 0, i64 1
  %2510 = load %union.tree_node*, %union.tree_node** %arrayidx7008, align 8
  %2511 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2512 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7009 = bitcast %union.tree_node* %2512 to %struct.tree_exp*
  %operands7010 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7009, i32 0, i32 2
  %arrayidx7011 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7010, i32 0, i64 0
  %2513 = load %union.tree_node*, %union.tree_node** %arrayidx7011, align 8
  %call7012 = call i32 @operand_equal_for_comparison_p(%union.tree_node* %2510, %union.tree_node* %2511, %union.tree_node* %2513)
  %tobool7013 = icmp ne i32 %call7012, 0
  br i1 %tobool7013, label %if.then.7014, label %if.end.7075

if.then.7014:                                     ; preds = %if.end.7005
  %2514 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7016 = bitcast %union.tree_node* %2514 to %struct.tree_exp*
  %operands7017 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7016, i32 0, i32 2
  %arrayidx7018 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7017, i32 0, i64 0
  %2515 = load %union.tree_node*, %union.tree_node** %arrayidx7018, align 8
  store %union.tree_node* %2515, %union.tree_node** %comp_op0, align 8
  %2516 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7020 = bitcast %union.tree_node* %2516 to %struct.tree_exp*
  %operands7021 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7020, i32 0, i32 2
  %arrayidx7022 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7021, i32 0, i64 1
  %2517 = load %union.tree_node*, %union.tree_node** %arrayidx7022, align 8
  store %union.tree_node* %2517, %union.tree_node** %comp_op1, align 8
  %2518 = load %union.tree_node*, %union.tree_node** %comp_op0, align 8
  %common7024 = bitcast %union.tree_node* %2518 to %struct.tree_common*
  %type7025 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7024, i32 0, i32 1
  %2519 = load %union.tree_node*, %union.tree_node** %type7025, align 8
  store %union.tree_node* %2519, %union.tree_node** %comp_type, align 8
  %2520 = load %union.tree_node*, %union.tree_node** %comp_type, align 8
  %type7026 = bitcast %union.tree_node* %2520 to %struct.tree_type*
  %main_variant7027 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7026, i32 0, i32 15
  %2521 = load %union.tree_node*, %union.tree_node** %main_variant7027, align 8
  %2522 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7028 = bitcast %union.tree_node* %2522 to %struct.tree_type*
  %main_variant7029 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7028, i32 0, i32 15
  %2523 = load %union.tree_node*, %union.tree_node** %main_variant7029, align 8
  %cmp7030 = icmp eq %union.tree_node* %2521, %2523
  br i1 %cmp7030, label %if.then.7032, label %if.end.7033

if.then.7032:                                     ; preds = %if.then.7014
  %2524 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %2524, %union.tree_node** %comp_type, align 8
  br label %if.end.7033

if.end.7033:                                      ; preds = %if.then.7032, %if.then.7014
  %2525 = load i32, i32* %comp_code, align 4
  switch i32 %2525, label %sw.default.7074 [
    i32 101, label %sw.bb.7034
    i32 102, label %sw.bb.7037
    i32 98, label %sw.bb.7040
    i32 97, label %sw.bb.7040
    i32 100, label %sw.bb.7057
    i32 99, label %sw.bb.7057
  ]

sw.bb.7034:                                       ; preds = %if.end.7033
  %2526 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2527 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call7035 = call %union.tree_node* @convert(%union.tree_node* %2526, %union.tree_node* %2527)
  %call7036 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7035)
  store %union.tree_node* %call7036, %union.tree_node** %retval
  br label %return

sw.bb.7037:                                       ; preds = %if.end.7033
  %2528 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2529 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7038 = call %union.tree_node* @convert(%union.tree_node* %2528, %union.tree_node* %2529)
  %call7039 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7038)
  store %union.tree_node* %call7039, %union.tree_node** %retval
  br label %return

sw.bb.7040:                                       ; preds = %if.end.7033, %if.end.7033
  %2530 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2531 = load %union.tree_node*, %union.tree_node** %comp_type, align 8
  %2532 = load i32, i32* %comp_code, align 4
  %cmp7041 = icmp eq i32 %2532, 98
  br i1 %cmp7041, label %cond.true.7043, label %cond.false.7044

cond.true.7043:                                   ; preds = %sw.bb.7040
  %2533 = load %union.tree_node*, %union.tree_node** %comp_op0, align 8
  br label %cond.end.7045

cond.false.7044:                                  ; preds = %sw.bb.7040
  %2534 = load %union.tree_node*, %union.tree_node** %comp_op1, align 8
  br label %cond.end.7045

cond.end.7045:                                    ; preds = %cond.false.7044, %cond.true.7043
  %cond7046 = phi %union.tree_node* [ %2533, %cond.true.7043 ], [ %2534, %cond.false.7044 ]
  %2535 = load i32, i32* %comp_code, align 4
  %cmp7047 = icmp eq i32 %2535, 98
  br i1 %cmp7047, label %cond.true.7049, label %cond.false.7050

cond.true.7049:                                   ; preds = %cond.end.7045
  %2536 = load %union.tree_node*, %union.tree_node** %comp_op1, align 8
  br label %cond.end.7051

cond.false.7050:                                  ; preds = %cond.end.7045
  %2537 = load %union.tree_node*, %union.tree_node** %comp_op0, align 8
  br label %cond.end.7051

cond.end.7051:                                    ; preds = %cond.false.7050, %cond.true.7049
  %cond7052 = phi %union.tree_node* [ %2536, %cond.true.7049 ], [ %2537, %cond.false.7050 ]
  %call7053 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 78, %union.tree_node* %2531, %union.tree_node* %cond7046, %union.tree_node* %cond7052)
  %call7054 = call %union.tree_node* @fold(%union.tree_node* %call7053)
  %call7055 = call %union.tree_node* @convert(%union.tree_node* %2530, %union.tree_node* %call7054)
  %call7056 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7055)
  store %union.tree_node* %call7056, %union.tree_node** %retval
  br label %return

sw.bb.7057:                                       ; preds = %if.end.7033, %if.end.7033
  %2538 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2539 = load %union.tree_node*, %union.tree_node** %comp_type, align 8
  %2540 = load i32, i32* %comp_code, align 4
  %cmp7058 = icmp eq i32 %2540, 100
  br i1 %cmp7058, label %cond.true.7060, label %cond.false.7061

cond.true.7060:                                   ; preds = %sw.bb.7057
  %2541 = load %union.tree_node*, %union.tree_node** %comp_op0, align 8
  br label %cond.end.7062

cond.false.7061:                                  ; preds = %sw.bb.7057
  %2542 = load %union.tree_node*, %union.tree_node** %comp_op1, align 8
  br label %cond.end.7062

cond.end.7062:                                    ; preds = %cond.false.7061, %cond.true.7060
  %cond7063 = phi %union.tree_node* [ %2541, %cond.true.7060 ], [ %2542, %cond.false.7061 ]
  %2543 = load i32, i32* %comp_code, align 4
  %cmp7064 = icmp eq i32 %2543, 100
  br i1 %cmp7064, label %cond.true.7066, label %cond.false.7067

cond.true.7066:                                   ; preds = %cond.end.7062
  %2544 = load %union.tree_node*, %union.tree_node** %comp_op1, align 8
  br label %cond.end.7068

cond.false.7067:                                  ; preds = %cond.end.7062
  %2545 = load %union.tree_node*, %union.tree_node** %comp_op0, align 8
  br label %cond.end.7068

cond.end.7068:                                    ; preds = %cond.false.7067, %cond.true.7066
  %cond7069 = phi %union.tree_node* [ %2544, %cond.true.7066 ], [ %2545, %cond.false.7067 ]
  %call7070 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 79, %union.tree_node* %2539, %union.tree_node* %cond7063, %union.tree_node* %cond7069)
  %call7071 = call %union.tree_node* @fold(%union.tree_node* %call7070)
  %call7072 = call %union.tree_node* @convert(%union.tree_node* %2538, %union.tree_node* %call7071)
  %call7073 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7072)
  store %union.tree_node* %call7073, %union.tree_node** %retval
  br label %return

sw.default.7074:                                  ; preds = %if.end.7033
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 7259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.fold, i32 0, i32 0)) #5
  unreachable

if.end.7075:                                      ; preds = %if.end.7005
  %2546 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7076 = bitcast %union.tree_node* %2546 to %struct.tree_common*
  %code7077 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7076, i32 0, i32 2
  %bf.load7078 = load i32, i32* %code7077, align 8
  %bf.clear7079 = and i32 %bf.load7078, 255
  %cmp7080 = icmp eq i32 %bf.clear7079, 6
  br i1 %cmp7080, label %land.lhs.true.7103, label %lor.lhs.false.7082

lor.lhs.false.7082:                               ; preds = %if.end.7075
  %2547 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7083 = bitcast %union.tree_node* %2547 to %struct.tree_common*
  %code7084 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7083, i32 0, i32 2
  %bf.load7085 = load i32, i32* %code7084, align 8
  %bf.clear7086 = and i32 %bf.load7085, 255
  %cmp7087 = icmp eq i32 %bf.clear7086, 10
  br i1 %cmp7087, label %land.lhs.true.7103, label %lor.lhs.false.7089

lor.lhs.false.7089:                               ; preds = %lor.lhs.false.7082
  %2548 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7090 = bitcast %union.tree_node* %2548 to %struct.tree_common*
  %code7091 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7090, i32 0, i32 2
  %bf.load7092 = load i32, i32* %code7091, align 8
  %bf.clear7093 = and i32 %bf.load7092, 255
  %cmp7094 = icmp eq i32 %bf.clear7093, 11
  br i1 %cmp7094, label %land.lhs.true.7103, label %lor.lhs.false.7096

lor.lhs.false.7096:                               ; preds = %lor.lhs.false.7089
  %2549 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7097 = bitcast %union.tree_node* %2549 to %struct.tree_common*
  %code7098 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7097, i32 0, i32 2
  %bf.load7099 = load i32, i32* %code7098, align 8
  %bf.clear7100 = and i32 %bf.load7099, 255
  %cmp7101 = icmp eq i32 %bf.clear7100, 12
  br i1 %cmp7101, label %land.lhs.true.7103, label %if.end.7204

land.lhs.true.7103:                               ; preds = %lor.lhs.false.7096, %lor.lhs.false.7089, %lor.lhs.false.7082, %if.end.7075
  %2550 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7104 = bitcast %union.tree_node* %2550 to %struct.tree_exp*
  %operands7105 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7104, i32 0, i32 2
  %arrayidx7106 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7105, i32 0, i64 1
  %2551 = load %union.tree_node*, %union.tree_node** %arrayidx7106, align 8
  %common7107 = bitcast %union.tree_node* %2551 to %struct.tree_common*
  %code7108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7107, i32 0, i32 2
  %bf.load7109 = load i32, i32* %code7108, align 8
  %bf.clear7110 = and i32 %bf.load7109, 255
  %cmp7111 = icmp eq i32 %bf.clear7110, 25
  br i1 %cmp7111, label %land.lhs.true.7113, label %if.end.7204

land.lhs.true.7113:                               ; preds = %land.lhs.true.7103
  %2552 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %common7114 = bitcast %union.tree_node* %2552 to %struct.tree_common*
  %code7115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7114, i32 0, i32 2
  %bf.load7116 = load i32, i32* %code7115, align 8
  %bf.clear7117 = and i32 %bf.load7116, 255
  %cmp7118 = icmp eq i32 %bf.clear7117, 25
  br i1 %cmp7118, label %if.then.7120, label %if.end.7204

if.then.7120:                                     ; preds = %land.lhs.true.7113
  %2553 = load i32, i32* %comp_code, align 4
  switch i32 %2553, label %sw.default.7202 [
    i32 101, label %sw.bb.7121
    i32 97, label %sw.bb.7133
    i32 98, label %sw.bb.7150
    i32 99, label %sw.bb.7167
    i32 100, label %sw.bb.7184
    i32 102, label %sw.bb.7201
  ]

sw.bb.7121:                                       ; preds = %if.then.7120
  %2554 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2555 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7122 = bitcast %union.tree_node* %2555 to %struct.tree_exp*
  %operands7123 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7122, i32 0, i32 2
  %arrayidx7124 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7123, i32 0, i64 1
  %2556 = load %union.tree_node*, %union.tree_node** %arrayidx7124, align 8
  %call7125 = call %union.tree_node* @convert(%union.tree_node* %2554, %union.tree_node* %2556)
  store %union.tree_node* %call7125, %union.tree_node** %arg1, align 8
  %2557 = load i32, i32* %code, align 4
  %2558 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2559 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7126 = bitcast %union.tree_node* %2559 to %struct.tree_exp*
  %operands7127 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7126, i32 0, i32 2
  %arrayidx7128 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7127, i32 0, i64 0
  %2560 = load %union.tree_node*, %union.tree_node** %arrayidx7128, align 8
  %2561 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2562 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7129 = bitcast %union.tree_node* %2562 to %struct.tree_exp*
  %operands7130 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7129, i32 0, i32 2
  %arrayidx7131 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7130, i32 0, i64 2
  %2563 = load %union.tree_node*, %union.tree_node** %arrayidx7131, align 8
  %call7132 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2557, %union.tree_node* %2558, %union.tree_node* %2560, %union.tree_node* %2561, %union.tree_node* %2563)
  store %union.tree_node* %call7132, %union.tree_node** %t, align 8
  br label %sw.epilog.7203

sw.bb.7133:                                       ; preds = %if.then.7120
  %2564 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2565 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7134 = bitcast %union.tree_node* %2565 to %struct.tree_type*
  %maxval7135 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7134, i32 0, i32 13
  %2566 = load %union.tree_node*, %union.tree_node** %maxval7135, align 8
  %call7136 = call i32 @operand_equal_p(%union.tree_node* %2564, %union.tree_node* %2566, i32 1)
  %tobool7137 = icmp ne i32 %call7136, 0
  br i1 %tobool7137, label %if.end.7149, label %land.lhs.true.7138

land.lhs.true.7138:                               ; preds = %sw.bb.7133
  %2567 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7139 = bitcast %union.tree_node* %2567 to %struct.tree_exp*
  %operands7140 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7139, i32 0, i32 2
  %arrayidx7141 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7140, i32 0, i64 1
  %2568 = load %union.tree_node*, %union.tree_node** %arrayidx7141, align 8
  %2569 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2570 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call7142 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %2569, %union.tree_node* %2570, i32 0)
  %call7143 = call i32 @operand_equal_p(%union.tree_node* %2568, %union.tree_node* %call7142, i32 1)
  %tobool7144 = icmp ne i32 %call7143, 0
  br i1 %tobool7144, label %if.then.7145, label %if.end.7149

if.then.7145:                                     ; preds = %land.lhs.true.7138
  %2571 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2572 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2573 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call7146 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 78, %union.tree_node* %2571, %union.tree_node* %2572, %union.tree_node* %2573)
  %call7147 = call %union.tree_node* @fold(%union.tree_node* %call7146)
  %call7148 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7147)
  store %union.tree_node* %call7148, %union.tree_node** %retval
  br label %return

if.end.7149:                                      ; preds = %land.lhs.true.7138, %sw.bb.7133
  br label %sw.epilog.7203

sw.bb.7150:                                       ; preds = %if.then.7120
  %2574 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2575 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7151 = bitcast %union.tree_node* %2575 to %struct.tree_type*
  %minval7152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7151, i32 0, i32 12
  %2576 = load %union.tree_node*, %union.tree_node** %minval7152, align 8
  %call7153 = call i32 @operand_equal_p(%union.tree_node* %2574, %union.tree_node* %2576, i32 1)
  %tobool7154 = icmp ne i32 %call7153, 0
  br i1 %tobool7154, label %if.end.7166, label %land.lhs.true.7155

land.lhs.true.7155:                               ; preds = %sw.bb.7150
  %2577 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7156 = bitcast %union.tree_node* %2577 to %struct.tree_exp*
  %operands7157 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7156, i32 0, i32 2
  %arrayidx7158 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7157, i32 0, i64 1
  %2578 = load %union.tree_node*, %union.tree_node** %arrayidx7158, align 8
  %2579 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2580 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call7159 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %2579, %union.tree_node* %2580, i32 0)
  %call7160 = call i32 @operand_equal_p(%union.tree_node* %2578, %union.tree_node* %call7159, i32 1)
  %tobool7161 = icmp ne i32 %call7160, 0
  br i1 %tobool7161, label %if.then.7162, label %if.end.7166

if.then.7162:                                     ; preds = %land.lhs.true.7155
  %2581 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2582 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2583 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call7163 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 78, %union.tree_node* %2581, %union.tree_node* %2582, %union.tree_node* %2583)
  %call7164 = call %union.tree_node* @fold(%union.tree_node* %call7163)
  %call7165 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7164)
  store %union.tree_node* %call7165, %union.tree_node** %retval
  br label %return

if.end.7166:                                      ; preds = %land.lhs.true.7155, %sw.bb.7150
  br label %sw.epilog.7203

sw.bb.7167:                                       ; preds = %if.then.7120
  %2584 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2585 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7168 = bitcast %union.tree_node* %2585 to %struct.tree_type*
  %minval7169 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7168, i32 0, i32 12
  %2586 = load %union.tree_node*, %union.tree_node** %minval7169, align 8
  %call7170 = call i32 @operand_equal_p(%union.tree_node* %2584, %union.tree_node* %2586, i32 1)
  %tobool7171 = icmp ne i32 %call7170, 0
  br i1 %tobool7171, label %if.end.7183, label %land.lhs.true.7172

land.lhs.true.7172:                               ; preds = %sw.bb.7167
  %2587 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7173 = bitcast %union.tree_node* %2587 to %struct.tree_exp*
  %operands7174 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7173, i32 0, i32 2
  %arrayidx7175 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7174, i32 0, i64 1
  %2588 = load %union.tree_node*, %union.tree_node** %arrayidx7175, align 8
  %2589 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2590 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call7176 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %2589, %union.tree_node* %2590, i32 0)
  %call7177 = call i32 @operand_equal_p(%union.tree_node* %2588, %union.tree_node* %call7176, i32 1)
  %tobool7178 = icmp ne i32 %call7177, 0
  br i1 %tobool7178, label %if.then.7179, label %if.end.7183

if.then.7179:                                     ; preds = %land.lhs.true.7172
  %2591 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2592 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2593 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call7180 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 79, %union.tree_node* %2591, %union.tree_node* %2592, %union.tree_node* %2593)
  %call7181 = call %union.tree_node* @fold(%union.tree_node* %call7180)
  %call7182 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7181)
  store %union.tree_node* %call7182, %union.tree_node** %retval
  br label %return

if.end.7183:                                      ; preds = %land.lhs.true.7172, %sw.bb.7167
  br label %sw.epilog.7203

sw.bb.7184:                                       ; preds = %if.then.7120
  %2594 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2595 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7185 = bitcast %union.tree_node* %2595 to %struct.tree_type*
  %maxval7186 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7185, i32 0, i32 13
  %2596 = load %union.tree_node*, %union.tree_node** %maxval7186, align 8
  %call7187 = call i32 @operand_equal_p(%union.tree_node* %2594, %union.tree_node* %2596, i32 1)
  %tobool7188 = icmp ne i32 %call7187, 0
  br i1 %tobool7188, label %if.end.7200, label %land.lhs.true.7189

land.lhs.true.7189:                               ; preds = %sw.bb.7184
  %2597 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7190 = bitcast %union.tree_node* %2597 to %struct.tree_exp*
  %operands7191 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7190, i32 0, i32 2
  %arrayidx7192 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7191, i32 0, i64 1
  %2598 = load %union.tree_node*, %union.tree_node** %arrayidx7192, align 8
  %2599 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %2600 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call7193 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %2599, %union.tree_node* %2600, i32 0)
  %call7194 = call i32 @operand_equal_p(%union.tree_node* %2598, %union.tree_node* %call7193, i32 1)
  %tobool7195 = icmp ne i32 %call7194, 0
  br i1 %tobool7195, label %if.then.7196, label %if.end.7200

if.then.7196:                                     ; preds = %land.lhs.true.7189
  %2601 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2602 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %2603 = load %union.tree_node*, %union.tree_node** %arg2, align 8
  %call7197 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 79, %union.tree_node* %2601, %union.tree_node* %2602, %union.tree_node* %2603)
  %call7198 = call %union.tree_node* @fold(%union.tree_node* %call7197)
  %call7199 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7198)
  store %union.tree_node* %call7199, %union.tree_node** %retval
  br label %return

if.end.7200:                                      ; preds = %land.lhs.true.7189, %sw.bb.7184
  br label %sw.epilog.7203

sw.bb.7201:                                       ; preds = %if.then.7120
  br label %sw.epilog.7203

sw.default.7202:                                  ; preds = %if.then.7120
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 7323, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.fold, i32 0, i32 0)) #5
  unreachable

sw.epilog.7203:                                   ; preds = %sw.bb.7201, %if.end.7200, %if.end.7183, %if.end.7166, %if.end.7149, %sw.bb.7121
  br label %if.end.7204

if.end.7204:                                      ; preds = %sw.epilog.7203, %land.lhs.true.7113, %land.lhs.true.7103, %lor.lhs.false.7096
  br label %if.end.7205

if.end.7205:                                      ; preds = %if.end.7204, %land.lhs.true.6789, %lor.lhs.false.6787, %if.end.6739
  %2604 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7206 = bitcast %union.tree_node* %2604 to %struct.tree_common*
  %constant_flag7207 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7206, i32 0, i32 2
  %bf.load7208 = load i32, i32* %constant_flag7207, align 8
  %bf.lshr7209 = lshr i32 %bf.load7208, 9
  %bf.clear7210 = and i32 %bf.lshr7209, 1
  %tobool7211 = icmp ne i32 %bf.clear7210, 0
  br i1 %tobool7211, label %land.lhs.true.7229, label %lor.lhs.false.7212

lor.lhs.false.7212:                               ; preds = %if.end.7205
  %2605 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7213 = bitcast %union.tree_node* %2605 to %struct.tree_common*
  %code7214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7213, i32 0, i32 2
  %bf.load7215 = load i32, i32* %code7214, align 8
  %bf.clear7216 = and i32 %bf.load7215, 255
  %idxprom7217 = sext i32 %bf.clear7216 to i64
  %arrayidx7218 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom7217
  %2606 = load i8, i8* %arrayidx7218, align 1
  %conv7219 = sext i8 %2606 to i32
  %cmp7220 = icmp eq i32 %conv7219, 100
  br i1 %cmp7220, label %land.lhs.true.7229, label %lor.lhs.false.7222

lor.lhs.false.7222:                               ; preds = %lor.lhs.false.7212
  %2607 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7223 = bitcast %union.tree_node* %2607 to %struct.tree_common*
  %code7224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7223, i32 0, i32 2
  %bf.load7225 = load i32, i32* %code7224, align 8
  %bf.clear7226 = and i32 %bf.load7225, 255
  %cmp7227 = icmp eq i32 %bf.clear7226, 118
  br i1 %cmp7227, label %land.lhs.true.7229, label %if.end.7336

land.lhs.true.7229:                               ; preds = %lor.lhs.false.7222, %lor.lhs.false.7212, %if.end.7205
  %2608 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7230 = bitcast %union.tree_node* %2608 to %struct.tree_exp*
  %operands7231 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7230, i32 0, i32 2
  %arrayidx7232 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7231, i32 0, i64 2
  %2609 = load %union.tree_node*, %union.tree_node** %arrayidx7232, align 8
  %common7233 = bitcast %union.tree_node* %2609 to %struct.tree_common*
  %constant_flag7234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7233, i32 0, i32 2
  %bf.load7235 = load i32, i32* %constant_flag7234, align 8
  %bf.lshr7236 = lshr i32 %bf.load7235, 9
  %bf.clear7237 = and i32 %bf.lshr7236, 1
  %tobool7238 = icmp ne i32 %bf.clear7237, 0
  br i1 %tobool7238, label %if.end.7336, label %lor.lhs.false.7239

lor.lhs.false.7239:                               ; preds = %land.lhs.true.7229
  %2610 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7240 = bitcast %union.tree_node* %2610 to %struct.tree_exp*
  %operands7241 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7240, i32 0, i32 2
  %arrayidx7242 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7241, i32 0, i64 2
  %2611 = load %union.tree_node*, %union.tree_node** %arrayidx7242, align 8
  %common7243 = bitcast %union.tree_node* %2611 to %struct.tree_common*
  %code7244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7243, i32 0, i32 2
  %bf.load7245 = load i32, i32* %code7244, align 8
  %bf.clear7246 = and i32 %bf.load7245, 255
  %idxprom7247 = sext i32 %bf.clear7246 to i64
  %arrayidx7248 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom7247
  %2612 = load i8, i8* %arrayidx7248, align 1
  %conv7249 = sext i8 %2612 to i32
  %cmp7250 = icmp eq i32 %conv7249, 100
  br i1 %cmp7250, label %if.end.7336, label %lor.lhs.false.7252

lor.lhs.false.7252:                               ; preds = %lor.lhs.false.7239
  %2613 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7253 = bitcast %union.tree_node* %2613 to %struct.tree_exp*
  %operands7254 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7253, i32 0, i32 2
  %arrayidx7255 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7254, i32 0, i64 2
  %2614 = load %union.tree_node*, %union.tree_node** %arrayidx7255, align 8
  %common7256 = bitcast %union.tree_node* %2614 to %struct.tree_common*
  %code7257 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7256, i32 0, i32 2
  %bf.load7258 = load i32, i32* %code7257, align 8
  %bf.clear7259 = and i32 %bf.load7258, 255
  %cmp7260 = icmp eq i32 %bf.clear7259, 118
  br i1 %cmp7260, label %if.end.7336, label %if.then.7262

if.then.7262:                                     ; preds = %lor.lhs.false.7252
  %2615 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call7263 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %2615)
  store %union.tree_node* %call7263, %union.tree_node** %tem, align 8
  %2616 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common7264 = bitcast %union.tree_node* %2616 to %struct.tree_common*
  %code7265 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7264, i32 0, i32 2
  %bf.load7266 = load i32, i32* %code7265, align 8
  %bf.clear7267 = and i32 %bf.load7266, 255
  %cmp7268 = icmp ne i32 %bf.clear7267, 96
  br i1 %cmp7268, label %if.then.7270, label %if.end.7335

if.then.7270:                                     ; preds = %if.then.7262
  %2617 = load i32, i32* %code, align 4
  %2618 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2619 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %2620 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7271 = bitcast %union.tree_node* %2620 to %struct.tree_exp*
  %operands7272 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7271, i32 0, i32 2
  %arrayidx7273 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7272, i32 0, i64 2
  %2621 = load %union.tree_node*, %union.tree_node** %arrayidx7273, align 8
  %2622 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7274 = bitcast %union.tree_node* %2622 to %struct.tree_exp*
  %operands7275 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7274, i32 0, i32 2
  %arrayidx7276 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7275, i32 0, i64 1
  %2623 = load %union.tree_node*, %union.tree_node** %arrayidx7276, align 8
  %call7277 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2617, %union.tree_node* %2618, %union.tree_node* %2619, %union.tree_node* %2621, %union.tree_node* %2623)
  store %union.tree_node* %call7277, %union.tree_node** %t, align 8
  %2624 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %2624, %union.tree_node** %arg0, align 8
  %2625 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7278 = bitcast %union.tree_node* %2625 to %struct.tree_exp*
  %operands7279 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7278, i32 0, i32 2
  %arrayidx7280 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7279, i32 0, i64 1
  %2626 = load %union.tree_node*, %union.tree_node** %arrayidx7280, align 8
  store %union.tree_node* %2626, %union.tree_node** %arg1, align 8
  br label %while.cond.7281

while.cond.7281:                                  ; preds = %while.body.7330, %if.then.7270
  %2627 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7282 = bitcast %union.tree_node* %2627 to %struct.tree_common*
  %code7283 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7282, i32 0, i32 2
  %bf.load7284 = load i32, i32* %code7283, align 8
  %bf.clear7285 = and i32 %bf.load7284, 255
  %cmp7286 = icmp eq i32 %bf.clear7285, 115
  br i1 %cmp7286, label %land.lhs.true.7302, label %lor.lhs.false.7288

lor.lhs.false.7288:                               ; preds = %while.cond.7281
  %2628 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7289 = bitcast %union.tree_node* %2628 to %struct.tree_common*
  %code7290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7289, i32 0, i32 2
  %bf.load7291 = load i32, i32* %code7290, align 8
  %bf.clear7292 = and i32 %bf.load7291, 255
  %cmp7293 = icmp eq i32 %bf.clear7292, 114
  br i1 %cmp7293, label %land.lhs.true.7302, label %lor.lhs.false.7295

lor.lhs.false.7295:                               ; preds = %lor.lhs.false.7288
  %2629 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7296 = bitcast %union.tree_node* %2629 to %struct.tree_common*
  %code7297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7296, i32 0, i32 2
  %bf.load7298 = load i32, i32* %code7297, align 8
  %bf.clear7299 = and i32 %bf.load7298, 255
  %cmp7300 = icmp eq i32 %bf.clear7299, 116
  br i1 %cmp7300, label %land.lhs.true.7302, label %land.end.7328

land.lhs.true.7302:                               ; preds = %lor.lhs.false.7295, %lor.lhs.false.7288, %while.cond.7281
  %2630 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp7303 = bitcast %union.tree_node* %2630 to %struct.tree_exp*
  %operands7304 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7303, i32 0, i32 2
  %arrayidx7305 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7304, i32 0, i64 0
  %2631 = load %union.tree_node*, %union.tree_node** %arrayidx7305, align 8
  %2632 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp7306 = icmp ne %union.tree_node* %2631, %2632
  br i1 %cmp7306, label %land.rhs.7308, label %land.end.7328

land.rhs.7308:                                    ; preds = %land.lhs.true.7302
  %2633 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common7309 = bitcast %union.tree_node* %2633 to %struct.tree_common*
  %type7310 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7309, i32 0, i32 1
  %2634 = load %union.tree_node*, %union.tree_node** %type7310, align 8
  %type7311 = bitcast %union.tree_node* %2634 to %struct.tree_type*
  %mode7312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7311, i32 0, i32 6
  %bf.load7313 = load i32, i32* %mode7312, align 4
  %bf.lshr7314 = lshr i32 %bf.load7313, 9
  %bf.clear7315 = and i32 %bf.lshr7314, 127
  %2635 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp7316 = bitcast %union.tree_node* %2635 to %struct.tree_exp*
  %operands7317 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7316, i32 0, i32 2
  %arrayidx7318 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7317, i32 0, i64 0
  %2636 = load %union.tree_node*, %union.tree_node** %arrayidx7318, align 8
  %common7319 = bitcast %union.tree_node* %2636 to %struct.tree_common*
  %type7320 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7319, i32 0, i32 1
  %2637 = load %union.tree_node*, %union.tree_node** %type7320, align 8
  %type7321 = bitcast %union.tree_node* %2637 to %struct.tree_type*
  %mode7322 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7321, i32 0, i32 6
  %bf.load7323 = load i32, i32* %mode7322, align 4
  %bf.lshr7324 = lshr i32 %bf.load7323, 9
  %bf.clear7325 = and i32 %bf.lshr7324, 127
  %cmp7326 = icmp eq i32 %bf.clear7315, %bf.clear7325
  br label %land.end.7328

land.end.7328:                                    ; preds = %land.rhs.7308, %land.lhs.true.7302, %lor.lhs.false.7295
  %2638 = phi i1 [ false, %land.lhs.true.7302 ], [ false, %lor.lhs.false.7295 ], [ %cmp7326, %land.rhs.7308 ]
  br i1 %2638, label %while.body.7330, label %while.end.7334

while.body.7330:                                  ; preds = %land.end.7328
  %2639 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %exp7331 = bitcast %union.tree_node* %2639 to %struct.tree_exp*
  %operands7332 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7331, i32 0, i32 2
  %arrayidx7333 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7332, i32 0, i64 0
  %2640 = load %union.tree_node*, %union.tree_node** %arrayidx7333, align 8
  store %union.tree_node* %2640, %union.tree_node** %arg1, align 8
  br label %while.cond.7281

while.end.7334:                                   ; preds = %land.end.7328
  br label %if.end.7335

if.end.7335:                                      ; preds = %while.end.7334, %if.then.7262
  br label %if.end.7336

if.end.7336:                                      ; preds = %if.end.7335, %lor.lhs.false.7252, %lor.lhs.false.7239, %land.lhs.true.7229, %lor.lhs.false.7222
  %2641 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7337 = bitcast %union.tree_node* %2641 to %struct.tree_exp*
  %operands7338 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7337, i32 0, i32 2
  %arrayidx7339 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7338, i32 0, i64 1
  %2642 = load %union.tree_node*, %union.tree_node** %arrayidx7339, align 8
  %call7340 = call i32 @integer_onep(%union.tree_node* %2642)
  %tobool7341 = icmp ne i32 %call7340, 0
  br i1 %tobool7341, label %land.lhs.true.7342, label %if.end.7355

land.lhs.true.7342:                               ; preds = %if.end.7336
  %2643 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7343 = bitcast %union.tree_node* %2643 to %struct.tree_exp*
  %operands7344 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7343, i32 0, i32 2
  %arrayidx7345 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7344, i32 0, i64 2
  %2644 = load %union.tree_node*, %union.tree_node** %arrayidx7345, align 8
  %call7346 = call i32 @integer_zerop(%union.tree_node* %2644)
  %tobool7347 = icmp ne i32 %call7346, 0
  br i1 %tobool7347, label %land.lhs.true.7348, label %if.end.7355

land.lhs.true.7348:                               ; preds = %land.lhs.true.7342
  %2645 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2646 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7349 = bitcast %union.tree_node* %2646 to %struct.tree_common*
  %type7350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7349, i32 0, i32 1
  %2647 = load %union.tree_node*, %union.tree_node** %type7350, align 8
  %cmp7351 = icmp eq %union.tree_node* %2645, %2647
  br i1 %cmp7351, label %if.then.7353, label %if.end.7355

if.then.7353:                                     ; preds = %land.lhs.true.7348
  %2648 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call7354 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %2648)
  store %union.tree_node* %call7354, %union.tree_node** %retval
  br label %return

if.end.7355:                                      ; preds = %land.lhs.true.7348, %land.lhs.true.7342, %if.end.7336
  %2649 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7356 = bitcast %union.tree_node* %2649 to %struct.tree_exp*
  %operands7357 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7356, i32 0, i32 2
  %arrayidx7358 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7357, i32 0, i64 2
  %2650 = load %union.tree_node*, %union.tree_node** %arrayidx7358, align 8
  %call7359 = call i32 @integer_zerop(%union.tree_node* %2650)
  %tobool7360 = icmp ne i32 %call7359, 0
  br i1 %tobool7360, label %land.lhs.true.7361, label %if.end.7402

land.lhs.true.7361:                               ; preds = %if.end.7355
  %2651 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7362 = bitcast %union.tree_node* %2651 to %struct.tree_common*
  %code7363 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7362, i32 0, i32 2
  %bf.load7364 = load i32, i32* %code7363, align 8
  %bf.clear7365 = and i32 %bf.load7364, 255
  %cmp7366 = icmp eq i32 %bf.clear7365, 102
  br i1 %cmp7366, label %land.lhs.true.7368, label %if.end.7402

land.lhs.true.7368:                               ; preds = %land.lhs.true.7361
  %2652 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7369 = bitcast %union.tree_node* %2652 to %struct.tree_exp*
  %operands7370 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7369, i32 0, i32 2
  %arrayidx7371 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7370, i32 0, i64 1
  %2653 = load %union.tree_node*, %union.tree_node** %arrayidx7371, align 8
  %call7372 = call i32 @integer_zerop(%union.tree_node* %2653)
  %tobool7373 = icmp ne i32 %call7372, 0
  br i1 %tobool7373, label %land.lhs.true.7374, label %if.end.7402

land.lhs.true.7374:                               ; preds = %land.lhs.true.7368
  %2654 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7375 = call i32 @integer_pow2p(%union.tree_node* %2654)
  %tobool7376 = icmp ne i32 %call7375, 0
  br i1 %tobool7376, label %land.lhs.true.7377, label %if.end.7402

land.lhs.true.7377:                               ; preds = %land.lhs.true.7374
  %2655 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7378 = bitcast %union.tree_node* %2655 to %struct.tree_exp*
  %operands7379 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7378, i32 0, i32 2
  %arrayidx7380 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7379, i32 0, i64 0
  %2656 = load %union.tree_node*, %union.tree_node** %arrayidx7380, align 8
  %common7381 = bitcast %union.tree_node* %2656 to %struct.tree_common*
  %code7382 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7381, i32 0, i32 2
  %bf.load7383 = load i32, i32* %code7382, align 8
  %bf.clear7384 = and i32 %bf.load7383, 255
  %cmp7385 = icmp eq i32 %bf.clear7384, 88
  br i1 %cmp7385, label %land.lhs.true.7387, label %if.end.7402

land.lhs.true.7387:                               ; preds = %land.lhs.true.7377
  %2657 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7388 = bitcast %union.tree_node* %2657 to %struct.tree_exp*
  %operands7389 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7388, i32 0, i32 2
  %arrayidx7390 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7389, i32 0, i64 0
  %2658 = load %union.tree_node*, %union.tree_node** %arrayidx7390, align 8
  %exp7391 = bitcast %union.tree_node* %2658 to %struct.tree_exp*
  %operands7392 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7391, i32 0, i32 2
  %arrayidx7393 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7392, i32 0, i64 1
  %2659 = load %union.tree_node*, %union.tree_node** %arrayidx7393, align 8
  %2660 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7394 = call i32 @operand_equal_p(%union.tree_node* %2659, %union.tree_node* %2660, i32 1)
  %tobool7395 = icmp ne i32 %call7394, 0
  br i1 %tobool7395, label %if.then.7396, label %if.end.7402

if.then.7396:                                     ; preds = %land.lhs.true.7387
  %2661 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2662 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7397 = bitcast %union.tree_node* %2662 to %struct.tree_exp*
  %operands7398 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7397, i32 0, i32 2
  %arrayidx7399 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7398, i32 0, i64 0
  %2663 = load %union.tree_node*, %union.tree_node** %arrayidx7399, align 8
  %call7400 = call %union.tree_node* @convert(%union.tree_node* %2661, %union.tree_node* %2663)
  %call7401 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %call7400)
  store %union.tree_node* %call7401, %union.tree_node** %retval
  br label %return

if.end.7402:                                      ; preds = %land.lhs.true.7387, %land.lhs.true.7377, %land.lhs.true.7374, %land.lhs.true.7368, %land.lhs.true.7361, %if.end.7355
  %2664 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2664, %union.tree_node** %retval
  br label %return

sw.bb.7403:                                       ; preds = %if.end.901
  %2665 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7404 = bitcast %union.tree_node* %2665 to %struct.tree_common*
  %side_effects_flag7405 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7404, i32 0, i32 2
  %bf.load7406 = load i32, i32* %side_effects_flag7405, align 8
  %bf.lshr7407 = lshr i32 %bf.load7406, 8
  %bf.clear7408 = and i32 %bf.lshr7407, 1
  %tobool7409 = icmp ne i32 %bf.clear7408, 0
  br i1 %tobool7409, label %if.then.7412, label %lor.lhs.false.7410

lor.lhs.false.7410:                               ; preds = %sw.bb.7403
  %2666 = load i32, i32* @pedantic, align 4
  %tobool7411 = icmp ne i32 %2666, 0
  br i1 %tobool7411, label %if.then.7412, label %if.end.7413

if.then.7412:                                     ; preds = %lor.lhs.false.7410, %sw.bb.7403
  %2667 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2667, %union.tree_node** %retval
  br label %return

if.end.7413:                                      ; preds = %lor.lhs.false.7410
  %2668 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7414 = call i32 @integer_zerop(%union.tree_node* %2668)
  %tobool7415 = icmp ne i32 %call7414, 0
  br i1 %tobool7415, label %if.then.7416, label %if.end.7418

if.then.7416:                                     ; preds = %if.end.7413
  %2669 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2670 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7417 = call %union.tree_node* @build1(i32 115, %union.tree_node* %2669, %union.tree_node* %2670)
  store %union.tree_node* %call7417, %union.tree_node** %retval
  br label %return

if.end.7418:                                      ; preds = %if.end.7413
  %2671 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2672 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7419 = call %union.tree_node* @convert(%union.tree_node* %2671, %union.tree_node* %2672)
  store %union.tree_node* %call7419, %union.tree_node** %retval
  br label %return

sw.bb.7420:                                       ; preds = %if.end.901
  %2673 = load i32, i32* %wins, align 4
  %tobool7421 = icmp ne i32 %2673, 0
  br i1 %tobool7421, label %if.then.7422, label %if.end.7424

if.then.7422:                                     ; preds = %sw.bb.7420
  %2674 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2675 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %2676 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call7423 = call %union.tree_node* @build_complex(%union.tree_node* %2674, %union.tree_node* %2675, %union.tree_node* %2676)
  store %union.tree_node* %call7423, %union.tree_node** %retval
  br label %return

if.end.7424:                                      ; preds = %sw.bb.7420
  %2677 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2677, %union.tree_node** %retval
  br label %return

sw.bb.7425:                                       ; preds = %if.end.901
  %2678 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7426 = bitcast %union.tree_node* %2678 to %struct.tree_common*
  %type7427 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7426, i32 0, i32 1
  %2679 = load %union.tree_node*, %union.tree_node** %type7427, align 8
  %common7428 = bitcast %union.tree_node* %2679 to %struct.tree_common*
  %code7429 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7428, i32 0, i32 2
  %bf.load7430 = load i32, i32* %code7429, align 8
  %bf.clear7431 = and i32 %bf.load7430, 255
  %cmp7432 = icmp ne i32 %bf.clear7431, 8
  br i1 %cmp7432, label %if.then.7434, label %if.else.7435

if.then.7434:                                     ; preds = %sw.bb.7425
  %2680 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2680, %union.tree_node** %retval
  br label %return

if.else.7435:                                     ; preds = %sw.bb.7425
  %2681 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7436 = bitcast %union.tree_node* %2681 to %struct.tree_common*
  %code7437 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7436, i32 0, i32 2
  %bf.load7438 = load i32, i32* %code7437, align 8
  %bf.clear7439 = and i32 %bf.load7438, 255
  %cmp7440 = icmp eq i32 %bf.clear7439, 125
  br i1 %cmp7440, label %if.then.7442, label %if.else.7450

if.then.7442:                                     ; preds = %if.else.7435
  %2682 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2683 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7443 = bitcast %union.tree_node* %2683 to %struct.tree_exp*
  %operands7444 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7443, i32 0, i32 2
  %arrayidx7445 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7444, i32 0, i64 0
  %2684 = load %union.tree_node*, %union.tree_node** %arrayidx7445, align 8
  %2685 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7446 = bitcast %union.tree_node* %2685 to %struct.tree_exp*
  %operands7447 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7446, i32 0, i32 2
  %arrayidx7448 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7447, i32 0, i64 1
  %2686 = load %union.tree_node*, %union.tree_node** %arrayidx7448, align 8
  %call7449 = call %union.tree_node* @omit_one_operand(%union.tree_node* %2682, %union.tree_node* %2684, %union.tree_node* %2686)
  store %union.tree_node* %call7449, %union.tree_node** %retval
  br label %return

if.else.7450:                                     ; preds = %if.else.7435
  %2687 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7451 = bitcast %union.tree_node* %2687 to %struct.tree_common*
  %code7452 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7451, i32 0, i32 2
  %bf.load7453 = load i32, i32* %code7452, align 8
  %bf.clear7454 = and i32 %bf.load7453, 255
  %cmp7455 = icmp eq i32 %bf.clear7454, 27
  br i1 %cmp7455, label %if.then.7457, label %if.else.7460

if.then.7457:                                     ; preds = %if.else.7450
  %2688 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %complex7458 = bitcast %union.tree_node* %2688 to %struct.tree_complex*
  %real7459 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex7458, i32 0, i32 2
  %2689 = load %union.tree_node*, %union.tree_node** %real7459, align 8
  store %union.tree_node* %2689, %union.tree_node** %retval
  br label %return

if.else.7460:                                     ; preds = %if.else.7450
  %2690 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7461 = bitcast %union.tree_node* %2690 to %struct.tree_common*
  %code7462 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7461, i32 0, i32 2
  %bf.load7463 = load i32, i32* %code7462, align 8
  %bf.clear7464 = and i32 %bf.load7463, 255
  %cmp7465 = icmp eq i32 %bf.clear7464, 59
  br i1 %cmp7465, label %if.then.7474, label %lor.lhs.false.7467

lor.lhs.false.7467:                               ; preds = %if.else.7460
  %2691 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7468 = bitcast %union.tree_node* %2691 to %struct.tree_common*
  %code7469 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7468, i32 0, i32 2
  %bf.load7470 = load i32, i32* %code7469, align 8
  %bf.clear7471 = and i32 %bf.load7470, 255
  %cmp7472 = icmp eq i32 %bf.clear7471, 60
  br i1 %cmp7472, label %if.then.7474, label %if.end.7491

if.then.7474:                                     ; preds = %lor.lhs.false.7467, %if.else.7460
  %2692 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7475 = bitcast %union.tree_node* %2692 to %struct.tree_common*
  %code7476 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7475, i32 0, i32 2
  %bf.load7477 = load i32, i32* %code7476, align 8
  %bf.clear7478 = and i32 %bf.load7477, 255
  %2693 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2694 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2695 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7479 = bitcast %union.tree_node* %2695 to %struct.tree_exp*
  %operands7480 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7479, i32 0, i32 2
  %arrayidx7481 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7480, i32 0, i64 0
  %2696 = load %union.tree_node*, %union.tree_node** %arrayidx7481, align 8
  %call7482 = call %union.tree_node* @build1(i32 127, %union.tree_node* %2694, %union.tree_node* %2696)
  %call7483 = call %union.tree_node* @fold(%union.tree_node* %call7482)
  %2697 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2698 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7484 = bitcast %union.tree_node* %2698 to %struct.tree_exp*
  %operands7485 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7484, i32 0, i32 2
  %arrayidx7486 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7485, i32 0, i64 1
  %2699 = load %union.tree_node*, %union.tree_node** %arrayidx7486, align 8
  %call7487 = call %union.tree_node* @build1(i32 127, %union.tree_node* %2697, %union.tree_node* %2699)
  %call7488 = call %union.tree_node* @fold(%union.tree_node* %call7487)
  %call7489 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear7478, %union.tree_node* %2693, %union.tree_node* %call7483, %union.tree_node* %call7488)
  %call7490 = call %union.tree_node* @fold(%union.tree_node* %call7489)
  store %union.tree_node* %call7490, %union.tree_node** %retval
  br label %return

if.end.7491:                                      ; preds = %lor.lhs.false.7467
  br label %if.end.7492

if.end.7492:                                      ; preds = %if.end.7491
  br label %if.end.7493

if.end.7493:                                      ; preds = %if.end.7492
  br label %if.end.7494

if.end.7494:                                      ; preds = %if.end.7493
  %2700 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2700, %union.tree_node** %retval
  br label %return

sw.bb.7495:                                       ; preds = %if.end.901
  %2701 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7496 = bitcast %union.tree_node* %2701 to %struct.tree_common*
  %type7497 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7496, i32 0, i32 1
  %2702 = load %union.tree_node*, %union.tree_node** %type7497, align 8
  %common7498 = bitcast %union.tree_node* %2702 to %struct.tree_common*
  %code7499 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7498, i32 0, i32 2
  %bf.load7500 = load i32, i32* %code7499, align 8
  %bf.clear7501 = and i32 %bf.load7500, 255
  %cmp7502 = icmp ne i32 %bf.clear7501, 8
  br i1 %cmp7502, label %if.then.7504, label %if.else.7506

if.then.7504:                                     ; preds = %sw.bb.7495
  %2703 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2704 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call7505 = call %union.tree_node* @convert(%union.tree_node* %2703, %union.tree_node* %2704)
  store %union.tree_node* %call7505, %union.tree_node** %retval
  br label %return

if.else.7506:                                     ; preds = %sw.bb.7495
  %2705 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7507 = bitcast %union.tree_node* %2705 to %struct.tree_common*
  %code7508 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7507, i32 0, i32 2
  %bf.load7509 = load i32, i32* %code7508, align 8
  %bf.clear7510 = and i32 %bf.load7509, 255
  %cmp7511 = icmp eq i32 %bf.clear7510, 125
  br i1 %cmp7511, label %if.then.7513, label %if.else.7521

if.then.7513:                                     ; preds = %if.else.7506
  %2706 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2707 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7514 = bitcast %union.tree_node* %2707 to %struct.tree_exp*
  %operands7515 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7514, i32 0, i32 2
  %arrayidx7516 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7515, i32 0, i64 1
  %2708 = load %union.tree_node*, %union.tree_node** %arrayidx7516, align 8
  %2709 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7517 = bitcast %union.tree_node* %2709 to %struct.tree_exp*
  %operands7518 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7517, i32 0, i32 2
  %arrayidx7519 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7518, i32 0, i64 0
  %2710 = load %union.tree_node*, %union.tree_node** %arrayidx7519, align 8
  %call7520 = call %union.tree_node* @omit_one_operand(%union.tree_node* %2706, %union.tree_node* %2708, %union.tree_node* %2710)
  store %union.tree_node* %call7520, %union.tree_node** %retval
  br label %return

if.else.7521:                                     ; preds = %if.else.7506
  %2711 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7522 = bitcast %union.tree_node* %2711 to %struct.tree_common*
  %code7523 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7522, i32 0, i32 2
  %bf.load7524 = load i32, i32* %code7523, align 8
  %bf.clear7525 = and i32 %bf.load7524, 255
  %cmp7526 = icmp eq i32 %bf.clear7525, 27
  br i1 %cmp7526, label %if.then.7528, label %if.else.7531

if.then.7528:                                     ; preds = %if.else.7521
  %2712 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %complex7529 = bitcast %union.tree_node* %2712 to %struct.tree_complex*
  %imag7530 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex7529, i32 0, i32 3
  %2713 = load %union.tree_node*, %union.tree_node** %imag7530, align 8
  store %union.tree_node* %2713, %union.tree_node** %retval
  br label %return

if.else.7531:                                     ; preds = %if.else.7521
  %2714 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7532 = bitcast %union.tree_node* %2714 to %struct.tree_common*
  %code7533 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7532, i32 0, i32 2
  %bf.load7534 = load i32, i32* %code7533, align 8
  %bf.clear7535 = and i32 %bf.load7534, 255
  %cmp7536 = icmp eq i32 %bf.clear7535, 59
  br i1 %cmp7536, label %if.then.7545, label %lor.lhs.false.7538

lor.lhs.false.7538:                               ; preds = %if.else.7531
  %2715 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7539 = bitcast %union.tree_node* %2715 to %struct.tree_common*
  %code7540 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7539, i32 0, i32 2
  %bf.load7541 = load i32, i32* %code7540, align 8
  %bf.clear7542 = and i32 %bf.load7541, 255
  %cmp7543 = icmp eq i32 %bf.clear7542, 60
  br i1 %cmp7543, label %if.then.7545, label %if.end.7562

if.then.7545:                                     ; preds = %lor.lhs.false.7538, %if.else.7531
  %2716 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7546 = bitcast %union.tree_node* %2716 to %struct.tree_common*
  %code7547 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7546, i32 0, i32 2
  %bf.load7548 = load i32, i32* %code7547, align 8
  %bf.clear7549 = and i32 %bf.load7548, 255
  %2717 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2718 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2719 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7550 = bitcast %union.tree_node* %2719 to %struct.tree_exp*
  %operands7551 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7550, i32 0, i32 2
  %arrayidx7552 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7551, i32 0, i64 0
  %2720 = load %union.tree_node*, %union.tree_node** %arrayidx7552, align 8
  %call7553 = call %union.tree_node* @build1(i32 128, %union.tree_node* %2718, %union.tree_node* %2720)
  %call7554 = call %union.tree_node* @fold(%union.tree_node* %call7553)
  %2721 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2722 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7555 = bitcast %union.tree_node* %2722 to %struct.tree_exp*
  %operands7556 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7555, i32 0, i32 2
  %arrayidx7557 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7556, i32 0, i64 1
  %2723 = load %union.tree_node*, %union.tree_node** %arrayidx7557, align 8
  %call7558 = call %union.tree_node* @build1(i32 128, %union.tree_node* %2721, %union.tree_node* %2723)
  %call7559 = call %union.tree_node* @fold(%union.tree_node* %call7558)
  %call7560 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear7549, %union.tree_node* %2717, %union.tree_node* %call7554, %union.tree_node* %call7559)
  %call7561 = call %union.tree_node* @fold(%union.tree_node* %call7560)
  store %union.tree_node* %call7561, %union.tree_node** %retval
  br label %return

if.end.7562:                                      ; preds = %lor.lhs.false.7538
  br label %if.end.7563

if.end.7563:                                      ; preds = %if.end.7562
  br label %if.end.7564

if.end.7564:                                      ; preds = %if.end.7563
  br label %if.end.7565

if.end.7565:                                      ; preds = %if.end.7564
  %2724 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2724, %union.tree_node** %retval
  br label %return

sw.bb.7566:                                       ; preds = %if.end.901
  %2725 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call7567 = call i32 @has_cleanups(%union.tree_node* %2725)
  %tobool7568 = icmp ne i32 %call7567, 0
  br i1 %tobool7568, label %if.end.7573, label %if.then.7569

if.then.7569:                                     ; preds = %sw.bb.7566
  %2726 = load %union.tree_node*, %union.tree_node** %t, align 8
  %exp7570 = bitcast %union.tree_node* %2726 to %struct.tree_exp*
  %operands7571 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7570, i32 0, i32 2
  %arrayidx7572 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7571, i32 0, i64 0
  %2727 = load %union.tree_node*, %union.tree_node** %arrayidx7572, align 8
  store %union.tree_node* %2727, %union.tree_node** %retval
  br label %return

if.end.7573:                                      ; preds = %sw.bb.7566
  %2728 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common7576 = bitcast %union.tree_node* %2728 to %struct.tree_common*
  %code7577 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7576, i32 0, i32 2
  %bf.load7578 = load i32, i32* %code7577, align 8
  %bf.clear7579 = and i32 %bf.load7578, 255
  store i32 %bf.clear7579, i32* %code07575, align 4
  %2729 = load i32, i32* %code07575, align 4
  %idxprom7581 = sext i32 %2729 to i64
  %arrayidx7582 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom7581
  %2730 = load i8, i8* %arrayidx7582, align 1
  %conv7583 = sext i8 %2730 to i32
  store i32 %conv7583, i32* %kind0, align 4
  %2731 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7586 = bitcast %union.tree_node* %2731 to %struct.tree_exp*
  %operands7587 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7586, i32 0, i32 2
  %arrayidx7588 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7587, i32 0, i64 0
  %2732 = load %union.tree_node*, %union.tree_node** %arrayidx7588, align 8
  store %union.tree_node* %2732, %union.tree_node** %arg007585, align 8
  %2733 = load i32, i32* %kind0, align 4
  %cmp7591 = icmp eq i32 %2733, 49
  br i1 %cmp7591, label %if.then.7596, label %lor.lhs.false.7593

lor.lhs.false.7593:                               ; preds = %if.end.7573
  %2734 = load i32, i32* %code07575, align 4
  %cmp7594 = icmp eq i32 %2734, 96
  br i1 %cmp7594, label %if.then.7596, label %if.end.7603

if.then.7596:                                     ; preds = %lor.lhs.false.7593, %if.end.7573
  %2735 = load i32, i32* %code07575, align 4
  %2736 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2737 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %common7597 = bitcast %union.tree_node* %2737 to %struct.tree_common*
  %type7598 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7597, i32 0, i32 1
  %2738 = load %union.tree_node*, %union.tree_node** %type7598, align 8
  %2739 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %call7599 = call %union.tree_node* @build1(i32 56, %union.tree_node* %2738, %union.tree_node* %2739)
  %call7600 = call %union.tree_node* @fold(%union.tree_node* %call7599)
  %call7601 = call %union.tree_node* @build1(i32 %2735, %union.tree_node* %2736, %union.tree_node* %call7600)
  %call7602 = call %union.tree_node* @fold(%union.tree_node* %call7601)
  store %union.tree_node* %call7602, %union.tree_node** %retval
  br label %return

if.end.7603:                                      ; preds = %lor.lhs.false.7593
  %2740 = load i32, i32* %kind0, align 4
  %cmp7604 = icmp eq i32 %2740, 60
  br i1 %cmp7604, label %if.then.7624, label %lor.lhs.false.7606

lor.lhs.false.7606:                               ; preds = %if.end.7603
  %2741 = load i32, i32* %kind0, align 4
  %cmp7607 = icmp eq i32 %2741, 50
  br i1 %cmp7607, label %if.then.7624, label %lor.lhs.false.7609

lor.lhs.false.7609:                               ; preds = %lor.lhs.false.7606
  %2742 = load i32, i32* %code07575, align 4
  %cmp7610 = icmp eq i32 %2742, 91
  br i1 %cmp7610, label %if.then.7624, label %lor.lhs.false.7612

lor.lhs.false.7612:                               ; preds = %lor.lhs.false.7609
  %2743 = load i32, i32* %code07575, align 4
  %cmp7613 = icmp eq i32 %2743, 92
  br i1 %cmp7613, label %if.then.7624, label %lor.lhs.false.7615

lor.lhs.false.7615:                               ; preds = %lor.lhs.false.7612
  %2744 = load i32, i32* %code07575, align 4
  %cmp7616 = icmp eq i32 %2744, 93
  br i1 %cmp7616, label %if.then.7624, label %lor.lhs.false.7618

lor.lhs.false.7618:                               ; preds = %lor.lhs.false.7615
  %2745 = load i32, i32* %code07575, align 4
  %cmp7619 = icmp eq i32 %2745, 94
  br i1 %cmp7619, label %if.then.7624, label %lor.lhs.false.7621

lor.lhs.false.7621:                               ; preds = %lor.lhs.false.7618
  %2746 = load i32, i32* %code07575, align 4
  %cmp7622 = icmp eq i32 %2746, 95
  br i1 %cmp7622, label %if.then.7624, label %if.end.7665

if.then.7624:                                     ; preds = %lor.lhs.false.7621, %lor.lhs.false.7618, %lor.lhs.false.7615, %lor.lhs.false.7612, %lor.lhs.false.7609, %lor.lhs.false.7606, %if.end.7603
  %2747 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp7625 = bitcast %union.tree_node* %2747 to %struct.tree_exp*
  %operands7626 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7625, i32 0, i32 2
  %arrayidx7627 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7626, i32 0, i64 1
  %2748 = load %union.tree_node*, %union.tree_node** %arrayidx7627, align 8
  store %union.tree_node* %2748, %union.tree_node** %arg017590, align 8
  %2749 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %common7628 = bitcast %union.tree_node* %2749 to %struct.tree_common*
  %constant_flag7629 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7628, i32 0, i32 2
  %bf.load7630 = load i32, i32* %constant_flag7629, align 8
  %bf.lshr7631 = lshr i32 %bf.load7630, 9
  %bf.clear7632 = and i32 %bf.lshr7631, 1
  %tobool7633 = icmp ne i32 %bf.clear7632, 0
  br i1 %tobool7633, label %if.then.7643, label %lor.lhs.false.7634

lor.lhs.false.7634:                               ; preds = %if.then.7624
  %2750 = load i32, i32* %code07575, align 4
  %cmp7635 = icmp eq i32 %2750, 91
  br i1 %cmp7635, label %land.lhs.true.7640, label %lor.lhs.false.7637

lor.lhs.false.7637:                               ; preds = %lor.lhs.false.7634
  %2751 = load i32, i32* %code07575, align 4
  %cmp7638 = icmp eq i32 %2751, 92
  br i1 %cmp7638, label %land.lhs.true.7640, label %if.end.7650

land.lhs.true.7640:                               ; preds = %lor.lhs.false.7637, %lor.lhs.false.7634
  %2752 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %call7641 = call i32 @has_cleanups(%union.tree_node* %2752)
  %tobool7642 = icmp ne i32 %call7641, 0
  br i1 %tobool7642, label %if.end.7650, label %if.then.7643

if.then.7643:                                     ; preds = %land.lhs.true.7640, %if.then.7624
  %2753 = load i32, i32* %code07575, align 4
  %2754 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2755 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %2756 = load %union.tree_node*, %union.tree_node** %arg017590, align 8
  %common7644 = bitcast %union.tree_node* %2756 to %struct.tree_common*
  %type7645 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7644, i32 0, i32 1
  %2757 = load %union.tree_node*, %union.tree_node** %type7645, align 8
  %2758 = load %union.tree_node*, %union.tree_node** %arg017590, align 8
  %call7646 = call %union.tree_node* @build1(i32 56, %union.tree_node* %2757, %union.tree_node* %2758)
  %call7647 = call %union.tree_node* @fold(%union.tree_node* %call7646)
  %call7648 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2753, %union.tree_node* %2754, %union.tree_node* %2755, %union.tree_node* %call7647)
  %call7649 = call %union.tree_node* @fold(%union.tree_node* %call7648)
  store %union.tree_node* %call7649, %union.tree_node** %retval
  br label %return

if.end.7650:                                      ; preds = %land.lhs.true.7640, %lor.lhs.false.7637
  %2759 = load %union.tree_node*, %union.tree_node** %arg017590, align 8
  %common7651 = bitcast %union.tree_node* %2759 to %struct.tree_common*
  %constant_flag7652 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7651, i32 0, i32 2
  %bf.load7653 = load i32, i32* %constant_flag7652, align 8
  %bf.lshr7654 = lshr i32 %bf.load7653, 9
  %bf.clear7655 = and i32 %bf.lshr7654, 1
  %tobool7656 = icmp ne i32 %bf.clear7655, 0
  br i1 %tobool7656, label %if.then.7657, label %if.end.7664

if.then.7657:                                     ; preds = %if.end.7650
  %2760 = load i32, i32* %code07575, align 4
  %2761 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2762 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %common7658 = bitcast %union.tree_node* %2762 to %struct.tree_common*
  %type7659 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7658, i32 0, i32 1
  %2763 = load %union.tree_node*, %union.tree_node** %type7659, align 8
  %2764 = load %union.tree_node*, %union.tree_node** %arg007585, align 8
  %call7660 = call %union.tree_node* @build1(i32 56, %union.tree_node* %2763, %union.tree_node* %2764)
  %call7661 = call %union.tree_node* @fold(%union.tree_node* %call7660)
  %2765 = load %union.tree_node*, %union.tree_node** %arg017590, align 8
  %call7662 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2760, %union.tree_node* %2761, %union.tree_node* %call7661, %union.tree_node* %2765)
  %call7663 = call %union.tree_node* @fold(%union.tree_node* %call7662)
  store %union.tree_node* %call7663, %union.tree_node** %retval
  br label %return

if.end.7664:                                      ; preds = %if.end.7650
  br label %if.end.7665

if.end.7665:                                      ; preds = %if.end.7664, %lor.lhs.false.7621
  %2766 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2766, %union.tree_node** %retval
  br label %return

sw.bb.7666:                                       ; preds = %if.end.901
  %2767 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp7667 = bitcast %union.tree_node* %2767 to %struct.tree_exp*
  %operands7668 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7667, i32 0, i32 2
  %arrayidx7669 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7668, i32 0, i64 0
  %2768 = load %union.tree_node*, %union.tree_node** %arrayidx7669, align 8
  %common7670 = bitcast %union.tree_node* %2768 to %struct.tree_common*
  %code7671 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7670, i32 0, i32 2
  %bf.load7672 = load i32, i32* %code7671, align 8
  %bf.clear7673 = and i32 %bf.load7672, 255
  %cmp7674 = icmp eq i32 %bf.clear7673, 121
  br i1 %cmp7674, label %land.lhs.true.7676, label %if.end.7711

land.lhs.true.7676:                               ; preds = %sw.bb.7666
  %2769 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp7677 = bitcast %union.tree_node* %2769 to %struct.tree_exp*
  %operands7678 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7677, i32 0, i32 2
  %arrayidx7679 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7678, i32 0, i64 0
  %2770 = load %union.tree_node*, %union.tree_node** %arrayidx7679, align 8
  %exp7680 = bitcast %union.tree_node* %2770 to %struct.tree_exp*
  %operands7681 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7680, i32 0, i32 2
  %arrayidx7682 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7681, i32 0, i64 0
  %2771 = load %union.tree_node*, %union.tree_node** %arrayidx7682, align 8
  %common7683 = bitcast %union.tree_node* %2771 to %struct.tree_common*
  %code7684 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7683, i32 0, i32 2
  %bf.load7685 = load i32, i32* %code7684, align 8
  %bf.clear7686 = and i32 %bf.load7685, 255
  %cmp7687 = icmp eq i32 %bf.clear7686, 30
  br i1 %cmp7687, label %land.lhs.true.7689, label %if.end.7711

land.lhs.true.7689:                               ; preds = %land.lhs.true.7676
  %2772 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp7690 = bitcast %union.tree_node* %2772 to %struct.tree_exp*
  %operands7691 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7690, i32 0, i32 2
  %arrayidx7692 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7691, i32 0, i64 0
  %2773 = load %union.tree_node*, %union.tree_node** %arrayidx7692, align 8
  %exp7693 = bitcast %union.tree_node* %2773 to %struct.tree_exp*
  %operands7694 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7693, i32 0, i32 2
  %arrayidx7695 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7694, i32 0, i64 0
  %2774 = load %union.tree_node*, %union.tree_node** %arrayidx7695, align 8
  %decl7696 = bitcast %union.tree_node* %2774 to %struct.tree_decl*
  %built_in_class7697 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7696, i32 0, i32 5
  %2775 = bitcast i48* %built_in_class7697 to i64*
  %bf.load7698 = load i64, i64* %2775, align 8
  %bf.lshr7699 = lshr i64 %bf.load7698, 29
  %bf.clear7700 = and i64 %bf.lshr7699, 3
  %bf.cast7701 = trunc i64 %bf.clear7700 to i32
  %cmp7702 = icmp ne i32 %bf.cast7701, 0
  br i1 %cmp7702, label %if.then.7704, label %if.end.7711

if.then.7704:                                     ; preds = %land.lhs.true.7689
  %2776 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call7707 = call %union.tree_node* @fold_builtin(%union.tree_node* %2776)
  store %union.tree_node* %call7707, %union.tree_node** %tmp7706, align 8
  %2777 = load %union.tree_node*, %union.tree_node** %tmp7706, align 8
  %tobool7708 = icmp ne %union.tree_node* %2777, null
  br i1 %tobool7708, label %if.then.7709, label %if.end.7710

if.then.7709:                                     ; preds = %if.then.7704
  %2778 = load %union.tree_node*, %union.tree_node** %tmp7706, align 8
  store %union.tree_node* %2778, %union.tree_node** %retval
  br label %return

if.end.7710:                                      ; preds = %if.then.7704
  br label %if.end.7711

if.end.7711:                                      ; preds = %if.end.7710, %land.lhs.true.7689, %land.lhs.true.7676, %sw.bb.7666
  %2779 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2779, %union.tree_node** %retval
  br label %return

sw.default.7712:                                  ; preds = %if.end.901
  %2780 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %2780, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.default.7712, %if.end.7711, %if.then.7709, %if.end.7665, %if.then.7657, %if.then.7643, %if.then.7596, %if.then.7569, %if.end.7565, %if.then.7545, %if.then.7528, %if.then.7513, %if.then.7504, %if.end.7494, %if.then.7474, %if.then.7457, %if.then.7442, %if.then.7434, %if.end.7424, %if.then.7422, %if.end.7418, %if.then.7416, %if.then.7412, %if.end.7402, %if.then.7396, %if.then.7353, %if.then.7196, %if.then.7179, %if.then.7162, %if.then.7145, %cond.end.7068, %cond.end.7051, %sw.bb.7037, %sw.bb.7034, %if.then.7000, %if.then.6994, %if.end.6973, %if.end.6952, %sw.bb.6935, %sw.bb.6925, %if.then.6620, %if.then.6605, %if.end.6597, %if.then.6595, %if.then.6579, %if.then.6397, %if.then.6287, %cond.end.6242, %if.else.6204, %if.then.6202, %sw.bb.6197, %sw.bb.6189, %sw.bb.6030, %if.then.5990, %if.then.5936, %if.then.5874, %if.then.5841, %if.then.5814, %if.then.5774, %if.then.5696, %if.then.5653, %if.then.5602, %if.then.5558, %if.then.5521, %if.then.5467, %if.then.5445, %if.then.5401, %sw.bb.5338, %sw.bb.5335, %sw.bb.5200, %sw.bb.5191, %sw.bb.5148, %sw.bb.5137, %sw.bb.5060, %sw.bb.5051, %sw.bb.5013, %sw.bb.5004, %cond.end.4887, %if.then.4851, %cond.end.4700, %if.then.4666, %if.then.4464, %if.then.4432, %if.then.4409, %if.end.4365, %if.then.4361, %if.then.4354, %if.then.4348, %if.then.4342, %if.then.4336, %if.then.4324, %if.then.4311, %if.then.4288, %if.then.4275, %if.end.4264, %if.then.4263, %if.then.4253, %if.then.4238, %if.then.4221, %if.then.4200, %if.then.4186, %if.then.4172, %if.then.4079, %if.then.4075, %if.then.4070, %if.then.4064, %if.then.4041, %if.then.4028, %if.end.4023, %if.then.4022, %if.then.4011, %if.then.3973, %if.then.3967, %if.then.3933, %if.then.3925, %if.then.3844, %if.then.3794, %if.then.3758, %if.then.3744, %if.then.3738, %if.then.3723, %if.then.3718, %if.then.3712, %if.then.3695, %if.then.3685, %if.then.3679, %if.then.3665, %if.then.3646, %if.then.3630, %if.then.3612, %if.then.3595, %if.then.3583, %if.then.3556, %if.then.3550, %if.then.3536, %if.then.3516, %if.then.3453, %if.then.3398, %if.then.3392, %if.then.3386, %if.then.3334, %if.then.3328, %if.then.3314, %if.then.3299, %if.then.3292, %if.then.3287, %if.then.3278, %if.then.3263, %if.then.3258, %if.then.3250, %if.then.3230, %if.then.3211, %if.then.3195, %if.then.3190, %if.then.3155, %if.then.3138, %if.then.3105, %if.then.3099, %if.then.3077, %if.then.3051, %if.then.3045, %if.then.3005, %if.then.2985, %if.end.2977, %if.end.2976, %if.end.2953, %if.else.2949, %if.then.2946, %if.then.2841, %if.then.2689, %cond.end.2543, %if.then.2322, %if.then.2300, %if.then.2288, %if.then.2173, %if.then.2154, %if.then.1941, %if.then.1909, %if.then.1896, %if.end.1888, %if.then.1883, %if.end.1837, %if.then.1829, %if.then.1805, %if.then.1785, %if.then.1769, %if.then.1760, %if.end.1750, %if.then.1744, %if.then.1661, %if.then.1633, %if.end.1616, %if.then.1606, %if.then.1570, %sw.bb.1485, %if.end.1484, %if.end.1468, %if.then.1460, %if.end.1448, %if.then.1437, %if.then.1418, %if.then.1359, %if.then.1279, %if.then.1255, %if.then.1201, %if.then.914, %sw.bb.902, %sw.bb, %if.then.888, %if.then.865, %if.then.846, %if.then.786, %if.then.777, %if.then.719, %if.then.690, %if.end.679, %if.then.460, %if.end.446, %if.then.12, %if.then
  %2781 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %2781
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @size_diffop(%union.tree_node* %arg0, %union.tree_node* %arg1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %arg0.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %ctype = alloca %union.tree_node*, align 8
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 6
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type3 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i32 0, i32 6
  %bf.load4 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr = lshr i32 %bf.load4, 17
  %bf.clear5 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear5, 0
  br i1 %tobool, label %lor.lhs.false.6, label %if.then

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %5 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common7 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type8, align 8
  %cmp9 = icmp ne %union.tree_node* %4, %6
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.6, %lor.lhs.false, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 2051, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.size_diffop, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false.6
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common10 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load11 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr12 = lshr i32 %bf.load11, 13
  %bf.clear13 = and i32 %bf.lshr12, 1
  %tobool14 = icmp ne i32 %bf.clear13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %9 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %8, %union.tree_node* %9)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end.16:                                        ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 3), align 8
  %cmp17 = icmp eq %union.tree_node* %10, %11
  br i1 %cmp17, label %cond.true, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %if.end.16
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 5), align 8
  %cmp19 = icmp eq %union.tree_node* %12, %13
  br i1 %cmp19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.18, %if.end.16
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 4), align 8
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false.18
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 1), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %14, %cond.true ], [ %15, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %ctype, align 8
  %16 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common20 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp ne i32 %bf.clear23, 25
  br i1 %cmp24, label %if.then.31, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %cond.end
  %17 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common26 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp ne i32 %bf.clear29, 25
  br i1 %cmp30, label %if.then.31, label %if.end.35

if.then.31:                                       ; preds = %lor.lhs.false.25, %cond.end
  %18 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %19 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %call32 = call %union.tree_node* @convert(%union.tree_node* %18, %union.tree_node* %19)
  %20 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %21 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call33 = call %union.tree_node* @convert(%union.tree_node* %20, %union.tree_node* %21)
  %call34 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call32, %union.tree_node* %call33)
  store %union.tree_node* %call34, %union.tree_node** %retval
  br label %return

if.end.35:                                        ; preds = %lor.lhs.false.25
  %22 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call36 = call i32 @tree_int_cst_equal(%union.tree_node* %22, %union.tree_node* %23)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %if.end.35
  %24 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call39 = call %union.tree_node* @convert(%union.tree_node* %24, %union.tree_node* %25)
  store %union.tree_node* %call39, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %if.end.35
  %26 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %27 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %call40 = call i32 @tree_int_cst_lt(%union.tree_node* %26, %union.tree_node* %27)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then.42, label %if.else.45

if.then.42:                                       ; preds = %if.else
  %28 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %29 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call43 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %29, %union.tree_node* %30)
  %call44 = call %union.tree_node* @convert(%union.tree_node* %28, %union.tree_node* %call43)
  store %union.tree_node* %call44, %union.tree_node** %retval
  br label %return

if.else.45:                                       ; preds = %if.else
  %31 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call46 = call %union.tree_node* @convert(%union.tree_node* %31, %union.tree_node* %32)
  %33 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %34 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %35 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %call47 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %34, %union.tree_node* %35)
  %call48 = call %union.tree_node* @convert(%union.tree_node* %33, %union.tree_node* %call47)
  %call49 = call %union.tree_node* @size_binop(i32 60, %union.tree_node* %call46, %union.tree_node* %call48)
  store %union.tree_node* %call49, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else.45, %if.then.42, %if.then.38, %if.then.31, %if.then.15
  %36 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %36
}

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #3

declare i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) #3

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @non_lvalue(%union.tree_node* %x) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %x.addr = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 116
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 25
  br i1 %cmp5, label %if.then, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 26
  br i1 %cmp11, label %if.then, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.6
  %3 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common13 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 29
  br i1 %cmp17, label %if.then, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false.12
  %4 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common19 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 121
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.18, %lor.lhs.false.12, %lor.lhs.false.6, %lor.lhs.false, %entry
  %5 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.18
  %6 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common24 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %8 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %call = call %union.tree_node* @build1(i32 116, %union.tree_node* %7, %union.tree_node* %8)
  store %union.tree_node* %call, %union.tree_node** %result, align 8
  %9 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common25 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load26 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load26, 9
  %bf.clear27 = and i32 %bf.lshr, 1
  %10 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common28 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %constant_flag29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %constant_flag29, align 8
  %bf.value = and i32 %bf.clear27, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear31 = and i32 %bf.load30, -513
  %bf.set = or i32 %bf.clear31, %bf.shl
  store i32 %bf.set, i32* %constant_flag29, align 8
  %11 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %11, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %12 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %12
}

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %x) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %x.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  %0 = load i32, i32* @pedantic_lvalues, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %call = call %union.tree_node* @non_lvalue(%union.tree_node* %1)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  store %union.tree_node* %2, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %3 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %3
}

; Function Attrs: nounwind uwtable
define i32 @operand_equal_p(%union.tree_node* %arg0, %union.tree_node* %arg1, i32 %only_const) #0 {
entry:
  %retval = alloca i32, align 4
  %arg0.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %only_const.addr = alloca i32, align 4
  %v1 = alloca %union.tree_node*, align 8
  %v2 = alloca %union.tree_node*, align 8
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store i32 %only_const, i32* %only_const.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  %2 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %common4 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %unsigned_flag5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %unsigned_flag5, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 13
  %bf.clear8 = and i32 %bf.lshr7, 1
  %cmp = icmp ne i32 %bf.clear, %bf.clear8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common9 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load10 = load i32, i32* %code, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 115
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %5 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common13 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 114
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common19 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 116
  br i1 %cmp23, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.18, %lor.lhs.false, %while.cond
  %7 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp = bitcast %union.tree_node* %7 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp24 = icmp ne %union.tree_node* %8, %9
  br i1 %cmp24, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %10 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common25 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %type27 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i32 0, i32 6
  %bf.load28 = load i32, i32* %mode, align 4
  %bf.lshr29 = lshr i32 %bf.load28, 9
  %bf.clear30 = and i32 %bf.lshr29, 127
  %12 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp31 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands32 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp31, i32 0, i32 2
  %arrayidx33 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands32, i32 0, i64 0
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8
  %common34 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type35, align 8
  %type36 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %mode37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i32 0, i32 6
  %bf.load38 = load i32, i32* %mode37, align 4
  %bf.lshr39 = lshr i32 %bf.load38, 9
  %bf.clear40 = and i32 %bf.lshr39, 127
  %cmp41 = icmp eq i32 %bf.clear30, %bf.clear40
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.18
  %15 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.18 ], [ %cmp41, %land.rhs ]
  br i1 %15, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %16 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp42 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands43 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp42, i32 0, i32 2
  %arrayidx44 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands43, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx44, align 8
  store %union.tree_node* %17, %union.tree_node** %arg0.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %while.cond.45

while.cond.45:                                    ; preds = %while.body.88, %while.end
  %18 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common46 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 2
  %bf.load48 = load i32, i32* %code47, align 8
  %bf.clear49 = and i32 %bf.load48, 255
  %cmp50 = icmp eq i32 %bf.clear49, 115
  br i1 %cmp50, label %land.lhs.true.63, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %while.cond.45
  %19 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common52 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 2
  %bf.load54 = load i32, i32* %code53, align 8
  %bf.clear55 = and i32 %bf.load54, 255
  %cmp56 = icmp eq i32 %bf.clear55, 114
  br i1 %cmp56, label %land.lhs.true.63, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %lor.lhs.false.51
  %20 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common58 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 2
  %bf.load60 = load i32, i32* %code59, align 8
  %bf.clear61 = and i32 %bf.load60, 255
  %cmp62 = icmp eq i32 %bf.clear61, 116
  br i1 %cmp62, label %land.lhs.true.63, label %land.end.87

land.lhs.true.63:                                 ; preds = %lor.lhs.false.57, %lor.lhs.false.51, %while.cond.45
  %21 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp64 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands65, i32 0, i64 0
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp67 = icmp ne %union.tree_node* %22, %23
  br i1 %cmp67, label %land.rhs.68, label %land.end.87

land.rhs.68:                                      ; preds = %land.lhs.true.63
  %24 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common69 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %type70, align 8
  %type71 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %mode72 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type71, i32 0, i32 6
  %bf.load73 = load i32, i32* %mode72, align 4
  %bf.lshr74 = lshr i32 %bf.load73, 9
  %bf.clear75 = and i32 %bf.lshr74, 127
  %26 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp76 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands77 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp76, i32 0, i32 2
  %arrayidx78 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands77, i32 0, i64 0
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8
  %common79 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type80, align 8
  %type81 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %mode82 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type81, i32 0, i32 6
  %bf.load83 = load i32, i32* %mode82, align 4
  %bf.lshr84 = lshr i32 %bf.load83, 9
  %bf.clear85 = and i32 %bf.lshr84, 127
  %cmp86 = icmp eq i32 %bf.clear75, %bf.clear85
  br label %land.end.87

land.end.87:                                      ; preds = %land.rhs.68, %land.lhs.true.63, %lor.lhs.false.57
  %29 = phi i1 [ false, %land.lhs.true.63 ], [ false, %lor.lhs.false.57 ], [ %cmp86, %land.rhs.68 ]
  br i1 %29, label %while.body.88, label %while.end.92

while.body.88:                                    ; preds = %land.end.87
  %30 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp89 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands90 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp89, i32 0, i32 2
  %arrayidx91 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands90, i32 0, i64 0
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx91, align 8
  store %union.tree_node* %31, %union.tree_node** %arg1.addr, align 8
  br label %while.cond.45

while.end.92:                                     ; preds = %land.end.87
  %32 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common93 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %33 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common97 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code98 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load99 = load i32, i32* %code98, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %cmp101 = icmp ne i32 %bf.clear96, %bf.clear100
  br i1 %cmp101, label %if.then.134, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %while.end.92
  %34 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common103 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type104, align 8
  %common105 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 2
  %bf.load107 = load i32, i32* %code106, align 8
  %bf.clear108 = and i32 %bf.load107, 255
  %cmp109 = icmp eq i32 %bf.clear108, 0
  br i1 %cmp109, label %if.then.134, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %lor.lhs.false.102
  %36 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common111 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type112 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common111, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type112, align 8
  %common113 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 2
  %bf.load115 = load i32, i32* %code114, align 8
  %bf.clear116 = and i32 %bf.load115, 255
  %cmp117 = icmp eq i32 %bf.clear116, 0
  br i1 %cmp117, label %if.then.134, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %lor.lhs.false.110
  %38 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common119 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type120, align 8
  %type121 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %mode122 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type121, i32 0, i32 6
  %bf.load123 = load i32, i32* %mode122, align 4
  %bf.lshr124 = lshr i32 %bf.load123, 9
  %bf.clear125 = and i32 %bf.lshr124, 127
  %40 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common126 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type127, align 8
  %type128 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %mode129 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type128, i32 0, i32 6
  %bf.load130 = load i32, i32* %mode129, align 4
  %bf.lshr131 = lshr i32 %bf.load130, 9
  %bf.clear132 = and i32 %bf.lshr131, 127
  %cmp133 = icmp ne i32 %bf.clear125, %bf.clear132
  br i1 %cmp133, label %if.then.134, label %if.end.135

if.then.134:                                      ; preds = %lor.lhs.false.118, %lor.lhs.false.110, %lor.lhs.false.102, %while.end.92
  store i32 0, i32* %retval
  br label %return

if.end.135:                                       ; preds = %lor.lhs.false.118
  %42 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %43 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %cmp136 = icmp eq %union.tree_node* %42, %43
  br i1 %cmp136, label %land.lhs.true.137, label %if.end.158

land.lhs.true.137:                                ; preds = %if.end.135
  %44 = load i32, i32* %only_const.addr, align 4
  %tobool = icmp ne i32 %44, 0
  br i1 %tobool, label %if.end.158, label %land.lhs.true.138

land.lhs.true.138:                                ; preds = %land.lhs.true.137
  %45 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common139 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common139, i32 0, i32 2
  %bf.load141 = load i32, i32* %code140, align 8
  %bf.clear142 = and i32 %bf.load141, 255
  %cmp143 = icmp eq i32 %bf.clear142, 118
  br i1 %cmp143, label %if.then.157, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %land.lhs.true.138
  %46 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common145 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 2
  %bf.load146 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr147 = lshr i32 %bf.load146, 8
  %bf.clear148 = and i32 %bf.lshr147, 1
  %tobool149 = icmp ne i32 %bf.clear148, 0
  br i1 %tobool149, label %if.end.158, label %land.lhs.true.150

land.lhs.true.150:                                ; preds = %lor.lhs.false.144
  %47 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common151 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %side_effects_flag152 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common151, i32 0, i32 2
  %bf.load153 = load i32, i32* %side_effects_flag152, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 8
  %bf.clear155 = and i32 %bf.lshr154, 1
  %tobool156 = icmp ne i32 %bf.clear155, 0
  br i1 %tobool156, label %if.end.158, label %if.then.157

if.then.157:                                      ; preds = %land.lhs.true.150, %land.lhs.true.138
  store i32 1, i32* %retval
  br label %return

if.end.158:                                       ; preds = %land.lhs.true.150, %lor.lhs.false.144, %land.lhs.true.137, %if.end.135
  %48 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common159 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common159, i32 0, i32 2
  %bf.load160 = load i32, i32* %constant_flag, align 8
  %bf.lshr161 = lshr i32 %bf.load160, 9
  %bf.clear162 = and i32 %bf.lshr161, 1
  %tobool163 = icmp ne i32 %bf.clear162, 0
  br i1 %tobool163, label %land.lhs.true.164, label %if.end.282

land.lhs.true.164:                                ; preds = %if.end.158
  %49 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common165 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %constant_flag166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common165, i32 0, i32 2
  %bf.load167 = load i32, i32* %constant_flag166, align 8
  %bf.lshr168 = lshr i32 %bf.load167, 9
  %bf.clear169 = and i32 %bf.lshr168, 1
  %tobool170 = icmp ne i32 %bf.clear169, 0
  br i1 %tobool170, label %if.then.171, label %if.end.282

if.then.171:                                      ; preds = %land.lhs.true.164
  %50 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common172 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %code173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 2
  %bf.load174 = load i32, i32* %code173, align 8
  %bf.clear175 = and i32 %bf.load174, 255
  switch i32 %bf.clear175, label %sw.default [
    i32 25, label %sw.bb
    i32 26, label %sw.bb.191
    i32 28, label %sw.bb.213
    i32 27, label %sw.bb.246
    i32 29, label %sw.bb.259
    i32 121, label %sw.bb.274
  ]

sw.bb:                                            ; preds = %if.then.171
  %51 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common176 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 2
  %bf.load177 = load i32, i32* %static_flag, align 8
  %bf.lshr178 = lshr i32 %bf.load177, 18
  %bf.clear179 = and i32 %bf.lshr178, 1
  %tobool180 = icmp ne i32 %bf.clear179, 0
  br i1 %tobool180, label %land.end.190, label %land.lhs.true.181

land.lhs.true.181:                                ; preds = %sw.bb
  %52 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common182 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %static_flag183 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common182, i32 0, i32 2
  %bf.load184 = load i32, i32* %static_flag183, align 8
  %bf.lshr185 = lshr i32 %bf.load184, 18
  %bf.clear186 = and i32 %bf.lshr185, 1
  %tobool187 = icmp ne i32 %bf.clear186, 0
  br i1 %tobool187, label %land.end.190, label %land.rhs.188

land.rhs.188:                                     ; preds = %land.lhs.true.181
  %53 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %54 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call = call i32 @tree_int_cst_equal(%union.tree_node* %53, %union.tree_node* %54)
  %tobool189 = icmp ne i32 %call, 0
  br label %land.end.190

land.end.190:                                     ; preds = %land.rhs.188, %land.lhs.true.181, %sw.bb
  %55 = phi i1 [ false, %land.lhs.true.181 ], [ false, %sw.bb ], [ %tobool189, %land.rhs.188 ]
  %land.ext = zext i1 %55 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.191:                                        ; preds = %if.then.171
  %56 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common192 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %static_flag193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common192, i32 0, i32 2
  %bf.load194 = load i32, i32* %static_flag193, align 8
  %bf.lshr195 = lshr i32 %bf.load194, 18
  %bf.clear196 = and i32 %bf.lshr195, 1
  %tobool197 = icmp ne i32 %bf.clear196, 0
  br i1 %tobool197, label %land.end.211, label %land.lhs.true.198

land.lhs.true.198:                                ; preds = %sw.bb.191
  %57 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common199 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %static_flag200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common199, i32 0, i32 2
  %bf.load201 = load i32, i32* %static_flag200, align 8
  %bf.lshr202 = lshr i32 %bf.load201, 18
  %bf.clear203 = and i32 %bf.lshr202, 1
  %tobool204 = icmp ne i32 %bf.clear203, 0
  br i1 %tobool204, label %land.end.211, label %land.rhs.205

land.rhs.205:                                     ; preds = %land.lhs.true.198
  %58 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %real_cst = bitcast %union.tree_node* %58 to %struct.tree_real_cst*
  %real_cst206 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst, i32 0, i32 2
  %59 = bitcast %struct.realvaluetype* %real_cst206 to i8*
  %60 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %real_cst207 = bitcast %union.tree_node* %60 to %struct.tree_real_cst*
  %real_cst208 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst207, i32 0, i32 2
  %61 = bitcast %struct.realvaluetype* %real_cst208 to i8*
  %call209 = call i32 @memcmp(i8* %59, i8* %61, i64 24) #6
  %tobool210 = icmp ne i32 %call209, 0
  %lnot = xor i1 %tobool210, true
  br label %land.end.211

land.end.211:                                     ; preds = %land.rhs.205, %land.lhs.true.198, %sw.bb.191
  %62 = phi i1 [ false, %land.lhs.true.198 ], [ false, %sw.bb.191 ], [ %lnot, %land.rhs.205 ]
  %land.ext212 = zext i1 %62 to i32
  store i32 %land.ext212, i32* %retval
  br label %return

sw.bb.213:                                        ; preds = %if.then.171
  %63 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common214 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %static_flag215 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common214, i32 0, i32 2
  %bf.load216 = load i32, i32* %static_flag215, align 8
  %bf.lshr217 = lshr i32 %bf.load216, 18
  %bf.clear218 = and i32 %bf.lshr217, 1
  %tobool219 = icmp ne i32 %bf.clear218, 0
  br i1 %tobool219, label %if.then.227, label %lor.lhs.false.220

lor.lhs.false.220:                                ; preds = %sw.bb.213
  %64 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common221 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %static_flag222 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common221, i32 0, i32 2
  %bf.load223 = load i32, i32* %static_flag222, align 8
  %bf.lshr224 = lshr i32 %bf.load223, 18
  %bf.clear225 = and i32 %bf.lshr224, 1
  %tobool226 = icmp ne i32 %bf.clear225, 0
  br i1 %tobool226, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %lor.lhs.false.220, %sw.bb.213
  store i32 0, i32* %retval
  br label %return

if.end.228:                                       ; preds = %lor.lhs.false.220
  %65 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %vector = bitcast %union.tree_node* %65 to %struct.tree_vector*
  %elements = getelementptr inbounds %struct.tree_vector, %struct.tree_vector* %vector, i32 0, i32 2
  %66 = load %union.tree_node*, %union.tree_node** %elements, align 8
  store %union.tree_node* %66, %union.tree_node** %v1, align 8
  %67 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %vector229 = bitcast %union.tree_node* %67 to %struct.tree_vector*
  %elements230 = getelementptr inbounds %struct.tree_vector, %struct.tree_vector* %vector229, i32 0, i32 2
  %68 = load %union.tree_node*, %union.tree_node** %elements230, align 8
  store %union.tree_node* %68, %union.tree_node** %v2, align 8
  br label %while.cond.231

while.cond.231:                                   ; preds = %if.end.241, %if.end.228
  %69 = load %union.tree_node*, %union.tree_node** %v1, align 8
  %tobool232 = icmp ne %union.tree_node* %69, null
  br i1 %tobool232, label %land.rhs.233, label %land.end.235

land.rhs.233:                                     ; preds = %while.cond.231
  %70 = load %union.tree_node*, %union.tree_node** %v2, align 8
  %tobool234 = icmp ne %union.tree_node* %70, null
  br label %land.end.235

land.end.235:                                     ; preds = %land.rhs.233, %while.cond.231
  %71 = phi i1 [ false, %while.cond.231 ], [ %tobool234, %land.rhs.233 ]
  br i1 %71, label %while.body.237, label %while.end.245

while.body.237:                                   ; preds = %land.end.235
  %72 = load %union.tree_node*, %union.tree_node** %v1, align 8
  %73 = load %union.tree_node*, %union.tree_node** %v2, align 8
  %74 = load i32, i32* %only_const.addr, align 4
  %call238 = call i32 @operand_equal_p(%union.tree_node* %72, %union.tree_node* %73, i32 %74)
  %tobool239 = icmp ne i32 %call238, 0
  br i1 %tobool239, label %if.end.241, label %if.then.240

if.then.240:                                      ; preds = %while.body.237
  store i32 0, i32* %retval
  br label %return

if.end.241:                                       ; preds = %while.body.237
  %75 = load %union.tree_node*, %union.tree_node** %v1, align 8
  %common242 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 0
  %76 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %76, %union.tree_node** %v1, align 8
  %77 = load %union.tree_node*, %union.tree_node** %v2, align 8
  %common243 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %chain244 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common243, i32 0, i32 0
  %78 = load %union.tree_node*, %union.tree_node** %chain244, align 8
  store %union.tree_node* %78, %union.tree_node** %v2, align 8
  br label %while.cond.231

while.end.245:                                    ; preds = %land.end.235
  store i32 1, i32* %retval
  br label %return

sw.bb.246:                                        ; preds = %if.then.171
  %79 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %complex = bitcast %union.tree_node* %79 to %struct.tree_complex*
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex, i32 0, i32 2
  %80 = load %union.tree_node*, %union.tree_node** %real, align 8
  %81 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %complex247 = bitcast %union.tree_node* %81 to %struct.tree_complex*
  %real248 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex247, i32 0, i32 2
  %82 = load %union.tree_node*, %union.tree_node** %real248, align 8
  %83 = load i32, i32* %only_const.addr, align 4
  %call249 = call i32 @operand_equal_p(%union.tree_node* %80, %union.tree_node* %82, i32 %83)
  %tobool250 = icmp ne i32 %call249, 0
  br i1 %tobool250, label %land.rhs.251, label %land.end.257

land.rhs.251:                                     ; preds = %sw.bb.246
  %84 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %complex252 = bitcast %union.tree_node* %84 to %struct.tree_complex*
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex252, i32 0, i32 3
  %85 = load %union.tree_node*, %union.tree_node** %imag, align 8
  %86 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %complex253 = bitcast %union.tree_node* %86 to %struct.tree_complex*
  %imag254 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex253, i32 0, i32 3
  %87 = load %union.tree_node*, %union.tree_node** %imag254, align 8
  %88 = load i32, i32* %only_const.addr, align 4
  %call255 = call i32 @operand_equal_p(%union.tree_node* %85, %union.tree_node* %87, i32 %88)
  %tobool256 = icmp ne i32 %call255, 0
  br label %land.end.257

land.end.257:                                     ; preds = %land.rhs.251, %sw.bb.246
  %89 = phi i1 [ false, %sw.bb.246 ], [ %tobool256, %land.rhs.251 ]
  %land.ext258 = zext i1 %89 to i32
  store i32 %land.ext258, i32* %retval
  br label %return

sw.bb.259:                                        ; preds = %if.then.171
  %90 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %string = bitcast %union.tree_node* %90 to %struct.tree_string*
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 2
  %91 = load i32, i32* %length, align 4
  %92 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %string260 = bitcast %union.tree_node* %92 to %struct.tree_string*
  %length261 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string260, i32 0, i32 2
  %93 = load i32, i32* %length261, align 4
  %cmp262 = icmp eq i32 %91, %93
  br i1 %cmp262, label %land.rhs.263, label %land.end.272

land.rhs.263:                                     ; preds = %sw.bb.259
  %94 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %string264 = bitcast %union.tree_node* %94 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string264, i32 0, i32 3
  %95 = load i8*, i8** %pointer, align 8
  %96 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %string265 = bitcast %union.tree_node* %96 to %struct.tree_string*
  %pointer266 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string265, i32 0, i32 3
  %97 = load i8*, i8** %pointer266, align 8
  %98 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %string267 = bitcast %union.tree_node* %98 to %struct.tree_string*
  %length268 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string267, i32 0, i32 2
  %99 = load i32, i32* %length268, align 4
  %conv = sext i32 %99 to i64
  %call269 = call i32 @memcmp(i8* %95, i8* %97, i64 %conv) #6
  %tobool270 = icmp ne i32 %call269, 0
  %lnot271 = xor i1 %tobool270, true
  br label %land.end.272

land.end.272:                                     ; preds = %land.rhs.263, %sw.bb.259
  %100 = phi i1 [ false, %sw.bb.259 ], [ %lnot271, %land.rhs.263 ]
  %land.ext273 = zext i1 %100 to i32
  store i32 %land.ext273, i32* %retval
  br label %return

sw.bb.274:                                        ; preds = %if.then.171
  %101 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp275 = bitcast %union.tree_node* %101 to %struct.tree_exp*
  %operands276 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp275, i32 0, i32 2
  %arrayidx277 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands276, i32 0, i64 0
  %102 = load %union.tree_node*, %union.tree_node** %arrayidx277, align 8
  %103 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp278 = bitcast %union.tree_node* %103 to %struct.tree_exp*
  %operands279 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp278, i32 0, i32 2
  %arrayidx280 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands279, i32 0, i64 0
  %104 = load %union.tree_node*, %union.tree_node** %arrayidx280, align 8
  %call281 = call i32 @operand_equal_p(%union.tree_node* %102, %union.tree_node* %104, i32 0)
  store i32 %call281, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.then.171
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.282

if.end.282:                                       ; preds = %sw.epilog, %land.lhs.true.164, %if.end.158
  %105 = load i32, i32* %only_const.addr, align 4
  %tobool283 = icmp ne i32 %105, 0
  br i1 %tobool283, label %if.then.284, label %if.end.285

if.then.284:                                      ; preds = %if.end.282
  store i32 0, i32* %retval
  br label %return

if.end.285:                                       ; preds = %if.end.282
  %106 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common286 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %code287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common286, i32 0, i32 2
  %bf.load288 = load i32, i32* %code287, align 8
  %bf.clear289 = and i32 %bf.load288, 255
  %idxprom = sext i32 %bf.clear289 to i64
  %arrayidx290 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %107 = load i8, i8* %arrayidx290, align 1
  %conv291 = sext i8 %107 to i32
  switch i32 %conv291, label %sw.default.528 [
    i32 49, label %sw.bb.292
    i32 60, label %sw.bb.332
    i32 50, label %sw.bb.332
    i32 114, label %sw.bb.434
    i32 101, label %sw.bb.512
  ]

sw.bb.292:                                        ; preds = %if.end.285
  %108 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common293 = bitcast %union.tree_node* %108 to %struct.tree_common*
  %code294 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common293, i32 0, i32 2
  %bf.load295 = load i32, i32* %code294, align 8
  %bf.clear296 = and i32 %bf.load295, 255
  %cmp297 = icmp eq i32 %bf.clear296, 115
  br i1 %cmp297, label %land.lhs.true.306, label %lor.lhs.false.299

lor.lhs.false.299:                                ; preds = %sw.bb.292
  %109 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common300 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %code301 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common300, i32 0, i32 2
  %bf.load302 = load i32, i32* %code301, align 8
  %bf.clear303 = and i32 %bf.load302, 255
  %cmp304 = icmp eq i32 %bf.clear303, 114
  br i1 %cmp304, label %land.lhs.true.306, label %if.end.324

land.lhs.true.306:                                ; preds = %lor.lhs.false.299, %sw.bb.292
  %110 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common307 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %type308 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common307, i32 0, i32 1
  %111 = load %union.tree_node*, %union.tree_node** %type308, align 8
  %common309 = bitcast %union.tree_node* %111 to %struct.tree_common*
  %unsigned_flag310 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common309, i32 0, i32 2
  %bf.load311 = load i32, i32* %unsigned_flag310, align 8
  %bf.lshr312 = lshr i32 %bf.load311, 13
  %bf.clear313 = and i32 %bf.lshr312, 1
  %112 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common314 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %type315 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common314, i32 0, i32 1
  %113 = load %union.tree_node*, %union.tree_node** %type315, align 8
  %common316 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %unsigned_flag317 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common316, i32 0, i32 2
  %bf.load318 = load i32, i32* %unsigned_flag317, align 8
  %bf.lshr319 = lshr i32 %bf.load318, 13
  %bf.clear320 = and i32 %bf.lshr319, 1
  %cmp321 = icmp ne i32 %bf.clear313, %bf.clear320
  br i1 %cmp321, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %land.lhs.true.306
  store i32 0, i32* %retval
  br label %return

if.end.324:                                       ; preds = %land.lhs.true.306, %lor.lhs.false.299
  %114 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp325 = bitcast %union.tree_node* %114 to %struct.tree_exp*
  %operands326 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp325, i32 0, i32 2
  %arrayidx327 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands326, i32 0, i64 0
  %115 = load %union.tree_node*, %union.tree_node** %arrayidx327, align 8
  %116 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp328 = bitcast %union.tree_node* %116 to %struct.tree_exp*
  %operands329 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp328, i32 0, i32 2
  %arrayidx330 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands329, i32 0, i64 0
  %117 = load %union.tree_node*, %union.tree_node** %arrayidx330, align 8
  %call331 = call i32 @operand_equal_p(%union.tree_node* %115, %union.tree_node* %117, i32 0)
  store i32 %call331, i32* %retval
  br label %return

sw.bb.332:                                        ; preds = %if.end.285, %if.end.285
  %118 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp333 = bitcast %union.tree_node* %118 to %struct.tree_exp*
  %operands334 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp333, i32 0, i32 2
  %arrayidx335 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands334, i32 0, i64 0
  %119 = load %union.tree_node*, %union.tree_node** %arrayidx335, align 8
  %120 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp336 = bitcast %union.tree_node* %120 to %struct.tree_exp*
  %operands337 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp336, i32 0, i32 2
  %arrayidx338 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands337, i32 0, i64 0
  %121 = load %union.tree_node*, %union.tree_node** %arrayidx338, align 8
  %call339 = call i32 @operand_equal_p(%union.tree_node* %119, %union.tree_node* %121, i32 0)
  %tobool340 = icmp ne i32 %call339, 0
  br i1 %tobool340, label %land.lhs.true.341, label %if.end.351

land.lhs.true.341:                                ; preds = %sw.bb.332
  %122 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp342 = bitcast %union.tree_node* %122 to %struct.tree_exp*
  %operands343 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp342, i32 0, i32 2
  %arrayidx344 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands343, i32 0, i64 1
  %123 = load %union.tree_node*, %union.tree_node** %arrayidx344, align 8
  %124 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp345 = bitcast %union.tree_node* %124 to %struct.tree_exp*
  %operands346 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp345, i32 0, i32 2
  %arrayidx347 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands346, i32 0, i64 1
  %125 = load %union.tree_node*, %union.tree_node** %arrayidx347, align 8
  %call348 = call i32 @operand_equal_p(%union.tree_node* %123, %union.tree_node* %125, i32 0)
  %tobool349 = icmp ne i32 %call348, 0
  br i1 %tobool349, label %if.then.350, label %if.end.351

if.then.350:                                      ; preds = %land.lhs.true.341
  store i32 1, i32* %retval
  br label %return

if.end.351:                                       ; preds = %land.lhs.true.341, %sw.bb.332
  %126 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common352 = bitcast %union.tree_node* %126 to %struct.tree_common*
  %code353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common352, i32 0, i32 2
  %bf.load354 = load i32, i32* %code353, align 8
  %bf.clear355 = and i32 %bf.load354, 255
  %cmp356 = icmp eq i32 %bf.clear355, 59
  br i1 %cmp356, label %land.lhs.true.414, label %lor.lhs.false.358

lor.lhs.false.358:                                ; preds = %if.end.351
  %127 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common359 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %code360 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common359, i32 0, i32 2
  %bf.load361 = load i32, i32* %code360, align 8
  %bf.clear362 = and i32 %bf.load361, 255
  %cmp363 = icmp eq i32 %bf.clear362, 61
  br i1 %cmp363, label %land.lhs.true.414, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %lor.lhs.false.358
  %128 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common366 = bitcast %union.tree_node* %128 to %struct.tree_common*
  %code367 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common366, i32 0, i32 2
  %bf.load368 = load i32, i32* %code367, align 8
  %bf.clear369 = and i32 %bf.load368, 255
  %cmp370 = icmp eq i32 %bf.clear369, 78
  br i1 %cmp370, label %land.lhs.true.414, label %lor.lhs.false.372

lor.lhs.false.372:                                ; preds = %lor.lhs.false.365
  %129 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common373 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %code374 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common373, i32 0, i32 2
  %bf.load375 = load i32, i32* %code374, align 8
  %bf.clear376 = and i32 %bf.load375, 255
  %cmp377 = icmp eq i32 %bf.clear376, 79
  br i1 %cmp377, label %land.lhs.true.414, label %lor.lhs.false.379

lor.lhs.false.379:                                ; preds = %lor.lhs.false.372
  %130 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common380 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %code381 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common380, i32 0, i32 2
  %bf.load382 = load i32, i32* %code381, align 8
  %bf.clear383 = and i32 %bf.load382, 255
  %cmp384 = icmp eq i32 %bf.clear383, 86
  br i1 %cmp384, label %land.lhs.true.414, label %lor.lhs.false.386

lor.lhs.false.386:                                ; preds = %lor.lhs.false.379
  %131 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common387 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %code388 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common387, i32 0, i32 2
  %bf.load389 = load i32, i32* %code388, align 8
  %bf.clear390 = and i32 %bf.load389, 255
  %cmp391 = icmp eq i32 %bf.clear390, 87
  br i1 %cmp391, label %land.lhs.true.414, label %lor.lhs.false.393

lor.lhs.false.393:                                ; preds = %lor.lhs.false.386
  %132 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common394 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %code395 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common394, i32 0, i32 2
  %bf.load396 = load i32, i32* %code395, align 8
  %bf.clear397 = and i32 %bf.load396, 255
  %cmp398 = icmp eq i32 %bf.clear397, 88
  br i1 %cmp398, label %land.lhs.true.414, label %lor.lhs.false.400

lor.lhs.false.400:                                ; preds = %lor.lhs.false.393
  %133 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common401 = bitcast %union.tree_node* %133 to %struct.tree_common*
  %code402 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common401, i32 0, i32 2
  %bf.load403 = load i32, i32* %code402, align 8
  %bf.clear404 = and i32 %bf.load403, 255
  %cmp405 = icmp eq i32 %bf.clear404, 102
  br i1 %cmp405, label %land.lhs.true.414, label %lor.lhs.false.407

lor.lhs.false.407:                                ; preds = %lor.lhs.false.400
  %134 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common408 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %code409 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common408, i32 0, i32 2
  %bf.load410 = load i32, i32* %code409, align 8
  %bf.clear411 = and i32 %bf.load410, 255
  %cmp412 = icmp eq i32 %bf.clear411, 101
  br i1 %cmp412, label %land.lhs.true.414, label %land.end.432

land.lhs.true.414:                                ; preds = %lor.lhs.false.407, %lor.lhs.false.400, %lor.lhs.false.393, %lor.lhs.false.386, %lor.lhs.false.379, %lor.lhs.false.372, %lor.lhs.false.365, %lor.lhs.false.358, %if.end.351
  %135 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp415 = bitcast %union.tree_node* %135 to %struct.tree_exp*
  %operands416 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp415, i32 0, i32 2
  %arrayidx417 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands416, i32 0, i64 0
  %136 = load %union.tree_node*, %union.tree_node** %arrayidx417, align 8
  %137 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp418 = bitcast %union.tree_node* %137 to %struct.tree_exp*
  %operands419 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp418, i32 0, i32 2
  %arrayidx420 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands419, i32 0, i64 1
  %138 = load %union.tree_node*, %union.tree_node** %arrayidx420, align 8
  %call421 = call i32 @operand_equal_p(%union.tree_node* %136, %union.tree_node* %138, i32 0)
  %tobool422 = icmp ne i32 %call421, 0
  br i1 %tobool422, label %land.rhs.423, label %land.end.432

land.rhs.423:                                     ; preds = %land.lhs.true.414
  %139 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp424 = bitcast %union.tree_node* %139 to %struct.tree_exp*
  %operands425 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp424, i32 0, i32 2
  %arrayidx426 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands425, i32 0, i64 1
  %140 = load %union.tree_node*, %union.tree_node** %arrayidx426, align 8
  %141 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp427 = bitcast %union.tree_node* %141 to %struct.tree_exp*
  %operands428 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp427, i32 0, i32 2
  %arrayidx429 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands428, i32 0, i64 0
  %142 = load %union.tree_node*, %union.tree_node** %arrayidx429, align 8
  %call430 = call i32 @operand_equal_p(%union.tree_node* %140, %union.tree_node* %142, i32 0)
  %tobool431 = icmp ne i32 %call430, 0
  br label %land.end.432

land.end.432:                                     ; preds = %land.rhs.423, %land.lhs.true.414, %lor.lhs.false.407
  %143 = phi i1 [ false, %land.lhs.true.414 ], [ false, %lor.lhs.false.407 ], [ %tobool431, %land.rhs.423 ]
  %land.ext433 = zext i1 %143 to i32
  store i32 %land.ext433, i32* %retval
  br label %return

sw.bb.434:                                        ; preds = %if.end.285
  %144 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common435 = bitcast %union.tree_node* %144 to %struct.tree_common*
  %side_effects_flag436 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common435, i32 0, i32 2
  %bf.load437 = load i32, i32* %side_effects_flag436, align 8
  %bf.lshr438 = lshr i32 %bf.load437, 8
  %bf.clear439 = and i32 %bf.lshr438, 1
  %tobool440 = icmp ne i32 %bf.clear439, 0
  br i1 %tobool440, label %if.then.448, label %lor.lhs.false.441

lor.lhs.false.441:                                ; preds = %sw.bb.434
  %145 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common442 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %side_effects_flag443 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common442, i32 0, i32 2
  %bf.load444 = load i32, i32* %side_effects_flag443, align 8
  %bf.lshr445 = lshr i32 %bf.load444, 8
  %bf.clear446 = and i32 %bf.lshr445, 1
  %tobool447 = icmp ne i32 %bf.clear446, 0
  br i1 %tobool447, label %if.then.448, label %if.end.449

if.then.448:                                      ; preds = %lor.lhs.false.441, %sw.bb.434
  store i32 0, i32* %retval
  br label %return

if.end.449:                                       ; preds = %lor.lhs.false.441
  %146 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common450 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %code451 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common450, i32 0, i32 2
  %bf.load452 = load i32, i32* %code451, align 8
  %bf.clear453 = and i32 %bf.load452, 255
  switch i32 %bf.clear453, label %sw.default.511 [
    i32 41, label %sw.bb.454
    i32 39, label %sw.bb.462
    i32 43, label %sw.bb.462
    i32 44, label %sw.bb.462
    i32 40, label %sw.bb.482
  ]

sw.bb.454:                                        ; preds = %if.end.449
  %147 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp455 = bitcast %union.tree_node* %147 to %struct.tree_exp*
  %operands456 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp455, i32 0, i32 2
  %arrayidx457 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands456, i32 0, i64 0
  %148 = load %union.tree_node*, %union.tree_node** %arrayidx457, align 8
  %149 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp458 = bitcast %union.tree_node* %149 to %struct.tree_exp*
  %operands459 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp458, i32 0, i32 2
  %arrayidx460 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands459, i32 0, i64 0
  %150 = load %union.tree_node*, %union.tree_node** %arrayidx460, align 8
  %call461 = call i32 @operand_equal_p(%union.tree_node* %148, %union.tree_node* %150, i32 0)
  store i32 %call461, i32* %retval
  br label %return

sw.bb.462:                                        ; preds = %if.end.449, %if.end.449, %if.end.449
  %151 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp463 = bitcast %union.tree_node* %151 to %struct.tree_exp*
  %operands464 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp463, i32 0, i32 2
  %arrayidx465 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands464, i32 0, i64 0
  %152 = load %union.tree_node*, %union.tree_node** %arrayidx465, align 8
  %153 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp466 = bitcast %union.tree_node* %153 to %struct.tree_exp*
  %operands467 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp466, i32 0, i32 2
  %arrayidx468 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands467, i32 0, i64 0
  %154 = load %union.tree_node*, %union.tree_node** %arrayidx468, align 8
  %call469 = call i32 @operand_equal_p(%union.tree_node* %152, %union.tree_node* %154, i32 0)
  %tobool470 = icmp ne i32 %call469, 0
  br i1 %tobool470, label %land.rhs.471, label %land.end.480

land.rhs.471:                                     ; preds = %sw.bb.462
  %155 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp472 = bitcast %union.tree_node* %155 to %struct.tree_exp*
  %operands473 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp472, i32 0, i32 2
  %arrayidx474 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands473, i32 0, i64 1
  %156 = load %union.tree_node*, %union.tree_node** %arrayidx474, align 8
  %157 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp475 = bitcast %union.tree_node* %157 to %struct.tree_exp*
  %operands476 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp475, i32 0, i32 2
  %arrayidx477 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands476, i32 0, i64 1
  %158 = load %union.tree_node*, %union.tree_node** %arrayidx477, align 8
  %call478 = call i32 @operand_equal_p(%union.tree_node* %156, %union.tree_node* %158, i32 0)
  %tobool479 = icmp ne i32 %call478, 0
  br label %land.end.480

land.end.480:                                     ; preds = %land.rhs.471, %sw.bb.462
  %159 = phi i1 [ false, %sw.bb.462 ], [ %tobool479, %land.rhs.471 ]
  %land.ext481 = zext i1 %159 to i32
  store i32 %land.ext481, i32* %retval
  br label %return

sw.bb.482:                                        ; preds = %if.end.449
  %160 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp483 = bitcast %union.tree_node* %160 to %struct.tree_exp*
  %operands484 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp483, i32 0, i32 2
  %arrayidx485 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands484, i32 0, i64 0
  %161 = load %union.tree_node*, %union.tree_node** %arrayidx485, align 8
  %162 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp486 = bitcast %union.tree_node* %162 to %struct.tree_exp*
  %operands487 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp486, i32 0, i32 2
  %arrayidx488 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands487, i32 0, i64 0
  %163 = load %union.tree_node*, %union.tree_node** %arrayidx488, align 8
  %call489 = call i32 @operand_equal_p(%union.tree_node* %161, %union.tree_node* %163, i32 0)
  %tobool490 = icmp ne i32 %call489, 0
  br i1 %tobool490, label %land.lhs.true.491, label %land.end.509

land.lhs.true.491:                                ; preds = %sw.bb.482
  %164 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp492 = bitcast %union.tree_node* %164 to %struct.tree_exp*
  %operands493 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp492, i32 0, i32 2
  %arrayidx494 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands493, i32 0, i64 1
  %165 = load %union.tree_node*, %union.tree_node** %arrayidx494, align 8
  %166 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp495 = bitcast %union.tree_node* %166 to %struct.tree_exp*
  %operands496 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp495, i32 0, i32 2
  %arrayidx497 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands496, i32 0, i64 1
  %167 = load %union.tree_node*, %union.tree_node** %arrayidx497, align 8
  %call498 = call i32 @operand_equal_p(%union.tree_node* %165, %union.tree_node* %167, i32 0)
  %tobool499 = icmp ne i32 %call498, 0
  br i1 %tobool499, label %land.rhs.500, label %land.end.509

land.rhs.500:                                     ; preds = %land.lhs.true.491
  %168 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp501 = bitcast %union.tree_node* %168 to %struct.tree_exp*
  %operands502 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp501, i32 0, i32 2
  %arrayidx503 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands502, i32 0, i64 2
  %169 = load %union.tree_node*, %union.tree_node** %arrayidx503, align 8
  %170 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp504 = bitcast %union.tree_node* %170 to %struct.tree_exp*
  %operands505 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp504, i32 0, i32 2
  %arrayidx506 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands505, i32 0, i64 2
  %171 = load %union.tree_node*, %union.tree_node** %arrayidx506, align 8
  %call507 = call i32 @operand_equal_p(%union.tree_node* %169, %union.tree_node* %171, i32 0)
  %tobool508 = icmp ne i32 %call507, 0
  br label %land.end.509

land.end.509:                                     ; preds = %land.rhs.500, %land.lhs.true.491, %sw.bb.482
  %172 = phi i1 [ false, %land.lhs.true.491 ], [ false, %sw.bb.482 ], [ %tobool508, %land.rhs.500 ]
  %land.ext510 = zext i1 %172 to i32
  store i32 %land.ext510, i32* %retval
  br label %return

sw.default.511:                                   ; preds = %if.end.449
  store i32 0, i32* %retval
  br label %return

sw.bb.512:                                        ; preds = %if.end.285
  %173 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common513 = bitcast %union.tree_node* %173 to %struct.tree_common*
  %code514 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common513, i32 0, i32 2
  %bf.load515 = load i32, i32* %code514, align 8
  %bf.clear516 = and i32 %bf.load515, 255
  %cmp517 = icmp eq i32 %bf.clear516, 120
  br i1 %cmp517, label %if.then.519, label %if.end.527

if.then.519:                                      ; preds = %sw.bb.512
  %174 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp520 = bitcast %union.tree_node* %174 to %struct.tree_exp*
  %operands521 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp520, i32 0, i32 2
  %arrayidx522 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands521, i32 0, i64 1
  %175 = bitcast %union.tree_node** %arrayidx522 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %175, align 8
  %177 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp523 = bitcast %union.tree_node* %177 to %struct.tree_exp*
  %operands524 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp523, i32 0, i32 2
  %arrayidx525 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands524, i32 0, i64 1
  %178 = bitcast %union.tree_node** %arrayidx525 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %178, align 8
  %call526 = call i32 @rtx_equal_p(%struct.rtx_def* %176, %struct.rtx_def* %179)
  store i32 %call526, i32* %retval
  br label %return

if.end.527:                                       ; preds = %sw.bb.512
  store i32 0, i32* %retval
  br label %return

sw.default.528:                                   ; preds = %if.end.285
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default.528, %if.end.527, %if.then.519, %sw.default.511, %land.end.509, %land.end.480, %sw.bb.454, %if.then.448, %land.end.432, %if.then.350, %if.end.324, %if.then.323, %if.then.284, %sw.bb.274, %land.end.272, %land.end.257, %while.end.245, %if.then.240, %if.then.227, %land.end.211, %land.end.190, %if.then.157, %if.then.134, %if.then
  %180 = load i32, i32* %retval
  ret i32 %180
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @invert_truthvalue(%union.tree_node* %arg) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %arg.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %code, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp4 = icmp eq i32 %conv, 60
  br i1 %cmp4, label %if.then.6, label %if.end.56

if.then.6:                                        ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp = bitcast %union.tree_node* %7 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx7 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx7, align 8
  %common8 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type9, align 8
  %common10 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load12 = load i32, i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  %cmp14 = icmp eq i32 %bf.clear13, 7
  br i1 %cmp14, label %land.lhs.true.40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.6
  %10 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp16 = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands17 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp16, i32 0, i32 2
  %arrayidx18 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands17, i32 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8
  %common19 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %common21 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 8
  br i1 %cmp25, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %13 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp27 = bitcast %union.tree_node* %13 to %struct.tree_exp*
  %operands28 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp27, i32 0, i32 2
  %arrayidx29 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands28, i32 0, i64 0
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8
  %common30 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %common32 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type33, align 8
  %common34 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 7
  br i1 %cmp38, label %land.lhs.true.40, label %if.else

land.lhs.true.40:                                 ; preds = %land.lhs.true, %if.then.6
  %17 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.else, label %land.lhs.true.41

land.lhs.true.41:                                 ; preds = %land.lhs.true.40
  %18 = load i32, i32* %code, align 4
  %cmp42 = icmp ne i32 %18, 102
  br i1 %cmp42, label %land.lhs.true.44, label %if.else

land.lhs.true.44:                                 ; preds = %land.lhs.true.41
  %19 = load i32, i32* %code, align 4
  %cmp45 = icmp ne i32 %19, 101
  br i1 %cmp45, label %if.then.47, label %if.else

if.then.47:                                       ; preds = %land.lhs.true.44
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8
  %21 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call = call %union.tree_node* @build1(i32 96, %union.tree_node* %20, %union.tree_node* %21)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.44, %land.lhs.true.41, %land.lhs.true.40, %land.lhs.true, %lor.lhs.false
  %22 = load i32, i32* %code, align 4
  %call48 = call i32 @invert_tree_comparison(i32 %22)
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8
  %24 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp49 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp49, i32 0, i32 2
  %arrayidx51 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands50, i32 0, i64 0
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx51, align 8
  %26 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp52 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands53 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp52, i32 0, i32 2
  %arrayidx54 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands53, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8
  %call55 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %call48, %union.tree_node* %23, %union.tree_node* %25, %union.tree_node* %27)
  store %union.tree_node* %call55, %union.tree_node** %retval
  br label %return

if.end.56:                                        ; preds = %if.end
  %28 = load i32, i32* %code, align 4
  switch i32 %28, label %sw.default [
    i32 25, label %sw.bb
    i32 93, label %sw.bb.61
    i32 94, label %sw.bb.71
    i32 95, label %sw.bb.81
    i32 91, label %sw.bb.111
    i32 92, label %sw.bb.121
    i32 96, label %sw.bb.131
    i32 51, label %sw.bb.135
    i32 47, label %sw.bb.148
    i32 58, label %sw.bb.157
    i32 116, label %sw.bb.166
    i32 115, label %sw.bb.171
    i32 114, label %sw.bb.171
    i32 76, label %sw.bb.171
    i32 88, label %sw.bb.181
    i32 118, label %sw.bb.191
    i32 56, label %sw.bb.193
  ]

sw.bb:                                            ; preds = %if.end.56
  %29 = load %union.tree_node*, %union.tree_node** %type, align 8
  %30 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call57 = call i32 @integer_zerop(%union.tree_node* %30)
  %conv58 = sext i32 %call57 to i64
  %call59 = call %union.tree_node* @build_int_2_wide(i64 %conv58, i64 0)
  %call60 = call %union.tree_node* @convert(%union.tree_node* %29, %union.tree_node* %call59)
  store %union.tree_node* %call60, %union.tree_node** %retval
  br label %return

sw.bb.61:                                         ; preds = %if.end.56
  %31 = load %union.tree_node*, %union.tree_node** %type, align 8
  %32 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp62 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands63 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp62, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands63, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8
  %call65 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %33)
  %34 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp66 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp66, i32 0, i32 2
  %arrayidx68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands67, i32 0, i64 1
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx68, align 8
  %call69 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %35)
  %call70 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 94, %union.tree_node* %31, %union.tree_node* %call65, %union.tree_node* %call69)
  store %union.tree_node* %call70, %union.tree_node** %retval
  br label %return

sw.bb.71:                                         ; preds = %if.end.56
  %36 = load %union.tree_node*, %union.tree_node** %type, align 8
  %37 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp72 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands73 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp72, i32 0, i32 2
  %arrayidx74 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands73, i32 0, i64 0
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx74, align 8
  %call75 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %38)
  %39 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp76 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands77 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp76, i32 0, i32 2
  %arrayidx78 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands77, i32 0, i64 1
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8
  %call79 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %40)
  %call80 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 93, %union.tree_node* %36, %union.tree_node* %call75, %union.tree_node* %call79)
  store %union.tree_node* %call80, %union.tree_node** %retval
  br label %return

sw.bb.81:                                         ; preds = %if.end.56
  %41 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp82 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands83 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp82, i32 0, i32 2
  %arrayidx84 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands83, i32 0, i64 1
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx84, align 8
  %common85 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 2
  %bf.load87 = load i32, i32* %code86, align 8
  %bf.clear88 = and i32 %bf.load87, 255
  %cmp89 = icmp eq i32 %bf.clear88, 96
  br i1 %cmp89, label %if.then.91, label %if.else.102

if.then.91:                                       ; preds = %sw.bb.81
  %43 = load %union.tree_node*, %union.tree_node** %type, align 8
  %44 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp92 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands93 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp92, i32 0, i32 2
  %arrayidx94 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands93, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx94, align 8
  %46 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp95 = bitcast %union.tree_node* %46 to %struct.tree_exp*
  %operands96 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp95, i32 0, i32 2
  %arrayidx97 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands96, i32 0, i64 1
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx97, align 8
  %exp98 = bitcast %union.tree_node* %47 to %struct.tree_exp*
  %operands99 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp98, i32 0, i32 2
  %arrayidx100 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands99, i32 0, i64 0
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx100, align 8
  %call101 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 95, %union.tree_node* %43, %union.tree_node* %45, %union.tree_node* %48)
  store %union.tree_node* %call101, %union.tree_node** %retval
  br label %return

if.else.102:                                      ; preds = %sw.bb.81
  %49 = load %union.tree_node*, %union.tree_node** %type, align 8
  %50 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp103 = bitcast %union.tree_node* %50 to %struct.tree_exp*
  %operands104 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp103, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands104, i32 0, i64 0
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx105, align 8
  %call106 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %51)
  %52 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp107 = bitcast %union.tree_node* %52 to %struct.tree_exp*
  %operands108 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp107, i32 0, i32 2
  %arrayidx109 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands108, i32 0, i64 1
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx109, align 8
  %call110 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 95, %union.tree_node* %49, %union.tree_node* %call106, %union.tree_node* %53)
  store %union.tree_node* %call110, %union.tree_node** %retval
  br label %return

sw.bb.111:                                        ; preds = %if.end.56
  %54 = load %union.tree_node*, %union.tree_node** %type, align 8
  %55 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp112 = bitcast %union.tree_node* %55 to %struct.tree_exp*
  %operands113 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp112, i32 0, i32 2
  %arrayidx114 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands113, i32 0, i64 0
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx114, align 8
  %call115 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %56)
  %57 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp116 = bitcast %union.tree_node* %57 to %struct.tree_exp*
  %operands117 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp116, i32 0, i32 2
  %arrayidx118 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands117, i32 0, i64 1
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx118, align 8
  %call119 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %58)
  %call120 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 92, %union.tree_node* %54, %union.tree_node* %call115, %union.tree_node* %call119)
  store %union.tree_node* %call120, %union.tree_node** %retval
  br label %return

sw.bb.121:                                        ; preds = %if.end.56
  %59 = load %union.tree_node*, %union.tree_node** %type, align 8
  %60 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp122 = bitcast %union.tree_node* %60 to %struct.tree_exp*
  %operands123 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp122, i32 0, i32 2
  %arrayidx124 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands123, i32 0, i64 0
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx124, align 8
  %call125 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %61)
  %62 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp126 = bitcast %union.tree_node* %62 to %struct.tree_exp*
  %operands127 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp126, i32 0, i32 2
  %arrayidx128 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands127, i32 0, i64 1
  %63 = load %union.tree_node*, %union.tree_node** %arrayidx128, align 8
  %call129 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %63)
  %call130 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 91, %union.tree_node* %59, %union.tree_node* %call125, %union.tree_node* %call129)
  store %union.tree_node* %call130, %union.tree_node** %retval
  br label %return

sw.bb.131:                                        ; preds = %if.end.56
  %64 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp132 = bitcast %union.tree_node* %64 to %struct.tree_exp*
  %operands133 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp132, i32 0, i32 2
  %arrayidx134 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands133, i32 0, i64 0
  %65 = load %union.tree_node*, %union.tree_node** %arrayidx134, align 8
  store %union.tree_node* %65, %union.tree_node** %retval
  br label %return

sw.bb.135:                                        ; preds = %if.end.56
  %66 = load %union.tree_node*, %union.tree_node** %type, align 8
  %67 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp136 = bitcast %union.tree_node* %67 to %struct.tree_exp*
  %operands137 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp136, i32 0, i32 2
  %arrayidx138 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands137, i32 0, i64 0
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx138, align 8
  %69 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp139 = bitcast %union.tree_node* %69 to %struct.tree_exp*
  %operands140 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp139, i32 0, i32 2
  %arrayidx141 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands140, i32 0, i64 1
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx141, align 8
  %call142 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %70)
  %71 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp143 = bitcast %union.tree_node* %71 to %struct.tree_exp*
  %operands144 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp143, i32 0, i32 2
  %arrayidx145 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands144, i32 0, i64 2
  %72 = load %union.tree_node*, %union.tree_node** %arrayidx145, align 8
  %call146 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %72)
  %call147 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %66, %union.tree_node* %68, %union.tree_node* %call142, %union.tree_node* %call146)
  store %union.tree_node* %call147, %union.tree_node** %retval
  br label %return

sw.bb.148:                                        ; preds = %if.end.56
  %73 = load %union.tree_node*, %union.tree_node** %type, align 8
  %74 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp149 = bitcast %union.tree_node* %74 to %struct.tree_exp*
  %operands150 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp149, i32 0, i32 2
  %arrayidx151 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands150, i32 0, i64 0
  %75 = load %union.tree_node*, %union.tree_node** %arrayidx151, align 8
  %76 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp152 = bitcast %union.tree_node* %76 to %struct.tree_exp*
  %operands153 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp152, i32 0, i32 2
  %arrayidx154 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands153, i32 0, i64 1
  %77 = load %union.tree_node*, %union.tree_node** %arrayidx154, align 8
  %call155 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %77)
  %call156 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %73, %union.tree_node* %75, %union.tree_node* %call155)
  store %union.tree_node* %call156, %union.tree_node** %retval
  br label %return

sw.bb.157:                                        ; preds = %if.end.56
  %78 = load %union.tree_node*, %union.tree_node** %type, align 8
  %79 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp158 = bitcast %union.tree_node* %79 to %struct.tree_exp*
  %operands159 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp158, i32 0, i32 2
  %arrayidx160 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands159, i32 0, i64 0
  %80 = load %union.tree_node*, %union.tree_node** %arrayidx160, align 8
  %call161 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %80)
  %81 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp162 = bitcast %union.tree_node* %81 to %struct.tree_exp*
  %operands163 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp162, i32 0, i32 2
  %arrayidx164 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands163, i32 0, i64 1
  %82 = load %union.tree_node*, %union.tree_node** %arrayidx164, align 8
  %call165 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 58, %union.tree_node* %78, %union.tree_node* %call161, %union.tree_node* %82)
  store %union.tree_node* %call165, %union.tree_node** %retval
  br label %return

sw.bb.166:                                        ; preds = %if.end.56
  %83 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp167 = bitcast %union.tree_node* %83 to %struct.tree_exp*
  %operands168 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp167, i32 0, i32 2
  %arrayidx169 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands168, i32 0, i64 0
  %84 = load %union.tree_node*, %union.tree_node** %arrayidx169, align 8
  %call170 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %84)
  store %union.tree_node* %call170, %union.tree_node** %retval
  br label %return

sw.bb.171:                                        ; preds = %if.end.56, %if.end.56, %if.end.56
  %85 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common172 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 2
  %bf.load174 = load i32, i32* %code173, align 8
  %bf.clear175 = and i32 %bf.load174, 255
  %86 = load %union.tree_node*, %union.tree_node** %type, align 8
  %87 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp176 = bitcast %union.tree_node* %87 to %struct.tree_exp*
  %operands177 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp176, i32 0, i32 2
  %arrayidx178 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands177, i32 0, i64 0
  %88 = load %union.tree_node*, %union.tree_node** %arrayidx178, align 8
  %call179 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %88)
  %call180 = call %union.tree_node* @build1(i32 %bf.clear175, %union.tree_node* %86, %union.tree_node* %call179)
  store %union.tree_node* %call180, %union.tree_node** %retval
  br label %return

sw.bb.181:                                        ; preds = %if.end.56
  %89 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp182 = bitcast %union.tree_node* %89 to %struct.tree_exp*
  %operands183 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp182, i32 0, i32 2
  %arrayidx184 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands183, i32 0, i64 1
  %90 = load %union.tree_node*, %union.tree_node** %arrayidx184, align 8
  %call185 = call i32 @integer_onep(%union.tree_node* %90)
  %tobool186 = icmp ne i32 %call185, 0
  br i1 %tobool186, label %if.end.188, label %if.then.187

if.then.187:                                      ; preds = %sw.bb.181
  br label %sw.epilog

if.end.188:                                       ; preds = %sw.bb.181
  %91 = load %union.tree_node*, %union.tree_node** %type, align 8
  %92 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %93 = load %union.tree_node*, %union.tree_node** %type, align 8
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call189 = call %union.tree_node* @convert(%union.tree_node* %93, %union.tree_node* %94)
  %call190 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 101, %union.tree_node* %91, %union.tree_node* %92, %union.tree_node* %call189)
  store %union.tree_node* %call190, %union.tree_node** %retval
  br label %return

sw.bb.191:                                        ; preds = %if.end.56
  %95 = load %union.tree_node*, %union.tree_node** %type, align 8
  %96 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call192 = call %union.tree_node* @build1(i32 96, %union.tree_node* %95, %union.tree_node* %96)
  store %union.tree_node* %call192, %union.tree_node** %retval
  br label %return

sw.bb.193:                                        ; preds = %if.end.56
  %97 = load %union.tree_node*, %union.tree_node** %type, align 8
  %98 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp194 = bitcast %union.tree_node* %98 to %struct.tree_exp*
  %operands195 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp194, i32 0, i32 2
  %arrayidx196 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands195, i32 0, i64 0
  %99 = load %union.tree_node*, %union.tree_node** %arrayidx196, align 8
  %call197 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %99)
  %call198 = call %union.tree_node* @build1(i32 56, %union.tree_node* %97, %union.tree_node* %call197)
  store %union.tree_node* %call198, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %if.end.56
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then.187
  %100 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common199 = bitcast %union.tree_node* %100 to %struct.tree_common*
  %type200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common199, i32 0, i32 1
  %101 = load %union.tree_node*, %union.tree_node** %type200, align 8
  %common201 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %code202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common201, i32 0, i32 2
  %bf.load203 = load i32, i32* %code202, align 8
  %bf.clear204 = and i32 %bf.load203, 255
  %cmp205 = icmp ne i32 %bf.clear204, 11
  br i1 %cmp205, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %sw.epilog
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 2934, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.invert_truthvalue, i32 0, i32 0)) #5
  unreachable

if.end.208:                                       ; preds = %sw.epilog
  %102 = load %union.tree_node*, %union.tree_node** %type, align 8
  %103 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call209 = call %union.tree_node* @build1(i32 96, %union.tree_node* %102, %union.tree_node* %103)
  store %union.tree_node* %call209, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.208, %sw.bb.193, %sw.bb.191, %if.end.188, %sw.bb.171, %sw.bb.166, %sw.bb.157, %sw.bb.148, %sw.bb.135, %sw.bb.131, %sw.bb.121, %sw.bb.111, %if.else.102, %if.then.91, %sw.bb.71, %sw.bb.61, %sw.bb, %if.else, %if.then.47, %if.then
  %104 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %104
}

; Function Attrs: nounwind uwtable
define internal i32 @invert_tree_comparison(i32 %code) #0 {
entry:
  %retval = alloca i32, align 4
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  switch i32 %0, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb.1
    i32 99, label %sw.bb.2
    i32 100, label %sw.bb.3
    i32 97, label %sw.bb.4
    i32 98, label %sw.bb.5
  ]

sw.bb:                                            ; preds = %entry
  store i32 102, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  store i32 101, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %entry
  store i32 98, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  store i32 97, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  store i32 100, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %entry
  store i32 99, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 2332, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.invert_tree_comparison, i32 0, i32 0)) #5
  unreachable

return:                                           ; preds = %sw.bb.5, %sw.bb.4, %sw.bb.3, %sw.bb.2, %sw.bb.1, %sw.bb
  %1 = load i32, i32* %retval
  ret i32 %1
}

declare %union.tree_node* @build_int_2_wide(i64, i64) #3

declare i32 @first_rtl_op(i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @truth_value_p(i32 %code) #0 {
entry:
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 60
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %code.addr, align 4
  %cmp2 = icmp eq i32 %2, 93
  br i1 %cmp2, label %lor.end, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %code.addr, align 4
  %cmp5 = icmp eq i32 %3, 91
  br i1 %cmp5, label %lor.end, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false.4
  %4 = load i32, i32* %code.addr, align 4
  %cmp8 = icmp eq i32 %4, 94
  br i1 %cmp8, label %lor.end, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.7
  %5 = load i32, i32* %code.addr, align 4
  %cmp11 = icmp eq i32 %5, 92
  br i1 %cmp11, label %lor.end, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.10
  %6 = load i32, i32* %code.addr, align 4
  %cmp14 = icmp eq i32 %6, 95
  br i1 %cmp14, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.13
  %7 = load i32, i32* %code.addr, align 4
  %cmp16 = icmp eq i32 %7, 96
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.13, %lor.lhs.false.10, %lor.lhs.false.7, %lor.lhs.false.4, %lor.lhs.false, %entry
  %8 = phi i1 [ true, %lor.lhs.false.13 ], [ true, %lor.lhs.false.10 ], [ true, %lor.lhs.false.7 ], [ true, %lor.lhs.false.4 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp16, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define internal i32 @count_cond(%union.tree_node* %expr, i32 %lim) #0 {
entry:
  %retval = alloca i32, align 4
  %expr.addr = alloca %union.tree_node*, align 8
  %lim.addr = alloca i32, align 4
  %ctrue = alloca i32, align 4
  %cfalse = alloca i32, align 4
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  store i32 %lim, i32* %lim.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 51
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %lim.addr, align 4
  %cmp1 = icmp sle i32 %1, 0
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.3

if.end.3:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %4 = load i32, i32* %lim.addr, align 4
  %sub = sub nsw i32 %4, 1
  %call = call i32 @count_cond(%union.tree_node* %3, i32 %sub)
  store i32 %call, i32* %ctrue, align 4
  %5 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp4 = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands5 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4, i32 0, i32 2
  %arrayidx6 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5, i32 0, i64 2
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8
  %7 = load i32, i32* %lim.addr, align 4
  %sub7 = sub nsw i32 %7, 1
  %8 = load i32, i32* %ctrue, align 4
  %sub8 = sub nsw i32 %sub7, %8
  %call9 = call i32 @count_cond(%union.tree_node* %6, i32 %sub8)
  store i32 %call9, i32* %cfalse, align 4
  %9 = load i32, i32* %lim.addr, align 4
  %10 = load i32, i32* %ctrue, align 4
  %add = add nsw i32 1, %10
  %11 = load i32, i32* %cfalse, align 4
  %add10 = add nsw i32 %add, %11
  %cmp11 = icmp slt i32 %9, %add10
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.3
  %12 = load i32, i32* %lim.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end.3
  %13 = load i32, i32* %ctrue, align 4
  %add12 = add nsw i32 1, %13
  %14 = load i32, i32* %cfalse, align 4
  %add13 = add nsw i32 %add12, %14
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %add13, %cond.false ]
  store i32 %cond, i32* %retval
  br label %return

return:                                           ; preds = %cond.end, %if.then.2, %if.then
  %15 = load i32, i32* %retval
  ret i32 %15
}

declare i32 @global_bindings_p() #3

declare i32 @contains_placeholder_p(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @fold_binary_op_with_conditional_arg(i32 %code, %union.tree_node* %type, %union.tree_node* %cond, %union.tree_node* %arg, i32 %cond_first_p) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  %cond.addr = alloca %union.tree_node*, align 8
  %arg.addr = alloca %union.tree_node*, align 8
  %cond_first_p.addr = alloca i32, align 4
  %test = alloca %union.tree_node*, align 8
  %true_value = alloca %union.tree_node*, align 8
  %false_value = alloca %union.tree_node*, align 8
  %lhs = alloca %union.tree_node*, align 8
  %rhs = alloca %union.tree_node*, align 8
  %true_lhs = alloca %union.tree_node**, align 8
  %true_rhs = alloca %union.tree_node**, align 8
  %false_lhs = alloca %union.tree_node**, align 8
  %false_rhs = alloca %union.tree_node**, align 8
  %lhs_code = alloca i32, align 4
  %rhs_code = alloca i32, align 4
  %lhs_type = alloca %union.tree_node*, align 8
  %rhs_type = alloca %union.tree_node*, align 8
  %testtype = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %cond, %union.tree_node** %cond.addr, align 8
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  store i32 %cond_first_p, i32* %cond_first_p.addr, align 4
  store %union.tree_node* null, %union.tree_node** %lhs, align 8
  store %union.tree_node* null, %union.tree_node** %rhs, align 8
  %0 = load i32, i32* %code.addr, align 4
  store i32 %0, i32* %lhs_code, align 4
  %1 = load i32, i32* %code.addr, align 4
  store i32 %1, i32* %rhs_code, align 4
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %2, %union.tree_node** %lhs_type, align 8
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %3, %union.tree_node** %rhs_type, align 8
  %4 = load i32, i32* %cond_first_p.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store %union.tree_node** %arg.addr, %union.tree_node*** %false_rhs, align 8
  store %union.tree_node** %arg.addr, %union.tree_node*** %true_rhs, align 8
  store %union.tree_node** %true_value, %union.tree_node*** %true_lhs, align 8
  store %union.tree_node** %false_value, %union.tree_node*** %false_lhs, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store %union.tree_node** %arg.addr, %union.tree_node*** %false_lhs, align 8
  store %union.tree_node** %arg.addr, %union.tree_node*** %true_lhs, align 8
  store %union.tree_node** %true_value, %union.tree_node*** %true_rhs, align 8
  store %union.tree_node** %false_value, %union.tree_node*** %false_rhs, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 51
  br i1 %cmp, label %if.then.2, label %if.else.33

if.then.2:                                        ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %7, %union.tree_node** %test, align 8
  %8 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %exp3 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands4 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3, i32 0, i32 2
  %arrayidx5 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4, i32 0, i64 1
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8
  store %union.tree_node* %9, %union.tree_node** %true_value, align 8
  %10 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %exp6 = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands7 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6, i32 0, i32 2
  %arrayidx8 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7, i32 0, i64 2
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8
  store %union.tree_node* %11, %union.tree_node** %false_value, align 8
  %12 = load %union.tree_node*, %union.tree_node** %true_value, align 8
  %common9 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type10, align 8
  %common11 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 5
  br i1 %cmp15, label %if.then.16, label %if.end.20

if.then.16:                                       ; preds = %if.then.2
  store i32 47, i32* %lhs_code, align 4
  %14 = load i32, i32* %cond_first_p.addr, align 4
  %tobool17 = icmp ne i32 %14, 0
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %if.then.16
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  store %union.tree_node* %15, %union.tree_node** %lhs_type, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.18, %if.then.16
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %if.then.2
  %16 = load %union.tree_node*, %union.tree_node** %false_value, align 8
  %common21 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %common23 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 5
  br i1 %cmp27, label %if.then.28, label %if.end.32

if.then.28:                                       ; preds = %if.end.20
  store i32 47, i32* %rhs_code, align 4
  %18 = load i32, i32* %cond_first_p.addr, align 4
  %tobool29 = icmp ne i32 %18, 0
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.then.28
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  store %union.tree_node* %19, %union.tree_node** %rhs_type, align 8
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.30, %if.then.28
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.20
  br label %if.end.37

if.else.33:                                       ; preds = %if.end
  %20 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %common34 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type35, align 8
  store %union.tree_node* %21, %union.tree_node** %testtype, align 8
  %22 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  store %union.tree_node* %22, %union.tree_node** %test, align 8
  %23 = load %union.tree_node*, %union.tree_node** %testtype, align 8
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %23, %union.tree_node* %24)
  store %union.tree_node* %call, %union.tree_node** %true_value, align 8
  %25 = load %union.tree_node*, %union.tree_node** %testtype, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call36 = call %union.tree_node* @convert(%union.tree_node* %25, %union.tree_node* %26)
  store %union.tree_node* %call36, %union.tree_node** %false_value, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.33, %if.end.32
  %27 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common38 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  %cmp42 = icmp ne i32 %bf.clear41, 118
  br i1 %cmp42, label %land.lhs.true, label %if.end.106

land.lhs.true:                                    ; preds = %if.end.37
  %28 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common43 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load44 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load44, 9
  %bf.clear45 = and i32 %bf.lshr, 1
  %tobool46 = icmp ne i32 %bf.clear45, 0
  br i1 %tobool46, label %if.end.106, label %land.lhs.true.47

land.lhs.true.47:                                 ; preds = %land.lhs.true
  %call48 = call i32 @global_bindings_p()
  %cmp49 = icmp eq i32 %call48, 0
  br i1 %cmp49, label %land.lhs.true.50, label %if.end.106

land.lhs.true.50:                                 ; preds = %land.lhs.true.47
  %29 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common51 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp ne i32 %bf.clear54, 34
  br i1 %cmp55, label %land.lhs.true.56, label %lor.lhs.false

land.lhs.true.56:                                 ; preds = %land.lhs.true.50
  %30 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common57 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %code58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 2
  %bf.load59 = load i32, i32* %code58, align 8
  %bf.clear60 = and i32 %bf.load59, 255
  %cmp61 = icmp ne i32 %bf.clear60, 35
  br i1 %cmp61, label %if.then.67, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.56, %land.lhs.true.50
  %31 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common62 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 2
  %bf.load63 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr64 = lshr i32 %bf.load63, 8
  %bf.clear65 = and i32 %bf.lshr64, 1
  %tobool66 = icmp ne i32 %bf.clear65, 0
  br i1 %tobool66, label %if.then.67, label %if.end.106

if.then.67:                                       ; preds = %lor.lhs.false, %land.lhs.true.56
  %32 = load %union.tree_node*, %union.tree_node** %true_value, align 8
  %common68 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 2
  %bf.load70 = load i32, i32* %code69, align 8
  %bf.clear71 = and i32 %bf.load70, 255
  %cmp72 = icmp ne i32 %bf.clear71, 51
  br i1 %cmp72, label %if.then.73, label %if.end.76

if.then.73:                                       ; preds = %if.then.67
  %33 = load i32, i32* %lhs_code, align 4
  %34 = load %union.tree_node*, %union.tree_node** %lhs_type, align 8
  %35 = load %union.tree_node**, %union.tree_node*** %true_lhs, align 8
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8
  %37 = load %union.tree_node**, %union.tree_node*** %true_rhs, align 8
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8
  %call74 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %33, %union.tree_node* %34, %union.tree_node* %36, %union.tree_node* %38)
  %call75 = call %union.tree_node* @fold(%union.tree_node* %call74)
  store %union.tree_node* %call75, %union.tree_node** %lhs, align 8
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.73, %if.then.67
  %39 = load %union.tree_node*, %union.tree_node** %false_value, align 8
  %common77 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %code78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 2
  %bf.load79 = load i32, i32* %code78, align 8
  %bf.clear80 = and i32 %bf.load79, 255
  %cmp81 = icmp ne i32 %bf.clear80, 51
  br i1 %cmp81, label %if.then.82, label %if.end.85

if.then.82:                                       ; preds = %if.end.76
  %40 = load i32, i32* %rhs_code, align 4
  %41 = load %union.tree_node*, %union.tree_node** %rhs_type, align 8
  %42 = load %union.tree_node**, %union.tree_node*** %false_lhs, align 8
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8
  %44 = load %union.tree_node**, %union.tree_node*** %false_rhs, align 8
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8
  %call83 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %40, %union.tree_node* %41, %union.tree_node* %43, %union.tree_node* %45)
  %call84 = call %union.tree_node* @fold(%union.tree_node* %call83)
  store %union.tree_node* %call84, %union.tree_node** %rhs, align 8
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.82, %if.end.76
  %46 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %cmp86 = icmp eq %union.tree_node* %46, null
  br i1 %cmp86, label %land.lhs.true.94, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %if.end.85
  %47 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %common88 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %constant_flag89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %constant_flag89, align 8
  %bf.lshr91 = lshr i32 %bf.load90, 9
  %bf.clear92 = and i32 %bf.lshr91, 1
  %tobool93 = icmp ne i32 %bf.clear92, 0
  br i1 %tobool93, label %if.end.105, label %land.lhs.true.94

land.lhs.true.94:                                 ; preds = %lor.lhs.false.87, %if.end.85
  %48 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %cmp95 = icmp eq %union.tree_node* %48, null
  br i1 %cmp95, label %if.then.103, label %lor.lhs.false.96

lor.lhs.false.96:                                 ; preds = %land.lhs.true.94
  %49 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %common97 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %constant_flag98 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load99 = load i32, i32* %constant_flag98, align 8
  %bf.lshr100 = lshr i32 %bf.load99, 9
  %bf.clear101 = and i32 %bf.lshr100, 1
  %tobool102 = icmp ne i32 %bf.clear101, 0
  br i1 %tobool102, label %if.end.105, label %if.then.103

if.then.103:                                      ; preds = %lor.lhs.false.96, %land.lhs.true.94
  %50 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call104 = call %union.tree_node* @save_expr(%union.tree_node* %50)
  store %union.tree_node* %call104, %union.tree_node** %arg.addr, align 8
  store %union.tree_node* null, %union.tree_node** %rhs, align 8
  store %union.tree_node* null, %union.tree_node** %lhs, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.103, %lor.lhs.false.96, %lor.lhs.false.87
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %lor.lhs.false, %land.lhs.true.47, %land.lhs.true, %if.end.37
  %51 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %cmp107 = icmp eq %union.tree_node* %51, null
  br i1 %cmp107, label %if.then.108, label %if.end.111

if.then.108:                                      ; preds = %if.end.106
  %52 = load i32, i32* %lhs_code, align 4
  %53 = load %union.tree_node*, %union.tree_node** %lhs_type, align 8
  %54 = load %union.tree_node**, %union.tree_node*** %true_lhs, align 8
  %55 = load %union.tree_node*, %union.tree_node** %54, align 8
  %56 = load %union.tree_node**, %union.tree_node*** %true_rhs, align 8
  %57 = load %union.tree_node*, %union.tree_node** %56, align 8
  %call109 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %52, %union.tree_node* %53, %union.tree_node* %55, %union.tree_node* %57)
  %call110 = call %union.tree_node* @fold(%union.tree_node* %call109)
  store %union.tree_node* %call110, %union.tree_node** %lhs, align 8
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.108, %if.end.106
  %58 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %cmp112 = icmp eq %union.tree_node* %58, null
  br i1 %cmp112, label %if.then.113, label %if.end.116

if.then.113:                                      ; preds = %if.end.111
  %59 = load i32, i32* %rhs_code, align 4
  %60 = load %union.tree_node*, %union.tree_node** %rhs_type, align 8
  %61 = load %union.tree_node**, %union.tree_node*** %false_lhs, align 8
  %62 = load %union.tree_node*, %union.tree_node** %61, align 8
  %63 = load %union.tree_node**, %union.tree_node*** %false_rhs, align 8
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8
  %call114 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %59, %union.tree_node* %60, %union.tree_node* %62, %union.tree_node* %64)
  %call115 = call %union.tree_node* @fold(%union.tree_node* %call114)
  store %union.tree_node* %call115, %union.tree_node** %rhs, align 8
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.113, %if.end.111
  %65 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %66 = load %union.tree_node*, %union.tree_node** %test, align 8
  %67 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %68 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %call117 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %65, %union.tree_node* %66, %union.tree_node* %67, %union.tree_node* %68)
  %call118 = call %union.tree_node* @fold(%union.tree_node* %call117)
  store %union.tree_node* %call118, %union.tree_node** %test, align 8
  %69 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common119 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %code120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 2
  %bf.load121 = load i32, i32* %code120, align 8
  %bf.clear122 = and i32 %bf.load121, 255
  %cmp123 = icmp eq i32 %bf.clear122, 118
  br i1 %cmp123, label %if.then.124, label %if.else.128

if.then.124:                                      ; preds = %if.end.116
  %70 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %72 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call125 = call %union.tree_node* @convert(%union.tree_node* %71, %union.tree_node* %72)
  %73 = load %union.tree_node*, %union.tree_node** %test, align 8
  %74 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call126 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %73, %union.tree_node* %74)
  %call127 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %70, %union.tree_node* %call125, %union.tree_node* %call126)
  store %union.tree_node* %call127, %union.tree_node** %retval
  br label %return

if.else.128:                                      ; preds = %if.end.116
  %75 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %76 = load %union.tree_node*, %union.tree_node** %test, align 8
  %call129 = call %union.tree_node* @convert(%union.tree_node* %75, %union.tree_node* %76)
  store %union.tree_node* %call129, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else.128, %if.then.124
  %77 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %77
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @fold_convert(%union.tree_node* %t, %union.tree_node* %arg1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %overflow = alloca i32, align 4
  %x = alloca %struct.realvaluetype, align 8
  %l = alloca %struct.realvaluetype, align 8
  %u = alloca %struct.realvaluetype, align 8
  %type1137 = alloca %union.tree_node*, align 8
  %no_upper_bound = alloca i32, align 4
  %tmp = alloca %struct.realvaluetype, align 8
  %tmp148 = alloca %struct.realvaluetype, align 8
  %low170 = alloca i64, align 8
  %high172 = alloca i64, align 8
  %args = alloca %struct.fc_args, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  store i32 0, i32* %overflow, align 4
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 13
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common3 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp7 = icmp eq i32 %bf.clear6, 15
  br i1 %cmp7, label %if.then, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common9 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 6
  br i1 %cmp13, label %if.then, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false.8
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common15 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 10
  br i1 %cmp19, label %if.then, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.14
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common21 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 11
  br i1 %cmp25, label %if.then, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.20
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common27 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp eq i32 %bf.clear30, 12
  br i1 %cmp31, label %if.then, label %if.else.212

if.then:                                          ; preds = %lor.lhs.false.26, %lor.lhs.false.20, %lor.lhs.false.14, %lor.lhs.false.8, %lor.lhs.false, %entry
  %8 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common32 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 2
  %bf.load34 = load i32, i32* %code33, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 25
  br i1 %cmp36, label %if.then.37, label %if.else

if.then.37:                                       ; preds = %if.then
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type38 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type38, i32 0, i32 6
  %bf.load39 = load i32, i32* %precision, align 4
  %bf.clear40 = and i32 %bf.load39, 511
  %cmp41 = icmp sgt i32 %bf.clear40, 128
  br i1 %cmp41, label %if.then.42, label %if.end

if.then.42:                                       ; preds = %if.then.37
  %10 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %10, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %if.then.37
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common43 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load45 = load i32, i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 6
  br i1 %cmp47, label %land.lhs.true, label %if.end.62

land.lhs.true:                                    ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type48 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type48, i32 0, i32 6
  %bf.load49 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr = lshr i32 %bf.load49, 17
  %bf.clear50 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear50, 0
  br i1 %tobool, label %land.lhs.true.51, label %if.end.62

land.lhs.true.51:                                 ; preds = %land.lhs.true
  %13 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common52 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 2
  %bf.load53 = load i32, i32* %static_flag, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 18
  %bf.clear55 = and i32 %bf.lshr54, 1
  %tobool56 = icmp ne i32 %bf.clear55, 0
  br i1 %tobool56, label %if.end.62, label %land.lhs.true.57

land.lhs.true.57:                                 ; preds = %land.lhs.true.51
  %14 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call = call i32 @compare_tree_int(%union.tree_node* %14, i64 10000)
  %cmp58 = icmp slt i32 %call, 0
  br i1 %cmp58, label %if.then.59, label %if.end.62

if.then.59:                                       ; preds = %land.lhs.true.57
  %15 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst = bitcast %union.tree_node* %15 to %struct.tree_int_cst*
  %int_cst60 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst60, i32 0, i32 0
  %16 = load i64, i64* %low, align 8
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call61 = call %union.tree_node* @size_int_type_wide(i64 %16, %union.tree_node* %17)
  store %union.tree_node* %call61, %union.tree_node** %retval
  br label %return

if.end.62:                                        ; preds = %land.lhs.true.57, %land.lhs.true.51, %land.lhs.true, %if.end
  %18 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst63 = bitcast %union.tree_node* %18 to %struct.tree_int_cst*
  %int_cst64 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst63, i32 0, i32 2
  %low65 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst64, i32 0, i32 0
  %19 = load i64, i64* %low65, align 8
  %20 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst66 = bitcast %union.tree_node* %20 to %struct.tree_int_cst*
  %int_cst67 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst66, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst67, i32 0, i32 1
  %21 = load i64, i64* %high, align 8
  %call68 = call %union.tree_node* @build_int_2_wide(i64 %19, i64 %21)
  store %union.tree_node* %call68, %union.tree_node** %t.addr, align 8
  %22 = load %union.tree_node*, %union.tree_node** %type, align 8
  %23 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common69 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 1
  store %union.tree_node* %22, %union.tree_node** %type70, align 8
  %24 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %int_cst71 = bitcast %union.tree_node* %25 to %struct.tree_int_cst*
  %int_cst72 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst71, i32 0, i32 2
  %high73 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst72, i32 0, i32 1
  %26 = load i64, i64* %high73, align 8
  %cmp74 = icmp slt i64 %26, 0
  br i1 %cmp74, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.62
  %27 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common75 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load76 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 13
  %bf.clear78 = and i32 %bf.lshr77, 1
  %28 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common79 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type80, align 8
  %common81 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %unsigned_flag82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 2
  %bf.load83 = load i32, i32* %unsigned_flag82, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 13
  %bf.clear85 = and i32 %bf.lshr84, 1
  %cmp86 = icmp slt i32 %bf.clear78, %bf.clear85
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.62
  %30 = phi i1 [ false, %if.end.62 ], [ %cmp86, %land.rhs ]
  %land.ext = zext i1 %30 to i32
  %call87 = call i32 @force_fit_type(%union.tree_node* %24, i32 %land.ext)
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %land.lhs.true.89, label %lor.rhs

land.lhs.true.89:                                 ; preds = %land.end
  %31 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common90 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type91, align 8
  %common92 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code93 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common92, i32 0, i32 2
  %bf.load94 = load i32, i32* %code93, align 8
  %bf.clear95 = and i32 %bf.load94, 255
  %cmp96 = icmp eq i32 %bf.clear95, 13
  br i1 %cmp96, label %lor.rhs, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %land.lhs.true.89
  %33 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common98 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type99, align 8
  %common100 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 2
  %bf.load102 = load i32, i32* %code101, align 8
  %bf.clear103 = and i32 %bf.load102, 255
  %cmp104 = icmp eq i32 %bf.clear103, 15
  br i1 %cmp104, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false.97, %land.lhs.true.89, %land.end
  %35 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common105 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 2
  %bf.load106 = load i32, i32* %public_flag, align 8
  %bf.lshr107 = lshr i32 %bf.load106, 19
  %bf.clear108 = and i32 %bf.lshr107, 1
  %tobool109 = icmp ne i32 %bf.clear108, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.97
  %36 = phi i1 [ true, %lor.lhs.false.97 ], [ %tobool109, %lor.rhs ]
  %lor.ext = zext i1 %36 to i32
  %37 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common110 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %public_flag111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 2
  %bf.load112 = load i32, i32* %public_flag111, align 8
  %bf.value = and i32 %lor.ext, 1
  %bf.shl = shl i32 %bf.value, 19
  %bf.clear113 = and i32 %bf.load112, -524289
  %bf.set = or i32 %bf.clear113, %bf.shl
  store i32 %bf.set, i32* %public_flag111, align 8
  %38 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common114 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %public_flag115 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 2
  %bf.load116 = load i32, i32* %public_flag115, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 19
  %bf.clear118 = and i32 %bf.lshr117, 1
  %39 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common119 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %static_flag120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 2
  %bf.load121 = load i32, i32* %static_flag120, align 8
  %bf.lshr122 = lshr i32 %bf.load121, 18
  %bf.clear123 = and i32 %bf.lshr122, 1
  %or = or i32 %bf.clear118, %bf.clear123
  %40 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common124 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %static_flag125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 2
  %bf.load126 = load i32, i32* %static_flag125, align 8
  %bf.value127 = and i32 %or, 1
  %bf.shl128 = shl i32 %bf.value127, 18
  %bf.clear129 = and i32 %bf.load126, -262145
  %bf.set130 = or i32 %bf.clear129, %bf.shl128
  store i32 %bf.set130, i32* %static_flag125, align 8
  br label %if.end.209

if.else:                                          ; preds = %if.then
  %41 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common131 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 2
  %bf.load133 = load i32, i32* %code132, align 8
  %bf.clear134 = and i32 %bf.load133, 255
  %cmp135 = icmp eq i32 %bf.clear134, 26
  br i1 %cmp135, label %if.then.136, label %if.end.208

if.then.136:                                      ; preds = %if.else
  %42 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common138 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type139, align 8
  store %union.tree_node* %43, %union.tree_node** %type1137, align 8
  %44 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %real_cst = bitcast %union.tree_node* %44 to %struct.tree_real_cst*
  %real_cst140 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst, i32 0, i32 2
  %45 = bitcast %struct.realvaluetype* %x to i8*
  %46 = bitcast %struct.realvaluetype* %real_cst140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 24, i32 8, i1 false)
  %47 = load %union.tree_node*, %union.tree_node** %type1137, align 8
  %48 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type141 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type141, i32 0, i32 12
  %49 = load %union.tree_node*, %union.tree_node** %minval, align 8
  call void @real_value_from_int_cst(%struct.realvaluetype* sret %tmp, %union.tree_node* %47, %union.tree_node* %49)
  %50 = bitcast %struct.realvaluetype* %l to i8*
  %51 = bitcast %struct.realvaluetype* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 24, i32 8, i1 false)
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type142 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i32 0, i32 13
  %53 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %cmp143 = icmp eq %union.tree_node* %53, null
  %conv = zext i1 %cmp143 to i32
  store i32 %conv, i32* %no_upper_bound, align 4
  %54 = load i32, i32* %no_upper_bound, align 4
  %tobool144 = icmp ne i32 %54, 0
  br i1 %tobool144, label %if.end.149, label %if.then.145

if.then.145:                                      ; preds = %if.then.136
  %55 = load %union.tree_node*, %union.tree_node** %type1137, align 8
  %56 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type146 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %maxval147 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type146, i32 0, i32 13
  %57 = load %union.tree_node*, %union.tree_node** %maxval147, align 8
  call void @real_value_from_int_cst(%struct.realvaluetype* sret %tmp148, %union.tree_node* %55, %union.tree_node* %57)
  %58 = bitcast %struct.realvaluetype* %u to i8*
  %59 = bitcast %struct.realvaluetype* %tmp148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 24, i32 8, i1 false)
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.145, %if.then.136
  call void @earith(%struct.realvaluetype* %l, i32 60, %struct.realvaluetype* %l, %struct.realvaluetype* @dconst1)
  %60 = load i32, i32* %no_upper_bound, align 4
  %tobool150 = icmp ne i32 %60, 0
  br i1 %tobool150, label %if.end.152, label %if.then.151

if.then.151:                                      ; preds = %if.end.149
  call void @earith(%struct.realvaluetype* %u, i32 59, %struct.realvaluetype* %u, %struct.realvaluetype* @dconst1)
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.151, %if.end.149
  %call153 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %x)
  %tobool154 = icmp ne i32 %call153, 0
  br i1 %tobool154, label %if.then.155, label %if.else.156

if.then.155:                                      ; preds = %if.end.152
  store i32 1, i32* %overflow, align 4
  %61 = bitcast %struct.realvaluetype* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* bitcast (%struct.realvaluetype* @dconst0 to i8*), i64 24, i32 8, i1 false)
  br label %if.end.168

if.else.156:                                      ; preds = %if.end.152
  %call157 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %l, %struct.realvaluetype* byval align 8 %x)
  %cmp158 = icmp eq i32 %call157, -1
  br i1 %cmp158, label %land.lhs.true.160, label %if.then.166

land.lhs.true.160:                                ; preds = %if.else.156
  %62 = load i32, i32* %no_upper_bound, align 4
  %tobool161 = icmp ne i32 %62, 0
  br i1 %tobool161, label %if.then.166, label %land.lhs.true.162

land.lhs.true.162:                                ; preds = %land.lhs.true.160
  %call163 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %x, %struct.realvaluetype* byval align 8 %u)
  %cmp164 = icmp eq i32 %call163, -1
  br i1 %cmp164, label %if.end.167, label %if.then.166

if.then.166:                                      ; preds = %land.lhs.true.162, %land.lhs.true.160, %if.else.156
  store i32 1, i32* %overflow, align 4
  br label %if.end.167

if.end.167:                                       ; preds = %if.then.166, %land.lhs.true.162
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.167, %if.then.155
  call void @ereal_to_int(i64* %low170, i64* %high172, %struct.realvaluetype* byval align 8 %x)
  %63 = load i64, i64* %low170, align 8
  %64 = load i64, i64* %high172, align 8
  %call173 = call %union.tree_node* @build_int_2_wide(i64 %63, i64 %64)
  store %union.tree_node* %call173, %union.tree_node** %t.addr, align 8
  %65 = load %union.tree_node*, %union.tree_node** %type, align 8
  %66 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common174 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  store %union.tree_node* %65, %union.tree_node** %type175, align 8
  %67 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common176 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %public_flag177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 2
  %bf.load178 = load i32, i32* %public_flag177, align 8
  %bf.lshr179 = lshr i32 %bf.load178, 19
  %bf.clear180 = and i32 %bf.lshr179, 1
  %68 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %69 = load i32, i32* %overflow, align 4
  %call181 = call i32 @force_fit_type(%union.tree_node* %68, i32 %69)
  %or182 = or i32 %bf.clear180, %call181
  %70 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common183 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %public_flag184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 2
  %bf.load185 = load i32, i32* %public_flag184, align 8
  %bf.value186 = and i32 %or182, 1
  %bf.shl187 = shl i32 %bf.value186, 19
  %bf.clear188 = and i32 %bf.load185, -524289
  %bf.set189 = or i32 %bf.clear188, %bf.shl187
  store i32 %bf.set189, i32* %public_flag184, align 8
  %71 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common190 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %public_flag191 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common190, i32 0, i32 2
  %bf.load192 = load i32, i32* %public_flag191, align 8
  %bf.lshr193 = lshr i32 %bf.load192, 19
  %bf.clear194 = and i32 %bf.lshr193, 1
  %72 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common195 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %static_flag196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 2
  %bf.load197 = load i32, i32* %static_flag196, align 8
  %bf.lshr198 = lshr i32 %bf.load197, 18
  %bf.clear199 = and i32 %bf.lshr198, 1
  %or200 = or i32 %bf.clear194, %bf.clear199
  %73 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common201 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %static_flag202 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common201, i32 0, i32 2
  %bf.load203 = load i32, i32* %static_flag202, align 8
  %bf.value204 = and i32 %or200, 1
  %bf.shl205 = shl i32 %bf.value204, 18
  %bf.clear206 = and i32 %bf.load203, -262145
  %bf.set207 = or i32 %bf.clear206, %bf.shl205
  store i32 %bf.set207, i32* %static_flag202, align 8
  br label %if.end.208

if.end.208:                                       ; preds = %if.end.168, %if.else
  br label %if.end.209

if.end.209:                                       ; preds = %if.end.208, %lor.end
  %74 = load %union.tree_node*, %union.tree_node** %type, align 8
  %75 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common210 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %type211 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common210, i32 0, i32 1
  store %union.tree_node* %74, %union.tree_node** %type211, align 8
  br label %if.end.288

if.else.212:                                      ; preds = %lor.lhs.false.26
  %76 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common213 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %code214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common213, i32 0, i32 2
  %bf.load215 = load i32, i32* %code214, align 8
  %bf.clear216 = and i32 %bf.load215, 255
  %cmp217 = icmp eq i32 %bf.clear216, 7
  br i1 %cmp217, label %if.then.219, label %if.end.287

if.then.219:                                      ; preds = %if.else.212
  %77 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common220 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %code221 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common220, i32 0, i32 2
  %bf.load222 = load i32, i32* %code221, align 8
  %bf.clear223 = and i32 %bf.load222, 255
  %cmp224 = icmp eq i32 %bf.clear223, 25
  br i1 %cmp224, label %if.then.226, label %if.end.228

if.then.226:                                      ; preds = %if.then.219
  %78 = load %union.tree_node*, %union.tree_node** %type, align 8
  %79 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call227 = call %union.tree_node* @build_real_from_int_cst(%union.tree_node* %78, %union.tree_node* %79)
  store %union.tree_node* %call227, %union.tree_node** %retval
  br label %return

if.end.228:                                       ; preds = %if.then.219
  %80 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common229 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %code230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common229, i32 0, i32 2
  %bf.load231 = load i32, i32* %code230, align 8
  %bf.clear232 = and i32 %bf.load231, 255
  %cmp233 = icmp eq i32 %bf.clear232, 26
  br i1 %cmp233, label %if.then.235, label %if.end.286

if.then.235:                                      ; preds = %if.end.228
  %81 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %real_cst237 = bitcast %union.tree_node* %81 to %struct.tree_real_cst*
  %real_cst238 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst237, i32 0, i32 2
  %call239 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %real_cst238)
  %tobool240 = icmp ne i32 %call239, 0
  br i1 %tobool240, label %if.then.241, label %if.end.244

if.then.241:                                      ; preds = %if.then.235
  %82 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %82, %union.tree_node** %t.addr, align 8
  %83 = load %union.tree_node*, %union.tree_node** %type, align 8
  %84 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common242 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %type243 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 1
  store %union.tree_node* %83, %union.tree_node** %type243, align 8
  %85 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %85, %union.tree_node** %retval
  br label %return

if.end.244:                                       ; preds = %if.then.235
  %86 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %arg1245 = getelementptr inbounds %struct.fc_args, %struct.fc_args* %args, i32 0, i32 0
  store %union.tree_node* %86, %union.tree_node** %arg1245, align 8
  %87 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type246 = getelementptr inbounds %struct.fc_args, %struct.fc_args* %args, i32 0, i32 1
  store %union.tree_node* %87, %union.tree_node** %type246, align 8
  %88 = bitcast %struct.fc_args* %args to i8*
  %call247 = call i32 @do_float_handler(void (i8*)* @fold_convert_1, i8* %88)
  %tobool248 = icmp ne i32 %call247, 0
  br i1 %tobool248, label %if.then.249, label %if.else.251

if.then.249:                                      ; preds = %if.end.244
  %t250 = getelementptr inbounds %struct.fc_args, %struct.fc_args* %args, i32 0, i32 2
  %89 = load %union.tree_node*, %union.tree_node** %t250, align 8
  store %union.tree_node* %89, %union.tree_node** %t.addr, align 8
  br label %if.end.253

if.else.251:                                      ; preds = %if.end.244
  store i32 1, i32* %overflow, align 4
  %90 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call252 = call %union.tree_node* @copy_node(%union.tree_node* %90)
  store %union.tree_node* %call252, %union.tree_node** %t.addr, align 8
  br label %if.end.253

if.end.253:                                       ; preds = %if.else.251, %if.then.249
  %91 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common254 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %public_flag255 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common254, i32 0, i32 2
  %bf.load256 = load i32, i32* %public_flag255, align 8
  %bf.lshr257 = lshr i32 %bf.load256, 19
  %bf.clear258 = and i32 %bf.lshr257, 1
  %92 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %93 = load i32, i32* %overflow, align 4
  %call259 = call i32 @force_fit_type(%union.tree_node* %92, i32 %93)
  %or260 = or i32 %bf.clear258, %call259
  %94 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common261 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %public_flag262 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common261, i32 0, i32 2
  %bf.load263 = load i32, i32* %public_flag262, align 8
  %bf.value264 = and i32 %or260, 1
  %bf.shl265 = shl i32 %bf.value264, 19
  %bf.clear266 = and i32 %bf.load263, -524289
  %bf.set267 = or i32 %bf.clear266, %bf.shl265
  store i32 %bf.set267, i32* %public_flag262, align 8
  %95 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common268 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %public_flag269 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common268, i32 0, i32 2
  %bf.load270 = load i32, i32* %public_flag269, align 8
  %bf.lshr271 = lshr i32 %bf.load270, 19
  %bf.clear272 = and i32 %bf.lshr271, 1
  %96 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common273 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %static_flag274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 2
  %bf.load275 = load i32, i32* %static_flag274, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 18
  %bf.clear277 = and i32 %bf.lshr276, 1
  %or278 = or i32 %bf.clear272, %bf.clear277
  %97 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common279 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %static_flag280 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common279, i32 0, i32 2
  %bf.load281 = load i32, i32* %static_flag280, align 8
  %bf.value282 = and i32 %or278, 1
  %bf.shl283 = shl i32 %bf.value282, 18
  %bf.clear284 = and i32 %bf.load281, -262145
  %bf.set285 = or i32 %bf.clear284, %bf.shl283
  store i32 %bf.set285, i32* %static_flag280, align 8
  %98 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %98, %union.tree_node** %retval
  br label %return

if.end.286:                                       ; preds = %if.end.228
  br label %if.end.287

if.end.287:                                       ; preds = %if.end.286, %if.else.212
  br label %if.end.288

if.end.288:                                       ; preds = %if.end.287, %if.end.209
  %99 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common289 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common289, i32 0, i32 2
  %bf.load290 = load i32, i32* %constant_flag, align 8
  %bf.clear291 = and i32 %bf.load290, -513
  %bf.set292 = or i32 %bf.clear291, 512
  store i32 %bf.set292, i32* %constant_flag, align 8
  %100 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %100, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.288, %if.end.253, %if.then.241, %if.then.226, %if.then.59, %if.then.42
  %101 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %101
}

declare %union.tree_node* @purpose_member(%union.tree_node*, %union.tree_node*) #3

declare %union.tree_node* @build_real(%union.tree_node*, %struct.realvaluetype* byval align 8) #3

declare void @ereal_negate(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8) #3

declare i32 @target_negative(%struct.realvaluetype* byval align 8) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @negate_expr(%union.tree_node* %t) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %2, %union.tree_node** %type, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp3 = icmp eq i32 %bf.clear, 115
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 114
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common10 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load12 = load i32, i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  %cmp14 = icmp eq i32 %bf.clear13, 116
  br i1 %cmp14, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.9, %lor.lhs.false, %while.cond
  %6 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp15 = icmp ne %union.tree_node* %7, %8
  br i1 %cmp15, label %land.lhs.true.16, label %land.end

land.lhs.true.16:                                 ; preds = %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common17 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type18, align 8
  %type19 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i32 0, i32 6
  %bf.load20 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load20, 9
  %bf.clear21 = and i32 %bf.lshr, 127
  %11 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp22 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp22, i32 0, i32 2
  %arrayidx24 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands23, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8
  %common25 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %type27 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode28 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i32 0, i32 6
  %bf.load29 = load i32, i32* %mode28, align 4
  %bf.lshr30 = lshr i32 %bf.load29, 9
  %bf.clear31 = and i32 %bf.lshr30, 127
  %cmp32 = icmp eq i32 %bf.clear21, %bf.clear31
  br i1 %cmp32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.16
  %14 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common33 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type34, align 8
  %common35 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 2
  %bf.load36 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 13
  %bf.clear38 = and i32 %bf.lshr37, 1
  %16 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp39 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp39, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands40, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8
  %common42 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type43, align 8
  %common44 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %unsigned_flag45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %unsigned_flag45, align 8
  %bf.lshr47 = lshr i32 %bf.load46, 13
  %bf.clear48 = and i32 %bf.lshr47, 1
  %cmp49 = icmp eq i32 %bf.clear38, %bf.clear48
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.16, %land.lhs.true, %lor.lhs.false.9
  %19 = phi i1 [ false, %land.lhs.true.16 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false.9 ], [ %cmp49, %land.rhs ]
  br i1 %19, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %20 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp50 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp50, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands51, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8
  store %union.tree_node* %21, %union.tree_node** %t.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %22 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common53 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common53, i32 0, i32 2
  %bf.load55 = load i32, i32* %code54, align 8
  %bf.clear56 = and i32 %bf.load55, 255
  switch i32 %bf.clear56, label %sw.default [
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 77, label %sw.bb.73
    i32 60, label %sw.bb.78
  ]

sw.bb:                                            ; preds = %while.end, %while.end
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common57 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %unsigned_flag58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 2
  %bf.load59 = load i32, i32* %unsigned_flag58, align 8
  %bf.lshr60 = lshr i32 %bf.load59, 13
  %bf.clear61 = and i32 %bf.lshr60, 1
  %tobool = icmp ne i32 %bf.clear61, 0
  br i1 %tobool, label %if.end.72, label %land.lhs.true.62

land.lhs.true.62:                                 ; preds = %sw.bb
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8
  %25 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call = call %union.tree_node* @build1(i32 77, %union.tree_node* %24, %union.tree_node* %25)
  %call63 = call %union.tree_node* @fold(%union.tree_node* %call)
  store %union.tree_node* %call63, %union.tree_node** %tem, align 8
  %cmp64 = icmp ne %union.tree_node* null, %call63
  br i1 %cmp64, label %land.lhs.true.65, label %if.end.72

land.lhs.true.65:                                 ; preds = %land.lhs.true.62
  %26 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common66 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load67 = load i32, i32* %public_flag, align 8
  %bf.lshr68 = lshr i32 %bf.load67, 19
  %bf.clear69 = and i32 %bf.lshr68, 1
  %tobool70 = icmp ne i32 %bf.clear69, 0
  br i1 %tobool70, label %if.end.72, label %if.then.71

if.then.71:                                       ; preds = %land.lhs.true.65
  %27 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %27, %union.tree_node** %retval
  br label %return

if.end.72:                                        ; preds = %land.lhs.true.65, %land.lhs.true.62, %sw.bb
  br label %sw.epilog

sw.bb.73:                                         ; preds = %while.end
  %28 = load %union.tree_node*, %union.tree_node** %type, align 8
  %29 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp74 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands75 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp74, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands75, i32 0, i64 0
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx76, align 8
  %call77 = call %union.tree_node* @convert(%union.tree_node* %28, %union.tree_node* %30)
  store %union.tree_node* %call77, %union.tree_node** %retval
  br label %return

sw.bb.78:                                         ; preds = %while.end
  %31 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common79 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 2
  %bf.load81 = load i32, i32* %code80, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  %cmp83 = icmp eq i32 %bf.clear82, 7
  br i1 %cmp83, label %lor.lhs.false.98, label %lor.lhs.false.84

lor.lhs.false.84:                                 ; preds = %sw.bb.78
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common85 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 2
  %bf.load87 = load i32, i32* %code86, align 8
  %bf.clear88 = and i32 %bf.load87, 255
  %cmp89 = icmp eq i32 %bf.clear88, 8
  br i1 %cmp89, label %land.lhs.true.90, label %if.then.100

land.lhs.true.90:                                 ; preds = %lor.lhs.false.84
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common91 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type92, align 8
  %common93 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 7
  br i1 %cmp97, label %lor.lhs.false.98, label %if.then.100

lor.lhs.false.98:                                 ; preds = %land.lhs.true.90, %sw.bb.78
  %35 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool99 = icmp ne i32 %35, 0
  br i1 %tobool99, label %if.then.100, label %if.end.112

if.then.100:                                      ; preds = %lor.lhs.false.98, %land.lhs.true.90, %lor.lhs.false.84
  %36 = load %union.tree_node*, %union.tree_node** %type, align 8
  %37 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common101 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type102, align 8
  %39 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp103 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands104 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp103, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands104, i32 0, i64 1
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx105, align 8
  %41 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp106 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands107 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp106, i32 0, i32 2
  %arrayidx108 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands107, i32 0, i64 0
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx108, align 8
  %call109 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %38, %union.tree_node* %40, %union.tree_node* %42)
  %call110 = call %union.tree_node* @fold(%union.tree_node* %call109)
  %call111 = call %union.tree_node* @convert(%union.tree_node* %36, %union.tree_node* %call110)
  store %union.tree_node* %call111, %union.tree_node** %retval
  br label %return

if.end.112:                                       ; preds = %lor.lhs.false.98
  br label %sw.epilog

sw.default:                                       ; preds = %while.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.112, %if.end.72
  %43 = load %union.tree_node*, %union.tree_node** %type, align 8
  %44 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common113 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %type114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %type114, align 8
  %46 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call115 = call %union.tree_node* @build1(i32 77, %union.tree_node* %45, %union.tree_node* %46)
  %call116 = call %union.tree_node* @fold(%union.tree_node* %call115)
  %call117 = call %union.tree_node* @convert(%union.tree_node* %43, %union.tree_node* %call116)
  store %union.tree_node* %call117, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.100, %sw.bb.73, %if.then.71, %if.then
  %47 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %47
}

declare %union.tree_node* @build_complex(%union.tree_node*, %union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @const_binop(i32 %code, %union.tree_node* %arg1, %union.tree_node* %arg2, i32 %notrunc) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %arg1.addr = alloca %union.tree_node*, align 8
  %arg2.addr = alloca %union.tree_node*, align 8
  %notrunc.addr = alloca i32, align 4
  %d1 = alloca %struct.realvaluetype, align 8
  %d2 = alloca %struct.realvaluetype, align 8
  %overflow = alloca i32, align 4
  %t = alloca %union.tree_node*, align 8
  %args = alloca %struct.cb_args, align 8
  %type159 = alloca %union.tree_node*, align 8
  %r1 = alloca %union.tree_node*, align 8
  %i1 = alloca %union.tree_node*, align 8
  %r2 = alloca %union.tree_node*, align 8
  %i2 = alloca %union.tree_node*, align 8
  %t167 = alloca %union.tree_node*, align 8
  %magsquared = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %arg2, %union.tree_node** %arg2.addr, align 8
  store i32 %notrunc, i32* %notrunc.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common2 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 114
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common8 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 116
  br i1 %cmp12, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.7, %lor.lhs.false, %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp = bitcast %union.tree_node* %3 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp13 = icmp ne %union.tree_node* %4, %5
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common14 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type15 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 6
  %bf.load16 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load16, 9
  %bf.clear17 = and i32 %bf.lshr, 127
  %8 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp18 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands19 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp18, i32 0, i32 2
  %arrayidx20 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands19, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx20, align 8
  %common21 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %type23 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 6
  %bf.load25 = load i32, i32* %mode24, align 4
  %bf.lshr26 = lshr i32 %bf.load25, 9
  %bf.clear27 = and i32 %bf.lshr26, 127
  %cmp28 = icmp eq i32 %bf.clear17, %bf.clear27
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.7
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.7 ], [ %cmp28, %land.rhs ]
  br i1 %11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %12 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp29 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 0
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  store %union.tree_node* %13, %union.tree_node** %arg1.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %while.cond.32

while.cond.32:                                    ; preds = %while.body.75, %while.end
  %14 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common33 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 115
  br i1 %cmp37, label %land.lhs.true.50, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %while.cond.32
  %15 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common39 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 114
  br i1 %cmp43, label %land.lhs.true.50, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %lor.lhs.false.38
  %16 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common45 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 116
  br i1 %cmp49, label %land.lhs.true.50, label %land.end.74

land.lhs.true.50:                                 ; preds = %lor.lhs.false.44, %lor.lhs.false.38, %while.cond.32
  %17 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %exp51 = bitcast %union.tree_node* %17 to %struct.tree_exp*
  %operands52 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp51, i32 0, i32 2
  %arrayidx53 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands52, i32 0, i64 0
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp54 = icmp ne %union.tree_node* %18, %19
  br i1 %cmp54, label %land.rhs.55, label %land.end.74

land.rhs.55:                                      ; preds = %land.lhs.true.50
  %20 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common56 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type57, align 8
  %type58 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode59 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type58, i32 0, i32 6
  %bf.load60 = load i32, i32* %mode59, align 4
  %bf.lshr61 = lshr i32 %bf.load60, 9
  %bf.clear62 = and i32 %bf.lshr61, 127
  %22 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %exp63 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands64 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp63, i32 0, i32 2
  %arrayidx65 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands64, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx65, align 8
  %common66 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type67, align 8
  %type68 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %mode69 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type68, i32 0, i32 6
  %bf.load70 = load i32, i32* %mode69, align 4
  %bf.lshr71 = lshr i32 %bf.load70, 9
  %bf.clear72 = and i32 %bf.lshr71, 127
  %cmp73 = icmp eq i32 %bf.clear62, %bf.clear72
  br label %land.end.74

land.end.74:                                      ; preds = %land.rhs.55, %land.lhs.true.50, %lor.lhs.false.44
  %25 = phi i1 [ false, %land.lhs.true.50 ], [ false, %lor.lhs.false.44 ], [ %cmp73, %land.rhs.55 ]
  br i1 %25, label %while.body.75, label %while.end.79

while.body.75:                                    ; preds = %land.end.74
  %26 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %exp76 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands77 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp76, i32 0, i32 2
  %arrayidx78 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands77, i32 0, i64 0
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx78, align 8
  store %union.tree_node* %27, %union.tree_node** %arg2.addr, align 8
  br label %while.cond.32

while.end.79:                                     ; preds = %land.end.74
  %28 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common80 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 2
  %bf.load82 = load i32, i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %cmp84 = icmp eq i32 %bf.clear83, 25
  br i1 %cmp84, label %if.then, label %if.end

if.then:                                          ; preds = %while.end.79
  %29 = load i32, i32* %code.addr, align 4
  %30 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %31 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %32 = load i32, i32* %notrunc.addr, align 4
  %call = call %union.tree_node* @int_const_binop(i32 %29, %union.tree_node* %30, %union.tree_node* %31, i32 %32)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %while.end.79
  %33 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common85 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 2
  %bf.load87 = load i32, i32* %code86, align 8
  %bf.clear88 = and i32 %bf.load87, 255
  %cmp89 = icmp eq i32 %bf.clear88, 26
  br i1 %cmp89, label %if.then.90, label %if.end.152

if.then.90:                                       ; preds = %if.end
  store i32 0, i32* %overflow, align 4
  %34 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %real_cst = bitcast %union.tree_node* %34 to %struct.tree_real_cst*
  %real_cst91 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst, i32 0, i32 2
  %35 = bitcast %struct.realvaluetype* %d1 to i8*
  %36 = bitcast %struct.realvaluetype* %real_cst91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 24, i32 8, i1 false)
  %37 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %real_cst92 = bitcast %union.tree_node* %37 to %struct.tree_real_cst*
  %real_cst93 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst92, i32 0, i32 2
  %38 = bitcast %struct.realvaluetype* %d2 to i8*
  %39 = bitcast %struct.realvaluetype* %real_cst93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 24, i32 8, i1 false)
  %call94 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d1)
  %tobool = icmp ne i32 %call94, 0
  br i1 %tobool, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %if.then.90
  %40 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %40, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %if.then.90
  %call96 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d2)
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.else
  %41 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  store %union.tree_node* %41, %union.tree_node** %retval
  br label %return

if.end.99:                                        ; preds = %if.else
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99
  %42 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common101 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type102, align 8
  %type103 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %args, i32 0, i32 1
  store %union.tree_node* %43, %union.tree_node** %type103, align 8
  %d1104 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %args, i32 0, i32 2
  %44 = bitcast %struct.realvaluetype* %d1104 to i8*
  %45 = bitcast %struct.realvaluetype* %d1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 24, i32 8, i1 false)
  %d2105 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %args, i32 0, i32 3
  %46 = bitcast %struct.realvaluetype* %d2105 to i8*
  %47 = bitcast %struct.realvaluetype* %d2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 24, i32 8, i1 false)
  %48 = load i32, i32* %code.addr, align 4
  %code106 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %args, i32 0, i32 0
  store i32 %48, i32* %code106, align 4
  %49 = bitcast %struct.cb_args* %args to i8*
  %call107 = call i32 @do_float_handler(void (i8*)* @const_binop_1, i8* %49)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.then.109, label %if.else.111

if.then.109:                                      ; preds = %if.end.100
  %t110 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %args, i32 0, i32 4
  %50 = load %union.tree_node*, %union.tree_node** %t110, align 8
  store %union.tree_node* %50, %union.tree_node** %t, align 8
  br label %if.end.113

if.else.111:                                      ; preds = %if.end.100
  %51 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call112 = call %union.tree_node* @copy_node(%union.tree_node* %51)
  store %union.tree_node* %call112, %union.tree_node** %t, align 8
  store i32 1, i32* %overflow, align 4
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.111, %if.then.109
  %52 = load %union.tree_node*, %union.tree_node** %t, align 8
  %53 = load i32, i32* %overflow, align 4
  %call114 = call i32 @force_fit_type(%union.tree_node* %52, i32 %53)
  %54 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common115 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common115, i32 0, i32 2
  %bf.load116 = load i32, i32* %public_flag, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 19
  %bf.clear118 = and i32 %bf.lshr117, 1
  %or = or i32 %call114, %bf.clear118
  %55 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common119 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %public_flag120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 2
  %bf.load121 = load i32, i32* %public_flag120, align 8
  %bf.lshr122 = lshr i32 %bf.load121, 19
  %bf.clear123 = and i32 %bf.lshr122, 1
  %or124 = or i32 %or, %bf.clear123
  %56 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common125 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %public_flag126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common125, i32 0, i32 2
  %bf.load127 = load i32, i32* %public_flag126, align 8
  %bf.value = and i32 %or124, 1
  %bf.shl = shl i32 %bf.value, 19
  %bf.clear128 = and i32 %bf.load127, -524289
  %bf.set = or i32 %bf.clear128, %bf.shl
  store i32 %bf.set, i32* %public_flag126, align 8
  %57 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common129 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %public_flag130 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common129, i32 0, i32 2
  %bf.load131 = load i32, i32* %public_flag130, align 8
  %bf.lshr132 = lshr i32 %bf.load131, 19
  %bf.clear133 = and i32 %bf.lshr132, 1
  %58 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common134 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common134, i32 0, i32 2
  %bf.load135 = load i32, i32* %static_flag, align 8
  %bf.lshr136 = lshr i32 %bf.load135, 18
  %bf.clear137 = and i32 %bf.lshr136, 1
  %or138 = or i32 %bf.clear133, %bf.clear137
  %59 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %common139 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %static_flag140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common139, i32 0, i32 2
  %bf.load141 = load i32, i32* %static_flag140, align 8
  %bf.lshr142 = lshr i32 %bf.load141, 18
  %bf.clear143 = and i32 %bf.lshr142, 1
  %or144 = or i32 %or138, %bf.clear143
  %60 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common145 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %static_flag146 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 2
  %bf.load147 = load i32, i32* %static_flag146, align 8
  %bf.value148 = and i32 %or144, 1
  %bf.shl149 = shl i32 %bf.value148, 18
  %bf.clear150 = and i32 %bf.load147, -262145
  %bf.set151 = or i32 %bf.clear150, %bf.shl149
  store i32 %bf.set151, i32* %static_flag146, align 8
  %61 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %61, %union.tree_node** %retval
  br label %return

if.end.152:                                       ; preds = %if.end
  %62 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common153 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 2
  %bf.load155 = load i32, i32* %code154, align 8
  %bf.clear156 = and i32 %bf.load155, 255
  %cmp157 = icmp eq i32 %bf.clear156, 27
  br i1 %cmp157, label %if.then.158, label %if.end.259

if.then.158:                                      ; preds = %if.end.152
  %63 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common160 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type161 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common160, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type161, align 8
  store %union.tree_node* %64, %union.tree_node** %type159, align 8
  %65 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %complex = bitcast %union.tree_node* %65 to %struct.tree_complex*
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex, i32 0, i32 2
  %66 = load %union.tree_node*, %union.tree_node** %real, align 8
  store %union.tree_node* %66, %union.tree_node** %r1, align 8
  %67 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %complex162 = bitcast %union.tree_node* %67 to %struct.tree_complex*
  %imag = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex162, i32 0, i32 3
  %68 = load %union.tree_node*, %union.tree_node** %imag, align 8
  store %union.tree_node* %68, %union.tree_node** %i1, align 8
  %69 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %complex163 = bitcast %union.tree_node* %69 to %struct.tree_complex*
  %real164 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex163, i32 0, i32 2
  %70 = load %union.tree_node*, %union.tree_node** %real164, align 8
  store %union.tree_node* %70, %union.tree_node** %r2, align 8
  %71 = load %union.tree_node*, %union.tree_node** %arg2.addr, align 8
  %complex165 = bitcast %union.tree_node* %71 to %struct.tree_complex*
  %imag166 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex165, i32 0, i32 3
  %72 = load %union.tree_node*, %union.tree_node** %imag166, align 8
  store %union.tree_node* %72, %union.tree_node** %i2, align 8
  %73 = load i32, i32* %code.addr, align 4
  switch i32 %73, label %sw.default [
    i32 59, label %sw.bb
    i32 60, label %sw.bb.171
    i32 61, label %sw.bb.175
    i32 70, label %sw.bb.183
  ]

sw.bb:                                            ; preds = %if.then.158
  %74 = load %union.tree_node*, %union.tree_node** %type159, align 8
  %75 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %76 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %77 = load i32, i32* %notrunc.addr, align 4
  %call168 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %75, %union.tree_node* %76, i32 %77)
  %78 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %79 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %80 = load i32, i32* %notrunc.addr, align 4
  %call169 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %78, %union.tree_node* %79, i32 %80)
  %call170 = call %union.tree_node* @build_complex(%union.tree_node* %74, %union.tree_node* %call168, %union.tree_node* %call169)
  store %union.tree_node* %call170, %union.tree_node** %t167, align 8
  br label %sw.epilog

sw.bb.171:                                        ; preds = %if.then.158
  %81 = load %union.tree_node*, %union.tree_node** %type159, align 8
  %82 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %83 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %84 = load i32, i32* %notrunc.addr, align 4
  %call172 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %82, %union.tree_node* %83, i32 %84)
  %85 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %86 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %87 = load i32, i32* %notrunc.addr, align 4
  %call173 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %85, %union.tree_node* %86, i32 %87)
  %call174 = call %union.tree_node* @build_complex(%union.tree_node* %81, %union.tree_node* %call172, %union.tree_node* %call173)
  store %union.tree_node* %call174, %union.tree_node** %t167, align 8
  br label %sw.epilog

sw.bb.175:                                        ; preds = %if.then.158
  %88 = load %union.tree_node*, %union.tree_node** %type159, align 8
  %89 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %90 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %91 = load i32, i32* %notrunc.addr, align 4
  %call176 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %89, %union.tree_node* %90, i32 %91)
  %92 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %93 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %94 = load i32, i32* %notrunc.addr, align 4
  %call177 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %92, %union.tree_node* %93, i32 %94)
  %95 = load i32, i32* %notrunc.addr, align 4
  %call178 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %call176, %union.tree_node* %call177, i32 %95)
  %96 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %97 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %98 = load i32, i32* %notrunc.addr, align 4
  %call179 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %96, %union.tree_node* %97, i32 %98)
  %99 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %100 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %101 = load i32, i32* %notrunc.addr, align 4
  %call180 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %99, %union.tree_node* %100, i32 %101)
  %102 = load i32, i32* %notrunc.addr, align 4
  %call181 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %call179, %union.tree_node* %call180, i32 %102)
  %call182 = call %union.tree_node* @build_complex(%union.tree_node* %88, %union.tree_node* %call178, %union.tree_node* %call181)
  store %union.tree_node* %call182, %union.tree_node** %t167, align 8
  br label %sw.epilog

sw.bb.183:                                        ; preds = %if.then.158
  %103 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %104 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %105 = load i32, i32* %notrunc.addr, align 4
  %call184 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %103, %union.tree_node* %104, i32 %105)
  %106 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %107 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %108 = load i32, i32* %notrunc.addr, align 4
  %call185 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %106, %union.tree_node* %107, i32 %108)
  %109 = load i32, i32* %notrunc.addr, align 4
  %call186 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %call184, %union.tree_node* %call185, i32 %109)
  store %union.tree_node* %call186, %union.tree_node** %magsquared, align 8
  %110 = load %union.tree_node*, %union.tree_node** %type159, align 8
  %111 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common187 = bitcast %union.tree_node* %111 to %struct.tree_common*
  %type188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common187, i32 0, i32 1
  %112 = load %union.tree_node*, %union.tree_node** %type188, align 8
  %common189 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %code190 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common189, i32 0, i32 2
  %bf.load191 = load i32, i32* %code190, align 8
  %bf.clear192 = and i32 %bf.load191, 255
  %cmp193 = icmp eq i32 %bf.clear192, 6
  br i1 %cmp193, label %lor.end, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %sw.bb.183
  %113 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common195 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %type196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 1
  %114 = load %union.tree_node*, %union.tree_node** %type196, align 8
  %common197 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %code198 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common197, i32 0, i32 2
  %bf.load199 = load i32, i32* %code198, align 8
  %bf.clear200 = and i32 %bf.load199, 255
  %cmp201 = icmp eq i32 %bf.clear200, 10
  br i1 %cmp201, label %lor.end, label %lor.lhs.false.202

lor.lhs.false.202:                                ; preds = %lor.lhs.false.194
  %115 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common203 = bitcast %union.tree_node* %115 to %struct.tree_common*
  %type204 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common203, i32 0, i32 1
  %116 = load %union.tree_node*, %union.tree_node** %type204, align 8
  %common205 = bitcast %union.tree_node* %116 to %struct.tree_common*
  %code206 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common205, i32 0, i32 2
  %bf.load207 = load i32, i32* %code206, align 8
  %bf.clear208 = and i32 %bf.load207, 255
  %cmp209 = icmp eq i32 %bf.clear208, 11
  br i1 %cmp209, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.202
  %117 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common210 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %type211 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common210, i32 0, i32 1
  %118 = load %union.tree_node*, %union.tree_node** %type211, align 8
  %common212 = bitcast %union.tree_node* %118 to %struct.tree_common*
  %code213 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common212, i32 0, i32 2
  %bf.load214 = load i32, i32* %code213, align 8
  %bf.clear215 = and i32 %bf.load214, 255
  %cmp216 = icmp eq i32 %bf.clear215, 12
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.202, %lor.lhs.false.194, %sw.bb.183
  %119 = phi i1 [ true, %lor.lhs.false.202 ], [ true, %lor.lhs.false.194 ], [ true, %sw.bb.183 ], [ %cmp216, %lor.rhs ]
  %cond = select i1 %119, i32 62, i32 70
  %120 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %121 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %122 = load i32, i32* %notrunc.addr, align 4
  %call217 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %120, %union.tree_node* %121, i32 %122)
  %123 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %124 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %125 = load i32, i32* %notrunc.addr, align 4
  %call218 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %123, %union.tree_node* %124, i32 %125)
  %126 = load i32, i32* %notrunc.addr, align 4
  %call219 = call %union.tree_node* @const_binop(i32 59, %union.tree_node* %call217, %union.tree_node* %call218, i32 %126)
  %127 = load %union.tree_node*, %union.tree_node** %magsquared, align 8
  %128 = load i32, i32* %notrunc.addr, align 4
  %call220 = call %union.tree_node* @const_binop(i32 %cond, %union.tree_node* %call219, %union.tree_node* %127, i32 %128)
  %129 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common221 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %type222 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common221, i32 0, i32 1
  %130 = load %union.tree_node*, %union.tree_node** %type222, align 8
  %common223 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %code224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common223, i32 0, i32 2
  %bf.load225 = load i32, i32* %code224, align 8
  %bf.clear226 = and i32 %bf.load225, 255
  %cmp227 = icmp eq i32 %bf.clear226, 6
  br i1 %cmp227, label %lor.end.252, label %lor.lhs.false.228

lor.lhs.false.228:                                ; preds = %lor.end
  %131 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common229 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %type230 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common229, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %type230, align 8
  %common231 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %code232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common231, i32 0, i32 2
  %bf.load233 = load i32, i32* %code232, align 8
  %bf.clear234 = and i32 %bf.load233, 255
  %cmp235 = icmp eq i32 %bf.clear234, 10
  br i1 %cmp235, label %lor.end.252, label %lor.lhs.false.236

lor.lhs.false.236:                                ; preds = %lor.lhs.false.228
  %133 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common237 = bitcast %union.tree_node* %133 to %struct.tree_common*
  %type238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common237, i32 0, i32 1
  %134 = load %union.tree_node*, %union.tree_node** %type238, align 8
  %common239 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %code240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load241 = load i32, i32* %code240, align 8
  %bf.clear242 = and i32 %bf.load241, 255
  %cmp243 = icmp eq i32 %bf.clear242, 11
  br i1 %cmp243, label %lor.end.252, label %lor.rhs.244

lor.rhs.244:                                      ; preds = %lor.lhs.false.236
  %135 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %common245 = bitcast %union.tree_node* %135 to %struct.tree_common*
  %type246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common245, i32 0, i32 1
  %136 = load %union.tree_node*, %union.tree_node** %type246, align 8
  %common247 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %code248 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common247, i32 0, i32 2
  %bf.load249 = load i32, i32* %code248, align 8
  %bf.clear250 = and i32 %bf.load249, 255
  %cmp251 = icmp eq i32 %bf.clear250, 12
  br label %lor.end.252

lor.end.252:                                      ; preds = %lor.rhs.244, %lor.lhs.false.236, %lor.lhs.false.228, %lor.end
  %137 = phi i1 [ true, %lor.lhs.false.236 ], [ true, %lor.lhs.false.228 ], [ true, %lor.end ], [ %cmp251, %lor.rhs.244 ]
  %cond253 = select i1 %137, i32 62, i32 70
  %138 = load %union.tree_node*, %union.tree_node** %i1, align 8
  %139 = load %union.tree_node*, %union.tree_node** %r2, align 8
  %140 = load i32, i32* %notrunc.addr, align 4
  %call254 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %138, %union.tree_node* %139, i32 %140)
  %141 = load %union.tree_node*, %union.tree_node** %r1, align 8
  %142 = load %union.tree_node*, %union.tree_node** %i2, align 8
  %143 = load i32, i32* %notrunc.addr, align 4
  %call255 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %141, %union.tree_node* %142, i32 %143)
  %144 = load i32, i32* %notrunc.addr, align 4
  %call256 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %call254, %union.tree_node* %call255, i32 %144)
  %145 = load %union.tree_node*, %union.tree_node** %magsquared, align 8
  %146 = load i32, i32* %notrunc.addr, align 4
  %call257 = call %union.tree_node* @const_binop(i32 %cond253, %union.tree_node* %call256, %union.tree_node* %145, i32 %146)
  %call258 = call %union.tree_node* @build_complex(%union.tree_node* %110, %union.tree_node* %call220, %union.tree_node* %call257)
  store %union.tree_node* %call258, %union.tree_node** %t167, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.158
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 1908, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.const_binop, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %lor.end.252, %sw.bb.175, %sw.bb.171, %sw.bb
  %147 = load %union.tree_node*, %union.tree_node** %t167, align 8
  store %union.tree_node* %147, %union.tree_node** %retval
  br label %return

if.end.259:                                       ; preds = %if.end.152
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.259, %sw.epilog, %if.end.113, %if.then.98, %if.then.95, %if.then
  %148 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %148
}

declare i32 @exact_log2_wide(i64) #3

declare i32 @real_zerop(%union.tree_node*) #3

declare i32 @ereal_cmp(%struct.realvaluetype* byval align 8, %struct.realvaluetype* byval align 8) #3

declare i32 @ereal_isneg(%struct.realvaluetype* byval align 8) #3

declare i32 @compare_tree_int(%union.tree_node*, i64) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @split_tree(%union.tree_node* %in, i32 %code, %union.tree_node** %conp, %union.tree_node** %litp, %union.tree_node** %minus_litp, i32 %negate_p) #0 {
entry:
  %in.addr = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %conp.addr = alloca %union.tree_node**, align 8
  %litp.addr = alloca %union.tree_node**, align 8
  %minus_litp.addr = alloca %union.tree_node**, align 8
  %negate_p.addr = alloca i32, align 4
  %var = alloca %union.tree_node*, align 8
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  %neg1_p = alloca i32, align 4
  %neg_litp_p = alloca i32, align 4
  %neg_conp_p = alloca i32, align 4
  %neg_var_p = alloca i32, align 4
  store %union.tree_node* %in, %union.tree_node** %in.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node** %conp, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node** %litp, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node** %minus_litp, %union.tree_node*** %minus_litp.addr, align 8
  store i32 %negate_p, i32* %negate_p.addr, align 4
  store %union.tree_node* null, %union.tree_node** %var, align 8
  %0 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %0, align 8
  %1 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %1, align 8
  %2 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %2, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %4 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 114
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %5 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common8 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 116
  br i1 %cmp12, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.7, %lor.lhs.false, %while.cond
  %6 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp13 = icmp ne %union.tree_node* %7, %8
  br i1 %cmp13, label %land.lhs.true.14, label %land.end

land.lhs.true.14:                                 ; preds = %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common15 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type16 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i32 0, i32 6
  %bf.load17 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load17, 9
  %bf.clear18 = and i32 %bf.lshr, 127
  %11 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp19 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands20 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp19, i32 0, i32 2
  %arrayidx21 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands20, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx21, align 8
  %common22 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type23, align 8
  %type24 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type24, i32 0, i32 6
  %bf.load26 = load i32, i32* %mode25, align 4
  %bf.lshr27 = lshr i32 %bf.load26, 9
  %bf.clear28 = and i32 %bf.lshr27, 127
  %cmp29 = icmp eq i32 %bf.clear18, %bf.clear28
  br i1 %cmp29, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.14
  %14 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common30 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %common32 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 2
  %bf.load33 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 13
  %bf.clear35 = and i32 %bf.lshr34, 1
  %16 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp36 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands37 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands37, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8
  %common39 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type40, align 8
  %common41 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %unsigned_flag42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 2
  %bf.load43 = load i32, i32* %unsigned_flag42, align 8
  %bf.lshr44 = lshr i32 %bf.load43, 13
  %bf.clear45 = and i32 %bf.lshr44, 1
  %cmp46 = icmp eq i32 %bf.clear35, %bf.clear45
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.14, %land.lhs.true, %lor.lhs.false.7
  %19 = phi i1 [ false, %land.lhs.true.14 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false.7 ], [ %cmp46, %land.rhs ]
  br i1 %19, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %20 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp47 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands48 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp47, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands48, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx49, align 8
  store %union.tree_node* %21, %union.tree_node** %in.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %22 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common50 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load52 = load i32, i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 25
  br i1 %cmp54, label %if.then, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %while.end
  %23 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common56 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 2
  %bf.load58 = load i32, i32* %code57, align 8
  %bf.clear59 = and i32 %bf.load58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 26
  br i1 %cmp60, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false.55, %while.end
  %24 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %25 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* %24, %union.tree_node** %25, align 8
  br label %if.end.205

if.else:                                          ; preds = %lor.lhs.false.55
  %26 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common61 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %27 = load i32, i32* %code.addr, align 4
  %cmp65 = icmp eq i32 %bf.clear64, %27
  br i1 %cmp65, label %if.then.108, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %if.else
  %28 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common67 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type68, align 8
  %common69 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load71 = load i32, i32* %code70, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  %cmp73 = icmp eq i32 %bf.clear72, 7
  br i1 %cmp73, label %if.else.194, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %lor.lhs.false.66
  %30 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common75 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type76 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type76, align 8
  %common77 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 2
  %bf.load79 = load i32, i32* %code78, align 8
  %bf.clear80 = and i32 %bf.load79, 255
  %cmp81 = icmp eq i32 %bf.clear80, 8
  br i1 %cmp81, label %land.lhs.true.82, label %land.lhs.true.92

land.lhs.true.82:                                 ; preds = %lor.lhs.false.74
  %32 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common83 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type84 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common83, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type84, align 8
  %common85 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type86, align 8
  %common87 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp eq i32 %bf.clear90, 7
  br i1 %cmp91, label %if.else.194, label %land.lhs.true.92

land.lhs.true.92:                                 ; preds = %land.lhs.true.82, %lor.lhs.false.74
  %35 = load i32, i32* %code.addr, align 4
  %cmp93 = icmp eq i32 %35, 59
  br i1 %cmp93, label %land.lhs.true.94, label %lor.lhs.false.100

land.lhs.true.94:                                 ; preds = %land.lhs.true.92
  %36 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common95 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 2
  %bf.load97 = load i32, i32* %code96, align 8
  %bf.clear98 = and i32 %bf.load97, 255
  %cmp99 = icmp eq i32 %bf.clear98, 60
  br i1 %cmp99, label %if.then.108, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %land.lhs.true.94, %land.lhs.true.92
  %37 = load i32, i32* %code.addr, align 4
  %cmp101 = icmp eq i32 %37, 60
  br i1 %cmp101, label %land.lhs.true.102, label %if.else.194

land.lhs.true.102:                                ; preds = %lor.lhs.false.100
  %38 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common103 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 2
  %bf.load105 = load i32, i32* %code104, align 8
  %bf.clear106 = and i32 %bf.load105, 255
  %cmp107 = icmp eq i32 %bf.clear106, 59
  br i1 %cmp107, label %if.then.108, label %if.else.194

if.then.108:                                      ; preds = %land.lhs.true.102, %land.lhs.true.94, %if.else
  %39 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp109 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands110 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp109, i32 0, i32 2
  %arrayidx111 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands110, i32 0, i64 0
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx111, align 8
  store %union.tree_node* %40, %union.tree_node** %op0, align 8
  %41 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %exp112 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands113 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp112, i32 0, i32 2
  %arrayidx114 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands113, i32 0, i64 1
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx114, align 8
  store %union.tree_node* %42, %union.tree_node** %op1, align 8
  %43 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common115 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code116 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common115, i32 0, i32 2
  %bf.load117 = load i32, i32* %code116, align 8
  %bf.clear118 = and i32 %bf.load117, 255
  %cmp119 = icmp eq i32 %bf.clear118, 60
  %conv = zext i1 %cmp119 to i32
  store i32 %conv, i32* %neg1_p, align 4
  store i32 0, i32* %neg_litp_p, align 4
  store i32 0, i32* %neg_conp_p, align 4
  store i32 0, i32* %neg_var_p, align 4
  %44 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common120 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %code121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common120, i32 0, i32 2
  %bf.load122 = load i32, i32* %code121, align 8
  %bf.clear123 = and i32 %bf.load122, 255
  %cmp124 = icmp eq i32 %bf.clear123, 25
  br i1 %cmp124, label %if.then.133, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %if.then.108
  %45 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common127 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %code128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common127, i32 0, i32 2
  %bf.load129 = load i32, i32* %code128, align 8
  %bf.clear130 = and i32 %bf.load129, 255
  %cmp131 = icmp eq i32 %bf.clear130, 26
  br i1 %cmp131, label %if.then.133, label %if.else.134

if.then.133:                                      ; preds = %lor.lhs.false.126, %if.then.108
  %46 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %47 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* %46, %union.tree_node** %47, align 8
  store %union.tree_node* null, %union.tree_node** %op0, align 8
  br label %if.end.149

if.else.134:                                      ; preds = %lor.lhs.false.126
  %48 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common135 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %code136 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common135, i32 0, i32 2
  %bf.load137 = load i32, i32* %code136, align 8
  %bf.clear138 = and i32 %bf.load137, 255
  %cmp139 = icmp eq i32 %bf.clear138, 25
  br i1 %cmp139, label %if.then.148, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %if.else.134
  %49 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common142 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %code143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 2
  %bf.load144 = load i32, i32* %code143, align 8
  %bf.clear145 = and i32 %bf.load144, 255
  %cmp146 = icmp eq i32 %bf.clear145, 26
  br i1 %cmp146, label %if.then.148, label %if.end

if.then.148:                                      ; preds = %lor.lhs.false.141, %if.else.134
  %50 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %51 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* %50, %union.tree_node** %51, align 8
  %52 = load i32, i32* %neg1_p, align 4
  store i32 %52, i32* %neg_litp_p, align 4
  store %union.tree_node* null, %union.tree_node** %op1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.148, %lor.lhs.false.141
  br label %if.end.149

if.end.149:                                       ; preds = %if.end, %if.then.133
  %53 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %cmp150 = icmp ne %union.tree_node* %53, null
  br i1 %cmp150, label %land.lhs.true.152, label %if.else.158

land.lhs.true.152:                                ; preds = %if.end.149
  %54 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common153 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 2
  %bf.load154 = load i32, i32* %constant_flag, align 8
  %bf.lshr155 = lshr i32 %bf.load154, 9
  %bf.clear156 = and i32 %bf.lshr155, 1
  %tobool = icmp ne i32 %bf.clear156, 0
  br i1 %tobool, label %if.then.157, label %if.else.158

if.then.157:                                      ; preds = %land.lhs.true.152
  %55 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %56 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* %55, %union.tree_node** %56, align 8
  store %union.tree_node* null, %union.tree_node** %op0, align 8
  br label %if.end.170

if.else.158:                                      ; preds = %land.lhs.true.152, %if.end.149
  %57 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %cmp159 = icmp ne %union.tree_node* %57, null
  br i1 %cmp159, label %land.lhs.true.161, label %if.end.169

land.lhs.true.161:                                ; preds = %if.else.158
  %58 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common162 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %constant_flag163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common162, i32 0, i32 2
  %bf.load164 = load i32, i32* %constant_flag163, align 8
  %bf.lshr165 = lshr i32 %bf.load164, 9
  %bf.clear166 = and i32 %bf.lshr165, 1
  %tobool167 = icmp ne i32 %bf.clear166, 0
  br i1 %tobool167, label %if.then.168, label %if.end.169

if.then.168:                                      ; preds = %land.lhs.true.161
  %59 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %60 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* %59, %union.tree_node** %60, align 8
  %61 = load i32, i32* %neg1_p, align 4
  store i32 %61, i32* %neg_conp_p, align 4
  store %union.tree_node* null, %union.tree_node** %op1, align 8
  br label %if.end.169

if.end.169:                                       ; preds = %if.then.168, %land.lhs.true.161, %if.else.158
  br label %if.end.170

if.end.170:                                       ; preds = %if.end.169, %if.then.157
  %62 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %cmp171 = icmp ne %union.tree_node* %62, null
  br i1 %cmp171, label %land.lhs.true.173, label %if.else.177

land.lhs.true.173:                                ; preds = %if.end.170
  %63 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %cmp174 = icmp ne %union.tree_node* %63, null
  br i1 %cmp174, label %if.then.176, label %if.else.177

if.then.176:                                      ; preds = %land.lhs.true.173
  %64 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  store %union.tree_node* %64, %union.tree_node** %var, align 8
  br label %if.end.183

if.else.177:                                      ; preds = %land.lhs.true.173, %if.end.170
  %65 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %cmp178 = icmp ne %union.tree_node* %65, null
  br i1 %cmp178, label %if.then.180, label %if.else.181

if.then.180:                                      ; preds = %if.else.177
  %66 = load %union.tree_node*, %union.tree_node** %op0, align 8
  store %union.tree_node* %66, %union.tree_node** %var, align 8
  br label %if.end.182

if.else.181:                                      ; preds = %if.else.177
  %67 = load %union.tree_node*, %union.tree_node** %op1, align 8
  store %union.tree_node* %67, %union.tree_node** %var, align 8
  %68 = load i32, i32* %neg1_p, align 4
  store i32 %68, i32* %neg_var_p, align 4
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.181, %if.then.180
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.then.176
  %69 = load i32, i32* %neg_litp_p, align 4
  %tobool184 = icmp ne i32 %69, 0
  br i1 %tobool184, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %if.end.183
  %70 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8
  %72 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  store %union.tree_node* %71, %union.tree_node** %72, align 8
  %73 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %73, align 8
  br label %if.end.186

if.end.186:                                       ; preds = %if.then.185, %if.end.183
  %74 = load i32, i32* %neg_conp_p, align 4
  %tobool187 = icmp ne i32 %74, 0
  br i1 %tobool187, label %if.then.188, label %if.end.189

if.then.188:                                      ; preds = %if.end.186
  %75 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  %76 = load %union.tree_node*, %union.tree_node** %75, align 8
  %call = call %union.tree_node* @negate_expr(%union.tree_node* %76)
  %77 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* %call, %union.tree_node** %77, align 8
  br label %if.end.189

if.end.189:                                       ; preds = %if.then.188, %if.end.186
  %78 = load i32, i32* %neg_var_p, align 4
  %tobool190 = icmp ne i32 %78, 0
  br i1 %tobool190, label %if.then.191, label %if.end.193

if.then.191:                                      ; preds = %if.end.189
  %79 = load %union.tree_node*, %union.tree_node** %var, align 8
  %call192 = call %union.tree_node* @negate_expr(%union.tree_node* %79)
  store %union.tree_node* %call192, %union.tree_node** %var, align 8
  br label %if.end.193

if.end.193:                                       ; preds = %if.then.191, %if.end.189
  br label %if.end.204

if.else.194:                                      ; preds = %land.lhs.true.102, %lor.lhs.false.100, %land.lhs.true.82, %lor.lhs.false.66
  %80 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %common195 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %constant_flag196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 2
  %bf.load197 = load i32, i32* %constant_flag196, align 8
  %bf.lshr198 = lshr i32 %bf.load197, 9
  %bf.clear199 = and i32 %bf.lshr198, 1
  %tobool200 = icmp ne i32 %bf.clear199, 0
  br i1 %tobool200, label %if.then.201, label %if.else.202

if.then.201:                                      ; preds = %if.else.194
  %81 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  %82 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* %81, %union.tree_node** %82, align 8
  br label %if.end.203

if.else.202:                                      ; preds = %if.else.194
  %83 = load %union.tree_node*, %union.tree_node** %in.addr, align 8
  store %union.tree_node* %83, %union.tree_node** %var, align 8
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.202, %if.then.201
  br label %if.end.204

if.end.204:                                       ; preds = %if.end.203, %if.end.193
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204, %if.then
  %84 = load i32, i32* %negate_p.addr, align 4
  %tobool206 = icmp ne i32 %84, 0
  br i1 %tobool206, label %if.then.207, label %if.end.217

if.then.207:                                      ; preds = %if.end.205
  %85 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  %86 = load %union.tree_node*, %union.tree_node** %85, align 8
  %tobool208 = icmp ne %union.tree_node* %86, null
  br i1 %tobool208, label %if.then.209, label %if.else.210

if.then.209:                                      ; preds = %if.then.207
  %87 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  %88 = load %union.tree_node*, %union.tree_node** %87, align 8
  %89 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  store %union.tree_node* %88, %union.tree_node** %89, align 8
  %90 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %90, align 8
  br label %if.end.214

if.else.210:                                      ; preds = %if.then.207
  %91 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  %92 = load %union.tree_node*, %union.tree_node** %91, align 8
  %tobool211 = icmp ne %union.tree_node* %92, null
  br i1 %tobool211, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %if.else.210
  %93 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  %94 = load %union.tree_node*, %union.tree_node** %93, align 8
  %95 = load %union.tree_node**, %union.tree_node*** %litp.addr, align 8
  store %union.tree_node* %94, %union.tree_node** %95, align 8
  %96 = load %union.tree_node**, %union.tree_node*** %minus_litp.addr, align 8
  store %union.tree_node* null, %union.tree_node** %96, align 8
  br label %if.end.213

if.end.213:                                       ; preds = %if.then.212, %if.else.210
  br label %if.end.214

if.end.214:                                       ; preds = %if.end.213, %if.then.209
  %97 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  %98 = load %union.tree_node*, %union.tree_node** %97, align 8
  %call215 = call %union.tree_node* @negate_expr(%union.tree_node* %98)
  %99 = load %union.tree_node**, %union.tree_node*** %conp.addr, align 8
  store %union.tree_node* %call215, %union.tree_node** %99, align 8
  %100 = load %union.tree_node*, %union.tree_node** %var, align 8
  %call216 = call %union.tree_node* @negate_expr(%union.tree_node* %100)
  store %union.tree_node* %call216, %union.tree_node** %var, align 8
  br label %if.end.217

if.end.217:                                       ; preds = %if.end.214, %if.end.205
  %101 = load %union.tree_node*, %union.tree_node** %var, align 8
  ret %union.tree_node* %101
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @associate_trees(%union.tree_node* %t1, %union.tree_node* %t2, i32 %code, %union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t1.addr = alloca %union.tree_node*, align 8
  %t2.addr = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t1, %union.tree_node** %t1.addr, align 8
  store %union.tree_node* %t2, %union.tree_node** %t2.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %cmp1 = icmp eq %union.tree_node* %2, null
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.else
  %3 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  store %union.tree_node* %3, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.3

if.end.3:                                         ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code4, align 8
  %bf.clear = and i32 %bf.load, 255
  %5 = load i32, i32* %code.addr, align 4
  %cmp5 = icmp eq i32 %bf.clear, %5
  br i1 %cmp5, label %if.then.23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.3
  %6 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common6 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %7 = load i32, i32* %code.addr, align 4
  %cmp10 = icmp eq i32 %bf.clear9, %7
  br i1 %cmp10, label %if.then.23, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common12 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 60
  br i1 %cmp16, label %if.then.23, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.11
  %9 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common18 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load20 = load i32, i32* %code19, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 60
  br i1 %cmp22, label %if.then.23, label %if.end.49

if.then.23:                                       ; preds = %lor.lhs.false.17, %lor.lhs.false.11, %lor.lhs.false, %if.end.3
  %10 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %common24 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load26 = load i32, i32* %code25, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 77
  br i1 %cmp28, label %if.then.29, label %if.else.32

if.then.29:                                       ; preds = %if.then.23
  %11 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %12, %union.tree_node* %13)
  %14 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %15 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %exp = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call30 = call %union.tree_node* @convert(%union.tree_node* %14, %union.tree_node* %16)
  %call31 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %11, %union.tree_node* %call, %union.tree_node* %call30)
  store %union.tree_node* %call31, %union.tree_node** %retval
  br label %return

if.else.32:                                       ; preds = %if.then.23
  %17 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %common33 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 77
  br i1 %cmp37, label %if.then.38, label %if.else.45

if.then.38:                                       ; preds = %if.else.32
  %18 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %19 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %20 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %call39 = call %union.tree_node* @convert(%union.tree_node* %19, %union.tree_node* %20)
  %21 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %22 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %exp40 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  %call43 = call %union.tree_node* @convert(%union.tree_node* %21, %union.tree_node* %23)
  %call44 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %18, %union.tree_node* %call39, %union.tree_node* %call43)
  store %union.tree_node* %call44, %union.tree_node** %retval
  br label %return

if.else.45:                                       ; preds = %if.else.32
  %24 = load i32, i32* %code.addr, align 4
  %25 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %27 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %call46 = call %union.tree_node* @convert(%union.tree_node* %26, %union.tree_node* %27)
  %28 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %29 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %call47 = call %union.tree_node* @convert(%union.tree_node* %28, %union.tree_node* %29)
  %call48 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %24, %union.tree_node* %25, %union.tree_node* %call46, %union.tree_node* %call47)
  store %union.tree_node* %call48, %union.tree_node** %retval
  br label %return

if.end.49:                                        ; preds = %lor.lhs.false.17
  %30 = load i32, i32* %code.addr, align 4
  %31 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %32 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %33 = load %union.tree_node*, %union.tree_node** %t1.addr, align 8
  %call50 = call %union.tree_node* @convert(%union.tree_node* %32, %union.tree_node* %33)
  %34 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %35 = load %union.tree_node*, %union.tree_node** %t2.addr, align 8
  %call51 = call %union.tree_node* @convert(%union.tree_node* %34, %union.tree_node* %35)
  %call52 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %30, %union.tree_node* %31, %union.tree_node* %call50, %union.tree_node* %call51)
  %call53 = call %union.tree_node* @fold(%union.tree_node* %call52)
  store %union.tree_node* %call53, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.49, %if.else.45, %if.then.38, %if.then.29, %if.then.2, %if.then
  %36 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %36
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @omit_one_operand(%union.tree_node* %type, %union.tree_node* %result, %union.tree_node* %omitted) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %result.addr = alloca %union.tree_node*, align 8
  %omitted.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %result, %union.tree_node** %result.addr, align 8
  store %union.tree_node* %omitted, %union.tree_node** %omitted.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %1)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %2 = load %union.tree_node*, %union.tree_node** %omitted.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 8
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %omitted.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call1 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %3, %union.tree_node* %4, %union.tree_node* %5)
  store %union.tree_node* %call1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call2 = call %union.tree_node* @non_lvalue(%union.tree_node* %6)
  store %union.tree_node* %call2, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %7
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @extract_muldiv(%union.tree_node* %t, %union.tree_node* %c, i32 %code, %union.tree_node* %wide_type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %c.addr = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %wide_type.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %tcode = alloca i32, align 4
  %ctype = alloca %union.tree_node*, align 8
  %t1 = alloca %union.tree_node*, align 8
  %t2 = alloca %union.tree_node*, align 8
  %same_p = alloca i32, align 4
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %c, %union.tree_node** %c.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %wide_type, %union.tree_node** %wide_type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %tcode, align 4
  %3 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %cmp = icmp ne %union.tree_node* %3, null
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %type4 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i32 0, i32 6
  %bf.load5 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load5, 9
  %bf.clear6 = and i32 %bf.lshr, 127
  %idxprom = sext i32 %bf.clear6 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 6
  %bf.load9 = load i32, i32* %mode8, align 4
  %bf.lshr10 = lshr i32 %bf.load9, 9
  %bf.clear11 = and i32 %bf.lshr10, 127
  %idxprom12 = sext i32 %bf.clear11 to i64
  %arrayidx13 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom12
  %7 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %7 to i32
  %cmp15 = icmp sgt i32 %conv, %conv14
  br i1 %cmp15, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %8, %cond.true ], [ %9, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %ctype, align 8
  %10 = load i32, i32* %tcode, align 4
  %11 = load i32, i32* %code.addr, align 4
  %cmp17 = icmp eq i32 %10, %11
  %conv18 = zext i1 %cmp17 to i32
  store i32 %conv18, i32* %same_p, align 4
  store %union.tree_node* null, %union.tree_node** %op0, align 8
  store %union.tree_node* null, %union.tree_node** %op1, align 8
  %12 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call = call i32 @integer_zerop(%union.tree_node* %12)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %13 = load i32, i32* %tcode, align 4
  %idxprom19 = sext i32 %13 to i64
  %arrayidx20 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom19
  %14 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %14 to i32
  %cmp22 = icmp eq i32 %conv21, 49
  br i1 %cmp22, label %if.then.24, label %if.end.26

if.then.24:                                       ; preds = %if.end
  %15 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8
  store %union.tree_node* %16, %union.tree_node** %op0, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.24, %if.end
  %17 = load i32, i32* %tcode, align 4
  %idxprom27 = sext i32 %17 to i64
  %arrayidx28 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv29 = sext i8 %18 to i32
  %cmp30 = icmp eq i32 %conv29, 50
  br i1 %cmp30, label %if.then.32, label %if.end.39

if.then.32:                                       ; preds = %if.end.26
  %19 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp33 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp33, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands34, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8
  store %union.tree_node* %20, %union.tree_node** %op0, align 8
  %21 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp36 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands37 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands37, i32 0, i64 1
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8
  store %union.tree_node* %22, %union.tree_node** %op1, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.32, %if.end.26
  %23 = load i32, i32* %tcode, align 4
  switch i32 %23, label %sw.default [
    i32 25, label %sw.bb
    i32 114, label %sw.bb.50
    i32 116, label %sw.bb.50
    i32 115, label %sw.bb.50
    i32 77, label %sw.bb.173
    i32 80, label %sw.bb.173
    i32 78, label %sw.bb.182
    i32 79, label %sw.bb.182
    i32 58, label %sw.bb.218
    i32 118, label %sw.bb.233
    i32 82, label %sw.bb.280
    i32 83, label %sw.bb.280
    i32 59, label %sw.bb.321
    i32 60, label %sw.bb.321
    i32 61, label %sw.bb.460
    i32 62, label %sw.bb.489
    i32 63, label %sw.bb.489
    i32 64, label %sw.bb.489
    i32 65, label %sw.bb.489
    i32 71, label %sw.bb.489
  ]

sw.bb:                                            ; preds = %if.end.39
  %24 = load i32, i32* %code.addr, align 4
  %cmp40 = icmp eq i32 %24, 61
  br i1 %cmp40, label %if.then.45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %25 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call42 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %25, %union.tree_node* %26, i32 0)
  %call43 = call i32 @integer_zerop(%union.tree_node* %call42)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then.45, label %if.end.49

if.then.45:                                       ; preds = %lor.lhs.false, %sw.bb
  %27 = load i32, i32* %code.addr, align 4
  %28 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %29 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call46 = call %union.tree_node* @convert(%union.tree_node* %28, %union.tree_node* %29)
  %30 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %31 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call47 = call %union.tree_node* @convert(%union.tree_node* %30, %union.tree_node* %31)
  %call48 = call %union.tree_node* @const_binop(i32 %27, %union.tree_node* %call46, %union.tree_node* %call47, i32 0)
  store %union.tree_node* %call48, %union.tree_node** %retval
  br label %return

if.end.49:                                        ; preds = %lor.lhs.false
  br label %sw.epilog

sw.bb.50:                                         ; preds = %if.end.39, %if.end.39, %if.end.39
  %32 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common51 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %idxprom55 = sext i32 %bf.clear54 to i64
  %arrayidx56 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom55
  %33 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %33 to i32
  %cmp58 = icmp eq i32 %conv57, 60
  br i1 %cmp58, label %land.lhs.true.90, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %sw.bb.50
  %34 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common61 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %idxprom65 = sext i32 %bf.clear64 to i64
  %arrayidx66 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom65
  %35 = load i8, i8* %arrayidx66, align 1
  %conv67 = sext i8 %35 to i32
  %cmp68 = icmp eq i32 %conv67, 49
  br i1 %cmp68, label %land.lhs.true.90, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %lor.lhs.false.60
  %36 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common71 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %code72, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %idxprom75 = sext i32 %bf.clear74 to i64
  %arrayidx76 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom75
  %37 = load i8, i8* %arrayidx76, align 1
  %conv77 = sext i8 %37 to i32
  %cmp78 = icmp eq i32 %conv77, 50
  br i1 %cmp78, label %land.lhs.true.90, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %lor.lhs.false.70
  %38 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common81 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 2
  %bf.load83 = load i32, i32* %code82, align 8
  %bf.clear84 = and i32 %bf.load83, 255
  %idxprom85 = sext i32 %bf.clear84 to i64
  %arrayidx86 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom85
  %39 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %39 to i32
  %cmp88 = icmp eq i32 %conv87, 101
  br i1 %cmp88, label %land.lhs.true.90, label %if.end.158

land.lhs.true.90:                                 ; preds = %lor.lhs.false.80, %lor.lhs.false.70, %lor.lhs.false.60, %sw.bb.50
  %40 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common91 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type92, align 8
  %common93 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load94 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr95 = lshr i32 %bf.load94, 13
  %bf.clear96 = and i32 %bf.lshr95, 1
  %tobool97 = icmp ne i32 %bf.clear96, 0
  br i1 %tobool97, label %land.lhs.true.98, label %lor.lhs.false.136

land.lhs.true.98:                                 ; preds = %land.lhs.true.90
  %42 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common99 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common99, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type100, align 8
  %common101 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 2
  %bf.load103 = load i32, i32* %code102, align 8
  %bf.clear104 = and i32 %bf.load103, 255
  %cmp105 = icmp eq i32 %bf.clear104, 6
  br i1 %cmp105, label %land.lhs.true.107, label %land.lhs.true.115

land.lhs.true.107:                                ; preds = %land.lhs.true.98
  %44 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common108 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %type109 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common108, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %type109, align 8
  %type110 = bitcast %union.tree_node* %45 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i32 0, i32 6
  %bf.load111 = load i32, i32* %no_force_blk_flag, align 4
  %bf.lshr112 = lshr i32 %bf.load111, 17
  %bf.clear113 = and i32 %bf.lshr112, 1
  %tobool114 = icmp ne i32 %bf.clear113, 0
  br i1 %tobool114, label %lor.lhs.false.136, label %land.lhs.true.115

land.lhs.true.115:                                ; preds = %land.lhs.true.107, %land.lhs.true.98
  %46 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %type116 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %mode117 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i32 0, i32 6
  %bf.load118 = load i32, i32* %mode117, align 4
  %bf.lshr119 = lshr i32 %bf.load118, 9
  %bf.clear120 = and i32 %bf.lshr119, 127
  %idxprom121 = sext i32 %bf.clear120 to i64
  %arrayidx122 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom121
  %47 = load i8, i8* %arrayidx122, align 1
  %conv123 = zext i8 %47 to i32
  %48 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common124 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %type125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 1
  %49 = load %union.tree_node*, %union.tree_node** %type125, align 8
  %type126 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %mode127 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type126, i32 0, i32 6
  %bf.load128 = load i32, i32* %mode127, align 4
  %bf.lshr129 = lshr i32 %bf.load128, 9
  %bf.clear130 = and i32 %bf.lshr129, 127
  %idxprom131 = sext i32 %bf.clear130 to i64
  %arrayidx132 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom131
  %50 = load i8, i8* %arrayidx132, align 1
  %conv133 = zext i8 %50 to i32
  %cmp134 = icmp sgt i32 %conv123, %conv133
  br i1 %cmp134, label %if.then.157, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %land.lhs.true.115, %land.lhs.true.107, %land.lhs.true.90
  %51 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %type137 = bitcast %union.tree_node* %51 to %struct.tree_type*
  %mode138 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type137, i32 0, i32 6
  %bf.load139 = load i32, i32* %mode138, align 4
  %bf.lshr140 = lshr i32 %bf.load139, 9
  %bf.clear141 = and i32 %bf.lshr140, 127
  %idxprom142 = sext i32 %bf.clear141 to i64
  %arrayidx143 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom142
  %52 = load i8, i8* %arrayidx143, align 1
  %conv144 = zext i8 %52 to i32
  %53 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common145 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type146 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type146, align 8
  %type147 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %mode148 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type147, i32 0, i32 6
  %bf.load149 = load i32, i32* %mode148, align 4
  %bf.lshr150 = lshr i32 %bf.load149, 9
  %bf.clear151 = and i32 %bf.lshr150, 127
  %idxprom152 = sext i32 %bf.clear151 to i64
  %arrayidx153 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom152
  %55 = load i8, i8* %arrayidx153, align 1
  %conv154 = zext i8 %55 to i32
  %cmp155 = icmp slt i32 %conv144, %conv154
  br i1 %cmp155, label %if.then.157, label %if.end.158

if.then.157:                                      ; preds = %lor.lhs.false.136, %land.lhs.true.115
  br label %sw.epilog

if.end.158:                                       ; preds = %lor.lhs.false.136, %lor.lhs.false.80
  %56 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %57 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common159 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %type160 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common159, i32 0, i32 1
  %58 = load %union.tree_node*, %union.tree_node** %type160, align 8
  %59 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call161 = call %union.tree_node* @convert(%union.tree_node* %58, %union.tree_node* %59)
  %60 = load i32, i32* %code.addr, align 4
  %61 = load i32, i32* %code.addr, align 4
  %cmp162 = icmp eq i32 %61, 61
  br i1 %cmp162, label %cond.true.164, label %cond.false.165

cond.true.164:                                    ; preds = %if.end.158
  %62 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  br label %cond.end.166

cond.false.165:                                   ; preds = %if.end.158
  br label %cond.end.166

cond.end.166:                                     ; preds = %cond.false.165, %cond.true.164
  %cond167 = phi %union.tree_node* [ %62, %cond.true.164 ], [ null, %cond.false.165 ]
  %call168 = call %union.tree_node* @extract_muldiv(%union.tree_node* %56, %union.tree_node* %call161, i32 %60, %union.tree_node* %cond167)
  store %union.tree_node* %call168, %union.tree_node** %t1, align 8
  %cmp169 = icmp ne %union.tree_node* null, %call168
  br i1 %cmp169, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %cond.end.166
  %63 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %63, %union.tree_node** %retval
  br label %return

if.end.172:                                       ; preds = %cond.end.166
  br label %sw.epilog

sw.bb.173:                                        ; preds = %if.end.39, %if.end.39
  %64 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %65 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %66 = load i32, i32* %code.addr, align 4
  %67 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call174 = call %union.tree_node* @extract_muldiv(%union.tree_node* %64, %union.tree_node* %65, i32 %66, %union.tree_node* %67)
  store %union.tree_node* %call174, %union.tree_node** %t1, align 8
  %cmp175 = icmp ne %union.tree_node* %call174, null
  br i1 %cmp175, label %if.then.177, label %if.end.181

if.then.177:                                      ; preds = %sw.bb.173
  %68 = load i32, i32* %tcode, align 4
  %69 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %70 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %71 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call178 = call %union.tree_node* @convert(%union.tree_node* %70, %union.tree_node* %71)
  %call179 = call %union.tree_node* @build1(i32 %68, %union.tree_node* %69, %union.tree_node* %call178)
  %call180 = call %union.tree_node* @fold(%union.tree_node* %call179)
  store %union.tree_node* %call180, %union.tree_node** %retval
  br label %return

if.end.181:                                       ; preds = %sw.bb.173
  br label %sw.epilog

sw.bb.182:                                        ; preds = %if.end.39, %if.end.39
  %72 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %common183 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %unsigned_flag184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 2
  %bf.load185 = load i32, i32* %unsigned_flag184, align 8
  %bf.lshr186 = lshr i32 %bf.load185, 13
  %bf.clear187 = and i32 %bf.lshr186, 1
  %73 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common188 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %unsigned_flag189 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common188, i32 0, i32 2
  %bf.load190 = load i32, i32* %unsigned_flag189, align 8
  %bf.lshr191 = lshr i32 %bf.load190, 13
  %bf.clear192 = and i32 %bf.lshr191, 1
  %cmp193 = icmp ne i32 %bf.clear187, %bf.clear192
  br i1 %cmp193, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %sw.bb.182
  br label %sw.epilog

if.end.196:                                       ; preds = %sw.bb.182
  %74 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %75 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %76 = load i32, i32* %code.addr, align 4
  %77 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call197 = call %union.tree_node* @extract_muldiv(%union.tree_node* %74, %union.tree_node* %75, i32 %76, %union.tree_node* %77)
  store %union.tree_node* %call197, %union.tree_node** %t1, align 8
  %cmp198 = icmp ne %union.tree_node* %call197, null
  br i1 %cmp198, label %land.lhs.true.200, label %if.end.217

land.lhs.true.200:                                ; preds = %if.end.196
  %78 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %79 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %80 = load i32, i32* %code.addr, align 4
  %81 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call201 = call %union.tree_node* @extract_muldiv(%union.tree_node* %78, %union.tree_node* %79, i32 %80, %union.tree_node* %81)
  store %union.tree_node* %call201, %union.tree_node** %t2, align 8
  %cmp202 = icmp ne %union.tree_node* %call201, null
  br i1 %cmp202, label %if.then.204, label %if.end.217

if.then.204:                                      ; preds = %land.lhs.true.200
  %82 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call205 = call i32 @tree_int_cst_sgn(%union.tree_node* %82)
  %cmp206 = icmp slt i32 %call205, 0
  br i1 %cmp206, label %if.then.208, label %if.end.212

if.then.208:                                      ; preds = %if.then.204
  %83 = load i32, i32* %tcode, align 4
  %cmp209 = icmp eq i32 %83, 78
  %cond211 = select i1 %cmp209, i32 79, i32 78
  store i32 %cond211, i32* %tcode, align 4
  br label %if.end.212

if.end.212:                                       ; preds = %if.then.208, %if.then.204
  %84 = load i32, i32* %tcode, align 4
  %85 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %86 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %87 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call213 = call %union.tree_node* @convert(%union.tree_node* %86, %union.tree_node* %87)
  %88 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %89 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %call214 = call %union.tree_node* @convert(%union.tree_node* %88, %union.tree_node* %89)
  %call215 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %84, %union.tree_node* %85, %union.tree_node* %call213, %union.tree_node* %call214)
  %call216 = call %union.tree_node* @fold(%union.tree_node* %call215)
  store %union.tree_node* %call216, %union.tree_node** %retval
  br label %return

if.end.217:                                       ; preds = %land.lhs.true.200, %if.end.196
  br label %sw.epilog

sw.bb.218:                                        ; preds = %if.end.39
  %90 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp219 = bitcast %union.tree_node* %90 to %struct.tree_exp*
  %operands220 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp219, i32 0, i32 2
  %arrayidx221 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands220, i32 0, i64 0
  %91 = load %union.tree_node*, %union.tree_node** %arrayidx221, align 8
  %92 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %93 = load i32, i32* %code.addr, align 4
  %94 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call222 = call %union.tree_node* @extract_muldiv(%union.tree_node* %91, %union.tree_node* %92, i32 %93, %union.tree_node* %94)
  store %union.tree_node* %call222, %union.tree_node** %t1, align 8
  %cmp223 = icmp ne %union.tree_node* %call222, null
  br i1 %cmp223, label %if.then.225, label %if.end.232

if.then.225:                                      ; preds = %sw.bb.218
  %95 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common226 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %type227 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common226, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %type227, align 8
  %97 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %98 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp228 = bitcast %union.tree_node* %98 to %struct.tree_exp*
  %operands229 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp228, i32 0, i32 2
  %arrayidx230 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands229, i32 0, i64 1
  %99 = load %union.tree_node*, %union.tree_node** %arrayidx230, align 8
  %call231 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 58, %union.tree_node* %96, %union.tree_node* %97, %union.tree_node* %99)
  store %union.tree_node* %call231, %union.tree_node** %retval
  br label %return

if.end.232:                                       ; preds = %sw.bb.218
  br label %sw.epilog

sw.bb.233:                                        ; preds = %if.end.39
  %100 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp234 = bitcast %union.tree_node* %100 to %struct.tree_exp*
  %operands235 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp234, i32 0, i32 2
  %arrayidx236 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands235, i32 0, i64 2
  %101 = bitcast %union.tree_node** %arrayidx236 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %101, align 8
  %cmp237 = icmp eq %struct.rtx_def* %102, null
  br i1 %cmp237, label %land.lhs.true.239, label %if.end.279

land.lhs.true.239:                                ; preds = %sw.bb.233
  %103 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp240 = bitcast %union.tree_node* %103 to %struct.tree_exp*
  %operands241 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp240, i32 0, i32 2
  %arrayidx242 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands241, i32 0, i64 0
  %104 = load %union.tree_node*, %union.tree_node** %arrayidx242, align 8
  %common243 = bitcast %union.tree_node* %104 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common243, i32 0, i32 2
  %bf.load244 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr245 = lshr i32 %bf.load244, 8
  %bf.clear246 = and i32 %bf.lshr245, 1
  %tobool247 = icmp ne i32 %bf.clear246, 0
  br i1 %tobool247, label %if.end.279, label %land.lhs.true.248

land.lhs.true.248:                                ; preds = %land.lhs.true.239
  %105 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp249 = bitcast %union.tree_node* %105 to %struct.tree_exp*
  %operands250 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp249, i32 0, i32 2
  %arrayidx251 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands250, i32 0, i64 0
  %106 = load %union.tree_node*, %union.tree_node** %arrayidx251, align 8
  %107 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %108 = load i32, i32* %code.addr, align 4
  %109 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call252 = call %union.tree_node* @extract_muldiv(%union.tree_node* %106, %union.tree_node* %107, i32 %108, %union.tree_node* %109)
  store %union.tree_node* %call252, %union.tree_node** %t1, align 8
  %cmp253 = icmp ne %union.tree_node* null, %call252
  br i1 %cmp253, label %if.then.255, label %if.end.279

if.then.255:                                      ; preds = %land.lhs.true.248
  %110 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call256 = call %union.tree_node* @save_expr(%union.tree_node* %110)
  store %union.tree_node* %call256, %union.tree_node** %t1, align 8
  %111 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common257 = bitcast %union.tree_node* %111 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common257, i32 0, i32 2
  %bf.load258 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr259 = lshr i32 %bf.load258, 14
  %bf.clear260 = and i32 %bf.lshr259, 1
  %tobool261 = icmp ne i32 %bf.clear260, 0
  br i1 %tobool261, label %land.lhs.true.262, label %if.end.274

land.lhs.true.262:                                ; preds = %if.then.255
  %112 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common263 = bitcast %union.tree_node* %112 to %struct.tree_common*
  %code264 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common263, i32 0, i32 2
  %bf.load265 = load i32, i32* %code264, align 8
  %bf.clear266 = and i32 %bf.load265, 255
  %cmp267 = icmp eq i32 %bf.clear266, 118
  br i1 %cmp267, label %if.then.269, label %if.end.274

if.then.269:                                      ; preds = %land.lhs.true.262
  %113 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common270 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %asm_written_flag271 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common270, i32 0, i32 2
  %bf.load272 = load i32, i32* %asm_written_flag271, align 8
  %bf.clear273 = and i32 %bf.load272, -16385
  %bf.set = or i32 %bf.clear273, 16384
  store i32 %bf.set, i32* %asm_written_flag271, align 8
  br label %if.end.274

if.end.274:                                       ; preds = %if.then.269, %land.lhs.true.262, %if.then.255
  %114 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call275 = call i32 @is_pending_size(%union.tree_node* %114)
  %tobool276 = icmp ne i32 %call275, 0
  br i1 %tobool276, label %if.then.277, label %if.end.278

if.then.277:                                      ; preds = %if.end.274
  %115 = load %union.tree_node*, %union.tree_node** %t1, align 8
  call void @put_pending_size(%union.tree_node* %115)
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.277, %if.end.274
  %116 = load %union.tree_node*, %union.tree_node** %t1, align 8
  store %union.tree_node* %116, %union.tree_node** %retval
  br label %return

if.end.279:                                       ; preds = %land.lhs.true.248, %land.lhs.true.239, %sw.bb.233
  br label %sw.epilog

sw.bb.280:                                        ; preds = %if.end.39, %if.end.39
  %117 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common281 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %code282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common281, i32 0, i32 2
  %bf.load283 = load i32, i32* %code282, align 8
  %bf.clear284 = and i32 %bf.load283, 255
  %cmp285 = icmp eq i32 %bf.clear284, 25
  br i1 %cmp285, label %land.lhs.true.287, label %if.end.320

land.lhs.true.287:                                ; preds = %sw.bb.280
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  %common288 = bitcast %union.tree_node* %118 to %struct.tree_common*
  %type289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common288, i32 0, i32 1
  %119 = load %union.tree_node*, %union.tree_node** %type289, align 8
  %type290 = bitcast %union.tree_node* %119 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type290, i32 0, i32 6
  %bf.load291 = load i32, i32* %precision, align 4
  %bf.clear292 = and i32 %bf.load291, 511
  %conv293 = zext i32 %bf.clear292 to i64
  %120 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %int_cst = bitcast %union.tree_node* %120 to %struct.tree_int_cst*
  %int_cst294 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst294, i32 0, i32 0
  %121 = load i64, i64* %low, align 8
  %cmp295 = icmp ugt i64 %conv293, %121
  br i1 %cmp295, label %land.lhs.true.297, label %if.end.320

land.lhs.true.297:                                ; preds = %land.lhs.true.287
  %122 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %int_cst298 = bitcast %union.tree_node* %122 to %struct.tree_int_cst*
  %int_cst299 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst298, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst299, i32 0, i32 1
  %123 = load i64, i64* %high, align 8
  %cmp300 = icmp eq i64 %123, 0
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.320

land.lhs.true.302:                                ; preds = %land.lhs.true.297
  %124 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  %126 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call303 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %125, %union.tree_node* %126, i32 0)
  %call304 = call %union.tree_node* @convert(%union.tree_node* %124, %union.tree_node* %call303)
  store %union.tree_node* %call304, %union.tree_node** %t1, align 8
  %cmp305 = icmp ne %union.tree_node* null, %call304
  br i1 %cmp305, label %land.lhs.true.307, label %if.end.320

land.lhs.true.307:                                ; preds = %land.lhs.true.302
  %127 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common308 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common308, i32 0, i32 2
  %bf.load309 = load i32, i32* %public_flag, align 8
  %bf.lshr310 = lshr i32 %bf.load309, 19
  %bf.clear311 = and i32 %bf.lshr310, 1
  %tobool312 = icmp ne i32 %bf.clear311, 0
  br i1 %tobool312, label %if.end.320, label %if.then.313

if.then.313:                                      ; preds = %land.lhs.true.307
  %128 = load i32, i32* %tcode, align 4
  %cmp314 = icmp eq i32 %128, 82
  %cond316 = select i1 %cmp314, i32 61, i32 64
  %129 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %130 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %131 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call317 = call %union.tree_node* @convert(%union.tree_node* %130, %union.tree_node* %131)
  %132 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call318 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond316, %union.tree_node* %129, %union.tree_node* %call317, %union.tree_node* %132)
  %133 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %134 = load i32, i32* %code.addr, align 4
  %135 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call319 = call %union.tree_node* @extract_muldiv(%union.tree_node* %call318, %union.tree_node* %133, i32 %134, %union.tree_node* %135)
  store %union.tree_node* %call319, %union.tree_node** %retval
  br label %return

if.end.320:                                       ; preds = %land.lhs.true.307, %land.lhs.true.302, %land.lhs.true.297, %land.lhs.true.287, %sw.bb.280
  br label %sw.epilog

sw.bb.321:                                        ; preds = %if.end.39, %if.end.39
  %136 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %137 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %138 = load i32, i32* %code.addr, align 4
  %139 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call322 = call %union.tree_node* @extract_muldiv(%union.tree_node* %136, %union.tree_node* %137, i32 %138, %union.tree_node* %139)
  store %union.tree_node* %call322, %union.tree_node** %t1, align 8
  %140 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %141 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %142 = load i32, i32* %code.addr, align 4
  %143 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call323 = call %union.tree_node* @extract_muldiv(%union.tree_node* %140, %union.tree_node* %141, i32 %142, %union.tree_node* %143)
  store %union.tree_node* %call323, %union.tree_node** %t2, align 8
  %144 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp324 = icmp ne %union.tree_node* %144, null
  br i1 %cmp324, label %land.lhs.true.326, label %if.end.343

land.lhs.true.326:                                ; preds = %sw.bb.321
  %145 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %cmp327 = icmp ne %union.tree_node* %145, null
  br i1 %cmp327, label %land.lhs.true.329, label %if.end.343

land.lhs.true.329:                                ; preds = %land.lhs.true.326
  %146 = load i32, i32* %code.addr, align 4
  %cmp330 = icmp eq i32 %146, 61
  br i1 %cmp330, label %if.then.338, label %lor.lhs.false.332

lor.lhs.false.332:                                ; preds = %land.lhs.true.329
  %147 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %148 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %149 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call333 = call i32 @multiple_of_p(%union.tree_node* %147, %union.tree_node* %148, %union.tree_node* %149)
  %tobool334 = icmp ne i32 %call333, 0
  br i1 %tobool334, label %if.then.338, label %lor.lhs.false.335

lor.lhs.false.335:                                ; preds = %lor.lhs.false.332
  %150 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %151 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %152 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call336 = call i32 @multiple_of_p(%union.tree_node* %150, %union.tree_node* %151, %union.tree_node* %152)
  %tobool337 = icmp ne i32 %call336, 0
  br i1 %tobool337, label %if.then.338, label %if.end.343

if.then.338:                                      ; preds = %lor.lhs.false.335, %lor.lhs.false.332, %land.lhs.true.329
  %153 = load i32, i32* %tcode, align 4
  %154 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %155 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %156 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call339 = call %union.tree_node* @convert(%union.tree_node* %155, %union.tree_node* %156)
  %157 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %158 = load %union.tree_node*, %union.tree_node** %t2, align 8
  %call340 = call %union.tree_node* @convert(%union.tree_node* %157, %union.tree_node* %158)
  %call341 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %153, %union.tree_node* %154, %union.tree_node* %call339, %union.tree_node* %call340)
  %call342 = call %union.tree_node* @fold(%union.tree_node* %call341)
  store %union.tree_node* %call342, %union.tree_node** %retval
  br label %return

if.end.343:                                       ; preds = %lor.lhs.false.335, %land.lhs.true.326, %sw.bb.321
  %159 = load i32, i32* %tcode, align 4
  %cmp344 = icmp eq i32 %159, 60
  br i1 %cmp344, label %if.then.346, label %if.end.348

if.then.346:                                      ; preds = %if.end.343
  store i32 59, i32* %tcode, align 4
  %160 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call347 = call %union.tree_node* @negate_expr(%union.tree_node* %160)
  store %union.tree_node* %call347, %union.tree_node** %op1, align 8
  br label %if.end.348

if.end.348:                                       ; preds = %if.then.346, %if.end.343
  %161 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common349 = bitcast %union.tree_node* %161 to %struct.tree_common*
  %code350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common349, i32 0, i32 2
  %bf.load351 = load i32, i32* %code350, align 8
  %bf.clear352 = and i32 %bf.load351, 255
  %cmp353 = icmp ne i32 %bf.clear352, 25
  br i1 %cmp353, label %if.then.355, label %if.end.356

if.then.355:                                      ; preds = %if.end.348
  br label %sw.epilog

if.end.356:                                       ; preds = %if.end.348
  %162 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call357 = call i32 @tree_int_cst_sgn(%union.tree_node* %162)
  %cmp358 = icmp slt i32 %call357, 0
  br i1 %cmp358, label %if.then.364, label %lor.lhs.false.360

lor.lhs.false.360:                                ; preds = %if.end.356
  %163 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call361 = call i32 @tree_int_cst_sgn(%union.tree_node* %163)
  %cmp362 = icmp slt i32 %call361, 0
  br i1 %cmp362, label %if.then.364, label %if.end.384

if.then.364:                                      ; preds = %lor.lhs.false.360, %if.end.356
  %164 = load i32, i32* %code.addr, align 4
  %cmp365 = icmp eq i32 %164, 63
  br i1 %cmp365, label %if.then.367, label %if.else

if.then.367:                                      ; preds = %if.then.364
  store i32 64, i32* %code.addr, align 4
  br label %if.end.383

if.else:                                          ; preds = %if.then.364
  %165 = load i32, i32* %code.addr, align 4
  %cmp368 = icmp eq i32 %165, 64
  br i1 %cmp368, label %if.then.370, label %if.else.371

if.then.370:                                      ; preds = %if.else
  store i32 63, i32* %code.addr, align 4
  br label %if.end.382

if.else.371:                                      ; preds = %if.else
  %166 = load i32, i32* %code.addr, align 4
  %cmp372 = icmp ne i32 %166, 61
  br i1 %cmp372, label %land.lhs.true.374, label %if.end.381

land.lhs.true.374:                                ; preds = %if.else.371
  %167 = load i32, i32* %code.addr, align 4
  %cmp375 = icmp ne i32 %167, 67
  br i1 %cmp375, label %land.lhs.true.377, label %if.end.381

land.lhs.true.377:                                ; preds = %land.lhs.true.374
  %168 = load i32, i32* %code.addr, align 4
  %cmp378 = icmp ne i32 %168, 68
  br i1 %cmp378, label %if.then.380, label %if.end.381

if.then.380:                                      ; preds = %land.lhs.true.377
  br label %sw.epilog

if.end.381:                                       ; preds = %land.lhs.true.377, %land.lhs.true.374, %if.else.371
  br label %if.end.382

if.end.382:                                       ; preds = %if.end.381, %if.then.370
  br label %if.end.383

if.end.383:                                       ; preds = %if.end.382, %if.then.367
  br label %if.end.384

if.end.384:                                       ; preds = %if.end.383, %lor.lhs.false.360
  %169 = load i32, i32* %code.addr, align 4
  %cmp385 = icmp eq i32 %169, 61
  br i1 %cmp385, label %if.then.391, label %lor.lhs.false.387

lor.lhs.false.387:                                ; preds = %if.end.384
  %170 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %171 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call388 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %170, %union.tree_node* %171, i32 0)
  %call389 = call i32 @integer_zerop(%union.tree_node* %call388)
  %tobool390 = icmp ne i32 %call389, 0
  br i1 %tobool390, label %if.then.391, label %if.else.406

if.then.391:                                      ; preds = %lor.lhs.false.387, %if.end.384
  %172 = load i32, i32* %code.addr, align 4
  %173 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %174 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call392 = call %union.tree_node* @convert(%union.tree_node* %173, %union.tree_node* %174)
  %175 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %176 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call393 = call %union.tree_node* @convert(%union.tree_node* %175, %union.tree_node* %176)
  %call394 = call %union.tree_node* @const_binop(i32 %172, %union.tree_node* %call392, %union.tree_node* %call393, i32 0)
  store %union.tree_node* %call394, %union.tree_node** %op1, align 8
  %177 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %cmp395 = icmp eq %union.tree_node* %177, null
  br i1 %cmp395, label %if.then.404, label %lor.lhs.false.397

lor.lhs.false.397:                                ; preds = %if.then.391
  %178 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common398 = bitcast %union.tree_node* %178 to %struct.tree_common*
  %public_flag399 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common398, i32 0, i32 2
  %bf.load400 = load i32, i32* %public_flag399, align 8
  %bf.lshr401 = lshr i32 %bf.load400, 19
  %bf.clear402 = and i32 %bf.lshr401, 1
  %tobool403 = icmp ne i32 %bf.clear402, 0
  br i1 %tobool403, label %if.then.404, label %if.end.405

if.then.404:                                      ; preds = %lor.lhs.false.397, %if.then.391
  br label %sw.epilog

if.end.405:                                       ; preds = %lor.lhs.false.397
  br label %if.end.407

if.else.406:                                      ; preds = %lor.lhs.false.387
  br label %sw.epilog

if.end.407:                                       ; preds = %if.end.405
  %179 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %common408 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %unsigned_flag409 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common408, i32 0, i32 2
  %bf.load410 = load i32, i32* %unsigned_flag409, align 8
  %bf.lshr411 = lshr i32 %bf.load410, 13
  %bf.clear412 = and i32 %bf.lshr411, 1
  %tobool413 = icmp ne i32 %bf.clear412, 0
  br i1 %tobool413, label %land.lhs.true.414, label %if.end.432

land.lhs.true.414:                                ; preds = %if.end.407
  %180 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %common415 = bitcast %union.tree_node* %180 to %struct.tree_common*
  %code416 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common415, i32 0, i32 2
  %bf.load417 = load i32, i32* %code416, align 8
  %bf.clear418 = and i32 %bf.load417, 255
  %cmp419 = icmp eq i32 %bf.clear418, 6
  br i1 %cmp419, label %land.lhs.true.421, label %land.lhs.true.428

land.lhs.true.421:                                ; preds = %land.lhs.true.414
  %181 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %type422 = bitcast %union.tree_node* %181 to %struct.tree_type*
  %no_force_blk_flag423 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type422, i32 0, i32 6
  %bf.load424 = load i32, i32* %no_force_blk_flag423, align 4
  %bf.lshr425 = lshr i32 %bf.load424, 17
  %bf.clear426 = and i32 %bf.lshr425, 1
  %tobool427 = icmp ne i32 %bf.clear426, 0
  br i1 %tobool427, label %if.end.432, label %land.lhs.true.428

land.lhs.true.428:                                ; preds = %land.lhs.true.421, %land.lhs.true.414
  %182 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %183 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp429 = icmp ne %union.tree_node* %182, %183
  br i1 %cmp429, label %if.then.431, label %if.end.432

if.then.431:                                      ; preds = %land.lhs.true.428
  br label %sw.epilog

if.end.432:                                       ; preds = %land.lhs.true.428, %land.lhs.true.421, %if.end.407
  %184 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %cmp433 = icmp ne %union.tree_node* %184, null
  br i1 %cmp433, label %land.lhs.true.435, label %if.end.449

land.lhs.true.435:                                ; preds = %if.end.432
  %185 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common436 = bitcast %union.tree_node* %185 to %struct.tree_common*
  %code437 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common436, i32 0, i32 2
  %bf.load438 = load i32, i32* %code437, align 8
  %bf.clear439 = and i32 %bf.load438, 255
  %186 = load i32, i32* %code.addr, align 4
  %cmp440 = icmp ne i32 %bf.clear439, %186
  br i1 %cmp440, label %if.then.445, label %lor.lhs.false.442

lor.lhs.false.442:                                ; preds = %land.lhs.true.435
  %187 = load i32, i32* %code.addr, align 4
  %cmp443 = icmp eq i32 %187, 61
  br i1 %cmp443, label %if.then.445, label %if.end.449

if.then.445:                                      ; preds = %lor.lhs.false.442, %land.lhs.true.435
  %188 = load i32, i32* %tcode, align 4
  %189 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %190 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %191 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call446 = call %union.tree_node* @convert(%union.tree_node* %190, %union.tree_node* %191)
  %192 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call447 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %188, %union.tree_node* %189, %union.tree_node* %call446, %union.tree_node* %192)
  %call448 = call %union.tree_node* @fold(%union.tree_node* %call447)
  store %union.tree_node* %call448, %union.tree_node** %retval
  br label %return

if.end.449:                                       ; preds = %lor.lhs.false.442, %if.end.432
  %193 = load i32, i32* %code.addr, align 4
  %cmp450 = icmp eq i32 %193, 61
  br i1 %cmp450, label %if.then.452, label %if.end.459

if.then.452:                                      ; preds = %if.end.449
  %194 = load i32, i32* %tcode, align 4
  %195 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %196 = load i32, i32* %code.addr, align 4
  %197 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %198 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %199 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call453 = call %union.tree_node* @convert(%union.tree_node* %198, %union.tree_node* %199)
  %200 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %201 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call454 = call %union.tree_node* @convert(%union.tree_node* %200, %union.tree_node* %201)
  %call455 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %196, %union.tree_node* %197, %union.tree_node* %call453, %union.tree_node* %call454)
  %call456 = call %union.tree_node* @fold(%union.tree_node* %call455)
  %202 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call457 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %194, %union.tree_node* %195, %union.tree_node* %call456, %union.tree_node* %202)
  %call458 = call %union.tree_node* @fold(%union.tree_node* %call457)
  store %union.tree_node* %call458, %union.tree_node** %retval
  br label %return

if.end.459:                                       ; preds = %if.end.449
  br label %sw.epilog

sw.bb.460:                                        ; preds = %if.end.39
  %203 = load i32, i32* %code.addr, align 4
  %cmp461 = icmp eq i32 %203, 66
  br i1 %cmp461, label %land.lhs.true.472, label %lor.lhs.false.463

lor.lhs.false.463:                                ; preds = %sw.bb.460
  %204 = load i32, i32* %code.addr, align 4
  %cmp464 = icmp eq i32 %204, 67
  br i1 %cmp464, label %land.lhs.true.472, label %lor.lhs.false.466

lor.lhs.false.466:                                ; preds = %lor.lhs.false.463
  %205 = load i32, i32* %code.addr, align 4
  %cmp467 = icmp eq i32 %205, 68
  br i1 %cmp467, label %land.lhs.true.472, label %lor.lhs.false.469

lor.lhs.false.469:                                ; preds = %lor.lhs.false.466
  %206 = load i32, i32* %code.addr, align 4
  %cmp470 = icmp eq i32 %206, 69
  br i1 %cmp470, label %land.lhs.true.472, label %if.end.488

land.lhs.true.472:                                ; preds = %lor.lhs.false.469, %lor.lhs.false.466, %lor.lhs.false.463, %sw.bb.460
  %207 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp473 = bitcast %union.tree_node* %207 to %struct.tree_exp*
  %operands474 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp473, i32 0, i32 2
  %arrayidx475 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands474, i32 0, i64 1
  %208 = load %union.tree_node*, %union.tree_node** %arrayidx475, align 8
  %common476 = bitcast %union.tree_node* %208 to %struct.tree_common*
  %code477 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common476, i32 0, i32 2
  %bf.load478 = load i32, i32* %code477, align 8
  %bf.clear479 = and i32 %bf.load478, 255
  %cmp480 = icmp eq i32 %bf.clear479, 25
  br i1 %cmp480, label %land.lhs.true.482, label %if.end.488

land.lhs.true.482:                                ; preds = %land.lhs.true.472
  %209 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %210 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call483 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %209, %union.tree_node* %210, i32 0)
  %call484 = call i32 @integer_zerop(%union.tree_node* %call483)
  %tobool485 = icmp ne i32 %call484, 0
  br i1 %tobool485, label %if.then.486, label %if.end.488

if.then.486:                                      ; preds = %land.lhs.true.482
  %211 = load %union.tree_node*, %union.tree_node** %type, align 8
  %212 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %213 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call487 = call %union.tree_node* @omit_one_operand(%union.tree_node* %211, %union.tree_node* %212, %union.tree_node* %213)
  store %union.tree_node* %call487, %union.tree_node** %retval
  br label %return

if.end.488:                                       ; preds = %land.lhs.true.482, %land.lhs.true.472, %lor.lhs.false.469
  br label %sw.bb.489

sw.bb.489:                                        ; preds = %if.end.39, %if.end.39, %if.end.39, %if.end.39, %if.end.39, %if.end.488
  %214 = load i32, i32* %same_p, align 4
  %tobool490 = icmp ne i32 %214, 0
  br i1 %tobool490, label %land.lhs.true.491, label %if.else.500

land.lhs.true.491:                                ; preds = %sw.bb.489
  %215 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %216 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %217 = load i32, i32* %code.addr, align 4
  %218 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call492 = call %union.tree_node* @extract_muldiv(%union.tree_node* %215, %union.tree_node* %216, i32 %217, %union.tree_node* %218)
  store %union.tree_node* %call492, %union.tree_node** %t1, align 8
  %cmp493 = icmp ne %union.tree_node* %call492, null
  br i1 %cmp493, label %if.then.495, label %if.else.500

if.then.495:                                      ; preds = %land.lhs.true.491
  %219 = load i32, i32* %tcode, align 4
  %220 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %221 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %222 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call496 = call %union.tree_node* @convert(%union.tree_node* %221, %union.tree_node* %222)
  %223 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %224 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call497 = call %union.tree_node* @convert(%union.tree_node* %223, %union.tree_node* %224)
  %call498 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %219, %union.tree_node* %220, %union.tree_node* %call496, %union.tree_node* %call497)
  %call499 = call %union.tree_node* @fold(%union.tree_node* %call498)
  store %union.tree_node* %call499, %union.tree_node** %retval
  br label %return

if.else.500:                                      ; preds = %land.lhs.true.491, %sw.bb.489
  %225 = load i32, i32* %tcode, align 4
  %cmp501 = icmp eq i32 %225, 61
  br i1 %cmp501, label %land.lhs.true.503, label %if.else.515

land.lhs.true.503:                                ; preds = %if.else.500
  %226 = load i32, i32* %code.addr, align 4
  %cmp504 = icmp eq i32 %226, 61
  br i1 %cmp504, label %land.lhs.true.506, label %if.else.515

land.lhs.true.506:                                ; preds = %land.lhs.true.503
  %227 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %228 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %229 = load i32, i32* %code.addr, align 4
  %230 = load %union.tree_node*, %union.tree_node** %wide_type.addr, align 8
  %call507 = call %union.tree_node* @extract_muldiv(%union.tree_node* %227, %union.tree_node* %228, i32 %229, %union.tree_node* %230)
  store %union.tree_node* %call507, %union.tree_node** %t1, align 8
  %cmp508 = icmp ne %union.tree_node* %call507, null
  br i1 %cmp508, label %if.then.510, label %if.else.515

if.then.510:                                      ; preds = %land.lhs.true.506
  %231 = load i32, i32* %tcode, align 4
  %232 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %233 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %234 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call511 = call %union.tree_node* @convert(%union.tree_node* %233, %union.tree_node* %234)
  %235 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %236 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call512 = call %union.tree_node* @convert(%union.tree_node* %235, %union.tree_node* %236)
  %call513 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %231, %union.tree_node* %232, %union.tree_node* %call511, %union.tree_node* %call512)
  %call514 = call %union.tree_node* @fold(%union.tree_node* %call513)
  store %union.tree_node* %call514, %union.tree_node** %retval
  br label %return

if.else.515:                                      ; preds = %land.lhs.true.506, %land.lhs.true.503, %if.else.500
  %237 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common516 = bitcast %union.tree_node* %237 to %struct.tree_common*
  %code517 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common516, i32 0, i32 2
  %bf.load518 = load i32, i32* %code517, align 8
  %bf.clear519 = and i32 %bf.load518, 255
  %cmp520 = icmp ne i32 %bf.clear519, 25
  br i1 %cmp520, label %if.then.522, label %if.end.523

if.then.522:                                      ; preds = %if.else.515
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.523:                                       ; preds = %if.else.515
  br label %if.end.524

if.end.524:                                       ; preds = %if.end.523
  br label %if.end.525

if.end.525:                                       ; preds = %if.end.524
  %238 = load i32, i32* %tcode, align 4
  %239 = load i32, i32* %code.addr, align 4
  %cmp526 = icmp eq i32 %238, %239
  br i1 %cmp526, label %land.lhs.true.528, label %if.end.545

land.lhs.true.528:                                ; preds = %if.end.525
  %240 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %241 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call529 = call %union.tree_node* @convert(%union.tree_node* %240, %union.tree_node* %241)
  %242 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %243 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call530 = call %union.tree_node* @convert(%union.tree_node* %242, %union.tree_node* %243)
  %call531 = call %union.tree_node* @const_binop(i32 61, %union.tree_node* %call529, %union.tree_node* %call530, i32 0)
  store %union.tree_node* %call531, %union.tree_node** %t1, align 8
  %cmp532 = icmp ne %union.tree_node* null, %call531
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.545

land.lhs.true.534:                                ; preds = %land.lhs.true.528
  %244 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common535 = bitcast %union.tree_node* %244 to %struct.tree_common*
  %public_flag536 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common535, i32 0, i32 2
  %bf.load537 = load i32, i32* %public_flag536, align 8
  %bf.lshr538 = lshr i32 %bf.load537, 19
  %bf.clear539 = and i32 %bf.lshr538, 1
  %tobool540 = icmp ne i32 %bf.clear539, 0
  br i1 %tobool540, label %if.end.545, label %if.then.541

if.then.541:                                      ; preds = %land.lhs.true.534
  %245 = load i32, i32* %tcode, align 4
  %246 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %247 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %248 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call542 = call %union.tree_node* @convert(%union.tree_node* %247, %union.tree_node* %248)
  %249 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call543 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %245, %union.tree_node* %246, %union.tree_node* %call542, %union.tree_node* %249)
  %call544 = call %union.tree_node* @fold(%union.tree_node* %call543)
  store %union.tree_node* %call544, %union.tree_node** %retval
  br label %return

if.end.545:                                       ; preds = %land.lhs.true.534, %land.lhs.true.528, %if.end.525
  %250 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %common546 = bitcast %union.tree_node* %250 to %struct.tree_common*
  %unsigned_flag547 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common546, i32 0, i32 2
  %bf.load548 = load i32, i32* %unsigned_flag547, align 8
  %bf.lshr549 = lshr i32 %bf.load548, 13
  %bf.clear550 = and i32 %bf.lshr549, 1
  %tobool551 = icmp ne i32 %bf.clear550, 0
  br i1 %tobool551, label %lor.lhs.false.552, label %land.lhs.true.566

lor.lhs.false.552:                                ; preds = %if.end.545
  %251 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %common553 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %code554 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common553, i32 0, i32 2
  %bf.load555 = load i32, i32* %code554, align 8
  %bf.clear556 = and i32 %bf.load555, 255
  %cmp557 = icmp eq i32 %bf.clear556, 6
  br i1 %cmp557, label %land.lhs.true.559, label %if.end.609

land.lhs.true.559:                                ; preds = %lor.lhs.false.552
  %252 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %type560 = bitcast %union.tree_node* %252 to %struct.tree_type*
  %no_force_blk_flag561 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type560, i32 0, i32 6
  %bf.load562 = load i32, i32* %no_force_blk_flag561, align 4
  %bf.lshr563 = lshr i32 %bf.load562, 17
  %bf.clear564 = and i32 %bf.lshr563, 1
  %tobool565 = icmp ne i32 %bf.clear564, 0
  br i1 %tobool565, label %land.lhs.true.566, label %if.end.609

land.lhs.true.566:                                ; preds = %land.lhs.true.559, %if.end.545
  %253 = load i32, i32* %code.addr, align 4
  %cmp567 = icmp eq i32 %253, 61
  br i1 %cmp567, label %land.lhs.true.569, label %lor.lhs.false.572

land.lhs.true.569:                                ; preds = %land.lhs.true.566
  %254 = load i32, i32* %tcode, align 4
  %cmp570 = icmp eq i32 %254, 71
  br i1 %cmp570, label %if.then.587, label %lor.lhs.false.572

lor.lhs.false.572:                                ; preds = %land.lhs.true.569, %land.lhs.true.566
  %255 = load i32, i32* %tcode, align 4
  %cmp573 = icmp eq i32 %255, 61
  br i1 %cmp573, label %land.lhs.true.575, label %if.end.609

land.lhs.true.575:                                ; preds = %lor.lhs.false.572
  %256 = load i32, i32* %code.addr, align 4
  %cmp576 = icmp ne i32 %256, 66
  br i1 %cmp576, label %land.lhs.true.578, label %if.end.609

land.lhs.true.578:                                ; preds = %land.lhs.true.575
  %257 = load i32, i32* %code.addr, align 4
  %cmp579 = icmp ne i32 %257, 67
  br i1 %cmp579, label %land.lhs.true.581, label %if.end.609

land.lhs.true.581:                                ; preds = %land.lhs.true.578
  %258 = load i32, i32* %code.addr, align 4
  %cmp582 = icmp ne i32 %258, 68
  br i1 %cmp582, label %land.lhs.true.584, label %if.end.609

land.lhs.true.584:                                ; preds = %land.lhs.true.581
  %259 = load i32, i32* %code.addr, align 4
  %cmp585 = icmp ne i32 %259, 69
  br i1 %cmp585, label %if.then.587, label %if.end.609

if.then.587:                                      ; preds = %land.lhs.true.584, %land.lhs.true.569
  %260 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %261 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call588 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %260, %union.tree_node* %261, i32 0)
  %call589 = call i32 @integer_zerop(%union.tree_node* %call588)
  %tobool590 = icmp ne i32 %call589, 0
  br i1 %tobool590, label %if.then.591, label %if.else.597

if.then.591:                                      ; preds = %if.then.587
  %262 = load i32, i32* %tcode, align 4
  %263 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %264 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %265 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call592 = call %union.tree_node* @convert(%union.tree_node* %264, %union.tree_node* %265)
  %266 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %267 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %268 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call593 = call %union.tree_node* @const_binop(i32 62, %union.tree_node* %267, %union.tree_node* %268, i32 0)
  %call594 = call %union.tree_node* @convert(%union.tree_node* %266, %union.tree_node* %call593)
  %call595 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %262, %union.tree_node* %263, %union.tree_node* %call592, %union.tree_node* %call594)
  %call596 = call %union.tree_node* @fold(%union.tree_node* %call595)
  store %union.tree_node* %call596, %union.tree_node** %retval
  br label %return

if.else.597:                                      ; preds = %if.then.587
  %269 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %270 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call598 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %269, %union.tree_node* %270, i32 0)
  %call599 = call i32 @integer_zerop(%union.tree_node* %call598)
  %tobool600 = icmp ne i32 %call599, 0
  br i1 %tobool600, label %if.then.601, label %if.end.607

if.then.601:                                      ; preds = %if.else.597
  %271 = load i32, i32* %code.addr, align 4
  %272 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %273 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %274 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call602 = call %union.tree_node* @convert(%union.tree_node* %273, %union.tree_node* %274)
  %275 = load %union.tree_node*, %union.tree_node** %ctype, align 8
  %276 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %277 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call603 = call %union.tree_node* @const_binop(i32 62, %union.tree_node* %276, %union.tree_node* %277, i32 0)
  %call604 = call %union.tree_node* @convert(%union.tree_node* %275, %union.tree_node* %call603)
  %call605 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %271, %union.tree_node* %272, %union.tree_node* %call602, %union.tree_node* %call604)
  %call606 = call %union.tree_node* @fold(%union.tree_node* %call605)
  store %union.tree_node* %call606, %union.tree_node** %retval
  br label %return

if.end.607:                                       ; preds = %if.else.597
  br label %if.end.608

if.end.608:                                       ; preds = %if.end.607
  br label %if.end.609

if.end.609:                                       ; preds = %if.end.608, %land.lhs.true.584, %land.lhs.true.581, %land.lhs.true.578, %land.lhs.true.575, %lor.lhs.false.572, %land.lhs.true.559, %lor.lhs.false.552
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.39
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.609, %if.end.459, %if.then.431, %if.else.406, %if.then.404, %if.then.380, %if.then.355, %if.end.320, %if.end.279, %if.end.232, %if.end.217, %if.then.195, %if.end.181, %if.end.172, %if.then.157, %if.end.49
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.601, %if.then.591, %if.then.541, %if.then.522, %if.then.510, %if.then.495, %if.then.486, %if.then.452, %if.then.445, %if.then.338, %if.then.313, %if.end.278, %if.then.225, %if.end.212, %if.then.177, %if.then.171, %if.then.45, %if.then
  %278 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %278
}

declare i32 @real_onep(%union.tree_node*) #3

declare i32 @real_twop(%union.tree_node*) #3

declare %union.tree_node* @save_expr(%union.tree_node*) #3

declare i32 @integer_all_onesp(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @distribute_bit_expr(i32 %code, %union.tree_node* %type, %union.tree_node* %arg0, %union.tree_node* %arg1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  %arg0.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %common = alloca %union.tree_node*, align 8
  %left = alloca %union.tree_node*, align 8
  %right = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common1 = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code2, align 8
  %bf.clear = and i32 %bf.load, 255
  %1 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common3 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp = icmp ne i32 %bf.clear, %bf.clear6
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %3 = load i32, i32* %code.addr, align 4
  %cmp11 = icmp eq i32 %bf.clear10, %3
  br i1 %cmp11, label %if.then, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common13 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp ne i32 %bf.clear16, 88
  br i1 %cmp17, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false.12
  %5 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common18 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load20 = load i32, i32* %code19, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp ne i32 %bf.clear21, 86
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false.12
  %6 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %8 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp23 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp23, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands24, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8
  %call = call i32 @operand_equal_p(%union.tree_node* %7, %union.tree_node* %9, i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp27 = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands28 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp27, i32 0, i32 2
  %arrayidx29 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands28, i32 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8
  store %union.tree_node* %11, %union.tree_node** %common, align 8
  %12 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp30 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands31 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp30, i32 0, i32 2
  %arrayidx32 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands31, i32 0, i64 1
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8
  store %union.tree_node* %13, %union.tree_node** %left, align 8
  %14 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp33 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp33, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands34, i32 0, i64 1
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8
  store %union.tree_node* %15, %union.tree_node** %right, align 8
  br label %if.end.96

if.else:                                          ; preds = %if.end
  %16 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp36 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands37 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands37, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8
  %18 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp39 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp39, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands40, i32 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8
  %call42 = call i32 @operand_equal_p(%union.tree_node* %17, %union.tree_node* %19, i32 0)
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.then.44, label %if.else.54

if.then.44:                                       ; preds = %if.else
  %20 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp45 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands46 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp45, i32 0, i32 2
  %arrayidx47 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands46, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8
  store %union.tree_node* %21, %union.tree_node** %common, align 8
  %22 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp48 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands49 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp48, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands49, i32 0, i64 1
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8
  store %union.tree_node* %23, %union.tree_node** %left, align 8
  %24 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp51 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands52 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp51, i32 0, i32 2
  %arrayidx53 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands52, i32 0, i64 0
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8
  store %union.tree_node* %25, %union.tree_node** %right, align 8
  br label %if.end.95

if.else.54:                                       ; preds = %if.else
  %26 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp55 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands56 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp55, i32 0, i32 2
  %arrayidx57 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands56, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8
  %28 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp58 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands59 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp58, i32 0, i32 2
  %arrayidx60 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands59, i32 0, i64 0
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx60, align 8
  %call61 = call i32 @operand_equal_p(%union.tree_node* %27, %union.tree_node* %29, i32 0)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.then.63, label %if.else.73

if.then.63:                                       ; preds = %if.else.54
  %30 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp64 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands65, i32 0, i64 1
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8
  store %union.tree_node* %31, %union.tree_node** %common, align 8
  %32 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp67 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands68 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp67, i32 0, i32 2
  %arrayidx69 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands68, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx69, align 8
  store %union.tree_node* %33, %union.tree_node** %left, align 8
  %34 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp70 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands71 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp70, i32 0, i32 2
  %arrayidx72 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands71, i32 0, i64 1
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx72, align 8
  store %union.tree_node* %35, %union.tree_node** %right, align 8
  br label %if.end.94

if.else.73:                                       ; preds = %if.else.54
  %36 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp74 = bitcast %union.tree_node* %36 to %struct.tree_exp*
  %operands75 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp74, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands75, i32 0, i64 1
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx76, align 8
  %38 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp77 = bitcast %union.tree_node* %38 to %struct.tree_exp*
  %operands78 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp77, i32 0, i32 2
  %arrayidx79 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands78, i32 0, i64 1
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx79, align 8
  %call80 = call i32 @operand_equal_p(%union.tree_node* %37, %union.tree_node* %39, i32 0)
  %tobool81 = icmp ne i32 %call80, 0
  br i1 %tobool81, label %if.then.82, label %if.else.92

if.then.82:                                       ; preds = %if.else.73
  %40 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp83 = bitcast %union.tree_node* %40 to %struct.tree_exp*
  %operands84 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp83, i32 0, i32 2
  %arrayidx85 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands84, i32 0, i64 1
  %41 = load %union.tree_node*, %union.tree_node** %arrayidx85, align 8
  store %union.tree_node* %41, %union.tree_node** %common, align 8
  %42 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %exp86 = bitcast %union.tree_node* %42 to %struct.tree_exp*
  %operands87 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp86, i32 0, i32 2
  %arrayidx88 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands87, i32 0, i64 0
  %43 = load %union.tree_node*, %union.tree_node** %arrayidx88, align 8
  store %union.tree_node* %43, %union.tree_node** %left, align 8
  %44 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %exp89 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands90 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp89, i32 0, i32 2
  %arrayidx91 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands90, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx91, align 8
  store %union.tree_node* %45, %union.tree_node** %right, align 8
  br label %if.end.93

if.else.92:                                       ; preds = %if.else.73
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.93:                                        ; preds = %if.then.82
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.then.63
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.then.44
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.then.26
  %46 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common97 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %code98 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load99 = load i32, i32* %code98, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %47 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %48 = load %union.tree_node*, %union.tree_node** %common, align 8
  %49 = load i32, i32* %code.addr, align 4
  %50 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %51 = load %union.tree_node*, %union.tree_node** %left, align 8
  %52 = load %union.tree_node*, %union.tree_node** %right, align 8
  %call101 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %49, %union.tree_node* %50, %union.tree_node* %51, %union.tree_node* %52)
  %call102 = call %union.tree_node* @fold(%union.tree_node* %call101)
  %call103 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %bf.clear100, %union.tree_node* %47, %union.tree_node* %48, %union.tree_node* %call102)
  %call104 = call %union.tree_node* @fold(%union.tree_node* %call103)
  store %union.tree_node* %call104, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.96, %if.else.92, %if.then
  %53 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %53
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @exact_real_inverse(i32, %struct.realvaluetype*) #3

; Function Attrs: nounwind uwtable
define internal i32 @multiple_of_p(%union.tree_node* %type, %union.tree_node* %top, %union.tree_node* %bottom) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  %top.addr = alloca %union.tree_node*, align 8
  %bottom.addr = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  %t1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %top, %union.tree_node** %top.addr, align 8
  store %union.tree_node* %bottom, %union.tree_node** %bottom.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call = call i32 @operand_equal_p(%union.tree_node* %0, %union.tree_node* %1, i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 6
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %3 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %common3 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %sw.default [
    i32 61, label %sw.bb
    i32 59, label %sw.bb.14
    i32 60, label %sw.bb.14
    i32 82, label %sw.bb.25
    i32 115, label %sw.bb.64
    i32 118, label %sw.bb.93
    i32 25, label %sw.bb.98
  ]

sw.bb:                                            ; preds = %if.end.2
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %7 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call7 = call i32 @multiple_of_p(%union.tree_node* %4, %union.tree_node* %6, %union.tree_node* %7)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb
  %8 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %9 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp9 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands10 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp9, i32 0, i32 2
  %arrayidx11 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands10, i32 0, i64 1
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8
  %11 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call12 = call i32 @multiple_of_p(%union.tree_node* %8, %union.tree_node* %10, %union.tree_node* %11)
  %tobool13 = icmp ne i32 %call12, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %12 = phi i1 [ true, %sw.bb ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %12 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

sw.bb.14:                                         ; preds = %if.end.2, %if.end.2
  %13 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp15 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  %16 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call18 = call i32 @multiple_of_p(%union.tree_node* %13, %union.tree_node* %15, %union.tree_node* %16)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.14
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp20 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp20, i32 0, i32 2
  %arrayidx22 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands21, i32 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8
  %20 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call23 = call i32 @multiple_of_p(%union.tree_node* %17, %union.tree_node* %19, %union.tree_node* %20)
  %tobool24 = icmp ne i32 %call23, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.14
  %21 = phi i1 [ false, %sw.bb.14 ], [ %tobool24, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.25:                                         ; preds = %if.end.2
  %22 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp26 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands27 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp26, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands27, i32 0, i64 1
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8
  %common29 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 25
  br i1 %cmp33, label %if.then.34, label %if.end.63

if.then.34:                                       ; preds = %sw.bb.25
  %24 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp35 = bitcast %union.tree_node* %24 to %struct.tree_exp*
  %operands36 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp35, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands36, i32 0, i64 1
  %25 = load %union.tree_node*, %union.tree_node** %arrayidx37, align 8
  store %union.tree_node* %25, %union.tree_node** %op1, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  %common38 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type39, align 8
  %type40 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i32 0, i32 6
  %bf.load41 = load i32, i32* %precision, align 4
  %bf.clear42 = and i32 %bf.load41, 511
  %conv = zext i32 %bf.clear42 to i64
  %28 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %int_cst = bitcast %union.tree_node* %28 to %struct.tree_int_cst*
  %int_cst43 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst43, i32 0, i32 0
  %29 = load i64, i64* %low, align 8
  %cmp44 = icmp ugt i64 %conv, %29
  br i1 %cmp44, label %land.lhs.true, label %if.end.62

land.lhs.true:                                    ; preds = %if.then.34
  %30 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %int_cst46 = bitcast %union.tree_node* %30 to %struct.tree_int_cst*
  %int_cst47 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst46, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst47, i32 0, i32 1
  %31 = load i64, i64* %high, align 8
  %cmp48 = icmp eq i64 %31, 0
  br i1 %cmp48, label %land.lhs.true.50, label %if.end.62

land.lhs.true.50:                                 ; preds = %land.lhs.true
  %32 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  %34 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call51 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %33, %union.tree_node* %34, i32 0)
  %call52 = call %union.tree_node* @convert(%union.tree_node* %32, %union.tree_node* %call51)
  store %union.tree_node* %call52, %union.tree_node** %t1, align 8
  %cmp53 = icmp ne %union.tree_node* null, %call52
  br i1 %cmp53, label %land.lhs.true.55, label %if.end.62

land.lhs.true.55:                                 ; preds = %land.lhs.true.50
  %35 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common56 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 2
  %bf.load57 = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load57, 19
  %bf.clear58 = and i32 %bf.lshr, 1
  %tobool59 = icmp ne i32 %bf.clear58, 0
  br i1 %tobool59, label %if.end.62, label %if.then.60

if.then.60:                                       ; preds = %land.lhs.true.55
  %36 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %38 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call61 = call i32 @multiple_of_p(%union.tree_node* %36, %union.tree_node* %37, %union.tree_node* %38)
  store i32 %call61, i32* %retval
  br label %return

if.end.62:                                        ; preds = %land.lhs.true.55, %land.lhs.true.50, %land.lhs.true, %if.then.34
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %sw.bb.25
  store i32 0, i32* %retval
  br label %return

sw.bb.64:                                         ; preds = %if.end.2
  %39 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp65 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands66 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp65, i32 0, i32 2
  %arrayidx67 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands66, i32 0, i64 0
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8
  %common68 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type69, align 8
  %common70 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 2
  %bf.load72 = load i32, i32* %code71, align 8
  %bf.clear73 = and i32 %bf.load72, 255
  %cmp74 = icmp ne i32 %bf.clear73, 6
  br i1 %cmp74, label %if.then.91, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.64
  %42 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type76 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %precision77 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type76, i32 0, i32 6
  %bf.load78 = load i32, i32* %precision77, align 4
  %bf.clear79 = and i32 %bf.load78, 511
  %43 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp80 = bitcast %union.tree_node* %43 to %struct.tree_exp*
  %operands81 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp80, i32 0, i32 2
  %arrayidx82 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands81, i32 0, i64 0
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx82, align 8
  %common83 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %type84 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common83, i32 0, i32 1
  %45 = load %union.tree_node*, %union.tree_node** %type84, align 8
  %type85 = bitcast %union.tree_node* %45 to %struct.tree_type*
  %precision86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i32 0, i32 6
  %bf.load87 = load i32, i32* %precision86, align 4
  %bf.clear88 = and i32 %bf.load87, 511
  %cmp89 = icmp slt i32 %bf.clear79, %bf.clear88
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %lor.lhs.false, %sw.bb.64
  store i32 0, i32* %retval
  br label %return

if.end.92:                                        ; preds = %lor.lhs.false
  br label %sw.bb.93

sw.bb.93:                                         ; preds = %if.end.2, %if.end.92
  %46 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %47 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %exp94 = bitcast %union.tree_node* %47 to %struct.tree_exp*
  %operands95 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp94, i32 0, i32 2
  %arrayidx96 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands95, i32 0, i64 0
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx96, align 8
  %49 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call97 = call i32 @multiple_of_p(%union.tree_node* %46, %union.tree_node* %48, %union.tree_node* %49)
  store i32 %call97, i32* %retval
  br label %return

sw.bb.98:                                         ; preds = %if.end.2
  %50 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %common99 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %code100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common99, i32 0, i32 2
  %bf.load101 = load i32, i32* %code100, align 8
  %bf.clear102 = and i32 %bf.load101, 255
  %cmp103 = icmp ne i32 %bf.clear102, 25
  br i1 %cmp103, label %if.then.119, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %sw.bb.98
  %51 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common106 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 2
  %bf.load107 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 13
  %bf.clear109 = and i32 %bf.lshr108, 1
  %tobool110 = icmp ne i32 %bf.clear109, 0
  br i1 %tobool110, label %land.lhs.true.111, label %if.end.120

land.lhs.true.111:                                ; preds = %lor.lhs.false.105
  %52 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %call112 = call i32 @tree_int_cst_sgn(%union.tree_node* %52)
  %cmp113 = icmp slt i32 %call112, 0
  br i1 %cmp113, label %if.then.119, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %land.lhs.true.111
  %53 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call116 = call i32 @tree_int_cst_sgn(%union.tree_node* %53)
  %cmp117 = icmp slt i32 %call116, 0
  br i1 %cmp117, label %if.then.119, label %if.end.120

if.then.119:                                      ; preds = %lor.lhs.false.115, %land.lhs.true.111, %sw.bb.98
  store i32 0, i32* %retval
  br label %return

if.end.120:                                       ; preds = %lor.lhs.false.115, %lor.lhs.false.105
  %54 = load %union.tree_node*, %union.tree_node** %top.addr, align 8
  %55 = load %union.tree_node*, %union.tree_node** %bottom.addr, align 8
  %call121 = call %union.tree_node* @const_binop(i32 66, %union.tree_node* %54, %union.tree_node* %55, i32 0)
  %call122 = call i32 @integer_zerop(%union.tree_node* %call121)
  store i32 %call122, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end.2
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %if.end.120, %if.then.119, %sw.bb.93, %if.then.91, %if.end.63, %if.then.60, %land.end, %lor.end, %if.then.1, %if.then
  %56 = load i32, i32* %retval
  ret i32 %56
}

declare i32 @tree_int_cst_sgn(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @fold_range_test(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %or_op = alloca i32, align 4
  %in0_p = alloca i32, align 4
  %in1_p = alloca i32, align 4
  %in_p = alloca i32, align 4
  %low0 = alloca %union.tree_node*, align 8
  %low1 = alloca %union.tree_node*, align 8
  %low = alloca %union.tree_node*, align 8
  %high0 = alloca %union.tree_node*, align 8
  %high1 = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  %lhs = alloca %union.tree_node*, align 8
  %rhs = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  %common85 = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 92
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 94
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32
  store i32 %lor.ext, i32* %or_op, align 4
  %3 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp6 = bitcast %union.tree_node* %3 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call = call %union.tree_node* @make_range(%union.tree_node* %4, i32* %in0_p, %union.tree_node** %low0, %union.tree_node** %high0)
  store %union.tree_node* %call, %union.tree_node** %lhs, align 8
  %5 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp7 = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands8 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7, i32 0, i32 2
  %arrayidx9 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands8, i32 0, i64 1
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8
  %call10 = call %union.tree_node* @make_range(%union.tree_node* %6, i32* %in1_p, %union.tree_node** %low1, %union.tree_node** %high1)
  store %union.tree_node* %call10, %union.tree_node** %rhs, align 8
  %7 = load i32, i32* %or_op, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %8 = load i32, i32* %in0_p, align 4
  %tobool11 = icmp ne i32 %8, 0
  %lnot = xor i1 %tobool11, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %in0_p, align 4
  %9 = load i32, i32* %in1_p, align 4
  %tobool12 = icmp ne i32 %9, 0
  %lnot13 = xor i1 %tobool12, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  store i32 %lnot.ext14, i32* %in1_p, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.end
  %10 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %cmp15 = icmp eq %union.tree_node* %10, null
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %cmp16 = icmp eq %union.tree_node* %11, null
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false
  %12 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %13 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %call18 = call i32 @operand_equal_p(%union.tree_node* %12, %union.tree_node* %13, i32 0)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false.17, %lor.lhs.false, %if.end
  %14 = load i32, i32* %in0_p, align 4
  %15 = load %union.tree_node*, %union.tree_node** %low0, align 8
  %16 = load %union.tree_node*, %union.tree_node** %high0, align 8
  %17 = load i32, i32* %in1_p, align 4
  %18 = load %union.tree_node*, %union.tree_node** %low1, align 8
  %19 = load %union.tree_node*, %union.tree_node** %high1, align 8
  %call20 = call i32 @merge_ranges(i32* %in_p, %union.tree_node** %low, %union.tree_node** %high, i32 %14, %union.tree_node* %15, %union.tree_node* %16, i32 %17, %union.tree_node* %18, %union.tree_node* %19)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %land.lhs.true.22, label %if.else

land.lhs.true.22:                                 ; preds = %land.lhs.true
  %20 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common23 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type, align 8
  %22 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %cmp24 = icmp ne %union.tree_node* %22, null
  br i1 %cmp24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.22
  %23 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  br label %cond.end.28

cond.false:                                       ; preds = %land.lhs.true.22
  %24 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %cmp25 = icmp ne %union.tree_node* %24, null
  br i1 %cmp25, label %cond.true.26, label %cond.false.27

cond.true.26:                                     ; preds = %cond.false
  %25 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  br label %cond.end

cond.false.27:                                    ; preds = %cond.false
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false.27, %cond.true.26
  %cond = phi %union.tree_node* [ %25, %cond.true.26 ], [ %26, %cond.false.27 ]
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.end, %cond.true
  %cond29 = phi %union.tree_node* [ %23, %cond.true ], [ %cond, %cond.end ]
  %27 = load i32, i32* %in_p, align 4
  %28 = load %union.tree_node*, %union.tree_node** %low, align 8
  %29 = load %union.tree_node*, %union.tree_node** %high, align 8
  %call30 = call %union.tree_node* @build_range_check(%union.tree_node* %21, %union.tree_node* %cond29, i32 %27, %union.tree_node* %28, %union.tree_node* %29)
  store %union.tree_node* %call30, %union.tree_node** %tem, align 8
  %cmp31 = icmp ne %union.tree_node* null, %call30
  br i1 %cmp31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %cond.end.28
  %30 = load i32, i32* %or_op, align 4
  %tobool33 = icmp ne i32 %30, 0
  br i1 %tobool33, label %cond.true.34, label %cond.false.36

cond.true.34:                                     ; preds = %if.then.32
  %31 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call35 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %31)
  br label %cond.end.37

cond.false.36:                                    ; preds = %if.then.32
  %32 = load %union.tree_node*, %union.tree_node** %tem, align 8
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.false.36, %cond.true.34
  %cond38 = phi %union.tree_node* [ %call35, %cond.true.34 ], [ %32, %cond.false.36 ]
  store %union.tree_node* %cond38, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %cond.end.28, %land.lhs.true, %lor.lhs.false.17
  %33 = load i32, i32* @ix86_branch_cost, align 4
  %cmp39 = icmp sge i32 %33, 2
  br i1 %cmp39, label %land.lhs.true.40, label %if.end.125

land.lhs.true.40:                                 ; preds = %if.else
  %34 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %cmp41 = icmp ne %union.tree_node* %34, null
  br i1 %cmp41, label %land.lhs.true.42, label %if.end.125

land.lhs.true.42:                                 ; preds = %land.lhs.true.40
  %35 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %cmp43 = icmp ne %union.tree_node* %35, null
  br i1 %cmp43, label %land.lhs.true.44, label %if.end.125

land.lhs.true.44:                                 ; preds = %land.lhs.true.42
  %36 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common45 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 91
  br i1 %cmp49, label %land.lhs.true.56, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %land.lhs.true.44
  %37 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common51 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp eq i32 %bf.clear54, 92
  br i1 %cmp55, label %land.lhs.true.56, label %if.end.125

land.lhs.true.56:                                 ; preds = %lor.lhs.false.50, %land.lhs.true.44
  %38 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %39 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %call57 = call i32 @operand_equal_p(%union.tree_node* %38, %union.tree_node* %39, i32 0)
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then.59, label %if.end.125

if.then.59:                                       ; preds = %land.lhs.true.56
  %40 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %call60 = call i32 @simple_operand_p(%union.tree_node* %40)
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.then.62, label %if.else.78

if.then.62:                                       ; preds = %if.then.59
  %41 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common63 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 2
  %bf.load65 = load i32, i32* %code64, align 8
  %bf.clear66 = and i32 %bf.load65, 255
  %cmp67 = icmp eq i32 %bf.clear66, 91
  %cond68 = select i1 %cmp67, i32 93, i32 94
  %42 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common69 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type70, align 8
  %44 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp71 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands72 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp71, i32 0, i32 2
  %arrayidx73 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands72, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx73, align 8
  %46 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp74 = bitcast %union.tree_node* %46 to %struct.tree_exp*
  %operands75 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp74, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands75, i32 0, i64 1
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx76, align 8
  %call77 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond68, %union.tree_node* %43, %union.tree_node* %45, %union.tree_node* %47)
  store %union.tree_node* %call77, %union.tree_node** %retval
  br label %return

if.else.78:                                       ; preds = %if.then.59
  %call79 = call i32 @global_bindings_p()
  %cmp80 = icmp eq i32 %call79, 0
  br i1 %cmp80, label %land.lhs.true.81, label %if.end.123

land.lhs.true.81:                                 ; preds = %if.else.78
  %48 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %call82 = call i32 @contains_placeholder_p(%union.tree_node* %48)
  %tobool83 = icmp ne i32 %call82, 0
  br i1 %tobool83, label %if.end.123, label %if.then.84

if.then.84:                                       ; preds = %land.lhs.true.81
  %49 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %call86 = call %union.tree_node* @save_expr(%union.tree_node* %49)
  store %union.tree_node* %call86, %union.tree_node** %common85, align 8
  %50 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common87 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type88, align 8
  %52 = load %union.tree_node*, %union.tree_node** %common85, align 8
  %53 = load i32, i32* %or_op, align 4
  %tobool89 = icmp ne i32 %53, 0
  br i1 %tobool89, label %cond.true.90, label %cond.false.94

cond.true.90:                                     ; preds = %if.then.84
  %54 = load i32, i32* %in0_p, align 4
  %tobool91 = icmp ne i32 %54, 0
  %lnot92 = xor i1 %tobool91, true
  %lnot.ext93 = zext i1 %lnot92 to i32
  br label %cond.end.95

cond.false.94:                                    ; preds = %if.then.84
  %55 = load i32, i32* %in0_p, align 4
  br label %cond.end.95

cond.end.95:                                      ; preds = %cond.false.94, %cond.true.90
  %cond96 = phi i32 [ %lnot.ext93, %cond.true.90 ], [ %55, %cond.false.94 ]
  %56 = load %union.tree_node*, %union.tree_node** %low0, align 8
  %57 = load %union.tree_node*, %union.tree_node** %high0, align 8
  %call97 = call %union.tree_node* @build_range_check(%union.tree_node* %51, %union.tree_node* %52, i32 %cond96, %union.tree_node* %56, %union.tree_node* %57)
  store %union.tree_node* %call97, %union.tree_node** %lhs, align 8
  %cmp98 = icmp ne %union.tree_node* null, %call97
  br i1 %cmp98, label %land.lhs.true.99, label %if.end.122

land.lhs.true.99:                                 ; preds = %cond.end.95
  %58 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common100 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type101, align 8
  %60 = load %union.tree_node*, %union.tree_node** %common85, align 8
  %61 = load i32, i32* %or_op, align 4
  %tobool102 = icmp ne i32 %61, 0
  br i1 %tobool102, label %cond.true.103, label %cond.false.107

cond.true.103:                                    ; preds = %land.lhs.true.99
  %62 = load i32, i32* %in1_p, align 4
  %tobool104 = icmp ne i32 %62, 0
  %lnot105 = xor i1 %tobool104, true
  %lnot.ext106 = zext i1 %lnot105 to i32
  br label %cond.end.108

cond.false.107:                                   ; preds = %land.lhs.true.99
  %63 = load i32, i32* %in1_p, align 4
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.107, %cond.true.103
  %cond109 = phi i32 [ %lnot.ext106, %cond.true.103 ], [ %63, %cond.false.107 ]
  %64 = load %union.tree_node*, %union.tree_node** %low1, align 8
  %65 = load %union.tree_node*, %union.tree_node** %high1, align 8
  %call110 = call %union.tree_node* @build_range_check(%union.tree_node* %59, %union.tree_node* %60, i32 %cond109, %union.tree_node* %64, %union.tree_node* %65)
  store %union.tree_node* %call110, %union.tree_node** %rhs, align 8
  %cmp111 = icmp ne %union.tree_node* null, %call110
  br i1 %cmp111, label %if.then.112, label %if.end.122

if.then.112:                                      ; preds = %cond.end.108
  %66 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common113 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %code114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 2
  %bf.load115 = load i32, i32* %code114, align 8
  %bf.clear116 = and i32 %bf.load115, 255
  %cmp117 = icmp eq i32 %bf.clear116, 91
  %cond118 = select i1 %cmp117, i32 93, i32 94
  %67 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common119 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %type120, align 8
  %69 = load %union.tree_node*, %union.tree_node** %lhs, align 8
  %70 = load %union.tree_node*, %union.tree_node** %rhs, align 8
  %call121 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %cond118, %union.tree_node* %68, %union.tree_node* %69, %union.tree_node* %70)
  store %union.tree_node* %call121, %union.tree_node** %retval
  br label %return

if.end.122:                                       ; preds = %cond.end.108, %cond.end.95
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %land.lhs.true.81, %if.else.78
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %land.lhs.true.56, %lor.lhs.false.50, %land.lhs.true.42, %land.lhs.true.40, %if.else
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.126, %if.then.112, %if.then.62, %cond.end.37
  %71 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %71
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @fold_truthop(i32 %code, %union.tree_node* %truth_type, %union.tree_node* %lhs, %union.tree_node* %rhs) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %truth_type.addr = alloca %union.tree_node*, align 8
  %lhs.addr = alloca %union.tree_node*, align 8
  %rhs.addr = alloca %union.tree_node*, align 8
  %wanted_code = alloca i32, align 4
  %lcode = alloca i32, align 4
  %rcode = alloca i32, align 4
  %ll_arg = alloca %union.tree_node*, align 8
  %lr_arg = alloca %union.tree_node*, align 8
  %rl_arg = alloca %union.tree_node*, align 8
  %rr_arg = alloca %union.tree_node*, align 8
  %ll_inner = alloca %union.tree_node*, align 8
  %lr_inner = alloca %union.tree_node*, align 8
  %rl_inner = alloca %union.tree_node*, align 8
  %rr_inner = alloca %union.tree_node*, align 8
  %ll_bitsize = alloca i64, align 8
  %ll_bitpos = alloca i64, align 8
  %lr_bitsize = alloca i64, align 8
  %lr_bitpos = alloca i64, align 8
  %rl_bitsize = alloca i64, align 8
  %rl_bitpos = alloca i64, align 8
  %rr_bitsize = alloca i64, align 8
  %rr_bitpos = alloca i64, align 8
  %xll_bitpos = alloca i64, align 8
  %xlr_bitpos = alloca i64, align 8
  %xrl_bitpos = alloca i64, align 8
  %xrr_bitpos = alloca i64, align 8
  %lnbitsize = alloca i64, align 8
  %lnbitpos = alloca i64, align 8
  %rnbitsize = alloca i64, align 8
  %rnbitpos = alloca i64, align 8
  %ll_unsignedp = alloca i32, align 4
  %lr_unsignedp = alloca i32, align 4
  %rl_unsignedp = alloca i32, align 4
  %rr_unsignedp = alloca i32, align 4
  %ll_mode = alloca i32, align 4
  %lr_mode = alloca i32, align 4
  %rl_mode = alloca i32, align 4
  %rr_mode = alloca i32, align 4
  %lnmode = alloca i32, align 4
  %rnmode = alloca i32, align 4
  %ll_mask = alloca %union.tree_node*, align 8
  %lr_mask = alloca %union.tree_node*, align 8
  %rl_mask = alloca %union.tree_node*, align 8
  %rr_mask = alloca %union.tree_node*, align 8
  %ll_and_mask = alloca %union.tree_node*, align 8
  %lr_and_mask = alloca %union.tree_node*, align 8
  %rl_and_mask = alloca %union.tree_node*, align 8
  %rr_and_mask = alloca %union.tree_node*, align 8
  %l_const = alloca %union.tree_node*, align 8
  %r_const = alloca %union.tree_node*, align 8
  %lntype = alloca %union.tree_node*, align 8
  %rntype = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %first_bit = alloca i32, align 4
  %end_bit = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %type385 = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %truth_type, %union.tree_node** %truth_type.addr, align 8
  store %union.tree_node* %lhs, %union.tree_node** %lhs.addr, align 8
  store %union.tree_node* %rhs, %union.tree_node** %rhs.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 8
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %side_effects_flag2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %side_effects_flag2, align 8
  %bf.lshr4 = lshr i32 %bf.load3, 8
  %bf.clear5 = and i32 %bf.lshr4, 1
  %tobool6 = icmp ne i32 %bf.clear5, 0
  br i1 %tobool6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  store i32 %bf.clear10, i32* %lcode, align 4
  %3 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common11 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  store i32 %bf.clear14, i32* %rcode, align 4
  %4 = load i32, i32* %lcode, align 4
  %cmp = icmp eq i32 %4, 88
  br i1 %cmp, label %land.lhs.true, label %if.end.18

land.lhs.true:                                    ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call = call i32 @integer_onep(%union.tree_node* %6)
  %tobool15 = icmp ne i32 %call, 0
  br i1 %tobool15, label %if.then.16, label %if.end.18

if.then.16:                                       ; preds = %land.lhs.true
  store i32 102, i32* %lcode, align 4
  %7 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call17 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 102, %union.tree_node* %7, %union.tree_node* %8, %union.tree_node* %9)
  store %union.tree_node* %call17, %union.tree_node** %lhs.addr, align 8
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.16, %land.lhs.true, %if.end
  %10 = load i32, i32* %rcode, align 4
  %cmp19 = icmp eq i32 %10, 88
  br i1 %cmp19, label %land.lhs.true.20, label %if.end.28

land.lhs.true.20:                                 ; preds = %if.end.18
  %11 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp21 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands22, i32 0, i64 1
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  %call24 = call i32 @integer_onep(%union.tree_node* %12)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %land.lhs.true.20
  store i32 102, i32* %rcode, align 4
  %13 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call27 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 102, %union.tree_node* %13, %union.tree_node* %14, %union.tree_node* %15)
  store %union.tree_node* %call27, %union.tree_node** %rhs.addr, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %land.lhs.true.20, %if.end.18
  %16 = load i32, i32* %lcode, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx29 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %17 = load i8, i8* %arrayidx29, align 1
  %conv = sext i8 %17 to i32
  %cmp30 = icmp ne i32 %conv, 60
  br i1 %cmp30, label %if.then.38, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %if.end.28
  %18 = load i32, i32* %rcode, align 4
  %idxprom33 = sext i32 %18 to i64
  %arrayidx34 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom33
  %19 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %19 to i32
  %cmp36 = icmp ne i32 %conv35, 60
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %lor.lhs.false.32, %if.end.28
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.39:                                        ; preds = %lor.lhs.false.32
  %20 = load i32, i32* %code.addr, align 4
  %cmp40 = icmp eq i32 %20, 93
  br i1 %cmp40, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.39
  %21 = load i32, i32* %code.addr, align 4
  %cmp42 = icmp eq i32 %21, 91
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.39
  %22 = phi i1 [ true, %if.end.39 ], [ %cmp42, %lor.rhs ]
  %cond = select i1 %22, i32 93, i32 94
  store i32 %cond, i32* %code.addr, align 4
  %23 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp44 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands45 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp44, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands45, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8
  store %union.tree_node* %24, %union.tree_node** %ll_arg, align 8
  %25 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %exp47 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands48 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp47, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands48, i32 0, i64 1
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx49, align 8
  store %union.tree_node* %26, %union.tree_node** %lr_arg, align 8
  %27 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp50 = bitcast %union.tree_node* %27 to %struct.tree_exp*
  %operands51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp50, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands51, i32 0, i64 0
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8
  store %union.tree_node* %28, %union.tree_node** %rl_arg, align 8
  %29 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %exp53 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp53, i32 0, i32 2
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands54, i32 0, i64 1
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8
  store %union.tree_node* %30, %union.tree_node** %rr_arg, align 8
  %31 = load i32, i32* @ix86_branch_cost, align 4
  %cmp56 = icmp sge i32 %31, 2
  br i1 %cmp56, label %land.lhs.true.58, label %if.end.94

land.lhs.true.58:                                 ; preds = %lor.end
  %32 = load %union.tree_node*, %union.tree_node** %rl_arg, align 8
  %common59 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common60 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load62 = load i32, i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 7
  br i1 %cmp64, label %if.end.94, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %land.lhs.true.58
  %34 = load %union.tree_node*, %union.tree_node** %rl_arg, align 8
  %common67 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type68, align 8
  %common69 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load71 = load i32, i32* %code70, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  %cmp73 = icmp eq i32 %bf.clear72, 8
  br i1 %cmp73, label %land.lhs.true.75, label %land.lhs.true.86

land.lhs.true.75:                                 ; preds = %lor.lhs.false.66
  %36 = load %union.tree_node*, %union.tree_node** %rl_arg, align 8
  %common76 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type77, align 8
  %common78 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type79 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type79, align 8
  %common80 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 2
  %bf.load82 = load i32, i32* %code81, align 8
  %bf.clear83 = and i32 %bf.load82, 255
  %cmp84 = icmp eq i32 %bf.clear83, 7
  br i1 %cmp84, label %if.end.94, label %land.lhs.true.86

land.lhs.true.86:                                 ; preds = %land.lhs.true.75, %lor.lhs.false.66
  %39 = load %union.tree_node*, %union.tree_node** %rl_arg, align 8
  %call87 = call i32 @simple_operand_p(%union.tree_node* %39)
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %land.lhs.true.89, label %if.end.94

land.lhs.true.89:                                 ; preds = %land.lhs.true.86
  %40 = load %union.tree_node*, %union.tree_node** %rr_arg, align 8
  %call90 = call i32 @simple_operand_p(%union.tree_node* %40)
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.then.92, label %if.end.94

if.then.92:                                       ; preds = %land.lhs.true.89
  %41 = load i32, i32* %code.addr, align 4
  %42 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %43 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %44 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call93 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %41, %union.tree_node* %42, %union.tree_node* %43, %union.tree_node* %44)
  store %union.tree_node* %call93, %union.tree_node** %retval
  br label %return

if.end.94:                                        ; preds = %land.lhs.true.89, %land.lhs.true.86, %land.lhs.true.75, %land.lhs.true.58, %lor.end
  %45 = load i32, i32* %lcode, align 4
  %cmp95 = icmp ne i32 %45, 101
  br i1 %cmp95, label %land.lhs.true.97, label %lor.lhs.false.100

land.lhs.true.97:                                 ; preds = %if.end.94
  %46 = load i32, i32* %lcode, align 4
  %cmp98 = icmp ne i32 %46, 102
  br i1 %cmp98, label %if.then.106, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %land.lhs.true.97, %if.end.94
  %47 = load i32, i32* %rcode, align 4
  %cmp101 = icmp ne i32 %47, 101
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.107

land.lhs.true.103:                                ; preds = %lor.lhs.false.100
  %48 = load i32, i32* %rcode, align 4
  %cmp104 = icmp ne i32 %48, 102
  br i1 %cmp104, label %if.then.106, label %if.end.107

if.then.106:                                      ; preds = %land.lhs.true.103, %land.lhs.true.97
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.107:                                       ; preds = %land.lhs.true.103, %lor.lhs.false.100
  store i32 0, i32* %volatilep, align 4
  %49 = load %union.tree_node*, %union.tree_node** %ll_arg, align 8
  %call108 = call %union.tree_node* @decode_field_reference(%union.tree_node* %49, i64* %ll_bitsize, i64* %ll_bitpos, i32* %ll_mode, i32* %ll_unsignedp, i32* %volatilep, %union.tree_node** %ll_mask, %union.tree_node** %ll_and_mask)
  store %union.tree_node* %call108, %union.tree_node** %ll_inner, align 8
  %50 = load %union.tree_node*, %union.tree_node** %lr_arg, align 8
  %call109 = call %union.tree_node* @decode_field_reference(%union.tree_node* %50, i64* %lr_bitsize, i64* %lr_bitpos, i32* %lr_mode, i32* %lr_unsignedp, i32* %volatilep, %union.tree_node** %lr_mask, %union.tree_node** %lr_and_mask)
  store %union.tree_node* %call109, %union.tree_node** %lr_inner, align 8
  %51 = load %union.tree_node*, %union.tree_node** %rl_arg, align 8
  %call110 = call %union.tree_node* @decode_field_reference(%union.tree_node* %51, i64* %rl_bitsize, i64* %rl_bitpos, i32* %rl_mode, i32* %rl_unsignedp, i32* %volatilep, %union.tree_node** %rl_mask, %union.tree_node** %rl_and_mask)
  store %union.tree_node* %call110, %union.tree_node** %rl_inner, align 8
  %52 = load %union.tree_node*, %union.tree_node** %rr_arg, align 8
  %call111 = call %union.tree_node* @decode_field_reference(%union.tree_node* %52, i64* %rr_bitsize, i64* %rr_bitpos, i32* %rr_mode, i32* %rr_unsignedp, i32* %volatilep, %union.tree_node** %rr_mask, %union.tree_node** %rr_and_mask)
  store %union.tree_node* %call111, %union.tree_node** %rr_inner, align 8
  %53 = load i32, i32* %volatilep, align 4
  %tobool112 = icmp ne i32 %53, 0
  br i1 %tobool112, label %if.then.122, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %if.end.107
  %54 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %cmp114 = icmp eq %union.tree_node* %54, null
  br i1 %cmp114, label %if.then.122, label %lor.lhs.false.116

lor.lhs.false.116:                                ; preds = %lor.lhs.false.113
  %55 = load %union.tree_node*, %union.tree_node** %rl_inner, align 8
  %cmp117 = icmp eq %union.tree_node* %55, null
  br i1 %cmp117, label %if.then.122, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %lor.lhs.false.116
  %56 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %57 = load %union.tree_node*, %union.tree_node** %rl_inner, align 8
  %call120 = call i32 @operand_equal_p(%union.tree_node* %56, %union.tree_node* %57, i32 0)
  %tobool121 = icmp ne i32 %call120, 0
  br i1 %tobool121, label %if.end.123, label %if.then.122

if.then.122:                                      ; preds = %lor.lhs.false.119, %lor.lhs.false.116, %lor.lhs.false.113, %if.end.107
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.123:                                       ; preds = %lor.lhs.false.119
  %58 = load %union.tree_node*, %union.tree_node** %lr_arg, align 8
  %common124 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %code125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 2
  %bf.load126 = load i32, i32* %code125, align 8
  %bf.clear127 = and i32 %bf.load126, 255
  %cmp128 = icmp eq i32 %bf.clear127, 25
  br i1 %cmp128, label %land.lhs.true.130, label %if.else

land.lhs.true.130:                                ; preds = %if.end.123
  %59 = load %union.tree_node*, %union.tree_node** %rr_arg, align 8
  %common131 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %code132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 2
  %bf.load133 = load i32, i32* %code132, align 8
  %bf.clear134 = and i32 %bf.load133, 255
  %cmp135 = icmp eq i32 %bf.clear134, 25
  br i1 %cmp135, label %if.then.137, label %if.else

if.then.137:                                      ; preds = %land.lhs.true.130
  %60 = load %union.tree_node*, %union.tree_node** %lr_arg, align 8
  store %union.tree_node* %60, %union.tree_node** %l_const, align 8
  %61 = load %union.tree_node*, %union.tree_node** %rr_arg, align 8
  store %union.tree_node* %61, %union.tree_node** %r_const, align 8
  br label %if.end.149

if.else:                                          ; preds = %land.lhs.true.130, %if.end.123
  %62 = load %union.tree_node*, %union.tree_node** %lr_inner, align 8
  %cmp138 = icmp eq %union.tree_node* %62, null
  br i1 %cmp138, label %if.then.146, label %lor.lhs.false.140

lor.lhs.false.140:                                ; preds = %if.else
  %63 = load %union.tree_node*, %union.tree_node** %rr_inner, align 8
  %cmp141 = icmp eq %union.tree_node* %63, null
  br i1 %cmp141, label %if.then.146, label %lor.lhs.false.143

lor.lhs.false.143:                                ; preds = %lor.lhs.false.140
  %64 = load %union.tree_node*, %union.tree_node** %lr_inner, align 8
  %65 = load %union.tree_node*, %union.tree_node** %rr_inner, align 8
  %call144 = call i32 @operand_equal_p(%union.tree_node* %64, %union.tree_node* %65, i32 0)
  %tobool145 = icmp ne i32 %call144, 0
  br i1 %tobool145, label %if.else.147, label %if.then.146

if.then.146:                                      ; preds = %lor.lhs.false.143, %lor.lhs.false.140, %if.else
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.else.147:                                      ; preds = %lor.lhs.false.143
  store %union.tree_node* null, %union.tree_node** %r_const, align 8
  store %union.tree_node* null, %union.tree_node** %l_const, align 8
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.147
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %if.then.137
  %66 = load i32, i32* %code.addr, align 4
  %cmp150 = icmp eq i32 %66, 93
  %cond152 = select i1 %cmp150, i32 101, i32 102
  store i32 %cond152, i32* %wanted_code, align 4
  %67 = load i32, i32* %lcode, align 4
  %68 = load i32, i32* %wanted_code, align 4
  %cmp153 = icmp ne i32 %67, %68
  br i1 %cmp153, label %if.then.155, label %if.end.166

if.then.155:                                      ; preds = %if.end.149
  %69 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %tobool156 = icmp ne %union.tree_node* %69, null
  br i1 %tobool156, label %land.lhs.true.157, label %if.else.164

land.lhs.true.157:                                ; preds = %if.then.155
  %70 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %call158 = call i32 @integer_zerop(%union.tree_node* %70)
  %tobool159 = icmp ne i32 %call158, 0
  br i1 %tobool159, label %land.lhs.true.160, label %if.else.164

land.lhs.true.160:                                ; preds = %land.lhs.true.157
  %71 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call161 = call i32 @integer_pow2p(%union.tree_node* %71)
  %tobool162 = icmp ne i32 %call161, 0
  br i1 %tobool162, label %if.then.163, label %if.else.164

if.then.163:                                      ; preds = %land.lhs.true.160
  store i32 1, i32* %ll_unsignedp, align 4
  %72 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  store %union.tree_node* %72, %union.tree_node** %l_const, align 8
  br label %if.end.165

if.else.164:                                      ; preds = %land.lhs.true.160, %land.lhs.true.157, %if.then.155
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.165:                                       ; preds = %if.then.163
  br label %if.end.166

if.end.166:                                       ; preds = %if.end.165, %if.end.149
  %73 = load i32, i32* %rcode, align 4
  %74 = load i32, i32* %wanted_code, align 4
  %cmp167 = icmp ne i32 %73, %74
  br i1 %cmp167, label %if.then.169, label %if.end.180

if.then.169:                                      ; preds = %if.end.166
  %75 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %tobool170 = icmp ne %union.tree_node* %75, null
  br i1 %tobool170, label %land.lhs.true.171, label %if.else.178

land.lhs.true.171:                                ; preds = %if.then.169
  %76 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %call172 = call i32 @integer_zerop(%union.tree_node* %76)
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %land.lhs.true.174, label %if.else.178

land.lhs.true.174:                                ; preds = %land.lhs.true.171
  %77 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call175 = call i32 @integer_pow2p(%union.tree_node* %77)
  %tobool176 = icmp ne i32 %call175, 0
  br i1 %tobool176, label %if.then.177, label %if.else.178

if.then.177:                                      ; preds = %land.lhs.true.174
  store i32 1, i32* %rl_unsignedp, align 4
  %78 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  store %union.tree_node* %78, %union.tree_node** %r_const, align 8
  br label %if.end.179

if.else.178:                                      ; preds = %land.lhs.true.174, %land.lhs.true.171, %if.then.169
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.179:                                       ; preds = %if.then.177
  br label %if.end.180

if.end.180:                                       ; preds = %if.end.179, %if.end.166
  %79 = load i64, i64* %ll_bitpos, align 8
  %80 = load i64, i64* %rl_bitpos, align 8
  %cmp181 = icmp slt i64 %79, %80
  br i1 %cmp181, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.180
  %81 = load i64, i64* %ll_bitpos, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.180
  %82 = load i64, i64* %rl_bitpos, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond183 = phi i64 [ %81, %cond.true ], [ %82, %cond.false ]
  %conv184 = trunc i64 %cond183 to i32
  store i32 %conv184, i32* %first_bit, align 4
  %83 = load i64, i64* %ll_bitpos, align 8
  %84 = load i64, i64* %ll_bitsize, align 8
  %add = add nsw i64 %83, %84
  %85 = load i64, i64* %rl_bitpos, align 8
  %86 = load i64, i64* %rl_bitsize, align 8
  %add185 = add nsw i64 %85, %86
  %cmp186 = icmp sgt i64 %add, %add185
  br i1 %cmp186, label %cond.true.188, label %cond.false.190

cond.true.188:                                    ; preds = %cond.end
  %87 = load i64, i64* %ll_bitpos, align 8
  %88 = load i64, i64* %ll_bitsize, align 8
  %add189 = add nsw i64 %87, %88
  br label %cond.end.192

cond.false.190:                                   ; preds = %cond.end
  %89 = load i64, i64* %rl_bitpos, align 8
  %90 = load i64, i64* %rl_bitsize, align 8
  %add191 = add nsw i64 %89, %90
  br label %cond.end.192

cond.end.192:                                     ; preds = %cond.false.190, %cond.true.188
  %cond193 = phi i64 [ %add189, %cond.true.188 ], [ %add191, %cond.false.190 ]
  %conv194 = trunc i64 %cond193 to i32
  store i32 %conv194, i32* %end_bit, align 4
  %91 = load i32, i32* %end_bit, align 4
  %92 = load i32, i32* %first_bit, align 4
  %sub = sub nsw i32 %91, %92
  %93 = load i32, i32* %first_bit, align 4
  %94 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %common195 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type196, align 8
  %type197 = bitcast %union.tree_node* %95 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type197, i32 0, i32 7
  %96 = load i32, i32* %align, align 4
  %97 = load i32, i32* @word_mode, align 4
  %98 = load i32, i32* %volatilep, align 4
  %call198 = call i32 @get_best_mode(i32 %sub, i32 %93, i32 %96, i32 %97, i32 %98)
  store i32 %call198, i32* %lnmode, align 4
  %99 = load i32, i32* %lnmode, align 4
  %cmp199 = icmp eq i32 %99, 0
  br i1 %cmp199, label %if.then.201, label %if.end.202

if.then.201:                                      ; preds = %cond.end.192
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.202:                                       ; preds = %cond.end.192
  %100 = load i32, i32* %lnmode, align 4
  %idxprom203 = sext i32 %100 to i64
  %arrayidx204 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom203
  %101 = load i16, i16* %arrayidx204, align 2
  %conv205 = zext i16 %101 to i64
  store i64 %conv205, i64* %lnbitsize, align 8
  %102 = load i32, i32* %first_bit, align 4
  %conv206 = sext i32 %102 to i64
  %103 = load i64, i64* %lnbitsize, align 8
  %sub207 = sub nsw i64 %103, 1
  %neg = xor i64 %sub207, -1
  %and = and i64 %conv206, %neg
  store i64 %and, i64* %lnbitpos, align 8
  %104 = load i64, i64* %lnbitsize, align 8
  %conv208 = trunc i64 %104 to i32
  %call209 = call %union.tree_node* @type_for_size(i32 %conv208, i32 1)
  store %union.tree_node* %call209, %union.tree_node** %lntype, align 8
  %105 = load i64, i64* %ll_bitpos, align 8
  %106 = load i64, i64* %lnbitpos, align 8
  %sub210 = sub nsw i64 %105, %106
  store i64 %sub210, i64* %xll_bitpos, align 8
  %107 = load i64, i64* %rl_bitpos, align 8
  %108 = load i64, i64* %lnbitpos, align 8
  %sub211 = sub nsw i64 %107, %108
  store i64 %sub211, i64* %xrl_bitpos, align 8
  %109 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %110 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call212 = call %union.tree_node* @convert(%union.tree_node* %109, %union.tree_node* %110)
  %111 = load i64, i64* %xll_bitpos, align 8
  %call213 = call %union.tree_node* @size_int_wide(i64 %111, i32 0)
  %call214 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %call212, %union.tree_node* %call213, i32 0)
  store %union.tree_node* %call214, %union.tree_node** %ll_mask, align 8
  %112 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %113 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call215 = call %union.tree_node* @convert(%union.tree_node* %112, %union.tree_node* %113)
  %114 = load i64, i64* %xrl_bitpos, align 8
  %call216 = call %union.tree_node* @size_int_wide(i64 %114, i32 0)
  %call217 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %call215, %union.tree_node* %call216, i32 0)
  store %union.tree_node* %call217, %union.tree_node** %rl_mask, align 8
  %115 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %tobool218 = icmp ne %union.tree_node* %115, null
  br i1 %tobool218, label %if.then.219, label %if.end.241

if.then.219:                                      ; preds = %if.end.202
  %116 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %117 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %call220 = call %union.tree_node* @convert(%union.tree_node* %116, %union.tree_node* %117)
  store %union.tree_node* %call220, %union.tree_node** %l_const, align 8
  %118 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %119 = load i64, i64* %ll_bitsize, align 8
  %conv221 = trunc i64 %119 to i32
  %120 = load i32, i32* %ll_unsignedp, align 4
  %121 = load %union.tree_node*, %union.tree_node** %ll_and_mask, align 8
  %call222 = call %union.tree_node* @unextend(%union.tree_node* %118, i32 %conv221, i32 %120, %union.tree_node* %121)
  store %union.tree_node* %call222, %union.tree_node** %l_const, align 8
  %122 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %123 = load i64, i64* %xll_bitpos, align 8
  %call223 = call %union.tree_node* @size_int_wide(i64 %123, i32 0)
  %call224 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %122, %union.tree_node* %call223, i32 0)
  store %union.tree_node* %call224, %union.tree_node** %l_const, align 8
  %124 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %125 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %126 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call225 = call %union.tree_node* @build1(i32 90, %union.tree_node* %125, %union.tree_node* %126)
  %call226 = call %union.tree_node* @fold(%union.tree_node* %call225)
  %call227 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %124, %union.tree_node* %call226, i32 0)
  %call228 = call i32 @integer_zerop(%union.tree_node* %call227)
  %tobool229 = icmp ne i32 %call228, 0
  br i1 %tobool229, label %if.end.240, label %if.then.230

if.then.230:                                      ; preds = %if.then.219
  %127 = load i32, i32* %wanted_code, align 4
  %cmp231 = icmp eq i32 %127, 102
  %conv232 = zext i1 %cmp231 to i32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0), i32 %conv232)
  %128 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %129 = load i32, i32* %wanted_code, align 4
  %cmp233 = icmp eq i32 %129, 102
  br i1 %cmp233, label %cond.true.235, label %cond.false.236

cond.true.235:                                    ; preds = %if.then.230
  %130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.237

cond.false.236:                                   ; preds = %if.then.230
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.237

cond.end.237:                                     ; preds = %cond.false.236, %cond.true.235
  %cond238 = phi %union.tree_node* [ %130, %cond.true.235 ], [ %131, %cond.false.236 ]
  %call239 = call %union.tree_node* @convert(%union.tree_node* %128, %union.tree_node* %cond238)
  store %union.tree_node* %call239, %union.tree_node** %retval
  br label %return

if.end.240:                                       ; preds = %if.then.219
  br label %if.end.241

if.end.241:                                       ; preds = %if.end.240, %if.end.202
  %132 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %tobool242 = icmp ne %union.tree_node* %132, null
  br i1 %tobool242, label %if.then.243, label %if.end.265

if.then.243:                                      ; preds = %if.end.241
  %133 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %134 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %call244 = call %union.tree_node* @convert(%union.tree_node* %133, %union.tree_node* %134)
  store %union.tree_node* %call244, %union.tree_node** %r_const, align 8
  %135 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %136 = load i64, i64* %rl_bitsize, align 8
  %conv245 = trunc i64 %136 to i32
  %137 = load i32, i32* %rl_unsignedp, align 4
  %138 = load %union.tree_node*, %union.tree_node** %rl_and_mask, align 8
  %call246 = call %union.tree_node* @unextend(%union.tree_node* %135, i32 %conv245, i32 %137, %union.tree_node* %138)
  store %union.tree_node* %call246, %union.tree_node** %r_const, align 8
  %139 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %140 = load i64, i64* %xrl_bitpos, align 8
  %call247 = call %union.tree_node* @size_int_wide(i64 %140, i32 0)
  %call248 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %139, %union.tree_node* %call247, i32 0)
  store %union.tree_node* %call248, %union.tree_node** %r_const, align 8
  %141 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %142 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %143 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call249 = call %union.tree_node* @build1(i32 90, %union.tree_node* %142, %union.tree_node* %143)
  %call250 = call %union.tree_node* @fold(%union.tree_node* %call249)
  %call251 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %141, %union.tree_node* %call250, i32 0)
  %call252 = call i32 @integer_zerop(%union.tree_node* %call251)
  %tobool253 = icmp ne i32 %call252, 0
  br i1 %tobool253, label %if.end.264, label %if.then.254

if.then.254:                                      ; preds = %if.then.243
  %144 = load i32, i32* %wanted_code, align 4
  %cmp255 = icmp eq i32 %144, 102
  %conv256 = zext i1 %cmp255 to i32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0), i32 %conv256)
  %145 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %146 = load i32, i32* %wanted_code, align 4
  %cmp257 = icmp eq i32 %146, 102
  br i1 %cmp257, label %cond.true.259, label %cond.false.260

cond.true.259:                                    ; preds = %if.then.254
  %147 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.261

cond.false.260:                                   ; preds = %if.then.254
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.261

cond.end.261:                                     ; preds = %cond.false.260, %cond.true.259
  %cond262 = phi %union.tree_node* [ %147, %cond.true.259 ], [ %148, %cond.false.260 ]
  %call263 = call %union.tree_node* @convert(%union.tree_node* %145, %union.tree_node* %cond262)
  store %union.tree_node* %call263, %union.tree_node** %retval
  br label %return

if.end.264:                                       ; preds = %if.then.243
  br label %if.end.265

if.end.265:                                       ; preds = %if.end.264, %if.end.241
  %149 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %cmp266 = icmp eq %union.tree_node* %149, null
  br i1 %cmp266, label %if.then.268, label %if.end.455

if.then.268:                                      ; preds = %if.end.265
  %150 = load i64, i64* %ll_bitsize, align 8
  %151 = load i64, i64* %lr_bitsize, align 8
  %cmp269 = icmp ne i64 %150, %151
  br i1 %cmp269, label %if.then.285, label %lor.lhs.false.271

lor.lhs.false.271:                                ; preds = %if.then.268
  %152 = load i64, i64* %rl_bitsize, align 8
  %153 = load i64, i64* %rr_bitsize, align 8
  %cmp272 = icmp ne i64 %152, %153
  br i1 %cmp272, label %if.then.285, label %lor.lhs.false.274

lor.lhs.false.274:                                ; preds = %lor.lhs.false.271
  %154 = load i32, i32* %ll_unsignedp, align 4
  %155 = load i32, i32* %lr_unsignedp, align 4
  %cmp275 = icmp ne i32 %154, %155
  br i1 %cmp275, label %if.then.285, label %lor.lhs.false.277

lor.lhs.false.277:                                ; preds = %lor.lhs.false.274
  %156 = load i32, i32* %rl_unsignedp, align 4
  %157 = load i32, i32* %rr_unsignedp, align 4
  %cmp278 = icmp ne i32 %156, %157
  br i1 %cmp278, label %if.then.285, label %lor.lhs.false.280

lor.lhs.false.280:                                ; preds = %lor.lhs.false.277
  %158 = load i64, i64* %ll_bitpos, align 8
  %159 = load i64, i64* %rl_bitpos, align 8
  %sub281 = sub nsw i64 %158, %159
  %160 = load i64, i64* %lr_bitpos, align 8
  %161 = load i64, i64* %rr_bitpos, align 8
  %sub282 = sub nsw i64 %160, %161
  %cmp283 = icmp ne i64 %sub281, %sub282
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %lor.lhs.false.280, %lor.lhs.false.277, %lor.lhs.false.274, %lor.lhs.false.271, %if.then.268
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.286:                                       ; preds = %lor.lhs.false.280
  %162 = load i64, i64* %lr_bitpos, align 8
  %163 = load i64, i64* %rr_bitpos, align 8
  %cmp287 = icmp slt i64 %162, %163
  br i1 %cmp287, label %cond.true.289, label %cond.false.290

cond.true.289:                                    ; preds = %if.end.286
  %164 = load i64, i64* %lr_bitpos, align 8
  br label %cond.end.291

cond.false.290:                                   ; preds = %if.end.286
  %165 = load i64, i64* %rr_bitpos, align 8
  br label %cond.end.291

cond.end.291:                                     ; preds = %cond.false.290, %cond.true.289
  %cond292 = phi i64 [ %164, %cond.true.289 ], [ %165, %cond.false.290 ]
  %conv293 = trunc i64 %cond292 to i32
  store i32 %conv293, i32* %first_bit, align 4
  %166 = load i64, i64* %lr_bitpos, align 8
  %167 = load i64, i64* %lr_bitsize, align 8
  %add294 = add nsw i64 %166, %167
  %168 = load i64, i64* %rr_bitpos, align 8
  %169 = load i64, i64* %rr_bitsize, align 8
  %add295 = add nsw i64 %168, %169
  %cmp296 = icmp sgt i64 %add294, %add295
  br i1 %cmp296, label %cond.true.298, label %cond.false.300

cond.true.298:                                    ; preds = %cond.end.291
  %170 = load i64, i64* %lr_bitpos, align 8
  %171 = load i64, i64* %lr_bitsize, align 8
  %add299 = add nsw i64 %170, %171
  br label %cond.end.302

cond.false.300:                                   ; preds = %cond.end.291
  %172 = load i64, i64* %rr_bitpos, align 8
  %173 = load i64, i64* %rr_bitsize, align 8
  %add301 = add nsw i64 %172, %173
  br label %cond.end.302

cond.end.302:                                     ; preds = %cond.false.300, %cond.true.298
  %cond303 = phi i64 [ %add299, %cond.true.298 ], [ %add301, %cond.false.300 ]
  %conv304 = trunc i64 %cond303 to i32
  store i32 %conv304, i32* %end_bit, align 4
  %174 = load i32, i32* %end_bit, align 4
  %175 = load i32, i32* %first_bit, align 4
  %sub305 = sub nsw i32 %174, %175
  %176 = load i32, i32* %first_bit, align 4
  %177 = load %union.tree_node*, %union.tree_node** %lr_inner, align 8
  %common306 = bitcast %union.tree_node* %177 to %struct.tree_common*
  %type307 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common306, i32 0, i32 1
  %178 = load %union.tree_node*, %union.tree_node** %type307, align 8
  %type308 = bitcast %union.tree_node* %178 to %struct.tree_type*
  %align309 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type308, i32 0, i32 7
  %179 = load i32, i32* %align309, align 4
  %180 = load i32, i32* @word_mode, align 4
  %181 = load i32, i32* %volatilep, align 4
  %call310 = call i32 @get_best_mode(i32 %sub305, i32 %176, i32 %179, i32 %180, i32 %181)
  store i32 %call310, i32* %rnmode, align 4
  %182 = load i32, i32* %rnmode, align 4
  %cmp311 = icmp eq i32 %182, 0
  br i1 %cmp311, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %cond.end.302
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.314:                                       ; preds = %cond.end.302
  %183 = load i32, i32* %rnmode, align 4
  %idxprom315 = sext i32 %183 to i64
  %arrayidx316 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom315
  %184 = load i16, i16* %arrayidx316, align 2
  %conv317 = zext i16 %184 to i64
  store i64 %conv317, i64* %rnbitsize, align 8
  %185 = load i32, i32* %first_bit, align 4
  %conv318 = sext i32 %185 to i64
  %186 = load i64, i64* %rnbitsize, align 8
  %sub319 = sub nsw i64 %186, 1
  %neg320 = xor i64 %sub319, -1
  %and321 = and i64 %conv318, %neg320
  store i64 %and321, i64* %rnbitpos, align 8
  %187 = load i64, i64* %rnbitsize, align 8
  %conv322 = trunc i64 %187 to i32
  %call323 = call %union.tree_node* @type_for_size(i32 %conv322, i32 1)
  store %union.tree_node* %call323, %union.tree_node** %rntype, align 8
  %188 = load i64, i64* %lr_bitpos, align 8
  %189 = load i64, i64* %rnbitpos, align 8
  %sub324 = sub nsw i64 %188, %189
  store i64 %sub324, i64* %xlr_bitpos, align 8
  %190 = load i64, i64* %rr_bitpos, align 8
  %191 = load i64, i64* %rnbitpos, align 8
  %sub325 = sub nsw i64 %190, %191
  store i64 %sub325, i64* %xrr_bitpos, align 8
  %192 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %193 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %call326 = call %union.tree_node* @convert(%union.tree_node* %192, %union.tree_node* %193)
  %194 = load i64, i64* %xlr_bitpos, align 8
  %call327 = call %union.tree_node* @size_int_wide(i64 %194, i32 0)
  %call328 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %call326, %union.tree_node* %call327, i32 0)
  store %union.tree_node* %call328, %union.tree_node** %lr_mask, align 8
  %195 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %196 = load %union.tree_node*, %union.tree_node** %rr_mask, align 8
  %call329 = call %union.tree_node* @convert(%union.tree_node* %195, %union.tree_node* %196)
  %197 = load i64, i64* %xrr_bitpos, align 8
  %call330 = call %union.tree_node* @size_int_wide(i64 %197, i32 0)
  %call331 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %call329, %union.tree_node* %call330, i32 0)
  store %union.tree_node* %call331, %union.tree_node** %rr_mask, align 8
  %198 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %199 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call332 = call %union.tree_node* @const_binop(i32 86, %union.tree_node* %198, %union.tree_node* %199, i32 0)
  store %union.tree_node* %call332, %union.tree_node** %ll_mask, align 8
  %200 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %201 = load %union.tree_node*, %union.tree_node** %rr_mask, align 8
  %call333 = call %union.tree_node* @const_binop(i32 86, %union.tree_node* %200, %union.tree_node* %201, i32 0)
  store %union.tree_node* %call333, %union.tree_node** %lr_mask, align 8
  %202 = load i64, i64* %lnbitsize, align 8
  %203 = load i64, i64* %rnbitsize, align 8
  %cmp334 = icmp eq i64 %202, %203
  br i1 %cmp334, label %land.lhs.true.336, label %if.end.368

land.lhs.true.336:                                ; preds = %if.end.314
  %204 = load i64, i64* %xll_bitpos, align 8
  %205 = load i64, i64* %xlr_bitpos, align 8
  %cmp337 = icmp eq i64 %204, %205
  br i1 %cmp337, label %if.then.339, label %if.end.368

if.then.339:                                      ; preds = %land.lhs.true.336
  %206 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %207 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %208 = load i64, i64* %lnbitsize, align 8
  %conv340 = trunc i64 %208 to i32
  %209 = load i64, i64* %lnbitpos, align 8
  %conv341 = trunc i64 %209 to i32
  %210 = load i32, i32* %ll_unsignedp, align 4
  %tobool342 = icmp ne i32 %210, 0
  br i1 %tobool342, label %lor.end.345, label %lor.rhs.343

lor.rhs.343:                                      ; preds = %if.then.339
  %211 = load i32, i32* %rl_unsignedp, align 4
  %tobool344 = icmp ne i32 %211, 0
  br label %lor.end.345

lor.end.345:                                      ; preds = %lor.rhs.343, %if.then.339
  %212 = phi i1 [ true, %if.then.339 ], [ %tobool344, %lor.rhs.343 ]
  %lor.ext = zext i1 %212 to i32
  %call346 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %206, %union.tree_node* %207, i32 %conv340, i32 %conv341, i32 %lor.ext)
  store %union.tree_node* %call346, %union.tree_node** %lhs.addr, align 8
  %213 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %214 = load i64, i64* %lnbitsize, align 8
  %conv347 = trunc i64 %214 to i32
  %call348 = call i32 @all_ones_mask_p(%union.tree_node* %213, i32 %conv347)
  %tobool349 = icmp ne i32 %call348, 0
  br i1 %tobool349, label %if.end.352, label %if.then.350

if.then.350:                                      ; preds = %lor.end.345
  %215 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %216 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %217 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call351 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %215, %union.tree_node* %216, %union.tree_node* %217)
  store %union.tree_node* %call351, %union.tree_node** %lhs.addr, align 8
  br label %if.end.352

if.end.352:                                       ; preds = %if.then.350, %lor.end.345
  %218 = load %union.tree_node*, %union.tree_node** %lr_inner, align 8
  %219 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %220 = load i64, i64* %rnbitsize, align 8
  %conv353 = trunc i64 %220 to i32
  %221 = load i64, i64* %rnbitpos, align 8
  %conv354 = trunc i64 %221 to i32
  %222 = load i32, i32* %lr_unsignedp, align 4
  %tobool355 = icmp ne i32 %222, 0
  br i1 %tobool355, label %lor.end.358, label %lor.rhs.356

lor.rhs.356:                                      ; preds = %if.end.352
  %223 = load i32, i32* %rr_unsignedp, align 4
  %tobool357 = icmp ne i32 %223, 0
  br label %lor.end.358

lor.end.358:                                      ; preds = %lor.rhs.356, %if.end.352
  %224 = phi i1 [ true, %if.end.352 ], [ %tobool357, %lor.rhs.356 ]
  %lor.ext359 = zext i1 %224 to i32
  %call360 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %218, %union.tree_node* %219, i32 %conv353, i32 %conv354, i32 %lor.ext359)
  store %union.tree_node* %call360, %union.tree_node** %rhs.addr, align 8
  %225 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %226 = load i64, i64* %rnbitsize, align 8
  %conv361 = trunc i64 %226 to i32
  %call362 = call i32 @all_ones_mask_p(%union.tree_node* %225, i32 %conv361)
  %tobool363 = icmp ne i32 %call362, 0
  br i1 %tobool363, label %if.end.366, label %if.then.364

if.then.364:                                      ; preds = %lor.end.358
  %227 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %228 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %229 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %call365 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %227, %union.tree_node* %228, %union.tree_node* %229)
  store %union.tree_node* %call365, %union.tree_node** %rhs.addr, align 8
  br label %if.end.366

if.end.366:                                       ; preds = %if.then.364, %lor.end.358
  %230 = load i32, i32* %wanted_code, align 4
  %231 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %232 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %233 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call367 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %230, %union.tree_node* %231, %union.tree_node* %232, %union.tree_node* %233)
  store %union.tree_node* %call367, %union.tree_node** %retval
  br label %return

if.end.368:                                       ; preds = %land.lhs.true.336, %if.end.314
  %234 = load i64, i64* %ll_bitsize, align 8
  %235 = load i64, i64* %ll_bitpos, align 8
  %add369 = add nsw i64 %234, %235
  %236 = load i64, i64* %rl_bitpos, align 8
  %cmp370 = icmp eq i64 %add369, %236
  br i1 %cmp370, label %land.lhs.true.372, label %lor.lhs.false.376

land.lhs.true.372:                                ; preds = %if.end.368
  %237 = load i64, i64* %lr_bitsize, align 8
  %238 = load i64, i64* %lr_bitpos, align 8
  %add373 = add nsw i64 %237, %238
  %239 = load i64, i64* %rr_bitpos, align 8
  %cmp374 = icmp eq i64 %add373, %239
  br i1 %cmp374, label %if.then.384, label %lor.lhs.false.376

lor.lhs.false.376:                                ; preds = %land.lhs.true.372, %if.end.368
  %240 = load i64, i64* %ll_bitpos, align 8
  %241 = load i64, i64* %rl_bitpos, align 8
  %242 = load i64, i64* %rl_bitsize, align 8
  %add377 = add nsw i64 %241, %242
  %cmp378 = icmp eq i64 %240, %add377
  br i1 %cmp378, label %land.lhs.true.380, label %if.end.454

land.lhs.true.380:                                ; preds = %lor.lhs.false.376
  %243 = load i64, i64* %lr_bitpos, align 8
  %244 = load i64, i64* %rr_bitpos, align 8
  %245 = load i64, i64* %rr_bitsize, align 8
  %add381 = add nsw i64 %244, %245
  %cmp382 = icmp eq i64 %243, %add381
  br i1 %cmp382, label %if.then.384, label %if.end.454

if.then.384:                                      ; preds = %land.lhs.true.380, %land.lhs.true.372
  %246 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %247 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %248 = load i64, i64* %ll_bitsize, align 8
  %249 = load i64, i64* %rl_bitsize, align 8
  %add386 = add nsw i64 %248, %249
  %conv387 = trunc i64 %add386 to i32
  %250 = load i64, i64* %ll_bitpos, align 8
  %251 = load i64, i64* %rl_bitpos, align 8
  %cmp388 = icmp slt i64 %250, %251
  br i1 %cmp388, label %cond.true.390, label %cond.false.391

cond.true.390:                                    ; preds = %if.then.384
  %252 = load i64, i64* %ll_bitpos, align 8
  br label %cond.end.392

cond.false.391:                                   ; preds = %if.then.384
  %253 = load i64, i64* %rl_bitpos, align 8
  br label %cond.end.392

cond.end.392:                                     ; preds = %cond.false.391, %cond.true.390
  %cond393 = phi i64 [ %252, %cond.true.390 ], [ %253, %cond.false.391 ]
  %conv394 = trunc i64 %cond393 to i32
  %254 = load i32, i32* %ll_unsignedp, align 4
  %call395 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %246, %union.tree_node* %247, i32 %conv387, i32 %conv394, i32 %254)
  store %union.tree_node* %call395, %union.tree_node** %lhs.addr, align 8
  %255 = load %union.tree_node*, %union.tree_node** %lr_inner, align 8
  %256 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %257 = load i64, i64* %lr_bitsize, align 8
  %258 = load i64, i64* %rr_bitsize, align 8
  %add396 = add nsw i64 %257, %258
  %conv397 = trunc i64 %add396 to i32
  %259 = load i64, i64* %lr_bitpos, align 8
  %260 = load i64, i64* %rr_bitpos, align 8
  %cmp398 = icmp slt i64 %259, %260
  br i1 %cmp398, label %cond.true.400, label %cond.false.401

cond.true.400:                                    ; preds = %cond.end.392
  %261 = load i64, i64* %lr_bitpos, align 8
  br label %cond.end.402

cond.false.401:                                   ; preds = %cond.end.392
  %262 = load i64, i64* %rr_bitpos, align 8
  br label %cond.end.402

cond.end.402:                                     ; preds = %cond.false.401, %cond.true.400
  %cond403 = phi i64 [ %261, %cond.true.400 ], [ %262, %cond.false.401 ]
  %conv404 = trunc i64 %cond403 to i32
  %263 = load i32, i32* %lr_unsignedp, align 4
  %call405 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %255, %union.tree_node* %256, i32 %conv397, i32 %conv404, i32 %263)
  store %union.tree_node* %call405, %union.tree_node** %rhs.addr, align 8
  %264 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %265 = load i64, i64* %xll_bitpos, align 8
  %266 = load i64, i64* %xrl_bitpos, align 8
  %cmp406 = icmp slt i64 %265, %266
  br i1 %cmp406, label %cond.true.408, label %cond.false.409

cond.true.408:                                    ; preds = %cond.end.402
  %267 = load i64, i64* %xll_bitpos, align 8
  br label %cond.end.410

cond.false.409:                                   ; preds = %cond.end.402
  %268 = load i64, i64* %xrl_bitpos, align 8
  br label %cond.end.410

cond.end.410:                                     ; preds = %cond.false.409, %cond.true.408
  %cond411 = phi i64 [ %267, %cond.true.408 ], [ %268, %cond.false.409 ]
  %call412 = call %union.tree_node* @size_int_wide(i64 %cond411, i32 0)
  %call413 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %264, %union.tree_node* %call412, i32 0)
  store %union.tree_node* %call413, %union.tree_node** %ll_mask, align 8
  %269 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %270 = load i64, i64* %xlr_bitpos, align 8
  %271 = load i64, i64* %xrr_bitpos, align 8
  %cmp414 = icmp slt i64 %270, %271
  br i1 %cmp414, label %cond.true.416, label %cond.false.417

cond.true.416:                                    ; preds = %cond.end.410
  %272 = load i64, i64* %xlr_bitpos, align 8
  br label %cond.end.418

cond.false.417:                                   ; preds = %cond.end.410
  %273 = load i64, i64* %xrr_bitpos, align 8
  br label %cond.end.418

cond.end.418:                                     ; preds = %cond.false.417, %cond.true.416
  %cond419 = phi i64 [ %272, %cond.true.416 ], [ %273, %cond.false.417 ]
  %call420 = call %union.tree_node* @size_int_wide(i64 %cond419, i32 0)
  %call421 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %269, %union.tree_node* %call420, i32 0)
  store %union.tree_node* %call421, %union.tree_node** %lr_mask, align 8
  %274 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  store %union.tree_node* %274, %union.tree_node** %type385, align 8
  %275 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %276 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %cmp422 = icmp ne %union.tree_node* %275, %276
  br i1 %cmp422, label %if.then.424, label %if.end.438

if.then.424:                                      ; preds = %cond.end.418
  %277 = load i64, i64* %lnbitsize, align 8
  %278 = load i64, i64* %rnbitsize, align 8
  %cmp425 = icmp sgt i64 %277, %278
  br i1 %cmp425, label %if.then.427, label %if.else.430

if.then.427:                                      ; preds = %if.then.424
  %279 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %280 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call428 = call %union.tree_node* @convert(%union.tree_node* %279, %union.tree_node* %280)
  store %union.tree_node* %call428, %union.tree_node** %lhs.addr, align 8
  %281 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  %282 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call429 = call %union.tree_node* @convert(%union.tree_node* %281, %union.tree_node* %282)
  store %union.tree_node* %call429, %union.tree_node** %ll_mask, align 8
  %283 = load %union.tree_node*, %union.tree_node** %rntype, align 8
  store %union.tree_node* %283, %union.tree_node** %type385, align 8
  br label %if.end.437

if.else.430:                                      ; preds = %if.then.424
  %284 = load i64, i64* %lnbitsize, align 8
  %285 = load i64, i64* %rnbitsize, align 8
  %cmp431 = icmp slt i64 %284, %285
  br i1 %cmp431, label %if.then.433, label %if.end.436

if.then.433:                                      ; preds = %if.else.430
  %286 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %287 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call434 = call %union.tree_node* @convert(%union.tree_node* %286, %union.tree_node* %287)
  store %union.tree_node* %call434, %union.tree_node** %rhs.addr, align 8
  %288 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %289 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %call435 = call %union.tree_node* @convert(%union.tree_node* %288, %union.tree_node* %289)
  store %union.tree_node* %call435, %union.tree_node** %lr_mask, align 8
  %290 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  store %union.tree_node* %290, %union.tree_node** %type385, align 8
  br label %if.end.436

if.end.436:                                       ; preds = %if.then.433, %if.else.430
  br label %if.end.437

if.end.437:                                       ; preds = %if.end.436, %if.then.427
  br label %if.end.438

if.end.438:                                       ; preds = %if.end.437, %cond.end.418
  %291 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %292 = load i64, i64* %ll_bitsize, align 8
  %293 = load i64, i64* %rl_bitsize, align 8
  %add439 = add nsw i64 %292, %293
  %conv440 = trunc i64 %add439 to i32
  %call441 = call i32 @all_ones_mask_p(%union.tree_node* %291, i32 %conv440)
  %tobool442 = icmp ne i32 %call441, 0
  br i1 %tobool442, label %if.end.445, label %if.then.443

if.then.443:                                      ; preds = %if.end.438
  %294 = load %union.tree_node*, %union.tree_node** %type385, align 8
  %295 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %296 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call444 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %294, %union.tree_node* %295, %union.tree_node* %296)
  store %union.tree_node* %call444, %union.tree_node** %lhs.addr, align 8
  br label %if.end.445

if.end.445:                                       ; preds = %if.then.443, %if.end.438
  %297 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %298 = load i64, i64* %lr_bitsize, align 8
  %299 = load i64, i64* %rr_bitsize, align 8
  %add446 = add nsw i64 %298, %299
  %conv447 = trunc i64 %add446 to i32
  %call448 = call i32 @all_ones_mask_p(%union.tree_node* %297, i32 %conv447)
  %tobool449 = icmp ne i32 %call448, 0
  br i1 %tobool449, label %if.end.452, label %if.then.450

if.then.450:                                      ; preds = %if.end.445
  %300 = load %union.tree_node*, %union.tree_node** %type385, align 8
  %301 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %302 = load %union.tree_node*, %union.tree_node** %lr_mask, align 8
  %call451 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %300, %union.tree_node* %301, %union.tree_node* %302)
  store %union.tree_node* %call451, %union.tree_node** %rhs.addr, align 8
  br label %if.end.452

if.end.452:                                       ; preds = %if.then.450, %if.end.445
  %303 = load i32, i32* %wanted_code, align 4
  %304 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %305 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %306 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call453 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %303, %union.tree_node* %304, %union.tree_node* %305, %union.tree_node* %306)
  store %union.tree_node* %call453, %union.tree_node** %retval
  br label %return

if.end.454:                                       ; preds = %land.lhs.true.380, %lor.lhs.false.376
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.455:                                       ; preds = %if.end.265
  %307 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %308 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call456 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %307, %union.tree_node* %308, i32 0)
  store %union.tree_node* %call456, %union.tree_node** %result, align 8
  %309 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call457 = call i32 @integer_zerop(%union.tree_node* %309)
  %tobool458 = icmp ne i32 %call457, 0
  br i1 %tobool458, label %if.end.472, label %land.lhs.true.459

land.lhs.true.459:                                ; preds = %if.end.455
  %310 = load %union.tree_node*, %union.tree_node** %result, align 8
  %311 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %call460 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %310, %union.tree_node* %311, i32 0)
  %312 = load %union.tree_node*, %union.tree_node** %result, align 8
  %313 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %call461 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %312, %union.tree_node* %313, i32 0)
  %call462 = call i32 @simple_cst_equal(%union.tree_node* %call460, %union.tree_node* %call461)
  %cmp463 = icmp ne i32 %call462, 1
  br i1 %cmp463, label %if.then.465, label %if.end.472

if.then.465:                                      ; preds = %land.lhs.true.459
  %314 = load i32, i32* %wanted_code, align 4
  %cmp466 = icmp eq i32 %314, 102
  br i1 %cmp466, label %if.then.468, label %if.else.470

if.then.468:                                      ; preds = %if.then.465
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0))
  %315 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %316 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call469 = call %union.tree_node* @convert(%union.tree_node* %315, %union.tree_node* %316)
  store %union.tree_node* %call469, %union.tree_node** %retval
  br label %return

if.else.470:                                      ; preds = %if.then.465
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i32 0, i32 0))
  %317 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %318 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call471 = call %union.tree_node* @convert(%union.tree_node* %317, %union.tree_node* %318)
  store %union.tree_node* %call471, %union.tree_node** %retval
  br label %return

if.end.472:                                       ; preds = %land.lhs.true.459, %if.end.455
  %319 = load %union.tree_node*, %union.tree_node** %ll_inner, align 8
  %320 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %321 = load i64, i64* %lnbitsize, align 8
  %conv473 = trunc i64 %321 to i32
  %322 = load i64, i64* %lnbitpos, align 8
  %conv474 = trunc i64 %322 to i32
  %323 = load i32, i32* %ll_unsignedp, align 4
  %tobool475 = icmp ne i32 %323, 0
  br i1 %tobool475, label %lor.end.478, label %lor.rhs.476

lor.rhs.476:                                      ; preds = %if.end.472
  %324 = load i32, i32* %rl_unsignedp, align 4
  %tobool477 = icmp ne i32 %324, 0
  br label %lor.end.478

lor.end.478:                                      ; preds = %lor.rhs.476, %if.end.472
  %325 = phi i1 [ true, %if.end.472 ], [ %tobool477, %lor.rhs.476 ]
  %lor.ext479 = zext i1 %325 to i32
  %call480 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %319, %union.tree_node* %320, i32 %conv473, i32 %conv474, i32 %lor.ext479)
  store %union.tree_node* %call480, %union.tree_node** %result, align 8
  %326 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %327 = load %union.tree_node*, %union.tree_node** %rl_mask, align 8
  %call481 = call %union.tree_node* @const_binop(i32 86, %union.tree_node* %326, %union.tree_node* %327, i32 0)
  store %union.tree_node* %call481, %union.tree_node** %ll_mask, align 8
  %328 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %329 = load i64, i64* %lnbitsize, align 8
  %conv482 = trunc i64 %329 to i32
  %call483 = call i32 @all_ones_mask_p(%union.tree_node* %328, i32 %conv482)
  %tobool484 = icmp ne i32 %call483, 0
  br i1 %tobool484, label %if.end.487, label %if.then.485

if.then.485:                                      ; preds = %lor.end.478
  %330 = load %union.tree_node*, %union.tree_node** %lntype, align 8
  %331 = load %union.tree_node*, %union.tree_node** %result, align 8
  %332 = load %union.tree_node*, %union.tree_node** %ll_mask, align 8
  %call486 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %330, %union.tree_node* %331, %union.tree_node* %332)
  store %union.tree_node* %call486, %union.tree_node** %result, align 8
  br label %if.end.487

if.end.487:                                       ; preds = %if.then.485, %lor.end.478
  %333 = load i32, i32* %wanted_code, align 4
  %334 = load %union.tree_node*, %union.tree_node** %truth_type.addr, align 8
  %335 = load %union.tree_node*, %union.tree_node** %result, align 8
  %336 = load %union.tree_node*, %union.tree_node** %l_const, align 8
  %337 = load %union.tree_node*, %union.tree_node** %r_const, align 8
  %call488 = call %union.tree_node* @const_binop(i32 86, %union.tree_node* %336, %union.tree_node* %337, i32 0)
  %call489 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %333, %union.tree_node* %334, %union.tree_node* %335, %union.tree_node* %call488)
  store %union.tree_node* %call489, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.487, %if.else.470, %if.then.468, %if.end.454, %if.end.452, %if.end.366, %if.then.313, %if.then.285, %cond.end.261, %cond.end.237, %if.then.201, %if.else.178, %if.else.164, %if.then.146, %if.then.122, %if.then.106, %if.then.92, %if.then.38, %if.then
  %338 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %338
}

; Function Attrs: nounwind uwtable
define internal i32 @swap_tree_comparison(i32 %code) #0 {
entry:
  %retval = alloca i32, align 4
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  switch i32 %0, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 99, label %sw.bb.1
    i32 100, label %sw.bb.2
    i32 97, label %sw.bb.3
    i32 98, label %sw.bb.4
  ]

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i32, i32* %code.addr, align 4
  store i32 %1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  store i32 97, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %entry
  store i32 98, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  store i32 99, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  store i32 100, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 2357, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.swap_tree_comparison, i32 0, i32 0)) #5
  unreachable

return:                                           ; preds = %sw.bb.4, %sw.bb.3, %sw.bb.2, %sw.bb.1, %sw.bb
  %2 = load i32, i32* %retval
  ret i32 %2
}

declare %union.tree_node* @type_for_size(i32, i32) #3

declare %union.tree_node* @signed_type(%union.tree_node*) #3

declare %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) #3

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %t) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %arg0 = alloca %union.tree_node*, align 8
  %op_code = alloca i32, align 4
  %comp_const = alloca %union.tree_node*, align 8
  %minmax_const = alloca %union.tree_node*, align 8
  %consts_equal = alloca i32, align 4
  %consts_lt = alloca i32, align 4
  %inner = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %3, %union.tree_node** %arg0, align 8
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp2 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2, i32 0, i32 2
  %arrayidx4 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3, i32 0, i64 1
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8
  store %union.tree_node* %5, %union.tree_node** %comp_const, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %6 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common5 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %7 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 114
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common12 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 116
  br i1 %cmp16, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.11, %lor.lhs.false, %while.cond
  %9 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp17 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp17, i32 0, i32 2
  %arrayidx19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands18, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp20 = icmp ne %union.tree_node* %10, %11
  br i1 %cmp20, label %land.lhs.true.21, label %land.end

land.lhs.true.21:                                 ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common22 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type23, align 8
  %type24 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type24, i32 0, i32 6
  %bf.load25 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load25, 9
  %bf.clear26 = and i32 %bf.lshr, 127
  %14 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp27 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands28 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp27, i32 0, i32 2
  %arrayidx29 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands28, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8
  %common30 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %type32 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %mode33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 6
  %bf.load34 = load i32, i32* %mode33, align 4
  %bf.lshr35 = lshr i32 %bf.load34, 9
  %bf.clear36 = and i32 %bf.lshr35, 127
  %cmp37 = icmp eq i32 %bf.clear26, %bf.clear36
  br i1 %cmp37, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.21
  %17 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common38 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type39, align 8
  %common40 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 2
  %bf.load41 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr42 = lshr i32 %bf.load41, 13
  %bf.clear43 = and i32 %bf.lshr42, 1
  %19 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp44 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands45 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp44, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands45, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8
  %common47 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type48, align 8
  %common49 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %unsigned_flag50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 2
  %bf.load51 = load i32, i32* %unsigned_flag50, align 8
  %bf.lshr52 = lshr i32 %bf.load51, 13
  %bf.clear53 = and i32 %bf.lshr52, 1
  %cmp54 = icmp eq i32 %bf.clear43, %bf.clear53
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.21, %land.lhs.true, %lor.lhs.false.11
  %22 = phi i1 [ false, %land.lhs.true.21 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false.11 ], [ %cmp54, %land.rhs ]
  br i1 %22, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %23 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp55 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands56 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp55, i32 0, i32 2
  %arrayidx57 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands56, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8
  store %union.tree_node* %24, %union.tree_node** %arg0, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %25 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common58 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 2
  %bf.load60 = load i32, i32* %code59, align 8
  %bf.clear61 = and i32 %bf.load60, 255
  store i32 %bf.clear61, i32* %op_code, align 4
  %26 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp62 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands63 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp62, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands63, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8
  store %union.tree_node* %27, %union.tree_node** %minmax_const, align 8
  %28 = load %union.tree_node*, %union.tree_node** %minmax_const, align 8
  %29 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call = call i32 @tree_int_cst_equal(%union.tree_node* %28, %union.tree_node* %29)
  store i32 %call, i32* %consts_equal, align 4
  %30 = load %union.tree_node*, %union.tree_node** %minmax_const, align 8
  %31 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call65 = call i32 @tree_int_cst_lt(%union.tree_node* %30, %union.tree_node* %31)
  store i32 %call65, i32* %consts_lt, align 4
  %32 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %exp66 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp66, i32 0, i32 2
  %arrayidx68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands67, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx68, align 8
  store %union.tree_node* %33, %union.tree_node** %inner, align 8
  %34 = load i32, i32* %op_code, align 4
  %cmp69 = icmp ne i32 %34, 78
  br i1 %cmp69, label %land.lhs.true.70, label %lor.lhs.false.72

land.lhs.true.70:                                 ; preds = %while.end
  %35 = load i32, i32* %op_code, align 4
  %cmp71 = icmp ne i32 %35, 79
  br i1 %cmp71, label %if.then, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %land.lhs.true.70, %while.end
  %36 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %common73 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 2
  %bf.load75 = load i32, i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp ne i32 %bf.clear76, 25
  br i1 %cmp77, label %if.then, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %lor.lhs.false.72
  %37 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %common79 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 2
  %bf.load80 = load i32, i32* %static_flag, align 8
  %bf.lshr81 = lshr i32 %bf.load80, 18
  %bf.clear82 = and i32 %bf.lshr81, 1
  %tobool = icmp ne i32 %bf.clear82, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.78
  %38 = load %union.tree_node*, %union.tree_node** %minmax_const, align 8
  %common84 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp ne i32 %bf.clear87, 25
  br i1 %cmp88, label %if.then, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false.83
  %39 = load %union.tree_node*, %union.tree_node** %minmax_const, align 8
  %common90 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %static_flag91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common90, i32 0, i32 2
  %bf.load92 = load i32, i32* %static_flag91, align 8
  %bf.lshr93 = lshr i32 %bf.load92, 18
  %bf.clear94 = and i32 %bf.lshr93, 1
  %tobool95 = icmp ne i32 %bf.clear94, 0
  br i1 %tobool95, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.89, %lor.lhs.false.83, %lor.lhs.false.78, %lor.lhs.false.72, %land.lhs.true.70
  %40 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %40, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.89
  %41 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common96 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code97 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common96, i32 0, i32 2
  %bf.load98 = load i32, i32* %code97, align 8
  %bf.clear99 = and i32 %bf.load98, 255
  switch i32 %bf.clear99, label %sw.default [
    i32 102, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 100, label %sw.bb.103
    i32 101, label %sw.bb.110
    i32 99, label %sw.bb.139
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %42 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call100 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %42)
  %call101 = call %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call100)
  %call102 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %call101)
  store %union.tree_node* %call102, %union.tree_node** %retval
  br label %return

sw.bb.103:                                        ; preds = %if.end
  %43 = load %union.tree_node*, %union.tree_node** %type, align 8
  %44 = load %union.tree_node*, %union.tree_node** %type, align 8
  %45 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %46 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call104 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 101, %union.tree_node* %44, %union.tree_node* %45, %union.tree_node* %46)
  %call105 = call %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call104)
  %47 = load %union.tree_node*, %union.tree_node** %type, align 8
  %48 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %49 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call106 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 99, %union.tree_node* %47, %union.tree_node* %48, %union.tree_node* %49)
  %call107 = call %union.tree_node* @optimize_minmax_comparison(%union.tree_node* %call106)
  %call108 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 92, %union.tree_node* %43, %union.tree_node* %call105, %union.tree_node* %call107)
  %call109 = call %union.tree_node* @fold(%union.tree_node* %call108)
  store %union.tree_node* %call109, %union.tree_node** %retval
  br label %return

sw.bb.110:                                        ; preds = %if.end
  %50 = load i32, i32* %op_code, align 4
  %cmp111 = icmp eq i32 %50, 79
  br i1 %cmp111, label %land.lhs.true.112, label %if.else

land.lhs.true.112:                                ; preds = %sw.bb.110
  %51 = load i32, i32* %consts_equal, align 4
  %tobool113 = icmp ne i32 %51, 0
  br i1 %tobool113, label %if.then.114, label %if.else

if.then.114:                                      ; preds = %land.lhs.true.112
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8
  %53 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %54 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call115 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 98, %union.tree_node* %52, %union.tree_node* %53, %union.tree_node* %54)
  %call116 = call %union.tree_node* @fold(%union.tree_node* %call115)
  store %union.tree_node* %call116, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.112, %sw.bb.110
  %55 = load i32, i32* %op_code, align 4
  %cmp117 = icmp eq i32 %55, 79
  br i1 %cmp117, label %land.lhs.true.118, label %if.else.123

land.lhs.true.118:                                ; preds = %if.else
  %56 = load i32, i32* %consts_lt, align 4
  %tobool119 = icmp ne i32 %56, 0
  br i1 %tobool119, label %if.then.120, label %if.else.123

if.then.120:                                      ; preds = %land.lhs.true.118
  %57 = load %union.tree_node*, %union.tree_node** %type, align 8
  %58 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %59 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call121 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 101, %union.tree_node* %57, %union.tree_node* %58, %union.tree_node* %59)
  %call122 = call %union.tree_node* @fold(%union.tree_node* %call121)
  store %union.tree_node* %call122, %union.tree_node** %retval
  br label %return

if.else.123:                                      ; preds = %land.lhs.true.118, %if.else
  %60 = load i32, i32* %op_code, align 4
  %cmp124 = icmp eq i32 %60, 79
  br i1 %cmp124, label %if.then.125, label %if.else.127

if.then.125:                                      ; preds = %if.else.123
  %61 = load %union.tree_node*, %union.tree_node** %type, align 8
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %63 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %call126 = call %union.tree_node* @omit_one_operand(%union.tree_node* %61, %union.tree_node* %62, %union.tree_node* %63)
  store %union.tree_node* %call126, %union.tree_node** %retval
  br label %return

if.else.127:                                      ; preds = %if.else.123
  %64 = load i32, i32* %consts_equal, align 4
  %tobool128 = icmp ne i32 %64, 0
  br i1 %tobool128, label %if.then.129, label %if.else.132

if.then.129:                                      ; preds = %if.else.127
  %65 = load %union.tree_node*, %union.tree_node** %type, align 8
  %66 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %67 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call130 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 100, %union.tree_node* %65, %union.tree_node* %66, %union.tree_node* %67)
  %call131 = call %union.tree_node* @fold(%union.tree_node* %call130)
  store %union.tree_node* %call131, %union.tree_node** %retval
  br label %return

if.else.132:                                      ; preds = %if.else.127
  %68 = load i32, i32* %consts_lt, align 4
  %tobool133 = icmp ne i32 %68, 0
  br i1 %tobool133, label %if.then.134, label %if.else.136

if.then.134:                                      ; preds = %if.else.132
  %69 = load %union.tree_node*, %union.tree_node** %type, align 8
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %71 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %call135 = call %union.tree_node* @omit_one_operand(%union.tree_node* %69, %union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call135, %union.tree_node** %retval
  br label %return

if.else.136:                                      ; preds = %if.else.132
  %72 = load %union.tree_node*, %union.tree_node** %type, align 8
  %73 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %74 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call137 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 101, %union.tree_node* %72, %union.tree_node* %73, %union.tree_node* %74)
  %call138 = call %union.tree_node* @fold(%union.tree_node* %call137)
  store %union.tree_node* %call138, %union.tree_node** %retval
  br label %return

sw.bb.139:                                        ; preds = %if.end
  %75 = load i32, i32* %op_code, align 4
  %cmp140 = icmp eq i32 %75, 79
  br i1 %cmp140, label %land.lhs.true.141, label %if.else.148

land.lhs.true.141:                                ; preds = %sw.bb.139
  %76 = load i32, i32* %consts_equal, align 4
  %tobool142 = icmp ne i32 %76, 0
  br i1 %tobool142, label %if.then.145, label %lor.lhs.false.143

lor.lhs.false.143:                                ; preds = %land.lhs.true.141
  %77 = load i32, i32* %consts_lt, align 4
  %tobool144 = icmp ne i32 %77, 0
  br i1 %tobool144, label %if.then.145, label %if.else.148

if.then.145:                                      ; preds = %lor.lhs.false.143, %land.lhs.true.141
  %78 = load %union.tree_node*, %union.tree_node** %type, align 8
  %79 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %80 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call146 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 99, %union.tree_node* %78, %union.tree_node* %79, %union.tree_node* %80)
  %call147 = call %union.tree_node* @fold(%union.tree_node* %call146)
  store %union.tree_node* %call147, %union.tree_node** %retval
  br label %return

if.else.148:                                      ; preds = %lor.lhs.false.143, %sw.bb.139
  %81 = load i32, i32* %op_code, align 4
  %cmp149 = icmp eq i32 %81, 79
  br i1 %cmp149, label %if.then.150, label %if.else.152

if.then.150:                                      ; preds = %if.else.148
  %82 = load %union.tree_node*, %union.tree_node** %type, align 8
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %84 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %call151 = call %union.tree_node* @omit_one_operand(%union.tree_node* %82, %union.tree_node* %83, %union.tree_node* %84)
  store %union.tree_node* %call151, %union.tree_node** %retval
  br label %return

if.else.152:                                      ; preds = %if.else.148
  %85 = load i32, i32* %op_code, align 4
  %cmp153 = icmp eq i32 %85, 78
  br i1 %cmp153, label %land.lhs.true.154, label %if.else.160

land.lhs.true.154:                                ; preds = %if.else.152
  %86 = load i32, i32* %consts_equal, align 4
  %tobool155 = icmp ne i32 %86, 0
  br i1 %tobool155, label %if.then.158, label %lor.lhs.false.156

lor.lhs.false.156:                                ; preds = %land.lhs.true.154
  %87 = load i32, i32* %consts_lt, align 4
  %tobool157 = icmp ne i32 %87, 0
  br i1 %tobool157, label %if.then.158, label %if.else.160

if.then.158:                                      ; preds = %lor.lhs.false.156, %land.lhs.true.154
  %88 = load %union.tree_node*, %union.tree_node** %type, align 8
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %90 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %call159 = call %union.tree_node* @omit_one_operand(%union.tree_node* %88, %union.tree_node* %89, %union.tree_node* %90)
  store %union.tree_node* %call159, %union.tree_node** %retval
  br label %return

if.else.160:                                      ; preds = %lor.lhs.false.156, %if.else.152
  %91 = load %union.tree_node*, %union.tree_node** %type, align 8
  %92 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %93 = load %union.tree_node*, %union.tree_node** %comp_const, align 8
  %call161 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 99, %union.tree_node* %91, %union.tree_node* %92, %union.tree_node* %93)
  %call162 = call %union.tree_node* @fold(%union.tree_node* %call161)
  store %union.tree_node* %call162, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %if.end
  %94 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %94, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.default, %if.else.160, %if.then.158, %if.then.150, %if.then.145, %if.else.136, %if.then.134, %if.then.129, %if.then.125, %if.then.120, %if.then.114, %sw.bb.103, %sw.bb, %if.then
  %95 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %95
}

declare i32 @integer_pow2p(%union.tree_node*) #3

declare %union.tree_node* @unsigned_type(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @constant_boolean_node(i32 %value, %union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %value.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store i32 %value, i32* %value.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp = icmp eq %union.tree_node* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %3, %cond.true ], [ %4, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 11
  br i1 %cmp1, label %if.then.2, label %if.else.8

if.then.2:                                        ; preds = %if.else
  %6 = load i32, i32* %value.addr, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %cond.true.4, label %cond.false.5

cond.true.4:                                      ; preds = %if.then.2
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.6

cond.false.5:                                     ; preds = %if.then.2
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.6

cond.end.6:                                       ; preds = %cond.false.5, %cond.true.4
  %cond7 = phi %union.tree_node* [ %7, %cond.true.4 ], [ %8, %cond.false.5 ]
  %call = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %cond7)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.else.8:                                        ; preds = %if.else
  %9 = load i32, i32* %value.addr, align 4
  %conv = sext i32 %9 to i64
  %call9 = call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0)
  store %union.tree_node* %call9, %union.tree_node** %t, align 8
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common10 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  store %union.tree_node* %10, %union.tree_node** %type11, align 8
  %12 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else.8, %cond.end.6, %cond.end
  %13 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %13
}

; Function Attrs: nounwind uwtable
define internal i32 @twoval_comparison_p(%union.tree_node* %arg, %union.tree_node** %cval1, %union.tree_node** %cval2, i32* %save_p) #0 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca %union.tree_node*, align 8
  %cval1.addr = alloca %union.tree_node**, align 8
  %cval2.addr = alloca %union.tree_node**, align 8
  %save_p.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %class = alloca i8, align 1
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  store %union.tree_node** %cval1, %union.tree_node*** %cval1.addr, align 8
  store %union.tree_node** %cval2, %union.tree_node*** %cval2.addr, align 8
  store i32* %save_p, i32** %save_p.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  store i8 %2, i8* %class, align 1
  %3 = load i8, i8* %class, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 101
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %code, align 4
  %cmp3 = icmp eq i32 %4, 96
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i8 49, i8* %class, align 1
  br label %if.end.42

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i8, i8* %class, align 1
  %conv5 = sext i8 %5 to i32
  %cmp6 = icmp eq i32 %conv5, 101
  br i1 %cmp6, label %land.lhs.true.8, label %if.else.17

land.lhs.true.8:                                  ; preds = %if.else
  %6 = load i32, i32* %code, align 4
  %cmp9 = icmp eq i32 %6, 91
  br i1 %cmp9, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.8
  %7 = load i32, i32* %code, align 4
  %cmp11 = icmp eq i32 %7, 92
  br i1 %cmp11, label %if.then.16, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false
  %8 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %8, 47
  br i1 %cmp14, label %if.then.16, label %if.else.17

if.then.16:                                       ; preds = %lor.lhs.false.13, %lor.lhs.false, %land.lhs.true.8
  store i8 50, i8* %class, align 1
  br label %if.end.41

if.else.17:                                       ; preds = %lor.lhs.false.13, %if.else
  %9 = load i8, i8* %class, align 1
  %conv18 = sext i8 %9 to i32
  %cmp19 = icmp eq i32 %conv18, 101
  br i1 %cmp19, label %land.lhs.true.21, label %if.end.40

land.lhs.true.21:                                 ; preds = %if.else.17
  %10 = load i32, i32* %code, align 4
  %cmp22 = icmp eq i32 %10, 118
  br i1 %cmp22, label %land.lhs.true.24, label %if.end.40

land.lhs.true.24:                                 ; preds = %land.lhs.true.21
  %11 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 2
  %12 = bitcast %union.tree_node** %arrayidx25 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %cmp26 = icmp eq %struct.rtx_def* %13, null
  br i1 %cmp26, label %land.lhs.true.28, label %if.end.40

land.lhs.true.28:                                 ; preds = %land.lhs.true.24
  %14 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp29 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  %common32 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 2
  %bf.load33 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load33, 8
  %bf.clear34 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear34, 0
  br i1 %tobool, label %if.end.40, label %if.then.35

if.then.35:                                       ; preds = %land.lhs.true.28
  %16 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8
  %tobool36 = icmp ne %union.tree_node* %17, null
  br i1 %tobool36, label %if.then.39, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %if.then.35
  %18 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  %tobool38 = icmp ne %union.tree_node* %19, null
  br i1 %tobool38, label %if.then.39, label %if.end

if.then.39:                                       ; preds = %lor.lhs.false.37, %if.then.35
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.37
  store i8 49, i8* %class, align 1
  %20 = load i32*, i32** %save_p.addr, align 8
  store i32 1, i32* %20, align 4
  br label %if.end.40

if.end.40:                                        ; preds = %if.end, %land.lhs.true.28, %land.lhs.true.24, %land.lhs.true.21, %if.else.17
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.then.16
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.then
  %21 = load i8, i8* %class, align 1
  %conv43 = sext i8 %21 to i32
  switch i32 %conv43, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb.47
    i32 99, label %sw.bb.58
    i32 101, label %sw.bb.59
    i32 60, label %sw.bb.83
  ]

sw.bb:                                            ; preds = %if.end.42
  %22 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp44 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands45 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp44, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands45, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8
  %24 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %25 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %26 = load i32*, i32** %save_p.addr, align 8
  %call = call i32 @twoval_comparison_p(%union.tree_node* %23, %union.tree_node** %24, %union.tree_node** %25, i32* %26)
  store i32 %call, i32* %retval
  br label %return

sw.bb.47:                                         ; preds = %if.end.42
  %27 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp48 = bitcast %union.tree_node* %27 to %struct.tree_exp*
  %operands49 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp48, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands49, i32 0, i64 0
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8
  %29 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %30 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %31 = load i32*, i32** %save_p.addr, align 8
  %call51 = call i32 @twoval_comparison_p(%union.tree_node* %28, %union.tree_node** %29, %union.tree_node** %30, i32* %31)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.47
  %32 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp53 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp53, i32 0, i32 2
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands54, i32 0, i64 1
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8
  %34 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %35 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %36 = load i32*, i32** %save_p.addr, align 8
  %call56 = call i32 @twoval_comparison_p(%union.tree_node* %33, %union.tree_node** %34, %union.tree_node** %35, i32* %36)
  %tobool57 = icmp ne i32 %call56, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.47
  %37 = phi i1 [ false, %sw.bb.47 ], [ %tobool57, %land.rhs ]
  %land.ext = zext i1 %37 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.58:                                         ; preds = %if.end.42
  store i32 1, i32* %retval
  br label %return

sw.bb.59:                                         ; preds = %if.end.42
  %38 = load i32, i32* %code, align 4
  %cmp60 = icmp eq i32 %38, 51
  br i1 %cmp60, label %if.then.62, label %if.end.82

if.then.62:                                       ; preds = %sw.bb.59
  %39 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp63 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands64 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp63, i32 0, i32 2
  %arrayidx65 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands64, i32 0, i64 0
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx65, align 8
  %41 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %42 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %43 = load i32*, i32** %save_p.addr, align 8
  %call66 = call i32 @twoval_comparison_p(%union.tree_node* %40, %union.tree_node** %41, %union.tree_node** %42, i32* %43)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %land.lhs.true.68, label %land.end.80

land.lhs.true.68:                                 ; preds = %if.then.62
  %44 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp69 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp69, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands70, i32 0, i64 1
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx71, align 8
  %46 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %47 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %48 = load i32*, i32** %save_p.addr, align 8
  %call72 = call i32 @twoval_comparison_p(%union.tree_node* %45, %union.tree_node** %46, %union.tree_node** %47, i32* %48)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %land.rhs.74, label %land.end.80

land.rhs.74:                                      ; preds = %land.lhs.true.68
  %49 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp75 = bitcast %union.tree_node* %49 to %struct.tree_exp*
  %operands76 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp75, i32 0, i32 2
  %arrayidx77 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands76, i32 0, i64 2
  %50 = load %union.tree_node*, %union.tree_node** %arrayidx77, align 8
  %51 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %52 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %53 = load i32*, i32** %save_p.addr, align 8
  %call78 = call i32 @twoval_comparison_p(%union.tree_node* %50, %union.tree_node** %51, %union.tree_node** %52, i32* %53)
  %tobool79 = icmp ne i32 %call78, 0
  br label %land.end.80

land.end.80:                                      ; preds = %land.rhs.74, %land.lhs.true.68, %if.then.62
  %54 = phi i1 [ false, %land.lhs.true.68 ], [ false, %if.then.62 ], [ %tobool79, %land.rhs.74 ]
  %land.ext81 = zext i1 %54 to i32
  store i32 %land.ext81, i32* %retval
  br label %return

if.end.82:                                        ; preds = %sw.bb.59
  store i32 0, i32* %retval
  br label %return

sw.bb.83:                                         ; preds = %if.end.42
  %55 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp84 = bitcast %union.tree_node* %55 to %struct.tree_exp*
  %operands85 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp84, i32 0, i32 2
  %arrayidx86 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands85, i32 0, i64 0
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8
  %57 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp87 = bitcast %union.tree_node* %57 to %struct.tree_exp*
  %operands88 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp87, i32 0, i32 2
  %arrayidx89 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands88, i32 0, i64 1
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx89, align 8
  %call90 = call i32 @operand_equal_p(%union.tree_node* %56, %union.tree_node* %58, i32 0)
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %sw.bb.83
  store i32 0, i32* %retval
  br label %return

if.end.93:                                        ; preds = %sw.bb.83
  %59 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8
  %cmp94 = icmp eq %union.tree_node* %60, null
  br i1 %cmp94, label %if.then.96, label %if.else.100

if.then.96:                                       ; preds = %if.end.93
  %61 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp97 = bitcast %union.tree_node* %61 to %struct.tree_exp*
  %operands98 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp97, i32 0, i32 2
  %arrayidx99 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands98, i32 0, i64 0
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx99, align 8
  %63 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  store %union.tree_node* %62, %union.tree_node** %63, align 8
  br label %if.end.125

if.else.100:                                      ; preds = %if.end.93
  %64 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8
  %66 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp101 = bitcast %union.tree_node* %66 to %struct.tree_exp*
  %operands102 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp101, i32 0, i32 2
  %arrayidx103 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands102, i32 0, i64 0
  %67 = load %union.tree_node*, %union.tree_node** %arrayidx103, align 8
  %call104 = call i32 @operand_equal_p(%union.tree_node* %65, %union.tree_node* %67, i32 0)
  %tobool105 = icmp ne i32 %call104, 0
  br i1 %tobool105, label %if.then.106, label %if.else.107

if.then.106:                                      ; preds = %if.else.100
  br label %if.end.124

if.else.107:                                      ; preds = %if.else.100
  %68 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %69 = load %union.tree_node*, %union.tree_node** %68, align 8
  %cmp108 = icmp eq %union.tree_node* %69, null
  br i1 %cmp108, label %if.then.110, label %if.else.114

if.then.110:                                      ; preds = %if.else.107
  %70 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp111 = bitcast %union.tree_node* %70 to %struct.tree_exp*
  %operands112 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp111, i32 0, i32 2
  %arrayidx113 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands112, i32 0, i64 0
  %71 = load %union.tree_node*, %union.tree_node** %arrayidx113, align 8
  %72 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  store %union.tree_node* %71, %union.tree_node** %72, align 8
  br label %if.end.123

if.else.114:                                      ; preds = %if.else.107
  %73 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %74 = load %union.tree_node*, %union.tree_node** %73, align 8
  %75 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp115 = bitcast %union.tree_node* %75 to %struct.tree_exp*
  %operands116 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp115, i32 0, i32 2
  %arrayidx117 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands116, i32 0, i64 0
  %76 = load %union.tree_node*, %union.tree_node** %arrayidx117, align 8
  %call118 = call i32 @operand_equal_p(%union.tree_node* %74, %union.tree_node* %76, i32 0)
  %tobool119 = icmp ne i32 %call118, 0
  br i1 %tobool119, label %if.then.120, label %if.else.121

if.then.120:                                      ; preds = %if.else.114
  br label %if.end.122

if.else.121:                                      ; preds = %if.else.114
  store i32 0, i32* %retval
  br label %return

if.end.122:                                       ; preds = %if.then.120
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.then.110
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.then.106
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.then.96
  %77 = load %union.tree_node**, %union.tree_node*** %cval1.addr, align 8
  %78 = load %union.tree_node*, %union.tree_node** %77, align 8
  %79 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp126 = bitcast %union.tree_node* %79 to %struct.tree_exp*
  %operands127 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp126, i32 0, i32 2
  %arrayidx128 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands127, i32 0, i64 1
  %80 = load %union.tree_node*, %union.tree_node** %arrayidx128, align 8
  %call129 = call i32 @operand_equal_p(%union.tree_node* %78, %union.tree_node* %80, i32 0)
  %tobool130 = icmp ne i32 %call129, 0
  br i1 %tobool130, label %if.then.131, label %if.else.132

if.then.131:                                      ; preds = %if.end.125
  br label %if.end.149

if.else.132:                                      ; preds = %if.end.125
  %81 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %82 = load %union.tree_node*, %union.tree_node** %81, align 8
  %cmp133 = icmp eq %union.tree_node* %82, null
  br i1 %cmp133, label %if.then.135, label %if.else.139

if.then.135:                                      ; preds = %if.else.132
  %83 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp136 = bitcast %union.tree_node* %83 to %struct.tree_exp*
  %operands137 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp136, i32 0, i32 2
  %arrayidx138 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands137, i32 0, i64 1
  %84 = load %union.tree_node*, %union.tree_node** %arrayidx138, align 8
  %85 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  store %union.tree_node* %84, %union.tree_node** %85, align 8
  br label %if.end.148

if.else.139:                                      ; preds = %if.else.132
  %86 = load %union.tree_node**, %union.tree_node*** %cval2.addr, align 8
  %87 = load %union.tree_node*, %union.tree_node** %86, align 8
  %88 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp140 = bitcast %union.tree_node* %88 to %struct.tree_exp*
  %operands141 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp140, i32 0, i32 2
  %arrayidx142 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands141, i32 0, i64 1
  %89 = load %union.tree_node*, %union.tree_node** %arrayidx142, align 8
  %call143 = call i32 @operand_equal_p(%union.tree_node* %87, %union.tree_node* %89, i32 0)
  %tobool144 = icmp ne i32 %call143, 0
  br i1 %tobool144, label %if.then.145, label %if.else.146

if.then.145:                                      ; preds = %if.else.139
  br label %if.end.147

if.else.146:                                      ; preds = %if.else.139
  store i32 0, i32* %retval
  br label %return

if.end.147:                                       ; preds = %if.then.145
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.then.135
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %if.then.131
  store i32 1, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end.42
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %if.end.149, %if.else.146, %if.else.121, %if.then.92, %if.end.82, %land.end.80, %sw.bb.58, %land.end, %sw.bb, %if.then.39
  %90 = load i32, i32* %retval
  ret i32 %90
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @eval_subst(%union.tree_node* %arg, %union.tree_node* %old0, %union.tree_node* %new0, %union.tree_node* %old1, %union.tree_node* %new1) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %arg.addr = alloca %union.tree_node*, align 8
  %old0.addr = alloca %union.tree_node*, align 8
  %new0.addr = alloca %union.tree_node*, align 8
  %old1.addr = alloca %union.tree_node*, align 8
  %new1.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %class = alloca i8, align 1
  %arg0 = alloca %union.tree_node*, align 8
  %arg1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  store %union.tree_node* %old0, %union.tree_node** %old0.addr, align 8
  store %union.tree_node* %new0, %union.tree_node** %new0.addr, align 8
  store %union.tree_node* %old1, %union.tree_node** %old1.addr, align 8
  store %union.tree_node* %new1, %union.tree_node** %new1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  store i8 %4, i8* %class, align 1
  %5 = load i8, i8* %class, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 101
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %code, align 4
  %cmp5 = icmp eq i32 %6, 96
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i8 49, i8* %class, align 1
  br label %if.end.16

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i8, i8* %class, align 1
  %conv7 = sext i8 %7 to i32
  %cmp8 = icmp eq i32 %conv7, 101
  br i1 %cmp8, label %land.lhs.true.10, label %if.end

land.lhs.true.10:                                 ; preds = %if.else
  %8 = load i32, i32* %code, align 4
  %cmp11 = icmp eq i32 %8, 91
  br i1 %cmp11, label %if.then.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.10
  %9 = load i32, i32* %code, align 4
  %cmp13 = icmp eq i32 %9, 92
  br i1 %cmp13, label %if.then.15, label %if.end

if.then.15:                                       ; preds = %lor.lhs.false, %land.lhs.true.10
  store i8 50, i8* %class, align 1
  br label %if.end

if.end:                                           ; preds = %if.then.15, %lor.lhs.false, %if.else
  br label %if.end.16

if.end.16:                                        ; preds = %if.end, %if.then
  %10 = load i8, i8* %class, align 1
  %conv17 = sext i8 %10 to i32
  switch i32 %conv17, label %sw.default.96 [
    i32 49, label %sw.bb
    i32 50, label %sw.bb.21
    i32 101, label %sw.bb.32
    i32 60, label %sw.bb.58
  ]

sw.bb:                                            ; preds = %if.end.16
  %11 = load i32, i32* %code, align 4
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %13 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp = bitcast %union.tree_node* %13 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx18 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8
  %15 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %16 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %17 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call = call %union.tree_node* @eval_subst(%union.tree_node* %14, %union.tree_node* %15, %union.tree_node* %16, %union.tree_node* %17, %union.tree_node* %18)
  %call19 = call %union.tree_node* @build1(i32 %11, %union.tree_node* %12, %union.tree_node* %call)
  %call20 = call %union.tree_node* @fold(%union.tree_node* %call19)
  store %union.tree_node* %call20, %union.tree_node** %retval
  br label %return

sw.bb.21:                                         ; preds = %if.end.16
  %19 = load i32, i32* %code, align 4
  %20 = load %union.tree_node*, %union.tree_node** %type, align 8
  %21 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp22 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp22, i32 0, i32 2
  %arrayidx24 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands23, i32 0, i64 0
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8
  %23 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %24 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call25 = call %union.tree_node* @eval_subst(%union.tree_node* %22, %union.tree_node* %23, %union.tree_node* %24, %union.tree_node* %25, %union.tree_node* %26)
  %27 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp26 = bitcast %union.tree_node* %27 to %struct.tree_exp*
  %operands27 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp26, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands27, i32 0, i64 1
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8
  %29 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %31 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %32 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call29 = call %union.tree_node* @eval_subst(%union.tree_node* %28, %union.tree_node* %29, %union.tree_node* %30, %union.tree_node* %31, %union.tree_node* %32)
  %call30 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %19, %union.tree_node* %20, %union.tree_node* %call25, %union.tree_node* %call29)
  %call31 = call %union.tree_node* @fold(%union.tree_node* %call30)
  store %union.tree_node* %call31, %union.tree_node** %retval
  br label %return

sw.bb.32:                                         ; preds = %if.end.16
  %33 = load i32, i32* %code, align 4
  switch i32 %33, label %sw.default [
    i32 118, label %sw.bb.33
    i32 47, label %sw.bb.38
    i32 51, label %sw.bb.43
  ]

sw.bb.33:                                         ; preds = %sw.bb.32
  %34 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp34 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands35 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp34, i32 0, i32 2
  %arrayidx36 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands35, i32 0, i64 0
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8
  %36 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %38 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %39 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call37 = call %union.tree_node* @eval_subst(%union.tree_node* %35, %union.tree_node* %36, %union.tree_node* %37, %union.tree_node* %38, %union.tree_node* %39)
  store %union.tree_node* %call37, %union.tree_node** %retval
  br label %return

sw.bb.38:                                         ; preds = %sw.bb.32
  %40 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp39 = bitcast %union.tree_node* %40 to %struct.tree_exp*
  %operands40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp39, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands40, i32 0, i64 1
  %41 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8
  %42 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %43 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %44 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %45 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call42 = call %union.tree_node* @eval_subst(%union.tree_node* %41, %union.tree_node* %42, %union.tree_node* %43, %union.tree_node* %44, %union.tree_node* %45)
  store %union.tree_node* %call42, %union.tree_node** %retval
  br label %return

sw.bb.43:                                         ; preds = %sw.bb.32
  %46 = load i32, i32* %code, align 4
  %47 = load %union.tree_node*, %union.tree_node** %type, align 8
  %48 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp44 = bitcast %union.tree_node* %48 to %struct.tree_exp*
  %operands45 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp44, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands45, i32 0, i64 0
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx46, align 8
  %50 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %51 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %52 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %53 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call47 = call %union.tree_node* @eval_subst(%union.tree_node* %49, %union.tree_node* %50, %union.tree_node* %51, %union.tree_node* %52, %union.tree_node* %53)
  %54 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp48 = bitcast %union.tree_node* %54 to %struct.tree_exp*
  %operands49 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp48, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands49, i32 0, i64 1
  %55 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8
  %56 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %57 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %58 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %59 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call51 = call %union.tree_node* @eval_subst(%union.tree_node* %55, %union.tree_node* %56, %union.tree_node* %57, %union.tree_node* %58, %union.tree_node* %59)
  %60 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp52 = bitcast %union.tree_node* %60 to %struct.tree_exp*
  %operands53 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp52, i32 0, i32 2
  %arrayidx54 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands53, i32 0, i64 2
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8
  %62 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %63 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  %64 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %65 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  %call55 = call %union.tree_node* @eval_subst(%union.tree_node* %61, %union.tree_node* %62, %union.tree_node* %63, %union.tree_node* %64, %union.tree_node* %65)
  %call56 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %46, %union.tree_node* %47, %union.tree_node* %call47, %union.tree_node* %call51, %union.tree_node* %call55)
  %call57 = call %union.tree_node* @fold(%union.tree_node* %call56)
  store %union.tree_node* %call57, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %sw.bb.32
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %sw.bb.58

sw.bb.58:                                         ; preds = %if.end.16, %sw.epilog
  %66 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp59 = bitcast %union.tree_node* %66 to %struct.tree_exp*
  %operands60 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp59, i32 0, i32 2
  %arrayidx61 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands60, i32 0, i64 0
  %67 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8
  store %union.tree_node* %67, %union.tree_node** %arg0, align 8
  %68 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %exp62 = bitcast %union.tree_node* %68 to %struct.tree_exp*
  %operands63 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp62, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands63, i32 0, i64 1
  %69 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8
  store %union.tree_node* %69, %union.tree_node** %arg1, align 8
  %70 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %71 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %cmp65 = icmp eq %union.tree_node* %70, %71
  br i1 %cmp65, label %if.then.69, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %sw.bb.58
  %72 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %73 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %call68 = call i32 @operand_equal_p(%union.tree_node* %72, %union.tree_node* %73, i32 0)
  %tobool = icmp ne i32 %call68, 0
  br i1 %tobool, label %if.then.69, label %if.else.70

if.then.69:                                       ; preds = %lor.lhs.false.67, %sw.bb.58
  %74 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  store %union.tree_node* %74, %union.tree_node** %arg0, align 8
  br label %if.end.78

if.else.70:                                       ; preds = %lor.lhs.false.67
  %75 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %76 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %cmp71 = icmp eq %union.tree_node* %75, %76
  br i1 %cmp71, label %if.then.76, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %if.else.70
  %77 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %78 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %call74 = call i32 @operand_equal_p(%union.tree_node* %77, %union.tree_node* %78, i32 0)
  %tobool75 = icmp ne i32 %call74, 0
  br i1 %tobool75, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %lor.lhs.false.73, %if.else.70
  %79 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  store %union.tree_node* %79, %union.tree_node** %arg0, align 8
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.76, %lor.lhs.false.73
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.then.69
  %80 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %81 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %cmp79 = icmp eq %union.tree_node* %80, %81
  br i1 %cmp79, label %if.then.84, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %if.end.78
  %82 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %83 = load %union.tree_node*, %union.tree_node** %old0.addr, align 8
  %call82 = call i32 @operand_equal_p(%union.tree_node* %82, %union.tree_node* %83, i32 0)
  %tobool83 = icmp ne i32 %call82, 0
  br i1 %tobool83, label %if.then.84, label %if.else.85

if.then.84:                                       ; preds = %lor.lhs.false.81, %if.end.78
  %84 = load %union.tree_node*, %union.tree_node** %new0.addr, align 8
  store %union.tree_node* %84, %union.tree_node** %arg1, align 8
  br label %if.end.93

if.else.85:                                       ; preds = %lor.lhs.false.81
  %85 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %86 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %cmp86 = icmp eq %union.tree_node* %85, %86
  br i1 %cmp86, label %if.then.91, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %if.else.85
  %87 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %88 = load %union.tree_node*, %union.tree_node** %old1.addr, align 8
  %call89 = call i32 @operand_equal_p(%union.tree_node* %87, %union.tree_node* %88, i32 0)
  %tobool90 = icmp ne i32 %call89, 0
  br i1 %tobool90, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %lor.lhs.false.88, %if.else.85
  %89 = load %union.tree_node*, %union.tree_node** %new1.addr, align 8
  store %union.tree_node* %89, %union.tree_node** %arg1, align 8
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.91, %lor.lhs.false.88
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.then.84
  %90 = load i32, i32* %code, align 4
  %91 = load %union.tree_node*, %union.tree_node** %type, align 8
  %92 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %93 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call94 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %90, %union.tree_node* %91, %union.tree_node* %92, %union.tree_node* %93)
  %call95 = call %union.tree_node* @fold(%union.tree_node* %call94)
  store %union.tree_node* %call95, %union.tree_node** %retval
  br label %return

sw.default.96:                                    ; preds = %if.end.16
  %94 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  store %union.tree_node* %94, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.default.96, %if.end.93, %sw.bb.43, %sw.bb.38, %sw.bb.33, %sw.bb.21, %sw.bb
  %95 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %95
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @optimize_bit_field_compare(i32 %code, %union.tree_node* %compare_type, %union.tree_node* %lhs, %union.tree_node* %rhs) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %compare_type.addr = alloca %union.tree_node*, align 8
  %lhs.addr = alloca %union.tree_node*, align 8
  %rhs.addr = alloca %union.tree_node*, align 8
  %lbitpos = alloca i64, align 8
  %lbitsize = alloca i64, align 8
  %rbitpos = alloca i64, align 8
  %rbitsize = alloca i64, align 8
  %nbitpos = alloca i64, align 8
  %nbitsize = alloca i64, align 8
  %type = alloca %union.tree_node*, align 8
  %signed_type = alloca %union.tree_node*, align 8
  %unsigned_type = alloca %union.tree_node*, align 8
  %const_p = alloca i32, align 4
  %lmode = alloca i32, align 4
  %rmode = alloca i32, align 4
  %nmode = alloca i32, align 4
  %lunsignedp = alloca i32, align 4
  %runsignedp = alloca i32, align 4
  %lvolatilep = alloca i32, align 4
  %rvolatilep = alloca i32, align 4
  %linner = alloca %union.tree_node*, align 8
  %rinner = alloca %union.tree_node*, align 8
  %mask = alloca %union.tree_node*, align 8
  %offset = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %compare_type, %union.tree_node** %compare_type.addr, align 8
  store %union.tree_node* %lhs, %union.tree_node** %lhs.addr, align 8
  store %union.tree_node* %rhs, %union.tree_node** %rhs.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %const_p, align 4
  store i32 0, i32* %lvolatilep, align 4
  store i32 0, i32* %rvolatilep, align 4
  store %union.tree_node* null, %union.tree_node** %rinner, align 8
  %3 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %call = call %union.tree_node* @get_inner_reference(%union.tree_node* %3, i64* %lbitsize, i64* %lbitpos, %union.tree_node** %offset, i32* %lmode, i32* %lunsignedp, i32* %lvolatilep)
  store %union.tree_node* %call, %union.tree_node** %linner, align 8
  %4 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %5 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %cmp4 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp4, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load i64, i64* %lbitsize, align 8
  %7 = load i32, i32* %lmode, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %8 = load i16, i16* %arrayidx, align 2
  %conv6 = zext i16 %8 to i64
  %cmp7 = icmp eq i64 %6, %conv6
  br i1 %cmp7, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %9 = load i64, i64* %lbitsize, align 8
  %cmp10 = icmp slt i64 %9, 0
  br i1 %cmp10, label %if.then, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.9
  %10 = load %union.tree_node*, %union.tree_node** %offset, align 8
  %cmp13 = icmp ne %union.tree_node* %10, null
  br i1 %cmp13, label %if.then, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.12
  %11 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %common16 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 57
  br i1 %cmp20, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.15, %lor.lhs.false.12, %lor.lhs.false.9, %lor.lhs.false, %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.15
  %12 = load i32, i32* %const_p, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.end.47, label %if.then.22

if.then.22:                                       ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call23 = call %union.tree_node* @get_inner_reference(%union.tree_node* %13, i64* %rbitsize, i64* %rbitpos, %union.tree_node** %offset, i32* %rmode, i32* %runsignedp, i32* %rvolatilep)
  store %union.tree_node* %call23, %union.tree_node** %rinner, align 8
  %14 = load %union.tree_node*, %union.tree_node** %rinner, align 8
  %15 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %cmp24 = icmp eq %union.tree_node* %14, %15
  br i1 %cmp24, label %if.then.45, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %if.then.22
  %16 = load i64, i64* %lbitpos, align 8
  %17 = load i64, i64* %rbitpos, align 8
  %cmp27 = icmp ne i64 %16, %17
  br i1 %cmp27, label %if.then.45, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %lor.lhs.false.26
  %18 = load i64, i64* %lbitsize, align 8
  %19 = load i64, i64* %rbitsize, align 8
  %cmp30 = icmp ne i64 %18, %19
  br i1 %cmp30, label %if.then.45, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.29
  %20 = load i32, i32* %lunsignedp, align 4
  %21 = load i32, i32* %runsignedp, align 4
  %cmp33 = icmp ne i32 %20, %21
  br i1 %cmp33, label %if.then.45, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.32
  %22 = load %union.tree_node*, %union.tree_node** %offset, align 8
  %cmp36 = icmp ne %union.tree_node* %22, null
  br i1 %cmp36, label %if.then.45, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.35
  %23 = load %union.tree_node*, %union.tree_node** %rinner, align 8
  %common39 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 57
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %lor.lhs.false.38, %lor.lhs.false.35, %lor.lhs.false.32, %lor.lhs.false.29, %lor.lhs.false.26, %if.then.22
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.46:                                        ; preds = %lor.lhs.false.38
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.end
  %24 = load i64, i64* %lbitsize, align 8
  %conv48 = trunc i64 %24 to i32
  %25 = load i64, i64* %lbitpos, align 8
  %conv49 = trunc i64 %25 to i32
  %26 = load i32, i32* %const_p, align 4
  %tobool50 = icmp ne i32 %26, 0
  br i1 %tobool50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.47
  %27 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %common51 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type52, align 8
  %type53 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type53, i32 0, i32 7
  %29 = load i32, i32* %align, align 4
  br label %cond.end.74

cond.false:                                       ; preds = %if.end.47
  %30 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %common54 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type55, align 8
  %type56 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %align57 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type56, i32 0, i32 7
  %32 = load i32, i32* %align57, align 4
  %33 = load %union.tree_node*, %union.tree_node** %rinner, align 8
  %common58 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type59, align 8
  %type60 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %align61 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i32 0, i32 7
  %35 = load i32, i32* %align61, align 4
  %cmp62 = icmp ult i32 %32, %35
  br i1 %cmp62, label %cond.true.64, label %cond.false.69

cond.true.64:                                     ; preds = %cond.false
  %36 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %common65 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %type67 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %align68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i32 0, i32 7
  %38 = load i32, i32* %align68, align 4
  br label %cond.end

cond.false.69:                                    ; preds = %cond.false
  %39 = load %union.tree_node*, %union.tree_node** %rinner, align 8
  %common70 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type71, align 8
  %type72 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %align73 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type72, i32 0, i32 7
  %41 = load i32, i32* %align73, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.69, %cond.true.64
  %cond = phi i32 [ %38, %cond.true.64 ], [ %41, %cond.false.69 ]
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.end, %cond.true
  %cond75 = phi i32 [ %29, %cond.true ], [ %cond, %cond.end ]
  %42 = load i32, i32* @word_mode, align 4
  %43 = load i32, i32* %lvolatilep, align 4
  %tobool76 = icmp ne i32 %43, 0
  br i1 %tobool76, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.end.74
  %44 = load i32, i32* %rvolatilep, align 4
  %tobool77 = icmp ne i32 %44, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.end.74
  %45 = phi i1 [ true, %cond.end.74 ], [ %tobool77, %lor.rhs ]
  %lor.ext = zext i1 %45 to i32
  %call78 = call i32 @get_best_mode(i32 %conv48, i32 %conv49, i32 %cond75, i32 %42, i32 %lor.ext)
  store i32 %call78, i32* %nmode, align 4
  %46 = load i32, i32* %nmode, align 4
  %cmp79 = icmp eq i32 %46, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %lor.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.82:                                        ; preds = %lor.end
  %47 = load i32, i32* %nmode, align 4
  %call83 = call %union.tree_node* @type_for_mode(i32 %47, i32 0)
  store %union.tree_node* %call83, %union.tree_node** %signed_type, align 8
  %48 = load i32, i32* %nmode, align 4
  %call84 = call %union.tree_node* @type_for_mode(i32 %48, i32 1)
  store %union.tree_node* %call84, %union.tree_node** %unsigned_type, align 8
  %49 = load i32, i32* %nmode, align 4
  %idxprom85 = sext i32 %49 to i64
  %arrayidx86 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom85
  %50 = load i16, i16* %arrayidx86, align 2
  %conv87 = zext i16 %50 to i64
  store i64 %conv87, i64* %nbitsize, align 8
  %51 = load i64, i64* %lbitpos, align 8
  %52 = load i64, i64* %nbitsize, align 8
  %sub = sub nsw i64 %52, 1
  %neg = xor i64 %sub, -1
  %and = and i64 %51, %neg
  store i64 %and, i64* %nbitpos, align 8
  %53 = load i64, i64* %nbitpos, align 8
  %54 = load i64, i64* %lbitpos, align 8
  %sub88 = sub nsw i64 %54, %53
  store i64 %sub88, i64* %lbitpos, align 8
  %55 = load i64, i64* %nbitsize, align 8
  %56 = load i64, i64* %lbitsize, align 8
  %cmp89 = icmp eq i64 %55, %56
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.82
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.92:                                        ; preds = %if.end.82
  %call93 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call93, %union.tree_node** %mask, align 8
  %57 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %58 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %common94 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common94, i32 0, i32 1
  store %union.tree_node* %57, %union.tree_node** %type95, align 8
  %59 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call96 = call i32 @force_fit_type(%union.tree_node* %59, i32 0)
  %60 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %61 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call97 = call %union.tree_node* @convert(%union.tree_node* %60, %union.tree_node* %61)
  store %union.tree_node* %call97, %union.tree_node** %mask, align 8
  %62 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %63 = load i64, i64* %nbitsize, align 8
  %64 = load i64, i64* %lbitsize, align 8
  %sub98 = sub nsw i64 %63, %64
  %call99 = call %union.tree_node* @size_int_wide(i64 %sub98, i32 0)
  %call100 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %62, %union.tree_node* %call99, i32 0)
  store %union.tree_node* %call100, %union.tree_node** %mask, align 8
  %65 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %66 = load i64, i64* %nbitsize, align 8
  %67 = load i64, i64* %lbitsize, align 8
  %sub101 = sub nsw i64 %66, %67
  %68 = load i64, i64* %lbitpos, align 8
  %sub102 = sub nsw i64 %sub101, %68
  %call103 = call %union.tree_node* @size_int_wide(i64 %sub102, i32 0)
  %call104 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %65, %union.tree_node* %call103, i32 0)
  store %union.tree_node* %call104, %union.tree_node** %mask, align 8
  %69 = load i32, i32* %const_p, align 4
  %tobool105 = icmp ne i32 %69, 0
  br i1 %tobool105, label %if.end.116, label %if.then.106

if.then.106:                                      ; preds = %if.end.92
  %70 = load i32, i32* %code.addr, align 4
  %71 = load %union.tree_node*, %union.tree_node** %compare_type.addr, align 8
  %72 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %73 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %74 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %75 = load i64, i64* %nbitsize, align 8
  %conv107 = trunc i64 %75 to i32
  %76 = load i64, i64* %nbitpos, align 8
  %conv108 = trunc i64 %76 to i32
  %call109 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %73, %union.tree_node* %74, i32 %conv107, i32 %conv108, i32 1)
  %77 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call110 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %72, %union.tree_node* %call109, %union.tree_node* %77)
  %78 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %79 = load %union.tree_node*, %union.tree_node** %rinner, align 8
  %80 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %81 = load i64, i64* %nbitsize, align 8
  %conv111 = trunc i64 %81 to i32
  %82 = load i64, i64* %nbitpos, align 8
  %conv112 = trunc i64 %82 to i32
  %call113 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %79, %union.tree_node* %80, i32 %conv111, i32 %conv112, i32 1)
  %83 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call114 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %78, %union.tree_node* %call113, %union.tree_node* %83)
  %call115 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %70, %union.tree_node* %71, %union.tree_node* %call110, %union.tree_node* %call114)
  store %union.tree_node* %call115, %union.tree_node** %retval
  br label %return

if.end.116:                                       ; preds = %if.end.92
  %84 = load i32, i32* %lunsignedp, align 4
  %tobool117 = icmp ne i32 %84, 0
  br i1 %tobool117, label %if.then.118, label %if.else

if.then.118:                                      ; preds = %if.end.116
  %85 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %86 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call119 = call %union.tree_node* @convert(%union.tree_node* %85, %union.tree_node* %86)
  %87 = load i64, i64* %lbitsize, align 8
  %call120 = call %union.tree_node* @size_int_wide(i64 %87, i32 0)
  %call121 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %call119, %union.tree_node* %call120, i32 0)
  %call122 = call i32 @integer_zerop(%union.tree_node* %call121)
  %tobool123 = icmp ne i32 %call122, 0
  br i1 %tobool123, label %if.end.134, label %if.then.124

if.then.124:                                      ; preds = %if.then.118
  %88 = load i32, i32* %code.addr, align 4
  %cmp125 = icmp eq i32 %88, 102
  %conv126 = zext i1 %cmp125 to i32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i32 0, i32 0), i32 %conv126)
  %89 = load %union.tree_node*, %union.tree_node** %compare_type.addr, align 8
  %90 = load i32, i32* %code.addr, align 4
  %cmp127 = icmp eq i32 %90, 102
  br i1 %cmp127, label %cond.true.129, label %cond.false.130

cond.true.129:                                    ; preds = %if.then.124
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.131

cond.false.130:                                   ; preds = %if.then.124
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.131

cond.end.131:                                     ; preds = %cond.false.130, %cond.true.129
  %cond132 = phi %union.tree_node* [ %91, %cond.true.129 ], [ %92, %cond.false.130 ]
  %call133 = call %union.tree_node* @convert(%union.tree_node* %89, %union.tree_node* %cond132)
  store %union.tree_node* %call133, %union.tree_node** %retval
  br label %return

if.end.134:                                       ; preds = %if.then.118
  br label %if.end.154

if.else:                                          ; preds = %if.end.116
  %93 = load %union.tree_node*, %union.tree_node** %signed_type, align 8
  %94 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call135 = call %union.tree_node* @convert(%union.tree_node* %93, %union.tree_node* %94)
  %95 = load i64, i64* %lbitsize, align 8
  %sub136 = sub nsw i64 %95, 1
  %call137 = call %union.tree_node* @size_int_wide(i64 %sub136, i32 0)
  %call138 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %call135, %union.tree_node* %call137, i32 0)
  store %union.tree_node* %call138, %union.tree_node** %tem, align 8
  %96 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call139 = call i32 @integer_zerop(%union.tree_node* %96)
  %tobool140 = icmp ne i32 %call139, 0
  br i1 %tobool140, label %if.end.153, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %97 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call141 = call i32 @integer_all_onesp(%union.tree_node* %97)
  %tobool142 = icmp ne i32 %call141, 0
  br i1 %tobool142, label %if.end.153, label %if.then.143

if.then.143:                                      ; preds = %land.lhs.true
  %98 = load i32, i32* %code.addr, align 4
  %cmp144 = icmp eq i32 %98, 102
  %conv145 = zext i1 %cmp144 to i32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i32 0, i32 0), i32 %conv145)
  %99 = load %union.tree_node*, %union.tree_node** %compare_type.addr, align 8
  %100 = load i32, i32* %code.addr, align 4
  %cmp146 = icmp eq i32 %100, 102
  br i1 %cmp146, label %cond.true.148, label %cond.false.149

cond.true.148:                                    ; preds = %if.then.143
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.150

cond.false.149:                                   ; preds = %if.then.143
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.150

cond.end.150:                                     ; preds = %cond.false.149, %cond.true.148
  %cond151 = phi %union.tree_node* [ %101, %cond.true.148 ], [ %102, %cond.false.149 ]
  %call152 = call %union.tree_node* @convert(%union.tree_node* %99, %union.tree_node* %cond151)
  store %union.tree_node* %call152, %union.tree_node** %retval
  br label %return

if.end.153:                                       ; preds = %land.lhs.true, %if.else
  br label %if.end.154

if.end.154:                                       ; preds = %if.end.153, %if.end.134
  %103 = load i64, i64* %lbitsize, align 8
  %cmp155 = icmp eq i64 %103, 1
  br i1 %cmp155, label %land.lhs.true.157, label %if.end.165

land.lhs.true.157:                                ; preds = %if.end.154
  %104 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call158 = call i32 @integer_zerop(%union.tree_node* %104)
  %tobool159 = icmp ne i32 %call158, 0
  br i1 %tobool159, label %if.end.165, label %if.then.160

if.then.160:                                      ; preds = %land.lhs.true.157
  %105 = load i32, i32* %code.addr, align 4
  %cmp161 = icmp eq i32 %105, 101
  %cond163 = select i1 %cmp161, i32 102, i32 101
  store i32 %cond163, i32* %code.addr, align 4
  %106 = load %union.tree_node*, %union.tree_node** %type, align 8
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call164 = call %union.tree_node* @convert(%union.tree_node* %106, %union.tree_node* %107)
  store %union.tree_node* %call164, %union.tree_node** %rhs.addr, align 8
  br label %if.end.165

if.end.165:                                       ; preds = %if.then.160, %land.lhs.true.157, %if.end.154
  %108 = load %union.tree_node*, %union.tree_node** %linner, align 8
  %109 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %110 = load i64, i64* %nbitsize, align 8
  %conv166 = trunc i64 %110 to i32
  %111 = load i64, i64* %nbitpos, align 8
  %conv167 = trunc i64 %111 to i32
  %call168 = call %union.tree_node* @make_bit_field_ref(%union.tree_node* %108, %union.tree_node* %109, i32 %conv166, i32 %conv167, i32 1)
  store %union.tree_node* %call168, %union.tree_node** %lhs.addr, align 8
  %112 = load i32, i32* %lvolatilep, align 4
  %tobool169 = icmp ne i32 %112, 0
  br i1 %tobool169, label %if.then.170, label %if.end.178

if.then.170:                                      ; preds = %if.end.165
  %113 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common171 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common171, i32 0, i32 2
  %bf.load172 = load i32, i32* %side_effects_flag, align 8
  %bf.clear173 = and i32 %bf.load172, -257
  %bf.set = or i32 %bf.clear173, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %114 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %common174 = bitcast %union.tree_node* %114 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 2
  %bf.load175 = load i32, i32* %volatile_flag, align 8
  %bf.clear176 = and i32 %bf.load175, -2049
  %bf.set177 = or i32 %bf.clear176, 2048
  store i32 %bf.set177, i32* %volatile_flag, align 8
  br label %if.end.178

if.end.178:                                       ; preds = %if.then.170, %if.end.165
  %115 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %116 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call179 = call %union.tree_node* @convert(%union.tree_node* %115, %union.tree_node* %116)
  %117 = load i64, i64* %lbitpos, align 8
  %call180 = call %union.tree_node* @size_int_wide(i64 %117, i32 0)
  %call181 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %call179, %union.tree_node* %call180, i32 0)
  %118 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call182 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %call181, %union.tree_node* %118, i32 0)
  %call183 = call %union.tree_node* @fold(%union.tree_node* %call182)
  store %union.tree_node* %call183, %union.tree_node** %rhs.addr, align 8
  %119 = load i32, i32* %code.addr, align 4
  %120 = load %union.tree_node*, %union.tree_node** %compare_type.addr, align 8
  %121 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %122 = load %union.tree_node*, %union.tree_node** %lhs.addr, align 8
  %123 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call184 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %121, %union.tree_node* %122, %union.tree_node* %123)
  %124 = load %union.tree_node*, %union.tree_node** %rhs.addr, align 8
  %call185 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %119, %union.tree_node* %120, %union.tree_node* %call184, %union.tree_node* %124)
  store %union.tree_node* %call185, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.178, %cond.end.150, %cond.end.131, %if.then.106, %if.then.91, %if.then.81, %if.then.45, %if.then
  %125 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %125
}

declare i32 @target_isnan(%struct.realvaluetype* byval align 8) #3

declare %union.tree_node* @truthvalue_conversion(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @pedantic_omit_one_operand(%union.tree_node* %type, %union.tree_node* %result, %union.tree_node* %omitted) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %result.addr = alloca %union.tree_node*, align 8
  %omitted.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %result, %union.tree_node** %result.addr, align 8
  store %union.tree_node* %omitted, %union.tree_node** %omitted.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %1)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %2 = load %union.tree_node*, %union.tree_node** %omitted.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %side_effects_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 8
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %omitted.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call1 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %3, %union.tree_node* %4, %union.tree_node* %5)
  store %union.tree_node* %call1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call2 = call %union.tree_node* @pedantic_non_lvalue(%union.tree_node* %6)
  store %union.tree_node* %call2, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %7
}

; Function Attrs: nounwind uwtable
define internal i32 @operand_equal_for_comparison_p(%union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %other) #0 {
entry:
  %retval = alloca i32, align 4
  %arg0.addr = alloca %union.tree_node*, align 8
  %arg1.addr = alloca %union.tree_node*, align 8
  %other.addr = alloca %union.tree_node*, align 8
  %unsignedp1 = alloca i32, align 4
  %unsignedpo = alloca i32, align 4
  %primarg0 = alloca %union.tree_node*, align 8
  %primarg1 = alloca %union.tree_node*, align 8
  %primother = alloca %union.tree_node*, align 8
  %correct_width = alloca i32, align 4
  %type173 = alloca %union.tree_node*, align 8
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %other, %union.tree_node** %other.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call = call i32 @operand_equal_p(%union.tree_node* %0, %union.tree_node* %1, i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %lor.lhs.false.25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %common4 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 10
  br i1 %cmp8, label %lor.lhs.false.25, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common10 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type11, align 8
  %common12 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 11
  br i1 %cmp16, label %lor.lhs.false.25, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.9
  %8 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common18 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type19, align 8
  %common20 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 12
  br i1 %cmp24, label %lor.lhs.false.25, label %if.then.57

lor.lhs.false.25:                                 ; preds = %lor.lhs.false.17, %lor.lhs.false.9, %lor.lhs.false, %if.end
  %10 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common26 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type27, align 8
  %common28 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 6
  br i1 %cmp32, label %if.end.58, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false.25
  %12 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common34 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type35, align 8
  %common36 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 10
  br i1 %cmp40, label %if.end.58, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %lor.lhs.false.33
  %14 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common42 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type43, align 8
  %common44 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load46 = load i32, i32* %code45, align 8
  %bf.clear47 = and i32 %bf.load46, 255
  %cmp48 = icmp eq i32 %bf.clear47, 11
  br i1 %cmp48, label %if.end.58, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %lor.lhs.false.41
  %16 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common50 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %type51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %type51, align 8
  %common52 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 2
  %bf.load54 = load i32, i32* %code53, align 8
  %bf.clear55 = and i32 %bf.load54, 255
  %cmp56 = icmp eq i32 %bf.clear55, 12
  br i1 %cmp56, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %lor.lhs.false.49, %lor.lhs.false.17
  store i32 0, i32* %retval
  br label %return

if.end.58:                                        ; preds = %lor.lhs.false.49, %lor.lhs.false.41, %lor.lhs.false.33, %lor.lhs.false.25
  %18 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  store %union.tree_node* %18, %union.tree_node** %primarg0, align 8
  %19 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  store %union.tree_node* %19, %union.tree_node** %primarg1, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.58
  %20 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %common59 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 2
  %bf.load61 = load i32, i32* %code60, align 8
  %bf.clear62 = and i32 %bf.load61, 255
  %cmp63 = icmp eq i32 %bf.clear62, 115
  br i1 %cmp63, label %land.lhs.true, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %while.cond
  %21 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %common65 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %code66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 2
  %bf.load67 = load i32, i32* %code66, align 8
  %bf.clear68 = and i32 %bf.load67, 255
  %cmp69 = icmp eq i32 %bf.clear68, 114
  br i1 %cmp69, label %land.lhs.true, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %lor.lhs.false.64
  %22 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %common71 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %code72, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %cmp75 = icmp eq i32 %bf.clear74, 116
  br i1 %cmp75, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.70, %lor.lhs.false.64, %while.cond
  %23 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %exp = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp76 = icmp ne %union.tree_node* %24, %25
  br i1 %cmp76, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %26 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %common77 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type78, align 8
  %type79 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type79, i32 0, i32 6
  %bf.load80 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load80, 9
  %bf.clear81 = and i32 %bf.lshr, 127
  %28 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %exp82 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands83 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp82, i32 0, i32 2
  %arrayidx84 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands83, i32 0, i64 0
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx84, align 8
  %common85 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type86, align 8
  %type87 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %mode88 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i32 0, i32 6
  %bf.load89 = load i32, i32* %mode88, align 4
  %bf.lshr90 = lshr i32 %bf.load89, 9
  %bf.clear91 = and i32 %bf.lshr90, 127
  %cmp92 = icmp eq i32 %bf.clear81, %bf.clear91
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.70
  %31 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.70 ], [ %cmp92, %land.rhs ]
  br i1 %31, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %32 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %exp93 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands94 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp93, i32 0, i32 2
  %arrayidx95 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands94, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx95, align 8
  store %union.tree_node* %33, %union.tree_node** %primarg0, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %while.cond.96

while.cond.96:                                    ; preds = %while.body.139, %while.end
  %34 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common97 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code98 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load99 = load i32, i32* %code98, align 8
  %bf.clear100 = and i32 %bf.load99, 255
  %cmp101 = icmp eq i32 %bf.clear100, 115
  br i1 %cmp101, label %land.lhs.true.114, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %while.cond.96
  %35 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common103 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 2
  %bf.load105 = load i32, i32* %code104, align 8
  %bf.clear106 = and i32 %bf.load105, 255
  %cmp107 = icmp eq i32 %bf.clear106, 114
  br i1 %cmp107, label %land.lhs.true.114, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %lor.lhs.false.102
  %36 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common109 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 2
  %bf.load111 = load i32, i32* %code110, align 8
  %bf.clear112 = and i32 %bf.load111, 255
  %cmp113 = icmp eq i32 %bf.clear112, 116
  br i1 %cmp113, label %land.lhs.true.114, label %land.end.138

land.lhs.true.114:                                ; preds = %lor.lhs.false.108, %lor.lhs.false.102, %while.cond.96
  %37 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %exp115 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands116 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp115, i32 0, i32 2
  %arrayidx117 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands116, i32 0, i64 0
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx117, align 8
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp118 = icmp ne %union.tree_node* %38, %39
  br i1 %cmp118, label %land.rhs.119, label %land.end.138

land.rhs.119:                                     ; preds = %land.lhs.true.114
  %40 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common120 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type121 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common120, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type121, align 8
  %type122 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %mode123 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type122, i32 0, i32 6
  %bf.load124 = load i32, i32* %mode123, align 4
  %bf.lshr125 = lshr i32 %bf.load124, 9
  %bf.clear126 = and i32 %bf.lshr125, 127
  %42 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %exp127 = bitcast %union.tree_node* %42 to %struct.tree_exp*
  %operands128 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp127, i32 0, i32 2
  %arrayidx129 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands128, i32 0, i64 0
  %43 = load %union.tree_node*, %union.tree_node** %arrayidx129, align 8
  %common130 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %type131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 1
  %44 = load %union.tree_node*, %union.tree_node** %type131, align 8
  %type132 = bitcast %union.tree_node* %44 to %struct.tree_type*
  %mode133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i32 0, i32 6
  %bf.load134 = load i32, i32* %mode133, align 4
  %bf.lshr135 = lshr i32 %bf.load134, 9
  %bf.clear136 = and i32 %bf.lshr135, 127
  %cmp137 = icmp eq i32 %bf.clear126, %bf.clear136
  br label %land.end.138

land.end.138:                                     ; preds = %land.rhs.119, %land.lhs.true.114, %lor.lhs.false.108
  %45 = phi i1 [ false, %land.lhs.true.114 ], [ false, %lor.lhs.false.108 ], [ %cmp137, %land.rhs.119 ]
  br i1 %45, label %while.body.139, label %while.end.143

while.body.139:                                   ; preds = %land.end.138
  %46 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %exp140 = bitcast %union.tree_node* %46 to %struct.tree_exp*
  %operands141 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp140, i32 0, i32 2
  %arrayidx142 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands141, i32 0, i64 0
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx142, align 8
  store %union.tree_node* %47, %union.tree_node** %primarg1, align 8
  br label %while.cond.96

while.end.143:                                    ; preds = %land.end.138
  %48 = load %union.tree_node*, %union.tree_node** %primarg0, align 8
  %49 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %call144 = call i32 @operand_equal_p(%union.tree_node* %48, %union.tree_node* %49, i32 0)
  %tobool145 = icmp ne i32 %call144, 0
  br i1 %tobool145, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %while.end.143
  store i32 1, i32* %retval
  br label %return

if.end.147:                                       ; preds = %while.end.143
  %50 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call148 = call %union.tree_node* @get_narrower(%union.tree_node* %50, i32* %unsignedp1)
  store %union.tree_node* %call148, %union.tree_node** %primarg1, align 8
  %51 = load %union.tree_node*, %union.tree_node** %other.addr, align 8
  %call149 = call %union.tree_node* @get_narrower(%union.tree_node* %51, i32* %unsignedpo)
  store %union.tree_node* %call149, %union.tree_node** %primother, align 8
  %52 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %common150 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common150, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type151, align 8
  %type152 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type152, i32 0, i32 6
  %bf.load153 = load i32, i32* %precision, align 4
  %bf.clear154 = and i32 %bf.load153, 511
  store i32 %bf.clear154, i32* %correct_width, align 4
  %54 = load i32, i32* %unsignedp1, align 4
  %55 = load i32, i32* %unsignedpo, align 4
  %cmp155 = icmp eq i32 %54, %55
  br i1 %cmp155, label %land.lhs.true.156, label %if.end.185

land.lhs.true.156:                                ; preds = %if.end.147
  %56 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common157 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type158, align 8
  %type159 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %precision160 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type159, i32 0, i32 6
  %bf.load161 = load i32, i32* %precision160, align 4
  %bf.clear162 = and i32 %bf.load161, 511
  %58 = load i32, i32* %correct_width, align 4
  %cmp163 = icmp ult i32 %bf.clear162, %58
  br i1 %cmp163, label %land.lhs.true.164, label %if.end.185

land.lhs.true.164:                                ; preds = %land.lhs.true.156
  %59 = load %union.tree_node*, %union.tree_node** %primother, align 8
  %common165 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %type166 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common165, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %type166, align 8
  %type167 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %precision168 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type167, i32 0, i32 6
  %bf.load169 = load i32, i32* %precision168, align 4
  %bf.clear170 = and i32 %bf.load169, 511
  %61 = load i32, i32* %correct_width, align 4
  %cmp171 = icmp ult i32 %bf.clear170, %61
  br i1 %cmp171, label %if.then.172, label %if.end.185

if.then.172:                                      ; preds = %land.lhs.true.164
  %62 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common174 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  %63 = load %union.tree_node*, %union.tree_node** %type175, align 8
  store %union.tree_node* %63, %union.tree_node** %type173, align 8
  %64 = load i32, i32* %unsignedp1, align 4
  %65 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %common176 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type177, align 8
  %call178 = call %union.tree_node* @signed_or_unsigned_type(i32 %64, %union.tree_node* %66)
  %67 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %call179 = call %union.tree_node* @convert(%union.tree_node* %call178, %union.tree_node* %67)
  store %union.tree_node* %call179, %union.tree_node** %primarg1, align 8
  %68 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %69 = load %union.tree_node*, %union.tree_node** %type173, align 8
  %70 = load %union.tree_node*, %union.tree_node** %primarg1, align 8
  %call180 = call %union.tree_node* @convert(%union.tree_node* %69, %union.tree_node* %70)
  %call181 = call i32 @operand_equal_p(%union.tree_node* %68, %union.tree_node* %call180, i32 0)
  %tobool182 = icmp ne i32 %call181, 0
  br i1 %tobool182, label %if.then.183, label %if.end.184

if.then.183:                                      ; preds = %if.then.172
  store i32 1, i32* %retval
  br label %return

if.end.184:                                       ; preds = %if.then.172
  br label %if.end.185

if.end.185:                                       ; preds = %if.end.184, %land.lhs.true.164, %land.lhs.true.156, %if.end.147
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.185, %if.then.183, %if.then.146, %if.then.57, %if.then
  %71 = load i32, i32* %retval
  ret i32 %71
}

declare i32 @has_cleanups(%union.tree_node*) #3

declare %union.tree_node* @fold_builtin(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define i32 @tree_expr_nonnegative_p(%union.tree_node* %t) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 25, label %sw.bb.1
    i32 62, label %sw.bb.2
    i32 63, label %sw.bb.2
    i32 64, label %sw.bb.2
    i32 65, label %sw.bb.2
    i32 66, label %sw.bb.9
    i32 67, label %sw.bb.9
    i32 68, label %sw.bb.9
    i32 69, label %sw.bb.9
    i32 51, label %sw.bb.14
    i32 47, label %sw.bb.28
    i32 78, label %sw.bb.33
    i32 79, label %sw.bb.47
    i32 48, label %sw.bb.58
    i32 52, label %sw.bb.63
    i32 118, label %sw.bb.68
    i32 116, label %sw.bb.73
    i32 120, label %sw.bb.78
  ]

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call = call i32 @tree_int_cst_sgn(%union.tree_node* %1)
  %cmp = icmp sge i32 %call, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %entry, %entry, %entry, %entry
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %call3 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %3)
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb.2
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp4 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands5 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4, i32 0, i32 2
  %arrayidx6 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands5, i32 0, i64 1
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8
  %call7 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %5)
  %tobool8 = icmp ne i32 %call7, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb.2
  %6 = phi i1 [ false, %sw.bb.2 ], [ %tobool8, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.9:                                          ; preds = %entry, %entry, %entry, %entry
  %7 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp10 = bitcast %union.tree_node* %7 to %struct.tree_exp*
  %operands11 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp10, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands11, i32 0, i64 0
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8
  %call13 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %8)
  store i32 %call13, i32* %retval
  br label %return

sw.bb.14:                                         ; preds = %entry
  %9 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp15 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 1
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  %call18 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %10)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %land.rhs.20, label %land.end.26

land.rhs.20:                                      ; preds = %sw.bb.14
  %11 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp21 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands22, i32 0, i64 2
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  %call24 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %12)
  %tobool25 = icmp ne i32 %call24, 0
  br label %land.end.26

land.end.26:                                      ; preds = %land.rhs.20, %sw.bb.14
  %13 = phi i1 [ false, %sw.bb.14 ], [ %tobool25, %land.rhs.20 ]
  %land.ext27 = zext i1 %13 to i32
  store i32 %land.ext27, i32* %retval
  br label %return

sw.bb.28:                                         ; preds = %entry
  %14 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp29 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 1
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  %call32 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %15)
  store i32 %call32, i32* %retval
  br label %return

sw.bb.33:                                         ; preds = %entry
  %16 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp34 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands35 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp34, i32 0, i32 2
  %arrayidx36 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands35, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8
  %call37 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %17)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %land.rhs.39, label %land.end.45

land.rhs.39:                                      ; preds = %sw.bb.33
  %18 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp40 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  %call43 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %19)
  %tobool44 = icmp ne i32 %call43, 0
  br label %land.end.45

land.end.45:                                      ; preds = %land.rhs.39, %sw.bb.33
  %20 = phi i1 [ false, %sw.bb.33 ], [ %tobool44, %land.rhs.39 ]
  %land.ext46 = zext i1 %20 to i32
  store i32 %land.ext46, i32* %retval
  br label %return

sw.bb.47:                                         ; preds = %entry
  %21 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp48 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands49 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp48, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands49, i32 0, i64 0
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8
  %call51 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %22)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb.47
  %23 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp53 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp53, i32 0, i32 2
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands54, i32 0, i64 1
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8
  %call56 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %24)
  %tobool57 = icmp ne i32 %call56, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb.47
  %25 = phi i1 [ true, %sw.bb.47 ], [ %tobool57, %lor.rhs ]
  %lor.ext = zext i1 %25 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

sw.bb.58:                                         ; preds = %entry
  %26 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp59 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands60 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp59, i32 0, i32 2
  %arrayidx61 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands60, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8
  %call62 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %27)
  store i32 %call62, i32* %retval
  br label %return

sw.bb.63:                                         ; preds = %entry
  %28 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp64 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands65, i32 0, i64 1
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8
  %call67 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %29)
  store i32 %call67, i32* %retval
  br label %return

sw.bb.68:                                         ; preds = %entry
  %30 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp69 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp69, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands70, i32 0, i64 0
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx71, align 8
  %call72 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %31)
  store i32 %call72, i32* %retval
  br label %return

sw.bb.73:                                         ; preds = %entry
  %32 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp74 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands75 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp74, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands75, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx76, align 8
  %call77 = call i32 @tree_expr_nonnegative_p(%union.tree_node* %33)
  store i32 %call77, i32* %retval
  br label %return

sw.bb.78:                                         ; preds = %entry
  %34 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp79 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands80 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp79, i32 0, i32 2
  %arrayidx81 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands80, i32 0, i64 1
  %35 = bitcast %union.tree_node** %arrayidx81 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %call82 = call i32 @rtl_expr_nonnegative_p(%struct.rtx_def* %36)
  store i32 %call82, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  %37 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common83 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code84 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common83, i32 0, i32 2
  %bf.load85 = load i32, i32* %code84, align 8
  %bf.clear86 = and i32 %bf.load85, 255
  %call87 = call i32 @truth_value_p(i32 %bf.clear86)
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %if.then, label %if.else

if.then:                                          ; preds = %sw.default
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %sw.default
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then, %sw.bb.78, %sw.bb.73, %sw.bb.68, %sw.bb.63, %sw.bb.58, %lor.end, %land.end.45, %sw.bb.28, %land.end.26, %sw.bb.9, %land.end, %sw.bb.1, %sw.bb
  %38 = load i32, i32* %retval
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define i32 @rtl_expr_nonnegative_p(%struct.rtx_def* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.rtx_def*, align 8
  %units = alloca i32, align 4
  %i = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %r, %struct.rtx_def** %r.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 54, label %sw.bb
    i32 55, label %sw.bb.1
    i32 56, label %sw.bb.11
    i32 68, label %sw.bb.22
    i32 67, label %sw.bb.22
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx to i64*
  %3 = load i64, i64* %rtwint, align 8
  %cmp = icmp sge i64 %3, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load2 = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load2, 16
  %bf.clear3 = and i32 %bf.lshr, 255
  %cmp4 = icmp eq i32 %bf.clear3, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 2
  %rtwint8 = bitcast %union.rtunion_def* %arrayidx7 to i64*
  %7 = load i64, i64* %rtwint8, align 8
  %cmp9 = icmp sge i64 %7, 0
  %conv10 = zext i1 %cmp9 to i32
  store i32 %conv10, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb.1
  store i32 0, i32* %retval
  br label %return

sw.bb.11:                                         ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i32 0, i32 0
  %10 = load i32, i32* %num_elem, align 4
  store i32 %10, i32* %units, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb.11
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %units, align 4
  %cmp14 = icmp slt i32 %11, %12
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %idxprom = sext i32 %13 to i64
  %14 = load %struct.rtx_def*, %struct.rtx_def** %r.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtvec18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtvec_def**
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec18, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %elt, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %call = call i32 @rtl_expr_nonnegative_p(%struct.rtx_def* %17)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

if.end.21:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.21
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

sw.bb.22:                                         ; preds = %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.22, %for.end, %if.then.20, %if.end, %if.then, %sw.bb
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @strip_compound_expr(%union.tree_node* %t, %union.tree_node* %s) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %s.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %s, %union.tree_node** %s.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %1, 47
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 114
  br i1 %cmp6, label %land.lhs.true.7, label %if.else

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp8 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands9 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp8, i32 0, i32 2
  %arrayidx10 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands9, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8
  %exp11 = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands12 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp11, i32 0, i32 2
  %arrayidx13 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands12, i32 0, i64 0
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8
  %7 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %cmp14 = icmp eq %union.tree_node* %6, %7
  br i1 %cmp14, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.7
  %8 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp15 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 1
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.7, %land.lhs.true, %entry
  %10 = load i32, i32* %code, align 4
  %cmp18 = icmp eq i32 %10, 51
  br i1 %cmp18, label %if.then.19, label %if.else.40

if.then.19:                                       ; preds = %if.else
  %11 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp20 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands21 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp20, i32 0, i32 2
  %arrayidx22 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands21, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8
  %13 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call = call %union.tree_node* @strip_compound_expr(%union.tree_node* %12, %union.tree_node* %13)
  %14 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp23 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp23, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands24, i32 0, i64 0
  store %union.tree_node* %call, %union.tree_node** %arrayidx25, align 8
  %15 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp26 = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands27 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp26, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands27, i32 0, i64 1
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8
  %17 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call29 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %16, %union.tree_node* %17)
  %18 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp30 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands31 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp30, i32 0, i32 2
  %arrayidx32 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands31, i32 0, i64 1
  store %union.tree_node* %call29, %union.tree_node** %arrayidx32, align 8
  %19 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp33 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp33, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands34, i32 0, i64 2
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8
  %21 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call36 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %20, %union.tree_node* %21)
  %22 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp37 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands38 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp37, i32 0, i32 2
  %arrayidx39 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands38, i32 0, i64 2
  store %union.tree_node* %call36, %union.tree_node** %arrayidx39, align 8
  br label %if.end.79

if.else.40:                                       ; preds = %if.else
  %23 = load i32, i32* %code, align 4
  %idxprom = sext i32 %23 to i64
  %arrayidx41 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %24 = load i8, i8* %arrayidx41, align 1
  %conv = sext i8 %24 to i32
  %cmp42 = icmp eq i32 %conv, 49
  br i1 %cmp42, label %if.then.44, label %if.else.52

if.then.44:                                       ; preds = %if.else.40
  %25 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp45 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands46 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp45, i32 0, i32 2
  %arrayidx47 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands46, i32 0, i64 0
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8
  %27 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call48 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %26, %union.tree_node* %27)
  %28 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp49 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp49, i32 0, i32 2
  %arrayidx51 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands50, i32 0, i64 0
  store %union.tree_node* %call48, %union.tree_node** %arrayidx51, align 8
  br label %if.end.78

if.else.52:                                       ; preds = %if.else.40
  %29 = load i32, i32* %code, align 4
  %idxprom53 = sext i32 %29 to i64
  %arrayidx54 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom53
  %30 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %30 to i32
  %cmp56 = icmp eq i32 %conv55, 60
  br i1 %cmp56, label %if.then.63, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.52
  %31 = load i32, i32* %code, align 4
  %idxprom58 = sext i32 %31 to i64
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom58
  %32 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %32 to i32
  %cmp61 = icmp eq i32 %conv60, 50
  br i1 %cmp61, label %if.then.63, label %if.end

if.then.63:                                       ; preds = %lor.lhs.false, %if.else.52
  %33 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp64 = bitcast %union.tree_node* %33 to %struct.tree_exp*
  %operands65 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp64, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands65, i32 0, i64 0
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8
  %35 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call67 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %34, %union.tree_node* %35)
  %36 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp68 = bitcast %union.tree_node* %36 to %struct.tree_exp*
  %operands69 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp68, i32 0, i32 2
  %arrayidx70 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands69, i32 0, i64 0
  store %union.tree_node* %call67, %union.tree_node** %arrayidx70, align 8
  %37 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp71 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands72 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp71, i32 0, i32 2
  %arrayidx73 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands72, i32 0, i64 1
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx73, align 8
  %39 = load %union.tree_node*, %union.tree_node** %s.addr, align 8
  %call74 = call %union.tree_node* @strip_compound_expr(%union.tree_node* %38, %union.tree_node* %39)
  %40 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp75 = bitcast %union.tree_node* %40 to %struct.tree_exp*
  %operands76 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp75, i32 0, i32 2
  %arrayidx77 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands76, i32 0, i64 1
  store %union.tree_node* %call74, %union.tree_node** %arrayidx77, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.63, %lor.lhs.false
  br label %if.end.78

if.end.78:                                        ; preds = %if.end, %if.then.44
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.then.19
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79
  %41 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %41, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.80, %if.then
  %42 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %42
}

declare void @real_value_from_int_cst(%struct.realvaluetype* sret, %union.tree_node*, %union.tree_node*) #3

declare void @earith(%struct.realvaluetype*, i32, %struct.realvaluetype*, %struct.realvaluetype*) #3

declare void @ereal_to_int(i64*, i64*, %struct.realvaluetype* byval align 8) #3

declare %union.tree_node* @build_real_from_int_cst(%union.tree_node*, %union.tree_node*) #3

declare i32 @do_float_handler(void (i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @fold_convert_1(i8* %data) #0 {
entry:
  %data.addr = alloca i8*, align 8
  %args = alloca %struct.fc_args*, align 8
  %agg.tmp = alloca %struct.realvaluetype, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.fc_args*
  store %struct.fc_args* %1, %struct.fc_args** %args, align 8
  %2 = load %struct.fc_args*, %struct.fc_args** %args, align 8
  %type = getelementptr inbounds %struct.fc_args, %struct.fc_args* %2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %4 = load %struct.fc_args*, %struct.fc_args** %args, align 8
  %type1 = getelementptr inbounds %struct.fc_args, %struct.fc_args* %4, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type2 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 6
  %bf.load = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %6 = load %struct.fc_args*, %struct.fc_args** %args, align 8
  %arg1 = getelementptr inbounds %struct.fc_args, %struct.fc_args* %6, i32 0, i32 0
  %7 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %real_cst = bitcast %union.tree_node* %7 to %struct.tree_real_cst*
  %real_cst3 = getelementptr inbounds %struct.tree_real_cst, %struct.tree_real_cst* %real_cst, i32 0, i32 2
  call void @real_value_truncate(%struct.realvaluetype* sret %agg.tmp, i32 %bf.clear, %struct.realvaluetype* byval align 8 %real_cst3)
  %call = call %union.tree_node* @build_real(%union.tree_node* %3, %struct.realvaluetype* byval align 8 %agg.tmp)
  %8 = load %struct.fc_args*, %struct.fc_args** %args, align 8
  %t = getelementptr inbounds %struct.fc_args, %struct.fc_args* %8, i32 0, i32 2
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  ret void
}

declare %union.tree_node* @copy_node(%union.tree_node*) #3

declare void @real_value_truncate(%struct.realvaluetype* sret, i32, %struct.realvaluetype* byval align 8) #3

; Function Attrs: nounwind uwtable
define internal void @const_binop_1(i8* %data) #0 {
entry:
  %data.addr = alloca i8*, align 8
  %args = alloca %struct.cb_args*, align 8
  %value = alloca %struct.realvaluetype, align 8
  %agg.tmp = alloca %struct.realvaluetype, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.cb_args*
  store %struct.cb_args* %1, %struct.cb_args** %args, align 8
  %2 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %code = getelementptr inbounds %struct.cb_args, %struct.cb_args* %2, i32 0, i32 0
  %3 = load i32, i32* %code, align 4
  %4 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %d1 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %4, i32 0, i32 2
  %5 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %d2 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %5, i32 0, i32 3
  call void @earith(%struct.realvaluetype* %value, i32 %3, %struct.realvaluetype* %d1, %struct.realvaluetype* %d2)
  %6 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %type = getelementptr inbounds %struct.cb_args, %struct.cb_args* %6, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %8 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %type1 = getelementptr inbounds %struct.cb_args, %struct.cb_args* %8, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %type2 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 6
  %bf.load = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  call void @real_value_truncate(%struct.realvaluetype* sret %agg.tmp, i32 %bf.clear, %struct.realvaluetype* byval align 8 %value)
  %call = call %union.tree_node* @build_real(%union.tree_node* %7, %struct.realvaluetype* byval align 8 %agg.tmp)
  %10 = load %struct.cb_args*, %struct.cb_args** %args, align 8
  %t = getelementptr inbounds %struct.cb_args, %struct.cb_args* %10, i32 0, i32 4
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  ret void
}

declare i32 @is_pending_size(%union.tree_node*) #3

declare void @put_pending_size(%union.tree_node*) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @make_range(%union.tree_node* %exp, i32* %pin_p, %union.tree_node** %plow, %union.tree_node** %phigh) #0 {
entry:
  %exp.addr = alloca %union.tree_node*, align 8
  %pin_p.addr = alloca i32*, align 8
  %plow.addr = alloca %union.tree_node**, align 8
  %phigh.addr = alloca %union.tree_node**, align 8
  %code = alloca i32, align 4
  %arg0 = alloca %union.tree_node*, align 8
  %arg1 = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %orig_type = alloca %union.tree_node*, align 8
  %in_p = alloca i32, align 4
  %n_in_p = alloca i32, align 4
  %low = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  %n_low = alloca %union.tree_node*, align 8
  %n_high = alloca %union.tree_node*, align 8
  %equiv_type = alloca %union.tree_node*, align 8
  %high_positive = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  store i32* %pin_p, i32** %pin_p.addr, align 8
  store %union.tree_node** %plow, %union.tree_node*** %plow.addr, align 8
  store %union.tree_node** %phigh, %union.tree_node*** %phigh.addr, align 8
  store %union.tree_node* null, %union.tree_node** %arg0, align 8
  store %union.tree_node* null, %union.tree_node** %arg1, align 8
  store %union.tree_node* null, %union.tree_node** %type, align 8
  store %union.tree_node* null, %union.tree_node** %orig_type, align 8
  store i32 0, i32* %in_p, align 4
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %1, %union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %high, align 8
  store %union.tree_node* %call, %union.tree_node** %low, align 8
  br label %while.body

while.body:                                       ; preds = %entry, %sw.bb, %if.end.141, %sw.bb.142, %sw.bb.147, %if.end.207, %if.end.322
  %3 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %4 = load i32, i32* %code, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 60
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i32, i32* %code, align 4
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom5
  %7 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %7 to i32
  %cmp8 = icmp eq i32 %conv7, 49
  br i1 %cmp8, label %if.then, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false
  %8 = load i32, i32* %code, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom11
  %9 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %9 to i32
  %cmp14 = icmp eq i32 %conv13, 50
  br i1 %cmp14, label %if.then, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false.10
  %10 = load i32, i32* %code, align 4
  %idxprom17 = sext i32 %10 to i64
  %arrayidx18 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom17
  %11 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %11 to i32
  %cmp20 = icmp eq i32 %conv19, 101
  br i1 %cmp20, label %if.then, label %if.end.70

if.then:                                          ; preds = %lor.lhs.false.16, %lor.lhs.false.10, %lor.lhs.false, %while.body
  %12 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp22 = bitcast %union.tree_node* %12 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp22, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  store %union.tree_node* %13, %union.tree_node** %arg0, align 8
  %14 = load i32, i32* %code, align 4
  %idxprom24 = sext i32 %14 to i64
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom24
  %15 = load i8, i8* %arrayidx25, align 1
  %conv26 = sext i8 %15 to i32
  %cmp27 = icmp eq i32 %conv26, 60
  br i1 %cmp27, label %if.then.41, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %if.then
  %16 = load i32, i32* %code, align 4
  %idxprom30 = sext i32 %16 to i64
  %arrayidx31 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom30
  %17 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %17 to i32
  %cmp33 = icmp eq i32 %conv32, 49
  br i1 %cmp33, label %if.then.41, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.29
  %18 = load i32, i32* %code, align 4
  %idxprom36 = sext i32 %18 to i64
  %arrayidx37 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom36
  %19 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %19 to i32
  %cmp39 = icmp eq i32 %conv38, 50
  br i1 %cmp39, label %if.then.41, label %if.end

if.then.41:                                       ; preds = %lor.lhs.false.35, %lor.lhs.false.29, %if.then
  %20 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %common42 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type43, align 8
  store %union.tree_node* %21, %union.tree_node** %type, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.41, %lor.lhs.false.35
  %22 = load i32, i32* %code, align 4
  %idxprom44 = sext i32 %22 to i64
  %arrayidx45 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom44
  %23 = load i8, i8* %arrayidx45, align 1
  %conv46 = sext i8 %23 to i32
  %cmp47 = icmp eq i32 %conv46, 50
  br i1 %cmp47, label %if.then.65, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %if.end
  %24 = load i32, i32* %code, align 4
  %idxprom50 = sext i32 %24 to i64
  %arrayidx51 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom50
  %25 = load i8, i8* %arrayidx51, align 1
  %conv52 = sext i8 %25 to i32
  %cmp53 = icmp eq i32 %conv52, 60
  br i1 %cmp53, label %if.then.65, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false.49
  %26 = load i32, i32* %code, align 4
  %idxprom56 = sext i32 %26 to i64
  %arrayidx57 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom56
  %27 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %27 to i32
  %cmp59 = icmp eq i32 %conv58, 101
  br i1 %cmp59, label %land.lhs.true, label %if.end.69

land.lhs.true:                                    ; preds = %lor.lhs.false.55
  %28 = load i32, i32* %code, align 4
  %idxprom61 = sext i32 %28 to i64
  %arrayidx62 = getelementptr inbounds [256 x i32], [256 x i32]* @tree_code_length, i32 0, i64 %idxprom61
  %29 = load i32, i32* %arrayidx62, align 4
  %cmp63 = icmp sgt i32 %29, 1
  br i1 %cmp63, label %if.then.65, label %if.end.69

if.then.65:                                       ; preds = %land.lhs.true, %lor.lhs.false.49, %if.end
  %30 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp66 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp66, i32 0, i32 2
  %arrayidx68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands67, i32 0, i64 1
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx68, align 8
  store %union.tree_node* %31, %union.tree_node** %arg1, align 8
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.65, %land.lhs.true, %lor.lhs.false.55
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %lor.lhs.false.16
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp71 = icmp ne %union.tree_node* %32, null
  br i1 %cmp71, label %land.lhs.true.73, label %if.end.77

land.lhs.true.73:                                 ; preds = %if.end.70
  %33 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %cmp74 = icmp eq %union.tree_node* %33, null
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %land.lhs.true.73
  %34 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %34, %union.tree_node** %orig_type, align 8
  br label %if.end.77

if.end.77:                                        ; preds = %if.then.76, %land.lhs.true.73, %if.end.70
  %35 = load i32, i32* %code, align 4
  switch i32 %35, label %sw.default.323 [
    i32 96, label %sw.bb
    i32 101, label %sw.bb.78
    i32 102, label %sw.bb.78
    i32 97, label %sw.bb.78
    i32 98, label %sw.bb.78
    i32 100, label %sw.bb.78
    i32 99, label %sw.bb.78
    i32 77, label %sw.bb.142
    i32 90, label %sw.bb.147
    i32 59, label %sw.bb.151
    i32 60, label %sw.bb.151
    i32 115, label %sw.bb.208
    i32 116, label %sw.bb.208
    i32 114, label %sw.bb.208
  ]

sw.bb:                                            ; preds = %if.end.77
  %36 = load i32, i32* %in_p, align 4
  %tobool = icmp ne i32 %36, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %in_p, align 4
  %37 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %37, %union.tree_node** %exp.addr, align 8
  br label %while.body

sw.bb.78:                                         ; preds = %if.end.77, %if.end.77, %if.end.77, %if.end.77, %if.end.77, %if.end.77
  %38 = load %union.tree_node*, %union.tree_node** %low, align 8
  %cmp79 = icmp eq %union.tree_node* %38, null
  br i1 %cmp79, label %if.then.97, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %sw.bb.78
  %39 = load %union.tree_node*, %union.tree_node** %high, align 8
  %cmp82 = icmp eq %union.tree_node* %39, null
  br i1 %cmp82, label %if.then.97, label %lor.lhs.false.84

lor.lhs.false.84:                                 ; preds = %lor.lhs.false.81
  %40 = load %union.tree_node*, %union.tree_node** %low, align 8
  %call85 = call i32 @integer_zerop(%union.tree_node* %40)
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %lor.lhs.false.87, label %if.then.97

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.84
  %41 = load %union.tree_node*, %union.tree_node** %high, align 8
  %call88 = call i32 @integer_zerop(%union.tree_node* %41)
  %tobool89 = icmp ne i32 %call88, 0
  br i1 %tobool89, label %lor.lhs.false.90, label %if.then.97

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.87
  %42 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common91 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 2
  %bf.load93 = load i32, i32* %code92, align 8
  %bf.clear94 = and i32 %bf.load93, 255
  %cmp95 = icmp ne i32 %bf.clear94, 25
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %lor.lhs.false.90, %lor.lhs.false.87, %lor.lhs.false.84, %lor.lhs.false.81, %sw.bb.78
  br label %sw.epilog.324

if.end.98:                                        ; preds = %lor.lhs.false.90
  %43 = load i32, i32* %code, align 4
  switch i32 %43, label %sw.default [
    i32 102, label %sw.bb.99
    i32 101, label %sw.bb.100
    i32 99, label %sw.bb.104
    i32 100, label %sw.bb.105
    i32 97, label %sw.bb.109
    i32 98, label %sw.bb.110
  ]

sw.bb.99:                                         ; preds = %if.end.98
  %44 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %44, %union.tree_node** %high, align 8
  store %union.tree_node* %44, %union.tree_node** %low, align 8
  br label %sw.epilog

sw.bb.100:                                        ; preds = %if.end.98
  %45 = load i32, i32* %in_p, align 4
  %tobool101 = icmp ne i32 %45, 0
  %lnot102 = xor i1 %tobool101, true
  %lnot.ext103 = zext i1 %lnot102 to i32
  store i32 %lnot.ext103, i32* %in_p, align 4
  %46 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %46, %union.tree_node** %high, align 8
  store %union.tree_node* %46, %union.tree_node** %low, align 8
  br label %sw.epilog

sw.bb.104:                                        ; preds = %if.end.98
  store %union.tree_node* null, %union.tree_node** %low, align 8
  %47 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %47, %union.tree_node** %high, align 8
  br label %sw.epilog

sw.bb.105:                                        ; preds = %if.end.98
  %48 = load i32, i32* %in_p, align 4
  %tobool106 = icmp ne i32 %48, 0
  %lnot107 = xor i1 %tobool106, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  store i32 %lnot.ext108, i32* %in_p, align 4
  %49 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %49, %union.tree_node** %low, align 8
  store %union.tree_node* null, %union.tree_node** %high, align 8
  br label %sw.epilog

sw.bb.109:                                        ; preds = %if.end.98
  %50 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %50, %union.tree_node** %low, align 8
  store %union.tree_node* null, %union.tree_node** %high, align 8
  br label %sw.epilog

sw.bb.110:                                        ; preds = %if.end.98
  %51 = load i32, i32* %in_p, align 4
  %tobool111 = icmp ne i32 %51, 0
  %lnot112 = xor i1 %tobool111, true
  %lnot.ext113 = zext i1 %lnot112 to i32
  store i32 %lnot.ext113, i32* %in_p, align 4
  store %union.tree_node* null, %union.tree_node** %low, align 8
  %52 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  store %union.tree_node* %52, %union.tree_node** %high, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.98
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 3505, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.make_range, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb.110, %sw.bb.109, %sw.bb.105, %sw.bb.104, %sw.bb.100, %sw.bb.99
  %53 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %53, %union.tree_node** %exp.addr, align 8
  %54 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common114 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 2
  %bf.load115 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load115, 13
  %bf.clear116 = and i32 %bf.lshr, 1
  %tobool117 = icmp ne i32 %bf.clear116, 0
  br i1 %tobool117, label %land.lhs.true.118, label %if.end.141

land.lhs.true.118:                                ; preds = %sw.epilog
  %55 = load %union.tree_node*, %union.tree_node** %low, align 8
  %cmp119 = icmp eq %union.tree_node* %55, null
  br i1 %cmp119, label %if.then.124, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %land.lhs.true.118
  %56 = load %union.tree_node*, %union.tree_node** %high, align 8
  %cmp122 = icmp eq %union.tree_node* %56, null
  br i1 %cmp122, label %if.then.124, label %if.end.141

if.then.124:                                      ; preds = %lor.lhs.false.121, %land.lhs.true.118
  %57 = load i32, i32* %in_p, align 4
  %58 = load %union.tree_node*, %union.tree_node** %low, align 8
  %59 = load %union.tree_node*, %union.tree_node** %high, align 8
  %60 = load %union.tree_node*, %union.tree_node** %type, align 8
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call125 = call %union.tree_node* @convert(%union.tree_node* %60, %union.tree_node* %61)
  %call126 = call i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 %57, %union.tree_node* %58, %union.tree_node* %59, i32 1, %union.tree_node* %call125, %union.tree_node* null)
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %if.end.129, label %if.then.128

if.then.128:                                      ; preds = %if.then.124
  br label %sw.epilog.324

if.end.129:                                       ; preds = %if.then.124
  %62 = load i32, i32* %n_in_p, align 4
  store i32 %62, i32* %in_p, align 4
  %63 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  store %union.tree_node* %63, %union.tree_node** %low, align 8
  %64 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  store %union.tree_node* %64, %union.tree_node** %high, align 8
  %65 = load %union.tree_node*, %union.tree_node** %high, align 8
  %cmp130 = icmp eq %union.tree_node* %65, null
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.140

land.lhs.true.132:                                ; preds = %if.end.129
  %66 = load %union.tree_node*, %union.tree_node** %low, align 8
  %tobool133 = icmp ne %union.tree_node* %66, null
  br i1 %tobool133, label %if.then.134, label %if.end.140

if.then.134:                                      ; preds = %land.lhs.true.132
  %67 = load i32, i32* %in_p, align 4
  %tobool135 = icmp ne i32 %67, 0
  %lnot136 = xor i1 %tobool135, true
  %lnot.ext137 = zext i1 %lnot136 to i32
  store i32 %lnot.ext137, i32* %in_p, align 4
  %68 = load %union.tree_node*, %union.tree_node** %low, align 8
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call138 = call %union.tree_node* @range_binop(i32 60, %union.tree_node* null, %union.tree_node* %68, i32 0, %union.tree_node* %69, i32 0)
  store %union.tree_node* %call138, %union.tree_node** %high, align 8
  %70 = load %union.tree_node*, %union.tree_node** %type, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call139 = call %union.tree_node* @convert(%union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call139, %union.tree_node** %low, align 8
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.134, %land.lhs.true.132, %if.end.129
  br label %if.end.141

if.end.141:                                       ; preds = %if.end.140, %lor.lhs.false.121, %sw.epilog
  br label %while.body

sw.bb.142:                                        ; preds = %if.end.77
  %72 = load %union.tree_node*, %union.tree_node** %type, align 8
  %73 = load %union.tree_node*, %union.tree_node** %type, align 8
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call143 = call %union.tree_node* @convert(%union.tree_node* %73, %union.tree_node* %74)
  %75 = load %union.tree_node*, %union.tree_node** %high, align 8
  %call144 = call %union.tree_node* @range_binop(i32 60, %union.tree_node* %72, %union.tree_node* %call143, i32 0, %union.tree_node* %75, i32 1)
  store %union.tree_node* %call144, %union.tree_node** %n_low, align 8
  %76 = load %union.tree_node*, %union.tree_node** %type, align 8
  %77 = load %union.tree_node*, %union.tree_node** %type, align 8
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call145 = call %union.tree_node* @convert(%union.tree_node* %77, %union.tree_node* %78)
  %79 = load %union.tree_node*, %union.tree_node** %low, align 8
  %call146 = call %union.tree_node* @range_binop(i32 60, %union.tree_node* %76, %union.tree_node* %call145, i32 0, %union.tree_node* %79, i32 0)
  store %union.tree_node* %call146, %union.tree_node** %n_high, align 8
  %80 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  store %union.tree_node* %80, %union.tree_node** %low, align 8
  %81 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  store %union.tree_node* %81, %union.tree_node** %high, align 8
  %82 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %82, %union.tree_node** %exp.addr, align 8
  br label %while.body

sw.bb.147:                                        ; preds = %if.end.77
  %83 = load %union.tree_node*, %union.tree_node** %type, align 8
  %84 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call148 = call %union.tree_node* @negate_expr(%union.tree_node* %84)
  %85 = load %union.tree_node*, %union.tree_node** %type, align 8
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call149 = call %union.tree_node* @convert(%union.tree_node* %85, %union.tree_node* %86)
  %call150 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %83, %union.tree_node* %call148, %union.tree_node* %call149)
  store %union.tree_node* %call150, %union.tree_node** %exp.addr, align 8
  br label %while.body

sw.bb.151:                                        ; preds = %if.end.77, %if.end.77
  %87 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %common152 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %code153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 2
  %bf.load154 = load i32, i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %cmp156 = icmp ne i32 %bf.clear155, 25
  br i1 %cmp156, label %if.then.158, label %if.end.159

if.then.158:                                      ; preds = %sw.bb.151
  br label %sw.epilog.324

if.end.159:                                       ; preds = %sw.bb.151
  %88 = load i32, i32* %code, align 4
  %cmp160 = icmp eq i32 %88, 60
  %cond = select i1 %cmp160, i32 59, i32 60
  %89 = load %union.tree_node*, %union.tree_node** %type, align 8
  %90 = load %union.tree_node*, %union.tree_node** %low, align 8
  %91 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call162 = call %union.tree_node* @range_binop(i32 %cond, %union.tree_node* %89, %union.tree_node* %90, i32 0, %union.tree_node* %91, i32 0)
  store %union.tree_node* %call162, %union.tree_node** %n_low, align 8
  %92 = load i32, i32* %code, align 4
  %cmp163 = icmp eq i32 %92, 60
  %cond165 = select i1 %cmp163, i32 59, i32 60
  %93 = load %union.tree_node*, %union.tree_node** %type, align 8
  %94 = load %union.tree_node*, %union.tree_node** %high, align 8
  %95 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call166 = call %union.tree_node* @range_binop(i32 %cond165, %union.tree_node* %93, %union.tree_node* %94, i32 1, %union.tree_node* %95, i32 0)
  store %union.tree_node* %call166, %union.tree_node** %n_high, align 8
  %96 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %cmp167 = icmp ne %union.tree_node* %96, null
  br i1 %cmp167, label %land.lhs.true.169, label %lor.lhs.false.175

land.lhs.true.169:                                ; preds = %if.end.159
  %97 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %common170 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common170, i32 0, i32 2
  %bf.load171 = load i32, i32* %public_flag, align 8
  %bf.lshr172 = lshr i32 %bf.load171, 19
  %bf.clear173 = and i32 %bf.lshr172, 1
  %tobool174 = icmp ne i32 %bf.clear173, 0
  br i1 %tobool174, label %if.then.185, label %lor.lhs.false.175

lor.lhs.false.175:                                ; preds = %land.lhs.true.169, %if.end.159
  %98 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %cmp176 = icmp ne %union.tree_node* %98, null
  br i1 %cmp176, label %land.lhs.true.178, label %if.end.186

land.lhs.true.178:                                ; preds = %lor.lhs.false.175
  %99 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %common179 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %public_flag180 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common179, i32 0, i32 2
  %bf.load181 = load i32, i32* %public_flag180, align 8
  %bf.lshr182 = lshr i32 %bf.load181, 19
  %bf.clear183 = and i32 %bf.lshr182, 1
  %tobool184 = icmp ne i32 %bf.clear183, 0
  br i1 %tobool184, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %land.lhs.true.178, %land.lhs.true.169
  br label %sw.epilog.324

if.end.186:                                       ; preds = %land.lhs.true.178, %lor.lhs.false.175
  %100 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %tobool187 = icmp ne %union.tree_node* %100, null
  br i1 %tobool187, label %land.lhs.true.188, label %if.else.206

land.lhs.true.188:                                ; preds = %if.end.186
  %101 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %tobool189 = icmp ne %union.tree_node* %101, null
  br i1 %tobool189, label %land.lhs.true.190, label %if.else.206

land.lhs.true.190:                                ; preds = %land.lhs.true.188
  %102 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %103 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %call191 = call i32 @tree_int_cst_lt(%union.tree_node* %102, %union.tree_node* %103)
  %tobool192 = icmp ne i32 %call191, 0
  br i1 %tobool192, label %if.then.193, label %if.else.206

if.then.193:                                      ; preds = %land.lhs.true.190
  %104 = load %union.tree_node*, %union.tree_node** %type, align 8
  %105 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call194 = call %union.tree_node* @range_binop(i32 59, %union.tree_node* %104, %union.tree_node* %105, i32 0, %union.tree_node* %106, i32 0)
  store %union.tree_node* %call194, %union.tree_node** %low, align 8
  %107 = load %union.tree_node*, %union.tree_node** %type, align 8
  %108 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call195 = call %union.tree_node* @range_binop(i32 60, %union.tree_node* %107, %union.tree_node* %108, i32 0, %union.tree_node* %109, i32 0)
  store %union.tree_node* %call195, %union.tree_node** %high, align 8
  %110 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %111 = load %union.tree_node*, %union.tree_node** %low, align 8
  %call196 = call i32 @tree_int_cst_equal(%union.tree_node* %110, %union.tree_node* %111)
  %tobool197 = icmp ne i32 %call196, 0
  br i1 %tobool197, label %land.lhs.true.198, label %if.else

land.lhs.true.198:                                ; preds = %if.then.193
  %112 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %113 = load %union.tree_node*, %union.tree_node** %high, align 8
  %call199 = call i32 @tree_int_cst_equal(%union.tree_node* %112, %union.tree_node* %113)
  %tobool200 = icmp ne i32 %call199, 0
  br i1 %tobool200, label %if.then.201, label %if.else

if.then.201:                                      ; preds = %land.lhs.true.198
  store %union.tree_node* null, %union.tree_node** %high, align 8
  store %union.tree_node* null, %union.tree_node** %low, align 8
  br label %if.end.205

if.else:                                          ; preds = %land.lhs.true.198, %if.then.193
  %114 = load i32, i32* %in_p, align 4
  %tobool202 = icmp ne i32 %114, 0
  %lnot203 = xor i1 %tobool202, true
  %lnot.ext204 = zext i1 %lnot203 to i32
  store i32 %lnot.ext204, i32* %in_p, align 4
  br label %if.end.205

if.end.205:                                       ; preds = %if.else, %if.then.201
  br label %if.end.207

if.else.206:                                      ; preds = %land.lhs.true.190, %land.lhs.true.188, %if.end.186
  %115 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  store %union.tree_node* %115, %union.tree_node** %low, align 8
  %116 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  store %union.tree_node* %116, %union.tree_node** %high, align 8
  br label %if.end.207

if.end.207:                                       ; preds = %if.else.206, %if.end.205
  %117 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %117, %union.tree_node** %exp.addr, align 8
  br label %while.body

sw.bb.208:                                        ; preds = %if.end.77, %if.end.77, %if.end.77
  %118 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type209 = bitcast %union.tree_node* %118 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type209, i32 0, i32 6
  %bf.load210 = load i32, i32* %precision, align 4
  %bf.clear211 = and i32 %bf.load210, 511
  %119 = load %union.tree_node*, %union.tree_node** %orig_type, align 8
  %type212 = bitcast %union.tree_node* %119 to %struct.tree_type*
  %precision213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type212, i32 0, i32 6
  %bf.load214 = load i32, i32* %precision213, align 4
  %bf.clear215 = and i32 %bf.load214, 511
  %cmp216 = icmp sgt i32 %bf.clear211, %bf.clear215
  br i1 %cmp216, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %sw.bb.208
  br label %sw.epilog.324

if.end.219:                                       ; preds = %sw.bb.208
  %120 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common220 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %code221 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common220, i32 0, i32 2
  %bf.load222 = load i32, i32* %code221, align 8
  %bf.clear223 = and i32 %bf.load222, 255
  %cmp224 = icmp eq i32 %bf.clear223, 6
  br i1 %cmp224, label %lor.lhs.false.247, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %if.end.219
  %121 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common227 = bitcast %union.tree_node* %121 to %struct.tree_common*
  %code228 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common227, i32 0, i32 2
  %bf.load229 = load i32, i32* %code228, align 8
  %bf.clear230 = and i32 %bf.load229, 255
  %cmp231 = icmp eq i32 %bf.clear230, 10
  br i1 %cmp231, label %lor.lhs.false.247, label %lor.lhs.false.233

lor.lhs.false.233:                                ; preds = %lor.lhs.false.226
  %122 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common234 = bitcast %union.tree_node* %122 to %struct.tree_common*
  %code235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common234, i32 0, i32 2
  %bf.load236 = load i32, i32* %code235, align 8
  %bf.clear237 = and i32 %bf.load236, 255
  %cmp238 = icmp eq i32 %bf.clear237, 11
  br i1 %cmp238, label %lor.lhs.false.247, label %lor.lhs.false.240

lor.lhs.false.240:                                ; preds = %lor.lhs.false.233
  %123 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common241 = bitcast %union.tree_node* %123 to %struct.tree_common*
  %code242 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common241, i32 0, i32 2
  %bf.load243 = load i32, i32* %code242, align 8
  %bf.clear244 = and i32 %bf.load243, 255
  %cmp245 = icmp eq i32 %bf.clear244, 12
  br i1 %cmp245, label %lor.lhs.false.247, label %if.then.259

lor.lhs.false.247:                                ; preds = %lor.lhs.false.240, %lor.lhs.false.233, %lor.lhs.false.226, %if.end.219
  %124 = load %union.tree_node*, %union.tree_node** %low, align 8
  %cmp248 = icmp ne %union.tree_node* %124, null
  br i1 %cmp248, label %land.lhs.true.250, label %lor.lhs.false.253

land.lhs.true.250:                                ; preds = %lor.lhs.false.247
  %125 = load %union.tree_node*, %union.tree_node** %low, align 8
  %126 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call251 = call i32 @int_fits_type_p(%union.tree_node* %125, %union.tree_node* %126)
  %tobool252 = icmp ne i32 %call251, 0
  br i1 %tobool252, label %lor.lhs.false.253, label %if.then.259

lor.lhs.false.253:                                ; preds = %land.lhs.true.250, %lor.lhs.false.247
  %127 = load %union.tree_node*, %union.tree_node** %high, align 8
  %cmp254 = icmp ne %union.tree_node* %127, null
  br i1 %cmp254, label %land.lhs.true.256, label %if.end.260

land.lhs.true.256:                                ; preds = %lor.lhs.false.253
  %128 = load %union.tree_node*, %union.tree_node** %high, align 8
  %129 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call257 = call i32 @int_fits_type_p(%union.tree_node* %128, %union.tree_node* %129)
  %tobool258 = icmp ne i32 %call257, 0
  br i1 %tobool258, label %if.end.260, label %if.then.259

if.then.259:                                      ; preds = %land.lhs.true.256, %land.lhs.true.250, %lor.lhs.false.240
  br label %sw.epilog.324

if.end.260:                                       ; preds = %land.lhs.true.256, %lor.lhs.false.253
  %130 = load %union.tree_node*, %union.tree_node** %low, align 8
  store %union.tree_node* %130, %union.tree_node** %n_low, align 8
  %131 = load %union.tree_node*, %union.tree_node** %high, align 8
  store %union.tree_node* %131, %union.tree_node** %n_high, align 8
  %132 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %cmp261 = icmp ne %union.tree_node* %132, null
  br i1 %cmp261, label %if.then.263, label %if.end.265

if.then.263:                                      ; preds = %if.end.260
  %133 = load %union.tree_node*, %union.tree_node** %type, align 8
  %134 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %call264 = call %union.tree_node* @convert(%union.tree_node* %133, %union.tree_node* %134)
  store %union.tree_node* %call264, %union.tree_node** %n_low, align 8
  br label %if.end.265

if.end.265:                                       ; preds = %if.then.263, %if.end.260
  %135 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %cmp266 = icmp ne %union.tree_node* %135, null
  br i1 %cmp266, label %if.then.268, label %if.end.270

if.then.268:                                      ; preds = %if.end.265
  %136 = load %union.tree_node*, %union.tree_node** %type, align 8
  %137 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %call269 = call %union.tree_node* @convert(%union.tree_node* %136, %union.tree_node* %137)
  store %union.tree_node* %call269, %union.tree_node** %n_high, align 8
  br label %if.end.270

if.end.270:                                       ; preds = %if.then.268, %if.end.265
  %138 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common271 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %unsigned_flag272 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common271, i32 0, i32 2
  %bf.load273 = load i32, i32* %unsigned_flag272, align 8
  %bf.lshr274 = lshr i32 %bf.load273, 13
  %bf.clear275 = and i32 %bf.lshr274, 1
  %tobool276 = icmp ne i32 %bf.clear275, 0
  br i1 %tobool276, label %land.lhs.true.277, label %if.end.322

land.lhs.true.277:                                ; preds = %if.end.270
  %139 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common278 = bitcast %union.tree_node* %139 to %struct.tree_common*
  %type279 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common278, i32 0, i32 1
  %140 = load %union.tree_node*, %union.tree_node** %type279, align 8
  %common280 = bitcast %union.tree_node* %140 to %struct.tree_common*
  %unsigned_flag281 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common280, i32 0, i32 2
  %bf.load282 = load i32, i32* %unsigned_flag281, align 8
  %bf.lshr283 = lshr i32 %bf.load282, 13
  %bf.clear284 = and i32 %bf.lshr283, 1
  %tobool285 = icmp ne i32 %bf.clear284, 0
  br i1 %tobool285, label %if.end.322, label %if.then.286

if.then.286:                                      ; preds = %land.lhs.true.277
  %141 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type287 = bitcast %union.tree_node* %141 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type287, i32 0, i32 6
  %bf.load288 = load i32, i32* %mode, align 4
  %bf.lshr289 = lshr i32 %bf.load288, 9
  %bf.clear290 = and i32 %bf.lshr289, 127
  %call291 = call %union.tree_node* @type_for_mode(i32 %bf.clear290, i32 1)
  store %union.tree_node* %call291, %union.tree_node** %equiv_type, align 8
  %142 = load %union.tree_node*, %union.tree_node** %equiv_type, align 8
  %type292 = bitcast %union.tree_node* %142 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type292, i32 0, i32 13
  %143 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %tobool293 = icmp ne %union.tree_node* %143, null
  br i1 %tobool293, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.286
  %144 = load %union.tree_node*, %union.tree_node** %equiv_type, align 8
  %type294 = bitcast %union.tree_node* %144 to %struct.tree_type*
  %maxval295 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type294, i32 0, i32 13
  %145 = load %union.tree_node*, %union.tree_node** %maxval295, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.286
  %146 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type296 = bitcast %union.tree_node* %146 to %struct.tree_type*
  %maxval297 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type296, i32 0, i32 13
  %147 = load %union.tree_node*, %union.tree_node** %maxval297, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond298 = phi %union.tree_node* [ %145, %cond.true ], [ %147, %cond.false ]
  store %union.tree_node* %cond298, %union.tree_node** %high_positive, align 8
  %148 = load %union.tree_node*, %union.tree_node** %type, align 8
  %149 = load %union.tree_node*, %union.tree_node** %type, align 8
  %150 = load %union.tree_node*, %union.tree_node** %high_positive, align 8
  %call299 = call %union.tree_node* @convert(%union.tree_node* %149, %union.tree_node* %150)
  %151 = load %union.tree_node*, %union.tree_node** %type, align 8
  %152 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call300 = call %union.tree_node* @convert(%union.tree_node* %151, %union.tree_node* %152)
  %call301 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 83, %union.tree_node* %148, %union.tree_node* %call299, %union.tree_node* %call300)
  %call302 = call %union.tree_node* @fold(%union.tree_node* %call301)
  store %union.tree_node* %call302, %union.tree_node** %high_positive, align 8
  %153 = load %union.tree_node*, %union.tree_node** %low, align 8
  %cmp303 = icmp ne %union.tree_node* %153, null
  br i1 %cmp303, label %if.then.305, label %if.else.313

if.then.305:                                      ; preds = %cond.end
  %154 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %155 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %156 = load %union.tree_node*, %union.tree_node** %type, align 8
  %157 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call306 = call %union.tree_node* @convert(%union.tree_node* %156, %union.tree_node* %157)
  %158 = load %union.tree_node*, %union.tree_node** %high_positive, align 8
  %call307 = call i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 1, %union.tree_node* %154, %union.tree_node* %155, i32 1, %union.tree_node* %call306, %union.tree_node* %158)
  %tobool308 = icmp ne i32 %call307, 0
  br i1 %tobool308, label %if.end.310, label %if.then.309

if.then.309:                                      ; preds = %if.then.305
  br label %sw.epilog.324

if.end.310:                                       ; preds = %if.then.305
  %159 = load i32, i32* %n_in_p, align 4
  %160 = load i32, i32* %in_p, align 4
  %cmp311 = icmp eq i32 %159, %160
  %conv312 = zext i1 %cmp311 to i32
  store i32 %conv312, i32* %in_p, align 4
  br label %if.end.321

if.else.313:                                      ; preds = %cond.end
  %161 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  %162 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  %163 = load %union.tree_node*, %union.tree_node** %type, align 8
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call314 = call %union.tree_node* @convert(%union.tree_node* %163, %union.tree_node* %164)
  %165 = load %union.tree_node*, %union.tree_node** %high_positive, align 8
  %call315 = call i32 @merge_ranges(i32* %n_in_p, %union.tree_node** %n_low, %union.tree_node** %n_high, i32 0, %union.tree_node* %161, %union.tree_node* %162, i32 1, %union.tree_node* %call314, %union.tree_node* %165)
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %if.end.318, label %if.then.317

if.then.317:                                      ; preds = %if.else.313
  br label %sw.epilog.324

if.end.318:                                       ; preds = %if.else.313
  %166 = load i32, i32* %in_p, align 4
  %167 = load i32, i32* %n_in_p, align 4
  %cmp319 = icmp ne i32 %166, %167
  %conv320 = zext i1 %cmp319 to i32
  store i32 %conv320, i32* %in_p, align 4
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.318, %if.end.310
  br label %if.end.322

if.end.322:                                       ; preds = %if.end.321, %land.lhs.true.277, %if.end.270
  %168 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %168, %union.tree_node** %exp.addr, align 8
  %169 = load %union.tree_node*, %union.tree_node** %n_low, align 8
  store %union.tree_node* %169, %union.tree_node** %low, align 8
  %170 = load %union.tree_node*, %union.tree_node** %n_high, align 8
  store %union.tree_node* %170, %union.tree_node** %high, align 8
  br label %while.body

sw.default.323:                                   ; preds = %if.end.77
  br label %sw.epilog.324

sw.epilog.324:                                    ; preds = %sw.default.323, %if.then.317, %if.then.309, %if.then.259, %if.then.218, %if.then.185, %if.then.158, %if.then.128, %if.then.97
  br label %while.end

while.end:                                        ; preds = %sw.epilog.324
  %171 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common325 = bitcast %union.tree_node* %171 to %struct.tree_common*
  %code326 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common325, i32 0, i32 2
  %bf.load327 = load i32, i32* %code326, align 8
  %bf.clear328 = and i32 %bf.load327, 255
  %cmp329 = icmp eq i32 %bf.clear328, 25
  br i1 %cmp329, label %if.then.331, label %if.end.340

if.then.331:                                      ; preds = %while.end
  %172 = load i32, i32* %in_p, align 4
  %173 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %174 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %175 = load %union.tree_node*, %union.tree_node** %low, align 8
  %call332 = call %union.tree_node* @range_binop(i32 100, %union.tree_node* %173, %union.tree_node* %174, i32 0, %union.tree_node* %175, i32 0)
  %call333 = call i32 @integer_onep(%union.tree_node* %call332)
  %tobool334 = icmp ne i32 %call333, 0
  br i1 %tobool334, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.331
  %176 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %177 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %178 = load %union.tree_node*, %union.tree_node** %high, align 8
  %call335 = call %union.tree_node* @range_binop(i32 98, %union.tree_node* %176, %union.tree_node* %177, i32 1, %union.tree_node* %178, i32 1)
  %call336 = call i32 @integer_onep(%union.tree_node* %call335)
  %tobool337 = icmp ne i32 %call336, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.331
  %179 = phi i1 [ false, %if.then.331 ], [ %tobool337, %land.rhs ]
  %land.ext = zext i1 %179 to i32
  %cmp338 = icmp eq i32 %172, %land.ext
  %conv339 = zext i1 %cmp338 to i32
  store i32 %conv339, i32* %in_p, align 4
  store %union.tree_node* null, %union.tree_node** %high, align 8
  store %union.tree_node* null, %union.tree_node** %low, align 8
  store %union.tree_node* null, %union.tree_node** %exp.addr, align 8
  br label %if.end.340

if.end.340:                                       ; preds = %land.end, %while.end
  %180 = load i32, i32* %in_p, align 4
  %181 = load i32*, i32** %pin_p.addr, align 8
  store i32 %180, i32* %181, align 4
  %182 = load %union.tree_node*, %union.tree_node** %low, align 8
  %183 = load %union.tree_node**, %union.tree_node*** %plow.addr, align 8
  store %union.tree_node* %182, %union.tree_node** %183, align 8
  %184 = load %union.tree_node*, %union.tree_node** %high, align 8
  %185 = load %union.tree_node**, %union.tree_node*** %phigh.addr, align 8
  store %union.tree_node* %184, %union.tree_node** %185, align 8
  %186 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  ret %union.tree_node* %186
}

; Function Attrs: nounwind uwtable
define internal i32 @merge_ranges(i32* %pin_p, %union.tree_node** %plow, %union.tree_node** %phigh, i32 %in0_p, %union.tree_node* %low0, %union.tree_node* %high0, i32 %in1_p, %union.tree_node* %low1, %union.tree_node* %high1) #0 {
entry:
  %retval = alloca i32, align 4
  %pin_p.addr = alloca i32*, align 8
  %plow.addr = alloca %union.tree_node**, align 8
  %phigh.addr = alloca %union.tree_node**, align 8
  %in0_p.addr = alloca i32, align 4
  %low0.addr = alloca %union.tree_node*, align 8
  %high0.addr = alloca %union.tree_node*, align 8
  %in1_p.addr = alloca i32, align 4
  %low1.addr = alloca %union.tree_node*, align 8
  %high1.addr = alloca %union.tree_node*, align 8
  %no_overlap = alloca i32, align 4
  %subset = alloca i32, align 4
  %temp = alloca i32, align 4
  %tem = alloca %union.tree_node*, align 8
  %in_p = alloca i32, align 4
  %low = alloca %union.tree_node*, align 8
  %high = alloca %union.tree_node*, align 8
  %lowequal = alloca i32, align 4
  %highequal = alloca i32, align 4
  store i32* %pin_p, i32** %pin_p.addr, align 8
  store %union.tree_node** %plow, %union.tree_node*** %plow.addr, align 8
  store %union.tree_node** %phigh, %union.tree_node*** %phigh.addr, align 8
  store i32 %in0_p, i32* %in0_p.addr, align 4
  store %union.tree_node* %low0, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %high0, %union.tree_node** %high0.addr, align 8
  store i32 %in1_p, i32* %in1_p.addr, align 4
  store %union.tree_node* %low1, %union.tree_node** %low1.addr, align 8
  store %union.tree_node* %high1, %union.tree_node** %high1.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %3 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %call = call %union.tree_node* @range_binop(i32 101, %union.tree_node* %2, %union.tree_node* %3, i32 0, %union.tree_node* %4, i32 0)
  %call2 = call i32 @integer_onep(%union.tree_node* %call)
  %tobool = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %5 = phi i1 [ true, %land.lhs.true ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32
  store i32 %lor.ext, i32* %lowequal, align 4
  %6 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %cmp3 = icmp eq %union.tree_node* %6, null
  br i1 %cmp3, label %land.lhs.true.4, label %lor.rhs.6

land.lhs.true.4:                                  ; preds = %lor.end
  %7 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  %cmp5 = icmp eq %union.tree_node* %7, null
  br i1 %cmp5, label %lor.end.10, label %lor.rhs.6

lor.rhs.6:                                        ; preds = %land.lhs.true.4, %lor.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %9 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  %call7 = call %union.tree_node* @range_binop(i32 101, %union.tree_node* %8, %union.tree_node* %9, i32 1, %union.tree_node* %10, i32 1)
  %call8 = call i32 @integer_onep(%union.tree_node* %call7)
  %tobool9 = icmp ne i32 %call8, 0
  br label %lor.end.10

lor.end.10:                                       ; preds = %lor.rhs.6, %land.lhs.true.4
  %11 = phi i1 [ true, %land.lhs.true.4 ], [ %tobool9, %lor.rhs.6 ]
  %lor.ext11 = zext i1 %11 to i32
  store i32 %lor.ext11, i32* %highequal, align 4
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %13 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %call12 = call %union.tree_node* @range_binop(i32 99, %union.tree_node* %12, %union.tree_node* %13, i32 0, %union.tree_node* %14, i32 0)
  %call13 = call i32 @integer_onep(%union.tree_node* %call12)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.end.10
  %15 = load i32, i32* %lowequal, align 4
  %tobool15 = icmp ne i32 %15, 0
  br i1 %tobool15, label %land.lhs.true.16, label %if.end

land.lhs.true.16:                                 ; preds = %lor.lhs.false
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %17 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %call17 = call %union.tree_node* @range_binop(i32 99, %union.tree_node* %16, %union.tree_node* %17, i32 1, %union.tree_node* %18, i32 1)
  %call18 = call i32 @integer_onep(%union.tree_node* %call17)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.16, %lor.end.10
  %19 = load i32, i32* %in0_p.addr, align 4
  store i32 %19, i32* %temp, align 4
  %20 = load i32, i32* %in1_p.addr, align 4
  store i32 %20, i32* %in0_p.addr, align 4
  %21 = load i32, i32* %temp, align 4
  store i32 %21, i32* %in1_p.addr, align 4
  %22 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %22, %union.tree_node** %tem, align 8
  %23 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  store %union.tree_node* %23, %union.tree_node** %low0.addr, align 8
  %24 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %24, %union.tree_node** %low1.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  store %union.tree_node* %25, %union.tree_node** %tem, align 8
  %26 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %26, %union.tree_node** %high0.addr, align 8
  %27 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %27, %union.tree_node** %high1.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.16, %lor.lhs.false
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %29 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %call20 = call %union.tree_node* @range_binop(i32 97, %union.tree_node* %28, %union.tree_node* %29, i32 1, %union.tree_node* %30, i32 0)
  %call21 = call i32 @integer_onep(%union.tree_node* %call20)
  store i32 %call21, i32* %no_overlap, align 4
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %32 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  %33 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %call22 = call %union.tree_node* @range_binop(i32 98, %union.tree_node* %31, %union.tree_node* %32, i32 1, %union.tree_node* %33, i32 1)
  %call23 = call i32 @integer_onep(%union.tree_node* %call22)
  store i32 %call23, i32* %subset, align 4
  %34 = load i32, i32* %in0_p.addr, align 4
  %tobool24 = icmp ne i32 %34, 0
  br i1 %tobool24, label %land.lhs.true.25, label %if.else.35

land.lhs.true.25:                                 ; preds = %if.end
  %35 = load i32, i32* %in1_p.addr, align 4
  %tobool26 = icmp ne i32 %35, 0
  br i1 %tobool26, label %if.then.27, label %if.else.35

if.then.27:                                       ; preds = %land.lhs.true.25
  %36 = load i32, i32* %no_overlap, align 4
  %tobool28 = icmp ne i32 %36, 0
  br i1 %tobool28, label %if.then.29, label %if.else

if.then.29:                                       ; preds = %if.then.27
  store i32 0, i32* %in_p, align 4
  store %union.tree_node* null, %union.tree_node** %high, align 8
  store %union.tree_node* null, %union.tree_node** %low, align 8
  br label %if.end.34

if.else:                                          ; preds = %if.then.27
  %37 = load i32, i32* %subset, align 4
  %tobool30 = icmp ne i32 %37, 0
  br i1 %tobool30, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %if.else
  store i32 1, i32* %in_p, align 4
  %38 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  store %union.tree_node* %38, %union.tree_node** %low, align 8
  %39 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %39, %union.tree_node** %high, align 8
  br label %if.end.33

if.else.32:                                       ; preds = %if.else
  store i32 1, i32* %in_p, align 4
  %40 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  store %union.tree_node* %40, %union.tree_node** %low, align 8
  %41 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  store %union.tree_node* %41, %union.tree_node** %high, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.then.31
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.then.29
  br label %if.end.98

if.else.35:                                       ; preds = %land.lhs.true.25, %if.end
  %42 = load i32, i32* %in0_p.addr, align 4
  %tobool36 = icmp ne i32 %42, 0
  br i1 %tobool36, label %land.lhs.true.37, label %if.else.64

land.lhs.true.37:                                 ; preds = %if.else.35
  %43 = load i32, i32* %in1_p.addr, align 4
  %tobool38 = icmp ne i32 %43, 0
  br i1 %tobool38, label %if.else.64, label %if.then.39

if.then.39:                                       ; preds = %land.lhs.true.37
  %44 = load i32, i32* %no_overlap, align 4
  %tobool40 = icmp ne i32 %44, 0
  br i1 %tobool40, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %if.then.39
  store i32 1, i32* %in_p, align 4
  %45 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %45, %union.tree_node** %low, align 8
  %46 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  store %union.tree_node* %46, %union.tree_node** %high, align 8
  br label %if.end.63

if.else.42:                                       ; preds = %if.then.39
  %47 = load i32, i32* %lowequal, align 4
  %tobool43 = icmp ne i32 %47, 0
  br i1 %tobool43, label %land.lhs.true.44, label %if.else.47

land.lhs.true.44:                                 ; preds = %if.else.42
  %48 = load i32, i32* %highequal, align 4
  %tobool45 = icmp ne i32 %48, 0
  br i1 %tobool45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %land.lhs.true.44
  store i32 0, i32* %in_p, align 4
  store %union.tree_node* null, %union.tree_node** %high, align 8
  store %union.tree_node* null, %union.tree_node** %low, align 8
  br label %if.end.62

if.else.47:                                       ; preds = %land.lhs.true.44, %if.else.42
  %49 = load i32, i32* %subset, align 4
  %tobool48 = icmp ne i32 %49, 0
  br i1 %tobool48, label %land.lhs.true.49, label %if.else.53

land.lhs.true.49:                                 ; preds = %if.else.47
  %50 = load i32, i32* %lowequal, align 4
  %tobool50 = icmp ne i32 %50, 0
  br i1 %tobool50, label %if.then.51, label %if.else.53

if.then.51:                                       ; preds = %land.lhs.true.49
  store i32 1, i32* %in_p, align 4
  %51 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  store %union.tree_node* %51, %union.tree_node** %high, align 8
  %52 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call52 = call %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %52, i32 0, %union.tree_node* %53, i32 0)
  store %union.tree_node* %call52, %union.tree_node** %low, align 8
  br label %if.end.61

if.else.53:                                       ; preds = %land.lhs.true.49, %if.else.47
  %54 = load i32, i32* %subset, align 4
  %tobool54 = icmp ne i32 %54, 0
  br i1 %tobool54, label %lor.lhs.false.55, label %if.then.57

lor.lhs.false.55:                                 ; preds = %if.else.53
  %55 = load i32, i32* %highequal, align 4
  %tobool56 = icmp ne i32 %55, 0
  br i1 %tobool56, label %if.then.57, label %if.else.59

if.then.57:                                       ; preds = %lor.lhs.false.55, %if.else.53
  store i32 1, i32* %in_p, align 4
  %56 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %56, %union.tree_node** %low, align 8
  %57 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call58 = call %union.tree_node* @range_binop(i32 60, %union.tree_node* null, %union.tree_node* %57, i32 0, %union.tree_node* %58, i32 0)
  store %union.tree_node* %call58, %union.tree_node** %high, align 8
  br label %if.end.60

if.else.59:                                       ; preds = %lor.lhs.false.55
  store i32 0, i32* %retval
  br label %return

if.end.60:                                        ; preds = %if.then.57
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.then.51
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61, %if.then.46
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.41
  br label %if.end.97

if.else.64:                                       ; preds = %land.lhs.true.37, %if.else.35
  %59 = load i32, i32* %in0_p.addr, align 4
  %tobool65 = icmp ne i32 %59, 0
  br i1 %tobool65, label %if.else.80, label %land.lhs.true.66

land.lhs.true.66:                                 ; preds = %if.else.64
  %60 = load i32, i32* %in1_p.addr, align 4
  %tobool67 = icmp ne i32 %60, 0
  br i1 %tobool67, label %if.then.68, label %if.else.80

if.then.68:                                       ; preds = %land.lhs.true.66
  %61 = load i32, i32* %no_overlap, align 4
  %tobool69 = icmp ne i32 %61, 0
  br i1 %tobool69, label %if.then.70, label %if.else.71

if.then.70:                                       ; preds = %if.then.68
  store i32 1, i32* %in_p, align 4
  %62 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  store %union.tree_node* %62, %union.tree_node** %low, align 8
  %63 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %63, %union.tree_node** %high, align 8
  br label %if.end.79

if.else.71:                                       ; preds = %if.then.68
  %64 = load i32, i32* %subset, align 4
  %tobool72 = icmp ne i32 %64, 0
  br i1 %tobool72, label %if.then.75, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %if.else.71
  %65 = load i32, i32* %highequal, align 4
  %tobool74 = icmp ne i32 %65, 0
  br i1 %tobool74, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %lor.lhs.false.73, %if.else.71
  store i32 0, i32* %in_p, align 4
  store %union.tree_node* null, %union.tree_node** %high, align 8
  store %union.tree_node* null, %union.tree_node** %low, align 8
  br label %if.end.78

if.else.76:                                       ; preds = %lor.lhs.false.73
  store i32 1, i32* %in_p, align 4
  %66 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %66, %union.tree_node** %high, align 8
  %67 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call77 = call %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %67, i32 1, %union.tree_node* %68, i32 0)
  store %union.tree_node* %call77, %union.tree_node** %low, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.76, %if.then.75
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.then.70
  br label %if.end.96

if.else.80:                                       ; preds = %land.lhs.true.66, %if.else.64
  %69 = load i32, i32* %no_overlap, align 4
  %tobool81 = icmp ne i32 %69, 0
  br i1 %tobool81, label %if.then.82, label %if.else.90

if.then.82:                                       ; preds = %if.else.80
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %71 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call83 = call %union.tree_node* @range_binop(i32 59, %union.tree_node* null, %union.tree_node* %71, i32 1, %union.tree_node* %72, i32 1)
  %73 = load %union.tree_node*, %union.tree_node** %low1.addr, align 8
  %call84 = call %union.tree_node* @range_binop(i32 101, %union.tree_node* %70, %union.tree_node* %call83, i32 1, %union.tree_node* %73, i32 0)
  %call85 = call i32 @integer_onep(%union.tree_node* %call84)
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %if.then.82
  store i32 0, i32* %in_p, align 4
  %74 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %74, %union.tree_node** %low, align 8
  %75 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %75, %union.tree_node** %high, align 8
  br label %if.end.89

if.else.88:                                       ; preds = %if.then.82
  store i32 0, i32* %retval
  br label %return

if.end.89:                                        ; preds = %if.then.87
  br label %if.end.95

if.else.90:                                       ; preds = %if.else.80
  %76 = load i32, i32* %subset, align 4
  %tobool91 = icmp ne i32 %76, 0
  br i1 %tobool91, label %if.then.92, label %if.else.93

if.then.92:                                       ; preds = %if.else.90
  store i32 0, i32* %in_p, align 4
  %77 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %77, %union.tree_node** %low, align 8
  %78 = load %union.tree_node*, %union.tree_node** %high0.addr, align 8
  store %union.tree_node* %78, %union.tree_node** %high, align 8
  br label %if.end.94

if.else.93:                                       ; preds = %if.else.90
  store i32 0, i32* %in_p, align 4
  %79 = load %union.tree_node*, %union.tree_node** %low0.addr, align 8
  store %union.tree_node* %79, %union.tree_node** %low, align 8
  %80 = load %union.tree_node*, %union.tree_node** %high1.addr, align 8
  store %union.tree_node* %80, %union.tree_node** %high, align 8
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.93, %if.then.92
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.end.89
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.79
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.63
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97, %if.end.34
  %81 = load i32, i32* %in_p, align 4
  %82 = load i32*, i32** %pin_p.addr, align 8
  store i32 %81, i32* %82, align 4
  %83 = load %union.tree_node*, %union.tree_node** %low, align 8
  %84 = load %union.tree_node**, %union.tree_node*** %plow.addr, align 8
  store %union.tree_node* %83, %union.tree_node** %84, align 8
  %85 = load %union.tree_node*, %union.tree_node** %high, align 8
  %86 = load %union.tree_node**, %union.tree_node*** %phigh.addr, align 8
  store %union.tree_node* %85, %union.tree_node** %86, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.98, %if.else.88, %if.else.59
  %87 = load i32, i32* %retval
  ret i32 %87
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @build_range_check(%union.tree_node* %type, %union.tree_node* %exp, i32 %in_p, %union.tree_node* %low, %union.tree_node* %high) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %in_p.addr = alloca i32, align 4
  %low.addr = alloca %union.tree_node*, align 8
  %high.addr = alloca %union.tree_node*, align 8
  %etype = alloca %union.tree_node*, align 8
  %utype = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  store i32 %in_p, i32* %in_p.addr, align 4
  store %union.tree_node* %low, %union.tree_node** %low.addr, align 8
  store %union.tree_node* %high, %union.tree_node** %high.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %etype, align 8
  %2 = load i32, i32* %in_p.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %6 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %call = call %union.tree_node* @build_range_check(%union.tree_node* %3, %union.tree_node* %4, i32 1, %union.tree_node* %5, %union.tree_node* %6)
  store %union.tree_node* %call, %union.tree_node** %value, align 8
  %cmp = icmp ne %union.tree_node* null, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call2 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %7)
  store %union.tree_node* %call2, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %cmp3 = icmp eq %union.tree_node* %8, null
  br i1 %cmp3, label %land.lhs.true.4, label %if.else.8

land.lhs.true.4:                                  ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %cmp5 = icmp eq %union.tree_node* %9, null
  br i1 %cmp5, label %if.then.6, label %if.else.8

if.then.6:                                        ; preds = %land.lhs.true.4
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call7 = call %union.tree_node* @convert(%union.tree_node* %10, %union.tree_node* %11)
  store %union.tree_node* %call7, %union.tree_node** %retval
  br label %return

if.else.8:                                        ; preds = %land.lhs.true.4, %if.else
  %12 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %cmp9 = icmp eq %union.tree_node* %12, null
  br i1 %cmp9, label %if.then.10, label %if.else.13

if.then.10:                                       ; preds = %if.else.8
  %13 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %15 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %call11 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 98, %union.tree_node* %13, %union.tree_node* %14, %union.tree_node* %15)
  %call12 = call %union.tree_node* @fold(%union.tree_node* %call11)
  store %union.tree_node* %call12, %union.tree_node** %retval
  br label %return

if.else.13:                                       ; preds = %if.else.8
  %16 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %cmp14 = icmp eq %union.tree_node* %16, null
  br i1 %cmp14, label %if.then.15, label %if.else.18

if.then.15:                                       ; preds = %if.else.13
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %19 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call16 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 100, %union.tree_node* %17, %union.tree_node* %18, %union.tree_node* %19)
  %call17 = call %union.tree_node* @fold(%union.tree_node* %call16)
  store %union.tree_node* %call17, %union.tree_node** %retval
  br label %return

if.else.18:                                       ; preds = %if.else.13
  %20 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %21 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %call19 = call i32 @operand_equal_p(%union.tree_node* %20, %union.tree_node* %21, i32 0)
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %if.else.18
  %22 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %24 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call22 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 101, %union.tree_node* %22, %union.tree_node* %23, %union.tree_node* %24)
  %call23 = call %union.tree_node* @fold(%union.tree_node* %call22)
  store %union.tree_node* %call23, %union.tree_node** %retval
  br label %return

if.else.24:                                       ; preds = %if.else.18
  %25 = load %union.tree_node*, %union.tree_node** %etype, align 8
  %common25 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  %tobool26 = icmp ne i32 %bf.clear, 0
  br i1 %tobool26, label %land.lhs.true.27, label %if.else.32

land.lhs.true.27:                                 ; preds = %if.else.24
  %26 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call28 = call i32 @integer_zerop(%union.tree_node* %26)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.then.30, label %if.else.32

if.then.30:                                       ; preds = %land.lhs.true.27
  %27 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %28 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %29 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %call31 = call %union.tree_node* @build_range_check(%union.tree_node* %27, %union.tree_node* %28, i32 1, %union.tree_node* null, %union.tree_node* %29)
  store %union.tree_node* %call31, %union.tree_node** %retval
  br label %return

if.else.32:                                       ; preds = %land.lhs.true.27, %if.else.24
  %30 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call33 = call i32 @integer_zerop(%union.tree_node* %30)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then.35, label %if.else.40

if.then.35:                                       ; preds = %if.else.32
  %31 = load %union.tree_node*, %union.tree_node** %etype, align 8
  %call36 = call %union.tree_node* @unsigned_type(%union.tree_node* %31)
  store %union.tree_node* %call36, %union.tree_node** %utype, align 8
  %32 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %33 = load %union.tree_node*, %union.tree_node** %utype, align 8
  %34 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %call37 = call %union.tree_node* @convert(%union.tree_node* %33, %union.tree_node* %34)
  %35 = load %union.tree_node*, %union.tree_node** %utype, align 8
  %36 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %call38 = call %union.tree_node* @convert(%union.tree_node* %35, %union.tree_node* %36)
  %call39 = call %union.tree_node* @build_range_check(%union.tree_node* %32, %union.tree_node* %call37, i32 1, %union.tree_node* null, %union.tree_node* %call38)
  store %union.tree_node* %call39, %union.tree_node** %retval
  br label %return

if.else.40:                                       ; preds = %if.else.32
  %37 = load %union.tree_node*, %union.tree_node** %high.addr, align 8
  %38 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call41 = call %union.tree_node* @const_binop(i32 60, %union.tree_node* %37, %union.tree_node* %38, i32 0)
  store %union.tree_node* %call41, %union.tree_node** %value, align 8
  %cmp42 = icmp ne %union.tree_node* null, %call41
  br i1 %cmp42, label %land.lhs.true.43, label %if.else.54

land.lhs.true.43:                                 ; preds = %if.else.40
  %39 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common44 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 2
  %bf.load45 = load i32, i32* %public_flag, align 8
  %bf.lshr46 = lshr i32 %bf.load45, 19
  %bf.clear47 = and i32 %bf.lshr46, 1
  %tobool48 = icmp ne i32 %bf.clear47, 0
  br i1 %tobool48, label %if.else.54, label %if.then.49

if.then.49:                                       ; preds = %land.lhs.true.43
  %40 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %41 = load %union.tree_node*, %union.tree_node** %etype, align 8
  %42 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %43 = load %union.tree_node*, %union.tree_node** %low.addr, align 8
  %call50 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %41, %union.tree_node* %42, %union.tree_node* %43)
  %call51 = call %union.tree_node* @fold(%union.tree_node* %call50)
  %44 = load %union.tree_node*, %union.tree_node** %etype, align 8
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call52 = call %union.tree_node* @convert(%union.tree_node* %44, %union.tree_node* %45)
  %46 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call53 = call %union.tree_node* @build_range_check(%union.tree_node* %40, %union.tree_node* %call51, i32 1, %union.tree_node* %call52, %union.tree_node* %46)
  store %union.tree_node* %call53, %union.tree_node** %retval
  br label %return

if.else.54:                                       ; preds = %land.lhs.true.43, %if.else.40
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else.54, %if.then.49, %if.then.35, %if.then.30, %if.then.21, %if.then.15, %if.then.10, %if.then.6, %if.then
  %47 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %47
}

; Function Attrs: nounwind uwtable
define internal i32 @simple_operand_p(%union.tree_node* %exp) #0 {
entry:
  %exp.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 114
  br i1 %cmp5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %2 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common6 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type7 = bitcast %union.tree_node* %3 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 6
  %bf.load8 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load8, 9
  %bf.clear9 = and i32 %bf.lshr, 127
  %4 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp10 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp10, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common11 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type12, align 8
  %type13 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode14 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 6
  %bf.load15 = load i32, i32* %mode14, align 4
  %bf.lshr16 = lshr i32 %bf.load15, 9
  %bf.clear17 = and i32 %bf.lshr16, 127
  %cmp18 = icmp eq i32 %bf.clear9, %bf.clear17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %7 = phi i1 [ false, %lor.lhs.false ], [ %cmp18, %land.rhs ]
  br i1 %7, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %8 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp19 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands20 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp19, i32 0, i32 2
  %arrayidx21 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands20, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx21, align 8
  store %union.tree_node* %9, %union.tree_node** %exp.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %10 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common22 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 2
  %bf.load24 = load i32, i32* %code23, align 8
  %bf.clear25 = and i32 %bf.load24, 255
  %idxprom = sext i32 %bf.clear25 to i64
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %11 = load i8, i8* %arrayidx26, align 1
  %conv = sext i8 %11 to i32
  %cmp27 = icmp eq i32 %conv, 99
  br i1 %cmp27, label %lor.end.80, label %lor.rhs

lor.rhs:                                          ; preds = %while.end
  %12 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common29 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %idxprom33 = sext i32 %bf.clear32 to i64
  %arrayidx34 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom33
  %13 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %13 to i32
  %cmp36 = icmp eq i32 %conv35, 100
  br i1 %cmp36, label %land.lhs.true, label %land.end.79

land.lhs.true:                                    ; preds = %lor.rhs
  %14 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common38 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load39 = load i32, i32* %addressable_flag, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 10
  %bf.clear41 = and i32 %bf.lshr40, 1
  %tobool = icmp ne i32 %bf.clear41, 0
  br i1 %tobool, label %land.end.79, label %land.lhs.true.42

land.lhs.true.42:                                 ; preds = %land.lhs.true
  %15 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common43 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load44 = load i32, i32* %volatile_flag, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 11
  %bf.clear46 = and i32 %bf.lshr45, 1
  %tobool47 = icmp ne i32 %bf.clear46, 0
  br i1 %tobool47, label %land.end.79, label %land.lhs.true.48

land.lhs.true.48:                                 ; preds = %land.lhs.true.42
  %16 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %decl = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %nonlocal_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %17 = bitcast i48* %nonlocal_flag to i64*
  %bf.load49 = load i64, i64* %17, align 8
  %bf.lshr50 = lshr i64 %bf.load49, 9
  %bf.clear51 = and i64 %bf.lshr50, 1
  %bf.cast = trunc i64 %bf.clear51 to i32
  %tobool52 = icmp ne i32 %bf.cast, 0
  br i1 %tobool52, label %land.end.79, label %land.lhs.true.53

land.lhs.true.53:                                 ; preds = %land.lhs.true.48
  %18 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common54 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load55 = load i32, i32* %public_flag, align 8
  %bf.lshr56 = lshr i32 %bf.load55, 19
  %bf.clear57 = and i32 %bf.lshr56, 1
  %tobool58 = icmp ne i32 %bf.clear57, 0
  br i1 %tobool58, label %land.end.79, label %land.lhs.true.59

land.lhs.true.59:                                 ; preds = %land.lhs.true.53
  %19 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %decl60 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl60, i32 0, i32 5
  %20 = bitcast i48* %external_flag to i64*
  %bf.load61 = load i64, i64* %20, align 8
  %bf.lshr62 = lshr i64 %bf.load61, 8
  %bf.clear63 = and i64 %bf.lshr62, 1
  %bf.cast64 = trunc i64 %bf.clear63 to i32
  %tobool65 = icmp ne i32 %bf.cast64, 0
  br i1 %tobool65, label %land.end.79, label %land.rhs.66

land.rhs.66:                                      ; preds = %land.lhs.true.59
  %21 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common67 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 2
  %bf.load68 = load i32, i32* %static_flag, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 18
  %bf.clear70 = and i32 %bf.lshr69, 1
  %tobool71 = icmp ne i32 %bf.clear70, 0
  br i1 %tobool71, label %lor.rhs.72, label %lor.end

lor.rhs.72:                                       ; preds = %land.rhs.66
  %22 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %decl73 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl73, i32 0, i32 5
  %23 = bitcast i48* %regdecl_flag to i64*
  %bf.load74 = load i64, i64* %23, align 8
  %bf.lshr75 = lshr i64 %bf.load74, 10
  %bf.clear76 = and i64 %bf.lshr75, 1
  %bf.cast77 = trunc i64 %bf.clear76 to i32
  %tobool78 = icmp ne i32 %bf.cast77, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs.72, %land.rhs.66
  %24 = phi i1 [ true, %land.rhs.66 ], [ %tobool78, %lor.rhs.72 ]
  br label %land.end.79

land.end.79:                                      ; preds = %lor.end, %land.lhs.true.59, %land.lhs.true.53, %land.lhs.true.48, %land.lhs.true.42, %land.lhs.true, %lor.rhs
  %25 = phi i1 [ false, %land.lhs.true.59 ], [ false, %land.lhs.true.53 ], [ false, %land.lhs.true.48 ], [ false, %land.lhs.true.42 ], [ false, %land.lhs.true ], [ false, %lor.rhs ], [ %24, %lor.end ]
  br label %lor.end.80

lor.end.80:                                       ; preds = %land.end.79, %while.end
  %26 = phi i1 [ true, %while.end ], [ %25, %land.end.79 ]
  %lor.ext = zext i1 %26 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @range_binop(i32 %code, %union.tree_node* %type, %union.tree_node* %arg0, i32 %upper0_p, %union.tree_node* %arg1, i32 %upper1_p) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  %arg0.addr = alloca %union.tree_node*, align 8
  %upper0_p.addr = alloca i32, align 4
  %arg1.addr = alloca %union.tree_node*, align 8
  %upper1_p.addr = alloca i32, align 4
  %tem = alloca %union.tree_node*, align 8
  %result = alloca i32, align 4
  %sgn0 = alloca i32, align 4
  %sgn1 = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %arg0, %union.tree_node** %arg0.addr, align 8
  store i32 %upper0_p, i32* %upper0_p.addr, align 4
  store %union.tree_node* %arg1, %union.tree_node** %arg1.addr, align 8
  store i32 %upper1_p, i32* %upper1_p.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %cmp = icmp ne %union.tree_node* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %cmp1 = icmp ne %union.tree_node* %1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %code.addr, align 4
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %cmp2 = icmp ne %union.tree_node* %3, null
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %5 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type3, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %4, %cond.true ], [ %6, %cond.false ]
  %7 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %common4 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %10 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %9, %union.tree_node* %10)
  %call6 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %2, %union.tree_node* %cond, %union.tree_node* %7, %union.tree_node* %call)
  %call7 = call %union.tree_node* @fold(%union.tree_node* %call6)
  store %union.tree_node* %call7, %union.tree_node** %tem, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %11 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common8 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load = load i32, i32* %code9, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp10 = icmp eq i32 %bf.clear, 115
  br i1 %cmp10, label %land.lhs.true.22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %12 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common11 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 114
  br i1 %cmp15, label %land.lhs.true.22, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false
  %13 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common17 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 116
  br i1 %cmp21, label %land.lhs.true.22, label %land.end

land.lhs.true.22:                                 ; preds = %lor.lhs.false.16, %lor.lhs.false, %while.cond
  %14 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %exp = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp23 = icmp ne %union.tree_node* %15, %16
  br i1 %cmp23, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.22
  %17 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common24 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type25, align 8
  %type26 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i32 0, i32 6
  %bf.load27 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load27, 9
  %bf.clear28 = and i32 %bf.lshr, 127
  %19 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %exp29 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands30 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp29, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands30, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8
  %common32 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %type33, align 8
  %type34 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i32 0, i32 6
  %bf.load36 = load i32, i32* %mode35, align 4
  %bf.lshr37 = lshr i32 %bf.load36, 9
  %bf.clear38 = and i32 %bf.lshr37, 127
  %cmp39 = icmp eq i32 %bf.clear28, %bf.clear38
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.22, %lor.lhs.false.16
  %22 = phi i1 [ false, %land.lhs.true.22 ], [ false, %lor.lhs.false.16 ], [ %cmp39, %land.rhs ]
  br i1 %22, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %23 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %exp40 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  store %union.tree_node* %24, %union.tree_node** %tem, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %25 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common43 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 2
  %bf.load45 = load i32, i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 25
  br i1 %cmp47, label %cond.true.48, label %cond.false.49

cond.true.48:                                     ; preds = %while.end
  %26 = load %union.tree_node*, %union.tree_node** %tem, align 8
  br label %cond.end.50

cond.false.49:                                    ; preds = %while.end
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.false.49, %cond.true.48
  %cond51 = phi %union.tree_node* [ %26, %cond.true.48 ], [ null, %cond.false.49 ]
  store %union.tree_node* %cond51, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %27 = load i32, i32* %code.addr, align 4
  %idxprom = sext i32 %27 to i64
  %arrayidx52 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %28 = load i8, i8* %arrayidx52, align 1
  %conv = sext i8 %28 to i32
  %cmp53 = icmp ne i32 %conv, 60
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.56:                                        ; preds = %if.end
  %29 = load %union.tree_node*, %union.tree_node** %arg0.addr, align 8
  %cmp57 = icmp ne %union.tree_node* %29, null
  br i1 %cmp57, label %cond.true.59, label %cond.false.60

cond.true.59:                                     ; preds = %if.end.56
  br label %cond.end.62

cond.false.60:                                    ; preds = %if.end.56
  %30 = load i32, i32* %upper0_p.addr, align 4
  %tobool = icmp ne i32 %30, 0
  %cond61 = select i1 %tobool, i32 1, i32 -1
  br label %cond.end.62

cond.end.62:                                      ; preds = %cond.false.60, %cond.true.59
  %cond63 = phi i32 [ 0, %cond.true.59 ], [ %cond61, %cond.false.60 ]
  store i32 %cond63, i32* %sgn0, align 4
  %31 = load %union.tree_node*, %union.tree_node** %arg1.addr, align 8
  %cmp64 = icmp ne %union.tree_node* %31, null
  br i1 %cmp64, label %cond.true.66, label %cond.false.67

cond.true.66:                                     ; preds = %cond.end.62
  br label %cond.end.70

cond.false.67:                                    ; preds = %cond.end.62
  %32 = load i32, i32* %upper1_p.addr, align 4
  %tobool68 = icmp ne i32 %32, 0
  %cond69 = select i1 %tobool68, i32 1, i32 -1
  br label %cond.end.70

cond.end.70:                                      ; preds = %cond.false.67, %cond.true.66
  %cond71 = phi i32 [ 0, %cond.true.66 ], [ %cond69, %cond.false.67 ]
  store i32 %cond71, i32* %sgn1, align 4
  %33 = load i32, i32* %code.addr, align 4
  switch i32 %33, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb.74
    i32 97, label %sw.bb.77
    i32 98, label %sw.bb.80
    i32 99, label %sw.bb.83
    i32 100, label %sw.bb.86
  ]

sw.bb:                                            ; preds = %cond.end.70
  %34 = load i32, i32* %sgn0, align 4
  %35 = load i32, i32* %sgn1, align 4
  %cmp72 = icmp eq i32 %34, %35
  %conv73 = zext i1 %cmp72 to i32
  store i32 %conv73, i32* %result, align 4
  br label %sw.epilog

sw.bb.74:                                         ; preds = %cond.end.70
  %36 = load i32, i32* %sgn0, align 4
  %37 = load i32, i32* %sgn1, align 4
  %cmp75 = icmp ne i32 %36, %37
  %conv76 = zext i1 %cmp75 to i32
  store i32 %conv76, i32* %result, align 4
  br label %sw.epilog

sw.bb.77:                                         ; preds = %cond.end.70
  %38 = load i32, i32* %sgn0, align 4
  %39 = load i32, i32* %sgn1, align 4
  %cmp78 = icmp slt i32 %38, %39
  %conv79 = zext i1 %cmp78 to i32
  store i32 %conv79, i32* %result, align 4
  br label %sw.epilog

sw.bb.80:                                         ; preds = %cond.end.70
  %40 = load i32, i32* %sgn0, align 4
  %41 = load i32, i32* %sgn1, align 4
  %cmp81 = icmp sle i32 %40, %41
  %conv82 = zext i1 %cmp81 to i32
  store i32 %conv82, i32* %result, align 4
  br label %sw.epilog

sw.bb.83:                                         ; preds = %cond.end.70
  %42 = load i32, i32* %sgn0, align 4
  %43 = load i32, i32* %sgn1, align 4
  %cmp84 = icmp sgt i32 %42, %43
  %conv85 = zext i1 %cmp84 to i32
  store i32 %conv85, i32* %result, align 4
  br label %sw.epilog

sw.bb.86:                                         ; preds = %cond.end.70
  %44 = load i32, i32* %sgn0, align 4
  %45 = load i32, i32* %sgn1, align 4
  %cmp87 = icmp sge i32 %44, %45
  %conv88 = zext i1 %cmp87 to i32
  store i32 %conv88, i32* %result, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end.70
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 3411, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.range_binop, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %sw.bb.86, %sw.bb.83, %sw.bb.80, %sw.bb.77, %sw.bb.74, %sw.bb
  %46 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %47 = load i32, i32* %result, align 4
  %tobool89 = icmp ne i32 %47, 0
  br i1 %tobool89, label %cond.true.90, label %cond.false.91

cond.true.90:                                     ; preds = %sw.epilog
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  br label %cond.end.92

cond.false.91:                                    ; preds = %sw.epilog
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  br label %cond.end.92

cond.end.92:                                      ; preds = %cond.false.91, %cond.true.90
  %cond93 = phi %union.tree_node* [ %48, %cond.true.90 ], [ %49, %cond.false.91 ]
  %call94 = call %union.tree_node* @convert(%union.tree_node* %46, %union.tree_node* %cond93)
  store %union.tree_node* %call94, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %cond.end.92, %if.then.55, %cond.end.50
  %50 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %50
}

declare %union.tree_node* @type_for_mode(i32, i32) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @decode_field_reference(%union.tree_node* %exp, i64* %pbitsize, i64* %pbitpos, i32* %pmode, i32* %punsignedp, i32* %pvolatilep, %union.tree_node** %pmask, %union.tree_node** %pand_mask) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %pbitsize.addr = alloca i64*, align 8
  %pbitpos.addr = alloca i64*, align 8
  %pmode.addr = alloca i32*, align 8
  %punsignedp.addr = alloca i32*, align 8
  %pvolatilep.addr = alloca i32*, align 8
  %pmask.addr = alloca %union.tree_node**, align 8
  %pand_mask.addr = alloca %union.tree_node**, align 8
  %and_mask = alloca %union.tree_node*, align 8
  %mask = alloca %union.tree_node*, align 8
  %inner = alloca %union.tree_node*, align 8
  %offset = alloca %union.tree_node*, align 8
  %unsigned_type = alloca %union.tree_node*, align 8
  %precision = alloca i32, align 4
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  store i64* %pbitsize, i64** %pbitsize.addr, align 8
  store i64* %pbitpos, i64** %pbitpos.addr, align 8
  store i32* %pmode, i32** %pmode.addr, align 8
  store i32* %punsignedp, i32** %punsignedp.addr, align 8
  store i32* %pvolatilep, i32** %pvolatilep.addr, align 8
  store %union.tree_node** %pmask, %union.tree_node*** %pmask.addr, align 8
  store %union.tree_node** %pand_mask, %union.tree_node*** %pand_mask.addr, align 8
  store %union.tree_node* null, %union.tree_node** %and_mask, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %common4 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 10
  br i1 %cmp8, label %if.end, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common10 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type11, align 8
  %common12 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 11
  br i1 %cmp16, label %if.end, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.9
  %6 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common18 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type19, align 8
  %common20 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 12
  br i1 %cmp24, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false.17
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.17, %lor.lhs.false.9, %lor.lhs.false, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %8 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common25 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load27 = load i32, i32* %code26, align 8
  %bf.clear28 = and i32 %bf.load27, 255
  %cmp29 = icmp eq i32 %bf.clear28, 115
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %while.cond
  %9 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common31 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 114
  br i1 %cmp35, label %land.lhs.true, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %lor.lhs.false.30
  %10 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common37 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 2
  %bf.load39 = load i32, i32* %code38, align 8
  %bf.clear40 = and i32 %bf.load39, 255
  %cmp41 = icmp eq i32 %bf.clear40, 116
  br i1 %cmp41, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.36, %lor.lhs.false.30, %while.cond
  %11 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp42 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp42, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp43 = icmp ne %union.tree_node* %12, %13
  br i1 %cmp43, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %14 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common44 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common44, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type45, align 8
  %type46 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type46, i32 0, i32 6
  %bf.load47 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load47, 9
  %bf.clear48 = and i32 %bf.lshr, 127
  %16 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp49 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp49, i32 0, i32 2
  %arrayidx51 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands50, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx51, align 8
  %common52 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type53, align 8
  %type54 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %mode55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i32 0, i32 6
  %bf.load56 = load i32, i32* %mode55, align 4
  %bf.lshr57 = lshr i32 %bf.load56, 9
  %bf.clear58 = and i32 %bf.lshr57, 127
  %cmp59 = icmp eq i32 %bf.clear48, %bf.clear58
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.36
  %19 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.36 ], [ %cmp59, %land.rhs ]
  br i1 %19, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %20 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp60 = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands61 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp60, i32 0, i32 2
  %arrayidx62 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands61, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx62, align 8
  store %union.tree_node* %21, %union.tree_node** %exp.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %22 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common63 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code64 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 2
  %bf.load65 = load i32, i32* %code64, align 8
  %bf.clear66 = and i32 %bf.load65, 255
  %cmp67 = icmp eq i32 %bf.clear66, 88
  br i1 %cmp67, label %if.then.68, label %if.end.178

if.then.68:                                       ; preds = %while.end
  %23 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp69 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands70 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp69, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands70, i32 0, i64 1
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx71, align 8
  store %union.tree_node* %24, %union.tree_node** %and_mask, align 8
  %25 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp72 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands73 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp72, i32 0, i32 2
  %arrayidx74 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands73, i32 0, i64 0
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx74, align 8
  store %union.tree_node* %26, %union.tree_node** %exp.addr, align 8
  br label %while.cond.75

while.cond.75:                                    ; preds = %while.body.118, %if.then.68
  %27 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common76 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code77 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common76, i32 0, i32 2
  %bf.load78 = load i32, i32* %code77, align 8
  %bf.clear79 = and i32 %bf.load78, 255
  %cmp80 = icmp eq i32 %bf.clear79, 115
  br i1 %cmp80, label %land.lhs.true.93, label %lor.lhs.false.81

lor.lhs.false.81:                                 ; preds = %while.cond.75
  %28 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common82 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %code83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 2
  %bf.load84 = load i32, i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 114
  br i1 %cmp86, label %land.lhs.true.93, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.81
  %29 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common88 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %code89, align 8
  %bf.clear91 = and i32 %bf.load90, 255
  %cmp92 = icmp eq i32 %bf.clear91, 116
  br i1 %cmp92, label %land.lhs.true.93, label %land.end.117

land.lhs.true.93:                                 ; preds = %lor.lhs.false.87, %lor.lhs.false.81, %while.cond.75
  %30 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp94 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands95 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp94, i32 0, i32 2
  %arrayidx96 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands95, i32 0, i64 0
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx96, align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp97 = icmp ne %union.tree_node* %31, %32
  br i1 %cmp97, label %land.rhs.98, label %land.end.117

land.rhs.98:                                      ; preds = %land.lhs.true.93
  %33 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common99 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common99, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type100, align 8
  %type101 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %mode102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i32 0, i32 6
  %bf.load103 = load i32, i32* %mode102, align 4
  %bf.lshr104 = lshr i32 %bf.load103, 9
  %bf.clear105 = and i32 %bf.lshr104, 127
  %35 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp106 = bitcast %union.tree_node* %35 to %struct.tree_exp*
  %operands107 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp106, i32 0, i32 2
  %arrayidx108 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands107, i32 0, i64 0
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx108, align 8
  %common109 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %type110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 1
  %37 = load %union.tree_node*, %union.tree_node** %type110, align 8
  %type111 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %mode112 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type111, i32 0, i32 6
  %bf.load113 = load i32, i32* %mode112, align 4
  %bf.lshr114 = lshr i32 %bf.load113, 9
  %bf.clear115 = and i32 %bf.lshr114, 127
  %cmp116 = icmp eq i32 %bf.clear105, %bf.clear115
  br label %land.end.117

land.end.117:                                     ; preds = %land.rhs.98, %land.lhs.true.93, %lor.lhs.false.87
  %38 = phi i1 [ false, %land.lhs.true.93 ], [ false, %lor.lhs.false.87 ], [ %cmp116, %land.rhs.98 ]
  br i1 %38, label %while.body.118, label %while.end.122

while.body.118:                                   ; preds = %land.end.117
  %39 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp119 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands120 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp119, i32 0, i32 2
  %arrayidx121 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands120, i32 0, i64 0
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx121, align 8
  store %union.tree_node* %40, %union.tree_node** %exp.addr, align 8
  br label %while.cond.75

while.end.122:                                    ; preds = %land.end.117
  br label %while.cond.123

while.cond.123:                                   ; preds = %while.body.166, %while.end.122
  %41 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %common124 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 2
  %bf.load126 = load i32, i32* %code125, align 8
  %bf.clear127 = and i32 %bf.load126, 255
  %cmp128 = icmp eq i32 %bf.clear127, 115
  br i1 %cmp128, label %land.lhs.true.141, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %while.cond.123
  %42 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %common130 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 2
  %bf.load132 = load i32, i32* %code131, align 8
  %bf.clear133 = and i32 %bf.load132, 255
  %cmp134 = icmp eq i32 %bf.clear133, 114
  br i1 %cmp134, label %land.lhs.true.141, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.129
  %43 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %common136 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2
  %bf.load138 = load i32, i32* %code137, align 8
  %bf.clear139 = and i32 %bf.load138, 255
  %cmp140 = icmp eq i32 %bf.clear139, 116
  br i1 %cmp140, label %land.lhs.true.141, label %land.end.165

land.lhs.true.141:                                ; preds = %lor.lhs.false.135, %lor.lhs.false.129, %while.cond.123
  %44 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %exp142 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands143 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp142, i32 0, i32 2
  %arrayidx144 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands143, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx144, align 8
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp145 = icmp ne %union.tree_node* %45, %46
  br i1 %cmp145, label %land.rhs.146, label %land.end.165

land.rhs.146:                                     ; preds = %land.lhs.true.141
  %47 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %common147 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %type148 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common147, i32 0, i32 1
  %48 = load %union.tree_node*, %union.tree_node** %type148, align 8
  %type149 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %mode150 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type149, i32 0, i32 6
  %bf.load151 = load i32, i32* %mode150, align 4
  %bf.lshr152 = lshr i32 %bf.load151, 9
  %bf.clear153 = and i32 %bf.lshr152, 127
  %49 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %exp154 = bitcast %union.tree_node* %49 to %struct.tree_exp*
  %operands155 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp154, i32 0, i32 2
  %arrayidx156 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands155, i32 0, i64 0
  %50 = load %union.tree_node*, %union.tree_node** %arrayidx156, align 8
  %common157 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type158, align 8
  %type159 = bitcast %union.tree_node* %51 to %struct.tree_type*
  %mode160 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type159, i32 0, i32 6
  %bf.load161 = load i32, i32* %mode160, align 4
  %bf.lshr162 = lshr i32 %bf.load161, 9
  %bf.clear163 = and i32 %bf.lshr162, 127
  %cmp164 = icmp eq i32 %bf.clear153, %bf.clear163
  br label %land.end.165

land.end.165:                                     ; preds = %land.rhs.146, %land.lhs.true.141, %lor.lhs.false.135
  %52 = phi i1 [ false, %land.lhs.true.141 ], [ false, %lor.lhs.false.135 ], [ %cmp164, %land.rhs.146 ]
  br i1 %52, label %while.body.166, label %while.end.170

while.body.166:                                   ; preds = %land.end.165
  %53 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %exp167 = bitcast %union.tree_node* %53 to %struct.tree_exp*
  %operands168 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp167, i32 0, i32 2
  %arrayidx169 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands168, i32 0, i64 0
  %54 = load %union.tree_node*, %union.tree_node** %arrayidx169, align 8
  store %union.tree_node* %54, %union.tree_node** %and_mask, align 8
  br label %while.cond.123

while.end.170:                                    ; preds = %land.end.165
  %55 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %common171 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code172 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common171, i32 0, i32 2
  %bf.load173 = load i32, i32* %code172, align 8
  %bf.clear174 = and i32 %bf.load173, 255
  %cmp175 = icmp ne i32 %bf.clear174, 25
  br i1 %cmp175, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %while.end.170
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.177:                                       ; preds = %while.end.170
  br label %if.end.178

if.end.178:                                       ; preds = %if.end.177, %while.end
  %56 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %57 = load i64*, i64** %pbitsize.addr, align 8
  %58 = load i64*, i64** %pbitpos.addr, align 8
  %59 = load i32*, i32** %pmode.addr, align 8
  %60 = load i32*, i32** %punsignedp.addr, align 8
  %61 = load i32*, i32** %pvolatilep.addr, align 8
  %call = call %union.tree_node* @get_inner_reference(%union.tree_node* %56, i64* %57, i64* %58, %union.tree_node** %offset, i32* %59, i32* %60, i32* %61)
  store %union.tree_node* %call, %union.tree_node** %inner, align 8
  %62 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %63 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %cmp179 = icmp eq %union.tree_node* %62, %63
  br i1 %cmp179, label %land.lhs.true.180, label %lor.lhs.false.182

land.lhs.true.180:                                ; preds = %if.end.178
  %64 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %cmp181 = icmp eq %union.tree_node* %64, null
  br i1 %cmp181, label %if.then.192, label %lor.lhs.false.182

lor.lhs.false.182:                                ; preds = %land.lhs.true.180, %if.end.178
  %65 = load i64*, i64** %pbitsize.addr, align 8
  %66 = load i64, i64* %65, align 8
  %cmp183 = icmp slt i64 %66, 0
  br i1 %cmp183, label %if.then.192, label %lor.lhs.false.184

lor.lhs.false.184:                                ; preds = %lor.lhs.false.182
  %67 = load %union.tree_node*, %union.tree_node** %offset, align 8
  %cmp185 = icmp ne %union.tree_node* %67, null
  br i1 %cmp185, label %if.then.192, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %lor.lhs.false.184
  %68 = load %union.tree_node*, %union.tree_node** %inner, align 8
  %common187 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %code188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common187, i32 0, i32 2
  %bf.load189 = load i32, i32* %code188, align 8
  %bf.clear190 = and i32 %bf.load189, 255
  %cmp191 = icmp eq i32 %bf.clear190, 57
  br i1 %cmp191, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %lor.lhs.false.186, %lor.lhs.false.184, %lor.lhs.false.182, %land.lhs.true.180
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.193:                                       ; preds = %lor.lhs.false.186
  %69 = load i64*, i64** %pbitsize.addr, align 8
  %70 = load i64, i64* %69, align 8
  %conv = trunc i64 %70 to i32
  %call194 = call %union.tree_node* @type_for_size(i32 %conv, i32 1)
  store %union.tree_node* %call194, %union.tree_node** %unsigned_type, align 8
  %71 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %type195 = bitcast %union.tree_node* %71 to %struct.tree_type*
  %precision196 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type195, i32 0, i32 6
  %bf.load197 = load i32, i32* %precision196, align 4
  %bf.clear198 = and i32 %bf.load197, 511
  store i32 %bf.clear198, i32* %precision, align 4
  %call199 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call199, %union.tree_node** %mask, align 8
  %72 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %73 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %common200 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %type201 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common200, i32 0, i32 1
  store %union.tree_node* %72, %union.tree_node** %type201, align 8
  %74 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call202 = call i32 @force_fit_type(%union.tree_node* %74, i32 0)
  %75 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %76 = load i32, i32* %precision, align 4
  %conv203 = zext i32 %76 to i64
  %77 = load i64*, i64** %pbitsize.addr, align 8
  %78 = load i64, i64* %77, align 8
  %sub = sub nsw i64 %conv203, %78
  %call204 = call %union.tree_node* @size_int_wide(i64 %sub, i32 0)
  %call205 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %75, %union.tree_node* %call204, i32 0)
  store %union.tree_node* %call205, %union.tree_node** %mask, align 8
  %79 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %80 = load i32, i32* %precision, align 4
  %conv206 = zext i32 %80 to i64
  %81 = load i64*, i64** %pbitsize.addr, align 8
  %82 = load i64, i64* %81, align 8
  %sub207 = sub nsw i64 %conv206, %82
  %call208 = call %union.tree_node* @size_int_wide(i64 %sub207, i32 0)
  %call209 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %79, %union.tree_node* %call208, i32 0)
  store %union.tree_node* %call209, %union.tree_node** %mask, align 8
  %83 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %cmp210 = icmp ne %union.tree_node* %83, null
  br i1 %cmp210, label %if.then.212, label %if.end.216

if.then.212:                                      ; preds = %if.end.193
  %84 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %85 = load %union.tree_node*, %union.tree_node** %unsigned_type, align 8
  %86 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %call213 = call %union.tree_node* @convert(%union.tree_node* %85, %union.tree_node* %86)
  %87 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %call214 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 88, %union.tree_node* %84, %union.tree_node* %call213, %union.tree_node* %87)
  %call215 = call %union.tree_node* @fold(%union.tree_node* %call214)
  store %union.tree_node* %call215, %union.tree_node** %mask, align 8
  br label %if.end.216

if.end.216:                                       ; preds = %if.then.212, %if.end.193
  %88 = load %union.tree_node*, %union.tree_node** %mask, align 8
  %89 = load %union.tree_node**, %union.tree_node*** %pmask.addr, align 8
  store %union.tree_node* %88, %union.tree_node** %89, align 8
  %90 = load %union.tree_node*, %union.tree_node** %and_mask, align 8
  %91 = load %union.tree_node**, %union.tree_node*** %pand_mask.addr, align 8
  store %union.tree_node* %90, %union.tree_node** %91, align 8
  %92 = load %union.tree_node*, %union.tree_node** %inner, align 8
  store %union.tree_node* %92, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.216, %if.then.192, %if.then.176, %if.then
  %93 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %93
}

declare i32 @get_best_mode(i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @unextend(%union.tree_node* %c, i32 %p, i32 %unsignedp, %union.tree_node* %mask) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %c.addr = alloca %union.tree_node*, align 8
  %p.addr = alloca i32, align 4
  %unsignedp.addr = alloca i32, align 4
  %mask.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %modesize = alloca i32, align 4
  %temp = alloca %union.tree_node*, align 8
  store %union.tree_node* %c, %union.tree_node** %c.addr, align 8
  store i32 %p, i32* %p.addr, align 4
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  store %union.tree_node* %mask, %union.tree_node** %mask.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type2 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 6
  %bf.load = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %3 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %3 to i32
  store i32 %conv, i32* %modesize, align 4
  %4 = load i32, i32* %p.addr, align 4
  %5 = load i32, i32* %modesize, align 4
  %cmp = icmp eq i32 %4, %5
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %unsignedp.addr, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  store %union.tree_node* %7, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %9 = load i32, i32* %p.addr, align 4
  %sub = sub nsw i32 %9, 1
  %conv4 = sext i32 %sub to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv4, i32 0)
  %call5 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %8, %union.tree_node* %call, i32 0)
  store %union.tree_node* %call5, %union.tree_node** %temp, align 8
  %10 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %call6 = call %union.tree_node* @size_int_wide(i64 1, i32 0)
  %call7 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %10, %union.tree_node* %call6, i32 0)
  store %union.tree_node* %call7, %union.tree_node** %temp, align 8
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common8 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load9 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 13
  %bf.clear11 = and i32 %bf.lshr10, 1
  %tobool12 = icmp ne i32 %bf.clear11, 0
  br i1 %tobool12, label %if.then.13, label %if.end.16

if.then.13:                                       ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call14 = call %union.tree_node* @signed_type(%union.tree_node* %12)
  %13 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %call15 = call %union.tree_node* @convert(%union.tree_node* %call14, %union.tree_node* %13)
  store %union.tree_node* %call15, %union.tree_node** %temp, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.13, %if.end
  %14 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %15 = load i32, i32* %modesize, align 4
  %sub17 = sub nsw i32 %15, 1
  %conv18 = sext i32 %sub17 to i64
  %call19 = call %union.tree_node* @size_int_wide(i64 %conv18, i32 0)
  %call20 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %14, %union.tree_node* %call19, i32 0)
  store %union.tree_node* %call20, %union.tree_node** %temp, align 8
  %16 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %17 = load i32, i32* %modesize, align 4
  %18 = load i32, i32* %p.addr, align 4
  %sub21 = sub nsw i32 %17, %18
  %sub22 = sub nsw i32 %sub21, 1
  %conv23 = sext i32 %sub22 to i64
  %call24 = call %union.tree_node* @size_int_wide(i64 %conv23, i32 0)
  %call25 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %16, %union.tree_node* %call24, i32 0)
  store %union.tree_node* %call25, %union.tree_node** %temp, align 8
  %19 = load %union.tree_node*, %union.tree_node** %mask.addr, align 8
  %cmp26 = icmp ne %union.tree_node* %19, null
  br i1 %cmp26, label %if.then.28, label %if.end.33

if.then.28:                                       ; preds = %if.end.16
  %20 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %21 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %common29 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type30, align 8
  %23 = load %union.tree_node*, %union.tree_node** %mask.addr, align 8
  %call31 = call %union.tree_node* @convert(%union.tree_node* %22, %union.tree_node* %23)
  %call32 = call %union.tree_node* @const_binop(i32 88, %union.tree_node* %20, %union.tree_node* %call31, i32 0)
  store %union.tree_node* %call32, %union.tree_node** %temp, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.28, %if.end.16
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common34 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %unsigned_flag35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %unsigned_flag35, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 13
  %bf.clear38 = and i32 %bf.lshr37, 1
  %tobool39 = icmp ne i32 %bf.clear38, 0
  br i1 %tobool39, label %if.then.40, label %if.end.42

if.then.40:                                       ; preds = %if.end.33
  %25 = load %union.tree_node*, %union.tree_node** %type, align 8
  %26 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %call41 = call %union.tree_node* @convert(%union.tree_node* %25, %union.tree_node* %26)
  store %union.tree_node* %call41, %union.tree_node** %temp, align 8
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.40, %if.end.33
  %27 = load %union.tree_node*, %union.tree_node** %type, align 8
  %28 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %29 = load %union.tree_node*, %union.tree_node** %temp, align 8
  %call43 = call %union.tree_node* @const_binop(i32 87, %union.tree_node* %28, %union.tree_node* %29, i32 0)
  %call44 = call %union.tree_node* @convert(%union.tree_node* %27, %union.tree_node* %call43)
  store %union.tree_node* %call44, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.42, %if.then
  %30 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %30
}

declare void @warning(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @make_bit_field_ref(%union.tree_node* %inner, %union.tree_node* %type, i32 %bitsize, i32 %bitpos, i32 %unsignedp) #0 {
entry:
  %inner.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %bitsize.addr = alloca i32, align 4
  %bitpos.addr = alloca i32, align 4
  %unsignedp.addr = alloca i32, align 4
  %result = alloca %union.tree_node*, align 8
  store %union.tree_node* %inner, %union.tree_node** %inner.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store i32 %bitsize, i32* %bitsize.addr, align 4
  store i32 %bitpos, i32* %bitpos.addr, align 4
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %inner.addr, align 8
  %2 = load i32, i32* %bitsize.addr, align 4
  %conv = sext i32 %2 to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  %3 = load i32, i32* %bitpos.addr, align 4
  %conv1 = sext i32 %3 to i64
  %call2 = call %union.tree_node* @size_int_wide(i64 %conv1, i32 3)
  %call3 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 40, %union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %call, %union.tree_node* %call2)
  store %union.tree_node* %call3, %union.tree_node** %result, align 8
  %4 = load i32, i32* %unsignedp.addr, align 4
  %5 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.value = and i32 %4, 1
  %bf.shl = shl i32 %bf.value, 13
  %bf.clear = and i32 %bf.load, -8193
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %unsigned_flag, align 8
  %6 = load %union.tree_node*, %union.tree_node** %result, align 8
  ret %union.tree_node* %6
}

; Function Attrs: nounwind uwtable
define internal i32 @all_ones_mask_p(%union.tree_node* %mask, i32 %size) #0 {
entry:
  %mask.addr = alloca %union.tree_node*, align 8
  %size.addr = alloca i32, align 4
  %type = alloca %union.tree_node*, align 8
  %precision = alloca i32, align 4
  %tmask = alloca %union.tree_node*, align 8
  store %union.tree_node* %mask, %union.tree_node** %mask.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %mask.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type2 = bitcast %union.tree_node* %2 to %struct.tree_type*
  %precision3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 6
  %bf.load = load i32, i32* %precision3, align 4
  %bf.clear = and i32 %bf.load, 511
  store i32 %bf.clear, i32* %precision, align 4
  %call = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call, %union.tree_node** %tmask, align 8
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call4 = call %union.tree_node* @signed_type(%union.tree_node* %3)
  %4 = load %union.tree_node*, %union.tree_node** %tmask, align 8
  %common5 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  store %union.tree_node* %call4, %union.tree_node** %type6, align 8
  %5 = load %union.tree_node*, %union.tree_node** %tmask, align 8
  %call7 = call i32 @force_fit_type(%union.tree_node* %5, i32 0)
  %6 = load %union.tree_node*, %union.tree_node** %mask.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %tmask, align 8
  %8 = load i32, i32* %precision, align 4
  %9 = load i32, i32* %size.addr, align 4
  %sub = sub i32 %8, %9
  %conv = zext i32 %sub to i64
  %call8 = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  %call9 = call %union.tree_node* @const_binop(i32 82, %union.tree_node* %7, %union.tree_node* %call8, i32 0)
  %10 = load i32, i32* %precision, align 4
  %11 = load i32, i32* %size.addr, align 4
  %sub10 = sub i32 %10, %11
  %conv11 = zext i32 %sub10 to i64
  %call12 = call %union.tree_node* @size_int_wide(i64 %conv11, i32 0)
  %call13 = call %union.tree_node* @const_binop(i32 83, %union.tree_node* %call9, %union.tree_node* %call12, i32 0)
  %call14 = call i32 @tree_int_cst_equal(%union.tree_node* %6, %union.tree_node* %call13)
  ret i32 %call14
}

declare i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) #3

declare %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*) #3

declare %union.tree_node* @get_narrower(%union.tree_node*, i32*) #3

declare %union.tree_node* @signed_or_unsigned_type(i32, %union.tree_node*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }
attributes #6 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
