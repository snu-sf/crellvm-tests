; ModuleID = 'reload.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.reload = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, i8 }
%struct.replacement = type { %struct.rtx_def**, %struct.rtx_def**, i32, i32 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.optab = type { i32, [59 x %struct.anon] }
%struct.anon = type { i32, %struct.rtx_def* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.decomposition = type { i32, i32, %struct.rtx_def*, i64, i64 }

@mode_bitsize = external constant [59 x i16], align 16
@target_flags = external global i32, align 4
@mode_class = external constant [59 x i32], align 16
@secondary_memlocs_elim = internal global [59 x [30 x %struct.rtx_def*]] zeroinitializer, align 16
@secondary_memlocs = internal global [59 x %struct.rtx_def*] zeroinitializer, align 16
@mode_size = external constant [59 x i8], align 16
@reg_renumber = external global i16*, align 8
@reg_equiv_constant = external global %struct.rtx_def**, align 8
@.str = private unnamed_addr constant [9 x i8] c"reload.c\00", align 1
@__FUNCTION__.push_reload = private unnamed_addr constant [12 x i8] c"push_reload\00", align 1
@this_insn_is_asm = internal global i32 0, align 4
@this_insn = internal global %struct.rtx_def* null, align 8
@.str.1 = private unnamed_addr constant [48 x i8] c"cannot reload integer constant operand in `asm'\00", align 1
@word_mode = external global i32, align 4
@reg_class_contents = external global [25 x i64], align 16
@.str.2 = private unnamed_addr constant [40 x i8] c"impossible register constraint in `asm'\00", align 1
@n_reloads = common global i32 0, align 4
@regclass_map = external constant [53 x i32], align 16
@rld = common global [180 x %struct.reload] zeroinitializer, align 16
@replace_reloads = internal global i32 0, align 4
@n_replacements = internal global i32 0, align 4
@replacements = internal global [150 x %struct.replacement] zeroinitializer, align 16
@static_reload_reg_p = internal global i16* null, align 8
@fixed_regs = external global [53 x i8], align 16
@output_reloadnum = internal global i32 0, align 4
@n_earlyclobbers = common global i32 0, align 4
@reload_earlyclobbers = common global [30 x %struct.rtx_def*] zeroinitializer, align 16
@rtx_format = external constant [153 x i8*], align 16
@rtx_length = external constant [153 x i8], align 16
@__FUNCTION__.operands_match_p = private unnamed_addr constant [17 x i8] c"operands_match_p\00", align 1
@rtx_class = external constant [153 x i8], align 16
@hard_regs_live_known = internal global i32 0, align 4
@recog_data = external global %struct.recog_data, align 8
@reload_n_operands = common global i32 0, align 4
@__FUNCTION__.find_reloads = private unnamed_addr constant [13 x i8] c"find_reloads\00", align 1
@_sch_istable = external constant [256 x i16], align 16
@reg_equiv_memory_loc = external global %struct.rtx_def**, align 8
@reg_equiv_address = external global %struct.rtx_def**, align 8
@num_not_at_initial_offset = external global i32, align 4
@reg_class_subunion = external global [25 x [25 x i32]], align 16
@reg_equiv_mem = external global %struct.rtx_def**, align 8
@flag_pic = external global i32, align 4
@reg_class_size = external global [25 x i32], align 16
@.str.3 = private unnamed_addr constant [43 x i8] c"`&' constraint used with no register class\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"unable to generate reloads for:\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"inconsistent operand constraints in an `asm'\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@insn_data = external constant [0 x %struct.insn_data], align 8
@optimize = external global i32, align 4
@__FUNCTION__.subst_reloads = private unnamed_addr constant [14 x i8] c"subst_reloads\00", align 1
@__FUNCTION__.copy_replacements = private unnamed_addr constant [18 x i8] c"copy_replacements\00", align 1
@__FUNCTION__.refers_to_regno_for_reload_p = private unnamed_addr constant [29 x i8] c"refers_to_regno_for_reload_p\00", align 1
@__FUNCTION__.reg_overlap_mentioned_for_reload_p = private unnamed_addr constant [35 x i8] c"reg_overlap_mentioned_for_reload_p\00", align 1
@flag_float_store = external global i32, align 4
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@reload_first_uid = external global i32, align 4
@call_used_regs = external global [53 x i8], align 16
@stderr = external global %struct._IO_FILE*, align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"Reload %d: \00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"reload_in (%s) = \00", align 1
@mode_name = external constant [59 x i8*], align 16
@.str.8 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"reload_out (%s) = \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"%s, \00", align 1
@reg_class_names = internal constant [25 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0)], align 16
@.str.11 = private unnamed_addr constant [16 x i8] c"%s (opnum = %d)\00", align 1
@reload_when_needed_name = internal constant [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c", optional\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c", nongroup\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c", inc by %d\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c", can't combine\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c", secondary_reload_p\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"\0A\09reload_in_reg: \00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"\0A\09reload_out_reg: \00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"\0A\09reload_reg_rtx: \00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"%ssecondary_in_reload = %d\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"%ssecondary_out_reload = %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"%ssecondary_in_icode = %s\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"%ssecondary_out_icode = %s\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@__FUNCTION__.find_valid_class = private unnamed_addr constant [17 x i8] c"find_valid_class\00", align 1
@reload_in_optab = external global [59 x i32], align 16
@reload_out_optab = external global [59 x i32], align 16
@__FUNCTION__.push_secondary_reload = private unnamed_addr constant [22 x i8] c"push_secondary_reload\00", align 1
@__FUNCTION__.decompose = private unnamed_addr constant [10 x i8] c"decompose\00", align 1
@__FUNCTION__.immune_p = private unnamed_addr constant [9 x i8] c"immune_p\00", align 1
@__FUNCTION__.find_reloads_toplev = private unnamed_addr constant [20 x i8] c"find_reloads_toplev\00", align 1
@cfun = external global %struct.function*, align 8
@subst_reg_equivs_changed = internal global i32 0, align 4
@indirect_symref_ok = external global i8, align 1
@double_reg_address_ok = external global i8, align 1
@__FUNCTION__.find_reloads_address_1 = private unnamed_addr constant [23 x i8] c"find_reloads_address_1\00", align 1
@optab_table = external global [49 x %struct.optab*], align 16
@.str.26 = private unnamed_addr constant [8 x i8] c"NO_REGS\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"AREG\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"DREG\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"CREG\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"BREG\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"SIREG\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"DIREG\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"AD_REGS\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"Q_REGS\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"NON_Q_REGS\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"INDEX_REGS\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"LEGACY_REGS\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"GENERAL_REGS\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"FP_TOP_REG\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"FP_SECOND_REG\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"FLOAT_REGS\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"SSE_REGS\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"MMX_REGS\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"FP_TOP_SSE_REGS\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"FP_SECOND_SSE_REGS\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"FLOAT_SSE_REGS\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"FLOAT_INT_REGS\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"INT_SSE_REGS\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"FLOAT_INT_SSE_REGS\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"ALL_REGS\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"RELOAD_FOR_INPUT\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"RELOAD_FOR_OUTPUT\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"RELOAD_FOR_INSN\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"RELOAD_FOR_INPUT_ADDRESS\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"RELOAD_FOR_INPADDR_ADDRESS\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"RELOAD_FOR_OUTPUT_ADDRESS\00", align 1
@.str.57 = private unnamed_addr constant [27 x i8] c"RELOAD_FOR_OUTADDR_ADDRESS\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"RELOAD_FOR_OPERAND_ADDRESS\00", align 1
@.str.59 = private unnamed_addr constant [23 x i8] c"RELOAD_FOR_OPADDR_ADDR\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"RELOAD_OTHER\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"RELOAD_FOR_OTHER_ADDRESS\00", align 1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %x, i32 %mode, i32 %opnum, i32 %type) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %loc = alloca %struct.rtx_def*, align 8
  %mem_valid = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom
  %1 = load i16, i16* %arrayidx, align 2
  %conv = zext i16 %1 to i32
  %2 = load i32, i32* @target_flags, align 4
  %and = and i32 %2, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 64, i32 32
  %cmp = icmp slt i32 %conv, %cond
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2
  %4 = load i32, i32* %arrayidx3, align 4
  %cmp4 = icmp eq i32 %4, 1
  br i1 %cmp4, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i32, i32* %mode.addr, align 4
  %idxprom6 = sext i32 %5 to i64
  %arrayidx7 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom6
  %6 = load i32, i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %6, 3
  br i1 %cmp8, label %if.then, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %lor.lhs.false
  %7 = load i32, i32* %mode.addr, align 4
  %idxprom11 = sext i32 %7 to i64
  %arrayidx12 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom11
  %8 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp eq i32 %8, 5
  br i1 %cmp13, label %if.then, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.10
  %9 = load i32, i32* %mode.addr, align 4
  %idxprom16 = sext i32 %9 to i64
  %arrayidx17 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom16
  %10 = load i32, i32* %arrayidx17, align 4
  %cmp18 = icmp eq i32 %10, 7
  br i1 %cmp18, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.15, %lor.lhs.false.10, %lor.lhs.false, %land.lhs.true
  %11 = load i32, i32* @target_flags, align 4
  %and20 = and i32 %11, 33554432
  %tobool21 = icmp ne i32 %and20, 0
  %cond22 = select i1 %tobool21, i32 64, i32 32
  %12 = load i32, i32* %mode.addr, align 4
  %idxprom23 = sext i32 %12 to i64
  %arrayidx24 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom23
  %13 = load i32, i32* %arrayidx24, align 4
  %call = call i32 @mode_for_size(i32 %cond22, i32 %13, i32 0)
  store i32 %call, i32* %mode.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.15, %entry
  %14 = load i32, i32* %opnum.addr, align 4
  %idxprom25 = sext i32 %14 to i64
  %15 = load i32, i32* %mode.addr, align 4
  %idxprom26 = sext i32 %15 to i64
  %arrayidx27 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom26
  %arrayidx28 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx27, i32 0, i64 %idxprom25
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx28, align 8
  %cmp29 = icmp ne %struct.rtx_def* %16, null
  br i1 %cmp29, label %if.then.31, label %if.end.36

if.then.31:                                       ; preds = %if.end
  %17 = load i32, i32* %opnum.addr, align 4
  %idxprom32 = sext i32 %17 to i64
  %18 = load i32, i32* %mode.addr, align 4
  %idxprom33 = sext i32 %18 to i64
  %arrayidx34 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx34, i32 0, i64 %idxprom32
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %retval
  br label %return

if.end.36:                                        ; preds = %if.end
  %20 = load i32, i32* %mode.addr, align 4
  %idxprom37 = sext i32 %20 to i64
  %arrayidx38 = getelementptr inbounds [59 x %struct.rtx_def*], [59 x %struct.rtx_def*]* @secondary_memlocs, i32 0, i64 %idxprom37
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8
  %cmp39 = icmp eq %struct.rtx_def* %21, null
  br i1 %cmp39, label %if.then.41, label %if.end.48

if.then.41:                                       ; preds = %if.end.36
  %22 = load i32, i32* %mode.addr, align 4
  %23 = load i32, i32* %mode.addr, align 4
  %idxprom42 = sext i32 %23 to i64
  %arrayidx43 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom42
  %24 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %24 to i64
  %call45 = call %struct.rtx_def* @assign_stack_local(i32 %22, i64 %conv44, i32 0)
  %25 = load i32, i32* %mode.addr, align 4
  %idxprom46 = sext i32 %25 to i64
  %arrayidx47 = getelementptr inbounds [59 x %struct.rtx_def*], [59 x %struct.rtx_def*]* @secondary_memlocs, i32 0, i64 %idxprom46
  store %struct.rtx_def* %call45, %struct.rtx_def** %arrayidx47, align 8
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.41, %if.end.36
  %26 = load i32, i32* %mode.addr, align 4
  %idxprom49 = sext i32 %26 to i64
  %arrayidx50 = getelementptr inbounds [59 x %struct.rtx_def*], [59 x %struct.rtx_def*]* @secondary_memlocs, i32 0, i64 %idxprom49
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx50, align 8
  %call51 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %27, i32 0, %struct.rtx_def* null)
  store %struct.rtx_def* %call51, %struct.rtx_def** %loc, align 8
  %28 = load i32, i32* %mode.addr, align 4
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call53 = call i32 @strict_memory_address_p(i32 %28, %struct.rtx_def* %30)
  store i32 %call53, i32* %mem_valid, align 4
  %31 = load i32, i32* %mem_valid, align 4
  %tobool54 = icmp ne i32 %31, 0
  br i1 %tobool54, label %if.end.62, label %land.lhs.true.55

land.lhs.true.55:                                 ; preds = %if.end.48
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %33 = load i32, i32* %mode.addr, align 4
  %idxprom56 = sext i32 %33 to i64
  %arrayidx57 = getelementptr inbounds [59 x %struct.rtx_def*], [59 x %struct.rtx_def*]* @secondary_memlocs, i32 0, i64 %idxprom56
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx57, align 8
  %cmp58 = icmp eq %struct.rtx_def* %32, %34
  br i1 %cmp58, label %if.then.60, label %if.end.62

if.then.60:                                       ; preds = %land.lhs.true.55
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %call61 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %35)
  store %struct.rtx_def* %call61, %struct.rtx_def** %loc, align 8
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.60, %land.lhs.true.55, %if.end.48
  %36 = load i32, i32* %mem_valid, align 4
  %tobool63 = icmp ne i32 %36, 0
  br i1 %tobool63, label %if.end.78, label %if.then.64

if.then.64:                                       ; preds = %if.end.62
  %37 = load i32, i32* %type.addr, align 4
  %cmp65 = icmp eq i32 %37, 0
  br i1 %cmp65, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.64
  br label %cond.end

cond.false:                                       ; preds = %if.then.64
  %38 = load i32, i32* %type.addr, align 4
  %cmp67 = icmp eq i32 %38, 1
  %cond69 = select i1 %cmp67, i32 5, i32 9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond70 = phi i32 [ 3, %cond.true ], [ %cond69, %cond.false ]
  store i32 %cond70, i32* %type.addr, align 4
  %39 = load i32, i32* %mode.addr, align 4
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %43 = load i32, i32* %opnum.addr, align 4
  %44 = load i32, i32* %type.addr, align 4
  %call77 = call i32 @find_reloads_address(i32 %39, %struct.rtx_def** null, %struct.rtx_def* %41, %struct.rtx_def** %rtx76, i32 %43, i32 %44, i32 0, %struct.rtx_def* null)
  br label %if.end.78

if.end.78:                                        ; preds = %cond.end, %if.end.62
  %45 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  %46 = load i32, i32* %opnum.addr, align 4
  %idxprom79 = sext i32 %46 to i64
  %47 = load i32, i32* %mode.addr, align 4
  %idxprom80 = sext i32 %47 to i64
  %arrayidx81 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom80
  %arrayidx82 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx81, i32 0, i64 %idxprom79
  store %struct.rtx_def* %45, %struct.rtx_def** %arrayidx82, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8
  store %struct.rtx_def* %48, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.78, %if.then.31
  %49 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %49
}

declare i32 @mode_for_size(i32, i32, i32) #1

declare %struct.rtx_def* @assign_stack_local(i32, i64, i32) #1

declare %struct.rtx_def* @eliminate_regs(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @strict_memory_address_p(i32 %mode, %struct.rtx_def* %addr) #0 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %addr.addr = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %addr, %struct.rtx_def** %addr.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i32, i32* %mode.addr, align 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %call = call i32 @legitimate_address_p(i32 %0, %struct.rtx_def* %1, i32 1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  br label %win

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

win:                                              ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %win, %do.end
  %2 = load i32, i32* %retval
  ret i32 %2
}

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @find_reloads_address(i32 %mode, %struct.rtx_def** %memrefloc, %struct.rtx_def* %ad, %struct.rtx_def** %loc, i32 %opnum, i32 %type, i32 %ind_levels, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %memrefloc.addr = alloca %struct.rtx_def**, align 8
  %ad.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %removed_and = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def** %memrefloc, %struct.rtx_def*** %memrefloc.addr, align 8
  store %struct.rtx_def* %ad, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 0, i32* %removed_and, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.end.204

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  store i32 %3, i32* %regno, align 4
  %4 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx1 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %5, i64 %idxprom
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %tem, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %cmp2 = icmp ne %struct.rtx_def* %7, null
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %9 = load i32, i32* %mode.addr, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %8, i32 %9, %struct.rtx_def* %10)
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8
  %tobool = icmp ne %struct.rtx_def* %call, null
  br i1 %tobool, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %11 = load i32, i32* %mode.addr, align 4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call4 = call i32 @strict_memory_address_p(i32 %11, %struct.rtx_def* %12)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %land.lhs.true.3
  %13 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %ad.addr, align 8
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %14, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.3, %land.lhs.true, %if.then
  %15 = load i32, i32* %regno, align 4
  %idxprom7 = sext i32 %15 to i64
  %16 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx8 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %idxprom7
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx8, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %tem, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %cmp9 = icmp ne %struct.rtx_def* %18, null
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end
  %19 = load i32, i32* %regno, align 4
  %idxprom11 = sext i32 %19 to i64
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom11
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8
  %cmp13 = icmp ne %struct.rtx_def* %21, null
  br i1 %cmp13, label %if.then.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.10
  %22 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool14 = icmp ne i32 %22, 0
  br i1 %tobool14, label %if.then.15, label %if.end.165

if.then.15:                                       ; preds = %lor.lhs.false, %if.then.10
  %23 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %24 = load i32, i32* %regno, align 4
  %call16 = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %23, i32 %24)
  store %struct.rtx_def* %call16, %struct.rtx_def** %tem, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load17 = load i32, i32* %26, align 8
  %bf.lshr = lshr i32 %bf.load17, 16
  %bf.clear18 = and i32 %bf.lshr, 255
  %27 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call21 = call i32 @strict_memory_address_p(i32 %bf.clear18, %struct.rtx_def* %28)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.40, label %if.then.23

if.then.23:                                       ; preds = %if.then.15
  %29 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load24 = load i32, i32* %30, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %31 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx29, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %34 = load i32, i32* %opnum.addr, align 4
  %35 = load i32, i32* %type.addr, align 4
  %cmp33 = icmp eq i32 %35, 3
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.23
  br label %cond.end.37

cond.false:                                       ; preds = %if.then.23
  %36 = load i32, i32* %type.addr, align 4
  %cmp34 = icmp eq i32 %36, 5
  br i1 %cmp34, label %cond.true.35, label %cond.false.36

cond.true.35:                                     ; preds = %cond.false
  br label %cond.end

cond.false.36:                                    ; preds = %cond.false
  %37 = load i32, i32* %type.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.36, %cond.true.35
  %cond = phi i32 [ 6, %cond.true.35 ], [ %37, %cond.false.36 ]
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.end, %cond.true
  %cond38 = phi i32 [ 4, %cond.true ], [ %cond, %cond.end ]
  %38 = load i32, i32* %ind_levels.addr, align 4
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call39 = call i32 @find_reloads_address(i32 %bf.clear26, %struct.rtx_def** null, %struct.rtx_def* %32, %struct.rtx_def** %rtx32, i32 %34, i32 %cond38, i32 %38, %struct.rtx_def* %39)
  br label %if.end.40

if.end.40:                                        ; preds = %cond.end.37, %if.then.15
  %40 = load i32, i32* %ind_levels.addr, align 4
  %cmp41 = icmp sgt i32 %40, 0
  br i1 %cmp41, label %land.lhs.true.42, label %if.end.164

land.lhs.true.42:                                 ; preds = %if.end.40
  %41 = load i32, i32* %mode.addr, align 4
  %42 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call43 = call i32 @strict_memory_address_p(i32 %41, %struct.rtx_def* %42)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %land.lhs.true.45, label %if.end.164

land.lhs.true.45:                                 ; preds = %land.lhs.true.42
  %43 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load49 = load i32, i32* %45, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 61
  br i1 %cmp51, label %if.then.149, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %land.lhs.true.45
  %46 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load56 = load i32, i32* %48, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 75
  br i1 %cmp58, label %land.lhs.true.59, label %if.end.164

land.lhs.true.59:                                 ; preds = %lor.lhs.false.52
  %49 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 0
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx65, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load66 = load i32, i32* %52, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 61
  br i1 %cmp68, label %land.lhs.true.69, label %if.end.164

land.lhs.true.69:                                 ; preds = %land.lhs.true.59
  %53 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 1
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load76 = load i32, i32* %56, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 67
  br i1 %cmp78, label %if.then.149, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %land.lhs.true.69
  %57 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 1
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load86 = load i32, i32* %60, align 8
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 68
  br i1 %cmp88, label %if.then.149, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false.79
  %61 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 1
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load96 = load i32, i32* %64, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  br i1 %cmp98, label %if.then.149, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %lor.lhs.false.89
  %65 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 0
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx102, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load106 = load i32, i32* %68, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  %cmp108 = icmp eq i32 %bf.clear107, 55
  br i1 %cmp108, label %if.then.149, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %lor.lhs.false.99
  %69 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 1
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load116 = load i32, i32* %72, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 58
  br i1 %cmp118, label %if.then.149, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %lor.lhs.false.109
  %73 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx125, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load126 = load i32, i32* %76, align 8
  %bf.clear127 = and i32 %bf.load126, 65535
  %cmp128 = icmp eq i32 %bf.clear127, 134
  br i1 %cmp128, label %if.then.149, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %lor.lhs.false.119
  %77 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 0
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 1
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx135, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load136 = load i32, i32* %80, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 56
  br i1 %cmp138, label %if.then.149, label %lor.lhs.false.139

lor.lhs.false.139:                                ; preds = %lor.lhs.false.129
  %81 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx142, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 1
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx145, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load146 = load i32, i32* %84, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 140
  br i1 %cmp148, label %if.then.149, label %if.end.164

if.then.149:                                      ; preds = %lor.lhs.false.139, %lor.lhs.false.129, %lor.lhs.false.119, %lor.lhs.false.109, %lor.lhs.false.99, %lor.lhs.false.89, %lor.lhs.false.79, %land.lhs.true.69, %land.lhs.true.45
  %85 = load i32, i32* @replace_reloads, align 4
  %tobool150 = icmp ne i32 %85, 0
  br i1 %tobool150, label %land.lhs.true.151, label %if.end.163

land.lhs.true.151:                                ; preds = %if.then.149
  %86 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool152 = icmp ne i32 %86, 0
  br i1 %tobool152, label %land.lhs.true.153, label %if.end.163

land.lhs.true.153:                                ; preds = %land.lhs.true.151
  %87 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %88 = load i32, i32* %regno, align 4
  %idxprom154 = sext i32 %88 to i64
  %89 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx155 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %89, i64 %idxprom154
  %90 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx155, align 8
  %call156 = call i32 @rtx_equal_p(%struct.rtx_def* %87, %struct.rtx_def* %90)
  %tobool157 = icmp ne i32 %call156, 0
  br i1 %tobool157, label %if.end.163, label %if.then.158

if.then.158:                                      ; preds = %land.lhs.true.153
  %91 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %92 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %91, %struct.rtx_def** %92, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call159 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %93)
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call160 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call159, %struct.rtx_def* %94)
  %95 = bitcast %struct.rtx_def* %call160 to i32*
  %bf.load161 = load i32, i32* %95, align 8
  %bf.clear162 = and i32 %bf.load161, -16711681
  %bf.set = or i32 %bf.clear162, 131072
  store i32 %bf.set, i32* %95, align 8
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.158, %land.lhs.true.153, %land.lhs.true.151, %if.then.149
  store i32 0, i32* %retval
  br label %return

if.end.164:                                       ; preds = %lor.lhs.false.139, %land.lhs.true.59, %lor.lhs.false.52, %land.lhs.true.42, %if.end.40
  %96 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %96, %struct.rtx_def** %ad.addr, align 8
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %lor.lhs.false
  br label %if.end.199

if.else:                                          ; preds = %if.end
  %97 = load i32, i32* %regno, align 4
  %cmp166 = icmp slt i32 %97, 53
  br i1 %cmp166, label %land.lhs.true.167, label %if.end.198

land.lhs.true.167:                                ; preds = %if.else
  %98 = load i32, i32* %regno, align 4
  %cmp168 = icmp sle i32 %98, 7
  br i1 %cmp168, label %land.lhs.true.194, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %land.lhs.true.167
  %99 = load i32, i32* %regno, align 4
  %cmp170 = icmp eq i32 %99, 16
  br i1 %cmp170, label %land.lhs.true.194, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %lor.lhs.false.169
  %100 = load i32, i32* %regno, align 4
  %cmp172 = icmp eq i32 %100, 20
  br i1 %cmp172, label %land.lhs.true.194, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %lor.lhs.false.171
  %101 = load i32, i32* %regno, align 4
  %cmp174 = icmp sge i32 %101, 37
  br i1 %cmp174, label %land.lhs.true.175, label %lor.lhs.false.177

land.lhs.true.175:                                ; preds = %lor.lhs.false.173
  %102 = load i32, i32* %regno, align 4
  %cmp176 = icmp sle i32 %102, 44
  br i1 %cmp176, label %land.lhs.true.194, label %lor.lhs.false.177

lor.lhs.false.177:                                ; preds = %land.lhs.true.175, %lor.lhs.false.173
  %103 = load i32, i32* %regno, align 4
  %idxprom178 = sext i32 %103 to i64
  %104 = load i16*, i16** @reg_renumber, align 8
  %arrayidx179 = getelementptr inbounds i16, i16* %104, i64 %idxprom178
  %105 = load i16, i16* %arrayidx179, align 2
  %conv = sext i16 %105 to i32
  %cmp180 = icmp uge i32 %conv, 37
  br i1 %cmp180, label %land.lhs.true.182, label %lor.lhs.false.188

land.lhs.true.182:                                ; preds = %lor.lhs.false.177
  %106 = load i32, i32* %regno, align 4
  %idxprom183 = sext i32 %106 to i64
  %107 = load i16*, i16** @reg_renumber, align 8
  %arrayidx184 = getelementptr inbounds i16, i16* %107, i64 %idxprom183
  %108 = load i16, i16* %arrayidx184, align 2
  %conv185 = sext i16 %108 to i32
  %cmp186 = icmp ule i32 %conv185, 44
  br i1 %cmp186, label %land.lhs.true.194, label %lor.lhs.false.188

lor.lhs.false.188:                                ; preds = %land.lhs.true.182, %lor.lhs.false.177
  %109 = load i32, i32* %regno, align 4
  %idxprom189 = sext i32 %109 to i64
  %110 = load i16*, i16** @reg_renumber, align 8
  %arrayidx190 = getelementptr inbounds i16, i16* %110, i64 %idxprom189
  %111 = load i16, i16* %arrayidx190, align 2
  %conv191 = sext i16 %111 to i32
  %cmp192 = icmp ule i32 %conv191, 7
  br i1 %cmp192, label %land.lhs.true.194, label %if.end.198

land.lhs.true.194:                                ; preds = %lor.lhs.false.188, %land.lhs.true.182, %land.lhs.true.175, %lor.lhs.false.171, %lor.lhs.false.169, %land.lhs.true.167
  %112 = load i32, i32* %regno, align 4
  %113 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %114 = load i32, i32* %mode.addr, align 4
  %call195 = call i32 @regno_clobbered_p(i32 %112, %struct.rtx_def* %113, i32 %114, i32 0)
  %tobool196 = icmp ne i32 %call195, 0
  br i1 %tobool196, label %if.end.198, label %if.then.197

if.then.197:                                      ; preds = %land.lhs.true.194
  store i32 0, i32* %retval
  br label %return

if.end.198:                                       ; preds = %land.lhs.true.194, %lor.lhs.false.188, %if.else
  br label %if.end.199

if.end.199:                                       ; preds = %if.end.198, %if.end.165
  %115 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %116 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load200 = load i32, i32* %118, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 16
  %bf.clear202 = and i32 %bf.lshr201, 255
  %119 = load i32, i32* %opnum.addr, align 4
  %120 = load i32, i32* %type.addr, align 4
  %call203 = call i32 @push_reload(%struct.rtx_def* %115, %struct.rtx_def* null, %struct.rtx_def** %116, %struct.rtx_def** null, i32 12, i32 %bf.clear202, i32 0, i32 0, i32 0, i32 %119, i32 %120)
  store i32 1, i32* %retval
  br label %return

if.end.204:                                       ; preds = %entry
  %121 = load i32, i32* %mode.addr, align 4
  %122 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call205 = call i32 @strict_memory_address_p(i32 %121, %struct.rtx_def* %122)
  %tobool206 = icmp ne i32 %call205, 0
  br i1 %tobool206, label %if.then.207, label %if.end.249

if.then.207:                                      ; preds = %if.end.204
  %123 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load208 = load i32, i32* %124, align 8
  %bf.clear209 = and i32 %bf.load208, 65535
  %cmp210 = icmp eq i32 %bf.clear209, 75
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.240

land.lhs.true.212:                                ; preds = %if.then.207
  %125 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 1
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx215, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load216 = load i32, i32* %127, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %cmp218 = icmp eq i32 %bf.clear217, 54
  br i1 %cmp218, label %land.lhs.true.220, label %if.end.240

land.lhs.true.220:                                ; preds = %land.lhs.true.212
  %128 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load224 = load i32, i32* %130, align 8
  %bf.clear225 = and i32 %bf.load224, 65535
  %cmp226 = icmp eq i32 %bf.clear225, 61
  br i1 %cmp226, label %land.lhs.true.228, label %if.end.240

land.lhs.true.228:                                ; preds = %land.lhs.true.220
  %131 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 0
  %rtuint234 = bitcast %union.rtunion_def* %arrayidx233 to i32*
  %133 = load i32, i32* %rtuint234, align 4
  %idxprom235 = zext i32 %133 to i64
  %134 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx236 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %134, i64 %idxprom235
  %135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx236, align 8
  %cmp237 = icmp eq %struct.rtx_def* %135, null
  br i1 %cmp237, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %land.lhs.true.228
  store i32 0, i32* %retval
  br label %return

if.end.240:                                       ; preds = %land.lhs.true.228, %land.lhs.true.220, %land.lhs.true.212, %if.then.207
  store i32 0, i32* @subst_reg_equivs_changed, align 4
  %136 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %137 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call241 = call %struct.rtx_def* @subst_reg_equivs(%struct.rtx_def* %136, %struct.rtx_def* %137)
  %138 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call241, %struct.rtx_def** %138, align 8
  %139 = load i32, i32* @subst_reg_equivs_changed, align 4
  %tobool242 = icmp ne i32 %139, 0
  br i1 %tobool242, label %if.end.244, label %if.then.243

if.then.243:                                      ; preds = %if.end.240
  store i32 0, i32* %retval
  br label %return

if.end.244:                                       ; preds = %if.end.240
  %140 = load i32, i32* %mode.addr, align 4
  %141 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call245 = call i32 @strict_memory_address_p(i32 %140, %struct.rtx_def* %141)
  %tobool246 = icmp ne i32 %call245, 0
  br i1 %tobool246, label %if.then.247, label %if.end.248

if.then.247:                                      ; preds = %if.end.244
  store i32 0, i32* %retval
  br label %return

if.end.248:                                       ; preds = %if.end.244
  br label %if.end.249

if.end.249:                                       ; preds = %if.end.248, %if.end.204
  %142 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load250 = load i32, i32* %143, align 8
  %bf.clear251 = and i32 %bf.load250, 65535
  %cmp252 = icmp eq i32 %bf.clear251, 83
  br i1 %cmp252, label %if.then.254, label %if.end.258

if.then.254:                                      ; preds = %if.end.249
  store i32 1, i32* %removed_and, align 4
  %144 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i32 0, i64 0
  %rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**
  store %struct.rtx_def** %rtx257, %struct.rtx_def*** %loc.addr, align 8
  %145 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** %145, align 8
  store %struct.rtx_def* %146, %struct.rtx_def** %ad.addr, align 8
  br label %if.end.258

if.end.258:                                       ; preds = %if.then.254, %if.end.249
  %147 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load259 = load i32, i32* %148, align 8
  %bf.clear260 = and i32 %bf.load259, 65535
  %cmp261 = icmp eq i32 %bf.clear260, 66
  br i1 %cmp261, label %if.then.263, label %if.else.376

if.then.263:                                      ; preds = %if.end.258
  %149 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %149, %struct.rtx_def** %tem, align 8
  %150 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load264 = load i32, i32* %151, align 8
  %bf.lshr265 = lshr i32 %bf.load264, 16
  %bf.clear266 = and i32 %bf.lshr265, 255
  %152 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  %154 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %155 = load i32, i32* %opnum.addr, align 4
  %156 = load i32, i32* %type.addr, align 4
  %cmp273 = icmp eq i32 %156, 3
  br i1 %cmp273, label %cond.true.275, label %cond.false.276

cond.true.275:                                    ; preds = %if.then.263
  br label %cond.end.283

cond.false.276:                                   ; preds = %if.then.263
  %157 = load i32, i32* %type.addr, align 4
  %cmp277 = icmp eq i32 %157, 5
  br i1 %cmp277, label %cond.true.279, label %cond.false.280

cond.true.279:                                    ; preds = %cond.false.276
  br label %cond.end.281

cond.false.280:                                   ; preds = %cond.false.276
  %158 = load i32, i32* %type.addr, align 4
  br label %cond.end.281

cond.end.281:                                     ; preds = %cond.false.280, %cond.true.279
  %cond282 = phi i32 [ 6, %cond.true.279 ], [ %158, %cond.false.280 ]
  br label %cond.end.283

cond.end.283:                                     ; preds = %cond.end.281, %cond.true.275
  %cond284 = phi i32 [ 4, %cond.true.275 ], [ %cond282, %cond.end.281 ]
  %159 = load i32, i32* %ind_levels.addr, align 4
  %cmp285 = icmp eq i32 %159, 0
  br i1 %cmp285, label %cond.true.287, label %cond.false.288

cond.true.287:                                    ; preds = %cond.end.283
  br label %cond.end.289

cond.false.288:                                   ; preds = %cond.end.283
  %160 = load i32, i32* %ind_levels.addr, align 4
  %sub = sub nsw i32 %160, 1
  br label %cond.end.289

cond.end.289:                                     ; preds = %cond.false.288, %cond.true.287
  %cond290 = phi i32 [ 0, %cond.true.287 ], [ %sub, %cond.false.288 ]
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call291 = call i32 @find_reloads_address(i32 %bf.clear266, %struct.rtx_def** %tem, %struct.rtx_def* %153, %struct.rtx_def** %rtx272, i32 %155, i32 %cond284, i32 %cond290, %struct.rtx_def* %161)
  %162 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %163 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %cmp292 = icmp ne %struct.rtx_def* %162, %163
  br i1 %cmp292, label %land.lhs.true.294, label %if.end.310

land.lhs.true.294:                                ; preds = %cond.end.289
  %164 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %tobool295 = icmp ne %struct.rtx_def** %164, null
  br i1 %tobool295, label %if.then.296, label %if.end.310

if.then.296:                                      ; preds = %land.lhs.true.294
  %165 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %165, align 8
  %call297 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %166)
  %167 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  store %struct.rtx_def* %call297, %struct.rtx_def** %167, align 8
  %168 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %169 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %170 = load %struct.rtx_def*, %struct.rtx_def** %169, align 8
  %fld298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i32 0, i64 0
  %rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx300, align 8
  call void @copy_replacements(%struct.rtx_def* %168, %struct.rtx_def* %171)
  %172 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** %172, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 0
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  store %struct.rtx_def** %rtx303, %struct.rtx_def*** %loc.addr, align 8
  %174 = load i32, i32* %removed_and, align 4
  %tobool304 = icmp ne i32 %174, 0
  br i1 %tobool304, label %if.then.305, label %if.end.309

if.then.305:                                      ; preds = %if.then.296
  %175 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %176 = load %struct.rtx_def*, %struct.rtx_def** %175, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  store %struct.rtx_def** %rtx308, %struct.rtx_def*** %loc.addr, align 8
  br label %if.end.309

if.end.309:                                       ; preds = %if.then.305, %if.then.296
  br label %if.end.310

if.end.310:                                       ; preds = %if.end.309, %land.lhs.true.294, %cond.end.289
  %177 = load i32, i32* %ind_levels.addr, align 4
  %cmp311 = icmp eq i32 %177, 0
  br i1 %cmp311, label %if.then.369, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %if.end.310
  %178 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 0
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx316, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load317 = load i32, i32* %180, align 8
  %bf.clear318 = and i32 %bf.load317, 65535
  %cmp319 = icmp eq i32 %bf.clear318, 68
  br i1 %cmp319, label %land.lhs.true.321, label %lor.lhs.false.323

land.lhs.true.321:                                ; preds = %lor.lhs.false.313
  %181 = load i8, i8* @indirect_symref_ok, align 1
  %tobool322 = icmp ne i8 %181, 0
  br i1 %tobool322, label %lor.lhs.false.323, label %if.then.369

lor.lhs.false.323:                                ; preds = %land.lhs.true.321, %lor.lhs.false.313
  %182 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 0
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx326, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load327 = load i32, i32* %184, align 8
  %bf.clear328 = and i32 %bf.load327, 65535
  %cmp329 = icmp eq i32 %bf.clear328, 66
  br i1 %cmp329, label %if.then.369, label %lor.lhs.false.331

lor.lhs.false.331:                                ; preds = %lor.lhs.false.323
  %185 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i32 0, i64 0
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx334, align 8
  %187 = bitcast %struct.rtx_def* %186 to i32*
  %bf.load335 = load i32, i32* %187, align 8
  %bf.clear336 = and i32 %bf.load335, 65535
  %cmp337 = icmp eq i32 %bf.clear336, 61
  br i1 %cmp337, label %if.else.375, label %lor.lhs.false.339

lor.lhs.false.339:                                ; preds = %lor.lhs.false.331
  %188 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 0
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load343 = load i32, i32* %190, align 8
  %bf.clear344 = and i32 %bf.load343, 65535
  %cmp345 = icmp eq i32 %bf.clear344, 75
  br i1 %cmp345, label %land.lhs.true.347, label %if.then.369

land.lhs.true.347:                                ; preds = %lor.lhs.false.339
  %191 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 0
  %rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rtx350, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 0
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %194 = bitcast %struct.rtx_def* %193 to i32*
  %bf.load354 = load i32, i32* %194, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %cmp356 = icmp eq i32 %bf.clear355, 61
  br i1 %cmp356, label %land.lhs.true.358, label %if.then.369

land.lhs.true.358:                                ; preds = %land.lhs.true.347
  %195 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i32 0, i64 0
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx361, align 8
  %fld362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i32 0, i64 1
  %rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx364, align 8
  %198 = bitcast %struct.rtx_def* %197 to i32*
  %bf.load365 = load i32, i32* %198, align 8
  %bf.clear366 = and i32 %bf.load365, 65535
  %cmp367 = icmp eq i32 %bf.clear366, 54
  br i1 %cmp367, label %if.else.375, label %if.then.369

if.then.369:                                      ; preds = %land.lhs.true.358, %land.lhs.true.347, %lor.lhs.false.339, %lor.lhs.false.323, %land.lhs.true.321, %if.end.310
  %199 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %200 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %201 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %202 = bitcast %struct.rtx_def* %201 to i32*
  %bf.load370 = load i32, i32* %202, align 8
  %bf.lshr371 = lshr i32 %bf.load370, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %203 = load i32, i32* %opnum.addr, align 4
  %204 = load i32, i32* %type.addr, align 4
  %call373 = call i32 @push_reload(%struct.rtx_def* %199, %struct.rtx_def* null, %struct.rtx_def** %200, %struct.rtx_def** null, i32 12, i32 %bf.clear372, i32 0, i32 0, i32 0, i32 %203, i32 %204)
  %205 = load i32, i32* %removed_and, align 4
  %tobool374 = icmp ne i32 %205, 0
  %lnot = xor i1 %tobool374, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

if.else.375:                                      ; preds = %land.lhs.true.358, %lor.lhs.false.331
  store i32 0, i32* %retval
  br label %return

if.else.376:                                      ; preds = %if.end.258
  %206 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load377 = load i32, i32* %207, align 8
  %bf.clear378 = and i32 %bf.load377, 65535
  %cmp379 = icmp eq i32 %bf.clear378, 75
  br i1 %cmp379, label %land.lhs.true.381, label %if.else.520

land.lhs.true.381:                                ; preds = %if.else.376
  %208 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 0
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx384, align 8
  %210 = bitcast %struct.rtx_def* %209 to i32*
  %bf.load385 = load i32, i32* %210, align 8
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 61
  br i1 %cmp387, label %land.lhs.true.389, label %if.else.520

land.lhs.true.389:                                ; preds = %land.lhs.true.381
  %211 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 0
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtuint395 = bitcast %union.rtunion_def* %arrayidx394 to i32*
  %213 = load i32, i32* %rtuint395, align 4
  %cmp396 = icmp ult i32 %213, 53
  br i1 %cmp396, label %land.lhs.true.398, label %if.else.520

land.lhs.true.398:                                ; preds = %land.lhs.true.389
  %214 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i32 0, i64 0
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rtx401, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 0
  %rtuint404 = bitcast %union.rtunion_def* %arrayidx403 to i32*
  %216 = load i32, i32* %rtuint404, align 4
  %cmp405 = icmp ule i32 %216, 7
  br i1 %cmp405, label %land.lhs.true.479, label %lor.lhs.false.407

lor.lhs.false.407:                                ; preds = %land.lhs.true.398
  %217 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 0
  %rtuint413 = bitcast %union.rtunion_def* %arrayidx412 to i32*
  %219 = load i32, i32* %rtuint413, align 4
  %cmp414 = icmp eq i32 %219, 16
  br i1 %cmp414, label %land.lhs.true.479, label %lor.lhs.false.416

lor.lhs.false.416:                                ; preds = %lor.lhs.false.407
  %220 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld417, i32 0, i64 0
  %rtx419 = bitcast %union.rtunion_def* %arrayidx418 to %struct.rtx_def**
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rtx419, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 0
  %rtuint422 = bitcast %union.rtunion_def* %arrayidx421 to i32*
  %222 = load i32, i32* %rtuint422, align 4
  %cmp423 = icmp eq i32 %222, 20
  br i1 %cmp423, label %land.lhs.true.479, label %lor.lhs.false.425

lor.lhs.false.425:                                ; preds = %lor.lhs.false.416
  %223 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld426, i32 0, i64 0
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx428, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 0
  %rtuint431 = bitcast %union.rtunion_def* %arrayidx430 to i32*
  %225 = load i32, i32* %rtuint431, align 4
  %cmp432 = icmp uge i32 %225, 37
  br i1 %cmp432, label %land.lhs.true.434, label %lor.lhs.false.443

land.lhs.true.434:                                ; preds = %lor.lhs.false.425
  %226 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i32 0, i64 0
  %rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx437, align 8
  %fld438 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1
  %arrayidx439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld438, i32 0, i64 0
  %rtuint440 = bitcast %union.rtunion_def* %arrayidx439 to i32*
  %228 = load i32, i32* %rtuint440, align 4
  %cmp441 = icmp ule i32 %228, 44
  br i1 %cmp441, label %land.lhs.true.479, label %lor.lhs.false.443

lor.lhs.false.443:                                ; preds = %land.lhs.true.434, %lor.lhs.false.425
  %229 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 0
  %rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx446, align 8
  %fld447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld447, i32 0, i64 0
  %rtuint449 = bitcast %union.rtunion_def* %arrayidx448 to i32*
  %231 = load i32, i32* %rtuint449, align 4
  %idxprom450 = zext i32 %231 to i64
  %232 = load i16*, i16** @reg_renumber, align 8
  %arrayidx451 = getelementptr inbounds i16, i16* %232, i64 %idxprom450
  %233 = load i16, i16* %arrayidx451, align 2
  %conv452 = sext i16 %233 to i32
  %cmp453 = icmp uge i32 %conv452, 37
  br i1 %cmp453, label %land.lhs.true.455, label %lor.lhs.false.467

land.lhs.true.455:                                ; preds = %lor.lhs.false.443
  %234 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld456, i32 0, i64 0
  %rtx458 = bitcast %union.rtunion_def* %arrayidx457 to %struct.rtx_def**
  %235 = load %struct.rtx_def*, %struct.rtx_def** %rtx458, align 8
  %fld459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx460 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld459, i32 0, i64 0
  %rtuint461 = bitcast %union.rtunion_def* %arrayidx460 to i32*
  %236 = load i32, i32* %rtuint461, align 4
  %idxprom462 = zext i32 %236 to i64
  %237 = load i16*, i16** @reg_renumber, align 8
  %arrayidx463 = getelementptr inbounds i16, i16* %237, i64 %idxprom462
  %238 = load i16, i16* %arrayidx463, align 2
  %conv464 = sext i16 %238 to i32
  %cmp465 = icmp ule i32 %conv464, 44
  br i1 %cmp465, label %land.lhs.true.479, label %lor.lhs.false.467

lor.lhs.false.467:                                ; preds = %land.lhs.true.455, %lor.lhs.false.443
  %239 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld468, i32 0, i64 0
  %rtx470 = bitcast %union.rtunion_def* %arrayidx469 to %struct.rtx_def**
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rtx470, align 8
  %fld471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx472 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld471, i32 0, i64 0
  %rtuint473 = bitcast %union.rtunion_def* %arrayidx472 to i32*
  %241 = load i32, i32* %rtuint473, align 4
  %idxprom474 = zext i32 %241 to i64
  %242 = load i16*, i16** @reg_renumber, align 8
  %arrayidx475 = getelementptr inbounds i16, i16* %242, i64 %idxprom474
  %243 = load i16, i16* %arrayidx475, align 2
  %conv476 = sext i16 %243 to i32
  %cmp477 = icmp ule i32 %conv476, 7
  br i1 %cmp477, label %land.lhs.true.479, label %if.else.520

land.lhs.true.479:                                ; preds = %lor.lhs.false.467, %land.lhs.true.455, %land.lhs.true.434, %lor.lhs.false.416, %lor.lhs.false.407, %land.lhs.true.398
  %244 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld480, i32 0, i64 1
  %rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx482, align 8
  %246 = bitcast %struct.rtx_def* %245 to i32*
  %bf.load483 = load i32, i32* %246, align 8
  %bf.clear484 = and i32 %bf.load483, 65535
  %cmp485 = icmp eq i32 %bf.clear484, 54
  br i1 %cmp485, label %if.then.487, label %if.else.520

if.then.487:                                      ; preds = %land.lhs.true.479
  %247 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %tobool488 = icmp ne %struct.rtx_def** %247, null
  br i1 %tobool488, label %if.then.489, label %if.end.500

if.then.489:                                      ; preds = %if.then.487
  %248 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %249 = load %struct.rtx_def*, %struct.rtx_def** %248, align 8
  %call490 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %249)
  %250 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  store %struct.rtx_def* %call490, %struct.rtx_def** %250, align 8
  %251 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %252 = load %struct.rtx_def*, %struct.rtx_def** %251, align 8
  %fld491 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1
  %arrayidx492 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld491, i32 0, i64 0
  %rtx493 = bitcast %union.rtunion_def* %arrayidx492 to %struct.rtx_def**
  store %struct.rtx_def** %rtx493, %struct.rtx_def*** %loc.addr, align 8
  %253 = load i32, i32* %removed_and, align 4
  %tobool494 = icmp ne i32 %253, 0
  br i1 %tobool494, label %if.then.495, label %if.end.499

if.then.495:                                      ; preds = %if.then.489
  %254 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %255 = load %struct.rtx_def*, %struct.rtx_def** %254, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 0
  %rtx498 = bitcast %union.rtunion_def* %arrayidx497 to %struct.rtx_def**
  store %struct.rtx_def** %rtx498, %struct.rtx_def*** %loc.addr, align 8
  br label %if.end.499

if.end.499:                                       ; preds = %if.then.495, %if.then.489
  br label %if.end.500

if.end.500:                                       ; preds = %if.end.499, %if.then.487
  %256 = load i8, i8* @double_reg_address_ok, align 1
  %tobool501 = icmp ne i8 %256, 0
  br i1 %tobool501, label %if.then.502, label %if.else.513

if.then.502:                                      ; preds = %if.end.500
  %257 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call503 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %257)
  store %struct.rtx_def* %call503, %struct.rtx_def** %ad.addr, align 8
  %258 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call503, %struct.rtx_def** %258, align 8
  %259 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld504, i32 0, i64 1
  %rtx506 = bitcast %union.rtunion_def* %arrayidx505 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx506, align 8
  %261 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld507 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1
  %arrayidx508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld507, i32 0, i64 1
  %rtx509 = bitcast %union.rtunion_def* %arrayidx508 to %struct.rtx_def**
  %262 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %263 = bitcast %struct.rtx_def* %262 to i32*
  %bf.load510 = load i32, i32* %263, align 8
  %bf.lshr511 = lshr i32 %bf.load510, 16
  %bf.clear512 = and i32 %bf.lshr511, 255
  %264 = load i32, i32* %opnum.addr, align 4
  %265 = load i32, i32* %type.addr, align 4
  %266 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %260, %struct.rtx_def** %rtx509, i32 10, i32 %bf.clear512, i32 %264, i32 %265, i32 %266)
  store i32 0, i32* %retval
  br label %return

if.else.513:                                      ; preds = %if.end.500
  %267 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %268 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %269 = load i32, i32* @target_flags, align 4
  %and = and i32 %269, 33554432
  %tobool514 = icmp ne i32 %and, 0
  %cond515 = select i1 %tobool514, i32 5, i32 4
  %270 = load i32, i32* %opnum.addr, align 4
  %271 = load i32, i32* %type.addr, align 4
  %272 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %267, %struct.rtx_def** %268, i32 12, i32 %cond515, i32 %270, i32 %271, i32 %272)
  br label %if.end.516

if.end.516:                                       ; preds = %if.else.513
  %273 = load i32, i32* %removed_and, align 4
  %tobool517 = icmp ne i32 %273, 0
  %lnot518 = xor i1 %tobool517, true
  %lnot.ext519 = zext i1 %lnot518 to i32
  store i32 %lnot.ext519, i32* %retval
  br label %return

if.else.520:                                      ; preds = %land.lhs.true.479, %lor.lhs.false.467, %land.lhs.true.389, %land.lhs.true.381, %if.else.376
  %274 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %275 = bitcast %struct.rtx_def* %274 to i32*
  %bf.load521 = load i32, i32* %275, align 8
  %bf.clear522 = and i32 %bf.load521, 65535
  %cmp523 = icmp eq i32 %bf.clear522, 75
  br i1 %cmp523, label %land.lhs.true.525, label %if.else.619

land.lhs.true.525:                                ; preds = %if.else.520
  %276 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx527 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld526, i32 0, i64 1
  %rtx528 = bitcast %union.rtunion_def* %arrayidx527 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx528, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load529 = load i32, i32* %278, align 8
  %bf.clear530 = and i32 %bf.load529, 65535
  %cmp531 = icmp eq i32 %bf.clear530, 54
  br i1 %cmp531, label %land.lhs.true.533, label %if.else.619

land.lhs.true.533:                                ; preds = %land.lhs.true.525
  %279 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %279, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %280 = load %struct.rtx_def*, %struct.rtx_def** %rtx536, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %bf.load537 = load i32, i32* %281, align 8
  %bf.clear538 = and i32 %bf.load537, 65535
  %cmp539 = icmp eq i32 %bf.clear538, 75
  br i1 %cmp539, label %land.lhs.true.541, label %if.else.619

land.lhs.true.541:                                ; preds = %land.lhs.true.533
  %282 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 0
  %rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**
  %283 = load %struct.rtx_def*, %struct.rtx_def** %rtx544, align 8
  %fld545 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx546 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld545, i32 0, i64 0
  %rtx547 = bitcast %union.rtunion_def* %arrayidx546 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx547, align 8
  %285 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp548 = icmp eq %struct.rtx_def* %284, %285
  br i1 %cmp548, label %land.lhs.true.577, label %lor.lhs.false.550

lor.lhs.false.550:                                ; preds = %land.lhs.true.541
  %286 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld551, i32 0, i64 0
  %rtx553 = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx553, align 8
  %fld554 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx555 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld554, i32 0, i64 0
  %rtx556 = bitcast %union.rtunion_def* %arrayidx555 to %struct.rtx_def**
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rtx556, align 8
  %289 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp557 = icmp eq %struct.rtx_def* %288, %289
  br i1 %cmp557, label %land.lhs.true.577, label %lor.lhs.false.559

lor.lhs.false.559:                                ; preds = %lor.lhs.false.550
  %290 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx561 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld560, i32 0, i64 0
  %rtx562 = bitcast %union.rtunion_def* %arrayidx561 to %struct.rtx_def**
  %291 = load %struct.rtx_def*, %struct.rtx_def** %rtx562, align 8
  %fld563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1
  %arrayidx564 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld563, i32 0, i64 0
  %rtx565 = bitcast %union.rtunion_def* %arrayidx564 to %struct.rtx_def**
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rtx565, align 8
  %293 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp566 = icmp eq %struct.rtx_def* %292, %293
  br i1 %cmp566, label %land.lhs.true.577, label %lor.lhs.false.568

lor.lhs.false.568:                                ; preds = %lor.lhs.false.559
  %294 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1
  %arrayidx570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld569, i32 0, i64 0
  %rtx571 = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtx_def**
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rtx571, align 8
  %fld572 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld572, i32 0, i64 0
  %rtx574 = bitcast %union.rtunion_def* %arrayidx573 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx574, align 8
  %297 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp575 = icmp eq %struct.rtx_def* %296, %297
  br i1 %cmp575, label %land.lhs.true.577, label %if.else.619

land.lhs.true.577:                                ; preds = %lor.lhs.false.568, %lor.lhs.false.559, %lor.lhs.false.550, %land.lhs.true.541
  %298 = load i32, i32* %mode.addr, align 4
  %299 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call578 = call i32 @memory_address_p(i32 %298, %struct.rtx_def* %299)
  %tobool579 = icmp ne i32 %call578, 0
  br i1 %tobool579, label %if.else.619, label %if.then.580

if.then.580:                                      ; preds = %land.lhs.true.577
  %300 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %301 = bitcast %struct.rtx_def* %300 to i32*
  %bf.load581 = load i32, i32* %301, align 8
  %bf.lshr582 = lshr i32 %bf.load581, 16
  %bf.clear583 = and i32 %bf.lshr582, 255
  %302 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld584, i32 0, i64 0
  %rtx586 = bitcast %union.rtunion_def* %arrayidx585 to %struct.rtx_def**
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rtx586, align 8
  %fld587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld587, i32 0, i64 0
  %rtx589 = bitcast %union.rtunion_def* %arrayidx588 to %struct.rtx_def**
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rtx589, align 8
  %305 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i32 0, i64 1
  %rtx592 = bitcast %union.rtunion_def* %arrayidx591 to %struct.rtx_def**
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rtx592, align 8
  %fld593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx594 to i64*
  %307 = load i64, i64* %rtwint, align 8
  %call595 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %304, i64 %307)
  %308 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld596 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %arrayidx597 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld596, i32 0, i64 0
  %rtx598 = bitcast %union.rtunion_def* %arrayidx597 to %struct.rtx_def**
  %309 = load %struct.rtx_def*, %struct.rtx_def** %rtx598, align 8
  %fld599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %309, i32 0, i32 1
  %arrayidx600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld599, i32 0, i64 1
  %rtx601 = bitcast %union.rtunion_def* %arrayidx600 to %struct.rtx_def**
  %310 = load %struct.rtx_def*, %struct.rtx_def** %rtx601, align 8
  %call602 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear583, %struct.rtx_def* %call595, %struct.rtx_def* %310)
  store %struct.rtx_def* %call602, %struct.rtx_def** %ad.addr, align 8
  %311 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call602, %struct.rtx_def** %311, align 8
  %312 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld603, i32 0, i64 0
  %rtx605 = bitcast %union.rtunion_def* %arrayidx604 to %struct.rtx_def**
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rtx605, align 8
  %314 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 0
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %315 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load609 = load i32, i32* %316, align 8
  %bf.lshr610 = lshr i32 %bf.load609, 16
  %bf.clear611 = and i32 %bf.lshr610, 255
  %317 = load i32, i32* %opnum.addr, align 4
  %318 = load i32, i32* %type.addr, align 4
  %319 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %313, %struct.rtx_def** %rtx608, i32 12, i32 %bf.clear611, i32 %317, i32 %318, i32 %319)
  %320 = load i32, i32* %mode.addr, align 4
  %321 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 1
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %322 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  %323 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld615, i32 0, i64 1
  %rtx617 = bitcast %union.rtunion_def* %arrayidx616 to %struct.rtx_def**
  %324 = load i32, i32* %opnum.addr, align 4
  %325 = load i32, i32* %type.addr, align 4
  %326 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call618 = call i32 @find_reloads_address_1(i32 %320, %struct.rtx_def* %322, i32 1, %struct.rtx_def** %rtx617, i32 %324, i32 %325, i32 0, %struct.rtx_def* %326)
  store i32 0, i32* %retval
  br label %return

if.else.619:                                      ; preds = %land.lhs.true.577, %lor.lhs.false.568, %land.lhs.true.533, %land.lhs.true.525, %if.else.520
  %327 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %328 = bitcast %struct.rtx_def* %327 to i32*
  %bf.load620 = load i32, i32* %328, align 8
  %bf.clear621 = and i32 %bf.load620, 65535
  %cmp622 = icmp eq i32 %bf.clear621, 75
  br i1 %cmp622, label %land.lhs.true.624, label %if.end.719

land.lhs.true.624:                                ; preds = %if.else.619
  %329 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %329, i32 0, i32 1
  %arrayidx626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld625, i32 0, i64 1
  %rtx627 = bitcast %union.rtunion_def* %arrayidx626 to %struct.rtx_def**
  %330 = load %struct.rtx_def*, %struct.rtx_def** %rtx627, align 8
  %331 = bitcast %struct.rtx_def* %330 to i32*
  %bf.load628 = load i32, i32* %331, align 8
  %bf.clear629 = and i32 %bf.load628, 65535
  %cmp630 = icmp eq i32 %bf.clear629, 54
  br i1 %cmp630, label %land.lhs.true.632, label %if.end.719

land.lhs.true.632:                                ; preds = %land.lhs.true.624
  %332 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i32 0, i64 0
  %rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**
  %333 = load %struct.rtx_def*, %struct.rtx_def** %rtx635, align 8
  %334 = bitcast %struct.rtx_def* %333 to i32*
  %bf.load636 = load i32, i32* %334, align 8
  %bf.clear637 = and i32 %bf.load636, 65535
  %cmp638 = icmp eq i32 %bf.clear637, 75
  br i1 %cmp638, label %land.lhs.true.640, label %if.end.719

land.lhs.true.640:                                ; preds = %land.lhs.true.632
  %335 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld641 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld641, i32 0, i64 0
  %rtx643 = bitcast %union.rtunion_def* %arrayidx642 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx643, align 8
  %fld644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx645 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld644, i32 0, i64 1
  %rtx646 = bitcast %union.rtunion_def* %arrayidx645 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx646, align 8
  %338 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp647 = icmp eq %struct.rtx_def* %337, %338
  br i1 %cmp647, label %land.lhs.true.676, label %lor.lhs.false.649

lor.lhs.false.649:                                ; preds = %land.lhs.true.640
  %339 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 0
  %rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**
  %340 = load %struct.rtx_def*, %struct.rtx_def** %rtx652, align 8
  %fld653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx654 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld653, i32 0, i64 1
  %rtx655 = bitcast %union.rtunion_def* %arrayidx654 to %struct.rtx_def**
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rtx655, align 8
  %342 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp656 = icmp eq %struct.rtx_def* %341, %342
  br i1 %cmp656, label %land.lhs.true.676, label %lor.lhs.false.658

lor.lhs.false.658:                                ; preds = %lor.lhs.false.649
  %343 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1
  %arrayidx660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld659, i32 0, i64 0
  %rtx661 = bitcast %union.rtunion_def* %arrayidx660 to %struct.rtx_def**
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rtx661, align 8
  %fld662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld662, i32 0, i64 1
  %rtx664 = bitcast %union.rtunion_def* %arrayidx663 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx664, align 8
  %346 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp665 = icmp eq %struct.rtx_def* %345, %346
  br i1 %cmp665, label %land.lhs.true.676, label %lor.lhs.false.667

lor.lhs.false.667:                                ; preds = %lor.lhs.false.658
  %347 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld668 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx669 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld668, i32 0, i64 0
  %rtx670 = bitcast %union.rtunion_def* %arrayidx669 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx670, align 8
  %fld671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i32 0, i64 1
  %rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**
  %349 = load %struct.rtx_def*, %struct.rtx_def** %rtx673, align 8
  %350 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp674 = icmp eq %struct.rtx_def* %349, %350
  br i1 %cmp674, label %land.lhs.true.676, label %if.end.719

land.lhs.true.676:                                ; preds = %lor.lhs.false.667, %lor.lhs.false.658, %lor.lhs.false.649, %land.lhs.true.640
  %351 = load i32, i32* %mode.addr, align 4
  %352 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call677 = call i32 @memory_address_p(i32 %351, %struct.rtx_def* %352)
  %tobool678 = icmp ne i32 %call677, 0
  br i1 %tobool678, label %if.end.719, label %if.then.679

if.then.679:                                      ; preds = %land.lhs.true.676
  %353 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %354 = bitcast %struct.rtx_def* %353 to i32*
  %bf.load680 = load i32, i32* %354, align 8
  %bf.lshr681 = lshr i32 %bf.load680, 16
  %bf.clear682 = and i32 %bf.lshr681, 255
  %355 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx684 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld683, i32 0, i64 0
  %rtx685 = bitcast %union.rtunion_def* %arrayidx684 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx685, align 8
  %fld686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx687 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld686, i32 0, i64 0
  %rtx688 = bitcast %union.rtunion_def* %arrayidx687 to %struct.rtx_def**
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rtx688, align 8
  %358 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld689 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld689, i32 0, i64 0
  %rtx691 = bitcast %union.rtunion_def* %arrayidx690 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx691, align 8
  %fld692 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx693 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld692, i32 0, i64 1
  %rtx694 = bitcast %union.rtunion_def* %arrayidx693 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx694, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i32 0, i64 1
  %rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx697, align 8
  %fld698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i32 0, i64 0
  %rtwint700 = bitcast %union.rtunion_def* %arrayidx699 to i64*
  %363 = load i64, i64* %rtwint700, align 8
  %call701 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %360, i64 %363)
  %call702 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear682, %struct.rtx_def* %357, %struct.rtx_def* %call701)
  store %struct.rtx_def* %call702, %struct.rtx_def** %ad.addr, align 8
  %364 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %call702, %struct.rtx_def** %364, align 8
  %365 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld703 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1
  %arrayidx704 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld703, i32 0, i64 1
  %rtx705 = bitcast %union.rtunion_def* %arrayidx704 to %struct.rtx_def**
  %366 = load %struct.rtx_def*, %struct.rtx_def** %rtx705, align 8
  %367 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld706, i32 0, i64 1
  %rtx708 = bitcast %union.rtunion_def* %arrayidx707 to %struct.rtx_def**
  %368 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %369 = bitcast %struct.rtx_def* %368 to i32*
  %bf.load709 = load i32, i32* %369, align 8
  %bf.lshr710 = lshr i32 %bf.load709, 16
  %bf.clear711 = and i32 %bf.lshr710, 255
  %370 = load i32, i32* %opnum.addr, align 4
  %371 = load i32, i32* %type.addr, align 4
  %372 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %366, %struct.rtx_def** %rtx708, i32 12, i32 %bf.clear711, i32 %370, i32 %371, i32 %372)
  %373 = load i32, i32* %mode.addr, align 4
  %374 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i32 0, i64 0
  %rtx714 = bitcast %union.rtunion_def* %arrayidx713 to %struct.rtx_def**
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rtx714, align 8
  %376 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld715 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1
  %arrayidx716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld715, i32 0, i64 0
  %rtx717 = bitcast %union.rtunion_def* %arrayidx716 to %struct.rtx_def**
  %377 = load i32, i32* %opnum.addr, align 4
  %378 = load i32, i32* %type.addr, align 4
  %379 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call718 = call i32 @find_reloads_address_1(i32 %373, %struct.rtx_def* %375, i32 1, %struct.rtx_def** %rtx717, i32 %377, i32 %378, i32 0, %struct.rtx_def* %379)
  store i32 0, i32* %retval
  br label %return

if.end.719:                                       ; preds = %land.lhs.true.676, %lor.lhs.false.667, %land.lhs.true.632, %land.lhs.true.624, %if.else.619
  br label %if.end.720

if.end.720:                                       ; preds = %if.end.719
  br label %if.end.721

if.end.721:                                       ; preds = %if.end.720
  br label %if.end.722

if.end.722:                                       ; preds = %if.end.721
  %380 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %380, %struct.rtx_def** %tem, align 8
  %381 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %382 = bitcast %struct.rtx_def* %381 to i32*
  %bf.load723 = load i32, i32* %382, align 8
  %bf.clear724 = and i32 %bf.load723, 65535
  %cmp725 = icmp eq i32 %bf.clear724, 75
  br i1 %cmp725, label %if.then.727, label %if.end.729

if.then.727:                                      ; preds = %if.end.722
  %383 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call728 = call %struct.rtx_def* @subst_indexed_address(%struct.rtx_def* %383)
  store %struct.rtx_def* %call728, %struct.rtx_def** %tem, align 8
  br label %if.end.729

if.end.729:                                       ; preds = %if.then.727, %if.end.722
  %384 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %385 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %cmp730 = icmp ne %struct.rtx_def* %384, %385
  br i1 %cmp730, label %land.lhs.true.732, label %if.end.743

land.lhs.true.732:                                ; preds = %if.end.729
  %386 = load i32, i32* %mode.addr, align 4
  %387 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call733 = call i32 @strict_memory_address_p(i32 %386, %struct.rtx_def* %387)
  %tobool734 = icmp ne i32 %call733, 0
  br i1 %tobool734, label %if.then.735, label %if.end.743

if.then.735:                                      ; preds = %land.lhs.true.732
  store i32 0, i32* @subst_reg_equivs_changed, align 4
  %388 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %389 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call736 = call %struct.rtx_def* @subst_reg_equivs(%struct.rtx_def* %388, %struct.rtx_def* %389)
  store %struct.rtx_def* %call736, %struct.rtx_def** %tem, align 8
  %390 = load i32, i32* @subst_reg_equivs_changed, align 4
  %tobool737 = icmp ne i32 %390, 0
  br i1 %tobool737, label %lor.lhs.false.738, label %if.then.741

lor.lhs.false.738:                                ; preds = %if.then.735
  %391 = load i32, i32* %mode.addr, align 4
  %392 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call739 = call i32 @strict_memory_address_p(i32 %391, %struct.rtx_def* %392)
  %tobool740 = icmp ne i32 %call739, 0
  br i1 %tobool740, label %if.then.741, label %if.end.742

if.then.741:                                      ; preds = %lor.lhs.false.738, %if.then.735
  %393 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %394 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  store %struct.rtx_def* %393, %struct.rtx_def** %394, align 8
  store i32 0, i32* %retval
  br label %return

if.end.742:                                       ; preds = %lor.lhs.false.738
  br label %if.end.743

if.end.743:                                       ; preds = %if.end.742, %land.lhs.true.732, %if.end.729
  %395 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %396 = bitcast %struct.rtx_def* %395 to i32*
  %bf.load744 = load i32, i32* %396, align 8
  %bf.clear745 = and i32 %bf.load744, 65535
  %cmp746 = icmp eq i32 %bf.clear745, 67
  br i1 %cmp746, label %land.lhs.true.783, label %lor.lhs.false.748

lor.lhs.false.748:                                ; preds = %if.end.743
  %397 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %398 = bitcast %struct.rtx_def* %397 to i32*
  %bf.load749 = load i32, i32* %398, align 8
  %bf.clear750 = and i32 %bf.load749, 65535
  %cmp751 = icmp eq i32 %bf.clear750, 68
  br i1 %cmp751, label %land.lhs.true.783, label %lor.lhs.false.753

lor.lhs.false.753:                                ; preds = %lor.lhs.false.748
  %399 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %400 = bitcast %struct.rtx_def* %399 to i32*
  %bf.load754 = load i32, i32* %400, align 8
  %bf.clear755 = and i32 %bf.load754, 65535
  %cmp756 = icmp eq i32 %bf.clear755, 54
  br i1 %cmp756, label %land.lhs.true.783, label %lor.lhs.false.758

lor.lhs.false.758:                                ; preds = %lor.lhs.false.753
  %401 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %402 = bitcast %struct.rtx_def* %401 to i32*
  %bf.load759 = load i32, i32* %402, align 8
  %bf.clear760 = and i32 %bf.load759, 65535
  %cmp761 = icmp eq i32 %bf.clear760, 55
  br i1 %cmp761, label %land.lhs.true.783, label %lor.lhs.false.763

lor.lhs.false.763:                                ; preds = %lor.lhs.false.758
  %403 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %404 = bitcast %struct.rtx_def* %403 to i32*
  %bf.load764 = load i32, i32* %404, align 8
  %bf.clear765 = and i32 %bf.load764, 65535
  %cmp766 = icmp eq i32 %bf.clear765, 58
  br i1 %cmp766, label %land.lhs.true.783, label %lor.lhs.false.768

lor.lhs.false.768:                                ; preds = %lor.lhs.false.763
  %405 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %406 = bitcast %struct.rtx_def* %405 to i32*
  %bf.load769 = load i32, i32* %406, align 8
  %bf.clear770 = and i32 %bf.load769, 65535
  %cmp771 = icmp eq i32 %bf.clear770, 134
  br i1 %cmp771, label %land.lhs.true.783, label %lor.lhs.false.773

lor.lhs.false.773:                                ; preds = %lor.lhs.false.768
  %407 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %408 = bitcast %struct.rtx_def* %407 to i32*
  %bf.load774 = load i32, i32* %408, align 8
  %bf.clear775 = and i32 %bf.load774, 65535
  %cmp776 = icmp eq i32 %bf.clear775, 56
  br i1 %cmp776, label %land.lhs.true.783, label %lor.lhs.false.778

lor.lhs.false.778:                                ; preds = %lor.lhs.false.773
  %409 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %410 = bitcast %struct.rtx_def* %409 to i32*
  %bf.load779 = load i32, i32* %410, align 8
  %bf.clear780 = and i32 %bf.load779, 65535
  %cmp781 = icmp eq i32 %bf.clear780, 140
  br i1 %cmp781, label %land.lhs.true.783, label %if.end.816

land.lhs.true.783:                                ; preds = %lor.lhs.false.778, %lor.lhs.false.773, %lor.lhs.false.768, %lor.lhs.false.763, %lor.lhs.false.758, %lor.lhs.false.753, %lor.lhs.false.748, %if.end.743
  %411 = load i32, i32* %mode.addr, align 4
  %412 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call784 = call i32 @strict_memory_address_p(i32 %411, %struct.rtx_def* %412)
  %tobool785 = icmp ne i32 %call784, 0
  br i1 %tobool785, label %if.end.816, label %if.then.786

if.then.786:                                      ; preds = %land.lhs.true.783
  %413 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %tobool787 = icmp ne %struct.rtx_def** %413, null
  br i1 %tobool787, label %land.lhs.true.788, label %if.end.809

land.lhs.true.788:                                ; preds = %if.then.786
  %414 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %415 = bitcast %struct.rtx_def* %414 to i32*
  %bf.load789 = load i32, i32* %415, align 8
  %bf.clear790 = and i32 %bf.load789, 65535
  %cmp791 = icmp eq i32 %bf.clear790, 68
  br i1 %cmp791, label %land.lhs.true.793, label %if.end.809

land.lhs.true.793:                                ; preds = %land.lhs.true.788
  %416 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %417 = bitcast %struct.rtx_def* %416 to i32*
  %bf.load794 = load i32, i32* %417, align 8
  %bf.lshr795 = lshr i32 %bf.load794, 26
  %bf.clear796 = and i32 %bf.lshr795, 1
  %tobool797 = icmp ne i32 %bf.clear796, 0
  br i1 %tobool797, label %if.then.798, label %if.end.809

if.then.798:                                      ; preds = %land.lhs.true.793
  %418 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %419 = load %struct.rtx_def*, %struct.rtx_def** %418, align 8
  %call799 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %419)
  %420 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  store %struct.rtx_def* %call799, %struct.rtx_def** %420, align 8
  %421 = load %struct.rtx_def**, %struct.rtx_def*** %memrefloc.addr, align 8
  %422 = load %struct.rtx_def*, %struct.rtx_def** %421, align 8
  %fld800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1
  %arrayidx801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld800, i32 0, i64 0
  %rtx802 = bitcast %union.rtunion_def* %arrayidx801 to %struct.rtx_def**
  store %struct.rtx_def** %rtx802, %struct.rtx_def*** %loc.addr, align 8
  %423 = load i32, i32* %removed_and, align 4
  %tobool803 = icmp ne i32 %423, 0
  br i1 %tobool803, label %if.then.804, label %if.end.808

if.then.804:                                      ; preds = %if.then.798
  %424 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %425 = load %struct.rtx_def*, %struct.rtx_def** %424, align 8
  %fld805 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1
  %arrayidx806 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld805, i32 0, i64 0
  %rtx807 = bitcast %union.rtunion_def* %arrayidx806 to %struct.rtx_def**
  store %struct.rtx_def** %rtx807, %struct.rtx_def*** %loc.addr, align 8
  br label %if.end.808

if.end.808:                                       ; preds = %if.then.804, %if.then.798
  br label %if.end.809

if.end.809:                                       ; preds = %if.end.808, %land.lhs.true.793, %land.lhs.true.788, %if.then.786
  %426 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %427 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %428 = load i32, i32* @target_flags, align 4
  %and810 = and i32 %428, 33554432
  %tobool811 = icmp ne i32 %and810, 0
  %cond812 = select i1 %tobool811, i32 5, i32 4
  %429 = load i32, i32* %opnum.addr, align 4
  %430 = load i32, i32* %type.addr, align 4
  %431 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %426, %struct.rtx_def** %427, i32 12, i32 %cond812, i32 %429, i32 %430, i32 %431)
  %432 = load i32, i32* %removed_and, align 4
  %tobool813 = icmp ne i32 %432, 0
  %lnot814 = xor i1 %tobool813, true
  %lnot.ext815 = zext i1 %lnot814 to i32
  store i32 %lnot.ext815, i32* %retval
  br label %return

if.end.816:                                       ; preds = %land.lhs.true.783, %lor.lhs.false.778
  %433 = load i32, i32* %mode.addr, align 4
  %434 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %435 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %436 = load i32, i32* %opnum.addr, align 4
  %437 = load i32, i32* %type.addr, align 4
  %438 = load i32, i32* %ind_levels.addr, align 4
  %439 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call817 = call i32 @find_reloads_address_1(i32 %433, %struct.rtx_def* %434, i32 0, %struct.rtx_def** %435, i32 %436, i32 %437, i32 %438, %struct.rtx_def* %439)
  store i32 %call817, i32* %retval
  br label %return

return:                                           ; preds = %if.end.816, %if.end.809, %if.then.741, %if.then.679, %if.then.580, %if.end.516, %if.then.502, %if.else.375, %if.then.369, %if.then.247, %if.then.243, %if.then.239, %if.end.199, %if.then.197, %if.end.163, %if.then.6
  %440 = load i32, i32* %retval
  ret i32 %440
}

; Function Attrs: nounwind uwtable
define void @clear_secondary_mem() #0 {
entry:
  call void @llvm.memset.p0i8.i64(i8* bitcast ([59 x %struct.rtx_def*]* @secondary_memlocs to i8*), i8 0, i64 472, i32 1, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @push_reload(%struct.rtx_def* %in, %struct.rtx_def* %out, %struct.rtx_def** %inloc, %struct.rtx_def** %outloc, i32 %class, i32 %inmode, i32 %outmode, i32 %strict_low, i32 %optional, i32 %opnum, i32 %type) #0 {
entry:
  %in.addr = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %inloc.addr = alloca %struct.rtx_def**, align 8
  %outloc.addr = alloca %struct.rtx_def**, align 8
  %class.addr = alloca i32, align 4
  %inmode.addr = alloca i32, align 4
  %outmode.addr = alloca i32, align 4
  %strict_low.addr = alloca i32, align 4
  %optional.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dont_share = alloca i32, align 4
  %dont_remove_subreg = alloca i32, align 4
  %in_subreg_loc = alloca %struct.rtx_def**, align 8
  %out_subreg_loc = alloca %struct.rtx_def**, align 8
  %secondary_in_reload = alloca i32, align 4
  %secondary_out_reload = alloca i32, align 4
  %secondary_in_icode = alloca i32, align 4
  %secondary_out_icode = alloca i32, align 4
  %regno = alloca i32, align 4
  %regno39 = alloca i32, align 4
  %in_class = alloca i32, align 4
  %mode = alloca i32, align 4
  %nregs = alloca i32, align 4
  %j = alloca i32, align 4
  %in_reg1463 = alloca %struct.rtx_def*, align 8
  %r = alloca %struct.replacement*, align 8
  %r1624 = alloca %struct.replacement*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %regno1729 = alloca i32, align 4
  %rel_mode = alloca i32, align 4
  %offs = alloca i32, align 4
  %nregs1998 = alloca i32, align 4
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  store %struct.rtx_def** %inloc, %struct.rtx_def*** %inloc.addr, align 8
  store %struct.rtx_def** %outloc, %struct.rtx_def*** %outloc.addr, align 8
  store i32 %class, i32* %class.addr, align 4
  store i32 %inmode, i32* %inmode.addr, align 4
  store i32 %outmode, i32* %outmode.addr, align 4
  store i32 %strict_low, i32* %strict_low.addr, align 4
  store i32 %optional, i32* %optional.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 0, i32* %dont_share, align 4
  store i32 0, i32* %dont_remove_subreg, align 4
  store %struct.rtx_def** null, %struct.rtx_def*** %in_subreg_loc, align 8
  store %struct.rtx_def** null, %struct.rtx_def*** %out_subreg_loc, align 8
  store i32 -1, i32* %secondary_in_reload, align 4
  store i32 -1, i32* %secondary_out_reload, align 4
  store i32 1317, i32* %secondary_in_icode, align 4
  store i32 1317, i32* %secondary_out_icode, align 4
  %0 = load i32, i32* %inmode.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1 = icmp ne %struct.rtx_def* %1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %inmode.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %outmode.addr, align 4
  %cmp2 = icmp eq i32 %4, 0
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.9

land.lhs.true.3:                                  ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp4 = icmp ne %struct.rtx_def* %5, null
  br i1 %cmp4, label %if.then.5, label %if.end.9

if.then.5:                                        ; preds = %land.lhs.true.3
  %6 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load6 = load i32, i32* %7, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 16
  %bf.clear8 = and i32 %bf.lshr7, 255
  store i32 %bf.clear8, i32* %outmode.addr, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.5, %land.lhs.true.3, %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp10 = icmp ne %struct.rtx_def* %8, null
  br i1 %cmp10, label %land.lhs.true.11, label %if.end.30

land.lhs.true.11:                                 ; preds = %if.end.9
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load12 = load i32, i32* %10, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 61
  br i1 %cmp14, label %if.then.15, label %if.end.30

if.then.15:                                       ; preds = %land.lhs.true.11
  %11 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %12 = load i32, i32* %rtuint, align 4
  store i32 %12, i32* %regno, align 4
  %13 = load i32, i32* %regno, align 4
  %cmp16 = icmp sge i32 %13, 53
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.29

land.lhs.true.17:                                 ; preds = %if.then.15
  %14 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load i16*, i16** @reg_renumber, align 8
  %arrayidx18 = getelementptr inbounds i16, i16* %15, i64 %idxprom
  %16 = load i16, i16* %arrayidx18, align 2
  %conv = sext i16 %16 to i32
  %cmp19 = icmp slt i32 %conv, 0
  br i1 %cmp19, label %land.lhs.true.21, label %if.end.29

land.lhs.true.21:                                 ; preds = %land.lhs.true.17
  %17 = load i32, i32* %regno, align 4
  %idxprom22 = sext i32 %17 to i64
  %18 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx23 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %idxprom22
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8
  %cmp24 = icmp ne %struct.rtx_def* %19, null
  br i1 %cmp24, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %land.lhs.true.21
  %20 = load i32, i32* %regno, align 4
  %idxprom27 = sext i32 %20 to i64
  %21 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx28 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom27
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx28, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %in.addr, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.26, %land.lhs.true.21, %land.lhs.true.17, %if.then.15
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %land.lhs.true.11, %if.end.9
  %23 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp31 = icmp ne %struct.rtx_def* %23, null
  br i1 %cmp31, label %land.lhs.true.33, label %if.end.60

land.lhs.true.33:                                 ; preds = %if.end.30
  %24 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load34 = load i32, i32* %25, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 61
  br i1 %cmp36, label %if.then.38, label %if.end.60

if.then.38:                                       ; preds = %land.lhs.true.33
  %26 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtuint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %27 = load i32, i32* %rtuint42, align 4
  store i32 %27, i32* %regno39, align 4
  %28 = load i32, i32* %regno39, align 4
  %cmp43 = icmp sge i32 %28, 53
  br i1 %cmp43, label %land.lhs.true.45, label %if.end.59

land.lhs.true.45:                                 ; preds = %if.then.38
  %29 = load i32, i32* %regno39, align 4
  %idxprom46 = sext i32 %29 to i64
  %30 = load i16*, i16** @reg_renumber, align 8
  %arrayidx47 = getelementptr inbounds i16, i16* %30, i64 %idxprom46
  %31 = load i16, i16* %arrayidx47, align 2
  %conv48 = sext i16 %31 to i32
  %cmp49 = icmp slt i32 %conv48, 0
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.59

land.lhs.true.51:                                 ; preds = %land.lhs.true.45
  %32 = load i32, i32* %regno39, align 4
  %idxprom52 = sext i32 %32 to i64
  %33 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx53 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %33, i64 %idxprom52
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8
  %cmp54 = icmp ne %struct.rtx_def* %34, null
  br i1 %cmp54, label %if.then.56, label %if.end.59

if.then.56:                                       ; preds = %land.lhs.true.51
  %35 = load i32, i32* %regno39, align 4
  %idxprom57 = sext i32 %35 to i64
  %36 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom57
  %37 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %out.addr, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.56, %land.lhs.true.51, %land.lhs.true.45, %if.then.38
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %land.lhs.true.33, %if.end.30
  %38 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp61 = icmp ne %struct.rtx_def* %38, null
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.92

land.lhs.true.63:                                 ; preds = %if.end.60
  %39 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp64 = icmp ne %struct.rtx_def* %39, null
  br i1 %cmp64, label %land.lhs.true.66, label %if.end.92

land.lhs.true.66:                                 ; preds = %land.lhs.true.63
  %40 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load67 = load i32, i32* %41, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 66
  br i1 %cmp69, label %land.lhs.true.71, label %if.end.92

land.lhs.true.71:                                 ; preds = %land.lhs.true.66
  %42 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %42, %struct.rtx_def* %43)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.72, label %if.end.92

if.then.72:                                       ; preds = %land.lhs.true.71
  %44 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load75 = load i32, i32* %46, align 8
  %bf.clear76 = and i32 %bf.load75, 65535
  switch i32 %bf.clear76, label %sw.default [
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 101, label %sw.bb
    i32 97, label %sw.bb.84
    i32 96, label %sw.bb.84
    i32 100, label %sw.bb.84
  ]

sw.bb:                                            ; preds = %if.then.72, %if.then.72, %if.then.72
  %47 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %call83 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %47, %struct.rtx_def* %50)
  store %struct.rtx_def* %call83, %struct.rtx_def** %in.addr, align 8
  br label %sw.epilog

sw.bb.84:                                         ; preds = %if.then.72, %if.then.72, %if.then.72
  %51 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 0
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx87, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx90, align 8
  %call91 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %51, %struct.rtx_def* %54)
  store %struct.rtx_def* %call91, %struct.rtx_def** %out.addr, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.72
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.84, %sw.bb
  br label %if.end.92

if.end.92:                                        ; preds = %sw.epilog, %land.lhs.true.71, %land.lhs.true.66, %land.lhs.true.63, %if.end.60
  %55 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp93 = icmp ne %struct.rtx_def* %55, null
  br i1 %cmp93, label %land.lhs.true.95, label %if.end.447

land.lhs.true.95:                                 ; preds = %if.end.92
  %56 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load96 = load i32, i32* %57, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 63
  br i1 %cmp98, label %land.lhs.true.100, label %if.end.447

land.lhs.true.100:                                ; preds = %land.lhs.true.95
  %58 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call101 = call i32 @subreg_lowpart_p(%struct.rtx_def* %58)
  %tobool102 = icmp ne i32 %call101, 0
  br i1 %tobool102, label %land.lhs.true.104, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.100
  %59 = load i32, i32* %strict_low.addr, align 4
  %tobool103 = icmp ne i32 %59, 0
  br i1 %tobool103, label %land.lhs.true.104, label %if.end.447

land.lhs.true.104:                                ; preds = %lor.lhs.false, %land.lhs.true.100
  %60 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx107, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load108 = load i32, i32* %62, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 67
  br i1 %cmp110, label %if.then.421, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %land.lhs.true.104
  %63 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load116 = load i32, i32* %65, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 68
  br i1 %cmp118, label %if.then.421, label %lor.lhs.false.120

lor.lhs.false.120:                                ; preds = %lor.lhs.false.112
  %66 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i32 0, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx123, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load124 = load i32, i32* %68, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp eq i32 %bf.clear125, 54
  br i1 %cmp126, label %if.then.421, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %lor.lhs.false.120
  %69 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load132 = load i32, i32* %71, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 55
  br i1 %cmp134, label %if.then.421, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %lor.lhs.false.128
  %72 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load140 = load i32, i32* %74, align 8
  %bf.clear141 = and i32 %bf.load140, 65535
  %cmp142 = icmp eq i32 %bf.clear141, 58
  br i1 %cmp142, label %if.then.421, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %lor.lhs.false.136
  %75 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load148 = load i32, i32* %77, align 8
  %bf.clear149 = and i32 %bf.load148, 65535
  %cmp150 = icmp eq i32 %bf.clear149, 134
  br i1 %cmp150, label %if.then.421, label %lor.lhs.false.152

lor.lhs.false.152:                                ; preds = %lor.lhs.false.144
  %78 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx155, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load156 = load i32, i32* %80, align 8
  %bf.clear157 = and i32 %bf.load156, 65535
  %cmp158 = icmp eq i32 %bf.clear157, 56
  br i1 %cmp158, label %if.then.421, label %lor.lhs.false.160

lor.lhs.false.160:                                ; preds = %lor.lhs.false.152
  %81 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 0
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load164 = load i32, i32* %83, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 140
  br i1 %cmp166, label %if.then.421, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.160
  %84 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 0
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx171, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load172 = load i32, i32* %86, align 8
  %bf.clear173 = and i32 %bf.load172, 65535
  %cmp174 = icmp eq i32 %bf.clear173, 75
  br i1 %cmp174, label %if.then.421, label %lor.lhs.false.176

lor.lhs.false.176:                                ; preds = %lor.lhs.false.168
  %87 = load i32, i32* %strict_low.addr, align 4
  %tobool177 = icmp ne i32 %87, 0
  br i1 %tobool177, label %if.then.421, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %lor.lhs.false.176
  %88 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 0
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load182 = load i32, i32* %90, align 8
  %bf.clear183 = and i32 %bf.load182, 65535
  %cmp184 = icmp eq i32 %bf.clear183, 61
  br i1 %cmp184, label %land.lhs.true.186, label %lor.lhs.false.195

land.lhs.true.186:                                ; preds = %lor.lhs.false.178
  %91 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtuint192 = bitcast %union.rtunion_def* %arrayidx191 to i32*
  %93 = load i32, i32* %rtuint192, align 4
  %cmp193 = icmp uge i32 %93, 53
  br i1 %cmp193, label %land.lhs.true.203, label %lor.lhs.false.195

lor.lhs.false.195:                                ; preds = %land.lhs.true.186, %lor.lhs.false.178
  %94 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 0
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx198, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load199 = load i32, i32* %96, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 66
  br i1 %cmp201, label %land.lhs.true.203, label %lor.lhs.false.218

land.lhs.true.203:                                ; preds = %lor.lhs.false.195, %land.lhs.true.186
  %97 = load i32, i32* %inmode.addr, align 4
  %idxprom204 = sext i32 %97 to i64
  %arrayidx205 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom204
  %98 = load i8, i8* %arrayidx205, align 1
  %conv206 = zext i8 %98 to i32
  %99 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx209, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load210 = load i32, i32* %101, align 8
  %bf.lshr211 = lshr i32 %bf.load210, 16
  %bf.clear212 = and i32 %bf.lshr211, 255
  %idxprom213 = sext i32 %bf.clear212 to i64
  %arrayidx214 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom213
  %102 = load i8, i8* %arrayidx214, align 1
  %conv215 = zext i8 %102 to i32
  %cmp216 = icmp sgt i32 %conv206, %conv215
  br i1 %cmp216, label %if.then.421, label %lor.lhs.false.218

lor.lhs.false.218:                                ; preds = %land.lhs.true.203, %lor.lhs.false.195
  %103 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 0
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load222 = load i32, i32* %105, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 61
  br i1 %cmp224, label %land.lhs.true.226, label %if.end.447

land.lhs.true.226:                                ; preds = %lor.lhs.false.218
  %106 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 0
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtx229, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 0
  %rtuint232 = bitcast %union.rtunion_def* %arrayidx231 to i32*
  %108 = load i32, i32* %rtuint232, align 4
  %cmp233 = icmp ult i32 %108, 53
  br i1 %cmp233, label %land.lhs.true.235, label %if.end.447

land.lhs.true.235:                                ; preds = %land.lhs.true.226
  %109 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp236 = icmp eq %struct.rtx_def* %109, null
  br i1 %cmp236, label %land.lhs.true.241, label %lor.lhs.false.238

lor.lhs.false.238:                                ; preds = %land.lhs.true.235
  %110 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call239 = call i32 @subreg_lowpart_p(%struct.rtx_def* %110)
  %tobool240 = icmp ne i32 %call239, 0
  br i1 %tobool240, label %land.lhs.true.241, label %if.end.447

land.lhs.true.241:                                ; preds = %lor.lhs.false.238, %land.lhs.true.235
  %111 = load i32, i32* %inmode.addr, align 4
  %idxprom242 = sext i32 %111 to i64
  %arrayidx243 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom242
  %112 = load i8, i8* %arrayidx243, align 1
  %conv244 = zext i8 %112 to i32
  %113 = load i32, i32* @target_flags, align 4
  %and = and i32 %113, 33554432
  %tobool245 = icmp ne i32 %and, 0
  %cond = select i1 %tobool245, i32 8, i32 4
  %cmp246 = icmp sle i32 %conv244, %cond
  br i1 %cmp246, label %land.lhs.true.248, label %lor.lhs.false.417

land.lhs.true.248:                                ; preds = %land.lhs.true.241
  %114 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i32 0, i64 0
  %rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx251, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load252 = load i32, i32* %116, align 8
  %bf.lshr253 = lshr i32 %bf.load252, 16
  %bf.clear254 = and i32 %bf.lshr253, 255
  %idxprom255 = sext i32 %bf.clear254 to i64
  %arrayidx256 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom255
  %117 = load i8, i8* %arrayidx256, align 1
  %conv257 = zext i8 %117 to i32
  %118 = load i32, i32* @target_flags, align 4
  %and258 = and i32 %118, 33554432
  %tobool259 = icmp ne i32 %and258, 0
  %cond260 = select i1 %tobool259, i32 8, i32 4
  %cmp261 = icmp sgt i32 %conv257, %cond260
  br i1 %cmp261, label %land.lhs.true.263, label %lor.lhs.false.417

land.lhs.true.263:                                ; preds = %land.lhs.true.248
  %119 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i32 0, i64 0
  %rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx266, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load267 = load i32, i32* %121, align 8
  %bf.lshr268 = lshr i32 %bf.load267, 16
  %bf.clear269 = and i32 %bf.lshr268, 255
  %idxprom270 = sext i32 %bf.clear269 to i64
  %arrayidx271 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom270
  %122 = load i8, i8* %arrayidx271, align 1
  %conv272 = zext i8 %122 to i32
  %123 = load i32, i32* @target_flags, align 4
  %and273 = and i32 %123, 33554432
  %tobool274 = icmp ne i32 %and273, 0
  %cond275 = select i1 %tobool274, i32 8, i32 4
  %div = sdiv i32 %conv272, %cond275
  %124 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 0
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx278, align 8
  %fld279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i32 0, i64 0
  %rtuint281 = bitcast %union.rtunion_def* %arrayidx280 to i32*
  %126 = load i32, i32* %rtuint281, align 4
  %cmp282 = icmp uge i32 %126, 8
  br i1 %cmp282, label %land.lhs.true.284, label %lor.lhs.false.293

land.lhs.true.284:                                ; preds = %land.lhs.true.263
  %127 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld285, i32 0, i64 0
  %rtx287 = bitcast %union.rtunion_def* %arrayidx286 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx287, align 8
  %fld288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx289 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld288, i32 0, i64 0
  %rtuint290 = bitcast %union.rtunion_def* %arrayidx289 to i32*
  %129 = load i32, i32* %rtuint290, align 4
  %cmp291 = icmp ule i32 %129, 15
  br i1 %cmp291, label %cond.true, label %lor.lhs.false.293

lor.lhs.false.293:                                ; preds = %land.lhs.true.284, %land.lhs.true.263
  %130 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld294 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i32 0, i64 0
  %rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx296, align 8
  %fld297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i32 0, i64 0
  %rtuint299 = bitcast %union.rtunion_def* %arrayidx298 to i32*
  %132 = load i32, i32* %rtuint299, align 4
  %cmp300 = icmp uge i32 %132, 21
  br i1 %cmp300, label %land.lhs.true.302, label %lor.lhs.false.311

land.lhs.true.302:                                ; preds = %lor.lhs.false.293
  %133 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 0
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx305, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtuint308 = bitcast %union.rtunion_def* %arrayidx307 to i32*
  %135 = load i32, i32* %rtuint308, align 4
  %cmp309 = icmp ule i32 %135, 28
  br i1 %cmp309, label %cond.true, label %lor.lhs.false.311

lor.lhs.false.311:                                ; preds = %land.lhs.true.302, %lor.lhs.false.293
  %136 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 0
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx314, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 0
  %rtuint317 = bitcast %union.rtunion_def* %arrayidx316 to i32*
  %138 = load i32, i32* %rtuint317, align 4
  %cmp318 = icmp uge i32 %138, 45
  br i1 %cmp318, label %land.lhs.true.320, label %lor.lhs.false.329

land.lhs.true.320:                                ; preds = %lor.lhs.false.311
  %139 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld321, i32 0, i64 0
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx323, align 8
  %fld324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i32 0, i64 0
  %rtuint326 = bitcast %union.rtunion_def* %arrayidx325 to i32*
  %141 = load i32, i32* %rtuint326, align 4
  %cmp327 = icmp ule i32 %141, 52
  br i1 %cmp327, label %cond.true, label %lor.lhs.false.329

lor.lhs.false.329:                                ; preds = %land.lhs.true.320, %lor.lhs.false.311
  %142 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i32 0, i64 0
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx332, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 0
  %rtuint335 = bitcast %union.rtunion_def* %arrayidx334 to i32*
  %144 = load i32, i32* %rtuint335, align 4
  %cmp336 = icmp uge i32 %144, 29
  br i1 %cmp336, label %land.lhs.true.338, label %cond.false

land.lhs.true.338:                                ; preds = %lor.lhs.false.329
  %145 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 0
  %rtx341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx341, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 0
  %rtuint344 = bitcast %union.rtunion_def* %arrayidx343 to i32*
  %147 = load i32, i32* %rtuint344, align 4
  %cmp345 = icmp ule i32 %147, 36
  br i1 %cmp345, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.338, %land.lhs.true.320, %land.lhs.true.302, %land.lhs.true.284
  %148 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 0
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load350 = load i32, i32* %150, align 8
  %bf.lshr351 = lshr i32 %bf.load350, 16
  %bf.clear352 = and i32 %bf.lshr351, 255
  %idxprom353 = sext i32 %bf.clear352 to i64
  %arrayidx354 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom353
  %151 = load i32, i32* %arrayidx354, align 4
  %cmp355 = icmp eq i32 %151, 5
  br i1 %cmp355, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %152 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i32 0, i64 0
  %rtx359 = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rtx359, align 8
  %154 = bitcast %struct.rtx_def* %153 to i32*
  %bf.load360 = load i32, i32* %154, align 8
  %bf.lshr361 = lshr i32 %bf.load360, 16
  %bf.clear362 = and i32 %bf.lshr361, 255
  %idxprom363 = sext i32 %bf.clear362 to i64
  %arrayidx364 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom363
  %155 = load i32, i32* %arrayidx364, align 4
  %cmp365 = icmp eq i32 %155, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %156 = phi i1 [ true, %cond.true ], [ %cmp365, %lor.rhs ]
  %cond367 = select i1 %156, i32 2, i32 1
  br label %cond.end.413

cond.false:                                       ; preds = %land.lhs.true.338, %lor.lhs.false.329
  %157 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld368, i32 0, i64 0
  %rtx370 = bitcast %union.rtunion_def* %arrayidx369 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx370, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load371 = load i32, i32* %159, align 8
  %bf.lshr372 = lshr i32 %bf.load371, 16
  %bf.clear373 = and i32 %bf.lshr372, 255
  %cmp374 = icmp eq i32 %bf.clear373, 18
  br i1 %cmp374, label %cond.true.376, label %cond.false.380

cond.true.376:                                    ; preds = %cond.false
  %160 = load i32, i32* @target_flags, align 4
  %and377 = and i32 %160, 33554432
  %tobool378 = icmp ne i32 %and377, 0
  %cond379 = select i1 %tobool378, i32 2, i32 3
  br label %cond.end.411

cond.false.380:                                   ; preds = %cond.false
  %161 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i32 0, i64 0
  %rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx383, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %bf.load384 = load i32, i32* %163, align 8
  %bf.lshr385 = lshr i32 %bf.load384, 16
  %bf.clear386 = and i32 %bf.lshr385, 255
  %cmp387 = icmp eq i32 %bf.clear386, 24
  br i1 %cmp387, label %cond.true.389, label %cond.false.393

cond.true.389:                                    ; preds = %cond.false.380
  %164 = load i32, i32* @target_flags, align 4
  %and390 = and i32 %164, 33554432
  %tobool391 = icmp ne i32 %and390, 0
  %cond392 = select i1 %tobool391, i32 4, i32 6
  br label %cond.end

cond.false.393:                                   ; preds = %cond.false.380
  %165 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld394, i32 0, i64 0
  %rtx396 = bitcast %union.rtunion_def* %arrayidx395 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx396, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load397 = load i32, i32* %167, align 8
  %bf.lshr398 = lshr i32 %bf.load397, 16
  %bf.clear399 = and i32 %bf.lshr398, 255
  %idxprom400 = sext i32 %bf.clear399 to i64
  %arrayidx401 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom400
  %168 = load i8, i8* %arrayidx401, align 1
  %conv402 = zext i8 %168 to i32
  %169 = load i32, i32* @target_flags, align 4
  %and403 = and i32 %169, 33554432
  %tobool404 = icmp ne i32 %and403, 0
  %cond405 = select i1 %tobool404, i32 8, i32 4
  %add = add nsw i32 %conv402, %cond405
  %sub = sub nsw i32 %add, 1
  %170 = load i32, i32* @target_flags, align 4
  %and406 = and i32 %170, 33554432
  %tobool407 = icmp ne i32 %and406, 0
  %cond408 = select i1 %tobool407, i32 8, i32 4
  %div409 = sdiv i32 %sub, %cond408
  br label %cond.end

cond.end:                                         ; preds = %cond.false.393, %cond.true.389
  %cond410 = phi i32 [ %cond392, %cond.true.389 ], [ %div409, %cond.false.393 ]
  br label %cond.end.411

cond.end.411:                                     ; preds = %cond.end, %cond.true.376
  %cond412 = phi i32 [ %cond379, %cond.true.376 ], [ %cond410, %cond.end ]
  br label %cond.end.413

cond.end.413:                                     ; preds = %cond.end.411, %lor.end
  %cond414 = phi i32 [ %cond367, %lor.end ], [ %cond412, %cond.end.411 ]
  %cmp415 = icmp ne i32 %div, %cond414
  br i1 %cmp415, label %if.then.421, label %lor.lhs.false.417

lor.lhs.false.417:                                ; preds = %cond.end.413, %land.lhs.true.248, %land.lhs.true.241
  %171 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call418 = call i32 @subreg_regno(%struct.rtx_def* %171)
  %172 = load i32, i32* %inmode.addr, align 4
  %call419 = call i32 @ix86_hard_regno_mode_ok(i32 %call418, i32 %172)
  %tobool420 = icmp ne i32 %call419, 0
  br i1 %tobool420, label %if.end.447, label %if.then.421

if.then.421:                                      ; preds = %lor.lhs.false.417, %cond.end.413, %land.lhs.true.203, %lor.lhs.false.176, %lor.lhs.false.168, %lor.lhs.false.160, %lor.lhs.false.152, %lor.lhs.false.144, %lor.lhs.false.136, %lor.lhs.false.128, %lor.lhs.false.120, %lor.lhs.false.112, %land.lhs.true.104
  %173 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  store %struct.rtx_def** %173, %struct.rtx_def*** %in_subreg_loc, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 0
  %rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**
  store %struct.rtx_def** %rtx424, %struct.rtx_def*** %inloc.addr, align 8
  %175 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %176 = load %struct.rtx_def*, %struct.rtx_def** %175, align 8
  store %struct.rtx_def* %176, %struct.rtx_def** %in.addr, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %178 = bitcast %struct.rtx_def* %177 to i32*
  %bf.load425 = load i32, i32* %178, align 8
  %bf.clear426 = and i32 %bf.load425, 65535
  %cmp427 = icmp eq i32 %bf.clear426, 66
  br i1 %cmp427, label %if.then.429, label %if.end.443

if.then.429:                                      ; preds = %if.then.421
  %179 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load430 = load i32, i32* %180, align 8
  %bf.lshr431 = lshr i32 %bf.load430, 16
  %bf.clear432 = and i32 %bf.lshr431, 255
  %idxprom433 = sext i32 %bf.clear432 to i64
  %arrayidx434 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom433
  %181 = load i8, i8* %arrayidx434, align 1
  %conv435 = zext i8 %181 to i32
  %182 = load i32, i32* %inmode.addr, align 4
  %idxprom436 = sext i32 %182 to i64
  %arrayidx437 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom436
  %183 = load i8, i8* %arrayidx437, align 1
  %conv438 = zext i8 %183 to i32
  %cmp439 = icmp sgt i32 %conv435, %conv438
  br i1 %cmp439, label %if.then.441, label %if.end.442

if.then.441:                                      ; preds = %if.then.429
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1035, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.push_reload, i32 0, i32 0)) #5
  unreachable

if.end.442:                                       ; preds = %if.then.429
  br label %if.end.443

if.end.443:                                       ; preds = %if.end.442, %if.then.421
  %184 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load444 = load i32, i32* %185, align 8
  %bf.lshr445 = lshr i32 %bf.load444, 16
  %bf.clear446 = and i32 %bf.lshr445, 255
  store i32 %bf.clear446, i32* %inmode.addr, align 4
  br label %if.end.447

if.end.447:                                       ; preds = %if.end.443, %lor.lhs.false.417, %lor.lhs.false.238, %land.lhs.true.226, %lor.lhs.false.218, %lor.lhs.false, %land.lhs.true.95, %if.end.92
  %186 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp448 = icmp ne %struct.rtx_def* %186, null
  br i1 %cmp448, label %land.lhs.true.450, label %if.end.496

land.lhs.true.450:                                ; preds = %if.end.447
  %187 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %188 = load i32, i32* %inmode.addr, align 4
  %call451 = call i32 @reload_inner_reg_of_subreg(%struct.rtx_def* %187, i32 %188)
  %tobool452 = icmp ne i32 %call451, 0
  br i1 %tobool452, label %if.then.453, label %if.end.496

if.then.453:                                      ; preds = %land.lhs.true.450
  %189 = load i32, i32* %class.addr, align 4
  store i32 %189, i32* %in_class, align 4
  %190 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld454, i32 0, i64 0
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx456, align 8
  %192 = bitcast %struct.rtx_def* %191 to i32*
  %bf.load457 = load i32, i32* %192, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 61
  br i1 %cmp459, label %if.then.461, label %if.end.488

if.then.461:                                      ; preds = %if.then.453
  %193 = load i32, i32* %inmode.addr, align 4
  %194 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %arrayidx463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld462, i32 0, i64 0
  %rtx464 = bitcast %union.rtunion_def* %arrayidx463 to %struct.rtx_def**
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rtx464, align 8
  %fld465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld465, i32 0, i64 0
  %rtuint467 = bitcast %union.rtunion_def* %arrayidx466 to i32*
  %196 = load i32, i32* %rtuint467, align 4
  %197 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld468, i32 0, i64 0
  %rtx470 = bitcast %union.rtunion_def* %arrayidx469 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx470, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load471 = load i32, i32* %199, align 8
  %bf.lshr472 = lshr i32 %bf.load471, 16
  %bf.clear473 = and i32 %bf.lshr472, 255
  %200 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld474 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx475 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld474, i32 0, i64 1
  %rtuint476 = bitcast %union.rtunion_def* %arrayidx475 to i32*
  %201 = load i32, i32* %rtuint476, align 4
  %202 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load477 = load i32, i32* %203, align 8
  %bf.lshr478 = lshr i32 %bf.load477, 16
  %bf.clear479 = and i32 %bf.lshr478, 255
  %call480 = call i32 @subreg_regno_offset(i32 %196, i32 %bf.clear473, i32 %201, i32 %bf.clear479)
  %204 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld481, i32 0, i64 0
  %rtx483 = bitcast %union.rtunion_def* %arrayidx482 to %struct.rtx_def**
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtx483, align 8
  %fld484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i32 0, i64 0
  %rtuint486 = bitcast %union.rtunion_def* %arrayidx485 to i32*
  %206 = load i32, i32* %rtuint486, align 4
  %call487 = call i32 @find_valid_class(i32 %193, i32 %call480, i32 %206)
  store i32 %call487, i32* %in_class, align 4
  br label %if.end.488

if.end.488:                                       ; preds = %if.then.461, %if.then.453
  %207 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i32 0, i64 0
  %rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx491, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld492, i32 0, i64 0
  %rtx494 = bitcast %union.rtunion_def* %arrayidx493 to %struct.rtx_def**
  %210 = load i32, i32* %in_class, align 4
  %211 = load i32, i32* %opnum.addr, align 4
  %212 = load i32, i32* %type.addr, align 4
  %call495 = call i32 @push_reload(%struct.rtx_def* %208, %struct.rtx_def* null, %struct.rtx_def** %rtx494, %struct.rtx_def** null, i32 %210, i32 0, i32 0, i32 0, i32 0, i32 %211, i32 %212)
  store i32 1, i32* %dont_remove_subreg, align 4
  br label %if.end.496

if.end.496:                                       ; preds = %if.end.488, %land.lhs.true.450, %if.end.447
  %213 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp497 = icmp ne %struct.rtx_def* %213, null
  br i1 %cmp497, label %land.lhs.true.499, label %if.end.889

land.lhs.true.499:                                ; preds = %if.end.496
  %214 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load500 = load i32, i32* %215, align 8
  %bf.clear501 = and i32 %bf.load500, 65535
  %cmp502 = icmp eq i32 %bf.clear501, 63
  br i1 %cmp502, label %land.lhs.true.504, label %if.end.889

land.lhs.true.504:                                ; preds = %land.lhs.true.499
  %216 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call505 = call i32 @subreg_lowpart_p(%struct.rtx_def* %216)
  %tobool506 = icmp ne i32 %call505, 0
  br i1 %tobool506, label %land.lhs.true.509, label %lor.lhs.false.507

lor.lhs.false.507:                                ; preds = %land.lhs.true.504
  %217 = load i32, i32* %strict_low.addr, align 4
  %tobool508 = icmp ne i32 %217, 0
  br i1 %tobool508, label %land.lhs.true.509, label %if.end.889

land.lhs.true.509:                                ; preds = %lor.lhs.false.507, %land.lhs.true.504
  %218 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx511 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld510, i32 0, i64 0
  %rtx512 = bitcast %union.rtunion_def* %arrayidx511 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx512, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %bf.load513 = load i32, i32* %220, align 8
  %bf.clear514 = and i32 %bf.load513, 65535
  %cmp515 = icmp eq i32 %bf.clear514, 67
  br i1 %cmp515, label %if.then.864, label %lor.lhs.false.517

lor.lhs.false.517:                                ; preds = %land.lhs.true.509
  %221 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i32 0, i64 0
  %rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rtx520, align 8
  %223 = bitcast %struct.rtx_def* %222 to i32*
  %bf.load521 = load i32, i32* %223, align 8
  %bf.clear522 = and i32 %bf.load521, 65535
  %cmp523 = icmp eq i32 %bf.clear522, 68
  br i1 %cmp523, label %if.then.864, label %lor.lhs.false.525

lor.lhs.false.525:                                ; preds = %lor.lhs.false.517
  %224 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx527 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld526, i32 0, i64 0
  %rtx528 = bitcast %union.rtunion_def* %arrayidx527 to %struct.rtx_def**
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rtx528, align 8
  %226 = bitcast %struct.rtx_def* %225 to i32*
  %bf.load529 = load i32, i32* %226, align 8
  %bf.clear530 = and i32 %bf.load529, 65535
  %cmp531 = icmp eq i32 %bf.clear530, 54
  br i1 %cmp531, label %if.then.864, label %lor.lhs.false.533

lor.lhs.false.533:                                ; preds = %lor.lhs.false.525
  %227 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %228 = load %struct.rtx_def*, %struct.rtx_def** %rtx536, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %bf.load537 = load i32, i32* %229, align 8
  %bf.clear538 = and i32 %bf.load537, 65535
  %cmp539 = icmp eq i32 %bf.clear538, 55
  br i1 %cmp539, label %if.then.864, label %lor.lhs.false.541

lor.lhs.false.541:                                ; preds = %lor.lhs.false.533
  %230 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 0
  %rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rtx544, align 8
  %232 = bitcast %struct.rtx_def* %231 to i32*
  %bf.load545 = load i32, i32* %232, align 8
  %bf.clear546 = and i32 %bf.load545, 65535
  %cmp547 = icmp eq i32 %bf.clear546, 58
  br i1 %cmp547, label %if.then.864, label %lor.lhs.false.549

lor.lhs.false.549:                                ; preds = %lor.lhs.false.541
  %233 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld550 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx551 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld550, i32 0, i64 0
  %rtx552 = bitcast %union.rtunion_def* %arrayidx551 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx552, align 8
  %235 = bitcast %struct.rtx_def* %234 to i32*
  %bf.load553 = load i32, i32* %235, align 8
  %bf.clear554 = and i32 %bf.load553, 65535
  %cmp555 = icmp eq i32 %bf.clear554, 134
  br i1 %cmp555, label %if.then.864, label %lor.lhs.false.557

lor.lhs.false.557:                                ; preds = %lor.lhs.false.549
  %236 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld558 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %236, i32 0, i32 1
  %arrayidx559 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld558, i32 0, i64 0
  %rtx560 = bitcast %union.rtunion_def* %arrayidx559 to %struct.rtx_def**
  %237 = load %struct.rtx_def*, %struct.rtx_def** %rtx560, align 8
  %238 = bitcast %struct.rtx_def* %237 to i32*
  %bf.load561 = load i32, i32* %238, align 8
  %bf.clear562 = and i32 %bf.load561, 65535
  %cmp563 = icmp eq i32 %bf.clear562, 56
  br i1 %cmp563, label %if.then.864, label %lor.lhs.false.565

lor.lhs.false.565:                                ; preds = %lor.lhs.false.557
  %239 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld566, i32 0, i64 0
  %rtx568 = bitcast %union.rtunion_def* %arrayidx567 to %struct.rtx_def**
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rtx568, align 8
  %241 = bitcast %struct.rtx_def* %240 to i32*
  %bf.load569 = load i32, i32* %241, align 8
  %bf.clear570 = and i32 %bf.load569, 65535
  %cmp571 = icmp eq i32 %bf.clear570, 140
  br i1 %cmp571, label %if.then.864, label %lor.lhs.false.573

lor.lhs.false.573:                                ; preds = %lor.lhs.false.565
  %242 = load i32, i32* %strict_low.addr, align 4
  %tobool574 = icmp ne i32 %242, 0
  br i1 %tobool574, label %if.then.864, label %lor.lhs.false.575

lor.lhs.false.575:                                ; preds = %lor.lhs.false.573
  %243 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i32 0, i64 0
  %rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rtx578, align 8
  %245 = bitcast %struct.rtx_def* %244 to i32*
  %bf.load579 = load i32, i32* %245, align 8
  %bf.clear580 = and i32 %bf.load579, 65535
  %cmp581 = icmp eq i32 %bf.clear580, 61
  br i1 %cmp581, label %land.lhs.true.583, label %lor.lhs.false.592

land.lhs.true.583:                                ; preds = %lor.lhs.false.575
  %246 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld584, i32 0, i64 0
  %rtx586 = bitcast %union.rtunion_def* %arrayidx585 to %struct.rtx_def**
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rtx586, align 8
  %fld587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld587, i32 0, i64 0
  %rtuint589 = bitcast %union.rtunion_def* %arrayidx588 to i32*
  %248 = load i32, i32* %rtuint589, align 4
  %cmp590 = icmp uge i32 %248, 53
  br i1 %cmp590, label %land.lhs.true.600, label %lor.lhs.false.592

lor.lhs.false.592:                                ; preds = %land.lhs.true.583, %lor.lhs.false.575
  %249 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i32 0, i64 0
  %rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**
  %250 = load %struct.rtx_def*, %struct.rtx_def** %rtx595, align 8
  %251 = bitcast %struct.rtx_def* %250 to i32*
  %bf.load596 = load i32, i32* %251, align 8
  %bf.clear597 = and i32 %bf.load596, 65535
  %cmp598 = icmp eq i32 %bf.clear597, 66
  br i1 %cmp598, label %land.lhs.true.600, label %lor.lhs.false.615

land.lhs.true.600:                                ; preds = %lor.lhs.false.592, %land.lhs.true.583
  %252 = load i32, i32* %outmode.addr, align 4
  %idxprom601 = sext i32 %252 to i64
  %arrayidx602 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom601
  %253 = load i8, i8* %arrayidx602, align 1
  %conv603 = zext i8 %253 to i32
  %254 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld604 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1
  %arrayidx605 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld604, i32 0, i64 0
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %255 = load %struct.rtx_def*, %struct.rtx_def** %rtx606, align 8
  %256 = bitcast %struct.rtx_def* %255 to i32*
  %bf.load607 = load i32, i32* %256, align 8
  %bf.lshr608 = lshr i32 %bf.load607, 16
  %bf.clear609 = and i32 %bf.lshr608, 255
  %idxprom610 = sext i32 %bf.clear609 to i64
  %arrayidx611 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom610
  %257 = load i8, i8* %arrayidx611, align 1
  %conv612 = zext i8 %257 to i32
  %cmp613 = icmp sgt i32 %conv603, %conv612
  br i1 %cmp613, label %if.then.864, label %lor.lhs.false.615

lor.lhs.false.615:                                ; preds = %land.lhs.true.600, %lor.lhs.false.592
  %258 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld616 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx617 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld616, i32 0, i64 0
  %rtx618 = bitcast %union.rtunion_def* %arrayidx617 to %struct.rtx_def**
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rtx618, align 8
  %260 = bitcast %struct.rtx_def* %259 to i32*
  %bf.load619 = load i32, i32* %260, align 8
  %bf.clear620 = and i32 %bf.load619, 65535
  %cmp621 = icmp eq i32 %bf.clear620, 61
  br i1 %cmp621, label %land.lhs.true.623, label %lor.lhs.false.822

land.lhs.true.623:                                ; preds = %lor.lhs.false.615
  %261 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtx626 = bitcast %union.rtunion_def* %arrayidx625 to %struct.rtx_def**
  %262 = load %struct.rtx_def*, %struct.rtx_def** %rtx626, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 0
  %rtuint629 = bitcast %union.rtunion_def* %arrayidx628 to i32*
  %263 = load i32, i32* %rtuint629, align 4
  %cmp630 = icmp ult i32 %263, 53
  br i1 %cmp630, label %land.lhs.true.632, label %lor.lhs.false.822

land.lhs.true.632:                                ; preds = %land.lhs.true.623
  %264 = load i32, i32* %outmode.addr, align 4
  %idxprom633 = sext i32 %264 to i64
  %arrayidx634 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom633
  %265 = load i8, i8* %arrayidx634, align 1
  %conv635 = zext i8 %265 to i32
  %266 = load i32, i32* @target_flags, align 4
  %and636 = and i32 %266, 33554432
  %tobool637 = icmp ne i32 %and636, 0
  %cond638 = select i1 %tobool637, i32 8, i32 4
  %cmp639 = icmp sle i32 %conv635, %cond638
  br i1 %cmp639, label %land.lhs.true.641, label %lor.lhs.false.818

land.lhs.true.641:                                ; preds = %land.lhs.true.632
  %267 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld642, i32 0, i64 0
  %rtx644 = bitcast %union.rtunion_def* %arrayidx643 to %struct.rtx_def**
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rtx644, align 8
  %269 = bitcast %struct.rtx_def* %268 to i32*
  %bf.load645 = load i32, i32* %269, align 8
  %bf.lshr646 = lshr i32 %bf.load645, 16
  %bf.clear647 = and i32 %bf.lshr646, 255
  %idxprom648 = sext i32 %bf.clear647 to i64
  %arrayidx649 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom648
  %270 = load i8, i8* %arrayidx649, align 1
  %conv650 = zext i8 %270 to i32
  %271 = load i32, i32* @target_flags, align 4
  %and651 = and i32 %271, 33554432
  %tobool652 = icmp ne i32 %and651, 0
  %cond653 = select i1 %tobool652, i32 8, i32 4
  %cmp654 = icmp sgt i32 %conv650, %cond653
  br i1 %cmp654, label %land.lhs.true.656, label %lor.lhs.false.818

land.lhs.true.656:                                ; preds = %land.lhs.true.641
  %272 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld657, i32 0, i64 0
  %rtx659 = bitcast %union.rtunion_def* %arrayidx658 to %struct.rtx_def**
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rtx659, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %bf.load660 = load i32, i32* %274, align 8
  %bf.lshr661 = lshr i32 %bf.load660, 16
  %bf.clear662 = and i32 %bf.lshr661, 255
  %idxprom663 = sext i32 %bf.clear662 to i64
  %arrayidx664 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom663
  %275 = load i8, i8* %arrayidx664, align 1
  %conv665 = zext i8 %275 to i32
  %276 = load i32, i32* @target_flags, align 4
  %and666 = and i32 %276, 33554432
  %tobool667 = icmp ne i32 %and666, 0
  %cond668 = select i1 %tobool667, i32 8, i32 4
  %div669 = sdiv i32 %conv665, %cond668
  %277 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %277, i32 0, i32 1
  %arrayidx671 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld670, i32 0, i64 0
  %rtx672 = bitcast %union.rtunion_def* %arrayidx671 to %struct.rtx_def**
  %278 = load %struct.rtx_def*, %struct.rtx_def** %rtx672, align 8
  %fld673 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i32 0, i64 0
  %rtuint675 = bitcast %union.rtunion_def* %arrayidx674 to i32*
  %279 = load i32, i32* %rtuint675, align 4
  %cmp676 = icmp uge i32 %279, 8
  br i1 %cmp676, label %land.lhs.true.678, label %lor.lhs.false.687

land.lhs.true.678:                                ; preds = %land.lhs.true.656
  %280 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld679, i32 0, i64 0
  %rtx681 = bitcast %union.rtunion_def* %arrayidx680 to %struct.rtx_def**
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rtx681, align 8
  %fld682 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %281, i32 0, i32 1
  %arrayidx683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld682, i32 0, i64 0
  %rtuint684 = bitcast %union.rtunion_def* %arrayidx683 to i32*
  %282 = load i32, i32* %rtuint684, align 4
  %cmp685 = icmp ule i32 %282, 15
  br i1 %cmp685, label %cond.true.741, label %lor.lhs.false.687

lor.lhs.false.687:                                ; preds = %land.lhs.true.678, %land.lhs.true.656
  %283 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx689 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i32 0, i64 0
  %rtx690 = bitcast %union.rtunion_def* %arrayidx689 to %struct.rtx_def**
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rtx690, align 8
  %fld691 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx692 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld691, i32 0, i64 0
  %rtuint693 = bitcast %union.rtunion_def* %arrayidx692 to i32*
  %285 = load i32, i32* %rtuint693, align 4
  %cmp694 = icmp uge i32 %285, 21
  br i1 %cmp694, label %land.lhs.true.696, label %lor.lhs.false.705

land.lhs.true.696:                                ; preds = %lor.lhs.false.687
  %286 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 0
  %rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx699, align 8
  %fld700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld700, i32 0, i64 0
  %rtuint702 = bitcast %union.rtunion_def* %arrayidx701 to i32*
  %288 = load i32, i32* %rtuint702, align 4
  %cmp703 = icmp ule i32 %288, 28
  br i1 %cmp703, label %cond.true.741, label %lor.lhs.false.705

lor.lhs.false.705:                                ; preds = %land.lhs.true.696, %lor.lhs.false.687
  %289 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld706, i32 0, i64 0
  %rtx708 = bitcast %union.rtunion_def* %arrayidx707 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx708, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 0
  %rtuint711 = bitcast %union.rtunion_def* %arrayidx710 to i32*
  %291 = load i32, i32* %rtuint711, align 4
  %cmp712 = icmp uge i32 %291, 45
  br i1 %cmp712, label %land.lhs.true.714, label %lor.lhs.false.723

land.lhs.true.714:                                ; preds = %lor.lhs.false.705
  %292 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld715 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld715, i32 0, i64 0
  %rtx717 = bitcast %union.rtunion_def* %arrayidx716 to %struct.rtx_def**
  %293 = load %struct.rtx_def*, %struct.rtx_def** %rtx717, align 8
  %fld718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld718, i32 0, i64 0
  %rtuint720 = bitcast %union.rtunion_def* %arrayidx719 to i32*
  %294 = load i32, i32* %rtuint720, align 4
  %cmp721 = icmp ule i32 %294, 52
  br i1 %cmp721, label %cond.true.741, label %lor.lhs.false.723

lor.lhs.false.723:                                ; preds = %land.lhs.true.714, %lor.lhs.false.705
  %295 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i32 0, i64 0
  %rtx726 = bitcast %union.rtunion_def* %arrayidx725 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx726, align 8
  %fld727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i32 0, i64 0
  %rtuint729 = bitcast %union.rtunion_def* %arrayidx728 to i32*
  %297 = load i32, i32* %rtuint729, align 4
  %cmp730 = icmp uge i32 %297, 29
  br i1 %cmp730, label %land.lhs.true.732, label %cond.false.765

land.lhs.true.732:                                ; preds = %lor.lhs.false.723
  %298 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld733 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld733, i32 0, i64 0
  %rtx735 = bitcast %union.rtunion_def* %arrayidx734 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx735, align 8
  %fld736 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1
  %arrayidx737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld736, i32 0, i64 0
  %rtuint738 = bitcast %union.rtunion_def* %arrayidx737 to i32*
  %300 = load i32, i32* %rtuint738, align 4
  %cmp739 = icmp ule i32 %300, 36
  br i1 %cmp739, label %cond.true.741, label %cond.false.765

cond.true.741:                                    ; preds = %land.lhs.true.732, %land.lhs.true.714, %land.lhs.true.696, %land.lhs.true.678
  %301 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld742 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld742, i32 0, i64 0
  %rtx744 = bitcast %union.rtunion_def* %arrayidx743 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx744, align 8
  %303 = bitcast %struct.rtx_def* %302 to i32*
  %bf.load745 = load i32, i32* %303, align 8
  %bf.lshr746 = lshr i32 %bf.load745, 16
  %bf.clear747 = and i32 %bf.lshr746, 255
  %idxprom748 = sext i32 %bf.clear747 to i64
  %arrayidx749 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom748
  %304 = load i32, i32* %arrayidx749, align 4
  %cmp750 = icmp eq i32 %304, 5
  br i1 %cmp750, label %lor.end.763, label %lor.rhs.752

lor.rhs.752:                                      ; preds = %cond.true.741
  %305 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld753 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx754 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld753, i32 0, i64 0
  %rtx755 = bitcast %union.rtunion_def* %arrayidx754 to %struct.rtx_def**
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rtx755, align 8
  %307 = bitcast %struct.rtx_def* %306 to i32*
  %bf.load756 = load i32, i32* %307, align 8
  %bf.lshr757 = lshr i32 %bf.load756, 16
  %bf.clear758 = and i32 %bf.lshr757, 255
  %idxprom759 = sext i32 %bf.clear758 to i64
  %arrayidx760 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom759
  %308 = load i32, i32* %arrayidx760, align 4
  %cmp761 = icmp eq i32 %308, 6
  br label %lor.end.763

lor.end.763:                                      ; preds = %lor.rhs.752, %cond.true.741
  %309 = phi i1 [ true, %cond.true.741 ], [ %cmp761, %lor.rhs.752 ]
  %cond764 = select i1 %309, i32 2, i32 1
  br label %cond.end.814

cond.false.765:                                   ; preds = %land.lhs.true.732, %lor.lhs.false.723
  %310 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld766, i32 0, i64 0
  %rtx768 = bitcast %union.rtunion_def* %arrayidx767 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx768, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load769 = load i32, i32* %312, align 8
  %bf.lshr770 = lshr i32 %bf.load769, 16
  %bf.clear771 = and i32 %bf.lshr770, 255
  %cmp772 = icmp eq i32 %bf.clear771, 18
  br i1 %cmp772, label %cond.true.774, label %cond.false.778

cond.true.774:                                    ; preds = %cond.false.765
  %313 = load i32, i32* @target_flags, align 4
  %and775 = and i32 %313, 33554432
  %tobool776 = icmp ne i32 %and775, 0
  %cond777 = select i1 %tobool776, i32 2, i32 3
  br label %cond.end.812

cond.false.778:                                   ; preds = %cond.false.765
  %314 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld779 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1
  %arrayidx780 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld779, i32 0, i64 0
  %rtx781 = bitcast %union.rtunion_def* %arrayidx780 to %struct.rtx_def**
  %315 = load %struct.rtx_def*, %struct.rtx_def** %rtx781, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load782 = load i32, i32* %316, align 8
  %bf.lshr783 = lshr i32 %bf.load782, 16
  %bf.clear784 = and i32 %bf.lshr783, 255
  %cmp785 = icmp eq i32 %bf.clear784, 24
  br i1 %cmp785, label %cond.true.787, label %cond.false.791

cond.true.787:                                    ; preds = %cond.false.778
  %317 = load i32, i32* @target_flags, align 4
  %and788 = and i32 %317, 33554432
  %tobool789 = icmp ne i32 %and788, 0
  %cond790 = select i1 %tobool789, i32 4, i32 6
  br label %cond.end.810

cond.false.791:                                   ; preds = %cond.false.778
  %318 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld792 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx793 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld792, i32 0, i64 0
  %rtx794 = bitcast %union.rtunion_def* %arrayidx793 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx794, align 8
  %320 = bitcast %struct.rtx_def* %319 to i32*
  %bf.load795 = load i32, i32* %320, align 8
  %bf.lshr796 = lshr i32 %bf.load795, 16
  %bf.clear797 = and i32 %bf.lshr796, 255
  %idxprom798 = sext i32 %bf.clear797 to i64
  %arrayidx799 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom798
  %321 = load i8, i8* %arrayidx799, align 1
  %conv800 = zext i8 %321 to i32
  %322 = load i32, i32* @target_flags, align 4
  %and801 = and i32 %322, 33554432
  %tobool802 = icmp ne i32 %and801, 0
  %cond803 = select i1 %tobool802, i32 8, i32 4
  %add804 = add nsw i32 %conv800, %cond803
  %sub805 = sub nsw i32 %add804, 1
  %323 = load i32, i32* @target_flags, align 4
  %and806 = and i32 %323, 33554432
  %tobool807 = icmp ne i32 %and806, 0
  %cond808 = select i1 %tobool807, i32 8, i32 4
  %div809 = sdiv i32 %sub805, %cond808
  br label %cond.end.810

cond.end.810:                                     ; preds = %cond.false.791, %cond.true.787
  %cond811 = phi i32 [ %cond790, %cond.true.787 ], [ %div809, %cond.false.791 ]
  br label %cond.end.812

cond.end.812:                                     ; preds = %cond.end.810, %cond.true.774
  %cond813 = phi i32 [ %cond777, %cond.true.774 ], [ %cond811, %cond.end.810 ]
  br label %cond.end.814

cond.end.814:                                     ; preds = %cond.end.812, %lor.end.763
  %cond815 = phi i32 [ %cond764, %lor.end.763 ], [ %cond813, %cond.end.812 ]
  %cmp816 = icmp ne i32 %div669, %cond815
  br i1 %cmp816, label %if.then.864, label %lor.lhs.false.818

lor.lhs.false.818:                                ; preds = %cond.end.814, %land.lhs.true.641, %land.lhs.true.632
  %324 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call819 = call i32 @subreg_regno(%struct.rtx_def* %324)
  %325 = load i32, i32* %outmode.addr, align 4
  %call820 = call i32 @ix86_hard_regno_mode_ok(i32 %call819, i32 %325)
  %tobool821 = icmp ne i32 %call820, 0
  br i1 %tobool821, label %lor.lhs.false.822, label %if.then.864

lor.lhs.false.822:                                ; preds = %lor.lhs.false.818, %land.lhs.true.623, %lor.lhs.false.615
  %326 = load i32, i32* %class.addr, align 4
  %cmp823 = icmp eq i32 %326, 12
  br i1 %cmp823, label %land.lhs.true.831, label %lor.lhs.false.825

lor.lhs.false.825:                                ; preds = %lor.lhs.false.822
  %327 = load i32, i32* %class.addr, align 4
  %cmp826 = icmp eq i32 %327, 11
  br i1 %cmp826, label %land.lhs.true.831, label %lor.lhs.false.828

lor.lhs.false.828:                                ; preds = %lor.lhs.false.825
  %328 = load i32, i32* %class.addr, align 4
  %cmp829 = icmp eq i32 %328, 10
  br i1 %cmp829, label %land.lhs.true.831, label %land.end

land.lhs.true.831:                                ; preds = %lor.lhs.false.828, %lor.lhs.false.825, %lor.lhs.false.822
  %329 = load i32, i32* @target_flags, align 4
  %and832 = and i32 %329, 33554432
  %tobool833 = icmp ne i32 %and832, 0
  br i1 %tobool833, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true.831
  %330 = load i32, i32* %outmode.addr, align 4
  %cmp834 = icmp eq i32 %330, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.831, %lor.lhs.false.828
  %331 = phi i1 [ false, %land.lhs.true.831 ], [ false, %lor.lhs.false.828 ], [ %cmp834, %land.rhs ]
  %cond836 = select i1 %331, i32 8, i32 0
  %cmp837 = icmp ne i32 %cond836, 0
  br i1 %cmp837, label %land.lhs.true.839, label %if.end.889

land.lhs.true.839:                                ; preds = %land.end
  %332 = load i32, i32* %class.addr, align 4
  %cmp840 = icmp eq i32 %332, 12
  br i1 %cmp840, label %land.lhs.true.848, label %lor.lhs.false.842

lor.lhs.false.842:                                ; preds = %land.lhs.true.839
  %333 = load i32, i32* %class.addr, align 4
  %cmp843 = icmp eq i32 %333, 11
  br i1 %cmp843, label %land.lhs.true.848, label %lor.lhs.false.845

lor.lhs.false.845:                                ; preds = %lor.lhs.false.842
  %334 = load i32, i32* %class.addr, align 4
  %cmp846 = icmp eq i32 %334, 10
  br i1 %cmp846, label %land.lhs.true.848, label %land.end.860

land.lhs.true.848:                                ; preds = %lor.lhs.false.845, %lor.lhs.false.842, %land.lhs.true.839
  %335 = load i32, i32* @target_flags, align 4
  %and849 = and i32 %335, 33554432
  %tobool850 = icmp ne i32 %and849, 0
  br i1 %tobool850, label %land.end.860, label %land.rhs.851

land.rhs.851:                                     ; preds = %land.lhs.true.848
  %336 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld852 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1
  %arrayidx853 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld852, i32 0, i64 0
  %rtx854 = bitcast %union.rtunion_def* %arrayidx853 to %struct.rtx_def**
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rtx854, align 8
  %338 = bitcast %struct.rtx_def* %337 to i32*
  %bf.load855 = load i32, i32* %338, align 8
  %bf.lshr856 = lshr i32 %bf.load855, 16
  %bf.clear857 = and i32 %bf.lshr856, 255
  %cmp858 = icmp eq i32 %bf.clear857, 2
  br label %land.end.860

land.end.860:                                     ; preds = %land.rhs.851, %land.lhs.true.848, %lor.lhs.false.845
  %339 = phi i1 [ false, %land.lhs.true.848 ], [ false, %lor.lhs.false.845 ], [ %cmp858, %land.rhs.851 ]
  %cond861 = select i1 %339, i32 8, i32 0
  %cmp862 = icmp eq i32 %cond861, 0
  br i1 %cmp862, label %if.then.864, label %if.end.889

if.then.864:                                      ; preds = %land.end.860, %lor.lhs.false.818, %cond.end.814, %land.lhs.true.600, %lor.lhs.false.573, %lor.lhs.false.565, %lor.lhs.false.557, %lor.lhs.false.549, %lor.lhs.false.541, %lor.lhs.false.533, %lor.lhs.false.525, %lor.lhs.false.517, %land.lhs.true.509
  %340 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  store %struct.rtx_def** %340, %struct.rtx_def*** %out_subreg_loc, align 8
  %341 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld865 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx866 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld865, i32 0, i64 0
  %rtx867 = bitcast %union.rtunion_def* %arrayidx866 to %struct.rtx_def**
  store %struct.rtx_def** %rtx867, %struct.rtx_def*** %outloc.addr, align 8
  %342 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %343 = load %struct.rtx_def*, %struct.rtx_def** %342, align 8
  store %struct.rtx_def* %343, %struct.rtx_def** %out.addr, align 8
  %344 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %345 = bitcast %struct.rtx_def* %344 to i32*
  %bf.load868 = load i32, i32* %345, align 8
  %bf.clear869 = and i32 %bf.load868, 65535
  %cmp870 = icmp eq i32 %bf.clear869, 66
  br i1 %cmp870, label %land.lhs.true.872, label %if.end.885

land.lhs.true.872:                                ; preds = %if.then.864
  %346 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %347 = bitcast %struct.rtx_def* %346 to i32*
  %bf.load873 = load i32, i32* %347, align 8
  %bf.lshr874 = lshr i32 %bf.load873, 16
  %bf.clear875 = and i32 %bf.lshr874, 255
  %idxprom876 = sext i32 %bf.clear875 to i64
  %arrayidx877 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom876
  %348 = load i8, i8* %arrayidx877, align 1
  %conv878 = zext i8 %348 to i32
  %349 = load i32, i32* %outmode.addr, align 4
  %idxprom879 = sext i32 %349 to i64
  %arrayidx880 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom879
  %350 = load i8, i8* %arrayidx880, align 1
  %conv881 = zext i8 %350 to i32
  %cmp882 = icmp sgt i32 %conv878, %conv881
  br i1 %cmp882, label %if.then.884, label %if.end.885

if.then.884:                                      ; preds = %land.lhs.true.872
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1135, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.push_reload, i32 0, i32 0)) #5
  unreachable

if.end.885:                                       ; preds = %land.lhs.true.872, %if.then.864
  %351 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %352 = bitcast %struct.rtx_def* %351 to i32*
  %bf.load886 = load i32, i32* %352, align 8
  %bf.lshr887 = lshr i32 %bf.load886, 16
  %bf.clear888 = and i32 %bf.lshr887, 255
  store i32 %bf.clear888, i32* %outmode.addr, align 4
  br label %if.end.889

if.end.889:                                       ; preds = %if.end.885, %land.end.860, %land.end, %lor.lhs.false.507, %land.lhs.true.499, %if.end.496
  %353 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp890 = icmp ne %struct.rtx_def* %353, null
  br i1 %cmp890, label %land.lhs.true.892, label %if.end.935

land.lhs.true.892:                                ; preds = %if.end.889
  %354 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %355 = load i32, i32* %outmode.addr, align 4
  %call893 = call i32 @reload_inner_reg_of_subreg(%struct.rtx_def* %354, i32 %355)
  %tobool894 = icmp ne i32 %call893, 0
  br i1 %tobool894, label %if.then.895, label %if.end.935

if.then.895:                                      ; preds = %land.lhs.true.892
  store i32 1, i32* %dont_remove_subreg, align 4
  %356 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld896, i32 0, i64 0
  %rtx898 = bitcast %union.rtunion_def* %arrayidx897 to %struct.rtx_def**
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rtx898, align 8
  %358 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld899 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx900 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld899, i32 0, i64 0
  %rtx901 = bitcast %union.rtunion_def* %arrayidx900 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx901, align 8
  %360 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld902 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1
  %arrayidx903 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld902, i32 0, i64 0
  %rtx904 = bitcast %union.rtunion_def* %arrayidx903 to %struct.rtx_def**
  %361 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx906 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld905, i32 0, i64 0
  %rtx907 = bitcast %union.rtunion_def* %arrayidx906 to %struct.rtx_def**
  %362 = load i32, i32* %outmode.addr, align 4
  %363 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld908 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1
  %arrayidx909 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld908, i32 0, i64 0
  %rtx910 = bitcast %union.rtunion_def* %arrayidx909 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rtx910, align 8
  %fld911 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %364, i32 0, i32 1
  %arrayidx912 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld911, i32 0, i64 0
  %rtuint913 = bitcast %union.rtunion_def* %arrayidx912 to i32*
  %365 = load i32, i32* %rtuint913, align 4
  %366 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld914 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx915 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld914, i32 0, i64 0
  %rtx916 = bitcast %union.rtunion_def* %arrayidx915 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx916, align 8
  %368 = bitcast %struct.rtx_def* %367 to i32*
  %bf.load917 = load i32, i32* %368, align 8
  %bf.lshr918 = lshr i32 %bf.load917, 16
  %bf.clear919 = and i32 %bf.lshr918, 255
  %369 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld920 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx921 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld920, i32 0, i64 1
  %rtuint922 = bitcast %union.rtunion_def* %arrayidx921 to i32*
  %370 = load i32, i32* %rtuint922, align 4
  %371 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %372 = bitcast %struct.rtx_def* %371 to i32*
  %bf.load923 = load i32, i32* %372, align 8
  %bf.lshr924 = lshr i32 %bf.load923, 16
  %bf.clear925 = and i32 %bf.lshr924, 255
  %call926 = call i32 @subreg_regno_offset(i32 %365, i32 %bf.clear919, i32 %370, i32 %bf.clear925)
  %373 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld927 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1
  %arrayidx928 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld927, i32 0, i64 0
  %rtx929 = bitcast %union.rtunion_def* %arrayidx928 to %struct.rtx_def**
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rtx929, align 8
  %fld930 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1
  %arrayidx931 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld930, i32 0, i64 0
  %rtuint932 = bitcast %union.rtunion_def* %arrayidx931 to i32*
  %375 = load i32, i32* %rtuint932, align 4
  %call933 = call i32 @find_valid_class(i32 %362, i32 %call926, i32 %375)
  %376 = load i32, i32* %opnum.addr, align 4
  %call934 = call i32 @push_reload(%struct.rtx_def* %357, %struct.rtx_def* %359, %struct.rtx_def** %rtx904, %struct.rtx_def** %rtx907, i32 %call933, i32 0, i32 0, i32 0, i32 0, i32 %376, i32 9)
  br label %if.end.935

if.end.935:                                       ; preds = %if.then.895, %land.lhs.true.892, %if.end.889
  %377 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp936 = icmp ne %struct.rtx_def* %377, null
  br i1 %cmp936, label %land.lhs.true.938, label %if.end.963

land.lhs.true.938:                                ; preds = %if.end.935
  %378 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp939 = icmp ne %struct.rtx_def* %378, null
  br i1 %cmp939, label %land.lhs.true.941, label %if.end.963

land.lhs.true.941:                                ; preds = %land.lhs.true.938
  %379 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %380 = bitcast %struct.rtx_def* %379 to i32*
  %bf.load942 = load i32, i32* %380, align 8
  %bf.clear943 = and i32 %bf.load942, 65535
  %cmp944 = icmp eq i32 %bf.clear943, 66
  br i1 %cmp944, label %land.lhs.true.946, label %if.end.963

land.lhs.true.946:                                ; preds = %land.lhs.true.941
  %381 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %382 = bitcast %struct.rtx_def* %381 to i32*
  %bf.load947 = load i32, i32* %382, align 8
  %bf.clear948 = and i32 %bf.load947, 65535
  %cmp949 = icmp eq i32 %bf.clear948, 61
  br i1 %cmp949, label %land.lhs.true.956, label %lor.lhs.false.951

lor.lhs.false.951:                                ; preds = %land.lhs.true.946
  %383 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %384 = bitcast %struct.rtx_def* %383 to i32*
  %bf.load952 = load i32, i32* %384, align 8
  %bf.clear953 = and i32 %bf.load952, 65535
  %cmp954 = icmp eq i32 %bf.clear953, 66
  br i1 %cmp954, label %land.lhs.true.956, label %if.end.963

land.lhs.true.956:                                ; preds = %lor.lhs.false.951, %land.lhs.true.946
  %385 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %386 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld957 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %arrayidx958 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld957, i32 0, i64 0
  %rtx959 = bitcast %union.rtunion_def* %arrayidx958 to %struct.rtx_def**
  %387 = load %struct.rtx_def*, %struct.rtx_def** %rtx959, align 8
  %call960 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %385, %struct.rtx_def* %387)
  %tobool961 = icmp ne i32 %call960, 0
  br i1 %tobool961, label %if.then.962, label %if.end.963

if.then.962:                                      ; preds = %land.lhs.true.956
  store i32 1, i32* %dont_share, align 4
  br label %if.end.963

if.end.963:                                       ; preds = %if.then.962, %land.lhs.true.956, %lor.lhs.false.951, %land.lhs.true.941, %land.lhs.true.938, %if.end.935
  %388 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp964 = icmp ne %struct.rtx_def* %388, null
  br i1 %cmp964, label %land.lhs.true.966, label %if.end.996

land.lhs.true.966:                                ; preds = %if.end.963
  %389 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %390 = bitcast %struct.rtx_def* %389 to i32*
  %bf.load967 = load i32, i32* %390, align 8
  %bf.clear968 = and i32 %bf.load967, 65535
  %cmp969 = icmp eq i32 %bf.clear968, 63
  br i1 %cmp969, label %land.lhs.true.971, label %if.end.996

land.lhs.true.971:                                ; preds = %land.lhs.true.966
  %391 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %391, i32 0, i32 1
  %arrayidx973 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld972, i32 0, i64 0
  %rtx974 = bitcast %union.rtunion_def* %arrayidx973 to %struct.rtx_def**
  %392 = load %struct.rtx_def*, %struct.rtx_def** %rtx974, align 8
  %393 = bitcast %struct.rtx_def* %392 to i32*
  %bf.load975 = load i32, i32* %393, align 8
  %bf.clear976 = and i32 %bf.load975, 65535
  %cmp977 = icmp eq i32 %bf.clear976, 61
  br i1 %cmp977, label %land.lhs.true.979, label %if.end.996

land.lhs.true.979:                                ; preds = %land.lhs.true.971
  %394 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld980 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1
  %arrayidx981 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld980, i32 0, i64 0
  %rtx982 = bitcast %union.rtunion_def* %arrayidx981 to %struct.rtx_def**
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rtx982, align 8
  %fld983 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1
  %arrayidx984 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld983, i32 0, i64 0
  %rtuint985 = bitcast %union.rtunion_def* %arrayidx984 to i32*
  %396 = load i32, i32* %rtuint985, align 4
  %cmp986 = icmp ult i32 %396, 53
  br i1 %cmp986, label %land.lhs.true.988, label %if.end.996

land.lhs.true.988:                                ; preds = %land.lhs.true.979
  %397 = load i32, i32* %dont_remove_subreg, align 4
  %tobool989 = icmp ne i32 %397, 0
  br i1 %tobool989, label %if.end.996, label %if.then.990

if.then.990:                                      ; preds = %land.lhs.true.988
  %398 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %399 = bitcast %struct.rtx_def* %398 to i32*
  %bf.load991 = load i32, i32* %399, align 8
  %bf.lshr992 = lshr i32 %bf.load991, 16
  %bf.clear993 = and i32 %bf.lshr992, 255
  %400 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call994 = call i32 @subreg_regno(%struct.rtx_def* %400)
  %call995 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear993, i32 %call994)
  store %struct.rtx_def* %call995, %struct.rtx_def** %in.addr, align 8
  br label %if.end.996

if.end.996:                                       ; preds = %if.then.990, %land.lhs.true.988, %land.lhs.true.979, %land.lhs.true.971, %land.lhs.true.966, %if.end.963
  %401 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp997 = icmp ne %struct.rtx_def* %401, null
  br i1 %cmp997, label %land.lhs.true.999, label %if.end.1029

land.lhs.true.999:                                ; preds = %if.end.996
  %402 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %403 = bitcast %struct.rtx_def* %402 to i32*
  %bf.load1000 = load i32, i32* %403, align 8
  %bf.clear1001 = and i32 %bf.load1000, 65535
  %cmp1002 = icmp eq i32 %bf.clear1001, 63
  br i1 %cmp1002, label %land.lhs.true.1004, label %if.end.1029

land.lhs.true.1004:                               ; preds = %land.lhs.true.999
  %404 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1005 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1
  %arrayidx1006 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1005, i32 0, i64 0
  %rtx1007 = bitcast %union.rtunion_def* %arrayidx1006 to %struct.rtx_def**
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rtx1007, align 8
  %406 = bitcast %struct.rtx_def* %405 to i32*
  %bf.load1008 = load i32, i32* %406, align 8
  %bf.clear1009 = and i32 %bf.load1008, 65535
  %cmp1010 = icmp eq i32 %bf.clear1009, 61
  br i1 %cmp1010, label %land.lhs.true.1012, label %if.end.1029

land.lhs.true.1012:                               ; preds = %land.lhs.true.1004
  %407 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1013 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1
  %arrayidx1014 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1013, i32 0, i64 0
  %rtx1015 = bitcast %union.rtunion_def* %arrayidx1014 to %struct.rtx_def**
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rtx1015, align 8
  %fld1016 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %408, i32 0, i32 1
  %arrayidx1017 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1016, i32 0, i64 0
  %rtuint1018 = bitcast %union.rtunion_def* %arrayidx1017 to i32*
  %409 = load i32, i32* %rtuint1018, align 4
  %cmp1019 = icmp ult i32 %409, 53
  br i1 %cmp1019, label %land.lhs.true.1021, label %if.end.1029

land.lhs.true.1021:                               ; preds = %land.lhs.true.1012
  %410 = load i32, i32* %dont_remove_subreg, align 4
  %tobool1022 = icmp ne i32 %410, 0
  br i1 %tobool1022, label %if.end.1029, label %if.then.1023

if.then.1023:                                     ; preds = %land.lhs.true.1021
  %411 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %412 = bitcast %struct.rtx_def* %411 to i32*
  %bf.load1024 = load i32, i32* %412, align 8
  %bf.lshr1025 = lshr i32 %bf.load1024, 16
  %bf.clear1026 = and i32 %bf.lshr1025, 255
  %413 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call1027 = call i32 @subreg_regno(%struct.rtx_def* %413)
  %call1028 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear1026, i32 %call1027)
  store %struct.rtx_def* %call1028, %struct.rtx_def** %out.addr, align 8
  br label %if.end.1029

if.end.1029:                                      ; preds = %if.then.1023, %land.lhs.true.1021, %land.lhs.true.1012, %land.lhs.true.1004, %land.lhs.true.999, %if.end.996
  %414 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1030 = icmp ne %struct.rtx_def* %414, null
  br i1 %cmp1030, label %if.then.1032, label %if.end.1034

if.then.1032:                                     ; preds = %if.end.1029
  %415 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %416 = load i32, i32* %class.addr, align 4
  %call1033 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %415, i32 %416)
  store i32 %call1033, i32* %class.addr, align 4
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.then.1032, %if.end.1029
  %417 = load %struct.rtx_def**, %struct.rtx_def*** %in_subreg_loc, align 8
  %tobool1035 = icmp ne %struct.rtx_def** %417, null
  br i1 %tobool1035, label %if.then.1036, label %if.else

if.then.1036:                                     ; preds = %if.end.1034
  %418 = load i32, i32* %inmode.addr, align 4
  %cmp1037 = icmp eq i32 %418, 2
  br i1 %cmp1037, label %land.lhs.true.1039, label %cond.false.1055

land.lhs.true.1039:                               ; preds = %if.then.1036
  %419 = load i32, i32* @target_flags, align 4
  %and1040 = and i32 %419, 33554432
  %tobool1041 = icmp ne i32 %and1040, 0
  br i1 %tobool1041, label %cond.false.1055, label %land.lhs.true.1042

land.lhs.true.1042:                               ; preds = %land.lhs.true.1039
  %420 = load i32, i32* %class.addr, align 4
  %cmp1043 = icmp eq i32 %420, 24
  br i1 %cmp1043, label %cond.true.1054, label %lor.lhs.false.1045

lor.lhs.false.1045:                               ; preds = %land.lhs.true.1042
  %421 = load i32, i32* %class.addr, align 4
  %cmp1046 = icmp eq i32 %421, 12
  br i1 %cmp1046, label %cond.true.1054, label %lor.lhs.false.1048

lor.lhs.false.1048:                               ; preds = %lor.lhs.false.1045
  %422 = load i32, i32* %class.addr, align 4
  %cmp1049 = icmp eq i32 %422, 11
  br i1 %cmp1049, label %cond.true.1054, label %lor.lhs.false.1051

lor.lhs.false.1051:                               ; preds = %lor.lhs.false.1048
  %423 = load i32, i32* %class.addr, align 4
  %cmp1052 = icmp eq i32 %423, 10
  br i1 %cmp1052, label %cond.true.1054, label %cond.false.1055

cond.true.1054:                                   ; preds = %lor.lhs.false.1051, %lor.lhs.false.1048, %lor.lhs.false.1045, %land.lhs.true.1042
  br label %cond.end.1056

cond.false.1055:                                  ; preds = %lor.lhs.false.1051, %land.lhs.true.1039, %if.then.1036
  %424 = load i32, i32* %class.addr, align 4
  br label %cond.end.1056

cond.end.1056:                                    ; preds = %cond.false.1055, %cond.true.1054
  %cond1057 = phi i32 [ 8, %cond.true.1054 ], [ %424, %cond.false.1055 ]
  store i32 %cond1057, i32* %class.addr, align 4
  br label %if.end.1094

if.else:                                          ; preds = %if.end.1034
  %425 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1058 = icmp ne %struct.rtx_def* %425, null
  br i1 %cmp1058, label %land.lhs.true.1060, label %if.end.1093

land.lhs.true.1060:                               ; preds = %if.else
  %426 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %427 = bitcast %struct.rtx_def* %426 to i32*
  %bf.load1061 = load i32, i32* %427, align 8
  %bf.clear1062 = and i32 %bf.load1061, 65535
  %cmp1063 = icmp eq i32 %bf.clear1062, 63
  br i1 %cmp1063, label %if.then.1065, label %if.end.1093

if.then.1065:                                     ; preds = %land.lhs.true.1060
  %428 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld1066 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %428, i32 0, i32 1
  %arrayidx1067 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1066, i32 0, i64 0
  %rtx1068 = bitcast %union.rtunion_def* %arrayidx1067 to %struct.rtx_def**
  %429 = load %struct.rtx_def*, %struct.rtx_def** %rtx1068, align 8
  %430 = bitcast %struct.rtx_def* %429 to i32*
  %bf.load1069 = load i32, i32* %430, align 8
  %bf.lshr1070 = lshr i32 %bf.load1069, 16
  %bf.clear1071 = and i32 %bf.lshr1070, 255
  %cmp1072 = icmp eq i32 %bf.clear1071, 2
  br i1 %cmp1072, label %land.lhs.true.1074, label %cond.false.1090

land.lhs.true.1074:                               ; preds = %if.then.1065
  %431 = load i32, i32* @target_flags, align 4
  %and1075 = and i32 %431, 33554432
  %tobool1076 = icmp ne i32 %and1075, 0
  br i1 %tobool1076, label %cond.false.1090, label %land.lhs.true.1077

land.lhs.true.1077:                               ; preds = %land.lhs.true.1074
  %432 = load i32, i32* %class.addr, align 4
  %cmp1078 = icmp eq i32 %432, 24
  br i1 %cmp1078, label %cond.true.1089, label %lor.lhs.false.1080

lor.lhs.false.1080:                               ; preds = %land.lhs.true.1077
  %433 = load i32, i32* %class.addr, align 4
  %cmp1081 = icmp eq i32 %433, 12
  br i1 %cmp1081, label %cond.true.1089, label %lor.lhs.false.1083

lor.lhs.false.1083:                               ; preds = %lor.lhs.false.1080
  %434 = load i32, i32* %class.addr, align 4
  %cmp1084 = icmp eq i32 %434, 11
  br i1 %cmp1084, label %cond.true.1089, label %lor.lhs.false.1086

lor.lhs.false.1086:                               ; preds = %lor.lhs.false.1083
  %435 = load i32, i32* %class.addr, align 4
  %cmp1087 = icmp eq i32 %435, 10
  br i1 %cmp1087, label %cond.true.1089, label %cond.false.1090

cond.true.1089:                                   ; preds = %lor.lhs.false.1086, %lor.lhs.false.1083, %lor.lhs.false.1080, %land.lhs.true.1077
  br label %cond.end.1091

cond.false.1090:                                  ; preds = %lor.lhs.false.1086, %land.lhs.true.1074, %if.then.1065
  %436 = load i32, i32* %class.addr, align 4
  br label %cond.end.1091

cond.end.1091:                                    ; preds = %cond.false.1090, %cond.true.1089
  %cond1092 = phi i32 [ 8, %cond.true.1089 ], [ %436, %cond.false.1090 ]
  store i32 %cond1092, i32* %class.addr, align 4
  br label %if.end.1093

if.end.1093:                                      ; preds = %cond.end.1091, %land.lhs.true.1060, %if.else
  br label %if.end.1094

if.end.1094:                                      ; preds = %if.end.1093, %cond.end.1056
  %437 = load %struct.rtx_def**, %struct.rtx_def*** %out_subreg_loc, align 8
  %tobool1095 = icmp ne %struct.rtx_def** %437, null
  br i1 %tobool1095, label %if.then.1096, label %if.end.1118

if.then.1096:                                     ; preds = %if.end.1094
  %438 = load i32, i32* %outmode.addr, align 4
  %cmp1097 = icmp eq i32 %438, 2
  br i1 %cmp1097, label %land.lhs.true.1099, label %cond.false.1115

land.lhs.true.1099:                               ; preds = %if.then.1096
  %439 = load i32, i32* @target_flags, align 4
  %and1100 = and i32 %439, 33554432
  %tobool1101 = icmp ne i32 %and1100, 0
  br i1 %tobool1101, label %cond.false.1115, label %land.lhs.true.1102

land.lhs.true.1102:                               ; preds = %land.lhs.true.1099
  %440 = load i32, i32* %class.addr, align 4
  %cmp1103 = icmp eq i32 %440, 24
  br i1 %cmp1103, label %cond.true.1114, label %lor.lhs.false.1105

lor.lhs.false.1105:                               ; preds = %land.lhs.true.1102
  %441 = load i32, i32* %class.addr, align 4
  %cmp1106 = icmp eq i32 %441, 12
  br i1 %cmp1106, label %cond.true.1114, label %lor.lhs.false.1108

lor.lhs.false.1108:                               ; preds = %lor.lhs.false.1105
  %442 = load i32, i32* %class.addr, align 4
  %cmp1109 = icmp eq i32 %442, 11
  br i1 %cmp1109, label %cond.true.1114, label %lor.lhs.false.1111

lor.lhs.false.1111:                               ; preds = %lor.lhs.false.1108
  %443 = load i32, i32* %class.addr, align 4
  %cmp1112 = icmp eq i32 %443, 10
  br i1 %cmp1112, label %cond.true.1114, label %cond.false.1115

cond.true.1114:                                   ; preds = %lor.lhs.false.1111, %lor.lhs.false.1108, %lor.lhs.false.1105, %land.lhs.true.1102
  br label %cond.end.1116

cond.false.1115:                                  ; preds = %lor.lhs.false.1111, %land.lhs.true.1099, %if.then.1096
  %444 = load i32, i32* %class.addr, align 4
  br label %cond.end.1116

cond.end.1116:                                    ; preds = %cond.false.1115, %cond.true.1114
  %cond1117 = phi i32 [ 8, %cond.true.1114 ], [ %444, %cond.false.1115 ]
  store i32 %cond1117, i32* %class.addr, align 4
  br label %if.end.1118

if.end.1118:                                      ; preds = %cond.end.1116, %if.end.1094
  %445 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1119 = icmp ne %struct.rtx_def* %445, null
  br i1 %cmp1119, label %land.lhs.true.1121, label %if.end.1154

land.lhs.true.1121:                               ; preds = %if.end.1118
  %446 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %447 = bitcast %struct.rtx_def* %446 to i32*
  %bf.load1122 = load i32, i32* %447, align 8
  %bf.clear1123 = and i32 %bf.load1122, 65535
  %cmp1124 = icmp eq i32 %bf.clear1123, 63
  br i1 %cmp1124, label %if.then.1126, label %if.end.1154

if.then.1126:                                     ; preds = %land.lhs.true.1121
  %448 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %arrayidx1128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1127, i32 0, i64 0
  %rtx1129 = bitcast %union.rtunion_def* %arrayidx1128 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rtx1129, align 8
  %450 = bitcast %struct.rtx_def* %449 to i32*
  %bf.load1130 = load i32, i32* %450, align 8
  %bf.lshr1131 = lshr i32 %bf.load1130, 16
  %bf.clear1132 = and i32 %bf.lshr1131, 255
  %cmp1133 = icmp eq i32 %bf.clear1132, 2
  br i1 %cmp1133, label %land.lhs.true.1135, label %cond.false.1151

land.lhs.true.1135:                               ; preds = %if.then.1126
  %451 = load i32, i32* @target_flags, align 4
  %and1136 = and i32 %451, 33554432
  %tobool1137 = icmp ne i32 %and1136, 0
  br i1 %tobool1137, label %cond.false.1151, label %land.lhs.true.1138

land.lhs.true.1138:                               ; preds = %land.lhs.true.1135
  %452 = load i32, i32* %class.addr, align 4
  %cmp1139 = icmp eq i32 %452, 24
  br i1 %cmp1139, label %cond.true.1150, label %lor.lhs.false.1141

lor.lhs.false.1141:                               ; preds = %land.lhs.true.1138
  %453 = load i32, i32* %class.addr, align 4
  %cmp1142 = icmp eq i32 %453, 12
  br i1 %cmp1142, label %cond.true.1150, label %lor.lhs.false.1144

lor.lhs.false.1144:                               ; preds = %lor.lhs.false.1141
  %454 = load i32, i32* %class.addr, align 4
  %cmp1145 = icmp eq i32 %454, 11
  br i1 %cmp1145, label %cond.true.1150, label %lor.lhs.false.1147

lor.lhs.false.1147:                               ; preds = %lor.lhs.false.1144
  %455 = load i32, i32* %class.addr, align 4
  %cmp1148 = icmp eq i32 %455, 10
  br i1 %cmp1148, label %cond.true.1150, label %cond.false.1151

cond.true.1150:                                   ; preds = %lor.lhs.false.1147, %lor.lhs.false.1144, %lor.lhs.false.1141, %land.lhs.true.1138
  br label %cond.end.1152

cond.false.1151:                                  ; preds = %lor.lhs.false.1147, %land.lhs.true.1135, %if.then.1126
  %456 = load i32, i32* %class.addr, align 4
  br label %cond.end.1152

cond.end.1152:                                    ; preds = %cond.false.1151, %cond.true.1150
  %cond1153 = phi i32 [ 8, %cond.true.1150 ], [ %456, %cond.false.1151 ]
  store i32 %cond1153, i32* %class.addr, align 4
  br label %if.end.1154

if.end.1154:                                      ; preds = %cond.end.1152, %land.lhs.true.1121, %if.end.1118
  %457 = load i32, i32* @this_insn_is_asm, align 4
  %tobool1155 = icmp ne i32 %457, 0
  br i1 %tobool1155, label %if.then.1156, label %if.end.1283

if.then.1156:                                     ; preds = %if.end.1154
  %458 = load i32, i32* %inmode.addr, align 4
  %idxprom1157 = sext i32 %458 to i64
  %arrayidx1158 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1157
  %459 = load i8, i8* %arrayidx1158, align 1
  %conv1159 = zext i8 %459 to i32
  %460 = load i32, i32* %outmode.addr, align 4
  %idxprom1160 = sext i32 %460 to i64
  %arrayidx1161 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1160
  %461 = load i8, i8* %arrayidx1161, align 1
  %conv1162 = zext i8 %461 to i32
  %cmp1163 = icmp sgt i32 %conv1159, %conv1162
  br i1 %cmp1163, label %if.then.1165, label %if.else.1166

if.then.1165:                                     ; preds = %if.then.1156
  %462 = load i32, i32* %inmode.addr, align 4
  store i32 %462, i32* %mode, align 4
  br label %if.end.1167

if.else.1166:                                     ; preds = %if.then.1156
  %463 = load i32, i32* %outmode.addr, align 4
  store i32 %463, i32* %mode, align 4
  br label %if.end.1167

if.end.1167:                                      ; preds = %if.else.1166, %if.then.1165
  %464 = load i32, i32* %mode, align 4
  %cmp1168 = icmp eq i32 %464, 0
  br i1 %cmp1168, label %if.then.1170, label %if.end.1179

if.then.1170:                                     ; preds = %if.end.1167
  %465 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %465, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0))
  %466 = load i32, i32* @word_mode, align 4
  store i32 %466, i32* %mode, align 4
  %467 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1171 = icmp ne %struct.rtx_def* %467, null
  br i1 %cmp1171, label %if.then.1173, label %if.end.1174

if.then.1173:                                     ; preds = %if.then.1170
  %468 = load i32, i32* @word_mode, align 4
  store i32 %468, i32* %inmode.addr, align 4
  br label %if.end.1174

if.end.1174:                                      ; preds = %if.then.1173, %if.then.1170
  %469 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1175 = icmp ne %struct.rtx_def* %469, null
  br i1 %cmp1175, label %if.then.1177, label %if.end.1178

if.then.1177:                                     ; preds = %if.end.1174
  %470 = load i32, i32* @word_mode, align 4
  store i32 %470, i32* %outmode.addr, align 4
  br label %if.end.1178

if.end.1178:                                      ; preds = %if.then.1177, %if.end.1174
  br label %if.end.1179

if.end.1179:                                      ; preds = %if.end.1178, %if.end.1167
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.1276, %if.end.1179
  %471 = load i32, i32* %i, align 4
  %cmp1180 = icmp slt i32 %471, 53
  br i1 %cmp1180, label %for.body, label %for.end.1278

for.body:                                         ; preds = %for.cond
  %472 = load i32, i32* %i, align 4
  %473 = load i32, i32* %mode, align 4
  %call1182 = call i32 @ix86_hard_regno_mode_ok(i32 %472, i32 %473)
  %tobool1183 = icmp ne i32 %call1182, 0
  br i1 %tobool1183, label %land.lhs.true.1184, label %if.end.1275

land.lhs.true.1184:                               ; preds = %for.body
  %474 = load i32, i32* %class.addr, align 4
  %idxprom1185 = sext i32 %474 to i64
  %arrayidx1186 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom1185
  %475 = load i64, i64* %arrayidx1186, align 8
  %476 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %476 to i64
  %shl = shl i64 1, %sh_prom
  %and1187 = and i64 %475, %shl
  %tobool1188 = icmp ne i64 %and1187, 0
  br i1 %tobool1188, label %if.then.1189, label %if.end.1275

if.then.1189:                                     ; preds = %land.lhs.true.1184
  %477 = load i32, i32* %i, align 4
  %cmp1190 = icmp sge i32 %477, 8
  br i1 %cmp1190, label %land.lhs.true.1192, label %lor.lhs.false.1195

land.lhs.true.1192:                               ; preds = %if.then.1189
  %478 = load i32, i32* %i, align 4
  %cmp1193 = icmp sle i32 %478, 15
  br i1 %cmp1193, label %cond.true.1213, label %lor.lhs.false.1195

lor.lhs.false.1195:                               ; preds = %land.lhs.true.1192, %if.then.1189
  %479 = load i32, i32* %i, align 4
  %cmp1196 = icmp sge i32 %479, 21
  br i1 %cmp1196, label %land.lhs.true.1198, label %lor.lhs.false.1201

land.lhs.true.1198:                               ; preds = %lor.lhs.false.1195
  %480 = load i32, i32* %i, align 4
  %cmp1199 = icmp sle i32 %480, 28
  br i1 %cmp1199, label %cond.true.1213, label %lor.lhs.false.1201

lor.lhs.false.1201:                               ; preds = %land.lhs.true.1198, %lor.lhs.false.1195
  %481 = load i32, i32* %i, align 4
  %cmp1202 = icmp sge i32 %481, 45
  br i1 %cmp1202, label %land.lhs.true.1204, label %lor.lhs.false.1207

land.lhs.true.1204:                               ; preds = %lor.lhs.false.1201
  %482 = load i32, i32* %i, align 4
  %cmp1205 = icmp sle i32 %482, 52
  br i1 %cmp1205, label %cond.true.1213, label %lor.lhs.false.1207

lor.lhs.false.1207:                               ; preds = %land.lhs.true.1204, %lor.lhs.false.1201
  %483 = load i32, i32* %i, align 4
  %cmp1208 = icmp sge i32 %483, 29
  br i1 %cmp1208, label %land.lhs.true.1210, label %cond.false.1225

land.lhs.true.1210:                               ; preds = %lor.lhs.false.1207
  %484 = load i32, i32* %i, align 4
  %cmp1211 = icmp sle i32 %484, 36
  br i1 %cmp1211, label %cond.true.1213, label %cond.false.1225

cond.true.1213:                                   ; preds = %land.lhs.true.1210, %land.lhs.true.1204, %land.lhs.true.1198, %land.lhs.true.1192
  %485 = load i32, i32* %mode, align 4
  %idxprom1214 = sext i32 %485 to i64
  %arrayidx1215 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1214
  %486 = load i32, i32* %arrayidx1215, align 4
  %cmp1216 = icmp eq i32 %486, 5
  br i1 %cmp1216, label %lor.end.1223, label %lor.rhs.1218

lor.rhs.1218:                                     ; preds = %cond.true.1213
  %487 = load i32, i32* %mode, align 4
  %idxprom1219 = sext i32 %487 to i64
  %arrayidx1220 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1219
  %488 = load i32, i32* %arrayidx1220, align 4
  %cmp1221 = icmp eq i32 %488, 6
  br label %lor.end.1223

lor.end.1223:                                     ; preds = %lor.rhs.1218, %cond.true.1213
  %489 = phi i1 [ true, %cond.true.1213 ], [ %cmp1221, %lor.rhs.1218 ]
  %cond1224 = select i1 %489, i32 2, i32 1
  br label %cond.end.1256

cond.false.1225:                                  ; preds = %land.lhs.true.1210, %lor.lhs.false.1207
  %490 = load i32, i32* %mode, align 4
  %cmp1226 = icmp eq i32 %490, 18
  br i1 %cmp1226, label %cond.true.1228, label %cond.false.1232

cond.true.1228:                                   ; preds = %cond.false.1225
  %491 = load i32, i32* @target_flags, align 4
  %and1229 = and i32 %491, 33554432
  %tobool1230 = icmp ne i32 %and1229, 0
  %cond1231 = select i1 %tobool1230, i32 2, i32 3
  br label %cond.end.1254

cond.false.1232:                                  ; preds = %cond.false.1225
  %492 = load i32, i32* %mode, align 4
  %cmp1233 = icmp eq i32 %492, 24
  br i1 %cmp1233, label %cond.true.1235, label %cond.false.1239

cond.true.1235:                                   ; preds = %cond.false.1232
  %493 = load i32, i32* @target_flags, align 4
  %and1236 = and i32 %493, 33554432
  %tobool1237 = icmp ne i32 %and1236, 0
  %cond1238 = select i1 %tobool1237, i32 4, i32 6
  br label %cond.end.1252

cond.false.1239:                                  ; preds = %cond.false.1232
  %494 = load i32, i32* %mode, align 4
  %idxprom1240 = sext i32 %494 to i64
  %arrayidx1241 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1240
  %495 = load i8, i8* %arrayidx1241, align 1
  %conv1242 = zext i8 %495 to i32
  %496 = load i32, i32* @target_flags, align 4
  %and1243 = and i32 %496, 33554432
  %tobool1244 = icmp ne i32 %and1243, 0
  %cond1245 = select i1 %tobool1244, i32 8, i32 4
  %add1246 = add nsw i32 %conv1242, %cond1245
  %sub1247 = sub nsw i32 %add1246, 1
  %497 = load i32, i32* @target_flags, align 4
  %and1248 = and i32 %497, 33554432
  %tobool1249 = icmp ne i32 %and1248, 0
  %cond1250 = select i1 %tobool1249, i32 8, i32 4
  %div1251 = sdiv i32 %sub1247, %cond1250
  br label %cond.end.1252

cond.end.1252:                                    ; preds = %cond.false.1239, %cond.true.1235
  %cond1253 = phi i32 [ %cond1238, %cond.true.1235 ], [ %div1251, %cond.false.1239 ]
  br label %cond.end.1254

cond.end.1254:                                    ; preds = %cond.end.1252, %cond.true.1228
  %cond1255 = phi i32 [ %cond1231, %cond.true.1228 ], [ %cond1253, %cond.end.1252 ]
  br label %cond.end.1256

cond.end.1256:                                    ; preds = %cond.end.1254, %lor.end.1223
  %cond1257 = phi i32 [ %cond1224, %lor.end.1223 ], [ %cond1255, %cond.end.1254 ]
  store i32 %cond1257, i32* %nregs, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond.1258

for.cond.1258:                                    ; preds = %for.inc, %cond.end.1256
  %498 = load i32, i32* %j, align 4
  %499 = load i32, i32* %nregs, align 4
  %cmp1259 = icmp slt i32 %498, %499
  br i1 %cmp1259, label %for.body.1261, label %for.end

for.body.1261:                                    ; preds = %for.cond.1258
  %500 = load i32, i32* %class.addr, align 4
  %idxprom1262 = sext i32 %500 to i64
  %arrayidx1263 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom1262
  %501 = load i64, i64* %arrayidx1263, align 8
  %502 = load i32, i32* %i, align 4
  %503 = load i32, i32* %j, align 4
  %add1264 = add nsw i32 %502, %503
  %sh_prom1265 = zext i32 %add1264 to i64
  %shl1266 = shl i64 1, %sh_prom1265
  %and1267 = and i64 %501, %shl1266
  %tobool1268 = icmp ne i64 %and1267, 0
  br i1 %tobool1268, label %if.end.1270, label %if.then.1269

if.then.1269:                                     ; preds = %for.body.1261
  br label %for.end

if.end.1270:                                      ; preds = %for.body.1261
  br label %for.inc

for.inc:                                          ; preds = %if.end.1270
  %504 = load i32, i32* %j, align 4
  %inc = add nsw i32 %504, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.1258

for.end:                                          ; preds = %if.then.1269, %for.cond.1258
  %505 = load i32, i32* %j, align 4
  %506 = load i32, i32* %nregs, align 4
  %cmp1271 = icmp eq i32 %505, %506
  br i1 %cmp1271, label %if.then.1273, label %if.end.1274

if.then.1273:                                     ; preds = %for.end
  br label %for.end.1278

if.end.1274:                                      ; preds = %for.end
  br label %if.end.1275

if.end.1275:                                      ; preds = %if.end.1274, %land.lhs.true.1184, %for.body
  br label %for.inc.1276

for.inc.1276:                                     ; preds = %if.end.1275
  %507 = load i32, i32* %i, align 4
  %inc1277 = add nsw i32 %507, 1
  store i32 %inc1277, i32* %i, align 4
  br label %for.cond

for.end.1278:                                     ; preds = %if.then.1273, %for.cond
  %508 = load i32, i32* %i, align 4
  %cmp1279 = icmp eq i32 %508, 53
  br i1 %cmp1279, label %if.then.1281, label %if.end.1282

if.then.1281:                                     ; preds = %for.end.1278
  %509 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %509, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0))
  store i32 24, i32* %class.addr, align 4
  br label %if.end.1282

if.end.1282:                                      ; preds = %if.then.1281, %for.end.1278
  br label %if.end.1283

if.end.1283:                                      ; preds = %if.end.1282, %if.end.1154
  %510 = load i32, i32* %class.addr, align 4
  %cmp1284 = icmp eq i32 %510, 0
  br i1 %cmp1284, label %land.lhs.true.1286, label %if.end.1293

land.lhs.true.1286:                               ; preds = %if.end.1283
  %511 = load i32, i32* %optional.addr, align 4
  %cmp1287 = icmp eq i32 %511, 0
  br i1 %cmp1287, label %if.then.1292, label %lor.lhs.false.1289

lor.lhs.false.1289:                               ; preds = %land.lhs.true.1286
  %512 = load i32, i32* %type.addr, align 4
  %cmp1290 = icmp ne i32 %512, 1
  br i1 %cmp1290, label %if.then.1292, label %if.end.1293

if.then.1292:                                     ; preds = %lor.lhs.false.1289, %land.lhs.true.1286
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 1258, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.push_reload, i32 0, i32 0)) #5
  unreachable

if.end.1293:                                      ; preds = %lor.lhs.false.1289, %if.end.1283
  %513 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %514 = load i32, i32* %class.addr, align 4
  %515 = load i32, i32* %type.addr, align 4
  %516 = load i32, i32* %opnum.addr, align 4
  %517 = load i32, i32* %dont_share, align 4
  %call1294 = call i32 @find_reusable_reload(%struct.rtx_def** %in.addr, %struct.rtx_def* %513, i32 %514, i32 %515, i32 %516, i32 %517)
  store i32 %call1294, i32* %i, align 4
  %518 = load i32, i32* %i, align 4
  %519 = load i32, i32* @n_reloads, align 4
  %cmp1295 = icmp eq i32 %518, %519
  br i1 %cmp1295, label %if.then.1297, label %if.else.1421

if.then.1297:                                     ; preds = %if.end.1293
  %520 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1298 = icmp ne %struct.rtx_def* %520, null
  br i1 %cmp1298, label %land.lhs.true.1300, label %if.end.1307

land.lhs.true.1300:                               ; preds = %if.then.1297
  %521 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %522 = bitcast %struct.rtx_def* %521 to i32*
  %bf.load1301 = load i32, i32* %522, align 8
  %bf.clear1302 = and i32 %bf.load1301, 65535
  %cmp1303 = icmp ne i32 %bf.clear1302, 62
  br i1 %cmp1303, label %if.then.1305, label %if.end.1307

if.then.1305:                                     ; preds = %land.lhs.true.1300
  %523 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %524 = load i32, i32* %opnum.addr, align 4
  %525 = load i32, i32* %optional.addr, align 4
  %526 = load i32, i32* %class.addr, align 4
  %527 = load i32, i32* %outmode.addr, align 4
  %528 = load i32, i32* %type.addr, align 4
  %call1306 = call i32 @push_secondary_reload(i32 0, %struct.rtx_def* %523, i32 %524, i32 %525, i32 %526, i32 %527, i32 %528, i32* %secondary_out_icode)
  store i32 %call1306, i32* %secondary_out_reload, align 4
  br label %if.end.1307

if.end.1307:                                      ; preds = %if.then.1305, %land.lhs.true.1300, %if.then.1297
  %529 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1308 = icmp ne %struct.rtx_def* %529, null
  br i1 %cmp1308, label %land.lhs.true.1310, label %if.end.1331

land.lhs.true.1310:                               ; preds = %if.end.1307
  %530 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %531 = bitcast %struct.rtx_def* %530 to i32*
  %bf.load1311 = load i32, i32* %531, align 8
  %bf.clear1312 = and i32 %bf.load1311, 65535
  %cmp1313 = icmp eq i32 %bf.clear1312, 61
  br i1 %cmp1313, label %land.lhs.true.1315, label %if.end.1331

land.lhs.true.1315:                               ; preds = %land.lhs.true.1310
  %532 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld1316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %532, i32 0, i32 1
  %arrayidx1317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1316, i32 0, i64 0
  %rtuint1318 = bitcast %union.rtunion_def* %arrayidx1317 to i32*
  %533 = load i32, i32* %rtuint1318, align 4
  %cmp1319 = icmp ult i32 %533, 53
  br i1 %cmp1319, label %land.lhs.true.1321, label %if.end.1331

land.lhs.true.1321:                               ; preds = %land.lhs.true.1315
  %534 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld1322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %534, i32 0, i32 1
  %arrayidx1323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1322, i32 0, i64 0
  %rtuint1324 = bitcast %union.rtunion_def* %arrayidx1323 to i32*
  %535 = load i32, i32* %rtuint1324, align 4
  %idxprom1325 = zext i32 %535 to i64
  %arrayidx1326 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom1325
  %536 = load i32, i32* %arrayidx1326, align 4
  %537 = load i32, i32* %class.addr, align 4
  %538 = load i32, i32* %inmode.addr, align 4
  %call1327 = call i32 @ix86_secondary_memory_needed(i32 %536, i32 %537, i32 %538, i32 1)
  %tobool1328 = icmp ne i32 %call1327, 0
  br i1 %tobool1328, label %if.then.1329, label %if.end.1331

if.then.1329:                                     ; preds = %land.lhs.true.1321
  %539 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %540 = load i32, i32* %inmode.addr, align 4
  %541 = load i32, i32* %opnum.addr, align 4
  %542 = load i32, i32* %type.addr, align 4
  %call1330 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %539, i32 %540, i32 %541, i32 %542)
  br label %if.end.1331

if.end.1331:                                      ; preds = %if.then.1329, %land.lhs.true.1321, %land.lhs.true.1315, %land.lhs.true.1310, %if.end.1307
  %543 = load i32, i32* @n_reloads, align 4
  store i32 %543, i32* %i, align 4
  %544 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %545 = load i32, i32* %i, align 4
  %idxprom1332 = sext i32 %545 to i64
  %arrayidx1333 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1332
  %in1334 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1333, i32 0, i32 0
  store %struct.rtx_def* %544, %struct.rtx_def** %in1334, align 8
  %546 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %547 = load i32, i32* %i, align 4
  %idxprom1335 = sext i32 %547 to i64
  %arrayidx1336 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1335
  %out1337 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1336, i32 0, i32 1
  store %struct.rtx_def* %546, %struct.rtx_def** %out1337, align 8
  %548 = load i32, i32* %class.addr, align 4
  %549 = load i32, i32* %i, align 4
  %idxprom1338 = sext i32 %549 to i64
  %arrayidx1339 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1338
  %class1340 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1339, i32 0, i32 2
  store i32 %548, i32* %class1340, align 4
  %550 = load i32, i32* %inmode.addr, align 4
  %551 = load i32, i32* %i, align 4
  %idxprom1341 = sext i32 %551 to i64
  %arrayidx1342 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1341
  %inmode1343 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1342, i32 0, i32 3
  store i32 %550, i32* %inmode1343, align 4
  %552 = load i32, i32* %outmode.addr, align 4
  %553 = load i32, i32* %i, align 4
  %idxprom1344 = sext i32 %553 to i64
  %arrayidx1345 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1344
  %outmode1346 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1345, i32 0, i32 4
  store i32 %552, i32* %outmode1346, align 4
  %554 = load i32, i32* %i, align 4
  %idxprom1347 = sext i32 %554 to i64
  %arrayidx1348 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1347
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1348, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx, align 8
  %555 = load i32, i32* %optional.addr, align 4
  %556 = load i32, i32* %i, align 4
  %idxprom1349 = sext i32 %556 to i64
  %arrayidx1350 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1349
  %optional1351 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1350, i32 0, i32 18
  %557 = trunc i32 %555 to i8
  %bf.load1352 = load i8, i8* %optional1351, align 8
  %bf.value = and i8 %557, 1
  %bf.clear1353 = and i8 %bf.load1352, -2
  %bf.set = or i8 %bf.clear1353, %bf.value
  store i8 %bf.set, i8* %optional1351, align 8
  %bf.result.cast = zext i8 %bf.value to i32
  %558 = load i32, i32* %i, align 4
  %idxprom1354 = sext i32 %558 to i64
  %arrayidx1355 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1354
  %inc1356 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1355, i32 0, i32 7
  store i32 0, i32* %inc1356, align 4
  %559 = load i32, i32* %i, align 4
  %idxprom1357 = sext i32 %559 to i64
  %arrayidx1358 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1357
  %nocombine = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1358, i32 0, i32 18
  %bf.load1359 = load i8, i8* %nocombine, align 8
  %bf.clear1360 = and i8 %bf.load1359, -3
  store i8 %bf.clear1360, i8* %nocombine, align 8
  %560 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %tobool1361 = icmp ne %struct.rtx_def** %560, null
  br i1 %tobool1361, label %cond.true.1362, label %cond.false.1363

cond.true.1362:                                   ; preds = %if.end.1331
  %561 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %562 = load %struct.rtx_def*, %struct.rtx_def** %561, align 8
  br label %cond.end.1364

cond.false.1363:                                  ; preds = %if.end.1331
  br label %cond.end.1364

cond.end.1364:                                    ; preds = %cond.false.1363, %cond.true.1362
  %cond1365 = phi %struct.rtx_def* [ %562, %cond.true.1362 ], [ null, %cond.false.1363 ]
  %563 = load i32, i32* %i, align 4
  %idxprom1366 = sext i32 %563 to i64
  %arrayidx1367 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1366
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1367, i32 0, i32 8
  store %struct.rtx_def* %cond1365, %struct.rtx_def** %in_reg, align 8
  %564 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %tobool1368 = icmp ne %struct.rtx_def** %564, null
  br i1 %tobool1368, label %cond.true.1369, label %cond.false.1370

cond.true.1369:                                   ; preds = %cond.end.1364
  %565 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %566 = load %struct.rtx_def*, %struct.rtx_def** %565, align 8
  br label %cond.end.1371

cond.false.1370:                                  ; preds = %cond.end.1364
  br label %cond.end.1371

cond.end.1371:                                    ; preds = %cond.false.1370, %cond.true.1369
  %cond1372 = phi %struct.rtx_def* [ %566, %cond.true.1369 ], [ null, %cond.false.1370 ]
  %567 = load i32, i32* %i, align 4
  %idxprom1373 = sext i32 %567 to i64
  %arrayidx1374 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1373
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1374, i32 0, i32 9
  store %struct.rtx_def* %cond1372, %struct.rtx_def** %out_reg, align 8
  %568 = load i32, i32* %opnum.addr, align 4
  %569 = load i32, i32* %i, align 4
  %idxprom1375 = sext i32 %569 to i64
  %arrayidx1376 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1375
  %opnum1377 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1376, i32 0, i32 12
  store i32 %568, i32* %opnum1377, align 4
  %570 = load i32, i32* %type.addr, align 4
  %571 = load i32, i32* %i, align 4
  %idxprom1378 = sext i32 %571 to i64
  %arrayidx1379 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1378
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1379, i32 0, i32 17
  store i32 %570, i32* %when_needed, align 4
  %572 = load i32, i32* %secondary_in_reload, align 4
  %573 = load i32, i32* %i, align 4
  %idxprom1380 = sext i32 %573 to i64
  %arrayidx1381 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1380
  %secondary_in_reload1382 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1381, i32 0, i32 13
  store i32 %572, i32* %secondary_in_reload1382, align 4
  %574 = load i32, i32* %secondary_out_reload, align 4
  %575 = load i32, i32* %i, align 4
  %idxprom1383 = sext i32 %575 to i64
  %arrayidx1384 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1383
  %secondary_out_reload1385 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1384, i32 0, i32 14
  store i32 %574, i32* %secondary_out_reload1385, align 4
  %576 = load i32, i32* %secondary_in_icode, align 4
  %577 = load i32, i32* %i, align 4
  %idxprom1386 = sext i32 %577 to i64
  %arrayidx1387 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1386
  %secondary_in_icode1388 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1387, i32 0, i32 15
  store i32 %576, i32* %secondary_in_icode1388, align 4
  %578 = load i32, i32* %secondary_out_icode, align 4
  %579 = load i32, i32* %i, align 4
  %idxprom1389 = sext i32 %579 to i64
  %arrayidx1390 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1389
  %secondary_out_icode1391 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1390, i32 0, i32 16
  store i32 %578, i32* %secondary_out_icode1391, align 4
  %580 = load i32, i32* %i, align 4
  %idxprom1392 = sext i32 %580 to i64
  %arrayidx1393 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1392
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1393, i32 0, i32 18
  %bf.load1394 = load i8, i8* %secondary_p, align 8
  %bf.clear1395 = and i8 %bf.load1394, -5
  store i8 %bf.clear1395, i8* %secondary_p, align 8
  %581 = load i32, i32* @n_reloads, align 4
  %inc1396 = add nsw i32 %581, 1
  store i32 %inc1396, i32* @n_reloads, align 4
  %582 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1397 = icmp ne %struct.rtx_def* %582, null
  br i1 %cmp1397, label %land.lhs.true.1399, label %if.end.1420

land.lhs.true.1399:                               ; preds = %cond.end.1371
  %583 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %584 = bitcast %struct.rtx_def* %583 to i32*
  %bf.load1400 = load i32, i32* %584, align 8
  %bf.clear1401 = and i32 %bf.load1400, 65535
  %cmp1402 = icmp eq i32 %bf.clear1401, 61
  br i1 %cmp1402, label %land.lhs.true.1404, label %if.end.1420

land.lhs.true.1404:                               ; preds = %land.lhs.true.1399
  %585 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %585, i32 0, i32 1
  %arrayidx1406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1405, i32 0, i64 0
  %rtuint1407 = bitcast %union.rtunion_def* %arrayidx1406 to i32*
  %586 = load i32, i32* %rtuint1407, align 4
  %cmp1408 = icmp ult i32 %586, 53
  br i1 %cmp1408, label %land.lhs.true.1410, label %if.end.1420

land.lhs.true.1410:                               ; preds = %land.lhs.true.1404
  %587 = load i32, i32* %class.addr, align 4
  %588 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1
  %arrayidx1412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1411, i32 0, i64 0
  %rtuint1413 = bitcast %union.rtunion_def* %arrayidx1412 to i32*
  %589 = load i32, i32* %rtuint1413, align 4
  %idxprom1414 = zext i32 %589 to i64
  %arrayidx1415 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom1414
  %590 = load i32, i32* %arrayidx1415, align 4
  %591 = load i32, i32* %outmode.addr, align 4
  %call1416 = call i32 @ix86_secondary_memory_needed(i32 %587, i32 %590, i32 %591, i32 1)
  %tobool1417 = icmp ne i32 %call1416, 0
  br i1 %tobool1417, label %if.then.1418, label %if.end.1420

if.then.1418:                                     ; preds = %land.lhs.true.1410
  %592 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %593 = load i32, i32* %outmode.addr, align 4
  %594 = load i32, i32* %opnum.addr, align 4
  %595 = load i32, i32* %type.addr, align 4
  %call1419 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %592, i32 %593, i32 %594, i32 %595)
  br label %if.end.1420

if.end.1420:                                      ; preds = %if.then.1418, %land.lhs.true.1410, %land.lhs.true.1404, %land.lhs.true.1399, %cond.end.1371
  br label %if.end.1594

if.else.1421:                                     ; preds = %if.end.1293
  %596 = load i32, i32* %inmode.addr, align 4
  %cmp1422 = icmp ne i32 %596, 0
  br i1 %cmp1422, label %land.lhs.true.1424, label %if.end.1440

land.lhs.true.1424:                               ; preds = %if.else.1421
  %597 = load i32, i32* %inmode.addr, align 4
  %idxprom1425 = sext i32 %597 to i64
  %arrayidx1426 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1425
  %598 = load i8, i8* %arrayidx1426, align 1
  %conv1427 = zext i8 %598 to i32
  %599 = load i32, i32* %i, align 4
  %idxprom1428 = sext i32 %599 to i64
  %arrayidx1429 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1428
  %inmode1430 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1429, i32 0, i32 3
  %600 = load i32, i32* %inmode1430, align 4
  %idxprom1431 = sext i32 %600 to i64
  %arrayidx1432 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1431
  %601 = load i8, i8* %arrayidx1432, align 1
  %conv1433 = zext i8 %601 to i32
  %cmp1434 = icmp sgt i32 %conv1427, %conv1433
  br i1 %cmp1434, label %if.then.1436, label %if.end.1440

if.then.1436:                                     ; preds = %land.lhs.true.1424
  %602 = load i32, i32* %inmode.addr, align 4
  %603 = load i32, i32* %i, align 4
  %idxprom1437 = sext i32 %603 to i64
  %arrayidx1438 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1437
  %inmode1439 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1438, i32 0, i32 3
  store i32 %602, i32* %inmode1439, align 4
  br label %if.end.1440

if.end.1440:                                      ; preds = %if.then.1436, %land.lhs.true.1424, %if.else.1421
  %604 = load i32, i32* %outmode.addr, align 4
  %cmp1441 = icmp ne i32 %604, 0
  br i1 %cmp1441, label %land.lhs.true.1443, label %if.end.1459

land.lhs.true.1443:                               ; preds = %if.end.1440
  %605 = load i32, i32* %outmode.addr, align 4
  %idxprom1444 = sext i32 %605 to i64
  %arrayidx1445 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1444
  %606 = load i8, i8* %arrayidx1445, align 1
  %conv1446 = zext i8 %606 to i32
  %607 = load i32, i32* %i, align 4
  %idxprom1447 = sext i32 %607 to i64
  %arrayidx1448 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1447
  %outmode1449 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1448, i32 0, i32 4
  %608 = load i32, i32* %outmode1449, align 4
  %idxprom1450 = sext i32 %608 to i64
  %arrayidx1451 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1450
  %609 = load i8, i8* %arrayidx1451, align 1
  %conv1452 = zext i8 %609 to i32
  %cmp1453 = icmp sgt i32 %conv1446, %conv1452
  br i1 %cmp1453, label %if.then.1455, label %if.end.1459

if.then.1455:                                     ; preds = %land.lhs.true.1443
  %610 = load i32, i32* %outmode.addr, align 4
  %611 = load i32, i32* %i, align 4
  %idxprom1456 = sext i32 %611 to i64
  %arrayidx1457 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1456
  %outmode1458 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1457, i32 0, i32 4
  store i32 %610, i32* %outmode1458, align 4
  br label %if.end.1459

if.end.1459:                                      ; preds = %if.then.1455, %land.lhs.true.1443, %if.end.1440
  %612 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1460 = icmp ne %struct.rtx_def* %612, null
  br i1 %cmp1460, label %if.then.1462, label %if.end.1516

if.then.1462:                                     ; preds = %if.end.1459
  %613 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %tobool1464 = icmp ne %struct.rtx_def** %613, null
  br i1 %tobool1464, label %cond.true.1465, label %cond.false.1466

cond.true.1465:                                   ; preds = %if.then.1462
  %614 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %615 = load %struct.rtx_def*, %struct.rtx_def** %614, align 8
  br label %cond.end.1467

cond.false.1466:                                  ; preds = %if.then.1462
  br label %cond.end.1467

cond.end.1467:                                    ; preds = %cond.false.1466, %cond.true.1465
  %cond1468 = phi %struct.rtx_def* [ %615, %cond.true.1465 ], [ null, %cond.false.1466 ]
  store %struct.rtx_def* %cond1468, %struct.rtx_def** %in_reg1463, align 8
  %616 = load i32, i32* %i, align 4
  %idxprom1469 = sext i32 %616 to i64
  %arrayidx1470 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1469
  %in1471 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1470, i32 0, i32 0
  %617 = load %struct.rtx_def*, %struct.rtx_def** %in1471, align 8
  %618 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1472 = icmp ne %struct.rtx_def* %617, %618
  br i1 %cmp1472, label %land.lhs.true.1474, label %if.end.1509

land.lhs.true.1474:                               ; preds = %cond.end.1467
  %619 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %620 = load i32, i32* %i, align 4
  %idxprom1475 = sext i32 %620 to i64
  %arrayidx1476 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1475
  %in1477 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1476, i32 0, i32 0
  %621 = load %struct.rtx_def*, %struct.rtx_def** %in1477, align 8
  %call1478 = call i32 @rtx_equal_p(%struct.rtx_def* %619, %struct.rtx_def* %621)
  %tobool1479 = icmp ne i32 %call1478, 0
  br i1 %tobool1479, label %land.lhs.true.1480, label %if.end.1509

land.lhs.true.1480:                               ; preds = %land.lhs.true.1474
  %622 = load i32, i32* %i, align 4
  %idxprom1481 = sext i32 %622 to i64
  %arrayidx1482 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1481
  %optional1483 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1482, i32 0, i32 18
  %bf.load1484 = load i8, i8* %optional1483, align 8
  %bf.clear1485 = and i8 %bf.load1484, 1
  %bf.cast = zext i8 %bf.clear1485 to i32
  %tobool1486 = icmp ne i32 %bf.cast, 0
  br i1 %tobool1486, label %land.lhs.true.1487, label %if.then.1489

land.lhs.true.1487:                               ; preds = %land.lhs.true.1480
  %623 = load i32, i32* %optional.addr, align 4
  %tobool1488 = icmp ne i32 %623, 0
  br i1 %tobool1488, label %if.end.1509, label %if.then.1489

if.then.1489:                                     ; preds = %land.lhs.true.1487, %land.lhs.true.1480
  %624 = load i32, i32* %opnum.addr, align 4
  %625 = load i32, i32* %i, align 4
  %idxprom1490 = sext i32 %625 to i64
  %arrayidx1491 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1490
  %opnum1492 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1491, i32 0, i32 12
  %626 = load i32, i32* %opnum1492, align 4
  %cmp1493 = icmp sgt i32 %624, %626
  br i1 %cmp1493, label %if.then.1495, label %if.else.1503

if.then.1495:                                     ; preds = %if.then.1489
  %627 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call1496 = call i32 @remove_address_replacements(%struct.rtx_def* %627)
  %628 = load i32, i32* %i, align 4
  %idxprom1497 = sext i32 %628 to i64
  %arrayidx1498 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1497
  %in1499 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1498, i32 0, i32 0
  %629 = load %struct.rtx_def*, %struct.rtx_def** %in1499, align 8
  store %struct.rtx_def* %629, %struct.rtx_def** %in.addr, align 8
  %630 = load i32, i32* %i, align 4
  %idxprom1500 = sext i32 %630 to i64
  %arrayidx1501 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1500
  %in_reg1502 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1501, i32 0, i32 8
  %631 = load %struct.rtx_def*, %struct.rtx_def** %in_reg1502, align 8
  store %struct.rtx_def* %631, %struct.rtx_def** %in_reg1463, align 8
  br label %if.end.1508

if.else.1503:                                     ; preds = %if.then.1489
  %632 = load i32, i32* %i, align 4
  %idxprom1504 = sext i32 %632 to i64
  %arrayidx1505 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1504
  %in1506 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1505, i32 0, i32 0
  %633 = load %struct.rtx_def*, %struct.rtx_def** %in1506, align 8
  %call1507 = call i32 @remove_address_replacements(%struct.rtx_def* %633)
  br label %if.end.1508

if.end.1508:                                      ; preds = %if.else.1503, %if.then.1495
  br label %if.end.1509

if.end.1509:                                      ; preds = %if.end.1508, %land.lhs.true.1487, %land.lhs.true.1474, %cond.end.1467
  %634 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %635 = load i32, i32* %i, align 4
  %idxprom1510 = sext i32 %635 to i64
  %arrayidx1511 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1510
  %in1512 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1511, i32 0, i32 0
  store %struct.rtx_def* %634, %struct.rtx_def** %in1512, align 8
  %636 = load %struct.rtx_def*, %struct.rtx_def** %in_reg1463, align 8
  %637 = load i32, i32* %i, align 4
  %idxprom1513 = sext i32 %637 to i64
  %arrayidx1514 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1513
  %in_reg1515 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1514, i32 0, i32 8
  store %struct.rtx_def* %636, %struct.rtx_def** %in_reg1515, align 8
  br label %if.end.1516

if.end.1516:                                      ; preds = %if.end.1509, %if.end.1459
  %638 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1517 = icmp ne %struct.rtx_def* %638, null
  br i1 %cmp1517, label %if.then.1519, label %if.end.1531

if.then.1519:                                     ; preds = %if.end.1516
  %639 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %640 = load i32, i32* %i, align 4
  %idxprom1520 = sext i32 %640 to i64
  %arrayidx1521 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1520
  %out1522 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1521, i32 0, i32 1
  store %struct.rtx_def* %639, %struct.rtx_def** %out1522, align 8
  %641 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %tobool1523 = icmp ne %struct.rtx_def** %641, null
  br i1 %tobool1523, label %cond.true.1524, label %cond.false.1525

cond.true.1524:                                   ; preds = %if.then.1519
  %642 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %643 = load %struct.rtx_def*, %struct.rtx_def** %642, align 8
  br label %cond.end.1526

cond.false.1525:                                  ; preds = %if.then.1519
  br label %cond.end.1526

cond.end.1526:                                    ; preds = %cond.false.1525, %cond.true.1524
  %cond1527 = phi %struct.rtx_def* [ %643, %cond.true.1524 ], [ null, %cond.false.1525 ]
  %644 = load i32, i32* %i, align 4
  %idxprom1528 = sext i32 %644 to i64
  %arrayidx1529 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1528
  %out_reg1530 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1529, i32 0, i32 9
  store %struct.rtx_def* %cond1527, %struct.rtx_def** %out_reg1530, align 8
  br label %if.end.1531

if.end.1531:                                      ; preds = %cond.end.1526, %if.end.1516
  %645 = load i32, i32* %class.addr, align 4
  %646 = load i32, i32* %i, align 4
  %idxprom1532 = sext i32 %646 to i64
  %arrayidx1533 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1532
  %class1534 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1533, i32 0, i32 2
  %647 = load i32, i32* %class1534, align 4
  %call1535 = call i32 @reg_class_subset_p(i32 %645, i32 %647)
  %tobool1536 = icmp ne i32 %call1535, 0
  br i1 %tobool1536, label %if.then.1537, label %if.end.1541

if.then.1537:                                     ; preds = %if.end.1531
  %648 = load i32, i32* %class.addr, align 4
  %649 = load i32, i32* %i, align 4
  %idxprom1538 = sext i32 %649 to i64
  %arrayidx1539 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1538
  %class1540 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1539, i32 0, i32 2
  store i32 %648, i32* %class1540, align 4
  br label %if.end.1541

if.end.1541:                                      ; preds = %if.then.1537, %if.end.1531
  %650 = load i32, i32* %optional.addr, align 4
  %651 = load i32, i32* %i, align 4
  %idxprom1542 = sext i32 %651 to i64
  %arrayidx1543 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1542
  %optional1544 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1543, i32 0, i32 18
  %bf.load1545 = load i8, i8* %optional1544, align 8
  %bf.clear1546 = and i8 %bf.load1545, 1
  %bf.cast1547 = zext i8 %bf.clear1546 to i32
  %and1548 = and i32 %bf.cast1547, %650
  %652 = trunc i32 %and1548 to i8
  %bf.load1549 = load i8, i8* %optional1544, align 8
  %bf.value1550 = and i8 %652, 1
  %bf.clear1551 = and i8 %bf.load1549, -2
  %bf.set1552 = or i8 %bf.clear1551, %bf.value1550
  store i8 %bf.set1552, i8* %optional1544, align 8
  %bf.result.cast1553 = zext i8 %bf.value1550 to i32
  %653 = load i32, i32* %type.addr, align 4
  %654 = load i32, i32* %i, align 4
  %idxprom1554 = sext i32 %654 to i64
  %arrayidx1555 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1554
  %when_needed1556 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1555, i32 0, i32 17
  %655 = load i32, i32* %when_needed1556, align 4
  %cmp1557 = icmp ne i32 %653, %655
  br i1 %cmp1557, label %if.then.1574, label %lor.lhs.false.1559

lor.lhs.false.1559:                               ; preds = %if.end.1541
  %656 = load i32, i32* %opnum.addr, align 4
  %657 = load i32, i32* %i, align 4
  %idxprom1560 = sext i32 %657 to i64
  %arrayidx1561 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1560
  %opnum1562 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1561, i32 0, i32 12
  %658 = load i32, i32* %opnum1562, align 4
  %cmp1563 = icmp eq i32 %656, %658
  br i1 %cmp1563, label %if.end.1578, label %lor.lhs.false.1565

lor.lhs.false.1565:                               ; preds = %lor.lhs.false.1559
  %659 = load i32, i32* %type.addr, align 4
  %cmp1566 = icmp eq i32 %659, 0
  br i1 %cmp1566, label %if.end.1578, label %lor.lhs.false.1568

lor.lhs.false.1568:                               ; preds = %lor.lhs.false.1565
  %660 = load i32, i32* %type.addr, align 4
  %cmp1569 = icmp eq i32 %660, 7
  br i1 %cmp1569, label %if.end.1578, label %lor.lhs.false.1571

lor.lhs.false.1571:                               ; preds = %lor.lhs.false.1568
  %661 = load i32, i32* %type.addr, align 4
  %cmp1572 = icmp eq i32 %661, 10
  br i1 %cmp1572, label %if.end.1578, label %if.then.1574

if.then.1574:                                     ; preds = %lor.lhs.false.1571, %if.end.1541
  %662 = load i32, i32* %i, align 4
  %idxprom1575 = sext i32 %662 to i64
  %arrayidx1576 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1575
  %when_needed1577 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1576, i32 0, i32 17
  store i32 9, i32* %when_needed1577, align 4
  br label %if.end.1578

if.end.1578:                                      ; preds = %if.then.1574, %lor.lhs.false.1571, %lor.lhs.false.1568, %lor.lhs.false.1565, %lor.lhs.false.1559
  %663 = load i32, i32* %i, align 4
  %idxprom1579 = sext i32 %663 to i64
  %arrayidx1580 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1579
  %opnum1581 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1580, i32 0, i32 12
  %664 = load i32, i32* %opnum1581, align 4
  %665 = load i32, i32* %opnum.addr, align 4
  %cmp1582 = icmp slt i32 %664, %665
  br i1 %cmp1582, label %cond.true.1584, label %cond.false.1588

cond.true.1584:                                   ; preds = %if.end.1578
  %666 = load i32, i32* %i, align 4
  %idxprom1585 = sext i32 %666 to i64
  %arrayidx1586 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1585
  %opnum1587 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1586, i32 0, i32 12
  %667 = load i32, i32* %opnum1587, align 4
  br label %cond.end.1589

cond.false.1588:                                  ; preds = %if.end.1578
  %668 = load i32, i32* %opnum.addr, align 4
  br label %cond.end.1589

cond.end.1589:                                    ; preds = %cond.false.1588, %cond.true.1584
  %cond1590 = phi i32 [ %667, %cond.true.1584 ], [ %668, %cond.false.1588 ]
  %669 = load i32, i32* %i, align 4
  %idxprom1591 = sext i32 %669 to i64
  %arrayidx1592 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1591
  %opnum1593 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1592, i32 0, i32 12
  store i32 %cond1590, i32* %opnum1593, align 4
  br label %if.end.1594

if.end.1594:                                      ; preds = %cond.end.1589, %if.end.1420
  %670 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1595 = icmp ne %struct.rtx_def* %670, null
  br i1 %cmp1595, label %land.lhs.true.1597, label %if.end.1607

land.lhs.true.1597:                               ; preds = %if.end.1594
  %671 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %672 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %673 = load %struct.rtx_def*, %struct.rtx_def** %672, align 8
  %cmp1598 = icmp ne %struct.rtx_def* %671, %673
  br i1 %cmp1598, label %if.then.1600, label %if.end.1607

if.then.1600:                                     ; preds = %land.lhs.true.1597
  %674 = load i32, i32* %i, align 4
  %idxprom1601 = sext i32 %674 to i64
  %arrayidx1602 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1601
  %nocombine1603 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1602, i32 0, i32 18
  %bf.load1604 = load i8, i8* %nocombine1603, align 8
  %bf.clear1605 = and i8 %bf.load1604, -3
  %bf.set1606 = or i8 %bf.clear1605, 2
  store i8 %bf.set1606, i8* %nocombine1603, align 8
  br label %if.end.1607

if.end.1607:                                      ; preds = %if.then.1600, %land.lhs.true.1597, %if.end.1594
  %675 = load i32, i32* @replace_reloads, align 4
  %tobool1608 = icmp ne i32 %675, 0
  br i1 %tobool1608, label %if.then.1609, label %if.end.1633

if.then.1609:                                     ; preds = %if.end.1607
  %676 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %cmp1610 = icmp ne %struct.rtx_def** %676, null
  br i1 %cmp1610, label %if.then.1612, label %if.end.1617

if.then.1612:                                     ; preds = %if.then.1609
  %677 = load i32, i32* @n_replacements, align 4
  %inc1613 = add nsw i32 %677, 1
  store i32 %inc1613, i32* @n_replacements, align 4
  %idxprom1614 = sext i32 %677 to i64
  %arrayidx1615 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom1614
  store %struct.replacement* %arrayidx1615, %struct.replacement** %r, align 8
  %678 = load i32, i32* %i, align 4
  %679 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %679, i32 0, i32 2
  store i32 %678, i32* %what, align 4
  %680 = load %struct.rtx_def**, %struct.rtx_def*** %in_subreg_loc, align 8
  %681 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %681, i32 0, i32 1
  store %struct.rtx_def** %680, %struct.rtx_def*** %subreg_loc, align 8
  %682 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %683 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %683, i32 0, i32 0
  store %struct.rtx_def** %682, %struct.rtx_def*** %where, align 8
  %684 = load i32, i32* %inmode.addr, align 4
  %685 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode1616 = getelementptr inbounds %struct.replacement, %struct.replacement* %685, i32 0, i32 3
  store i32 %684, i32* %mode1616, align 4
  br label %if.end.1617

if.end.1617:                                      ; preds = %if.then.1612, %if.then.1609
  %686 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %cmp1618 = icmp ne %struct.rtx_def** %686, null
  br i1 %cmp1618, label %land.lhs.true.1620, label %if.end.1632

land.lhs.true.1620:                               ; preds = %if.end.1617
  %687 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %688 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %cmp1621 = icmp ne %struct.rtx_def** %687, %688
  br i1 %cmp1621, label %if.then.1623, label %if.end.1632

if.then.1623:                                     ; preds = %land.lhs.true.1620
  %689 = load i32, i32* @n_replacements, align 4
  %inc1625 = add nsw i32 %689, 1
  store i32 %inc1625, i32* @n_replacements, align 4
  %idxprom1626 = sext i32 %689 to i64
  %arrayidx1627 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom1626
  store %struct.replacement* %arrayidx1627, %struct.replacement** %r1624, align 8
  %690 = load i32, i32* %i, align 4
  %691 = load %struct.replacement*, %struct.replacement** %r1624, align 8
  %what1628 = getelementptr inbounds %struct.replacement, %struct.replacement* %691, i32 0, i32 2
  store i32 %690, i32* %what1628, align 4
  %692 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %693 = load %struct.replacement*, %struct.replacement** %r1624, align 8
  %where1629 = getelementptr inbounds %struct.replacement, %struct.replacement* %693, i32 0, i32 0
  store %struct.rtx_def** %692, %struct.rtx_def*** %where1629, align 8
  %694 = load %struct.rtx_def**, %struct.rtx_def*** %out_subreg_loc, align 8
  %695 = load %struct.replacement*, %struct.replacement** %r1624, align 8
  %subreg_loc1630 = getelementptr inbounds %struct.replacement, %struct.replacement* %695, i32 0, i32 1
  store %struct.rtx_def** %694, %struct.rtx_def*** %subreg_loc1630, align 8
  %696 = load i32, i32* %outmode.addr, align 4
  %697 = load %struct.replacement*, %struct.replacement** %r1624, align 8
  %mode1631 = getelementptr inbounds %struct.replacement, %struct.replacement* %697, i32 0, i32 3
  store i32 %696, i32* %mode1631, align 4
  br label %if.end.1632

if.end.1632:                                      ; preds = %if.then.1623, %land.lhs.true.1620, %if.end.1617
  br label %if.end.1633

if.end.1633:                                      ; preds = %if.end.1632, %if.end.1607
  %698 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1634 = icmp ne %struct.rtx_def* %698, null
  br i1 %cmp1634, label %land.lhs.true.1636, label %if.end.1719

land.lhs.true.1636:                               ; preds = %if.end.1633
  %699 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1637 = icmp ne %struct.rtx_def* %699, null
  br i1 %cmp1637, label %land.lhs.true.1639, label %if.end.1719

land.lhs.true.1639:                               ; preds = %land.lhs.true.1636
  %700 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %701 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1640 = icmp ne %struct.rtx_def* %700, %701
  br i1 %cmp1640, label %land.lhs.true.1642, label %if.end.1719

land.lhs.true.1642:                               ; preds = %land.lhs.true.1639
  %702 = load i32, i32* %i, align 4
  %idxprom1643 = sext i32 %702 to i64
  %arrayidx1644 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1643
  %reg_rtx1645 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1644, i32 0, i32 11
  %703 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1645, align 8
  %cmp1646 = icmp eq %struct.rtx_def* %703, null
  br i1 %cmp1646, label %if.then.1648, label %if.end.1719

if.then.1648:                                     ; preds = %land.lhs.true.1642
  %704 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %705 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %706 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %707 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %708 = load i32, i32* %inmode.addr, align 4
  %709 = load i32, i32* %outmode.addr, align 4
  %710 = load i32, i32* %i, align 4
  %idxprom1649 = sext i32 %710 to i64
  %arrayidx1650 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1649
  %class1651 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1650, i32 0, i32 2
  %711 = load i32, i32* %class1651, align 4
  %712 = load i32, i32* %i, align 4
  %713 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call1652 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %713)
  %call1653 = call %struct.rtx_def* @find_dummy_reload(%struct.rtx_def* %704, %struct.rtx_def* %705, %struct.rtx_def** %706, %struct.rtx_def** %707, i32 %708, i32 %709, i32 %711, i32 %712, i32 %call1652)
  %714 = load i32, i32* %i, align 4
  %idxprom1654 = sext i32 %714 to i64
  %arrayidx1655 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1654
  %reg_rtx1656 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1655, i32 0, i32 11
  store %struct.rtx_def* %call1653, %struct.rtx_def** %reg_rtx1656, align 8
  %715 = load i32, i32* %i, align 4
  %idxprom1657 = sext i32 %715 to i64
  %arrayidx1658 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1657
  %reg_rtx1659 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1658, i32 0, i32 11
  %716 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1659, align 8
  %717 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1660 = icmp eq %struct.rtx_def* %716, %717
  br i1 %cmp1660, label %land.lhs.true.1662, label %if.end.1718

land.lhs.true.1662:                               ; preds = %if.then.1648
  %718 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %719 = bitcast %struct.rtx_def* %718 to i32*
  %bf.load1663 = load i32, i32* %719, align 8
  %bf.clear1664 = and i32 %bf.load1663, 65535
  %cmp1665 = icmp eq i32 %bf.clear1664, 61
  br i1 %cmp1665, label %land.lhs.true.1707, label %lor.lhs.false.1667

lor.lhs.false.1667:                               ; preds = %land.lhs.true.1662
  %720 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %721 = bitcast %struct.rtx_def* %720 to i32*
  %bf.load1668 = load i32, i32* %721, align 8
  %bf.clear1669 = and i32 %bf.load1668, 65535
  %cmp1670 = icmp eq i32 %bf.clear1669, 67
  br i1 %cmp1670, label %land.lhs.true.1707, label %lor.lhs.false.1672

lor.lhs.false.1672:                               ; preds = %lor.lhs.false.1667
  %722 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %723 = bitcast %struct.rtx_def* %722 to i32*
  %bf.load1673 = load i32, i32* %723, align 8
  %bf.clear1674 = and i32 %bf.load1673, 65535
  %cmp1675 = icmp eq i32 %bf.clear1674, 68
  br i1 %cmp1675, label %land.lhs.true.1707, label %lor.lhs.false.1677

lor.lhs.false.1677:                               ; preds = %lor.lhs.false.1672
  %724 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %725 = bitcast %struct.rtx_def* %724 to i32*
  %bf.load1678 = load i32, i32* %725, align 8
  %bf.clear1679 = and i32 %bf.load1678, 65535
  %cmp1680 = icmp eq i32 %bf.clear1679, 54
  br i1 %cmp1680, label %land.lhs.true.1707, label %lor.lhs.false.1682

lor.lhs.false.1682:                               ; preds = %lor.lhs.false.1677
  %726 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %727 = bitcast %struct.rtx_def* %726 to i32*
  %bf.load1683 = load i32, i32* %727, align 8
  %bf.clear1684 = and i32 %bf.load1683, 65535
  %cmp1685 = icmp eq i32 %bf.clear1684, 55
  br i1 %cmp1685, label %land.lhs.true.1707, label %lor.lhs.false.1687

lor.lhs.false.1687:                               ; preds = %lor.lhs.false.1682
  %728 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %729 = bitcast %struct.rtx_def* %728 to i32*
  %bf.load1688 = load i32, i32* %729, align 8
  %bf.clear1689 = and i32 %bf.load1688, 65535
  %cmp1690 = icmp eq i32 %bf.clear1689, 58
  br i1 %cmp1690, label %land.lhs.true.1707, label %lor.lhs.false.1692

lor.lhs.false.1692:                               ; preds = %lor.lhs.false.1687
  %730 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %731 = bitcast %struct.rtx_def* %730 to i32*
  %bf.load1693 = load i32, i32* %731, align 8
  %bf.clear1694 = and i32 %bf.load1693, 65535
  %cmp1695 = icmp eq i32 %bf.clear1694, 134
  br i1 %cmp1695, label %land.lhs.true.1707, label %lor.lhs.false.1697

lor.lhs.false.1697:                               ; preds = %lor.lhs.false.1692
  %732 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %733 = bitcast %struct.rtx_def* %732 to i32*
  %bf.load1698 = load i32, i32* %733, align 8
  %bf.clear1699 = and i32 %bf.load1698, 65535
  %cmp1700 = icmp eq i32 %bf.clear1699, 56
  br i1 %cmp1700, label %land.lhs.true.1707, label %lor.lhs.false.1702

lor.lhs.false.1702:                               ; preds = %lor.lhs.false.1697
  %734 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %735 = bitcast %struct.rtx_def* %734 to i32*
  %bf.load1703 = load i32, i32* %735, align 8
  %bf.clear1704 = and i32 %bf.load1703, 65535
  %cmp1705 = icmp eq i32 %bf.clear1704, 140
  br i1 %cmp1705, label %land.lhs.true.1707, label %if.end.1718

land.lhs.true.1707:                               ; preds = %lor.lhs.false.1702, %lor.lhs.false.1697, %lor.lhs.false.1692, %lor.lhs.false.1687, %lor.lhs.false.1682, %lor.lhs.false.1677, %lor.lhs.false.1672, %lor.lhs.false.1667, %land.lhs.true.1662
  %736 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %737 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %738 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld1708 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %738, i32 0, i32 1
  %arrayidx1709 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1708, i32 0, i64 0
  %rtuint1710 = bitcast %union.rtunion_def* %arrayidx1709 to i32*
  %739 = load i32, i32* %rtuint1710, align 4
  %740 = load i16*, i16** @static_reload_reg_p, align 8
  %741 = load i32, i32* %i, align 4
  %742 = load i32, i32* %inmode.addr, align 4
  %call1711 = call %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %736, %struct.rtx_def* %737, i32 0, i32 %739, i16* %740, i32 %741, i32 %742)
  %cmp1712 = icmp ne %struct.rtx_def* null, %call1711
  br i1 %cmp1712, label %if.then.1714, label %if.end.1718

if.then.1714:                                     ; preds = %land.lhs.true.1707
  %743 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %744 = load i32, i32* %i, align 4
  %idxprom1715 = sext i32 %744 to i64
  %arrayidx1716 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1715
  %in1717 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1716, i32 0, i32 0
  store %struct.rtx_def* %743, %struct.rtx_def** %in1717, align 8
  br label %if.end.1718

if.end.1718:                                      ; preds = %if.then.1714, %land.lhs.true.1707, %lor.lhs.false.1702, %if.then.1648
  br label %if.end.1719

if.end.1719:                                      ; preds = %if.end.1718, %land.lhs.true.1642, %land.lhs.true.1639, %land.lhs.true.1636, %if.end.1633
  %745 = load i32, i32* %i, align 4
  %idxprom1720 = sext i32 %745 to i64
  %arrayidx1721 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1720
  %reg_rtx1722 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1721, i32 0, i32 11
  %746 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1722, align 8
  %cmp1723 = icmp eq %struct.rtx_def* %746, null
  br i1 %cmp1723, label %land.lhs.true.1725, label %if.end.2313

land.lhs.true.1725:                               ; preds = %if.end.1719
  %747 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %cmp1726 = icmp ne %struct.rtx_def* %747, null
  br i1 %cmp1726, label %if.then.1728, label %if.end.2313

if.then.1728:                                     ; preds = %land.lhs.true.1725
  %748 = load i32, i32* %inmode.addr, align 4
  store i32 %748, i32* %rel_mode, align 4
  %749 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool1730 = icmp ne %struct.rtx_def* %749, null
  br i1 %tobool1730, label %land.lhs.true.1731, label %if.end.1741

land.lhs.true.1731:                               ; preds = %if.then.1728
  %750 = load i32, i32* %outmode.addr, align 4
  %idxprom1732 = sext i32 %750 to i64
  %arrayidx1733 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1732
  %751 = load i8, i8* %arrayidx1733, align 1
  %conv1734 = zext i8 %751 to i32
  %752 = load i32, i32* %inmode.addr, align 4
  %idxprom1735 = sext i32 %752 to i64
  %arrayidx1736 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1735
  %753 = load i8, i8* %arrayidx1736, align 1
  %conv1737 = zext i8 %753 to i32
  %cmp1738 = icmp sgt i32 %conv1734, %conv1737
  br i1 %cmp1738, label %if.then.1740, label %if.end.1741

if.then.1740:                                     ; preds = %land.lhs.true.1731
  %754 = load i32, i32* %outmode.addr, align 4
  store i32 %754, i32* %rel_mode, align 4
  br label %if.end.1741

if.end.1741:                                      ; preds = %if.then.1740, %land.lhs.true.1731, %if.then.1728
  %755 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld1742 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %755, i32 0, i32 1
  %arrayidx1743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1742, i32 0, i64 6
  %rtx1744 = bitcast %union.rtunion_def* %arrayidx1743 to %struct.rtx_def**
  %756 = load %struct.rtx_def*, %struct.rtx_def** %rtx1744, align 8
  store %struct.rtx_def* %756, %struct.rtx_def** %note, align 8
  br label %for.cond.1745

for.cond.1745:                                    ; preds = %for.inc.2308, %if.end.1741
  %757 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool1746 = icmp ne %struct.rtx_def* %757, null
  br i1 %tobool1746, label %for.body.1747, label %for.end.2312

for.body.1747:                                    ; preds = %for.cond.1745
  %758 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %759 = bitcast %struct.rtx_def* %758 to i32*
  %bf.load1748 = load i32, i32* %759, align 8
  %bf.lshr1749 = lshr i32 %bf.load1748, 16
  %bf.clear1750 = and i32 %bf.lshr1749, 255
  %cmp1751 = icmp eq i32 %bf.clear1750, 1
  br i1 %cmp1751, label %land.lhs.true.1753, label %if.end.2307

land.lhs.true.1753:                               ; preds = %for.body.1747
  %760 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %760, i32 0, i32 1
  %arrayidx1755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1754, i32 0, i64 0
  %rtx1756 = bitcast %union.rtunion_def* %arrayidx1755 to %struct.rtx_def**
  %761 = load %struct.rtx_def*, %struct.rtx_def** %rtx1756, align 8
  %762 = bitcast %struct.rtx_def* %761 to i32*
  %bf.load1757 = load i32, i32* %762, align 8
  %bf.clear1758 = and i32 %bf.load1757, 65535
  %cmp1759 = icmp eq i32 %bf.clear1758, 61
  br i1 %cmp1759, label %land.lhs.true.1761, label %if.end.2307

land.lhs.true.1761:                               ; preds = %land.lhs.true.1753
  %763 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1762 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %763, i32 0, i32 1
  %arrayidx1763 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1762, i32 0, i64 0
  %rtx1764 = bitcast %union.rtunion_def* %arrayidx1763 to %struct.rtx_def**
  %764 = load %struct.rtx_def*, %struct.rtx_def** %rtx1764, align 8
  %fld1765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %764, i32 0, i32 1
  %arrayidx1766 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1765, i32 0, i64 0
  %rtuint1767 = bitcast %union.rtunion_def* %arrayidx1766 to i32*
  %765 = load i32, i32* %rtuint1767, align 4
  store i32 %765, i32* %regno1729, align 4
  %cmp1768 = icmp slt i32 %765, 53
  br i1 %cmp1768, label %land.lhs.true.1770, label %if.end.2307

land.lhs.true.1770:                               ; preds = %land.lhs.true.1761
  %766 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1771 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %766, i32 0, i32 1
  %arrayidx1772 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1771, i32 0, i64 0
  %rtx1773 = bitcast %union.rtunion_def* %arrayidx1772 to %struct.rtx_def**
  %767 = load %struct.rtx_def*, %struct.rtx_def** %rtx1773, align 8
  %768 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call1774 = call i32 @reg_mentioned_p(%struct.rtx_def* %767, %struct.rtx_def* %768)
  %tobool1775 = icmp ne i32 %call1774, 0
  br i1 %tobool1775, label %land.lhs.true.1776, label %if.end.2307

land.lhs.true.1776:                               ; preds = %land.lhs.true.1770
  %769 = load i32, i32* %regno1729, align 4
  %770 = load i32, i32* %regno1729, align 4
  %771 = load i32, i32* %regno1729, align 4
  %cmp1777 = icmp sge i32 %771, 8
  br i1 %cmp1777, label %land.lhs.true.1779, label %lor.lhs.false.1782

land.lhs.true.1779:                               ; preds = %land.lhs.true.1776
  %772 = load i32, i32* %regno1729, align 4
  %cmp1780 = icmp sle i32 %772, 15
  br i1 %cmp1780, label %cond.true.1800, label %lor.lhs.false.1782

lor.lhs.false.1782:                               ; preds = %land.lhs.true.1779, %land.lhs.true.1776
  %773 = load i32, i32* %regno1729, align 4
  %cmp1783 = icmp sge i32 %773, 21
  br i1 %cmp1783, label %land.lhs.true.1785, label %lor.lhs.false.1788

land.lhs.true.1785:                               ; preds = %lor.lhs.false.1782
  %774 = load i32, i32* %regno1729, align 4
  %cmp1786 = icmp sle i32 %774, 28
  br i1 %cmp1786, label %cond.true.1800, label %lor.lhs.false.1788

lor.lhs.false.1788:                               ; preds = %land.lhs.true.1785, %lor.lhs.false.1782
  %775 = load i32, i32* %regno1729, align 4
  %cmp1789 = icmp sge i32 %775, 45
  br i1 %cmp1789, label %land.lhs.true.1791, label %lor.lhs.false.1794

land.lhs.true.1791:                               ; preds = %lor.lhs.false.1788
  %776 = load i32, i32* %regno1729, align 4
  %cmp1792 = icmp sle i32 %776, 52
  br i1 %cmp1792, label %cond.true.1800, label %lor.lhs.false.1794

lor.lhs.false.1794:                               ; preds = %land.lhs.true.1791, %lor.lhs.false.1788
  %777 = load i32, i32* %regno1729, align 4
  %cmp1795 = icmp sge i32 %777, 29
  br i1 %cmp1795, label %land.lhs.true.1797, label %cond.false.1812

land.lhs.true.1797:                               ; preds = %lor.lhs.false.1794
  %778 = load i32, i32* %regno1729, align 4
  %cmp1798 = icmp sle i32 %778, 36
  br i1 %cmp1798, label %cond.true.1800, label %cond.false.1812

cond.true.1800:                                   ; preds = %land.lhs.true.1797, %land.lhs.true.1791, %land.lhs.true.1785, %land.lhs.true.1779
  %779 = load i32, i32* %rel_mode, align 4
  %idxprom1801 = sext i32 %779 to i64
  %arrayidx1802 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1801
  %780 = load i32, i32* %arrayidx1802, align 4
  %cmp1803 = icmp eq i32 %780, 5
  br i1 %cmp1803, label %lor.end.1810, label %lor.rhs.1805

lor.rhs.1805:                                     ; preds = %cond.true.1800
  %781 = load i32, i32* %rel_mode, align 4
  %idxprom1806 = sext i32 %781 to i64
  %arrayidx1807 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1806
  %782 = load i32, i32* %arrayidx1807, align 4
  %cmp1808 = icmp eq i32 %782, 6
  br label %lor.end.1810

lor.end.1810:                                     ; preds = %lor.rhs.1805, %cond.true.1800
  %783 = phi i1 [ true, %cond.true.1800 ], [ %cmp1808, %lor.rhs.1805 ]
  %cond1811 = select i1 %783, i32 2, i32 1
  br label %cond.end.1843

cond.false.1812:                                  ; preds = %land.lhs.true.1797, %lor.lhs.false.1794
  %784 = load i32, i32* %rel_mode, align 4
  %cmp1813 = icmp eq i32 %784, 18
  br i1 %cmp1813, label %cond.true.1815, label %cond.false.1819

cond.true.1815:                                   ; preds = %cond.false.1812
  %785 = load i32, i32* @target_flags, align 4
  %and1816 = and i32 %785, 33554432
  %tobool1817 = icmp ne i32 %and1816, 0
  %cond1818 = select i1 %tobool1817, i32 2, i32 3
  br label %cond.end.1841

cond.false.1819:                                  ; preds = %cond.false.1812
  %786 = load i32, i32* %rel_mode, align 4
  %cmp1820 = icmp eq i32 %786, 24
  br i1 %cmp1820, label %cond.true.1822, label %cond.false.1826

cond.true.1822:                                   ; preds = %cond.false.1819
  %787 = load i32, i32* @target_flags, align 4
  %and1823 = and i32 %787, 33554432
  %tobool1824 = icmp ne i32 %and1823, 0
  %cond1825 = select i1 %tobool1824, i32 4, i32 6
  br label %cond.end.1839

cond.false.1826:                                  ; preds = %cond.false.1819
  %788 = load i32, i32* %rel_mode, align 4
  %idxprom1827 = sext i32 %788 to i64
  %arrayidx1828 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1827
  %789 = load i8, i8* %arrayidx1828, align 1
  %conv1829 = zext i8 %789 to i32
  %790 = load i32, i32* @target_flags, align 4
  %and1830 = and i32 %790, 33554432
  %tobool1831 = icmp ne i32 %and1830, 0
  %cond1832 = select i1 %tobool1831, i32 8, i32 4
  %add1833 = add nsw i32 %conv1829, %cond1832
  %sub1834 = sub nsw i32 %add1833, 1
  %791 = load i32, i32* @target_flags, align 4
  %and1835 = and i32 %791, 33554432
  %tobool1836 = icmp ne i32 %and1835, 0
  %cond1837 = select i1 %tobool1836, i32 8, i32 4
  %div1838 = sdiv i32 %sub1834, %cond1837
  br label %cond.end.1839

cond.end.1839:                                    ; preds = %cond.false.1826, %cond.true.1822
  %cond1840 = phi i32 [ %cond1825, %cond.true.1822 ], [ %div1838, %cond.false.1826 ]
  br label %cond.end.1841

cond.end.1841:                                    ; preds = %cond.end.1839, %cond.true.1815
  %cond1842 = phi i32 [ %cond1818, %cond.true.1815 ], [ %cond1840, %cond.end.1839 ]
  br label %cond.end.1843

cond.end.1843:                                    ; preds = %cond.end.1841, %lor.end.1810
  %cond1844 = phi i32 [ %cond1811, %lor.end.1810 ], [ %cond1842, %cond.end.1841 ]
  %add1845 = add nsw i32 %770, %cond1844
  %792 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld1846 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %792, i32 0, i32 1
  %arrayidx1847 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1846, i32 0, i64 3
  %rtx1848 = bitcast %union.rtunion_def* %arrayidx1847 to %struct.rtx_def**
  %793 = load %struct.rtx_def*, %struct.rtx_def** %rtx1848, align 8
  %794 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %call1849 = call i32 @refers_to_regno_for_reload_p(i32 %769, i32 %add1845, %struct.rtx_def* %793, %struct.rtx_def** %794)
  %tobool1850 = icmp ne i32 %call1849, 0
  br i1 %tobool1850, label %if.end.2307, label %land.lhs.true.1851

land.lhs.true.1851:                               ; preds = %cond.end.1843
  %795 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1852 = icmp eq %struct.rtx_def* %795, null
  br i1 %cmp1852, label %land.lhs.true.1932, label %lor.lhs.false.1854

lor.lhs.false.1854:                               ; preds = %land.lhs.true.1851
  %796 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %797 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1855 = icmp eq %struct.rtx_def* %796, %797
  br i1 %cmp1855, label %land.lhs.true.1932, label %lor.lhs.false.1857

lor.lhs.false.1857:                               ; preds = %lor.lhs.false.1854
  %798 = load i32, i32* %regno1729, align 4
  %799 = load i32, i32* %regno1729, align 4
  %800 = load i32, i32* %regno1729, align 4
  %cmp1858 = icmp sge i32 %800, 8
  br i1 %cmp1858, label %land.lhs.true.1860, label %lor.lhs.false.1863

land.lhs.true.1860:                               ; preds = %lor.lhs.false.1857
  %801 = load i32, i32* %regno1729, align 4
  %cmp1861 = icmp sle i32 %801, 15
  br i1 %cmp1861, label %cond.true.1881, label %lor.lhs.false.1863

lor.lhs.false.1863:                               ; preds = %land.lhs.true.1860, %lor.lhs.false.1857
  %802 = load i32, i32* %regno1729, align 4
  %cmp1864 = icmp sge i32 %802, 21
  br i1 %cmp1864, label %land.lhs.true.1866, label %lor.lhs.false.1869

land.lhs.true.1866:                               ; preds = %lor.lhs.false.1863
  %803 = load i32, i32* %regno1729, align 4
  %cmp1867 = icmp sle i32 %803, 28
  br i1 %cmp1867, label %cond.true.1881, label %lor.lhs.false.1869

lor.lhs.false.1869:                               ; preds = %land.lhs.true.1866, %lor.lhs.false.1863
  %804 = load i32, i32* %regno1729, align 4
  %cmp1870 = icmp sge i32 %804, 45
  br i1 %cmp1870, label %land.lhs.true.1872, label %lor.lhs.false.1875

land.lhs.true.1872:                               ; preds = %lor.lhs.false.1869
  %805 = load i32, i32* %regno1729, align 4
  %cmp1873 = icmp sle i32 %805, 52
  br i1 %cmp1873, label %cond.true.1881, label %lor.lhs.false.1875

lor.lhs.false.1875:                               ; preds = %land.lhs.true.1872, %lor.lhs.false.1869
  %806 = load i32, i32* %regno1729, align 4
  %cmp1876 = icmp sge i32 %806, 29
  br i1 %cmp1876, label %land.lhs.true.1878, label %cond.false.1893

land.lhs.true.1878:                               ; preds = %lor.lhs.false.1875
  %807 = load i32, i32* %regno1729, align 4
  %cmp1879 = icmp sle i32 %807, 36
  br i1 %cmp1879, label %cond.true.1881, label %cond.false.1893

cond.true.1881:                                   ; preds = %land.lhs.true.1878, %land.lhs.true.1872, %land.lhs.true.1866, %land.lhs.true.1860
  %808 = load i32, i32* %rel_mode, align 4
  %idxprom1882 = sext i32 %808 to i64
  %arrayidx1883 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1882
  %809 = load i32, i32* %arrayidx1883, align 4
  %cmp1884 = icmp eq i32 %809, 5
  br i1 %cmp1884, label %lor.end.1891, label %lor.rhs.1886

lor.rhs.1886:                                     ; preds = %cond.true.1881
  %810 = load i32, i32* %rel_mode, align 4
  %idxprom1887 = sext i32 %810 to i64
  %arrayidx1888 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1887
  %811 = load i32, i32* %arrayidx1888, align 4
  %cmp1889 = icmp eq i32 %811, 6
  br label %lor.end.1891

lor.end.1891:                                     ; preds = %lor.rhs.1886, %cond.true.1881
  %812 = phi i1 [ true, %cond.true.1881 ], [ %cmp1889, %lor.rhs.1886 ]
  %cond1892 = select i1 %812, i32 2, i32 1
  br label %cond.end.1924

cond.false.1893:                                  ; preds = %land.lhs.true.1878, %lor.lhs.false.1875
  %813 = load i32, i32* %rel_mode, align 4
  %cmp1894 = icmp eq i32 %813, 18
  br i1 %cmp1894, label %cond.true.1896, label %cond.false.1900

cond.true.1896:                                   ; preds = %cond.false.1893
  %814 = load i32, i32* @target_flags, align 4
  %and1897 = and i32 %814, 33554432
  %tobool1898 = icmp ne i32 %and1897, 0
  %cond1899 = select i1 %tobool1898, i32 2, i32 3
  br label %cond.end.1922

cond.false.1900:                                  ; preds = %cond.false.1893
  %815 = load i32, i32* %rel_mode, align 4
  %cmp1901 = icmp eq i32 %815, 24
  br i1 %cmp1901, label %cond.true.1903, label %cond.false.1907

cond.true.1903:                                   ; preds = %cond.false.1900
  %816 = load i32, i32* @target_flags, align 4
  %and1904 = and i32 %816, 33554432
  %tobool1905 = icmp ne i32 %and1904, 0
  %cond1906 = select i1 %tobool1905, i32 4, i32 6
  br label %cond.end.1920

cond.false.1907:                                  ; preds = %cond.false.1900
  %817 = load i32, i32* %rel_mode, align 4
  %idxprom1908 = sext i32 %817 to i64
  %arrayidx1909 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1908
  %818 = load i8, i8* %arrayidx1909, align 1
  %conv1910 = zext i8 %818 to i32
  %819 = load i32, i32* @target_flags, align 4
  %and1911 = and i32 %819, 33554432
  %tobool1912 = icmp ne i32 %and1911, 0
  %cond1913 = select i1 %tobool1912, i32 8, i32 4
  %add1914 = add nsw i32 %conv1910, %cond1913
  %sub1915 = sub nsw i32 %add1914, 1
  %820 = load i32, i32* @target_flags, align 4
  %and1916 = and i32 %820, 33554432
  %tobool1917 = icmp ne i32 %and1916, 0
  %cond1918 = select i1 %tobool1917, i32 8, i32 4
  %div1919 = sdiv i32 %sub1915, %cond1918
  br label %cond.end.1920

cond.end.1920:                                    ; preds = %cond.false.1907, %cond.true.1903
  %cond1921 = phi i32 [ %cond1906, %cond.true.1903 ], [ %div1919, %cond.false.1907 ]
  br label %cond.end.1922

cond.end.1922:                                    ; preds = %cond.end.1920, %cond.true.1896
  %cond1923 = phi i32 [ %cond1899, %cond.true.1896 ], [ %cond1921, %cond.end.1920 ]
  br label %cond.end.1924

cond.end.1924:                                    ; preds = %cond.end.1922, %lor.end.1891
  %cond1925 = phi i32 [ %cond1892, %lor.end.1891 ], [ %cond1923, %cond.end.1922 ]
  %add1926 = add nsw i32 %799, %cond1925
  %821 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld1927 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %821, i32 0, i32 1
  %arrayidx1928 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1927, i32 0, i64 3
  %rtx1929 = bitcast %union.rtunion_def* %arrayidx1928 to %struct.rtx_def**
  %822 = load %struct.rtx_def*, %struct.rtx_def** %rtx1929, align 8
  %call1930 = call i32 @hard_reg_set_here_p(i32 %798, i32 %add1926, %struct.rtx_def* %822)
  %tobool1931 = icmp ne i32 %call1930, 0
  br i1 %tobool1931, label %if.end.2307, label %land.lhs.true.1932

land.lhs.true.1932:                               ; preds = %cond.end.1924, %lor.lhs.false.1854, %land.lhs.true.1851
  %823 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %824 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp1933 = icmp ne %struct.rtx_def* %823, %824
  br i1 %cmp1933, label %land.lhs.true.1976, label %lor.lhs.false.1935

lor.lhs.false.1935:                               ; preds = %land.lhs.true.1932
  %825 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %826 = bitcast %struct.rtx_def* %825 to i32*
  %bf.load1936 = load i32, i32* %826, align 8
  %bf.clear1937 = and i32 %bf.load1936, 65535
  %cmp1938 = icmp eq i32 %bf.clear1937, 63
  br i1 %cmp1938, label %land.lhs.true.1940, label %if.end.2307

land.lhs.true.1940:                               ; preds = %lor.lhs.false.1935
  %827 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %828 = bitcast %struct.rtx_def* %827 to i32*
  %bf.load1941 = load i32, i32* %828, align 8
  %bf.lshr1942 = lshr i32 %bf.load1941, 16
  %bf.clear1943 = and i32 %bf.lshr1942, 255
  %idxprom1944 = sext i32 %bf.clear1943 to i64
  %arrayidx1945 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1944
  %829 = load i8, i8* %arrayidx1945, align 1
  %conv1946 = zext i8 %829 to i32
  %830 = load i32, i32* @target_flags, align 4
  %and1947 = and i32 %830, 33554432
  %tobool1948 = icmp ne i32 %and1947, 0
  %cond1949 = select i1 %tobool1948, i32 8, i32 4
  %sub1950 = sub nsw i32 %cond1949, 1
  %add1951 = add nsw i32 %conv1946, %sub1950
  %831 = load i32, i32* @target_flags, align 4
  %and1952 = and i32 %831, 33554432
  %tobool1953 = icmp ne i32 %and1952, 0
  %cond1954 = select i1 %tobool1953, i32 8, i32 4
  %div1955 = sdiv i32 %add1951, %cond1954
  %832 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %fld1956 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %832, i32 0, i32 1
  %arrayidx1957 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1956, i32 0, i64 0
  %rtx1958 = bitcast %union.rtunion_def* %arrayidx1957 to %struct.rtx_def**
  %833 = load %struct.rtx_def*, %struct.rtx_def** %rtx1958, align 8
  %834 = bitcast %struct.rtx_def* %833 to i32*
  %bf.load1959 = load i32, i32* %834, align 8
  %bf.lshr1960 = lshr i32 %bf.load1959, 16
  %bf.clear1961 = and i32 %bf.lshr1960, 255
  %idxprom1962 = sext i32 %bf.clear1961 to i64
  %arrayidx1963 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1962
  %835 = load i8, i8* %arrayidx1963, align 1
  %conv1964 = zext i8 %835 to i32
  %836 = load i32, i32* @target_flags, align 4
  %and1965 = and i32 %836, 33554432
  %tobool1966 = icmp ne i32 %and1965, 0
  %cond1967 = select i1 %tobool1966, i32 8, i32 4
  %sub1968 = sub nsw i32 %cond1967, 1
  %add1969 = add nsw i32 %conv1964, %sub1968
  %837 = load i32, i32* @target_flags, align 4
  %and1970 = and i32 %837, 33554432
  %tobool1971 = icmp ne i32 %and1970, 0
  %cond1972 = select i1 %tobool1971, i32 8, i32 4
  %div1973 = sdiv i32 %add1969, %cond1972
  %cmp1974 = icmp eq i32 %div1955, %div1973
  br i1 %cmp1974, label %land.lhs.true.1976, label %if.end.2307

land.lhs.true.1976:                               ; preds = %land.lhs.true.1940, %land.lhs.true.1932
  %838 = load i32, i32* %rel_mode, align 4
  %idxprom1977 = sext i32 %838 to i64
  %arrayidx1978 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1977
  %839 = load i8, i8* %arrayidx1978, align 1
  %conv1979 = zext i8 %839 to i32
  %840 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld1980 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %840, i32 0, i32 1
  %arrayidx1981 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1980, i32 0, i64 0
  %rtx1982 = bitcast %union.rtunion_def* %arrayidx1981 to %struct.rtx_def**
  %841 = load %struct.rtx_def*, %struct.rtx_def** %rtx1982, align 8
  %842 = bitcast %struct.rtx_def* %841 to i32*
  %bf.load1983 = load i32, i32* %842, align 8
  %bf.lshr1984 = lshr i32 %bf.load1983, 16
  %bf.clear1985 = and i32 %bf.lshr1984, 255
  %idxprom1986 = sext i32 %bf.clear1985 to i64
  %arrayidx1987 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1986
  %843 = load i8, i8* %arrayidx1987, align 1
  %conv1988 = zext i8 %843 to i32
  %cmp1989 = icmp sle i32 %conv1979, %conv1988
  br i1 %cmp1989, label %land.lhs.true.1991, label %if.end.2307

land.lhs.true.1991:                               ; preds = %land.lhs.true.1976
  %844 = load i32, i32* %regno1729, align 4
  %845 = load i32, i32* %inmode.addr, align 4
  %call1992 = call i32 @ix86_hard_regno_mode_ok(i32 %844, i32 %845)
  %tobool1993 = icmp ne i32 %call1992, 0
  br i1 %tobool1993, label %land.lhs.true.1994, label %if.end.2307

land.lhs.true.1994:                               ; preds = %land.lhs.true.1991
  %846 = load i32, i32* %regno1729, align 4
  %847 = load i32, i32* %outmode.addr, align 4
  %call1995 = call i32 @ix86_hard_regno_mode_ok(i32 %846, i32 %847)
  %tobool1996 = icmp ne i32 %call1995, 0
  br i1 %tobool1996, label %if.then.1997, label %if.end.2307

if.then.1997:                                     ; preds = %land.lhs.true.1994
  %848 = load i32, i32* %regno1729, align 4
  %cmp1999 = icmp sge i32 %848, 8
  br i1 %cmp1999, label %land.lhs.true.2001, label %lor.lhs.false.2004

land.lhs.true.2001:                               ; preds = %if.then.1997
  %849 = load i32, i32* %regno1729, align 4
  %cmp2002 = icmp sle i32 %849, 15
  br i1 %cmp2002, label %cond.true.2022, label %lor.lhs.false.2004

lor.lhs.false.2004:                               ; preds = %land.lhs.true.2001, %if.then.1997
  %850 = load i32, i32* %regno1729, align 4
  %cmp2005 = icmp sge i32 %850, 21
  br i1 %cmp2005, label %land.lhs.true.2007, label %lor.lhs.false.2010

land.lhs.true.2007:                               ; preds = %lor.lhs.false.2004
  %851 = load i32, i32* %regno1729, align 4
  %cmp2008 = icmp sle i32 %851, 28
  br i1 %cmp2008, label %cond.true.2022, label %lor.lhs.false.2010

lor.lhs.false.2010:                               ; preds = %land.lhs.true.2007, %lor.lhs.false.2004
  %852 = load i32, i32* %regno1729, align 4
  %cmp2011 = icmp sge i32 %852, 45
  br i1 %cmp2011, label %land.lhs.true.2013, label %lor.lhs.false.2016

land.lhs.true.2013:                               ; preds = %lor.lhs.false.2010
  %853 = load i32, i32* %regno1729, align 4
  %cmp2014 = icmp sle i32 %853, 52
  br i1 %cmp2014, label %cond.true.2022, label %lor.lhs.false.2016

lor.lhs.false.2016:                               ; preds = %land.lhs.true.2013, %lor.lhs.false.2010
  %854 = load i32, i32* %regno1729, align 4
  %cmp2017 = icmp sge i32 %854, 29
  br i1 %cmp2017, label %land.lhs.true.2019, label %cond.false.2034

land.lhs.true.2019:                               ; preds = %lor.lhs.false.2016
  %855 = load i32, i32* %regno1729, align 4
  %cmp2020 = icmp sle i32 %855, 36
  br i1 %cmp2020, label %cond.true.2022, label %cond.false.2034

cond.true.2022:                                   ; preds = %land.lhs.true.2019, %land.lhs.true.2013, %land.lhs.true.2007, %land.lhs.true.2001
  %856 = load i32, i32* %inmode.addr, align 4
  %idxprom2023 = sext i32 %856 to i64
  %arrayidx2024 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2023
  %857 = load i32, i32* %arrayidx2024, align 4
  %cmp2025 = icmp eq i32 %857, 5
  br i1 %cmp2025, label %lor.end.2032, label %lor.rhs.2027

lor.rhs.2027:                                     ; preds = %cond.true.2022
  %858 = load i32, i32* %inmode.addr, align 4
  %idxprom2028 = sext i32 %858 to i64
  %arrayidx2029 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2028
  %859 = load i32, i32* %arrayidx2029, align 4
  %cmp2030 = icmp eq i32 %859, 6
  br label %lor.end.2032

lor.end.2032:                                     ; preds = %lor.rhs.2027, %cond.true.2022
  %860 = phi i1 [ true, %cond.true.2022 ], [ %cmp2030, %lor.rhs.2027 ]
  %cond2033 = select i1 %860, i32 2, i32 1
  br label %cond.end.2065

cond.false.2034:                                  ; preds = %land.lhs.true.2019, %lor.lhs.false.2016
  %861 = load i32, i32* %inmode.addr, align 4
  %cmp2035 = icmp eq i32 %861, 18
  br i1 %cmp2035, label %cond.true.2037, label %cond.false.2041

cond.true.2037:                                   ; preds = %cond.false.2034
  %862 = load i32, i32* @target_flags, align 4
  %and2038 = and i32 %862, 33554432
  %tobool2039 = icmp ne i32 %and2038, 0
  %cond2040 = select i1 %tobool2039, i32 2, i32 3
  br label %cond.end.2063

cond.false.2041:                                  ; preds = %cond.false.2034
  %863 = load i32, i32* %inmode.addr, align 4
  %cmp2042 = icmp eq i32 %863, 24
  br i1 %cmp2042, label %cond.true.2044, label %cond.false.2048

cond.true.2044:                                   ; preds = %cond.false.2041
  %864 = load i32, i32* @target_flags, align 4
  %and2045 = and i32 %864, 33554432
  %tobool2046 = icmp ne i32 %and2045, 0
  %cond2047 = select i1 %tobool2046, i32 4, i32 6
  br label %cond.end.2061

cond.false.2048:                                  ; preds = %cond.false.2041
  %865 = load i32, i32* %inmode.addr, align 4
  %idxprom2049 = sext i32 %865 to i64
  %arrayidx2050 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2049
  %866 = load i8, i8* %arrayidx2050, align 1
  %conv2051 = zext i8 %866 to i32
  %867 = load i32, i32* @target_flags, align 4
  %and2052 = and i32 %867, 33554432
  %tobool2053 = icmp ne i32 %and2052, 0
  %cond2054 = select i1 %tobool2053, i32 8, i32 4
  %add2055 = add nsw i32 %conv2051, %cond2054
  %sub2056 = sub nsw i32 %add2055, 1
  %868 = load i32, i32* @target_flags, align 4
  %and2057 = and i32 %868, 33554432
  %tobool2058 = icmp ne i32 %and2057, 0
  %cond2059 = select i1 %tobool2058, i32 8, i32 4
  %div2060 = sdiv i32 %sub2056, %cond2059
  br label %cond.end.2061

cond.end.2061:                                    ; preds = %cond.false.2048, %cond.true.2044
  %cond2062 = phi i32 [ %cond2047, %cond.true.2044 ], [ %div2060, %cond.false.2048 ]
  br label %cond.end.2063

cond.end.2063:                                    ; preds = %cond.end.2061, %cond.true.2037
  %cond2064 = phi i32 [ %cond2040, %cond.true.2037 ], [ %cond2062, %cond.end.2061 ]
  br label %cond.end.2065

cond.end.2065:                                    ; preds = %cond.end.2063, %lor.end.2032
  %cond2066 = phi i32 [ %cond2033, %lor.end.2032 ], [ %cond2064, %cond.end.2063 ]
  %869 = load i32, i32* %regno1729, align 4
  %cmp2067 = icmp sge i32 %869, 8
  br i1 %cmp2067, label %land.lhs.true.2069, label %lor.lhs.false.2072

land.lhs.true.2069:                               ; preds = %cond.end.2065
  %870 = load i32, i32* %regno1729, align 4
  %cmp2070 = icmp sle i32 %870, 15
  br i1 %cmp2070, label %cond.true.2090, label %lor.lhs.false.2072

lor.lhs.false.2072:                               ; preds = %land.lhs.true.2069, %cond.end.2065
  %871 = load i32, i32* %regno1729, align 4
  %cmp2073 = icmp sge i32 %871, 21
  br i1 %cmp2073, label %land.lhs.true.2075, label %lor.lhs.false.2078

land.lhs.true.2075:                               ; preds = %lor.lhs.false.2072
  %872 = load i32, i32* %regno1729, align 4
  %cmp2076 = icmp sle i32 %872, 28
  br i1 %cmp2076, label %cond.true.2090, label %lor.lhs.false.2078

lor.lhs.false.2078:                               ; preds = %land.lhs.true.2075, %lor.lhs.false.2072
  %873 = load i32, i32* %regno1729, align 4
  %cmp2079 = icmp sge i32 %873, 45
  br i1 %cmp2079, label %land.lhs.true.2081, label %lor.lhs.false.2084

land.lhs.true.2081:                               ; preds = %lor.lhs.false.2078
  %874 = load i32, i32* %regno1729, align 4
  %cmp2082 = icmp sle i32 %874, 52
  br i1 %cmp2082, label %cond.true.2090, label %lor.lhs.false.2084

lor.lhs.false.2084:                               ; preds = %land.lhs.true.2081, %lor.lhs.false.2078
  %875 = load i32, i32* %regno1729, align 4
  %cmp2085 = icmp sge i32 %875, 29
  br i1 %cmp2085, label %land.lhs.true.2087, label %cond.false.2102

land.lhs.true.2087:                               ; preds = %lor.lhs.false.2084
  %876 = load i32, i32* %regno1729, align 4
  %cmp2088 = icmp sle i32 %876, 36
  br i1 %cmp2088, label %cond.true.2090, label %cond.false.2102

cond.true.2090:                                   ; preds = %land.lhs.true.2087, %land.lhs.true.2081, %land.lhs.true.2075, %land.lhs.true.2069
  %877 = load i32, i32* %outmode.addr, align 4
  %idxprom2091 = sext i32 %877 to i64
  %arrayidx2092 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2091
  %878 = load i32, i32* %arrayidx2092, align 4
  %cmp2093 = icmp eq i32 %878, 5
  br i1 %cmp2093, label %lor.end.2100, label %lor.rhs.2095

lor.rhs.2095:                                     ; preds = %cond.true.2090
  %879 = load i32, i32* %outmode.addr, align 4
  %idxprom2096 = sext i32 %879 to i64
  %arrayidx2097 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2096
  %880 = load i32, i32* %arrayidx2097, align 4
  %cmp2098 = icmp eq i32 %880, 6
  br label %lor.end.2100

lor.end.2100:                                     ; preds = %lor.rhs.2095, %cond.true.2090
  %881 = phi i1 [ true, %cond.true.2090 ], [ %cmp2098, %lor.rhs.2095 ]
  %cond2101 = select i1 %881, i32 2, i32 1
  br label %cond.end.2133

cond.false.2102:                                  ; preds = %land.lhs.true.2087, %lor.lhs.false.2084
  %882 = load i32, i32* %outmode.addr, align 4
  %cmp2103 = icmp eq i32 %882, 18
  br i1 %cmp2103, label %cond.true.2105, label %cond.false.2109

cond.true.2105:                                   ; preds = %cond.false.2102
  %883 = load i32, i32* @target_flags, align 4
  %and2106 = and i32 %883, 33554432
  %tobool2107 = icmp ne i32 %and2106, 0
  %cond2108 = select i1 %tobool2107, i32 2, i32 3
  br label %cond.end.2131

cond.false.2109:                                  ; preds = %cond.false.2102
  %884 = load i32, i32* %outmode.addr, align 4
  %cmp2110 = icmp eq i32 %884, 24
  br i1 %cmp2110, label %cond.true.2112, label %cond.false.2116

cond.true.2112:                                   ; preds = %cond.false.2109
  %885 = load i32, i32* @target_flags, align 4
  %and2113 = and i32 %885, 33554432
  %tobool2114 = icmp ne i32 %and2113, 0
  %cond2115 = select i1 %tobool2114, i32 4, i32 6
  br label %cond.end.2129

cond.false.2116:                                  ; preds = %cond.false.2109
  %886 = load i32, i32* %outmode.addr, align 4
  %idxprom2117 = sext i32 %886 to i64
  %arrayidx2118 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2117
  %887 = load i8, i8* %arrayidx2118, align 1
  %conv2119 = zext i8 %887 to i32
  %888 = load i32, i32* @target_flags, align 4
  %and2120 = and i32 %888, 33554432
  %tobool2121 = icmp ne i32 %and2120, 0
  %cond2122 = select i1 %tobool2121, i32 8, i32 4
  %add2123 = add nsw i32 %conv2119, %cond2122
  %sub2124 = sub nsw i32 %add2123, 1
  %889 = load i32, i32* @target_flags, align 4
  %and2125 = and i32 %889, 33554432
  %tobool2126 = icmp ne i32 %and2125, 0
  %cond2127 = select i1 %tobool2126, i32 8, i32 4
  %div2128 = sdiv i32 %sub2124, %cond2127
  br label %cond.end.2129

cond.end.2129:                                    ; preds = %cond.false.2116, %cond.true.2112
  %cond2130 = phi i32 [ %cond2115, %cond.true.2112 ], [ %div2128, %cond.false.2116 ]
  br label %cond.end.2131

cond.end.2131:                                    ; preds = %cond.end.2129, %cond.true.2105
  %cond2132 = phi i32 [ %cond2108, %cond.true.2105 ], [ %cond2130, %cond.end.2129 ]
  br label %cond.end.2133

cond.end.2133:                                    ; preds = %cond.end.2131, %lor.end.2100
  %cond2134 = phi i32 [ %cond2101, %lor.end.2100 ], [ %cond2132, %cond.end.2131 ]
  %cmp2135 = icmp sgt i32 %cond2066, %cond2134
  br i1 %cmp2135, label %cond.true.2137, label %cond.false.2206

cond.true.2137:                                   ; preds = %cond.end.2133
  %890 = load i32, i32* %regno1729, align 4
  %cmp2138 = icmp sge i32 %890, 8
  br i1 %cmp2138, label %land.lhs.true.2140, label %lor.lhs.false.2143

land.lhs.true.2140:                               ; preds = %cond.true.2137
  %891 = load i32, i32* %regno1729, align 4
  %cmp2141 = icmp sle i32 %891, 15
  br i1 %cmp2141, label %cond.true.2161, label %lor.lhs.false.2143

lor.lhs.false.2143:                               ; preds = %land.lhs.true.2140, %cond.true.2137
  %892 = load i32, i32* %regno1729, align 4
  %cmp2144 = icmp sge i32 %892, 21
  br i1 %cmp2144, label %land.lhs.true.2146, label %lor.lhs.false.2149

land.lhs.true.2146:                               ; preds = %lor.lhs.false.2143
  %893 = load i32, i32* %regno1729, align 4
  %cmp2147 = icmp sle i32 %893, 28
  br i1 %cmp2147, label %cond.true.2161, label %lor.lhs.false.2149

lor.lhs.false.2149:                               ; preds = %land.lhs.true.2146, %lor.lhs.false.2143
  %894 = load i32, i32* %regno1729, align 4
  %cmp2150 = icmp sge i32 %894, 45
  br i1 %cmp2150, label %land.lhs.true.2152, label %lor.lhs.false.2155

land.lhs.true.2152:                               ; preds = %lor.lhs.false.2149
  %895 = load i32, i32* %regno1729, align 4
  %cmp2153 = icmp sle i32 %895, 52
  br i1 %cmp2153, label %cond.true.2161, label %lor.lhs.false.2155

lor.lhs.false.2155:                               ; preds = %land.lhs.true.2152, %lor.lhs.false.2149
  %896 = load i32, i32* %regno1729, align 4
  %cmp2156 = icmp sge i32 %896, 29
  br i1 %cmp2156, label %land.lhs.true.2158, label %cond.false.2173

land.lhs.true.2158:                               ; preds = %lor.lhs.false.2155
  %897 = load i32, i32* %regno1729, align 4
  %cmp2159 = icmp sle i32 %897, 36
  br i1 %cmp2159, label %cond.true.2161, label %cond.false.2173

cond.true.2161:                                   ; preds = %land.lhs.true.2158, %land.lhs.true.2152, %land.lhs.true.2146, %land.lhs.true.2140
  %898 = load i32, i32* %inmode.addr, align 4
  %idxprom2162 = sext i32 %898 to i64
  %arrayidx2163 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2162
  %899 = load i32, i32* %arrayidx2163, align 4
  %cmp2164 = icmp eq i32 %899, 5
  br i1 %cmp2164, label %lor.end.2171, label %lor.rhs.2166

lor.rhs.2166:                                     ; preds = %cond.true.2161
  %900 = load i32, i32* %inmode.addr, align 4
  %idxprom2167 = sext i32 %900 to i64
  %arrayidx2168 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2167
  %901 = load i32, i32* %arrayidx2168, align 4
  %cmp2169 = icmp eq i32 %901, 6
  br label %lor.end.2171

lor.end.2171:                                     ; preds = %lor.rhs.2166, %cond.true.2161
  %902 = phi i1 [ true, %cond.true.2161 ], [ %cmp2169, %lor.rhs.2166 ]
  %cond2172 = select i1 %902, i32 2, i32 1
  br label %cond.end.2204

cond.false.2173:                                  ; preds = %land.lhs.true.2158, %lor.lhs.false.2155
  %903 = load i32, i32* %inmode.addr, align 4
  %cmp2174 = icmp eq i32 %903, 18
  br i1 %cmp2174, label %cond.true.2176, label %cond.false.2180

cond.true.2176:                                   ; preds = %cond.false.2173
  %904 = load i32, i32* @target_flags, align 4
  %and2177 = and i32 %904, 33554432
  %tobool2178 = icmp ne i32 %and2177, 0
  %cond2179 = select i1 %tobool2178, i32 2, i32 3
  br label %cond.end.2202

cond.false.2180:                                  ; preds = %cond.false.2173
  %905 = load i32, i32* %inmode.addr, align 4
  %cmp2181 = icmp eq i32 %905, 24
  br i1 %cmp2181, label %cond.true.2183, label %cond.false.2187

cond.true.2183:                                   ; preds = %cond.false.2180
  %906 = load i32, i32* @target_flags, align 4
  %and2184 = and i32 %906, 33554432
  %tobool2185 = icmp ne i32 %and2184, 0
  %cond2186 = select i1 %tobool2185, i32 4, i32 6
  br label %cond.end.2200

cond.false.2187:                                  ; preds = %cond.false.2180
  %907 = load i32, i32* %inmode.addr, align 4
  %idxprom2188 = sext i32 %907 to i64
  %arrayidx2189 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2188
  %908 = load i8, i8* %arrayidx2189, align 1
  %conv2190 = zext i8 %908 to i32
  %909 = load i32, i32* @target_flags, align 4
  %and2191 = and i32 %909, 33554432
  %tobool2192 = icmp ne i32 %and2191, 0
  %cond2193 = select i1 %tobool2192, i32 8, i32 4
  %add2194 = add nsw i32 %conv2190, %cond2193
  %sub2195 = sub nsw i32 %add2194, 1
  %910 = load i32, i32* @target_flags, align 4
  %and2196 = and i32 %910, 33554432
  %tobool2197 = icmp ne i32 %and2196, 0
  %cond2198 = select i1 %tobool2197, i32 8, i32 4
  %div2199 = sdiv i32 %sub2195, %cond2198
  br label %cond.end.2200

cond.end.2200:                                    ; preds = %cond.false.2187, %cond.true.2183
  %cond2201 = phi i32 [ %cond2186, %cond.true.2183 ], [ %div2199, %cond.false.2187 ]
  br label %cond.end.2202

cond.end.2202:                                    ; preds = %cond.end.2200, %cond.true.2176
  %cond2203 = phi i32 [ %cond2179, %cond.true.2176 ], [ %cond2201, %cond.end.2200 ]
  br label %cond.end.2204

cond.end.2204:                                    ; preds = %cond.end.2202, %lor.end.2171
  %cond2205 = phi i32 [ %cond2172, %lor.end.2171 ], [ %cond2203, %cond.end.2202 ]
  br label %cond.end.2275

cond.false.2206:                                  ; preds = %cond.end.2133
  %911 = load i32, i32* %regno1729, align 4
  %cmp2207 = icmp sge i32 %911, 8
  br i1 %cmp2207, label %land.lhs.true.2209, label %lor.lhs.false.2212

land.lhs.true.2209:                               ; preds = %cond.false.2206
  %912 = load i32, i32* %regno1729, align 4
  %cmp2210 = icmp sle i32 %912, 15
  br i1 %cmp2210, label %cond.true.2230, label %lor.lhs.false.2212

lor.lhs.false.2212:                               ; preds = %land.lhs.true.2209, %cond.false.2206
  %913 = load i32, i32* %regno1729, align 4
  %cmp2213 = icmp sge i32 %913, 21
  br i1 %cmp2213, label %land.lhs.true.2215, label %lor.lhs.false.2218

land.lhs.true.2215:                               ; preds = %lor.lhs.false.2212
  %914 = load i32, i32* %regno1729, align 4
  %cmp2216 = icmp sle i32 %914, 28
  br i1 %cmp2216, label %cond.true.2230, label %lor.lhs.false.2218

lor.lhs.false.2218:                               ; preds = %land.lhs.true.2215, %lor.lhs.false.2212
  %915 = load i32, i32* %regno1729, align 4
  %cmp2219 = icmp sge i32 %915, 45
  br i1 %cmp2219, label %land.lhs.true.2221, label %lor.lhs.false.2224

land.lhs.true.2221:                               ; preds = %lor.lhs.false.2218
  %916 = load i32, i32* %regno1729, align 4
  %cmp2222 = icmp sle i32 %916, 52
  br i1 %cmp2222, label %cond.true.2230, label %lor.lhs.false.2224

lor.lhs.false.2224:                               ; preds = %land.lhs.true.2221, %lor.lhs.false.2218
  %917 = load i32, i32* %regno1729, align 4
  %cmp2225 = icmp sge i32 %917, 29
  br i1 %cmp2225, label %land.lhs.true.2227, label %cond.false.2242

land.lhs.true.2227:                               ; preds = %lor.lhs.false.2224
  %918 = load i32, i32* %regno1729, align 4
  %cmp2228 = icmp sle i32 %918, 36
  br i1 %cmp2228, label %cond.true.2230, label %cond.false.2242

cond.true.2230:                                   ; preds = %land.lhs.true.2227, %land.lhs.true.2221, %land.lhs.true.2215, %land.lhs.true.2209
  %919 = load i32, i32* %outmode.addr, align 4
  %idxprom2231 = sext i32 %919 to i64
  %arrayidx2232 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2231
  %920 = load i32, i32* %arrayidx2232, align 4
  %cmp2233 = icmp eq i32 %920, 5
  br i1 %cmp2233, label %lor.end.2240, label %lor.rhs.2235

lor.rhs.2235:                                     ; preds = %cond.true.2230
  %921 = load i32, i32* %outmode.addr, align 4
  %idxprom2236 = sext i32 %921 to i64
  %arrayidx2237 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2236
  %922 = load i32, i32* %arrayidx2237, align 4
  %cmp2238 = icmp eq i32 %922, 6
  br label %lor.end.2240

lor.end.2240:                                     ; preds = %lor.rhs.2235, %cond.true.2230
  %923 = phi i1 [ true, %cond.true.2230 ], [ %cmp2238, %lor.rhs.2235 ]
  %cond2241 = select i1 %923, i32 2, i32 1
  br label %cond.end.2273

cond.false.2242:                                  ; preds = %land.lhs.true.2227, %lor.lhs.false.2224
  %924 = load i32, i32* %outmode.addr, align 4
  %cmp2243 = icmp eq i32 %924, 18
  br i1 %cmp2243, label %cond.true.2245, label %cond.false.2249

cond.true.2245:                                   ; preds = %cond.false.2242
  %925 = load i32, i32* @target_flags, align 4
  %and2246 = and i32 %925, 33554432
  %tobool2247 = icmp ne i32 %and2246, 0
  %cond2248 = select i1 %tobool2247, i32 2, i32 3
  br label %cond.end.2271

cond.false.2249:                                  ; preds = %cond.false.2242
  %926 = load i32, i32* %outmode.addr, align 4
  %cmp2250 = icmp eq i32 %926, 24
  br i1 %cmp2250, label %cond.true.2252, label %cond.false.2256

cond.true.2252:                                   ; preds = %cond.false.2249
  %927 = load i32, i32* @target_flags, align 4
  %and2253 = and i32 %927, 33554432
  %tobool2254 = icmp ne i32 %and2253, 0
  %cond2255 = select i1 %tobool2254, i32 4, i32 6
  br label %cond.end.2269

cond.false.2256:                                  ; preds = %cond.false.2249
  %928 = load i32, i32* %outmode.addr, align 4
  %idxprom2257 = sext i32 %928 to i64
  %arrayidx2258 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2257
  %929 = load i8, i8* %arrayidx2258, align 1
  %conv2259 = zext i8 %929 to i32
  %930 = load i32, i32* @target_flags, align 4
  %and2260 = and i32 %930, 33554432
  %tobool2261 = icmp ne i32 %and2260, 0
  %cond2262 = select i1 %tobool2261, i32 8, i32 4
  %add2263 = add nsw i32 %conv2259, %cond2262
  %sub2264 = sub nsw i32 %add2263, 1
  %931 = load i32, i32* @target_flags, align 4
  %and2265 = and i32 %931, 33554432
  %tobool2266 = icmp ne i32 %and2265, 0
  %cond2267 = select i1 %tobool2266, i32 8, i32 4
  %div2268 = sdiv i32 %sub2264, %cond2267
  br label %cond.end.2269

cond.end.2269:                                    ; preds = %cond.false.2256, %cond.true.2252
  %cond2270 = phi i32 [ %cond2255, %cond.true.2252 ], [ %div2268, %cond.false.2256 ]
  br label %cond.end.2271

cond.end.2271:                                    ; preds = %cond.end.2269, %cond.true.2245
  %cond2272 = phi i32 [ %cond2248, %cond.true.2245 ], [ %cond2270, %cond.end.2269 ]
  br label %cond.end.2273

cond.end.2273:                                    ; preds = %cond.end.2271, %lor.end.2240
  %cond2274 = phi i32 [ %cond2241, %lor.end.2240 ], [ %cond2272, %cond.end.2271 ]
  br label %cond.end.2275

cond.end.2275:                                    ; preds = %cond.end.2273, %cond.end.2204
  %cond2276 = phi i32 [ %cond2205, %cond.end.2204 ], [ %cond2274, %cond.end.2273 ]
  store i32 %cond2276, i32* %nregs1998, align 4
  store i32 0, i32* %offs, align 4
  br label %for.cond.2277

for.cond.2277:                                    ; preds = %for.inc.2296, %cond.end.2275
  %932 = load i32, i32* %offs, align 4
  %933 = load i32, i32* %nregs1998, align 4
  %cmp2278 = icmp ult i32 %932, %933
  br i1 %cmp2278, label %for.body.2280, label %for.end.2298

for.body.2280:                                    ; preds = %for.cond.2277
  %934 = load i32, i32* %regno1729, align 4
  %935 = load i32, i32* %offs, align 4
  %add2281 = add i32 %934, %935
  %idxprom2282 = zext i32 %add2281 to i64
  %arrayidx2283 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom2282
  %936 = load i8, i8* %arrayidx2283, align 1
  %conv2284 = sext i8 %936 to i32
  %tobool2285 = icmp ne i32 %conv2284, 0
  br i1 %tobool2285, label %if.then.2294, label %lor.lhs.false.2286

lor.lhs.false.2286:                               ; preds = %for.body.2280
  %937 = load i32, i32* %class.addr, align 4
  %idxprom2287 = sext i32 %937 to i64
  %arrayidx2288 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom2287
  %938 = load i64, i64* %arrayidx2288, align 8
  %939 = load i32, i32* %regno1729, align 4
  %940 = load i32, i32* %offs, align 4
  %add2289 = add i32 %939, %940
  %sh_prom2290 = zext i32 %add2289 to i64
  %shl2291 = shl i64 1, %sh_prom2290
  %and2292 = and i64 %938, %shl2291
  %tobool2293 = icmp ne i64 %and2292, 0
  br i1 %tobool2293, label %if.end.2295, label %if.then.2294

if.then.2294:                                     ; preds = %lor.lhs.false.2286, %for.body.2280
  br label %for.end.2298

if.end.2295:                                      ; preds = %lor.lhs.false.2286
  br label %for.inc.2296

for.inc.2296:                                     ; preds = %if.end.2295
  %941 = load i32, i32* %offs, align 4
  %inc2297 = add i32 %941, 1
  store i32 %inc2297, i32* %offs, align 4
  br label %for.cond.2277

for.end.2298:                                     ; preds = %if.then.2294, %for.cond.2277
  %942 = load i32, i32* %offs, align 4
  %943 = load i32, i32* %nregs1998, align 4
  %cmp2299 = icmp eq i32 %942, %943
  br i1 %cmp2299, label %if.then.2301, label %if.end.2306

if.then.2301:                                     ; preds = %for.end.2298
  %944 = load i32, i32* %rel_mode, align 4
  %945 = load i32, i32* %regno1729, align 4
  %call2302 = call %struct.rtx_def* @gen_rtx_REG(i32 %944, i32 %945)
  %946 = load i32, i32* %i, align 4
  %idxprom2303 = sext i32 %946 to i64
  %arrayidx2304 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2303
  %reg_rtx2305 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2304, i32 0, i32 11
  store %struct.rtx_def* %call2302, %struct.rtx_def** %reg_rtx2305, align 8
  br label %for.end.2312

if.end.2306:                                      ; preds = %for.end.2298
  br label %if.end.2307

if.end.2307:                                      ; preds = %if.end.2306, %land.lhs.true.1994, %land.lhs.true.1991, %land.lhs.true.1976, %land.lhs.true.1940, %lor.lhs.false.1935, %cond.end.1924, %cond.end.1843, %land.lhs.true.1770, %land.lhs.true.1761, %land.lhs.true.1753, %for.body.1747
  br label %for.inc.2308

for.inc.2308:                                     ; preds = %if.end.2307
  %947 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %947, i32 0, i32 1
  %arrayidx2310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2309, i32 0, i64 1
  %rtx2311 = bitcast %union.rtunion_def* %arrayidx2310 to %struct.rtx_def**
  %948 = load %struct.rtx_def*, %struct.rtx_def** %rtx2311, align 8
  store %struct.rtx_def* %948, %struct.rtx_def** %note, align 8
  br label %for.cond.1745

for.end.2312:                                     ; preds = %if.then.2301, %for.cond.1745
  br label %if.end.2313

if.end.2313:                                      ; preds = %for.end.2312, %land.lhs.true.1725, %if.end.1719
  %949 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %tobool2314 = icmp ne %struct.rtx_def* %949, null
  br i1 %tobool2314, label %if.then.2315, label %if.end.2316

if.then.2315:                                     ; preds = %if.end.2313
  %950 = load i32, i32* %i, align 4
  store i32 %950, i32* @output_reloadnum, align 4
  br label %if.end.2316

if.end.2316:                                      ; preds = %if.then.2315, %if.end.2313
  %951 = load i32, i32* %i, align 4
  ret i32 %951
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @subreg_lowpart_p(%struct.rtx_def*) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @subreg_regno(%struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @reload_inner_reg_of_subreg(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %inner = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %inner, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 67
  br i1 %cmp3, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 68
  br i1 %cmp6, label %if.then.35, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load8 = load i32, i32* %9, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 54
  br i1 %cmp10, label %if.then.35, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false.7
  %10 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load12 = load i32, i32* %11, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 55
  br i1 %cmp14, label %if.then.35, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.11
  %12 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load16 = load i32, i32* %13, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 58
  br i1 %cmp18, label %if.then.35, label %lor.lhs.false.19

lor.lhs.false.19:                                 ; preds = %lor.lhs.false.15
  %14 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load20 = load i32, i32* %15, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 134
  br i1 %cmp22, label %if.then.35, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %lor.lhs.false.19
  %16 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load24 = load i32, i32* %17, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 56
  br i1 %cmp26, label %if.then.35, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %lor.lhs.false.23
  %18 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load28 = load i32, i32* %19, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 140
  br i1 %cmp30, label %if.then.35, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.27
  %20 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load32 = load i32, i32* %21, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 75
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %lor.lhs.false.31, %lor.lhs.false.27, %lor.lhs.false.23, %lor.lhs.false.19, %lor.lhs.false.15, %lor.lhs.false.11, %lor.lhs.false.7, %lor.lhs.false, %if.end
  store i32 1, i32* %retval
  br label %return

if.end.36:                                        ; preds = %lor.lhs.false.31
  %22 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load37 = load i32, i32* %23, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp ne i32 %bf.clear38, 61
  br i1 %cmp39, label %if.then.44, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %if.end.36
  %24 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx42 to i32*
  %25 = load i32, i32* %rtuint, align 4
  %cmp43 = icmp uge i32 %25, 53
  br i1 %cmp43, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %lor.lhs.false.40, %if.end.36
  store i32 0, i32* %retval
  br label %return

if.end.45:                                        ; preds = %lor.lhs.false.40
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @subreg_regno(%struct.rtx_def* %26)
  %27 = load i32, i32* %mode.addr, align 4
  %call46 = call i32 @ix86_hard_regno_mode_ok(i32 %call, i32 %27)
  %tobool = icmp ne i32 %call46, 0
  br i1 %tobool, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.45
  store i32 1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.end.45
  %28 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %28 to i64
  %arrayidx49 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %29 = load i8, i8* %arrayidx49, align 1
  %conv = zext i8 %29 to i32
  %30 = load i32, i32* @target_flags, align 4
  %and = and i32 %30, 33554432
  %tobool50 = icmp ne i32 %and, 0
  %cond = select i1 %tobool50, i32 8, i32 4
  %cmp51 = icmp sle i32 %conv, %cond
  br i1 %cmp51, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %if.end.48
  %31 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load53 = load i32, i32* %32, align 8
  %bf.lshr = lshr i32 %bf.load53, 16
  %bf.clear54 = and i32 %bf.lshr, 255
  %idxprom55 = sext i32 %bf.clear54 to i64
  %arrayidx56 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom55
  %33 = load i8, i8* %arrayidx56, align 1
  %conv57 = zext i8 %33 to i32
  %34 = load i32, i32* @target_flags, align 4
  %and58 = and i32 %34, 33554432
  %tobool59 = icmp ne i32 %and58, 0
  %cond60 = select i1 %tobool59, i32 8, i32 4
  %cmp61 = icmp sgt i32 %conv57, %cond60
  br i1 %cmp61, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %35 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load63 = load i32, i32* %36, align 8
  %bf.lshr64 = lshr i32 %bf.load63, 16
  %bf.clear65 = and i32 %bf.lshr64, 255
  %idxprom66 = sext i32 %bf.clear65 to i64
  %arrayidx67 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom66
  %37 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %37 to i32
  %38 = load i32, i32* @target_flags, align 4
  %and69 = and i32 %38, 33554432
  %tobool70 = icmp ne i32 %and69, 0
  %cond71 = select i1 %tobool70, i32 8, i32 4
  %div = sdiv i32 %conv68, %cond71
  %39 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtuint74 = bitcast %union.rtunion_def* %arrayidx73 to i32*
  %40 = load i32, i32* %rtuint74, align 4
  %cmp75 = icmp uge i32 %40, 8
  br i1 %cmp75, label %land.lhs.true.77, label %lor.lhs.false.83

land.lhs.true.77:                                 ; preds = %land.rhs
  %41 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtuint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %42 = load i32, i32* %rtuint80, align 4
  %cmp81 = icmp ule i32 %42, 15
  br i1 %cmp81, label %cond.true, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %land.lhs.true.77, %land.rhs
  %43 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i32 0, i64 0
  %rtuint86 = bitcast %union.rtunion_def* %arrayidx85 to i32*
  %44 = load i32, i32* %rtuint86, align 4
  %cmp87 = icmp uge i32 %44, 21
  br i1 %cmp87, label %land.lhs.true.89, label %lor.lhs.false.95

land.lhs.true.89:                                 ; preds = %lor.lhs.false.83
  %45 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtuint92 = bitcast %union.rtunion_def* %arrayidx91 to i32*
  %46 = load i32, i32* %rtuint92, align 4
  %cmp93 = icmp ule i32 %46, 28
  br i1 %cmp93, label %cond.true, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %land.lhs.true.89, %lor.lhs.false.83
  %47 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtuint98 = bitcast %union.rtunion_def* %arrayidx97 to i32*
  %48 = load i32, i32* %rtuint98, align 4
  %cmp99 = icmp uge i32 %48, 45
  br i1 %cmp99, label %land.lhs.true.101, label %lor.lhs.false.107

land.lhs.true.101:                                ; preds = %lor.lhs.false.95
  %49 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtuint104 = bitcast %union.rtunion_def* %arrayidx103 to i32*
  %50 = load i32, i32* %rtuint104, align 4
  %cmp105 = icmp ule i32 %50, 52
  br i1 %cmp105, label %cond.true, label %lor.lhs.false.107

lor.lhs.false.107:                                ; preds = %land.lhs.true.101, %lor.lhs.false.95
  %51 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtuint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %52 = load i32, i32* %rtuint110, align 4
  %cmp111 = icmp uge i32 %52, 29
  br i1 %cmp111, label %land.lhs.true.113, label %cond.false

land.lhs.true.113:                                ; preds = %lor.lhs.false.107
  %53 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 0
  %rtuint116 = bitcast %union.rtunion_def* %arrayidx115 to i32*
  %54 = load i32, i32* %rtuint116, align 4
  %cmp117 = icmp ule i32 %54, 36
  br i1 %cmp117, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.113, %land.lhs.true.101, %land.lhs.true.89, %land.lhs.true.77
  %55 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load119 = load i32, i32* %56, align 8
  %bf.lshr120 = lshr i32 %bf.load119, 16
  %bf.clear121 = and i32 %bf.lshr120, 255
  %idxprom122 = sext i32 %bf.clear121 to i64
  %arrayidx123 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom122
  %57 = load i32, i32* %arrayidx123, align 4
  %cmp124 = icmp eq i32 %57, 5
  br i1 %cmp124, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %58 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load126 = load i32, i32* %59, align 8
  %bf.lshr127 = lshr i32 %bf.load126, 16
  %bf.clear128 = and i32 %bf.lshr127, 255
  %idxprom129 = sext i32 %bf.clear128 to i64
  %arrayidx130 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom129
  %60 = load i32, i32* %arrayidx130, align 4
  %cmp131 = icmp eq i32 %60, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %61 = phi i1 [ true, %cond.true ], [ %cmp131, %lor.rhs ]
  %cond133 = select i1 %61, i32 2, i32 1
  br label %cond.end.170

cond.false:                                       ; preds = %land.lhs.true.113, %lor.lhs.false.107
  %62 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load134 = load i32, i32* %63, align 8
  %bf.lshr135 = lshr i32 %bf.load134, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %cmp137 = icmp eq i32 %bf.clear136, 18
  br i1 %cmp137, label %cond.true.139, label %cond.false.143

cond.true.139:                                    ; preds = %cond.false
  %64 = load i32, i32* @target_flags, align 4
  %and140 = and i32 %64, 33554432
  %tobool141 = icmp ne i32 %and140, 0
  %cond142 = select i1 %tobool141, i32 2, i32 3
  br label %cond.end.168

cond.false.143:                                   ; preds = %cond.false
  %65 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load144 = load i32, i32* %66, align 8
  %bf.lshr145 = lshr i32 %bf.load144, 16
  %bf.clear146 = and i32 %bf.lshr145, 255
  %cmp147 = icmp eq i32 %bf.clear146, 24
  br i1 %cmp147, label %cond.true.149, label %cond.false.153

cond.true.149:                                    ; preds = %cond.false.143
  %67 = load i32, i32* @target_flags, align 4
  %and150 = and i32 %67, 33554432
  %tobool151 = icmp ne i32 %and150, 0
  %cond152 = select i1 %tobool151, i32 4, i32 6
  br label %cond.end

cond.false.153:                                   ; preds = %cond.false.143
  %68 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load154 = load i32, i32* %69, align 8
  %bf.lshr155 = lshr i32 %bf.load154, 16
  %bf.clear156 = and i32 %bf.lshr155, 255
  %idxprom157 = sext i32 %bf.clear156 to i64
  %arrayidx158 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom157
  %70 = load i8, i8* %arrayidx158, align 1
  %conv159 = zext i8 %70 to i32
  %71 = load i32, i32* @target_flags, align 4
  %and160 = and i32 %71, 33554432
  %tobool161 = icmp ne i32 %and160, 0
  %cond162 = select i1 %tobool161, i32 8, i32 4
  %add = add nsw i32 %conv159, %cond162
  %sub = sub nsw i32 %add, 1
  %72 = load i32, i32* @target_flags, align 4
  %and163 = and i32 %72, 33554432
  %tobool164 = icmp ne i32 %and163, 0
  %cond165 = select i1 %tobool164, i32 8, i32 4
  %div166 = sdiv i32 %sub, %cond165
  br label %cond.end

cond.end:                                         ; preds = %cond.false.153, %cond.true.149
  %cond167 = phi i32 [ %cond152, %cond.true.149 ], [ %div166, %cond.false.153 ]
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.end, %cond.true.139
  %cond169 = phi i32 [ %cond142, %cond.true.139 ], [ %cond167, %cond.end ]
  br label %cond.end.170

cond.end.170:                                     ; preds = %cond.end.168, %lor.end
  %cond171 = phi i32 [ %cond133, %lor.end ], [ %cond169, %cond.end.168 ]
  %cmp172 = icmp ne i32 %div, %cond171
  br label %land.end

land.end:                                         ; preds = %cond.end.170, %land.lhs.true, %if.end.48
  %73 = phi i1 [ false, %land.lhs.true ], [ false, %if.end.48 ], [ %cmp172, %cond.end.170 ]
  %land.ext = zext i1 %73 to i32
  store i32 %land.ext, i32* %retval
  br label %return

return:                                           ; preds = %land.end, %if.then.47, %if.then.44, %if.then.35, %if.then
  %74 = load i32, i32* %retval
  ret i32 %74
}

; Function Attrs: nounwind uwtable
define internal i32 @find_valid_class(i32 %m1, i32 %n, i32 %dest_regno) #0 {
entry:
  %m1.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %dest_regno.addr = alloca i32, align 4
  %best_cost = alloca i32, align 4
  %class = alloca i32, align 4
  %regno = alloca i32, align 4
  %best_class = alloca i32, align 4
  %dest_class = alloca i32, align 4
  %best_size = alloca i32, align 4
  %cost = alloca i32, align 4
  %bad = alloca i32, align 4
  store i32 %m1, i32* %m1.addr, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %dest_regno, i32* %dest_regno.addr, align 4
  store i32 -1, i32* %best_cost, align 4
  store i32 0, i32* %best_class, align 4
  %0 = load i32, i32* %dest_regno.addr, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom
  %1 = load i32, i32* %arrayidx, align 4
  store i32 %1, i32* %dest_class, align 4
  store i32 0, i32* %best_size, align 4
  store i32 1, i32* %class, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.33, %entry
  %2 = load i32, i32* %class, align 4
  %cmp = icmp slt i32 %2, 25
  br i1 %cmp, label %for.body, label %for.end.35

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %bad, align 4
  store i32 0, i32* %regno, align 4
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %3 = load i32, i32* %regno, align 4
  %cmp2 = icmp slt i32 %3, 53
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.1
  %4 = load i32, i32* %bad, align 4
  %tobool = icmp ne i32 %4, 0
  %lnot = xor i1 %tobool, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.1
  %5 = phi i1 [ false, %for.cond.1 ], [ %lnot, %land.rhs ]
  br i1 %5, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %land.end
  %6 = load i32, i32* %class, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom4
  %7 = load i64, i64* %arrayidx5, align 8
  %8 = load i32, i32* %regno, align 4
  %sh_prom = zext i32 %8 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %7, %shl
  %tobool6 = icmp ne i64 %and, 0
  br i1 %tobool6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body.3
  %9 = load i32, i32* %class, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom7
  %10 = load i64, i64* %arrayidx8, align 8
  %11 = load i32, i32* %regno, align 4
  %12 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %11, %12
  %sh_prom9 = zext i32 %add to i64
  %shl10 = shl i64 1, %sh_prom9
  %and11 = and i64 %10, %shl10
  %tobool12 = icmp ne i64 %and11, 0
  br i1 %tobool12, label %land.lhs.true.13, label %if.end

land.lhs.true.13:                                 ; preds = %land.lhs.true
  %13 = load i32, i32* %regno, align 4
  %14 = load i32, i32* %n.addr, align 4
  %add14 = add nsw i32 %13, %14
  %15 = load i32, i32* %m1.addr, align 4
  %call = call i32 @ix86_hard_regno_mode_ok(i32 %add14, i32 %15)
  %tobool15 = icmp ne i32 %call, 0
  br i1 %tobool15, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.13
  store i32 1, i32* %bad, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.13, %land.lhs.true, %for.body.3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %regno, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %regno, align 4
  br label %for.cond.1

for.end:                                          ; preds = %land.end
  %17 = load i32, i32* %bad, align 4
  %tobool16 = icmp ne i32 %17, 0
  br i1 %tobool16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %for.end
  br label %for.inc.33

if.end.18:                                        ; preds = %for.end
  %18 = load i32, i32* %m1.addr, align 4
  %19 = load i32, i32* %class, align 4
  %20 = load i32, i32* %dest_class, align 4
  %call19 = call i32 @ix86_register_move_cost(i32 %18, i32 %19, i32 %20)
  store i32 %call19, i32* %cost, align 4
  %21 = load i32, i32* %class, align 4
  %idxprom20 = sext i32 %21 to i64
  %arrayidx21 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom20
  %22 = load i32, i32* %arrayidx21, align 4
  %23 = load i32, i32* %best_size, align 4
  %cmp22 = icmp ugt i32 %22, %23
  br i1 %cmp22, label %land.lhs.true.23, label %lor.lhs.false.26

land.lhs.true.23:                                 ; preds = %if.end.18
  %24 = load i32, i32* %best_cost, align 4
  %cmp24 = icmp slt i32 %24, 0
  br i1 %cmp24, label %if.then.28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.23
  %25 = load i32, i32* %best_cost, align 4
  %26 = load i32, i32* %cost, align 4
  %cmp25 = icmp sge i32 %25, %26
  br i1 %cmp25, label %if.then.28, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false, %if.end.18
  %27 = load i32, i32* %best_cost, align 4
  %28 = load i32, i32* %cost, align 4
  %cmp27 = icmp sgt i32 %27, %28
  br i1 %cmp27, label %if.then.28, label %if.end.32

if.then.28:                                       ; preds = %lor.lhs.false.26, %lor.lhs.false, %land.lhs.true.23
  %29 = load i32, i32* %class, align 4
  store i32 %29, i32* %best_class, align 4
  %30 = load i32, i32* %class, align 4
  %idxprom29 = sext i32 %30 to i64
  %arrayidx30 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom29
  %31 = load i32, i32* %arrayidx30, align 4
  store i32 %31, i32* %best_size, align 4
  %32 = load i32, i32* %m1.addr, align 4
  %33 = load i32, i32* %class, align 4
  %34 = load i32, i32* %dest_class, align 4
  %call31 = call i32 @ix86_register_move_cost(i32 %32, i32 %33, i32 %34)
  store i32 %call31, i32* %best_cost, align 4
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.28, %lor.lhs.false.26
  br label %for.inc.33

for.inc.33:                                       ; preds = %if.end.32, %if.then.17
  %35 = load i32, i32* %class, align 4
  %inc34 = add nsw i32 %35, 1
  store i32 %inc34, i32* %class, align 4
  br label %for.cond

for.end.35:                                       ; preds = %for.cond
  %36 = load i32, i32* %best_size, align 4
  %cmp36 = icmp eq i32 %36, 0
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %for.end.35
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 706, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.find_valid_class, i32 0, i32 0)) #5
  unreachable

if.end.38:                                        ; preds = %for.end.35
  %37 = load i32, i32* %best_class, align 4
  ret i32 %37
}

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %x, %struct.rtx_def* %in) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 64
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %idxprom = sext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv, 97
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %x.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load6 = load i32, i32* %8, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 67
  br i1 %cmp8, label %if.then.85, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load11 = load i32, i32* %10, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 68
  br i1 %cmp13, label %if.then.85, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.10
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load16 = load i32, i32* %12, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 54
  br i1 %cmp18, label %if.then.85, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.15
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load21 = load i32, i32* %14, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 55
  br i1 %cmp23, label %if.then.85, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %lor.lhs.false.20
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load26 = load i32, i32* %16, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 58
  br i1 %cmp28, label %if.then.85, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.25
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load31 = load i32, i32* %18, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 134
  br i1 %cmp33, label %if.then.85, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.30
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load36 = load i32, i32* %20, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 56
  br i1 %cmp38, label %if.then.85, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.35
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load41 = load i32, i32* %22, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 140
  br i1 %cmp43, label %if.then.85, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %lor.lhs.false.40
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load46 = load i32, i32* %24, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 67
  br i1 %cmp48, label %if.then.85, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.45
  %25 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load51 = load i32, i32* %26, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 68
  br i1 %cmp53, label %if.then.85, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false.50
  %27 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load56 = load i32, i32* %28, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 54
  br i1 %cmp58, label %if.then.85, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.55
  %29 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load61 = load i32, i32* %30, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 55
  br i1 %cmp63, label %if.then.85, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %lor.lhs.false.60
  %31 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load66 = load i32, i32* %32, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 58
  br i1 %cmp68, label %if.then.85, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %lor.lhs.false.65
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load71 = load i32, i32* %34, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 134
  br i1 %cmp73, label %if.then.85, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %lor.lhs.false.70
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load76 = load i32, i32* %36, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 56
  br i1 %cmp78, label %if.then.85, label %lor.lhs.false.80

lor.lhs.false.80:                                 ; preds = %lor.lhs.false.75
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load81 = load i32, i32* %38, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 140
  br i1 %cmp83, label %if.then.85, label %if.else

if.then.85:                                       ; preds = %lor.lhs.false.80, %lor.lhs.false.75, %lor.lhs.false.70, %lor.lhs.false.65, %lor.lhs.false.60, %lor.lhs.false.55, %lor.lhs.false.50, %lor.lhs.false.45, %lor.lhs.false.40, %lor.lhs.false.35, %lor.lhs.false.30, %lor.lhs.false.25, %lor.lhs.false.20, %lor.lhs.false.15, %lor.lhs.false.10, %if.end
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false.80
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load86 = load i32, i32* %40, align 8
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 63
  br i1 %cmp88, label %if.then.90, label %if.else.117

if.then.90:                                       ; preds = %if.else
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 0
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx93, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %43 = load i32, i32* %rtuint, align 4
  store i32 %43, i32* %regno, align 4
  %44 = load i32, i32* %regno, align 4
  %cmp96 = icmp slt i32 %44, 53
  br i1 %cmp96, label %if.then.98, label %if.end.116

if.then.98:                                       ; preds = %if.then.90
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtuint104 = bitcast %union.rtunion_def* %arrayidx103 to i32*
  %47 = load i32, i32* %rtuint104, align 4
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx107, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load108 = load i32, i32* %50, align 8
  %bf.lshr = lshr i32 %bf.load108, 16
  %bf.clear109 = and i32 %bf.lshr, 255
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 1
  %rtuint112 = bitcast %union.rtunion_def* %arrayidx111 to i32*
  %52 = load i32, i32* %rtuint112, align 4
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load113 = load i32, i32* %54, align 8
  %bf.lshr114 = lshr i32 %bf.load113, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %call = call i32 @subreg_regno_offset(i32 %47, i32 %bf.clear109, i32 %52, i32 %bf.clear115)
  %55 = load i32, i32* %regno, align 4
  %add = add i32 %55, %call
  store i32 %add, i32* %regno, align 4
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.98, %if.then.90
  br label %if.end.183

if.else.117:                                      ; preds = %if.else
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load118 = load i32, i32* %57, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 61
  br i1 %cmp120, label %if.then.122, label %if.else.141

if.then.122:                                      ; preds = %if.else.117
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 0
  %rtuint125 = bitcast %union.rtunion_def* %arrayidx124 to i32*
  %59 = load i32, i32* %rtuint125, align 4
  store i32 %59, i32* %regno, align 4
  %60 = load i32, i32* %regno, align 4
  %cmp126 = icmp sge i32 %60, 53
  br i1 %cmp126, label %if.then.128, label %if.end.140

if.then.128:                                      ; preds = %if.then.122
  %61 = load i32, i32* %regno, align 4
  %idxprom129 = sext i32 %61 to i64
  %62 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx130 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %62, i64 %idxprom129
  %63 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx130, align 8
  %tobool = icmp ne %struct.rtx_def* %63, null
  br i1 %tobool, label %if.then.131, label %if.else.133

if.then.131:                                      ; preds = %if.then.128
  %64 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call132 = call i32 @refers_to_mem_for_reload_p(%struct.rtx_def* %64)
  store i32 %call132, i32* %retval
  br label %return

if.else.133:                                      ; preds = %if.then.128
  %65 = load i32, i32* %regno, align 4
  %idxprom134 = sext i32 %65 to i64
  %66 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx135 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %66, i64 %idxprom134
  %67 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx135, align 8
  %tobool136 = icmp ne %struct.rtx_def* %67, null
  br i1 %tobool136, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %if.else.133
  store i32 0, i32* %retval
  br label %return

if.end.138:                                       ; preds = %if.else.133
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.138
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 6243, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__FUNCTION__.reg_overlap_mentioned_for_reload_p, i32 0, i32 0)) #5
  unreachable

if.end.140:                                       ; preds = %if.then.122
  br label %if.end.182

if.else.141:                                      ; preds = %if.else.117
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load142 = load i32, i32* %69, align 8
  %bf.clear143 = and i32 %bf.load142, 65535
  %cmp144 = icmp eq i32 %bf.clear143, 66
  br i1 %cmp144, label %if.then.146, label %if.else.148

if.then.146:                                      ; preds = %if.else.141
  %70 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call147 = call i32 @refers_to_mem_for_reload_p(%struct.rtx_def* %70)
  store i32 %call147, i32* %retval
  br label %return

if.else.148:                                      ; preds = %if.else.141
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load149 = load i32, i32* %72, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 62
  br i1 %cmp151, label %if.then.163, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %if.else.148
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load154 = load i32, i32* %74, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 59
  br i1 %cmp156, label %if.then.163, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %lor.lhs.false.153
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load159 = load i32, i32* %76, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 69
  br i1 %cmp161, label %if.then.163, label %if.else.165

if.then.163:                                      ; preds = %lor.lhs.false.158, %lor.lhs.false.153, %if.else.148
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call164 = call i32 @reg_mentioned_p(%struct.rtx_def* %77, %struct.rtx_def* %78)
  store i32 %call164, i32* %retval
  br label %return

if.else.165:                                      ; preds = %lor.lhs.false.158
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load166 = load i32, i32* %80, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 75
  br i1 %cmp168, label %if.then.170, label %if.else.181

if.then.170:                                      ; preds = %if.else.165
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld171 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i32 0, i64 0
  %rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx173, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call174 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %82, %struct.rtx_def* %83)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.170
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 1
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx178, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call179 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %85, %struct.rtx_def* %86)
  %tobool180 = icmp ne i32 %call179, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.170
  %87 = phi i1 [ true, %if.then.170 ], [ %tobool180, %lor.rhs ]
  %lor.ext = zext i1 %87 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

if.else.181:                                      ; preds = %if.else.165
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 6255, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__FUNCTION__.reg_overlap_mentioned_for_reload_p, i32 0, i32 0)) #5
  unreachable

if.end.182:                                       ; preds = %if.end.140
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.end.116
  br label %if.end.184

if.end.184:                                       ; preds = %if.end.183
  %88 = load i32, i32* %regno, align 4
  %89 = load i32, i32* %regno, align 4
  %cmp185 = icmp slt i32 %89, 53
  br i1 %cmp185, label %cond.true, label %cond.false.264

cond.true:                                        ; preds = %if.end.184
  %90 = load i32, i32* %regno, align 4
  %cmp187 = icmp sge i32 %90, 8
  br i1 %cmp187, label %land.lhs.true, label %lor.lhs.false.191

land.lhs.true:                                    ; preds = %cond.true
  %91 = load i32, i32* %regno, align 4
  %cmp189 = icmp sle i32 %91, 15
  br i1 %cmp189, label %cond.true.209, label %lor.lhs.false.191

lor.lhs.false.191:                                ; preds = %land.lhs.true, %cond.true
  %92 = load i32, i32* %regno, align 4
  %cmp192 = icmp sge i32 %92, 21
  br i1 %cmp192, label %land.lhs.true.194, label %lor.lhs.false.197

land.lhs.true.194:                                ; preds = %lor.lhs.false.191
  %93 = load i32, i32* %regno, align 4
  %cmp195 = icmp sle i32 %93, 28
  br i1 %cmp195, label %cond.true.209, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %land.lhs.true.194, %lor.lhs.false.191
  %94 = load i32, i32* %regno, align 4
  %cmp198 = icmp sge i32 %94, 45
  br i1 %cmp198, label %land.lhs.true.200, label %lor.lhs.false.203

land.lhs.true.200:                                ; preds = %lor.lhs.false.197
  %95 = load i32, i32* %regno, align 4
  %cmp201 = icmp sle i32 %95, 52
  br i1 %cmp201, label %cond.true.209, label %lor.lhs.false.203

lor.lhs.false.203:                                ; preds = %land.lhs.true.200, %lor.lhs.false.197
  %96 = load i32, i32* %regno, align 4
  %cmp204 = icmp sge i32 %96, 29
  br i1 %cmp204, label %land.lhs.true.206, label %cond.false

land.lhs.true.206:                                ; preds = %lor.lhs.false.203
  %97 = load i32, i32* %regno, align 4
  %cmp207 = icmp sle i32 %97, 36
  br i1 %cmp207, label %cond.true.209, label %cond.false

cond.true.209:                                    ; preds = %land.lhs.true.206, %land.lhs.true.200, %land.lhs.true.194, %land.lhs.true
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load210 = load i32, i32* %99, align 8
  %bf.lshr211 = lshr i32 %bf.load210, 16
  %bf.clear212 = and i32 %bf.lshr211, 255
  %idxprom213 = sext i32 %bf.clear212 to i64
  %arrayidx214 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom213
  %100 = load i32, i32* %arrayidx214, align 4
  %cmp215 = icmp eq i32 %100, 5
  br i1 %cmp215, label %lor.end.225, label %lor.rhs.217

lor.rhs.217:                                      ; preds = %cond.true.209
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load218 = load i32, i32* %102, align 8
  %bf.lshr219 = lshr i32 %bf.load218, 16
  %bf.clear220 = and i32 %bf.lshr219, 255
  %idxprom221 = sext i32 %bf.clear220 to i64
  %arrayidx222 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom221
  %103 = load i32, i32* %arrayidx222, align 4
  %cmp223 = icmp eq i32 %103, 6
  br label %lor.end.225

lor.end.225:                                      ; preds = %lor.rhs.217, %cond.true.209
  %104 = phi i1 [ true, %cond.true.209 ], [ %cmp223, %lor.rhs.217 ]
  %cond = select i1 %104, i32 2, i32 1
  br label %cond.end.262

cond.false:                                       ; preds = %land.lhs.true.206, %lor.lhs.false.203
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %106 = bitcast %struct.rtx_def* %105 to i32*
  %bf.load227 = load i32, i32* %106, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %cmp230 = icmp eq i32 %bf.clear229, 18
  br i1 %cmp230, label %cond.true.232, label %cond.false.235

cond.true.232:                                    ; preds = %cond.false
  %107 = load i32, i32* @target_flags, align 4
  %and = and i32 %107, 33554432
  %tobool233 = icmp ne i32 %and, 0
  %cond234 = select i1 %tobool233, i32 2, i32 3
  br label %cond.end.260

cond.false.235:                                   ; preds = %cond.false
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %bf.load236 = load i32, i32* %109, align 8
  %bf.lshr237 = lshr i32 %bf.load236, 16
  %bf.clear238 = and i32 %bf.lshr237, 255
  %cmp239 = icmp eq i32 %bf.clear238, 24
  br i1 %cmp239, label %cond.true.241, label %cond.false.245

cond.true.241:                                    ; preds = %cond.false.235
  %110 = load i32, i32* @target_flags, align 4
  %and242 = and i32 %110, 33554432
  %tobool243 = icmp ne i32 %and242, 0
  %cond244 = select i1 %tobool243, i32 4, i32 6
  br label %cond.end

cond.false.245:                                   ; preds = %cond.false.235
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load246 = load i32, i32* %112, align 8
  %bf.lshr247 = lshr i32 %bf.load246, 16
  %bf.clear248 = and i32 %bf.lshr247, 255
  %idxprom249 = sext i32 %bf.clear248 to i64
  %arrayidx250 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom249
  %113 = load i8, i8* %arrayidx250, align 1
  %conv251 = zext i8 %113 to i32
  %114 = load i32, i32* @target_flags, align 4
  %and252 = and i32 %114, 33554432
  %tobool253 = icmp ne i32 %and252, 0
  %cond254 = select i1 %tobool253, i32 8, i32 4
  %add255 = add nsw i32 %conv251, %cond254
  %sub = sub nsw i32 %add255, 1
  %115 = load i32, i32* @target_flags, align 4
  %and256 = and i32 %115, 33554432
  %tobool257 = icmp ne i32 %and256, 0
  %cond258 = select i1 %tobool257, i32 8, i32 4
  %div = sdiv i32 %sub, %cond258
  br label %cond.end

cond.end:                                         ; preds = %cond.false.245, %cond.true.241
  %cond259 = phi i32 [ %cond244, %cond.true.241 ], [ %div, %cond.false.245 ]
  br label %cond.end.260

cond.end.260:                                     ; preds = %cond.end, %cond.true.232
  %cond261 = phi i32 [ %cond234, %cond.true.232 ], [ %cond259, %cond.end ]
  br label %cond.end.262

cond.end.262:                                     ; preds = %cond.end.260, %lor.end.225
  %cond263 = phi i32 [ %cond, %lor.end.225 ], [ %cond261, %cond.end.260 ]
  br label %cond.end.265

cond.false.264:                                   ; preds = %if.end.184
  br label %cond.end.265

cond.end.265:                                     ; preds = %cond.false.264, %cond.end.262
  %cond266 = phi i32 [ %cond263, %cond.end.262 ], [ 1, %cond.false.264 ]
  %add267 = add nsw i32 %88, %cond266
  store i32 %add267, i32* %endregno, align 4
  %116 = load i32, i32* %regno, align 4
  %117 = load i32, i32* %endregno, align 4
  %118 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8
  %call268 = call i32 @refers_to_regno_for_reload_p(i32 %116, i32 %117, %struct.rtx_def* %118, %struct.rtx_def** null)
  store i32 %call268, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.265, %lor.end, %if.then.163, %if.then.146, %if.then.137, %if.then.131, %if.then.85
  %119 = load i32, i32* %retval
  ret i32 %119
}

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare i32 @ix86_preferred_reload_class(%struct.rtx_def*, i32) #1

declare void @error_for_asm(%struct.rtx_def*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @find_reusable_reload(%struct.rtx_def** %p_in, %struct.rtx_def* %out, i32 %class, i32 %type, i32 %opnum, i32 %dont_share) #0 {
entry:
  %retval = alloca i32, align 4
  %p_in.addr = alloca %struct.rtx_def**, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %class.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %dont_share.addr = alloca i32, align 4
  %in = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def** %p_in, %struct.rtx_def*** %p_in.addr, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  store i32 %class, i32* %class.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %dont_share, i32* %dont_share.addr, align 4
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %p_in.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %in, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call = call i32 @earlyclobber_operand_p(%struct.rtx_def* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @n_reloads, align 4
  store i32 %3, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %class.addr, align 4
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %class1 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 2
  %8 = load i32, i32* %class1, align 4
  %call2 = call i32 @reg_class_subset_p(i32 %6, i32 %8)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4
  %class6 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 2
  %10 = load i32, i32* %class6, align 4
  %11 = load i32, i32* %class.addr, align 4
  %call7 = call i32 @reg_class_subset_p(i32 %10, i32 %11)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %land.lhs.true, label %if.end.264

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %12 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %12 to i64
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom9
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 11
  %13 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %cmp11 = icmp eq %struct.rtx_def* %13, null
  br i1 %cmp11, label %land.lhs.true.20, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %land.lhs.true
  %14 = load i32, i32* %class.addr, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom13
  %15 = load i64, i64* %arrayidx14, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %16 to i64
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom15
  %reg_rtx17 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx17, align 8
  %call18 = call i32 @true_regnum(%struct.rtx_def* %17)
  %sh_prom = zext i32 %call18 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %15, %shl
  %tobool19 = icmp ne i64 %and, 0
  br i1 %tobool19, label %land.lhs.true.20, label %if.end.264

land.lhs.true.20:                                 ; preds = %lor.lhs.false.12, %land.lhs.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp21 = icmp ne %struct.rtx_def* %18, null
  br i1 %cmp21, label %land.lhs.true.22, label %lor.lhs.false.113

land.lhs.true.22:                                 ; preds = %land.lhs.true.20
  %19 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %19 to i64
  %arrayidx24 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom23
  %in25 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx24, i32 0, i32 0
  %20 = load %struct.rtx_def*, %struct.rtx_def** %in25, align 8
  %21 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp26 = icmp eq %struct.rtx_def* %20, %21
  br i1 %cmp26, label %land.lhs.true.60, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %land.lhs.true.22
  %22 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %22 to i64
  %arrayidx29 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom28
  %in30 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx29, i32 0, i32 0
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in30, align 8
  %cmp31 = icmp ne %struct.rtx_def* %23, null
  br i1 %cmp31, label %land.lhs.true.32, label %lor.lhs.false.113

land.lhs.true.32:                                 ; preds = %lor.lhs.false.27
  %24 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %24 to i64
  %arrayidx34 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom33
  %in35 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx34, i32 0, i32 0
  %25 = load %struct.rtx_def*, %struct.rtx_def** %in35, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load = load i32, i32* %26, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp36 = icmp eq i32 %bf.clear, 61
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.32
  %27 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load37 = load i32, i32* %28, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 61
  br i1 %cmp39, label %land.lhs.true.40, label %lor.lhs.false.113

land.lhs.true.40:                                 ; preds = %cond.true
  %29 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %29 to i64
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom41
  %in43 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 0
  %30 = load %struct.rtx_def*, %struct.rtx_def** %in43, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %31 = load i32, i32* %rtuint, align 4
  %32 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %33 = load i32, i32* %rtuint47, align 4
  %cmp48 = icmp eq i32 %31, %33
  br i1 %cmp48, label %land.lhs.true.60, label %lor.lhs.false.113

cond.false:                                       ; preds = %land.lhs.true.32
  %34 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %34 to i64
  %arrayidx50 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom49
  %in51 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx50, i32 0, i32 0
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in51, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %call52 = call i32 @rtx_equal_p(%struct.rtx_def* %35, %struct.rtx_def* %36)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %land.lhs.true.54, label %lor.lhs.false.113

land.lhs.true.54:                                 ; preds = %cond.false
  %37 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %37 to i64
  %arrayidx56 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom55
  %in57 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx56, i32 0, i32 0
  %38 = load %struct.rtx_def*, %struct.rtx_def** %in57, align 8
  %call58 = call i32 @side_effects_p(%struct.rtx_def* %38)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %lor.lhs.false.113, label %land.lhs.true.60

land.lhs.true.60:                                 ; preds = %land.lhs.true.54, %land.lhs.true.40, %land.lhs.true.22
  %39 = load i32, i32* %dont_share.addr, align 4
  %tobool61 = icmp ne i32 %39, 0
  br i1 %tobool61, label %lor.lhs.false.113, label %land.lhs.true.62

land.lhs.true.62:                                 ; preds = %land.lhs.true.60
  %40 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp63 = icmp eq %struct.rtx_def* %40, null
  br i1 %cmp63, label %land.lhs.true.210, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %land.lhs.true.62
  %41 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %41 to i64
  %arrayidx66 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom65
  %out67 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx66, i32 0, i32 1
  %42 = load %struct.rtx_def*, %struct.rtx_def** %out67, align 8
  %cmp68 = icmp eq %struct.rtx_def* %42, null
  br i1 %cmp68, label %land.lhs.true.210, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %lor.lhs.false.64
  %43 = load i32, i32* %i, align 4
  %idxprom70 = sext i32 %43 to i64
  %arrayidx71 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom70
  %out72 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx71, i32 0, i32 1
  %44 = load %struct.rtx_def*, %struct.rtx_def** %out72, align 8
  %45 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp73 = icmp eq %struct.rtx_def* %44, %45
  br i1 %cmp73, label %land.lhs.true.210, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %lor.lhs.false.69
  %46 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %46 to i64
  %arrayidx76 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom75
  %out77 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx76, i32 0, i32 1
  %47 = load %struct.rtx_def*, %struct.rtx_def** %out77, align 8
  %cmp78 = icmp ne %struct.rtx_def* %47, null
  br i1 %cmp78, label %land.lhs.true.79, label %lor.lhs.false.113

land.lhs.true.79:                                 ; preds = %lor.lhs.false.74
  %48 = load i32, i32* %i, align 4
  %idxprom80 = sext i32 %48 to i64
  %arrayidx81 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom80
  %out82 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx81, i32 0, i32 1
  %49 = load %struct.rtx_def*, %struct.rtx_def** %out82, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load83 = load i32, i32* %50, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 61
  br i1 %cmp85, label %cond.true.86, label %cond.false.101

cond.true.86:                                     ; preds = %land.lhs.true.79
  %51 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load87 = load i32, i32* %52, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp eq i32 %bf.clear88, 61
  br i1 %cmp89, label %land.lhs.true.90, label %lor.lhs.false.113

land.lhs.true.90:                                 ; preds = %cond.true.86
  %53 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %53 to i64
  %arrayidx92 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom91
  %out93 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx92, i32 0, i32 1
  %54 = load %struct.rtx_def*, %struct.rtx_def** %out93, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtuint96 = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %55 = load i32, i32* %rtuint96, align 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtuint99 = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %57 = load i32, i32* %rtuint99, align 4
  %cmp100 = icmp eq i32 %55, %57
  br i1 %cmp100, label %land.lhs.true.210, label %lor.lhs.false.113

cond.false.101:                                   ; preds = %land.lhs.true.79
  %58 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %58 to i64
  %arrayidx103 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom102
  %out104 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx103, i32 0, i32 1
  %59 = load %struct.rtx_def*, %struct.rtx_def** %out104, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call105 = call i32 @rtx_equal_p(%struct.rtx_def* %59, %struct.rtx_def* %60)
  %tobool106 = icmp ne i32 %call105, 0
  br i1 %tobool106, label %land.lhs.true.107, label %lor.lhs.false.113

land.lhs.true.107:                                ; preds = %cond.false.101
  %61 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %61 to i64
  %arrayidx109 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom108
  %out110 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx109, i32 0, i32 1
  %62 = load %struct.rtx_def*, %struct.rtx_def** %out110, align 8
  %call111 = call i32 @side_effects_p(%struct.rtx_def* %62)
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %lor.lhs.false.113, label %land.lhs.true.210

lor.lhs.false.113:                                ; preds = %land.lhs.true.107, %cond.false.101, %land.lhs.true.90, %cond.true.86, %lor.lhs.false.74, %land.lhs.true.60, %land.lhs.true.54, %cond.false, %land.lhs.true.40, %cond.true, %lor.lhs.false.27, %land.lhs.true.20
  %63 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp114 = icmp ne %struct.rtx_def* %63, null
  br i1 %cmp114, label %land.lhs.true.115, label %if.end.264

land.lhs.true.115:                                ; preds = %lor.lhs.false.113
  %64 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %64 to i64
  %arrayidx117 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom116
  %out118 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx117, i32 0, i32 1
  %65 = load %struct.rtx_def*, %struct.rtx_def** %out118, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp119 = icmp eq %struct.rtx_def* %65, %66
  br i1 %cmp119, label %land.lhs.true.159, label %lor.lhs.false.120

lor.lhs.false.120:                                ; preds = %land.lhs.true.115
  %67 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %67 to i64
  %arrayidx122 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom121
  %out123 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx122, i32 0, i32 1
  %68 = load %struct.rtx_def*, %struct.rtx_def** %out123, align 8
  %cmp124 = icmp ne %struct.rtx_def* %68, null
  br i1 %cmp124, label %land.lhs.true.125, label %if.end.264

land.lhs.true.125:                                ; preds = %lor.lhs.false.120
  %69 = load i32, i32* %i, align 4
  %idxprom126 = sext i32 %69 to i64
  %arrayidx127 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom126
  %out128 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx127, i32 0, i32 1
  %70 = load %struct.rtx_def*, %struct.rtx_def** %out128, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load129 = load i32, i32* %71, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 61
  br i1 %cmp131, label %cond.true.132, label %cond.false.147

cond.true.132:                                    ; preds = %land.lhs.true.125
  %72 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load133 = load i32, i32* %73, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %land.lhs.true.136, label %if.end.264

land.lhs.true.136:                                ; preds = %cond.true.132
  %74 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %74 to i64
  %arrayidx138 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom137
  %out139 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx138, i32 0, i32 1
  %75 = load %struct.rtx_def*, %struct.rtx_def** %out139, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtuint142 = bitcast %union.rtunion_def* %arrayidx141 to i32*
  %76 = load i32, i32* %rtuint142, align 4
  %77 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %fld143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i32 0, i64 0
  %rtuint145 = bitcast %union.rtunion_def* %arrayidx144 to i32*
  %78 = load i32, i32* %rtuint145, align 4
  %cmp146 = icmp eq i32 %76, %78
  br i1 %cmp146, label %land.lhs.true.159, label %if.end.264

cond.false.147:                                   ; preds = %land.lhs.true.125
  %79 = load i32, i32* %i, align 4
  %idxprom148 = sext i32 %79 to i64
  %arrayidx149 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom148
  %out150 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx149, i32 0, i32 1
  %80 = load %struct.rtx_def*, %struct.rtx_def** %out150, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %call151 = call i32 @rtx_equal_p(%struct.rtx_def* %80, %struct.rtx_def* %81)
  %tobool152 = icmp ne i32 %call151, 0
  br i1 %tobool152, label %land.lhs.true.153, label %if.end.264

land.lhs.true.153:                                ; preds = %cond.false.147
  %82 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %82 to i64
  %arrayidx155 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom154
  %out156 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx155, i32 0, i32 1
  %83 = load %struct.rtx_def*, %struct.rtx_def** %out156, align 8
  %call157 = call i32 @side_effects_p(%struct.rtx_def* %83)
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.end.264, label %land.lhs.true.159

land.lhs.true.159:                                ; preds = %land.lhs.true.153, %land.lhs.true.136, %land.lhs.true.115
  %84 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp160 = icmp eq %struct.rtx_def* %84, null
  br i1 %cmp160, label %land.lhs.true.210, label %lor.lhs.false.161

lor.lhs.false.161:                                ; preds = %land.lhs.true.159
  %85 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %85 to i64
  %arrayidx163 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom162
  %in164 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx163, i32 0, i32 0
  %86 = load %struct.rtx_def*, %struct.rtx_def** %in164, align 8
  %cmp165 = icmp eq %struct.rtx_def* %86, null
  br i1 %cmp165, label %land.lhs.true.210, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %lor.lhs.false.161
  %87 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %87 to i64
  %arrayidx168 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom167
  %in169 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx168, i32 0, i32 0
  %88 = load %struct.rtx_def*, %struct.rtx_def** %in169, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp170 = icmp eq %struct.rtx_def* %88, %89
  br i1 %cmp170, label %land.lhs.true.210, label %lor.lhs.false.171

lor.lhs.false.171:                                ; preds = %lor.lhs.false.166
  %90 = load i32, i32* %i, align 4
  %idxprom172 = sext i32 %90 to i64
  %arrayidx173 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom172
  %in174 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx173, i32 0, i32 0
  %91 = load %struct.rtx_def*, %struct.rtx_def** %in174, align 8
  %cmp175 = icmp ne %struct.rtx_def* %91, null
  br i1 %cmp175, label %land.lhs.true.176, label %if.end.264

land.lhs.true.176:                                ; preds = %lor.lhs.false.171
  %92 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %92 to i64
  %arrayidx178 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom177
  %in179 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx178, i32 0, i32 0
  %93 = load %struct.rtx_def*, %struct.rtx_def** %in179, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load180 = load i32, i32* %94, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %cmp182 = icmp eq i32 %bf.clear181, 61
  br i1 %cmp182, label %cond.true.183, label %cond.false.198

cond.true.183:                                    ; preds = %land.lhs.true.176
  %95 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load184 = load i32, i32* %96, align 8
  %bf.clear185 = and i32 %bf.load184, 65535
  %cmp186 = icmp eq i32 %bf.clear185, 61
  br i1 %cmp186, label %land.lhs.true.187, label %if.end.264

land.lhs.true.187:                                ; preds = %cond.true.183
  %97 = load i32, i32* %i, align 4
  %idxprom188 = sext i32 %97 to i64
  %arrayidx189 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom188
  %in190 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx189, i32 0, i32 0
  %98 = load %struct.rtx_def*, %struct.rtx_def** %in190, align 8
  %fld191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i32 0, i64 0
  %rtuint193 = bitcast %union.rtunion_def* %arrayidx192 to i32*
  %99 = load i32, i32* %rtuint193, align 4
  %100 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i32 0, i64 0
  %rtuint196 = bitcast %union.rtunion_def* %arrayidx195 to i32*
  %101 = load i32, i32* %rtuint196, align 4
  %cmp197 = icmp eq i32 %99, %101
  br i1 %cmp197, label %land.lhs.true.210, label %if.end.264

cond.false.198:                                   ; preds = %land.lhs.true.176
  %102 = load i32, i32* %i, align 4
  %idxprom199 = sext i32 %102 to i64
  %arrayidx200 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom199
  %in201 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx200, i32 0, i32 0
  %103 = load %struct.rtx_def*, %struct.rtx_def** %in201, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %call202 = call i32 @rtx_equal_p(%struct.rtx_def* %103, %struct.rtx_def* %104)
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %land.lhs.true.204, label %if.end.264

land.lhs.true.204:                                ; preds = %cond.false.198
  %105 = load i32, i32* %i, align 4
  %idxprom205 = sext i32 %105 to i64
  %arrayidx206 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom205
  %in207 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx206, i32 0, i32 0
  %106 = load %struct.rtx_def*, %struct.rtx_def** %in207, align 8
  %call208 = call i32 @side_effects_p(%struct.rtx_def* %106)
  %tobool209 = icmp ne i32 %call208, 0
  br i1 %tobool209, label %if.end.264, label %land.lhs.true.210

land.lhs.true.210:                                ; preds = %land.lhs.true.204, %land.lhs.true.187, %lor.lhs.false.166, %lor.lhs.false.161, %land.lhs.true.159, %land.lhs.true.107, %land.lhs.true.90, %lor.lhs.false.69, %lor.lhs.false.64, %land.lhs.true.62
  %107 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %107 to i64
  %arrayidx212 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom211
  %out213 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx212, i32 0, i32 1
  %108 = load %struct.rtx_def*, %struct.rtx_def** %out213, align 8
  %cmp214 = icmp eq %struct.rtx_def* %108, null
  br i1 %cmp214, label %land.lhs.true.221, label %lor.lhs.false.215

lor.lhs.false.215:                                ; preds = %land.lhs.true.210
  %109 = load i32, i32* %i, align 4
  %idxprom216 = sext i32 %109 to i64
  %arrayidx217 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom216
  %out218 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx217, i32 0, i32 1
  %110 = load %struct.rtx_def*, %struct.rtx_def** %out218, align 8
  %call219 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %110)
  %tobool220 = icmp ne i32 %call219, 0
  br i1 %tobool220, label %if.end.264, label %land.lhs.true.221

land.lhs.true.221:                                ; preds = %lor.lhs.false.215, %land.lhs.true.210
  %111 = load i32, i32* %class.addr, align 4
  %idxprom222 = sext i32 %111 to i64
  %arrayidx223 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom222
  %112 = load i32, i32* %arrayidx223, align 4
  %cmp224 = icmp eq i32 %112, 1
  br i1 %cmp224, label %land.lhs.true.226, label %lor.lhs.false.225

lor.lhs.false.225:                                ; preds = %land.lhs.true.221
  br i1 true, label %land.lhs.true.226, label %if.end.264

land.lhs.true.226:                                ; preds = %lor.lhs.false.225, %land.lhs.true.221
  %113 = load i32, i32* %type.addr, align 4
  %cmp227 = icmp eq i32 %113, 9
  br i1 %cmp227, label %if.then.263, label %lor.lhs.false.228

lor.lhs.false.228:                                ; preds = %land.lhs.true.226
  %114 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %114 to i64
  %arrayidx230 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom229
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx230, i32 0, i32 17
  %115 = load i32, i32* %when_needed, align 4
  %cmp231 = icmp eq i32 %115, 9
  br i1 %cmp231, label %if.then.263, label %lor.lhs.false.232

lor.lhs.false.232:                                ; preds = %lor.lhs.false.228
  %116 = load i32, i32* %type.addr, align 4
  %117 = load i32, i32* %i, align 4
  %idxprom233 = sext i32 %117 to i64
  %arrayidx234 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom233
  %when_needed235 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx234, i32 0, i32 17
  %118 = load i32, i32* %when_needed235, align 4
  %cmp236 = icmp eq i32 %116, %118
  br i1 %cmp236, label %land.lhs.true.237, label %lor.lhs.false.242

land.lhs.true.237:                                ; preds = %lor.lhs.false.232
  %119 = load i32, i32* %opnum.addr, align 4
  %120 = load i32, i32* %i, align 4
  %idxprom238 = sext i32 %120 to i64
  %arrayidx239 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom238
  %opnum240 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx239, i32 0, i32 12
  %121 = load i32, i32* %opnum240, align 4
  %cmp241 = icmp eq i32 %119, %121
  br i1 %cmp241, label %if.then.263, label %lor.lhs.false.242

lor.lhs.false.242:                                ; preds = %land.lhs.true.237, %lor.lhs.false.232
  %122 = load i32, i32* %type.addr, align 4
  %cmp243 = icmp eq i32 %122, 0
  br i1 %cmp243, label %land.lhs.true.244, label %lor.lhs.false.249

land.lhs.true.244:                                ; preds = %lor.lhs.false.242
  %123 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %123 to i64
  %arrayidx246 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom245
  %when_needed247 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx246, i32 0, i32 17
  %124 = load i32, i32* %when_needed247, align 4
  %cmp248 = icmp eq i32 %124, 0
  br i1 %cmp248, label %if.then.263, label %lor.lhs.false.249

lor.lhs.false.249:                                ; preds = %land.lhs.true.244, %lor.lhs.false.242
  %125 = load i32, i32* %type.addr, align 4
  %cmp250 = icmp eq i32 %125, 7
  br i1 %cmp250, label %land.lhs.true.251, label %lor.lhs.false.256

land.lhs.true.251:                                ; preds = %lor.lhs.false.249
  %126 = load i32, i32* %i, align 4
  %idxprom252 = sext i32 %126 to i64
  %arrayidx253 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom252
  %when_needed254 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx253, i32 0, i32 17
  %127 = load i32, i32* %when_needed254, align 4
  %cmp255 = icmp eq i32 %127, 7
  br i1 %cmp255, label %if.then.263, label %lor.lhs.false.256

lor.lhs.false.256:                                ; preds = %land.lhs.true.251, %lor.lhs.false.249
  %128 = load i32, i32* %type.addr, align 4
  %cmp257 = icmp eq i32 %128, 10
  br i1 %cmp257, label %land.lhs.true.258, label %if.end.264

land.lhs.true.258:                                ; preds = %lor.lhs.false.256
  %129 = load i32, i32* %i, align 4
  %idxprom259 = sext i32 %129 to i64
  %arrayidx260 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom259
  %when_needed261 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx260, i32 0, i32 17
  %130 = load i32, i32* %when_needed261, align 4
  %cmp262 = icmp eq i32 %130, 10
  br i1 %cmp262, label %if.then.263, label %if.end.264

if.then.263:                                      ; preds = %land.lhs.true.258, %land.lhs.true.251, %land.lhs.true.244, %land.lhs.true.237, %lor.lhs.false.228, %land.lhs.true.226
  %131 = load i32, i32* %i, align 4
  store i32 %131, i32* %retval
  br label %return

if.end.264:                                       ; preds = %land.lhs.true.258, %lor.lhs.false.256, %lor.lhs.false.225, %lor.lhs.false.215, %land.lhs.true.204, %cond.false.198, %land.lhs.true.187, %cond.true.183, %lor.lhs.false.171, %land.lhs.true.153, %cond.false.147, %land.lhs.true.136, %cond.true.132, %lor.lhs.false.120, %lor.lhs.false.113, %lor.lhs.false.12, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end.264
  %132 = load i32, i32* %i, align 4
  %inc = add nsw i32 %132, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.265

for.cond.265:                                     ; preds = %for.inc.541, %for.end
  %133 = load i32, i32* %i, align 4
  %134 = load i32, i32* @n_reloads, align 4
  %cmp266 = icmp slt i32 %133, %134
  br i1 %cmp266, label %for.body.267, label %for.end.543

for.body.267:                                     ; preds = %for.cond.265
  %135 = load i32, i32* %class.addr, align 4
  %136 = load i32, i32* %i, align 4
  %idxprom268 = sext i32 %136 to i64
  %arrayidx269 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom268
  %class270 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx269, i32 0, i32 2
  %137 = load i32, i32* %class270, align 4
  %call271 = call i32 @reg_class_subset_p(i32 %135, i32 %137)
  %tobool272 = icmp ne i32 %call271, 0
  br i1 %tobool272, label %land.lhs.true.279, label %lor.lhs.false.273

lor.lhs.false.273:                                ; preds = %for.body.267
  %138 = load i32, i32* %i, align 4
  %idxprom274 = sext i32 %138 to i64
  %arrayidx275 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom274
  %class276 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx275, i32 0, i32 2
  %139 = load i32, i32* %class276, align 4
  %140 = load i32, i32* %class.addr, align 4
  %call277 = call i32 @reg_class_subset_p(i32 %139, i32 %140)
  %tobool278 = icmp ne i32 %call277, 0
  br i1 %tobool278, label %land.lhs.true.279, label %if.end.540

land.lhs.true.279:                                ; preds = %lor.lhs.false.273, %for.body.267
  %141 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %141 to i64
  %arrayidx281 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom280
  %reg_rtx282 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx281, i32 0, i32 11
  %142 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx282, align 8
  %cmp283 = icmp eq %struct.rtx_def* %142, null
  br i1 %cmp283, label %land.lhs.true.295, label %lor.lhs.false.284

lor.lhs.false.284:                                ; preds = %land.lhs.true.279
  %143 = load i32, i32* %class.addr, align 4
  %idxprom285 = sext i32 %143 to i64
  %arrayidx286 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom285
  %144 = load i64, i64* %arrayidx286, align 8
  %145 = load i32, i32* %i, align 4
  %idxprom287 = sext i32 %145 to i64
  %arrayidx288 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom287
  %reg_rtx289 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx288, i32 0, i32 11
  %146 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx289, align 8
  %call290 = call i32 @true_regnum(%struct.rtx_def* %146)
  %sh_prom291 = zext i32 %call290 to i64
  %shl292 = shl i64 1, %sh_prom291
  %and293 = and i64 %144, %shl292
  %tobool294 = icmp ne i64 %and293, 0
  br i1 %tobool294, label %land.lhs.true.295, label %if.end.540

land.lhs.true.295:                                ; preds = %lor.lhs.false.284, %land.lhs.true.279
  %147 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8
  %cmp296 = icmp eq %struct.rtx_def* %147, null
  br i1 %cmp296, label %land.lhs.true.297, label %if.end.540

land.lhs.true.297:                                ; preds = %land.lhs.true.295
  %148 = load i32, i32* %i, align 4
  %idxprom298 = sext i32 %148 to i64
  %arrayidx299 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom298
  %out300 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx299, i32 0, i32 1
  %149 = load %struct.rtx_def*, %struct.rtx_def** %out300, align 8
  %cmp301 = icmp eq %struct.rtx_def* %149, null
  br i1 %cmp301, label %land.lhs.true.302, label %if.end.540

land.lhs.true.302:                                ; preds = %land.lhs.true.297
  %150 = load i32, i32* %i, align 4
  %idxprom303 = sext i32 %150 to i64
  %arrayidx304 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom303
  %in305 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx304, i32 0, i32 0
  %151 = load %struct.rtx_def*, %struct.rtx_def** %in305, align 8
  %cmp306 = icmp ne %struct.rtx_def* %151, null
  br i1 %cmp306, label %land.lhs.true.307, label %if.end.540

land.lhs.true.307:                                ; preds = %land.lhs.true.302
  %152 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load308 = load i32, i32* %153, align 8
  %bf.clear309 = and i32 %bf.load308, 65535
  %cmp310 = icmp eq i32 %bf.clear309, 61
  br i1 %cmp310, label %land.lhs.true.311, label %lor.lhs.false.387

land.lhs.true.311:                                ; preds = %land.lhs.true.307
  %154 = load i32, i32* %i, align 4
  %idxprom312 = sext i32 %154 to i64
  %arrayidx313 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom312
  %in314 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx313, i32 0, i32 0
  %155 = load %struct.rtx_def*, %struct.rtx_def** %in314, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load315 = load i32, i32* %156, align 8
  %bf.clear316 = and i32 %bf.load315, 65535
  %idxprom317 = sext i32 %bf.clear316 to i64
  %arrayidx318 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom317
  %157 = load i8, i8* %arrayidx318, align 1
  %conv = sext i8 %157 to i32
  %cmp319 = icmp eq i32 %conv, 97
  br i1 %cmp319, label %land.lhs.true.321, label %lor.lhs.false.387

land.lhs.true.321:                                ; preds = %land.lhs.true.311
  %158 = load i32, i32* %i, align 4
  %idxprom322 = sext i32 %158 to i64
  %arrayidx323 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom322
  %in324 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx323, i32 0, i32 0
  %159 = load %struct.rtx_def*, %struct.rtx_def** %in324, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp327 = icmp eq %struct.rtx_def* %160, %161
  br i1 %cmp327, label %land.lhs.true.464, label %lor.lhs.false.329

lor.lhs.false.329:                                ; preds = %land.lhs.true.321
  %162 = load i32, i32* %i, align 4
  %idxprom330 = sext i32 %162 to i64
  %arrayidx331 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom330
  %in332 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx331, i32 0, i32 0
  %163 = load %struct.rtx_def*, %struct.rtx_def** %in332, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 0
  %rtx335 = bitcast %union.rtunion_def* %arrayidx334 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx335, align 8
  %cmp336 = icmp ne %struct.rtx_def* %164, null
  br i1 %cmp336, label %land.lhs.true.338, label %lor.lhs.false.387

land.lhs.true.338:                                ; preds = %lor.lhs.false.329
  %165 = load i32, i32* %i, align 4
  %idxprom339 = sext i32 %165 to i64
  %arrayidx340 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom339
  %in341 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx340, i32 0, i32 0
  %166 = load %struct.rtx_def*, %struct.rtx_def** %in341, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 0
  %rtx344 = bitcast %union.rtunion_def* %arrayidx343 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx344, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load345 = load i32, i32* %168, align 8
  %bf.clear346 = and i32 %bf.load345, 65535
  %cmp347 = icmp eq i32 %bf.clear346, 61
  br i1 %cmp347, label %cond.true.349, label %cond.false.369

cond.true.349:                                    ; preds = %land.lhs.true.338
  %169 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load350 = load i32, i32* %170, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 61
  br i1 %cmp352, label %land.lhs.true.354, label %lor.lhs.false.387

land.lhs.true.354:                                ; preds = %cond.true.349
  %171 = load i32, i32* %i, align 4
  %idxprom355 = sext i32 %171 to i64
  %arrayidx356 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom355
  %in357 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx356, i32 0, i32 0
  %172 = load %struct.rtx_def*, %struct.rtx_def** %in357, align 8
  %fld358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i32 0, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx360, align 8
  %fld361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx362 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld361, i32 0, i64 0
  %rtuint363 = bitcast %union.rtunion_def* %arrayidx362 to i32*
  %174 = load i32, i32* %rtuint363, align 4
  %175 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 0
  %rtuint366 = bitcast %union.rtunion_def* %arrayidx365 to i32*
  %176 = load i32, i32* %rtuint366, align 4
  %cmp367 = icmp eq i32 %174, %176
  br i1 %cmp367, label %land.lhs.true.464, label %lor.lhs.false.387

cond.false.369:                                   ; preds = %land.lhs.true.338
  %177 = load i32, i32* %i, align 4
  %idxprom370 = sext i32 %177 to i64
  %arrayidx371 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom370
  %in372 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx371, i32 0, i32 0
  %178 = load %struct.rtx_def*, %struct.rtx_def** %in372, align 8
  %fld373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i32 0, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx375, align 8
  %180 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %call376 = call i32 @rtx_equal_p(%struct.rtx_def* %179, %struct.rtx_def* %180)
  %tobool377 = icmp ne i32 %call376, 0
  br i1 %tobool377, label %land.lhs.true.378, label %lor.lhs.false.387

land.lhs.true.378:                                ; preds = %cond.false.369
  %181 = load i32, i32* %i, align 4
  %idxprom379 = sext i32 %181 to i64
  %arrayidx380 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom379
  %in381 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx380, i32 0, i32 0
  %182 = load %struct.rtx_def*, %struct.rtx_def** %in381, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 0
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx384, align 8
  %call385 = call i32 @side_effects_p(%struct.rtx_def* %183)
  %tobool386 = icmp ne i32 %call385, 0
  br i1 %tobool386, label %lor.lhs.false.387, label %land.lhs.true.464

lor.lhs.false.387:                                ; preds = %land.lhs.true.378, %cond.false.369, %land.lhs.true.354, %cond.true.349, %lor.lhs.false.329, %land.lhs.true.311, %land.lhs.true.307
  %184 = load i32, i32* %i, align 4
  %idxprom388 = sext i32 %184 to i64
  %arrayidx389 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom388
  %in390 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx389, i32 0, i32 0
  %185 = load %struct.rtx_def*, %struct.rtx_def** %in390, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load391 = load i32, i32* %186, align 8
  %bf.clear392 = and i32 %bf.load391, 65535
  %cmp393 = icmp eq i32 %bf.clear392, 61
  br i1 %cmp393, label %land.lhs.true.395, label %if.end.540

land.lhs.true.395:                                ; preds = %lor.lhs.false.387
  %187 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %bf.load396 = load i32, i32* %188, align 8
  %bf.clear397 = and i32 %bf.load396, 65535
  %idxprom398 = sext i32 %bf.clear397 to i64
  %arrayidx399 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom398
  %189 = load i8, i8* %arrayidx399, align 1
  %conv400 = sext i8 %189 to i32
  %cmp401 = icmp eq i32 %conv400, 97
  br i1 %cmp401, label %land.lhs.true.403, label %if.end.540

land.lhs.true.403:                                ; preds = %land.lhs.true.395
  %190 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 0
  %rtx406 = bitcast %union.rtunion_def* %arrayidx405 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx406, align 8
  %192 = load i32, i32* %i, align 4
  %idxprom407 = sext i32 %192 to i64
  %arrayidx408 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom407
  %in409 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx408, i32 0, i32 0
  %193 = load %struct.rtx_def*, %struct.rtx_def** %in409, align 8
  %cmp410 = icmp eq %struct.rtx_def* %191, %193
  br i1 %cmp410, label %land.lhs.true.464, label %lor.lhs.false.412

lor.lhs.false.412:                                ; preds = %land.lhs.true.403
  %194 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i32 0, i64 0
  %rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rtx415, align 8
  %cmp416 = icmp ne %struct.rtx_def* %195, null
  br i1 %cmp416, label %land.lhs.true.418, label %if.end.540

land.lhs.true.418:                                ; preds = %lor.lhs.false.412
  %196 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i32 0, i64 0
  %rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx421, align 8
  %198 = bitcast %struct.rtx_def* %197 to i32*
  %bf.load422 = load i32, i32* %198, align 8
  %bf.clear423 = and i32 %bf.load422, 65535
  %cmp424 = icmp eq i32 %bf.clear423, 61
  br i1 %cmp424, label %cond.true.426, label %cond.false.449

cond.true.426:                                    ; preds = %land.lhs.true.418
  %199 = load i32, i32* %i, align 4
  %idxprom427 = sext i32 %199 to i64
  %arrayidx428 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom427
  %in429 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx428, i32 0, i32 0
  %200 = load %struct.rtx_def*, %struct.rtx_def** %in429, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load430 = load i32, i32* %201, align 8
  %bf.clear431 = and i32 %bf.load430, 65535
  %cmp432 = icmp eq i32 %bf.clear431, 61
  br i1 %cmp432, label %land.lhs.true.434, label %if.end.540

land.lhs.true.434:                                ; preds = %cond.true.426
  %202 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i32 0, i64 0
  %rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx437, align 8
  %fld438 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld438, i32 0, i64 0
  %rtuint440 = bitcast %union.rtunion_def* %arrayidx439 to i32*
  %204 = load i32, i32* %rtuint440, align 4
  %205 = load i32, i32* %i, align 4
  %idxprom441 = sext i32 %205 to i64
  %arrayidx442 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom441
  %in443 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx442, i32 0, i32 0
  %206 = load %struct.rtx_def*, %struct.rtx_def** %in443, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 0
  %rtuint446 = bitcast %union.rtunion_def* %arrayidx445 to i32*
  %207 = load i32, i32* %rtuint446, align 4
  %cmp447 = icmp eq i32 %204, %207
  br i1 %cmp447, label %land.lhs.true.464, label %if.end.540

cond.false.449:                                   ; preds = %land.lhs.true.418
  %208 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i32 0, i64 0
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rtx452, align 8
  %210 = load i32, i32* %i, align 4
  %idxprom453 = sext i32 %210 to i64
  %arrayidx454 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom453
  %in455 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx454, i32 0, i32 0
  %211 = load %struct.rtx_def*, %struct.rtx_def** %in455, align 8
  %call456 = call i32 @rtx_equal_p(%struct.rtx_def* %209, %struct.rtx_def* %211)
  %tobool457 = icmp ne i32 %call456, 0
  br i1 %tobool457, label %land.lhs.true.458, label %if.end.540

land.lhs.true.458:                                ; preds = %cond.false.449
  %212 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx460 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld459, i32 0, i64 0
  %rtx461 = bitcast %union.rtunion_def* %arrayidx460 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx461, align 8
  %call462 = call i32 @side_effects_p(%struct.rtx_def* %213)
  %tobool463 = icmp ne i32 %call462, 0
  br i1 %tobool463, label %if.end.540, label %land.lhs.true.464

land.lhs.true.464:                                ; preds = %land.lhs.true.458, %land.lhs.true.434, %land.lhs.true.403, %land.lhs.true.378, %land.lhs.true.354, %land.lhs.true.321
  %214 = load i32, i32* %i, align 4
  %idxprom465 = sext i32 %214 to i64
  %arrayidx466 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom465
  %out467 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx466, i32 0, i32 1
  %215 = load %struct.rtx_def*, %struct.rtx_def** %out467, align 8
  %cmp468 = icmp eq %struct.rtx_def* %215, null
  br i1 %cmp468, label %land.lhs.true.476, label %lor.lhs.false.470

lor.lhs.false.470:                                ; preds = %land.lhs.true.464
  %216 = load i32, i32* %i, align 4
  %idxprom471 = sext i32 %216 to i64
  %arrayidx472 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom471
  %out473 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx472, i32 0, i32 1
  %217 = load %struct.rtx_def*, %struct.rtx_def** %out473, align 8
  %call474 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %217)
  %tobool475 = icmp ne i32 %call474, 0
  br i1 %tobool475, label %if.end.540, label %land.lhs.true.476

land.lhs.true.476:                                ; preds = %lor.lhs.false.470, %land.lhs.true.464
  %218 = load i32, i32* %class.addr, align 4
  %idxprom477 = sext i32 %218 to i64
  %arrayidx478 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom477
  %219 = load i32, i32* %arrayidx478, align 4
  %cmp479 = icmp eq i32 %219, 1
  br i1 %cmp479, label %land.lhs.true.482, label %lor.lhs.false.481

lor.lhs.false.481:                                ; preds = %land.lhs.true.476
  br i1 true, label %land.lhs.true.482, label %if.end.540

land.lhs.true.482:                                ; preds = %lor.lhs.false.481, %land.lhs.true.476
  %220 = load i32, i32* %type.addr, align 4
  %cmp483 = icmp eq i32 %220, 9
  br i1 %cmp483, label %if.then.530, label %lor.lhs.false.485

lor.lhs.false.485:                                ; preds = %land.lhs.true.482
  %221 = load i32, i32* %i, align 4
  %idxprom486 = sext i32 %221 to i64
  %arrayidx487 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom486
  %when_needed488 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx487, i32 0, i32 17
  %222 = load i32, i32* %when_needed488, align 4
  %cmp489 = icmp eq i32 %222, 9
  br i1 %cmp489, label %if.then.530, label %lor.lhs.false.491

lor.lhs.false.491:                                ; preds = %lor.lhs.false.485
  %223 = load i32, i32* %type.addr, align 4
  %224 = load i32, i32* %i, align 4
  %idxprom492 = sext i32 %224 to i64
  %arrayidx493 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom492
  %when_needed494 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx493, i32 0, i32 17
  %225 = load i32, i32* %when_needed494, align 4
  %cmp495 = icmp eq i32 %223, %225
  br i1 %cmp495, label %land.lhs.true.497, label %lor.lhs.false.503

land.lhs.true.497:                                ; preds = %lor.lhs.false.491
  %226 = load i32, i32* %opnum.addr, align 4
  %227 = load i32, i32* %i, align 4
  %idxprom498 = sext i32 %227 to i64
  %arrayidx499 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom498
  %opnum500 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx499, i32 0, i32 12
  %228 = load i32, i32* %opnum500, align 4
  %cmp501 = icmp eq i32 %226, %228
  br i1 %cmp501, label %if.then.530, label %lor.lhs.false.503

lor.lhs.false.503:                                ; preds = %land.lhs.true.497, %lor.lhs.false.491
  %229 = load i32, i32* %type.addr, align 4
  %cmp504 = icmp eq i32 %229, 0
  br i1 %cmp504, label %land.lhs.true.506, label %lor.lhs.false.512

land.lhs.true.506:                                ; preds = %lor.lhs.false.503
  %230 = load i32, i32* %i, align 4
  %idxprom507 = sext i32 %230 to i64
  %arrayidx508 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom507
  %when_needed509 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx508, i32 0, i32 17
  %231 = load i32, i32* %when_needed509, align 4
  %cmp510 = icmp eq i32 %231, 0
  br i1 %cmp510, label %if.then.530, label %lor.lhs.false.512

lor.lhs.false.512:                                ; preds = %land.lhs.true.506, %lor.lhs.false.503
  %232 = load i32, i32* %type.addr, align 4
  %cmp513 = icmp eq i32 %232, 7
  br i1 %cmp513, label %land.lhs.true.515, label %lor.lhs.false.521

land.lhs.true.515:                                ; preds = %lor.lhs.false.512
  %233 = load i32, i32* %i, align 4
  %idxprom516 = sext i32 %233 to i64
  %arrayidx517 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom516
  %when_needed518 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx517, i32 0, i32 17
  %234 = load i32, i32* %when_needed518, align 4
  %cmp519 = icmp eq i32 %234, 7
  br i1 %cmp519, label %if.then.530, label %lor.lhs.false.521

lor.lhs.false.521:                                ; preds = %land.lhs.true.515, %lor.lhs.false.512
  %235 = load i32, i32* %type.addr, align 4
  %cmp522 = icmp eq i32 %235, 10
  br i1 %cmp522, label %land.lhs.true.524, label %if.end.540

land.lhs.true.524:                                ; preds = %lor.lhs.false.521
  %236 = load i32, i32* %i, align 4
  %idxprom525 = sext i32 %236 to i64
  %arrayidx526 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom525
  %when_needed527 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx526, i32 0, i32 17
  %237 = load i32, i32* %when_needed527, align 4
  %cmp528 = icmp eq i32 %237, 10
  br i1 %cmp528, label %if.then.530, label %if.end.540

if.then.530:                                      ; preds = %land.lhs.true.524, %land.lhs.true.515, %land.lhs.true.506, %land.lhs.true.497, %lor.lhs.false.485, %land.lhs.true.482
  %238 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %239 = bitcast %struct.rtx_def* %238 to i32*
  %bf.load531 = load i32, i32* %239, align 8
  %bf.clear532 = and i32 %bf.load531, 65535
  %cmp533 = icmp eq i32 %bf.clear532, 61
  br i1 %cmp533, label %if.then.535, label %if.end.539

if.then.535:                                      ; preds = %if.then.530
  %240 = load i32, i32* %i, align 4
  %idxprom536 = sext i32 %240 to i64
  %arrayidx537 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom536
  %in538 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx537, i32 0, i32 0
  %241 = load %struct.rtx_def*, %struct.rtx_def** %in538, align 8
  %242 = load %struct.rtx_def**, %struct.rtx_def*** %p_in.addr, align 8
  store %struct.rtx_def* %241, %struct.rtx_def** %242, align 8
  br label %if.end.539

if.end.539:                                       ; preds = %if.then.535, %if.then.530
  %243 = load i32, i32* %i, align 4
  store i32 %243, i32* %retval
  br label %return

if.end.540:                                       ; preds = %land.lhs.true.524, %lor.lhs.false.521, %lor.lhs.false.481, %lor.lhs.false.470, %land.lhs.true.458, %cond.false.449, %land.lhs.true.434, %cond.true.426, %lor.lhs.false.412, %land.lhs.true.395, %lor.lhs.false.387, %land.lhs.true.302, %land.lhs.true.297, %land.lhs.true.295, %lor.lhs.false.284, %lor.lhs.false.273
  br label %for.inc.541

for.inc.541:                                      ; preds = %if.end.540
  %244 = load i32, i32* %i, align 4
  %inc542 = add nsw i32 %244, 1
  store i32 %inc542, i32* %i, align 4
  br label %for.cond.265

for.end.543:                                      ; preds = %for.cond.265
  %245 = load i32, i32* @n_reloads, align 4
  store i32 %245, i32* %retval
  br label %return

return:                                           ; preds = %for.end.543, %if.end.539, %if.then.263, %if.then
  %246 = load i32, i32* %retval
  ret i32 %246
}

; Function Attrs: nounwind uwtable
define internal i32 @push_secondary_reload(i32 %in_p, %struct.rtx_def* %x, i32 %opnum, i32 %optional, i32 %reload_class, i32 %reload_mode, i32 %type, i32* %picode) #0 {
entry:
  %retval = alloca i32, align 4
  %in_p.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %opnum.addr = alloca i32, align 4
  %optional.addr = alloca i32, align 4
  %reload_class.addr = alloca i32, align 4
  %reload_mode.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %picode.addr = alloca i32*, align 8
  %class = alloca i32, align 4
  %mode = alloca i32, align 4
  %icode = alloca i32, align 4
  %t_class = alloca i32, align 4
  %t_mode = alloca i32, align 4
  %t_icode = alloca i32, align 4
  %secondary_type = alloca i32, align 4
  %s_reload = alloca i32, align 4
  %t_reload = alloca i32, align 4
  %insn_class = alloca i32, align 4
  %insn_letter = alloca i8, align 1
  %t_letter = alloca i8, align 1
  store i32 %in_p, i32* %in_p.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %optional, i32* %optional.addr, align 4
  store i32 %reload_class, i32* %reload_class.addr, align 4
  store i32 %reload_mode, i32* %reload_mode.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32* %picode, i32** %picode.addr, align 8
  store i32 0, i32* %class, align 4
  %0 = load i32, i32* %reload_mode.addr, align 4
  store i32 %0, i32* %mode, align 4
  store i32 1317, i32* %icode, align 4
  store i32 0, i32* %t_class, align 4
  store i32 0, i32* %t_mode, align 4
  store i32 1317, i32* %t_icode, align 4
  store i32 -1, i32* %t_reload, align 4
  %1 = load i32, i32* %type.addr, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4
  %cmp1 = icmp eq i32 %2, 5
  br i1 %cmp1, label %if.then, label %lor.lhs.false.2

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %type.addr, align 4
  %cmp3 = icmp eq i32 %3, 4
  br i1 %cmp3, label %if.then, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false.2
  %4 = load i32, i32* %type.addr, align 4
  %cmp5 = icmp eq i32 %4, 6
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false.4, %lor.lhs.false.2, %lor.lhs.false, %entry
  %5 = load i32, i32* %type.addr, align 4
  store i32 %5, i32* %secondary_type, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false.4
  %6 = load i32, i32* %in_p.addr, align 4
  %tobool = icmp ne i32 %6, 0
  %cond = select i1 %tobool, i32 3, i32 5
  store i32 %cond, i32* %secondary_type, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32*, i32** %picode.addr, align 8
  store i32 1317, i32* %7, align 4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load = load i32, i32* %9, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp6 = icmp eq i32 %bf.clear, 63
  br i1 %cmp6, label %land.lhs.true, label %if.end.25

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load7 = load i32, i32* %11, align 8
  %bf.lshr = lshr i32 %bf.load7, 16
  %bf.clear8 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear8 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %12 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %12 to i32
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load10 = load i32, i32* %15, align 8
  %bf.lshr11 = lshr i32 %bf.load10, 16
  %bf.clear12 = and i32 %bf.lshr11, 255
  %idxprom13 = sext i32 %bf.clear12 to i64
  %arrayidx14 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom13
  %16 = load i8, i8* %arrayidx14, align 1
  %conv15 = zext i8 %16 to i32
  %cmp16 = icmp sgt i32 %conv, %conv15
  br i1 %cmp16, label %if.then.18, label %if.end.25

if.then.18:                                       ; preds = %land.lhs.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %x.addr, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load22 = load i32, i32* %20, align 8
  %bf.lshr23 = lshr i32 %bf.load22, 16
  %bf.clear24 = and i32 %bf.lshr23, 255
  store i32 %bf.clear24, i32* %reload_mode.addr, align 4
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.18, %land.lhs.true, %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load26 = load i32, i32* %22, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 61
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.49

land.lhs.true.30:                                 ; preds = %if.end.25
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %24 = load i32, i32* %rtuint, align 4
  %cmp33 = icmp uge i32 %24, 53
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.49

land.lhs.true.35:                                 ; preds = %land.lhs.true.30
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtuint38 = bitcast %union.rtunion_def* %arrayidx37 to i32*
  %26 = load i32, i32* %rtuint38, align 4
  %idxprom39 = zext i32 %26 to i64
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx40 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom39
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8
  %cmp41 = icmp ne %struct.rtx_def* %28, null
  br i1 %cmp41, label %if.then.43, label %if.end.49

if.then.43:                                       ; preds = %land.lhs.true.35
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtuint46 = bitcast %union.rtunion_def* %arrayidx45 to i32*
  %30 = load i32, i32* %rtuint46, align 4
  %idxprom47 = zext i32 %30 to i64
  %31 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx48 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %31, i64 %idxprom47
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx48, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %x.addr, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.43, %land.lhs.true.35, %land.lhs.true.30, %if.end.25
  %33 = load i32, i32* %in_p.addr, align 4
  %tobool50 = icmp ne i32 %33, 0
  br i1 %tobool50, label %if.end.65, label %if.then.51

if.then.51:                                       ; preds = %if.end.49
  %34 = load i32, i32* %reload_class.addr, align 4
  %cmp52 = icmp eq i32 %34, 12
  br i1 %cmp52, label %land.lhs.true.60, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %if.then.51
  %35 = load i32, i32* %reload_class.addr, align 4
  %cmp55 = icmp eq i32 %35, 11
  br i1 %cmp55, label %land.lhs.true.60, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %lor.lhs.false.54
  %36 = load i32, i32* %reload_class.addr, align 4
  %cmp58 = icmp eq i32 %36, 10
  br i1 %cmp58, label %land.lhs.true.60, label %land.end

land.lhs.true.60:                                 ; preds = %lor.lhs.false.57, %lor.lhs.false.54, %if.then.51
  %37 = load i32, i32* @target_flags, align 4
  %and = and i32 %37, 33554432
  %tobool61 = icmp ne i32 %and, 0
  br i1 %tobool61, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true.60
  %38 = load i32, i32* %reload_mode.addr, align 4
  %cmp62 = icmp eq i32 %38, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.60, %lor.lhs.false.57
  %39 = phi i1 [ false, %land.lhs.true.60 ], [ false, %lor.lhs.false.57 ], [ %cmp62, %land.rhs ]
  %cond64 = select i1 %39, i32 8, i32 0
  store i32 %cond64, i32* %class, align 4
  br label %if.end.65

if.end.65:                                        ; preds = %land.end, %if.end.49
  %40 = load i32, i32* %class, align 4
  %cmp66 = icmp eq i32 %40, 0
  br i1 %cmp66, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.end.65
  store i32 -1, i32* %retval
  br label %return

if.end.69:                                        ; preds = %if.end.65
  %41 = load i32, i32* %in_p.addr, align 4
  %tobool70 = icmp ne i32 %41, 0
  br i1 %tobool70, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.69
  %42 = load i32, i32* %reload_mode.addr, align 4
  %idxprom71 = sext i32 %42 to i64
  %arrayidx72 = getelementptr inbounds [59 x i32], [59 x i32]* @reload_in_optab, i32 0, i64 %idxprom71
  %43 = load i32, i32* %arrayidx72, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end.69
  %44 = load i32, i32* %reload_mode.addr, align 4
  %idxprom73 = sext i32 %44 to i64
  %arrayidx74 = getelementptr inbounds [59 x i32], [59 x i32]* @reload_out_optab, i32 0, i64 %idxprom73
  %45 = load i32, i32* %arrayidx74, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond75 = phi i32 [ %43, %cond.true ], [ %45, %cond.false ]
  store i32 %cond75, i32* %icode, align 4
  %46 = load i32, i32* %icode, align 4
  %cmp76 = icmp ne i32 %46, 1317
  br i1 %cmp76, label %land.lhs.true.78, label %if.end.93

land.lhs.true.78:                                 ; preds = %cond.end
  %47 = load i32, i32* %in_p.addr, align 4
  %idxprom79 = sext i32 %47 to i64
  %48 = load i32, i32* %icode, align 4
  %idxprom80 = sext i32 %48 to i64
  %arrayidx81 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom80
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx81, i32 0, i32 3
  %49 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx82 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %49, i64 %idxprom79
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx82, i32 0, i32 0
  %50 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8
  %tobool83 = icmp ne i32 (%struct.rtx_def*, i32)* %50, null
  br i1 %tobool83, label %land.lhs.true.84, label %if.end.93

land.lhs.true.84:                                 ; preds = %land.lhs.true.78
  %51 = load i32, i32* %in_p.addr, align 4
  %idxprom85 = sext i32 %51 to i64
  %52 = load i32, i32* %icode, align 4
  %idxprom86 = sext i32 %52 to i64
  %arrayidx87 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom86
  %operand88 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx87, i32 0, i32 3
  %53 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand88, align 8
  %arrayidx89 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %53, i64 %idxprom85
  %predicate90 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx89, i32 0, i32 0
  %54 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate90, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = load i32, i32* %reload_mode.addr, align 4
  %call = call i32 %54(%struct.rtx_def* %55, i32 %56)
  %tobool91 = icmp ne i32 %call, 0
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %land.lhs.true.84
  store i32 1317, i32* %icode, align 4
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.92, %land.lhs.true.84, %land.lhs.true.78, %cond.end
  %57 = load i32, i32* %icode, align 4
  %cmp94 = icmp ne i32 %57, 1317
  br i1 %cmp94, label %if.then.96, label %if.end.503

if.then.96:                                       ; preds = %if.end.93
  %58 = load i32, i32* %in_p.addr, align 4
  %tobool97 = icmp ne i32 %58, 0
  %lnot = xor i1 %tobool97, true
  %lnot.ext = zext i1 %lnot to i32
  %idxprom98 = sext i32 %lnot.ext to i64
  %59 = load i32, i32* %icode, align 4
  %idxprom99 = sext i32 %59 to i64
  %arrayidx100 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom99
  %operand101 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx100, i32 0, i32 3
  %60 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand101, align 8
  %arrayidx102 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %60, i64 %idxprom98
  %constraint = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx102, i32 0, i32 1
  %61 = load i8*, i8** %constraint, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %61, i64 0
  %62 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %62 to i32
  %cmp105 = icmp eq i32 %conv104, 0
  br i1 %cmp105, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %if.then.96
  store i32 24, i32* %insn_class, align 4
  br label %if.end.298

if.else.108:                                      ; preds = %if.then.96
  %63 = load i32, i32* %in_p.addr, align 4
  %idxprom109 = sext i32 %63 to i64
  %64 = load i32, i32* %in_p.addr, align 4
  %tobool110 = icmp ne i32 %64, 0
  %lnot111 = xor i1 %tobool110, true
  %lnot.ext112 = zext i1 %lnot111 to i32
  %idxprom113 = sext i32 %lnot.ext112 to i64
  %65 = load i32, i32* %icode, align 4
  %idxprom114 = sext i32 %65 to i64
  %arrayidx115 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom114
  %operand116 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx115, i32 0, i32 3
  %66 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand116, align 8
  %arrayidx117 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %66, i64 %idxprom113
  %constraint118 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx117, i32 0, i32 1
  %67 = load i8*, i8** %constraint118, align 8
  %arrayidx119 = getelementptr inbounds i8, i8* %67, i64 %idxprom109
  %68 = load i8, i8* %arrayidx119, align 1
  store i8 %68, i8* %insn_letter, align 1
  %69 = load i8, i8* %insn_letter, align 1
  %conv120 = sext i8 %69 to i32
  %cmp121 = icmp eq i32 %conv120, 114
  br i1 %cmp121, label %cond.true.123, label %cond.false.124

cond.true.123:                                    ; preds = %if.else.108
  br label %cond.end.275

cond.false.124:                                   ; preds = %if.else.108
  %70 = load i8, i8* %insn_letter, align 1
  %conv125 = zext i8 %70 to i32
  %cmp126 = icmp eq i32 %conv125, 114
  br i1 %cmp126, label %cond.true.128, label %cond.false.129

cond.true.128:                                    ; preds = %cond.false.124
  br label %cond.end.273

cond.false.129:                                   ; preds = %cond.false.124
  %71 = load i8, i8* %insn_letter, align 1
  %conv130 = zext i8 %71 to i32
  %cmp131 = icmp eq i32 %conv130, 82
  br i1 %cmp131, label %cond.true.133, label %cond.false.134

cond.true.133:                                    ; preds = %cond.false.129
  br label %cond.end.271

cond.false.134:                                   ; preds = %cond.false.129
  %72 = load i8, i8* %insn_letter, align 1
  %conv135 = zext i8 %72 to i32
  %cmp136 = icmp eq i32 %conv135, 113
  br i1 %cmp136, label %cond.true.138, label %cond.false.142

cond.true.138:                                    ; preds = %cond.false.134
  %73 = load i32, i32* @target_flags, align 4
  %and139 = and i32 %73, 33554432
  %tobool140 = icmp ne i32 %and139, 0
  %cond141 = select i1 %tobool140, i32 12, i32 8
  br label %cond.end.269

cond.false.142:                                   ; preds = %cond.false.134
  %74 = load i8, i8* %insn_letter, align 1
  %conv143 = zext i8 %74 to i32
  %cmp144 = icmp eq i32 %conv143, 81
  br i1 %cmp144, label %cond.true.146, label %cond.false.147

cond.true.146:                                    ; preds = %cond.false.142
  br label %cond.end.267

cond.false.147:                                   ; preds = %cond.false.142
  %75 = load i8, i8* %insn_letter, align 1
  %conv148 = zext i8 %75 to i32
  %cmp149 = icmp eq i32 %conv148, 102
  br i1 %cmp149, label %cond.true.151, label %cond.false.157

cond.true.151:                                    ; preds = %cond.false.147
  %76 = load i32, i32* @target_flags, align 4
  %and152 = and i32 %76, 1
  %tobool153 = icmp ne i32 %and152, 0
  br i1 %tobool153, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.151
  %77 = load i32, i32* @target_flags, align 4
  %and154 = and i32 %77, 32
  %tobool155 = icmp ne i32 %and154, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.151
  %78 = phi i1 [ true, %cond.true.151 ], [ %tobool155, %lor.rhs ]
  %cond156 = select i1 %78, i32 15, i32 0
  br label %cond.end.265

cond.false.157:                                   ; preds = %cond.false.147
  %79 = load i8, i8* %insn_letter, align 1
  %conv158 = zext i8 %79 to i32
  %cmp159 = icmp eq i32 %conv158, 116
  br i1 %cmp159, label %cond.true.161, label %cond.false.169

cond.true.161:                                    ; preds = %cond.false.157
  %80 = load i32, i32* @target_flags, align 4
  %and162 = and i32 %80, 1
  %tobool163 = icmp ne i32 %and162, 0
  br i1 %tobool163, label %lor.end.167, label %lor.rhs.164

lor.rhs.164:                                      ; preds = %cond.true.161
  %81 = load i32, i32* @target_flags, align 4
  %and165 = and i32 %81, 32
  %tobool166 = icmp ne i32 %and165, 0
  br label %lor.end.167

lor.end.167:                                      ; preds = %lor.rhs.164, %cond.true.161
  %82 = phi i1 [ true, %cond.true.161 ], [ %tobool166, %lor.rhs.164 ]
  %cond168 = select i1 %82, i32 13, i32 0
  br label %cond.end.263

cond.false.169:                                   ; preds = %cond.false.157
  %83 = load i8, i8* %insn_letter, align 1
  %conv170 = zext i8 %83 to i32
  %cmp171 = icmp eq i32 %conv170, 117
  br i1 %cmp171, label %cond.true.173, label %cond.false.181

cond.true.173:                                    ; preds = %cond.false.169
  %84 = load i32, i32* @target_flags, align 4
  %and174 = and i32 %84, 1
  %tobool175 = icmp ne i32 %and174, 0
  br i1 %tobool175, label %lor.end.179, label %lor.rhs.176

lor.rhs.176:                                      ; preds = %cond.true.173
  %85 = load i32, i32* @target_flags, align 4
  %and177 = and i32 %85, 32
  %tobool178 = icmp ne i32 %and177, 0
  br label %lor.end.179

lor.end.179:                                      ; preds = %lor.rhs.176, %cond.true.173
  %86 = phi i1 [ true, %cond.true.173 ], [ %tobool178, %lor.rhs.176 ]
  %cond180 = select i1 %86, i32 14, i32 0
  br label %cond.end.261

cond.false.181:                                   ; preds = %cond.false.169
  %87 = load i8, i8* %insn_letter, align 1
  %conv182 = zext i8 %87 to i32
  %cmp183 = icmp eq i32 %conv182, 97
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %cond.false.181
  br label %cond.end.259

cond.false.186:                                   ; preds = %cond.false.181
  %88 = load i8, i8* %insn_letter, align 1
  %conv187 = zext i8 %88 to i32
  %cmp188 = icmp eq i32 %conv187, 98
  br i1 %cmp188, label %cond.true.190, label %cond.false.191

cond.true.190:                                    ; preds = %cond.false.186
  br label %cond.end.257

cond.false.191:                                   ; preds = %cond.false.186
  %89 = load i8, i8* %insn_letter, align 1
  %conv192 = zext i8 %89 to i32
  %cmp193 = icmp eq i32 %conv192, 99
  br i1 %cmp193, label %cond.true.195, label %cond.false.196

cond.true.195:                                    ; preds = %cond.false.191
  br label %cond.end.255

cond.false.196:                                   ; preds = %cond.false.191
  %90 = load i8, i8* %insn_letter, align 1
  %conv197 = zext i8 %90 to i32
  %cmp198 = icmp eq i32 %conv197, 100
  br i1 %cmp198, label %cond.true.200, label %cond.false.201

cond.true.200:                                    ; preds = %cond.false.196
  br label %cond.end.253

cond.false.201:                                   ; preds = %cond.false.196
  %91 = load i8, i8* %insn_letter, align 1
  %conv202 = zext i8 %91 to i32
  %cmp203 = icmp eq i32 %conv202, 120
  br i1 %cmp203, label %cond.true.205, label %cond.false.210

cond.true.205:                                    ; preds = %cond.false.201
  %92 = load i32, i32* @target_flags, align 4
  %and206 = and i32 %92, 327680
  %cmp207 = icmp ne i32 %and206, 0
  %cond209 = select i1 %cmp207, i32 16, i32 0
  br label %cond.end.251

cond.false.210:                                   ; preds = %cond.false.201
  %93 = load i8, i8* %insn_letter, align 1
  %conv211 = zext i8 %93 to i32
  %cmp212 = icmp eq i32 %conv211, 89
  br i1 %cmp212, label %cond.true.214, label %cond.false.219

cond.true.214:                                    ; preds = %cond.false.210
  %94 = load i32, i32* @target_flags, align 4
  %and215 = and i32 %94, 262144
  %cmp216 = icmp ne i32 %and215, 0
  %cond218 = select i1 %cmp216, i32 16, i32 0
  br label %cond.end.249

cond.false.219:                                   ; preds = %cond.false.210
  %95 = load i8, i8* %insn_letter, align 1
  %conv220 = zext i8 %95 to i32
  %cmp221 = icmp eq i32 %conv220, 121
  br i1 %cmp221, label %cond.true.223, label %cond.false.228

cond.true.223:                                    ; preds = %cond.false.219
  %96 = load i32, i32* @target_flags, align 4
  %and224 = and i32 %96, 16384
  %cmp225 = icmp ne i32 %and224, 0
  %cond227 = select i1 %cmp225, i32 17, i32 0
  br label %cond.end.247

cond.false.228:                                   ; preds = %cond.false.219
  %97 = load i8, i8* %insn_letter, align 1
  %conv229 = zext i8 %97 to i32
  %cmp230 = icmp eq i32 %conv229, 65
  br i1 %cmp230, label %cond.true.232, label %cond.false.233

cond.true.232:                                    ; preds = %cond.false.228
  br label %cond.end.245

cond.false.233:                                   ; preds = %cond.false.228
  %98 = load i8, i8* %insn_letter, align 1
  %conv234 = zext i8 %98 to i32
  %cmp235 = icmp eq i32 %conv234, 68
  br i1 %cmp235, label %cond.true.237, label %cond.false.238

cond.true.237:                                    ; preds = %cond.false.233
  br label %cond.end.243

cond.false.238:                                   ; preds = %cond.false.233
  %99 = load i8, i8* %insn_letter, align 1
  %conv239 = zext i8 %99 to i32
  %cmp240 = icmp eq i32 %conv239, 83
  %cond242 = select i1 %cmp240, i32 5, i32 0
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.238, %cond.true.237
  %cond244 = phi i32 [ 6, %cond.true.237 ], [ %cond242, %cond.false.238 ]
  br label %cond.end.245

cond.end.245:                                     ; preds = %cond.end.243, %cond.true.232
  %cond246 = phi i32 [ 7, %cond.true.232 ], [ %cond244, %cond.end.243 ]
  br label %cond.end.247

cond.end.247:                                     ; preds = %cond.end.245, %cond.true.223
  %cond248 = phi i32 [ %cond227, %cond.true.223 ], [ %cond246, %cond.end.245 ]
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.end.247, %cond.true.214
  %cond250 = phi i32 [ %cond218, %cond.true.214 ], [ %cond248, %cond.end.247 ]
  br label %cond.end.251

cond.end.251:                                     ; preds = %cond.end.249, %cond.true.205
  %cond252 = phi i32 [ %cond209, %cond.true.205 ], [ %cond250, %cond.end.249 ]
  br label %cond.end.253

cond.end.253:                                     ; preds = %cond.end.251, %cond.true.200
  %cond254 = phi i32 [ 2, %cond.true.200 ], [ %cond252, %cond.end.251 ]
  br label %cond.end.255

cond.end.255:                                     ; preds = %cond.end.253, %cond.true.195
  %cond256 = phi i32 [ 3, %cond.true.195 ], [ %cond254, %cond.end.253 ]
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.end.255, %cond.true.190
  %cond258 = phi i32 [ 4, %cond.true.190 ], [ %cond256, %cond.end.255 ]
  br label %cond.end.259

cond.end.259:                                     ; preds = %cond.end.257, %cond.true.185
  %cond260 = phi i32 [ 1, %cond.true.185 ], [ %cond258, %cond.end.257 ]
  br label %cond.end.261

cond.end.261:                                     ; preds = %cond.end.259, %lor.end.179
  %cond262 = phi i32 [ %cond180, %lor.end.179 ], [ %cond260, %cond.end.259 ]
  br label %cond.end.263

cond.end.263:                                     ; preds = %cond.end.261, %lor.end.167
  %cond264 = phi i32 [ %cond168, %lor.end.167 ], [ %cond262, %cond.end.261 ]
  br label %cond.end.265

cond.end.265:                                     ; preds = %cond.end.263, %lor.end
  %cond266 = phi i32 [ %cond156, %lor.end ], [ %cond264, %cond.end.263 ]
  br label %cond.end.267

cond.end.267:                                     ; preds = %cond.end.265, %cond.true.146
  %cond268 = phi i32 [ 8, %cond.true.146 ], [ %cond266, %cond.end.265 ]
  br label %cond.end.269

cond.end.269:                                     ; preds = %cond.end.267, %cond.true.138
  %cond270 = phi i32 [ %cond141, %cond.true.138 ], [ %cond268, %cond.end.267 ]
  br label %cond.end.271

cond.end.271:                                     ; preds = %cond.end.269, %cond.true.133
  %cond272 = phi i32 [ 11, %cond.true.133 ], [ %cond270, %cond.end.269 ]
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.end.271, %cond.true.128
  %cond274 = phi i32 [ 12, %cond.true.128 ], [ %cond272, %cond.end.271 ]
  br label %cond.end.275

cond.end.275:                                     ; preds = %cond.end.273, %cond.true.123
  %cond276 = phi i32 [ 12, %cond.true.123 ], [ %cond274, %cond.end.273 ]
  store i32 %cond276, i32* %insn_class, align 4
  %100 = load i32, i32* %insn_class, align 4
  %cmp277 = icmp eq i32 %100, 0
  br i1 %cmp277, label %if.then.279, label %if.end.280

if.then.279:                                      ; preds = %cond.end.275
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 388, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.push_secondary_reload, i32 0, i32 0)) #5
  unreachable

if.end.280:                                       ; preds = %cond.end.275
  %101 = load i32, i32* %in_p.addr, align 4
  %tobool281 = icmp ne i32 %101, 0
  br i1 %tobool281, label %land.lhs.true.282, label %if.end.297

land.lhs.true.282:                                ; preds = %if.end.280
  %102 = load i32, i32* %in_p.addr, align 4
  %tobool283 = icmp ne i32 %102, 0
  %lnot284 = xor i1 %tobool283, true
  %lnot.ext285 = zext i1 %lnot284 to i32
  %idxprom286 = sext i32 %lnot.ext285 to i64
  %103 = load i32, i32* %icode, align 4
  %idxprom287 = sext i32 %103 to i64
  %arrayidx288 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom287
  %operand289 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx288, i32 0, i32 3
  %104 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand289, align 8
  %arrayidx290 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %104, i64 %idxprom286
  %constraint291 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx290, i32 0, i32 1
  %105 = load i8*, i8** %constraint291, align 8
  %arrayidx292 = getelementptr inbounds i8, i8* %105, i64 0
  %106 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %106 to i32
  %cmp294 = icmp ne i32 %conv293, 61
  br i1 %cmp294, label %if.then.296, label %if.end.297

if.then.296:                                      ; preds = %land.lhs.true.282
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 391, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.push_secondary_reload, i32 0, i32 0)) #5
  unreachable

if.end.297:                                       ; preds = %land.lhs.true.282, %if.end.280
  br label %if.end.298

if.end.298:                                       ; preds = %if.end.297, %if.then.107
  %107 = load i32, i32* %icode, align 4
  %idxprom299 = sext i32 %107 to i64
  %arrayidx300 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom299
  %operand301 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx300, i32 0, i32 3
  %108 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand301, align 8
  %arrayidx302 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %108, i64 2
  %constraint303 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx302, i32 0, i32 1
  %109 = load i8*, i8** %constraint303, align 8
  %arrayidx304 = getelementptr inbounds i8, i8* %109, i64 0
  %110 = load i8, i8* %arrayidx304, align 1
  %conv305 = sext i8 %110 to i32
  %cmp306 = icmp ne i32 %conv305, 61
  br i1 %cmp306, label %if.then.318, label %lor.lhs.false.308

lor.lhs.false.308:                                ; preds = %if.end.298
  %111 = load i32, i32* %icode, align 4
  %idxprom309 = sext i32 %111 to i64
  %arrayidx310 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom309
  %operand311 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx310, i32 0, i32 3
  %112 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand311, align 8
  %arrayidx312 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %112, i64 2
  %constraint313 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx312, i32 0, i32 1
  %113 = load i8*, i8** %constraint313, align 8
  %arrayidx314 = getelementptr inbounds i8, i8* %113, i64 1
  %114 = load i8, i8* %arrayidx314, align 1
  %conv315 = sext i8 %114 to i32
  %cmp316 = icmp ne i32 %conv315, 38
  br i1 %cmp316, label %if.then.318, label %if.end.319

if.then.318:                                      ; preds = %lor.lhs.false.308, %if.end.298
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 397, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.push_secondary_reload, i32 0, i32 0)) #5
  unreachable

if.end.319:                                       ; preds = %lor.lhs.false.308
  %115 = load i32, i32* %reload_class.addr, align 4
  %116 = load i32, i32* %insn_class, align 4
  %call320 = call i32 @reg_class_subset_p(i32 %115, i32 %116)
  %tobool321 = icmp ne i32 %call320, 0
  br i1 %tobool321, label %if.then.322, label %if.else.329

if.then.322:                                      ; preds = %if.end.319
  %117 = load i32, i32* %icode, align 4
  %idxprom323 = sext i32 %117 to i64
  %arrayidx324 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom323
  %operand325 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx324, i32 0, i32 3
  %118 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand325, align 8
  %arrayidx326 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %118, i64 2
  %mode327 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx326, i32 0, i32 2
  %bf.load328 = load i16, i16* %mode327, align 8
  %bf.cast = zext i16 %bf.load328 to i32
  store i32 %bf.cast, i32* %mode, align 4
  br label %if.end.502

if.else.329:                                      ; preds = %if.end.319
  %119 = load i32, i32* %icode, align 4
  %idxprom330 = sext i32 %119 to i64
  %arrayidx331 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom330
  %operand332 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx331, i32 0, i32 3
  %120 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand332, align 8
  %arrayidx333 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %120, i64 2
  %constraint334 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx333, i32 0, i32 1
  %121 = load i8*, i8** %constraint334, align 8
  %arrayidx335 = getelementptr inbounds i8, i8* %121, i64 2
  %122 = load i8, i8* %arrayidx335, align 1
  store i8 %122, i8* %t_letter, align 1
  %123 = load i32, i32* %insn_class, align 4
  store i32 %123, i32* %class, align 4
  %124 = load i32, i32* %icode, align 4
  %idxprom336 = sext i32 %124 to i64
  %arrayidx337 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom336
  %operand338 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx337, i32 0, i32 3
  %125 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand338, align 8
  %arrayidx339 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %125, i64 2
  %mode340 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx339, i32 0, i32 2
  %bf.load341 = load i16, i16* %mode340, align 8
  %bf.cast342 = zext i16 %bf.load341 to i32
  store i32 %bf.cast342, i32* %t_mode, align 4
  %126 = load i8, i8* %t_letter, align 1
  %conv343 = sext i8 %126 to i32
  %cmp344 = icmp eq i32 %conv343, 114
  br i1 %cmp344, label %cond.true.346, label %cond.false.347

cond.true.346:                                    ; preds = %if.else.329
  br label %cond.end.500

cond.false.347:                                   ; preds = %if.else.329
  %127 = load i8, i8* %t_letter, align 1
  %conv348 = zext i8 %127 to i32
  %cmp349 = icmp eq i32 %conv348, 114
  br i1 %cmp349, label %cond.true.351, label %cond.false.352

cond.true.351:                                    ; preds = %cond.false.347
  br label %cond.end.498

cond.false.352:                                   ; preds = %cond.false.347
  %128 = load i8, i8* %t_letter, align 1
  %conv353 = zext i8 %128 to i32
  %cmp354 = icmp eq i32 %conv353, 82
  br i1 %cmp354, label %cond.true.356, label %cond.false.357

cond.true.356:                                    ; preds = %cond.false.352
  br label %cond.end.496

cond.false.357:                                   ; preds = %cond.false.352
  %129 = load i8, i8* %t_letter, align 1
  %conv358 = zext i8 %129 to i32
  %cmp359 = icmp eq i32 %conv358, 113
  br i1 %cmp359, label %cond.true.361, label %cond.false.365

cond.true.361:                                    ; preds = %cond.false.357
  %130 = load i32, i32* @target_flags, align 4
  %and362 = and i32 %130, 33554432
  %tobool363 = icmp ne i32 %and362, 0
  %cond364 = select i1 %tobool363, i32 12, i32 8
  br label %cond.end.494

cond.false.365:                                   ; preds = %cond.false.357
  %131 = load i8, i8* %t_letter, align 1
  %conv366 = zext i8 %131 to i32
  %cmp367 = icmp eq i32 %conv366, 81
  br i1 %cmp367, label %cond.true.369, label %cond.false.370

cond.true.369:                                    ; preds = %cond.false.365
  br label %cond.end.492

cond.false.370:                                   ; preds = %cond.false.365
  %132 = load i8, i8* %t_letter, align 1
  %conv371 = zext i8 %132 to i32
  %cmp372 = icmp eq i32 %conv371, 102
  br i1 %cmp372, label %cond.true.374, label %cond.false.382

cond.true.374:                                    ; preds = %cond.false.370
  %133 = load i32, i32* @target_flags, align 4
  %and375 = and i32 %133, 1
  %tobool376 = icmp ne i32 %and375, 0
  br i1 %tobool376, label %lor.end.380, label %lor.rhs.377

lor.rhs.377:                                      ; preds = %cond.true.374
  %134 = load i32, i32* @target_flags, align 4
  %and378 = and i32 %134, 32
  %tobool379 = icmp ne i32 %and378, 0
  br label %lor.end.380

lor.end.380:                                      ; preds = %lor.rhs.377, %cond.true.374
  %135 = phi i1 [ true, %cond.true.374 ], [ %tobool379, %lor.rhs.377 ]
  %cond381 = select i1 %135, i32 15, i32 0
  br label %cond.end.490

cond.false.382:                                   ; preds = %cond.false.370
  %136 = load i8, i8* %t_letter, align 1
  %conv383 = zext i8 %136 to i32
  %cmp384 = icmp eq i32 %conv383, 116
  br i1 %cmp384, label %cond.true.386, label %cond.false.394

cond.true.386:                                    ; preds = %cond.false.382
  %137 = load i32, i32* @target_flags, align 4
  %and387 = and i32 %137, 1
  %tobool388 = icmp ne i32 %and387, 0
  br i1 %tobool388, label %lor.end.392, label %lor.rhs.389

lor.rhs.389:                                      ; preds = %cond.true.386
  %138 = load i32, i32* @target_flags, align 4
  %and390 = and i32 %138, 32
  %tobool391 = icmp ne i32 %and390, 0
  br label %lor.end.392

lor.end.392:                                      ; preds = %lor.rhs.389, %cond.true.386
  %139 = phi i1 [ true, %cond.true.386 ], [ %tobool391, %lor.rhs.389 ]
  %cond393 = select i1 %139, i32 13, i32 0
  br label %cond.end.488

cond.false.394:                                   ; preds = %cond.false.382
  %140 = load i8, i8* %t_letter, align 1
  %conv395 = zext i8 %140 to i32
  %cmp396 = icmp eq i32 %conv395, 117
  br i1 %cmp396, label %cond.true.398, label %cond.false.406

cond.true.398:                                    ; preds = %cond.false.394
  %141 = load i32, i32* @target_flags, align 4
  %and399 = and i32 %141, 1
  %tobool400 = icmp ne i32 %and399, 0
  br i1 %tobool400, label %lor.end.404, label %lor.rhs.401

lor.rhs.401:                                      ; preds = %cond.true.398
  %142 = load i32, i32* @target_flags, align 4
  %and402 = and i32 %142, 32
  %tobool403 = icmp ne i32 %and402, 0
  br label %lor.end.404

lor.end.404:                                      ; preds = %lor.rhs.401, %cond.true.398
  %143 = phi i1 [ true, %cond.true.398 ], [ %tobool403, %lor.rhs.401 ]
  %cond405 = select i1 %143, i32 14, i32 0
  br label %cond.end.486

cond.false.406:                                   ; preds = %cond.false.394
  %144 = load i8, i8* %t_letter, align 1
  %conv407 = zext i8 %144 to i32
  %cmp408 = icmp eq i32 %conv407, 97
  br i1 %cmp408, label %cond.true.410, label %cond.false.411

cond.true.410:                                    ; preds = %cond.false.406
  br label %cond.end.484

cond.false.411:                                   ; preds = %cond.false.406
  %145 = load i8, i8* %t_letter, align 1
  %conv412 = zext i8 %145 to i32
  %cmp413 = icmp eq i32 %conv412, 98
  br i1 %cmp413, label %cond.true.415, label %cond.false.416

cond.true.415:                                    ; preds = %cond.false.411
  br label %cond.end.482

cond.false.416:                                   ; preds = %cond.false.411
  %146 = load i8, i8* %t_letter, align 1
  %conv417 = zext i8 %146 to i32
  %cmp418 = icmp eq i32 %conv417, 99
  br i1 %cmp418, label %cond.true.420, label %cond.false.421

cond.true.420:                                    ; preds = %cond.false.416
  br label %cond.end.480

cond.false.421:                                   ; preds = %cond.false.416
  %147 = load i8, i8* %t_letter, align 1
  %conv422 = zext i8 %147 to i32
  %cmp423 = icmp eq i32 %conv422, 100
  br i1 %cmp423, label %cond.true.425, label %cond.false.426

cond.true.425:                                    ; preds = %cond.false.421
  br label %cond.end.478

cond.false.426:                                   ; preds = %cond.false.421
  %148 = load i8, i8* %t_letter, align 1
  %conv427 = zext i8 %148 to i32
  %cmp428 = icmp eq i32 %conv427, 120
  br i1 %cmp428, label %cond.true.430, label %cond.false.435

cond.true.430:                                    ; preds = %cond.false.426
  %149 = load i32, i32* @target_flags, align 4
  %and431 = and i32 %149, 327680
  %cmp432 = icmp ne i32 %and431, 0
  %cond434 = select i1 %cmp432, i32 16, i32 0
  br label %cond.end.476

cond.false.435:                                   ; preds = %cond.false.426
  %150 = load i8, i8* %t_letter, align 1
  %conv436 = zext i8 %150 to i32
  %cmp437 = icmp eq i32 %conv436, 89
  br i1 %cmp437, label %cond.true.439, label %cond.false.444

cond.true.439:                                    ; preds = %cond.false.435
  %151 = load i32, i32* @target_flags, align 4
  %and440 = and i32 %151, 262144
  %cmp441 = icmp ne i32 %and440, 0
  %cond443 = select i1 %cmp441, i32 16, i32 0
  br label %cond.end.474

cond.false.444:                                   ; preds = %cond.false.435
  %152 = load i8, i8* %t_letter, align 1
  %conv445 = zext i8 %152 to i32
  %cmp446 = icmp eq i32 %conv445, 121
  br i1 %cmp446, label %cond.true.448, label %cond.false.453

cond.true.448:                                    ; preds = %cond.false.444
  %153 = load i32, i32* @target_flags, align 4
  %and449 = and i32 %153, 16384
  %cmp450 = icmp ne i32 %and449, 0
  %cond452 = select i1 %cmp450, i32 17, i32 0
  br label %cond.end.472

cond.false.453:                                   ; preds = %cond.false.444
  %154 = load i8, i8* %t_letter, align 1
  %conv454 = zext i8 %154 to i32
  %cmp455 = icmp eq i32 %conv454, 65
  br i1 %cmp455, label %cond.true.457, label %cond.false.458

cond.true.457:                                    ; preds = %cond.false.453
  br label %cond.end.470

cond.false.458:                                   ; preds = %cond.false.453
  %155 = load i8, i8* %t_letter, align 1
  %conv459 = zext i8 %155 to i32
  %cmp460 = icmp eq i32 %conv459, 68
  br i1 %cmp460, label %cond.true.462, label %cond.false.463

cond.true.462:                                    ; preds = %cond.false.458
  br label %cond.end.468

cond.false.463:                                   ; preds = %cond.false.458
  %156 = load i8, i8* %t_letter, align 1
  %conv464 = zext i8 %156 to i32
  %cmp465 = icmp eq i32 %conv464, 83
  %cond467 = select i1 %cmp465, i32 5, i32 0
  br label %cond.end.468

cond.end.468:                                     ; preds = %cond.false.463, %cond.true.462
  %cond469 = phi i32 [ 6, %cond.true.462 ], [ %cond467, %cond.false.463 ]
  br label %cond.end.470

cond.end.470:                                     ; preds = %cond.end.468, %cond.true.457
  %cond471 = phi i32 [ 7, %cond.true.457 ], [ %cond469, %cond.end.468 ]
  br label %cond.end.472

cond.end.472:                                     ; preds = %cond.end.470, %cond.true.448
  %cond473 = phi i32 [ %cond452, %cond.true.448 ], [ %cond471, %cond.end.470 ]
  br label %cond.end.474

cond.end.474:                                     ; preds = %cond.end.472, %cond.true.439
  %cond475 = phi i32 [ %cond443, %cond.true.439 ], [ %cond473, %cond.end.472 ]
  br label %cond.end.476

cond.end.476:                                     ; preds = %cond.end.474, %cond.true.430
  %cond477 = phi i32 [ %cond434, %cond.true.430 ], [ %cond475, %cond.end.474 ]
  br label %cond.end.478

cond.end.478:                                     ; preds = %cond.end.476, %cond.true.425
  %cond479 = phi i32 [ 2, %cond.true.425 ], [ %cond477, %cond.end.476 ]
  br label %cond.end.480

cond.end.480:                                     ; preds = %cond.end.478, %cond.true.420
  %cond481 = phi i32 [ 3, %cond.true.420 ], [ %cond479, %cond.end.478 ]
  br label %cond.end.482

cond.end.482:                                     ; preds = %cond.end.480, %cond.true.415
  %cond483 = phi i32 [ 4, %cond.true.415 ], [ %cond481, %cond.end.480 ]
  br label %cond.end.484

cond.end.484:                                     ; preds = %cond.end.482, %cond.true.410
  %cond485 = phi i32 [ 1, %cond.true.410 ], [ %cond483, %cond.end.482 ]
  br label %cond.end.486

cond.end.486:                                     ; preds = %cond.end.484, %lor.end.404
  %cond487 = phi i32 [ %cond405, %lor.end.404 ], [ %cond485, %cond.end.484 ]
  br label %cond.end.488

cond.end.488:                                     ; preds = %cond.end.486, %lor.end.392
  %cond489 = phi i32 [ %cond393, %lor.end.392 ], [ %cond487, %cond.end.486 ]
  br label %cond.end.490

cond.end.490:                                     ; preds = %cond.end.488, %lor.end.380
  %cond491 = phi i32 [ %cond381, %lor.end.380 ], [ %cond489, %cond.end.488 ]
  br label %cond.end.492

cond.end.492:                                     ; preds = %cond.end.490, %cond.true.369
  %cond493 = phi i32 [ 8, %cond.true.369 ], [ %cond491, %cond.end.490 ]
  br label %cond.end.494

cond.end.494:                                     ; preds = %cond.end.492, %cond.true.361
  %cond495 = phi i32 [ %cond364, %cond.true.361 ], [ %cond493, %cond.end.492 ]
  br label %cond.end.496

cond.end.496:                                     ; preds = %cond.end.494, %cond.true.356
  %cond497 = phi i32 [ 11, %cond.true.356 ], [ %cond495, %cond.end.494 ]
  br label %cond.end.498

cond.end.498:                                     ; preds = %cond.end.496, %cond.true.351
  %cond499 = phi i32 [ 12, %cond.true.351 ], [ %cond497, %cond.end.496 ]
  br label %cond.end.500

cond.end.500:                                     ; preds = %cond.end.498, %cond.true.346
  %cond501 = phi i32 [ 12, %cond.true.346 ], [ %cond499, %cond.end.498 ]
  store i32 %cond501, i32* %t_class, align 4
  %157 = load i32, i32* %icode, align 4
  store i32 %157, i32* %t_icode, align 4
  store i32 1317, i32* %icode, align 4
  br label %if.end.502

if.end.502:                                       ; preds = %cond.end.500, %if.then.322
  br label %if.end.503

if.end.503:                                       ; preds = %if.end.502, %if.end.93
  %158 = load i32, i32* %in_p.addr, align 4
  %tobool504 = icmp ne i32 %158, 0
  br i1 %tobool504, label %land.lhs.true.505, label %if.end.515

land.lhs.true.505:                                ; preds = %if.end.503
  %159 = load i32, i32* %class, align 4
  %160 = load i32, i32* %reload_class.addr, align 4
  %cmp506 = icmp eq i32 %159, %160
  br i1 %cmp506, label %land.lhs.true.508, label %if.end.515

land.lhs.true.508:                                ; preds = %land.lhs.true.505
  %161 = load i32, i32* %icode, align 4
  %cmp509 = icmp eq i32 %161, 1317
  br i1 %cmp509, label %land.lhs.true.511, label %if.end.515

land.lhs.true.511:                                ; preds = %land.lhs.true.508
  %162 = load i32, i32* %t_icode, align 4
  %cmp512 = icmp eq i32 %162, 1317
  br i1 %cmp512, label %if.then.514, label %if.end.515

if.then.514:                                      ; preds = %land.lhs.true.511
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 429, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.push_secondary_reload, i32 0, i32 0)) #5
  unreachable

if.end.515:                                       ; preds = %land.lhs.true.511, %land.lhs.true.508, %land.lhs.true.505, %if.end.503
  %163 = load i32, i32* %t_class, align 4
  %cmp516 = icmp ne i32 %163, 0
  br i1 %cmp516, label %if.then.518, label %if.end.772

if.then.518:                                      ; preds = %if.end.515
  store i32 0, i32* %t_reload, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.518
  %164 = load i32, i32* %t_reload, align 4
  %165 = load i32, i32* @n_reloads, align 4
  %cmp519 = icmp slt i32 %164, %165
  br i1 %cmp519, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %166 = load i32, i32* %t_reload, align 4
  %idxprom521 = sext i32 %166 to i64
  %arrayidx522 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom521
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx522, i32 0, i32 18
  %bf.load523 = load i8, i8* %secondary_p, align 8
  %bf.lshr524 = lshr i8 %bf.load523, 2
  %bf.clear525 = and i8 %bf.lshr524, 1
  %bf.cast526 = zext i8 %bf.clear525 to i32
  %tobool527 = icmp ne i32 %bf.cast526, 0
  br i1 %tobool527, label %land.lhs.true.528, label %if.end.699

land.lhs.true.528:                                ; preds = %for.body
  %167 = load i32, i32* %t_class, align 4
  %168 = load i32, i32* %t_reload, align 4
  %idxprom529 = sext i32 %168 to i64
  %arrayidx530 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom529
  %class531 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx530, i32 0, i32 2
  %169 = load i32, i32* %class531, align 4
  %call532 = call i32 @reg_class_subset_p(i32 %167, i32 %169)
  %tobool533 = icmp ne i32 %call532, 0
  br i1 %tobool533, label %land.lhs.true.540, label %lor.lhs.false.534

lor.lhs.false.534:                                ; preds = %land.lhs.true.528
  %170 = load i32, i32* %t_reload, align 4
  %idxprom535 = sext i32 %170 to i64
  %arrayidx536 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom535
  %class537 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx536, i32 0, i32 2
  %171 = load i32, i32* %class537, align 4
  %172 = load i32, i32* %t_class, align 4
  %call538 = call i32 @reg_class_subset_p(i32 %171, i32 %172)
  %tobool539 = icmp ne i32 %call538, 0
  br i1 %tobool539, label %land.lhs.true.540, label %if.end.699

land.lhs.true.540:                                ; preds = %lor.lhs.false.534, %land.lhs.true.528
  %173 = load i32, i32* %in_p.addr, align 4
  %tobool541 = icmp ne i32 %173, 0
  br i1 %tobool541, label %land.lhs.true.542, label %lor.lhs.false.547

land.lhs.true.542:                                ; preds = %land.lhs.true.540
  %174 = load i32, i32* %t_reload, align 4
  %idxprom543 = sext i32 %174 to i64
  %arrayidx544 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom543
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx544, i32 0, i32 3
  %175 = load i32, i32* %inmode, align 4
  %176 = load i32, i32* %t_mode, align 4
  %cmp545 = icmp eq i32 %175, %176
  br i1 %cmp545, label %land.lhs.true.554, label %lor.lhs.false.547

lor.lhs.false.547:                                ; preds = %land.lhs.true.542, %land.lhs.true.540
  %177 = load i32, i32* %in_p.addr, align 4
  %tobool548 = icmp ne i32 %177, 0
  br i1 %tobool548, label %if.end.699, label %land.lhs.true.549

land.lhs.true.549:                                ; preds = %lor.lhs.false.547
  %178 = load i32, i32* %t_reload, align 4
  %idxprom550 = sext i32 %178 to i64
  %arrayidx551 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom550
  %outmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx551, i32 0, i32 4
  %179 = load i32, i32* %outmode, align 4
  %180 = load i32, i32* %t_mode, align 4
  %cmp552 = icmp eq i32 %179, %180
  br i1 %cmp552, label %land.lhs.true.554, label %if.end.699

land.lhs.true.554:                                ; preds = %land.lhs.true.549, %land.lhs.true.542
  %181 = load i32, i32* %in_p.addr, align 4
  %tobool555 = icmp ne i32 %181, 0
  br i1 %tobool555, label %land.lhs.true.556, label %lor.lhs.false.561

land.lhs.true.556:                                ; preds = %land.lhs.true.554
  %182 = load i32, i32* %t_reload, align 4
  %idxprom557 = sext i32 %182 to i64
  %arrayidx558 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom557
  %secondary_in_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx558, i32 0, i32 15
  %183 = load i32, i32* %secondary_in_icode, align 4
  %cmp559 = icmp eq i32 %183, 1317
  br i1 %cmp559, label %land.lhs.true.568, label %lor.lhs.false.561

lor.lhs.false.561:                                ; preds = %land.lhs.true.556, %land.lhs.true.554
  %184 = load i32, i32* %in_p.addr, align 4
  %tobool562 = icmp ne i32 %184, 0
  br i1 %tobool562, label %if.end.699, label %land.lhs.true.563

land.lhs.true.563:                                ; preds = %lor.lhs.false.561
  %185 = load i32, i32* %t_reload, align 4
  %idxprom564 = sext i32 %185 to i64
  %arrayidx565 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom564
  %secondary_out_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx565, i32 0, i32 16
  %186 = load i32, i32* %secondary_out_icode, align 4
  %cmp566 = icmp eq i32 %186, 1317
  br i1 %cmp566, label %land.lhs.true.568, label %if.end.699

land.lhs.true.568:                                ; preds = %land.lhs.true.563, %land.lhs.true.556
  %187 = load i32, i32* %t_class, align 4
  %idxprom569 = sext i32 %187 to i64
  %arrayidx570 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom569
  %188 = load i32, i32* %arrayidx570, align 4
  %cmp571 = icmp eq i32 %188, 1
  br i1 %cmp571, label %land.lhs.true.574, label %lor.lhs.false.573

lor.lhs.false.573:                                ; preds = %land.lhs.true.568
  br i1 true, label %land.lhs.true.574, label %if.end.699

land.lhs.true.574:                                ; preds = %lor.lhs.false.573, %land.lhs.true.568
  %189 = load i32, i32* %secondary_type, align 4
  %cmp575 = icmp eq i32 %189, 9
  br i1 %cmp575, label %if.then.621, label %lor.lhs.false.577

lor.lhs.false.577:                                ; preds = %land.lhs.true.574
  %190 = load i32, i32* %t_reload, align 4
  %idxprom578 = sext i32 %190 to i64
  %arrayidx579 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom578
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx579, i32 0, i32 17
  %191 = load i32, i32* %when_needed, align 4
  %cmp580 = icmp eq i32 %191, 9
  br i1 %cmp580, label %if.then.621, label %lor.lhs.false.582

lor.lhs.false.582:                                ; preds = %lor.lhs.false.577
  %192 = load i32, i32* %secondary_type, align 4
  %193 = load i32, i32* %t_reload, align 4
  %idxprom583 = sext i32 %193 to i64
  %arrayidx584 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom583
  %when_needed585 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx584, i32 0, i32 17
  %194 = load i32, i32* %when_needed585, align 4
  %cmp586 = icmp eq i32 %192, %194
  br i1 %cmp586, label %land.lhs.true.588, label %lor.lhs.false.594

land.lhs.true.588:                                ; preds = %lor.lhs.false.582
  %195 = load i32, i32* %opnum.addr, align 4
  %196 = load i32, i32* %t_reload, align 4
  %idxprom589 = sext i32 %196 to i64
  %arrayidx590 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom589
  %opnum591 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx590, i32 0, i32 12
  %197 = load i32, i32* %opnum591, align 4
  %cmp592 = icmp eq i32 %195, %197
  br i1 %cmp592, label %if.then.621, label %lor.lhs.false.594

lor.lhs.false.594:                                ; preds = %land.lhs.true.588, %lor.lhs.false.582
  %198 = load i32, i32* %secondary_type, align 4
  %cmp595 = icmp eq i32 %198, 0
  br i1 %cmp595, label %land.lhs.true.597, label %lor.lhs.false.603

land.lhs.true.597:                                ; preds = %lor.lhs.false.594
  %199 = load i32, i32* %t_reload, align 4
  %idxprom598 = sext i32 %199 to i64
  %arrayidx599 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom598
  %when_needed600 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx599, i32 0, i32 17
  %200 = load i32, i32* %when_needed600, align 4
  %cmp601 = icmp eq i32 %200, 0
  br i1 %cmp601, label %if.then.621, label %lor.lhs.false.603

lor.lhs.false.603:                                ; preds = %land.lhs.true.597, %lor.lhs.false.594
  %201 = load i32, i32* %secondary_type, align 4
  %cmp604 = icmp eq i32 %201, 7
  br i1 %cmp604, label %land.lhs.true.606, label %lor.lhs.false.612

land.lhs.true.606:                                ; preds = %lor.lhs.false.603
  %202 = load i32, i32* %t_reload, align 4
  %idxprom607 = sext i32 %202 to i64
  %arrayidx608 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom607
  %when_needed609 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx608, i32 0, i32 17
  %203 = load i32, i32* %when_needed609, align 4
  %cmp610 = icmp eq i32 %203, 7
  br i1 %cmp610, label %if.then.621, label %lor.lhs.false.612

lor.lhs.false.612:                                ; preds = %land.lhs.true.606, %lor.lhs.false.603
  %204 = load i32, i32* %secondary_type, align 4
  %cmp613 = icmp eq i32 %204, 10
  br i1 %cmp613, label %land.lhs.true.615, label %if.end.699

land.lhs.true.615:                                ; preds = %lor.lhs.false.612
  %205 = load i32, i32* %t_reload, align 4
  %idxprom616 = sext i32 %205 to i64
  %arrayidx617 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom616
  %when_needed618 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx617, i32 0, i32 17
  %206 = load i32, i32* %when_needed618, align 4
  %cmp619 = icmp eq i32 %206, 10
  br i1 %cmp619, label %if.then.621, label %if.end.699

if.then.621:                                      ; preds = %land.lhs.true.615, %land.lhs.true.606, %land.lhs.true.597, %land.lhs.true.588, %lor.lhs.false.577, %land.lhs.true.574
  %207 = load i32, i32* %in_p.addr, align 4
  %tobool622 = icmp ne i32 %207, 0
  br i1 %tobool622, label %if.then.623, label %if.end.627

if.then.623:                                      ; preds = %if.then.621
  %208 = load i32, i32* %t_mode, align 4
  %209 = load i32, i32* %t_reload, align 4
  %idxprom624 = sext i32 %209 to i64
  %arrayidx625 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom624
  %inmode626 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx625, i32 0, i32 3
  store i32 %208, i32* %inmode626, align 4
  br label %if.end.627

if.end.627:                                       ; preds = %if.then.623, %if.then.621
  %210 = load i32, i32* %in_p.addr, align 4
  %tobool628 = icmp ne i32 %210, 0
  br i1 %tobool628, label %if.end.633, label %if.then.629

if.then.629:                                      ; preds = %if.end.627
  %211 = load i32, i32* %t_mode, align 4
  %212 = load i32, i32* %t_reload, align 4
  %idxprom630 = sext i32 %212 to i64
  %arrayidx631 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom630
  %outmode632 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx631, i32 0, i32 4
  store i32 %211, i32* %outmode632, align 4
  br label %if.end.633

if.end.633:                                       ; preds = %if.then.629, %if.end.627
  %213 = load i32, i32* %t_class, align 4
  %214 = load i32, i32* %t_reload, align 4
  %idxprom634 = sext i32 %214 to i64
  %arrayidx635 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom634
  %class636 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx635, i32 0, i32 2
  %215 = load i32, i32* %class636, align 4
  %call637 = call i32 @reg_class_subset_p(i32 %213, i32 %215)
  %tobool638 = icmp ne i32 %call637, 0
  br i1 %tobool638, label %if.then.639, label %if.end.643

if.then.639:                                      ; preds = %if.end.633
  %216 = load i32, i32* %t_class, align 4
  %217 = load i32, i32* %t_reload, align 4
  %idxprom640 = sext i32 %217 to i64
  %arrayidx641 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom640
  %class642 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx641, i32 0, i32 2
  store i32 %216, i32* %class642, align 4
  br label %if.end.643

if.end.643:                                       ; preds = %if.then.639, %if.end.633
  %218 = load i32, i32* %t_reload, align 4
  %idxprom644 = sext i32 %218 to i64
  %arrayidx645 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom644
  %opnum646 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx645, i32 0, i32 12
  %219 = load i32, i32* %opnum646, align 4
  %220 = load i32, i32* %opnum.addr, align 4
  %cmp647 = icmp slt i32 %219, %220
  br i1 %cmp647, label %cond.true.649, label %cond.false.653

cond.true.649:                                    ; preds = %if.end.643
  %221 = load i32, i32* %t_reload, align 4
  %idxprom650 = sext i32 %221 to i64
  %arrayidx651 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom650
  %opnum652 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx651, i32 0, i32 12
  %222 = load i32, i32* %opnum652, align 4
  br label %cond.end.654

cond.false.653:                                   ; preds = %if.end.643
  %223 = load i32, i32* %opnum.addr, align 4
  br label %cond.end.654

cond.end.654:                                     ; preds = %cond.false.653, %cond.true.649
  %cond655 = phi i32 [ %222, %cond.true.649 ], [ %223, %cond.false.653 ]
  %224 = load i32, i32* %t_reload, align 4
  %idxprom656 = sext i32 %224 to i64
  %arrayidx657 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom656
  %opnum658 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx657, i32 0, i32 12
  store i32 %cond655, i32* %opnum658, align 4
  %225 = load i32, i32* %optional.addr, align 4
  %226 = load i32, i32* %t_reload, align 4
  %idxprom659 = sext i32 %226 to i64
  %arrayidx660 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom659
  %optional661 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx660, i32 0, i32 18
  %bf.load662 = load i8, i8* %optional661, align 8
  %bf.clear663 = and i8 %bf.load662, 1
  %bf.cast664 = zext i8 %bf.clear663 to i32
  %and665 = and i32 %bf.cast664, %225
  %227 = trunc i32 %and665 to i8
  %bf.load666 = load i8, i8* %optional661, align 8
  %bf.value = and i8 %227, 1
  %bf.clear667 = and i8 %bf.load666, -2
  %bf.set = or i8 %bf.clear667, %bf.value
  store i8 %bf.set, i8* %optional661, align 8
  %bf.result.cast = zext i8 %bf.value to i32
  %228 = load i32, i32* %t_reload, align 4
  %idxprom668 = sext i32 %228 to i64
  %arrayidx669 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom668
  %secondary_p670 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx669, i32 0, i32 18
  %bf.load671 = load i8, i8* %secondary_p670, align 8
  %bf.clear672 = and i8 %bf.load671, -5
  %bf.set673 = or i8 %bf.clear672, 4
  store i8 %bf.set673, i8* %secondary_p670, align 8
  %229 = load i32, i32* %secondary_type, align 4
  %230 = load i32, i32* %t_reload, align 4
  %idxprom674 = sext i32 %230 to i64
  %arrayidx675 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom674
  %when_needed676 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx675, i32 0, i32 17
  %231 = load i32, i32* %when_needed676, align 4
  %cmp677 = icmp ne i32 %229, %231
  br i1 %cmp677, label %if.then.694, label %lor.lhs.false.679

lor.lhs.false.679:                                ; preds = %cond.end.654
  %232 = load i32, i32* %opnum.addr, align 4
  %233 = load i32, i32* %t_reload, align 4
  %idxprom680 = sext i32 %233 to i64
  %arrayidx681 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom680
  %opnum682 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx681, i32 0, i32 12
  %234 = load i32, i32* %opnum682, align 4
  %cmp683 = icmp eq i32 %232, %234
  br i1 %cmp683, label %if.end.698, label %lor.lhs.false.685

lor.lhs.false.685:                                ; preds = %lor.lhs.false.679
  %235 = load i32, i32* %secondary_type, align 4
  %cmp686 = icmp eq i32 %235, 0
  br i1 %cmp686, label %if.end.698, label %lor.lhs.false.688

lor.lhs.false.688:                                ; preds = %lor.lhs.false.685
  %236 = load i32, i32* %secondary_type, align 4
  %cmp689 = icmp eq i32 %236, 7
  br i1 %cmp689, label %if.end.698, label %lor.lhs.false.691

lor.lhs.false.691:                                ; preds = %lor.lhs.false.688
  %237 = load i32, i32* %secondary_type, align 4
  %cmp692 = icmp eq i32 %237, 10
  br i1 %cmp692, label %if.end.698, label %if.then.694

if.then.694:                                      ; preds = %lor.lhs.false.691, %cond.end.654
  %238 = load i32, i32* %t_reload, align 4
  %idxprom695 = sext i32 %238 to i64
  %arrayidx696 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom695
  %when_needed697 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx696, i32 0, i32 17
  store i32 9, i32* %when_needed697, align 4
  br label %if.end.698

if.end.698:                                       ; preds = %if.then.694, %lor.lhs.false.691, %lor.lhs.false.688, %lor.lhs.false.685, %lor.lhs.false.679
  br label %if.end.699

if.end.699:                                       ; preds = %if.end.698, %land.lhs.true.615, %lor.lhs.false.612, %lor.lhs.false.573, %land.lhs.true.563, %lor.lhs.false.561, %land.lhs.true.549, %lor.lhs.false.547, %lor.lhs.false.534, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.699
  %239 = load i32, i32* %t_reload, align 4
  %inc = add nsw i32 %239, 1
  store i32 %inc, i32* %t_reload, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %240 = load i32, i32* %t_reload, align 4
  %241 = load i32, i32* @n_reloads, align 4
  %cmp700 = icmp eq i32 %240, %241
  br i1 %cmp700, label %if.then.702, label %if.end.771

if.then.702:                                      ; preds = %for.end
  %242 = load i32, i32* %t_reload, align 4
  %idxprom703 = sext i32 %242 to i64
  %arrayidx704 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom703
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx704, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %out, align 8
  %243 = load i32, i32* %t_reload, align 4
  %idxprom705 = sext i32 %243 to i64
  %arrayidx706 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom705
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx706, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in, align 8
  %244 = load i32, i32* %t_class, align 4
  %245 = load i32, i32* %t_reload, align 4
  %idxprom707 = sext i32 %245 to i64
  %arrayidx708 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom707
  %class709 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx708, i32 0, i32 2
  store i32 %244, i32* %class709, align 4
  %246 = load i32, i32* %in_p.addr, align 4
  %tobool710 = icmp ne i32 %246, 0
  br i1 %tobool710, label %cond.true.711, label %cond.false.712

cond.true.711:                                    ; preds = %if.then.702
  %247 = load i32, i32* %t_mode, align 4
  br label %cond.end.713

cond.false.712:                                   ; preds = %if.then.702
  br label %cond.end.713

cond.end.713:                                     ; preds = %cond.false.712, %cond.true.711
  %cond714 = phi i32 [ %247, %cond.true.711 ], [ 0, %cond.false.712 ]
  %248 = load i32, i32* %t_reload, align 4
  %idxprom715 = sext i32 %248 to i64
  %arrayidx716 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom715
  %inmode717 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx716, i32 0, i32 3
  store i32 %cond714, i32* %inmode717, align 4
  %249 = load i32, i32* %in_p.addr, align 4
  %tobool718 = icmp ne i32 %249, 0
  br i1 %tobool718, label %cond.false.720, label %cond.true.719

cond.true.719:                                    ; preds = %cond.end.713
  %250 = load i32, i32* %t_mode, align 4
  br label %cond.end.721

cond.false.720:                                   ; preds = %cond.end.713
  br label %cond.end.721

cond.end.721:                                     ; preds = %cond.false.720, %cond.true.719
  %cond722 = phi i32 [ %250, %cond.true.719 ], [ 0, %cond.false.720 ]
  %251 = load i32, i32* %t_reload, align 4
  %idxprom723 = sext i32 %251 to i64
  %arrayidx724 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom723
  %outmode725 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx724, i32 0, i32 4
  store i32 %cond722, i32* %outmode725, align 4
  %252 = load i32, i32* %t_reload, align 4
  %idxprom726 = sext i32 %252 to i64
  %arrayidx727 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom726
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx727, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx, align 8
  %253 = load i32, i32* %optional.addr, align 4
  %254 = load i32, i32* %t_reload, align 4
  %idxprom728 = sext i32 %254 to i64
  %arrayidx729 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom728
  %optional730 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx729, i32 0, i32 18
  %255 = trunc i32 %253 to i8
  %bf.load731 = load i8, i8* %optional730, align 8
  %bf.value732 = and i8 %255, 1
  %bf.clear733 = and i8 %bf.load731, -2
  %bf.set734 = or i8 %bf.clear733, %bf.value732
  store i8 %bf.set734, i8* %optional730, align 8
  %bf.result.cast735 = zext i8 %bf.value732 to i32
  %256 = load i32, i32* %t_reload, align 4
  %idxprom736 = sext i32 %256 to i64
  %arrayidx737 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom736
  %inc738 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx737, i32 0, i32 7
  store i32 0, i32* %inc738, align 4
  %257 = load i32, i32* %t_reload, align 4
  %idxprom739 = sext i32 %257 to i64
  %arrayidx740 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom739
  %nocombine = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx740, i32 0, i32 18
  %bf.load741 = load i8, i8* %nocombine, align 8
  %bf.clear742 = and i8 %bf.load741, -3
  %bf.set743 = or i8 %bf.clear742, 2
  store i8 %bf.set743, i8* %nocombine, align 8
  %258 = load i32, i32* %t_reload, align 4
  %idxprom744 = sext i32 %258 to i64
  %arrayidx745 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom744
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx745, i32 0, i32 8
  store %struct.rtx_def* null, %struct.rtx_def** %in_reg, align 8
  %259 = load i32, i32* %t_reload, align 4
  %idxprom746 = sext i32 %259 to i64
  %arrayidx747 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom746
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx747, i32 0, i32 9
  store %struct.rtx_def* null, %struct.rtx_def** %out_reg, align 8
  %260 = load i32, i32* %opnum.addr, align 4
  %261 = load i32, i32* %t_reload, align 4
  %idxprom748 = sext i32 %261 to i64
  %arrayidx749 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom748
  %opnum750 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx749, i32 0, i32 12
  store i32 %260, i32* %opnum750, align 4
  %262 = load i32, i32* %secondary_type, align 4
  %263 = load i32, i32* %t_reload, align 4
  %idxprom751 = sext i32 %263 to i64
  %arrayidx752 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom751
  %when_needed753 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx752, i32 0, i32 17
  store i32 %262, i32* %when_needed753, align 4
  %264 = load i32, i32* %t_reload, align 4
  %idxprom754 = sext i32 %264 to i64
  %arrayidx755 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom754
  %secondary_in_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx755, i32 0, i32 13
  store i32 -1, i32* %secondary_in_reload, align 4
  %265 = load i32, i32* %t_reload, align 4
  %idxprom756 = sext i32 %265 to i64
  %arrayidx757 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom756
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx757, i32 0, i32 14
  store i32 -1, i32* %secondary_out_reload, align 4
  %266 = load i32, i32* %t_reload, align 4
  %idxprom758 = sext i32 %266 to i64
  %arrayidx759 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom758
  %secondary_in_icode760 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx759, i32 0, i32 15
  store i32 1317, i32* %secondary_in_icode760, align 4
  %267 = load i32, i32* %t_reload, align 4
  %idxprom761 = sext i32 %267 to i64
  %arrayidx762 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom761
  %secondary_out_icode763 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx762, i32 0, i32 16
  store i32 1317, i32* %secondary_out_icode763, align 4
  %268 = load i32, i32* %t_reload, align 4
  %idxprom764 = sext i32 %268 to i64
  %arrayidx765 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom764
  %secondary_p766 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx765, i32 0, i32 18
  %bf.load767 = load i8, i8* %secondary_p766, align 8
  %bf.clear768 = and i8 %bf.load767, -5
  %bf.set769 = or i8 %bf.clear768, 4
  store i8 %bf.set769, i8* %secondary_p766, align 8
  %269 = load i32, i32* @n_reloads, align 4
  %inc770 = add nsw i32 %269, 1
  store i32 %inc770, i32* @n_reloads, align 4
  br label %if.end.771

if.end.771:                                       ; preds = %cond.end.721, %for.end
  br label %if.end.772

if.end.772:                                       ; preds = %if.end.771, %if.end.515
  store i32 0, i32* %s_reload, align 4
  br label %for.cond.773

for.cond.773:                                     ; preds = %for.inc.981, %if.end.772
  %270 = load i32, i32* %s_reload, align 4
  %271 = load i32, i32* @n_reloads, align 4
  %cmp774 = icmp slt i32 %270, %271
  br i1 %cmp774, label %for.body.776, label %for.end.983

for.body.776:                                     ; preds = %for.cond.773
  %272 = load i32, i32* %s_reload, align 4
  %idxprom777 = sext i32 %272 to i64
  %arrayidx778 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom777
  %secondary_p779 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx778, i32 0, i32 18
  %bf.load780 = load i8, i8* %secondary_p779, align 8
  %bf.lshr781 = lshr i8 %bf.load780, 2
  %bf.clear782 = and i8 %bf.lshr781, 1
  %bf.cast783 = zext i8 %bf.clear782 to i32
  %tobool784 = icmp ne i32 %bf.cast783, 0
  br i1 %tobool784, label %land.lhs.true.785, label %if.end.980

land.lhs.true.785:                                ; preds = %for.body.776
  %273 = load i32, i32* %class, align 4
  %274 = load i32, i32* %s_reload, align 4
  %idxprom786 = sext i32 %274 to i64
  %arrayidx787 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom786
  %class788 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx787, i32 0, i32 2
  %275 = load i32, i32* %class788, align 4
  %call789 = call i32 @reg_class_subset_p(i32 %273, i32 %275)
  %tobool790 = icmp ne i32 %call789, 0
  br i1 %tobool790, label %land.lhs.true.797, label %lor.lhs.false.791

lor.lhs.false.791:                                ; preds = %land.lhs.true.785
  %276 = load i32, i32* %s_reload, align 4
  %idxprom792 = sext i32 %276 to i64
  %arrayidx793 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom792
  %class794 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx793, i32 0, i32 2
  %277 = load i32, i32* %class794, align 4
  %278 = load i32, i32* %class, align 4
  %call795 = call i32 @reg_class_subset_p(i32 %277, i32 %278)
  %tobool796 = icmp ne i32 %call795, 0
  br i1 %tobool796, label %land.lhs.true.797, label %if.end.980

land.lhs.true.797:                                ; preds = %lor.lhs.false.791, %land.lhs.true.785
  %279 = load i32, i32* %in_p.addr, align 4
  %tobool798 = icmp ne i32 %279, 0
  br i1 %tobool798, label %land.lhs.true.799, label %lor.lhs.false.805

land.lhs.true.799:                                ; preds = %land.lhs.true.797
  %280 = load i32, i32* %s_reload, align 4
  %idxprom800 = sext i32 %280 to i64
  %arrayidx801 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom800
  %inmode802 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx801, i32 0, i32 3
  %281 = load i32, i32* %inmode802, align 4
  %282 = load i32, i32* %mode, align 4
  %cmp803 = icmp eq i32 %281, %282
  br i1 %cmp803, label %land.lhs.true.813, label %lor.lhs.false.805

lor.lhs.false.805:                                ; preds = %land.lhs.true.799, %land.lhs.true.797
  %283 = load i32, i32* %in_p.addr, align 4
  %tobool806 = icmp ne i32 %283, 0
  br i1 %tobool806, label %if.end.980, label %land.lhs.true.807

land.lhs.true.807:                                ; preds = %lor.lhs.false.805
  %284 = load i32, i32* %s_reload, align 4
  %idxprom808 = sext i32 %284 to i64
  %arrayidx809 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom808
  %outmode810 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx809, i32 0, i32 4
  %285 = load i32, i32* %outmode810, align 4
  %286 = load i32, i32* %mode, align 4
  %cmp811 = icmp eq i32 %285, %286
  br i1 %cmp811, label %land.lhs.true.813, label %if.end.980

land.lhs.true.813:                                ; preds = %land.lhs.true.807, %land.lhs.true.799
  %287 = load i32, i32* %in_p.addr, align 4
  %tobool814 = icmp ne i32 %287, 0
  br i1 %tobool814, label %land.lhs.true.815, label %lor.lhs.false.821

land.lhs.true.815:                                ; preds = %land.lhs.true.813
  %288 = load i32, i32* %s_reload, align 4
  %idxprom816 = sext i32 %288 to i64
  %arrayidx817 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom816
  %secondary_in_reload818 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx817, i32 0, i32 13
  %289 = load i32, i32* %secondary_in_reload818, align 4
  %290 = load i32, i32* %t_reload, align 4
  %cmp819 = icmp eq i32 %289, %290
  br i1 %cmp819, label %land.lhs.true.829, label %lor.lhs.false.821

lor.lhs.false.821:                                ; preds = %land.lhs.true.815, %land.lhs.true.813
  %291 = load i32, i32* %in_p.addr, align 4
  %tobool822 = icmp ne i32 %291, 0
  br i1 %tobool822, label %if.end.980, label %land.lhs.true.823

land.lhs.true.823:                                ; preds = %lor.lhs.false.821
  %292 = load i32, i32* %s_reload, align 4
  %idxprom824 = sext i32 %292 to i64
  %arrayidx825 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom824
  %secondary_out_reload826 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx825, i32 0, i32 14
  %293 = load i32, i32* %secondary_out_reload826, align 4
  %294 = load i32, i32* %t_reload, align 4
  %cmp827 = icmp eq i32 %293, %294
  br i1 %cmp827, label %land.lhs.true.829, label %if.end.980

land.lhs.true.829:                                ; preds = %land.lhs.true.823, %land.lhs.true.815
  %295 = load i32, i32* %in_p.addr, align 4
  %tobool830 = icmp ne i32 %295, 0
  br i1 %tobool830, label %land.lhs.true.831, label %lor.lhs.false.837

land.lhs.true.831:                                ; preds = %land.lhs.true.829
  %296 = load i32, i32* %s_reload, align 4
  %idxprom832 = sext i32 %296 to i64
  %arrayidx833 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom832
  %secondary_in_icode834 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx833, i32 0, i32 15
  %297 = load i32, i32* %secondary_in_icode834, align 4
  %298 = load i32, i32* %t_icode, align 4
  %cmp835 = icmp eq i32 %297, %298
  br i1 %cmp835, label %land.lhs.true.845, label %lor.lhs.false.837

lor.lhs.false.837:                                ; preds = %land.lhs.true.831, %land.lhs.true.829
  %299 = load i32, i32* %in_p.addr, align 4
  %tobool838 = icmp ne i32 %299, 0
  br i1 %tobool838, label %if.end.980, label %land.lhs.true.839

land.lhs.true.839:                                ; preds = %lor.lhs.false.837
  %300 = load i32, i32* %s_reload, align 4
  %idxprom840 = sext i32 %300 to i64
  %arrayidx841 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom840
  %secondary_out_icode842 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx841, i32 0, i32 16
  %301 = load i32, i32* %secondary_out_icode842, align 4
  %302 = load i32, i32* %t_icode, align 4
  %cmp843 = icmp eq i32 %301, %302
  br i1 %cmp843, label %land.lhs.true.845, label %if.end.980

land.lhs.true.845:                                ; preds = %land.lhs.true.839, %land.lhs.true.831
  %303 = load i32, i32* %class, align 4
  %idxprom846 = sext i32 %303 to i64
  %arrayidx847 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom846
  %304 = load i32, i32* %arrayidx847, align 4
  %cmp848 = icmp eq i32 %304, 1
  br i1 %cmp848, label %land.lhs.true.851, label %lor.lhs.false.850

lor.lhs.false.850:                                ; preds = %land.lhs.true.845
  br i1 true, label %land.lhs.true.851, label %if.end.980

land.lhs.true.851:                                ; preds = %lor.lhs.false.850, %land.lhs.true.845
  %305 = load i32, i32* %secondary_type, align 4
  %cmp852 = icmp eq i32 %305, 9
  br i1 %cmp852, label %if.then.899, label %lor.lhs.false.854

lor.lhs.false.854:                                ; preds = %land.lhs.true.851
  %306 = load i32, i32* %s_reload, align 4
  %idxprom855 = sext i32 %306 to i64
  %arrayidx856 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom855
  %when_needed857 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx856, i32 0, i32 17
  %307 = load i32, i32* %when_needed857, align 4
  %cmp858 = icmp eq i32 %307, 9
  br i1 %cmp858, label %if.then.899, label %lor.lhs.false.860

lor.lhs.false.860:                                ; preds = %lor.lhs.false.854
  %308 = load i32, i32* %secondary_type, align 4
  %309 = load i32, i32* %s_reload, align 4
  %idxprom861 = sext i32 %309 to i64
  %arrayidx862 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom861
  %when_needed863 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx862, i32 0, i32 17
  %310 = load i32, i32* %when_needed863, align 4
  %cmp864 = icmp eq i32 %308, %310
  br i1 %cmp864, label %land.lhs.true.866, label %lor.lhs.false.872

land.lhs.true.866:                                ; preds = %lor.lhs.false.860
  %311 = load i32, i32* %opnum.addr, align 4
  %312 = load i32, i32* %s_reload, align 4
  %idxprom867 = sext i32 %312 to i64
  %arrayidx868 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom867
  %opnum869 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx868, i32 0, i32 12
  %313 = load i32, i32* %opnum869, align 4
  %cmp870 = icmp eq i32 %311, %313
  br i1 %cmp870, label %if.then.899, label %lor.lhs.false.872

lor.lhs.false.872:                                ; preds = %land.lhs.true.866, %lor.lhs.false.860
  %314 = load i32, i32* %secondary_type, align 4
  %cmp873 = icmp eq i32 %314, 0
  br i1 %cmp873, label %land.lhs.true.875, label %lor.lhs.false.881

land.lhs.true.875:                                ; preds = %lor.lhs.false.872
  %315 = load i32, i32* %s_reload, align 4
  %idxprom876 = sext i32 %315 to i64
  %arrayidx877 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom876
  %when_needed878 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx877, i32 0, i32 17
  %316 = load i32, i32* %when_needed878, align 4
  %cmp879 = icmp eq i32 %316, 0
  br i1 %cmp879, label %if.then.899, label %lor.lhs.false.881

lor.lhs.false.881:                                ; preds = %land.lhs.true.875, %lor.lhs.false.872
  %317 = load i32, i32* %secondary_type, align 4
  %cmp882 = icmp eq i32 %317, 7
  br i1 %cmp882, label %land.lhs.true.884, label %lor.lhs.false.890

land.lhs.true.884:                                ; preds = %lor.lhs.false.881
  %318 = load i32, i32* %s_reload, align 4
  %idxprom885 = sext i32 %318 to i64
  %arrayidx886 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom885
  %when_needed887 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx886, i32 0, i32 17
  %319 = load i32, i32* %when_needed887, align 4
  %cmp888 = icmp eq i32 %319, 7
  br i1 %cmp888, label %if.then.899, label %lor.lhs.false.890

lor.lhs.false.890:                                ; preds = %land.lhs.true.884, %lor.lhs.false.881
  %320 = load i32, i32* %secondary_type, align 4
  %cmp891 = icmp eq i32 %320, 10
  br i1 %cmp891, label %land.lhs.true.893, label %if.end.980

land.lhs.true.893:                                ; preds = %lor.lhs.false.890
  %321 = load i32, i32* %s_reload, align 4
  %idxprom894 = sext i32 %321 to i64
  %arrayidx895 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom894
  %when_needed896 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx895, i32 0, i32 17
  %322 = load i32, i32* %when_needed896, align 4
  %cmp897 = icmp eq i32 %322, 10
  br i1 %cmp897, label %if.then.899, label %if.end.980

if.then.899:                                      ; preds = %land.lhs.true.893, %land.lhs.true.884, %land.lhs.true.875, %land.lhs.true.866, %lor.lhs.false.854, %land.lhs.true.851
  %323 = load i32, i32* %in_p.addr, align 4
  %tobool900 = icmp ne i32 %323, 0
  br i1 %tobool900, label %if.then.901, label %if.end.905

if.then.901:                                      ; preds = %if.then.899
  %324 = load i32, i32* %mode, align 4
  %325 = load i32, i32* %s_reload, align 4
  %idxprom902 = sext i32 %325 to i64
  %arrayidx903 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom902
  %inmode904 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx903, i32 0, i32 3
  store i32 %324, i32* %inmode904, align 4
  br label %if.end.905

if.end.905:                                       ; preds = %if.then.901, %if.then.899
  %326 = load i32, i32* %in_p.addr, align 4
  %tobool906 = icmp ne i32 %326, 0
  br i1 %tobool906, label %if.end.911, label %if.then.907

if.then.907:                                      ; preds = %if.end.905
  %327 = load i32, i32* %mode, align 4
  %328 = load i32, i32* %s_reload, align 4
  %idxprom908 = sext i32 %328 to i64
  %arrayidx909 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom908
  %outmode910 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx909, i32 0, i32 4
  store i32 %327, i32* %outmode910, align 4
  br label %if.end.911

if.end.911:                                       ; preds = %if.then.907, %if.end.905
  %329 = load i32, i32* %class, align 4
  %330 = load i32, i32* %s_reload, align 4
  %idxprom912 = sext i32 %330 to i64
  %arrayidx913 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom912
  %class914 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx913, i32 0, i32 2
  %331 = load i32, i32* %class914, align 4
  %call915 = call i32 @reg_class_subset_p(i32 %329, i32 %331)
  %tobool916 = icmp ne i32 %call915, 0
  br i1 %tobool916, label %if.then.917, label %if.end.921

if.then.917:                                      ; preds = %if.end.911
  %332 = load i32, i32* %class, align 4
  %333 = load i32, i32* %s_reload, align 4
  %idxprom918 = sext i32 %333 to i64
  %arrayidx919 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom918
  %class920 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx919, i32 0, i32 2
  store i32 %332, i32* %class920, align 4
  br label %if.end.921

if.end.921:                                       ; preds = %if.then.917, %if.end.911
  %334 = load i32, i32* %s_reload, align 4
  %idxprom922 = sext i32 %334 to i64
  %arrayidx923 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom922
  %opnum924 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx923, i32 0, i32 12
  %335 = load i32, i32* %opnum924, align 4
  %336 = load i32, i32* %opnum.addr, align 4
  %cmp925 = icmp slt i32 %335, %336
  br i1 %cmp925, label %cond.true.927, label %cond.false.931

cond.true.927:                                    ; preds = %if.end.921
  %337 = load i32, i32* %s_reload, align 4
  %idxprom928 = sext i32 %337 to i64
  %arrayidx929 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom928
  %opnum930 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx929, i32 0, i32 12
  %338 = load i32, i32* %opnum930, align 4
  br label %cond.end.932

cond.false.931:                                   ; preds = %if.end.921
  %339 = load i32, i32* %opnum.addr, align 4
  br label %cond.end.932

cond.end.932:                                     ; preds = %cond.false.931, %cond.true.927
  %cond933 = phi i32 [ %338, %cond.true.927 ], [ %339, %cond.false.931 ]
  %340 = load i32, i32* %s_reload, align 4
  %idxprom934 = sext i32 %340 to i64
  %arrayidx935 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom934
  %opnum936 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx935, i32 0, i32 12
  store i32 %cond933, i32* %opnum936, align 4
  %341 = load i32, i32* %optional.addr, align 4
  %342 = load i32, i32* %s_reload, align 4
  %idxprom937 = sext i32 %342 to i64
  %arrayidx938 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom937
  %optional939 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx938, i32 0, i32 18
  %bf.load940 = load i8, i8* %optional939, align 8
  %bf.clear941 = and i8 %bf.load940, 1
  %bf.cast942 = zext i8 %bf.clear941 to i32
  %and943 = and i32 %bf.cast942, %341
  %343 = trunc i32 %and943 to i8
  %bf.load944 = load i8, i8* %optional939, align 8
  %bf.value945 = and i8 %343, 1
  %bf.clear946 = and i8 %bf.load944, -2
  %bf.set947 = or i8 %bf.clear946, %bf.value945
  store i8 %bf.set947, i8* %optional939, align 8
  %bf.result.cast948 = zext i8 %bf.value945 to i32
  %344 = load i32, i32* %s_reload, align 4
  %idxprom949 = sext i32 %344 to i64
  %arrayidx950 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom949
  %secondary_p951 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx950, i32 0, i32 18
  %bf.load952 = load i8, i8* %secondary_p951, align 8
  %bf.clear953 = and i8 %bf.load952, -5
  %bf.set954 = or i8 %bf.clear953, 4
  store i8 %bf.set954, i8* %secondary_p951, align 8
  %345 = load i32, i32* %secondary_type, align 4
  %346 = load i32, i32* %s_reload, align 4
  %idxprom955 = sext i32 %346 to i64
  %arrayidx956 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom955
  %when_needed957 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx956, i32 0, i32 17
  %347 = load i32, i32* %when_needed957, align 4
  %cmp958 = icmp ne i32 %345, %347
  br i1 %cmp958, label %if.then.975, label %lor.lhs.false.960

lor.lhs.false.960:                                ; preds = %cond.end.932
  %348 = load i32, i32* %opnum.addr, align 4
  %349 = load i32, i32* %s_reload, align 4
  %idxprom961 = sext i32 %349 to i64
  %arrayidx962 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom961
  %opnum963 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx962, i32 0, i32 12
  %350 = load i32, i32* %opnum963, align 4
  %cmp964 = icmp eq i32 %348, %350
  br i1 %cmp964, label %if.end.979, label %lor.lhs.false.966

lor.lhs.false.966:                                ; preds = %lor.lhs.false.960
  %351 = load i32, i32* %secondary_type, align 4
  %cmp967 = icmp eq i32 %351, 0
  br i1 %cmp967, label %if.end.979, label %lor.lhs.false.969

lor.lhs.false.969:                                ; preds = %lor.lhs.false.966
  %352 = load i32, i32* %secondary_type, align 4
  %cmp970 = icmp eq i32 %352, 7
  br i1 %cmp970, label %if.end.979, label %lor.lhs.false.972

lor.lhs.false.972:                                ; preds = %lor.lhs.false.969
  %353 = load i32, i32* %secondary_type, align 4
  %cmp973 = icmp eq i32 %353, 10
  br i1 %cmp973, label %if.end.979, label %if.then.975

if.then.975:                                      ; preds = %lor.lhs.false.972, %cond.end.932
  %354 = load i32, i32* %s_reload, align 4
  %idxprom976 = sext i32 %354 to i64
  %arrayidx977 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom976
  %when_needed978 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx977, i32 0, i32 17
  store i32 9, i32* %when_needed978, align 4
  br label %if.end.979

if.end.979:                                       ; preds = %if.then.975, %lor.lhs.false.972, %lor.lhs.false.969, %lor.lhs.false.966, %lor.lhs.false.960
  br label %if.end.980

if.end.980:                                       ; preds = %if.end.979, %land.lhs.true.893, %lor.lhs.false.890, %lor.lhs.false.850, %land.lhs.true.839, %lor.lhs.false.837, %land.lhs.true.823, %lor.lhs.false.821, %land.lhs.true.807, %lor.lhs.false.805, %lor.lhs.false.791, %for.body.776
  br label %for.inc.981

for.inc.981:                                      ; preds = %if.end.980
  %355 = load i32, i32* %s_reload, align 4
  %inc982 = add nsw i32 %355, 1
  store i32 %inc982, i32* %s_reload, align 4
  br label %for.cond.773

for.end.983:                                      ; preds = %for.cond.773
  %356 = load i32, i32* %s_reload, align 4
  %357 = load i32, i32* @n_reloads, align 4
  %cmp984 = icmp eq i32 %356, %357
  br i1 %cmp984, label %if.then.986, label %if.end.1103

if.then.986:                                      ; preds = %for.end.983
  %358 = load i32, i32* %in_p.addr, align 4
  %tobool987 = icmp ne i32 %358, 0
  br i1 %tobool987, label %land.lhs.true.988, label %if.end.996

land.lhs.true.988:                                ; preds = %if.then.986
  %359 = load i32, i32* %icode, align 4
  %cmp989 = icmp eq i32 %359, 1317
  br i1 %cmp989, label %land.lhs.true.991, label %if.end.996

land.lhs.true.991:                                ; preds = %land.lhs.true.988
  %360 = load i32, i32* %class, align 4
  %361 = load i32, i32* %reload_class.addr, align 4
  %362 = load i32, i32* %mode, align 4
  %call992 = call i32 @ix86_secondary_memory_needed(i32 %360, i32 %361, i32 %362, i32 1)
  %tobool993 = icmp ne i32 %call992, 0
  br i1 %tobool993, label %if.then.994, label %if.end.996

if.then.994:                                      ; preds = %land.lhs.true.991
  %363 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %364 = load i32, i32* %reload_mode.addr, align 4
  %365 = load i32, i32* %opnum.addr, align 4
  %366 = load i32, i32* %type.addr, align 4
  %call995 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %363, i32 %364, i32 %365, i32 %366)
  %367 = load i32, i32* @n_reloads, align 4
  store i32 %367, i32* %s_reload, align 4
  br label %if.end.996

if.end.996:                                       ; preds = %if.then.994, %land.lhs.true.991, %land.lhs.true.988, %if.then.986
  %368 = load i32, i32* %s_reload, align 4
  %idxprom997 = sext i32 %368 to i64
  %arrayidx998 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom997
  %out999 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx998, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %out999, align 8
  %369 = load i32, i32* %s_reload, align 4
  %idxprom1000 = sext i32 %369 to i64
  %arrayidx1001 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1000
  %in1002 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1001, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in1002, align 8
  %370 = load i32, i32* %class, align 4
  %371 = load i32, i32* %s_reload, align 4
  %idxprom1003 = sext i32 %371 to i64
  %arrayidx1004 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1003
  %class1005 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1004, i32 0, i32 2
  store i32 %370, i32* %class1005, align 4
  %372 = load i32, i32* %in_p.addr, align 4
  %tobool1006 = icmp ne i32 %372, 0
  br i1 %tobool1006, label %cond.true.1007, label %cond.false.1008

cond.true.1007:                                   ; preds = %if.end.996
  %373 = load i32, i32* %mode, align 4
  br label %cond.end.1009

cond.false.1008:                                  ; preds = %if.end.996
  br label %cond.end.1009

cond.end.1009:                                    ; preds = %cond.false.1008, %cond.true.1007
  %cond1010 = phi i32 [ %373, %cond.true.1007 ], [ 0, %cond.false.1008 ]
  %374 = load i32, i32* %s_reload, align 4
  %idxprom1011 = sext i32 %374 to i64
  %arrayidx1012 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1011
  %inmode1013 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1012, i32 0, i32 3
  store i32 %cond1010, i32* %inmode1013, align 4
  %375 = load i32, i32* %in_p.addr, align 4
  %tobool1014 = icmp ne i32 %375, 0
  br i1 %tobool1014, label %cond.false.1016, label %cond.true.1015

cond.true.1015:                                   ; preds = %cond.end.1009
  %376 = load i32, i32* %mode, align 4
  br label %cond.end.1017

cond.false.1016:                                  ; preds = %cond.end.1009
  br label %cond.end.1017

cond.end.1017:                                    ; preds = %cond.false.1016, %cond.true.1015
  %cond1018 = phi i32 [ %376, %cond.true.1015 ], [ 0, %cond.false.1016 ]
  %377 = load i32, i32* %s_reload, align 4
  %idxprom1019 = sext i32 %377 to i64
  %arrayidx1020 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1019
  %outmode1021 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1020, i32 0, i32 4
  store i32 %cond1018, i32* %outmode1021, align 4
  %378 = load i32, i32* %s_reload, align 4
  %idxprom1022 = sext i32 %378 to i64
  %arrayidx1023 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1022
  %reg_rtx1024 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1023, i32 0, i32 11
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx1024, align 8
  %379 = load i32, i32* %optional.addr, align 4
  %380 = load i32, i32* %s_reload, align 4
  %idxprom1025 = sext i32 %380 to i64
  %arrayidx1026 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1025
  %optional1027 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1026, i32 0, i32 18
  %381 = trunc i32 %379 to i8
  %bf.load1028 = load i8, i8* %optional1027, align 8
  %bf.value1029 = and i8 %381, 1
  %bf.clear1030 = and i8 %bf.load1028, -2
  %bf.set1031 = or i8 %bf.clear1030, %bf.value1029
  store i8 %bf.set1031, i8* %optional1027, align 8
  %bf.result.cast1032 = zext i8 %bf.value1029 to i32
  %382 = load i32, i32* %s_reload, align 4
  %idxprom1033 = sext i32 %382 to i64
  %arrayidx1034 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1033
  %inc1035 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1034, i32 0, i32 7
  store i32 0, i32* %inc1035, align 4
  %383 = load i32, i32* %s_reload, align 4
  %idxprom1036 = sext i32 %383 to i64
  %arrayidx1037 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1036
  %nocombine1038 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1037, i32 0, i32 18
  %bf.load1039 = load i8, i8* %nocombine1038, align 8
  %bf.clear1040 = and i8 %bf.load1039, -3
  %bf.set1041 = or i8 %bf.clear1040, 2
  store i8 %bf.set1041, i8* %nocombine1038, align 8
  %384 = load i32, i32* %s_reload, align 4
  %idxprom1042 = sext i32 %384 to i64
  %arrayidx1043 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1042
  %in_reg1044 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1043, i32 0, i32 8
  store %struct.rtx_def* null, %struct.rtx_def** %in_reg1044, align 8
  %385 = load i32, i32* %s_reload, align 4
  %idxprom1045 = sext i32 %385 to i64
  %arrayidx1046 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1045
  %out_reg1047 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1046, i32 0, i32 9
  store %struct.rtx_def* null, %struct.rtx_def** %out_reg1047, align 8
  %386 = load i32, i32* %opnum.addr, align 4
  %387 = load i32, i32* %s_reload, align 4
  %idxprom1048 = sext i32 %387 to i64
  %arrayidx1049 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1048
  %opnum1050 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1049, i32 0, i32 12
  store i32 %386, i32* %opnum1050, align 4
  %388 = load i32, i32* %secondary_type, align 4
  %389 = load i32, i32* %s_reload, align 4
  %idxprom1051 = sext i32 %389 to i64
  %arrayidx1052 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1051
  %when_needed1053 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1052, i32 0, i32 17
  store i32 %388, i32* %when_needed1053, align 4
  %390 = load i32, i32* %in_p.addr, align 4
  %tobool1054 = icmp ne i32 %390, 0
  br i1 %tobool1054, label %cond.true.1055, label %cond.false.1056

cond.true.1055:                                   ; preds = %cond.end.1017
  %391 = load i32, i32* %t_reload, align 4
  br label %cond.end.1057

cond.false.1056:                                  ; preds = %cond.end.1017
  br label %cond.end.1057

cond.end.1057:                                    ; preds = %cond.false.1056, %cond.true.1055
  %cond1058 = phi i32 [ %391, %cond.true.1055 ], [ -1, %cond.false.1056 ]
  %392 = load i32, i32* %s_reload, align 4
  %idxprom1059 = sext i32 %392 to i64
  %arrayidx1060 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1059
  %secondary_in_reload1061 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1060, i32 0, i32 13
  store i32 %cond1058, i32* %secondary_in_reload1061, align 4
  %393 = load i32, i32* %in_p.addr, align 4
  %tobool1062 = icmp ne i32 %393, 0
  br i1 %tobool1062, label %cond.false.1064, label %cond.true.1063

cond.true.1063:                                   ; preds = %cond.end.1057
  %394 = load i32, i32* %t_reload, align 4
  br label %cond.end.1065

cond.false.1064:                                  ; preds = %cond.end.1057
  br label %cond.end.1065

cond.end.1065:                                    ; preds = %cond.false.1064, %cond.true.1063
  %cond1066 = phi i32 [ %394, %cond.true.1063 ], [ -1, %cond.false.1064 ]
  %395 = load i32, i32* %s_reload, align 4
  %idxprom1067 = sext i32 %395 to i64
  %arrayidx1068 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1067
  %secondary_out_reload1069 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1068, i32 0, i32 14
  store i32 %cond1066, i32* %secondary_out_reload1069, align 4
  %396 = load i32, i32* %in_p.addr, align 4
  %tobool1070 = icmp ne i32 %396, 0
  br i1 %tobool1070, label %cond.true.1071, label %cond.false.1072

cond.true.1071:                                   ; preds = %cond.end.1065
  %397 = load i32, i32* %t_icode, align 4
  br label %cond.end.1073

cond.false.1072:                                  ; preds = %cond.end.1065
  br label %cond.end.1073

cond.end.1073:                                    ; preds = %cond.false.1072, %cond.true.1071
  %cond1074 = phi i32 [ %397, %cond.true.1071 ], [ 1317, %cond.false.1072 ]
  %398 = load i32, i32* %s_reload, align 4
  %idxprom1075 = sext i32 %398 to i64
  %arrayidx1076 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1075
  %secondary_in_icode1077 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1076, i32 0, i32 15
  store i32 %cond1074, i32* %secondary_in_icode1077, align 4
  %399 = load i32, i32* %in_p.addr, align 4
  %tobool1078 = icmp ne i32 %399, 0
  br i1 %tobool1078, label %cond.false.1080, label %cond.true.1079

cond.true.1079:                                   ; preds = %cond.end.1073
  %400 = load i32, i32* %t_icode, align 4
  br label %cond.end.1081

cond.false.1080:                                  ; preds = %cond.end.1073
  br label %cond.end.1081

cond.end.1081:                                    ; preds = %cond.false.1080, %cond.true.1079
  %cond1082 = phi i32 [ %400, %cond.true.1079 ], [ 1317, %cond.false.1080 ]
  %401 = load i32, i32* %s_reload, align 4
  %idxprom1083 = sext i32 %401 to i64
  %arrayidx1084 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1083
  %secondary_out_icode1085 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1084, i32 0, i32 16
  store i32 %cond1082, i32* %secondary_out_icode1085, align 4
  %402 = load i32, i32* %s_reload, align 4
  %idxprom1086 = sext i32 %402 to i64
  %arrayidx1087 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1086
  %secondary_p1088 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1087, i32 0, i32 18
  %bf.load1089 = load i8, i8* %secondary_p1088, align 8
  %bf.clear1090 = and i8 %bf.load1089, -5
  %bf.set1091 = or i8 %bf.clear1090, 4
  store i8 %bf.set1091, i8* %secondary_p1088, align 8
  %403 = load i32, i32* @n_reloads, align 4
  %inc1092 = add nsw i32 %403, 1
  store i32 %inc1092, i32* @n_reloads, align 4
  %404 = load i32, i32* %in_p.addr, align 4
  %tobool1093 = icmp ne i32 %404, 0
  br i1 %tobool1093, label %if.end.1102, label %land.lhs.true.1094

land.lhs.true.1094:                               ; preds = %cond.end.1081
  %405 = load i32, i32* %icode, align 4
  %cmp1095 = icmp eq i32 %405, 1317
  br i1 %cmp1095, label %land.lhs.true.1097, label %if.end.1102

land.lhs.true.1097:                               ; preds = %land.lhs.true.1094
  %406 = load i32, i32* %reload_class.addr, align 4
  %407 = load i32, i32* %class, align 4
  %408 = load i32, i32* %mode, align 4
  %call1098 = call i32 @ix86_secondary_memory_needed(i32 %406, i32 %407, i32 %408, i32 1)
  %tobool1099 = icmp ne i32 %call1098, 0
  br i1 %tobool1099, label %if.then.1100, label %if.end.1102

if.then.1100:                                     ; preds = %land.lhs.true.1097
  %409 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %410 = load i32, i32* %mode, align 4
  %411 = load i32, i32* %opnum.addr, align 4
  %412 = load i32, i32* %type.addr, align 4
  %call1101 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %409, i32 %410, i32 %411, i32 %412)
  br label %if.end.1102

if.end.1102:                                      ; preds = %if.then.1100, %land.lhs.true.1097, %land.lhs.true.1094, %cond.end.1081
  br label %if.end.1103

if.end.1103:                                      ; preds = %if.end.1102, %for.end.983
  %413 = load i32, i32* %icode, align 4
  %414 = load i32*, i32** %picode.addr, align 8
  store i32 %413, i32* %414, align 4
  %415 = load i32, i32* %s_reload, align 4
  store i32 %415, i32* %retval
  br label %return

return:                                           ; preds = %if.end.1103, %if.then.68
  %416 = load i32, i32* %retval
  ret i32 %416
}

declare i32 @ix86_secondary_memory_needed(i32, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define i32 @remove_address_replacements(%struct.rtx_def* %in_rtx) #0 {
entry:
  %in_rtx.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %reload_flags = alloca [180 x i8], align 16
  %something_changed = alloca i32, align 4
  store %struct.rtx_def* %in_rtx, %struct.rtx_def** %in_rtx.addr, align 8
  store i32 0, i32* %something_changed, align 4
  %0 = bitcast [180 x i8]* %reload_flags to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 180, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @n_replacements, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx, i32 0, i32 0
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in_rtx.addr, align 8
  %call = call i32 @loc_mentioned_in_p(%struct.rtx_def** %4, %struct.rtx_def* %5)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom1
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx2, i32 0, i32 2
  %7 = load i32, i32* %what, align 4
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds [180 x i8], [180 x i8]* %reload_flags, i32 0, i64 %idxprom3
  %8 = load i8, i8* %arrayidx4, align 1
  %conv = sext i8 %8 to i32
  %or = or i32 %conv, 1
  %conv5 = trunc i32 %or to i8
  store i8 %conv5, i8* %arrayidx4, align 1
  br label %if.end

if.else:                                          ; preds = %for.body
  %9 = load i32, i32* %j, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %j, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom6
  %10 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom8
  %11 = bitcast %struct.replacement* %arrayidx7 to i8*
  %12 = bitcast %struct.replacement* %arrayidx9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 24, i32 8, i1 false)
  %13 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %13 to i64
  %arrayidx11 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom10
  %what12 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx11, i32 0, i32 2
  %14 = load i32, i32* %what12, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds [180 x i8], [180 x i8]* %reload_flags, i32 0, i64 %idxprom13
  %15 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %15 to i32
  %or16 = or i32 %conv15, 2
  %conv17 = trunc i32 %or16 to i8
  store i8 %conv17, i8* %arrayidx14, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4
  %inc18 = add nsw i32 %16, 1
  store i32 %inc18, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %j, align 4
  store i32 %17, i32* @n_replacements, align 4
  %18 = load i32, i32* @n_reloads, align 4
  %sub = sub nsw i32 %18, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond.19

for.cond.19:                                      ; preds = %for.inc.36, %for.end
  %19 = load i32, i32* %i, align 4
  %cmp20 = icmp sge i32 %19, 0
  br i1 %cmp20, label %for.body.22, label %for.end.37

for.body.22:                                      ; preds = %for.cond.19
  %20 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %20 to i64
  %arrayidx24 = getelementptr inbounds [180 x i8], [180 x i8]* %reload_flags, i32 0, i64 %idxprom23
  %21 = load i8, i8* %arrayidx24, align 1
  %conv25 = sext i8 %21 to i32
  %cmp26 = icmp eq i32 %conv25, 1
  br i1 %cmp26, label %if.then.28, label %if.end.35

if.then.28:                                       ; preds = %for.body.22
  %22 = load i32, i32* %i, align 4
  call void @deallocate_reload_reg(i32 %22)
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom29
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 0
  %24 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %call31 = call i32 @remove_address_replacements(%struct.rtx_def* %24)
  %25 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %25 to i64
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom32
  %in34 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in34, align 8
  store i32 1, i32* %something_changed, align 4
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.28, %for.body.22
  br label %for.inc.36

for.inc.36:                                       ; preds = %if.end.35
  %26 = load i32, i32* %i, align 4
  %dec = add nsw i32 %26, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.19

for.end.37:                                       ; preds = %for.cond.19
  %27 = load i32, i32* %something_changed, align 4
  ret i32 %27
}

declare i32 @reg_class_subset_p(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @find_dummy_reload(%struct.rtx_def* %real_in, %struct.rtx_def* %real_out, %struct.rtx_def** %inloc, %struct.rtx_def** %outloc, i32 %inmode, i32 %outmode, i32 %class, i32 %for_real, i32 %earlyclobber) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %real_in.addr = alloca %struct.rtx_def*, align 8
  %real_out.addr = alloca %struct.rtx_def*, align 8
  %inloc.addr = alloca %struct.rtx_def**, align 8
  %outloc.addr = alloca %struct.rtx_def**, align 8
  %inmode.addr = alloca i32, align 4
  %outmode.addr = alloca i32, align 4
  %class.addr = alloca i32, align 4
  %for_real.addr = alloca i32, align 4
  %earlyclobber.addr = alloca i32, align 4
  %in = alloca %struct.rtx_def*, align 8
  %out = alloca %struct.rtx_def*, align 8
  %in_offset = alloca i32, align 4
  %out_offset = alloca i32, align 4
  %value = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %nwords = alloca i32, align 4
  %saved_rtx = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %regno262 = alloca i32, align 4
  %nwords267 = alloca i32, align 4
  %i356 = alloca i32, align 4
  store %struct.rtx_def* %real_in, %struct.rtx_def** %real_in.addr, align 8
  store %struct.rtx_def* %real_out, %struct.rtx_def** %real_out.addr, align 8
  store %struct.rtx_def** %inloc, %struct.rtx_def*** %inloc.addr, align 8
  store %struct.rtx_def** %outloc, %struct.rtx_def*** %outloc.addr, align 8
  store i32 %inmode, i32* %inmode.addr, align 4
  store i32 %outmode, i32* %outmode.addr, align 4
  store i32 %class, i32* %class.addr, align 4
  store i32 %for_real, i32* %for_real.addr, align 4
  store i32 %earlyclobber, i32* %earlyclobber.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %real_in.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %in, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %real_out.addr, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %out, align 8
  store i32 0, i32* %in_offset, align 4
  store i32 0, i32* %out_offset, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %value, align 8
  %2 = load i32, i32* %outmode.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %4 = load i32, i32* %inmode.addr, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1
  %5 = load i8, i8* %arrayidx2, align 1
  %conv3 = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv, %conv3
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %outmode.addr, align 4
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom5
  %7 = load i8, i8* %arrayidx6, align 1
  %conv7 = zext i8 %7 to i32
  %8 = load i32, i32* @target_flags, align 4
  %and = and i32 %8, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 8, i32 4
  %cmp8 = icmp sgt i32 %conv7, %cond
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* %inmode.addr, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom10
  %10 = load i8, i8* %arrayidx11, align 1
  %conv12 = zext i8 %10 to i32
  %11 = load i32, i32* @target_flags, align 4
  %and13 = and i32 %11, 33554432
  %tobool14 = icmp ne i32 %and13, 0
  %cond15 = select i1 %tobool14, i32 8, i32 4
  %cmp16 = icmp sgt i32 %conv12, %cond15
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end.51, %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load = load i32, i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp18 = icmp eq i32 %bf.clear, 63
  br i1 %cmp18, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load21 = load i32, i32* %16, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 61
  br i1 %cmp23, label %land.lhs.true.25, label %if.end.51

land.lhs.true.25:                                 ; preds = %while.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx30 to i32*
  %19 = load i32, i32* %rtuint, align 4
  %cmp31 = icmp ult i32 %19, 53
  br i1 %cmp31, label %if.then.33, label %if.end.51

if.then.33:                                       ; preds = %land.lhs.true.25
  %20 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtuint39 = bitcast %union.rtunion_def* %arrayidx38 to i32*
  %22 = load i32, i32* %rtuint39, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx42, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load43 = load i32, i32* %25, align 8
  %bf.lshr = lshr i32 %bf.load43, 16
  %bf.clear44 = and i32 %bf.lshr, 255
  %26 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 1
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %27 = load i32, i32* %rtuint47, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load48 = load i32, i32* %29, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %call = call i32 @subreg_regno_offset(i32 %22, i32 %bf.clear44, i32 %27, i32 %bf.clear50)
  %30 = load i32, i32* %out_offset, align 4
  %add = add i32 %30, %call
  store i32 %add, i32* %out_offset, align 4
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.33, %land.lhs.true.25, %while.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %out, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond.55

while.cond.55:                                    ; preds = %if.end.98, %while.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load56 = load i32, i32* %34, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 63
  br i1 %cmp58, label %while.body.60, label %while.end.102

while.body.60:                                    ; preds = %while.cond.55
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load64 = load i32, i32* %37, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  %cmp66 = icmp eq i32 %bf.clear65, 61
  br i1 %cmp66, label %land.lhs.true.68, label %if.end.98

land.lhs.true.68:                                 ; preds = %while.body.60
  %38 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx71, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtuint74 = bitcast %union.rtunion_def* %arrayidx73 to i32*
  %40 = load i32, i32* %rtuint74, align 4
  %cmp75 = icmp ult i32 %40, 53
  br i1 %cmp75, label %if.then.77, label %if.end.98

if.then.77:                                       ; preds = %land.lhs.true.68
  %41 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx80, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 0
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %43 = load i32, i32* %rtuint83, align 4
  %44 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i32 0, i64 0
  %rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx86, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load87 = load i32, i32* %46, align 8
  %bf.lshr88 = lshr i32 %bf.load87, 16
  %bf.clear89 = and i32 %bf.lshr88, 255
  %47 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 1
  %rtuint92 = bitcast %union.rtunion_def* %arrayidx91 to i32*
  %48 = load i32, i32* %rtuint92, align 4
  %49 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load93 = load i32, i32* %50, align 8
  %bf.lshr94 = lshr i32 %bf.load93, 16
  %bf.clear95 = and i32 %bf.lshr94, 255
  %call96 = call i32 @subreg_regno_offset(i32 %43, i32 %bf.clear89, i32 %48, i32 %bf.clear95)
  %51 = load i32, i32* %in_offset, align 4
  %add97 = add i32 %51, %call96
  store i32 %add97, i32* %in_offset, align 4
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.77, %land.lhs.true.68, %while.body.60
  %52 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  store %struct.rtx_def* %53, %struct.rtx_def** %in, align 8
  br label %while.cond.55

while.end.102:                                    ; preds = %while.cond.55
  %54 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %55 = load i32, i32* %class.addr, align 4
  %call103 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %54, i32 %55)
  store i32 %call103, i32* %class.addr, align 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load104 = load i32, i32* %57, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 61
  br i1 %cmp106, label %land.lhs.true.108, label %if.end.214

land.lhs.true.108:                                ; preds = %while.end.102
  %58 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 0
  %rtuint111 = bitcast %union.rtunion_def* %arrayidx110 to i32*
  %59 = load i32, i32* %rtuint111, align 4
  %cmp112 = icmp ult i32 %59, 53
  br i1 %cmp112, label %if.then.114, label %if.end.214

if.then.114:                                      ; preds = %land.lhs.true.108
  %60 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 0
  %rtuint117 = bitcast %union.rtunion_def* %arrayidx116 to i32*
  %61 = load i32, i32* %rtuint117, align 4
  %62 = load i32, i32* %out_offset, align 4
  %add118 = add i32 %61, %62
  store i32 %add118, i32* %regno, align 4
  %63 = load i32, i32* %regno, align 4
  %cmp119 = icmp uge i32 %63, 8
  br i1 %cmp119, label %land.lhs.true.121, label %lor.lhs.false.124

land.lhs.true.121:                                ; preds = %if.then.114
  %64 = load i32, i32* %regno, align 4
  %cmp122 = icmp ule i32 %64, 15
  br i1 %cmp122, label %cond.true, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %land.lhs.true.121, %if.then.114
  %65 = load i32, i32* %regno, align 4
  %cmp125 = icmp uge i32 %65, 21
  br i1 %cmp125, label %land.lhs.true.127, label %lor.lhs.false.130

land.lhs.true.127:                                ; preds = %lor.lhs.false.124
  %66 = load i32, i32* %regno, align 4
  %cmp128 = icmp ule i32 %66, 28
  br i1 %cmp128, label %cond.true, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %land.lhs.true.127, %lor.lhs.false.124
  %67 = load i32, i32* %regno, align 4
  %cmp131 = icmp uge i32 %67, 45
  br i1 %cmp131, label %land.lhs.true.133, label %lor.lhs.false.136

land.lhs.true.133:                                ; preds = %lor.lhs.false.130
  %68 = load i32, i32* %regno, align 4
  %cmp134 = icmp ule i32 %68, 52
  br i1 %cmp134, label %cond.true, label %lor.lhs.false.136

lor.lhs.false.136:                                ; preds = %land.lhs.true.133, %lor.lhs.false.130
  %69 = load i32, i32* %regno, align 4
  %cmp137 = icmp uge i32 %69, 29
  br i1 %cmp137, label %land.lhs.true.139, label %cond.false

land.lhs.true.139:                                ; preds = %lor.lhs.false.136
  %70 = load i32, i32* %regno, align 4
  %cmp140 = icmp ule i32 %70, 36
  br i1 %cmp140, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.139, %land.lhs.true.133, %land.lhs.true.127, %land.lhs.true.121
  %71 = load i32, i32* %outmode.addr, align 4
  %idxprom142 = sext i32 %71 to i64
  %arrayidx143 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom142
  %72 = load i32, i32* %arrayidx143, align 4
  %cmp144 = icmp eq i32 %72, 5
  br i1 %cmp144, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %73 = load i32, i32* %outmode.addr, align 4
  %idxprom146 = sext i32 %73 to i64
  %arrayidx147 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom146
  %74 = load i32, i32* %arrayidx147, align 4
  %cmp148 = icmp eq i32 %74, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %75 = phi i1 [ true, %cond.true ], [ %cmp148, %lor.rhs ]
  %cond150 = select i1 %75, i32 2, i32 1
  br label %cond.end.178

cond.false:                                       ; preds = %land.lhs.true.139, %lor.lhs.false.136
  %76 = load i32, i32* %outmode.addr, align 4
  %cmp151 = icmp eq i32 %76, 18
  br i1 %cmp151, label %cond.true.153, label %cond.false.157

cond.true.153:                                    ; preds = %cond.false
  %77 = load i32, i32* @target_flags, align 4
  %and154 = and i32 %77, 33554432
  %tobool155 = icmp ne i32 %and154, 0
  %cond156 = select i1 %tobool155, i32 2, i32 3
  br label %cond.end.176

cond.false.157:                                   ; preds = %cond.false
  %78 = load i32, i32* %outmode.addr, align 4
  %cmp158 = icmp eq i32 %78, 24
  br i1 %cmp158, label %cond.true.160, label %cond.false.164

cond.true.160:                                    ; preds = %cond.false.157
  %79 = load i32, i32* @target_flags, align 4
  %and161 = and i32 %79, 33554432
  %tobool162 = icmp ne i32 %and161, 0
  %cond163 = select i1 %tobool162, i32 4, i32 6
  br label %cond.end

cond.false.164:                                   ; preds = %cond.false.157
  %80 = load i32, i32* %outmode.addr, align 4
  %idxprom165 = sext i32 %80 to i64
  %arrayidx166 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom165
  %81 = load i8, i8* %arrayidx166, align 1
  %conv167 = zext i8 %81 to i32
  %82 = load i32, i32* @target_flags, align 4
  %and168 = and i32 %82, 33554432
  %tobool169 = icmp ne i32 %and168, 0
  %cond170 = select i1 %tobool169, i32 8, i32 4
  %add171 = add nsw i32 %conv167, %cond170
  %sub = sub nsw i32 %add171, 1
  %83 = load i32, i32* @target_flags, align 4
  %and172 = and i32 %83, 33554432
  %tobool173 = icmp ne i32 %and172, 0
  %cond174 = select i1 %tobool173, i32 8, i32 4
  %div = sdiv i32 %sub, %cond174
  br label %cond.end

cond.end:                                         ; preds = %cond.false.164, %cond.true.160
  %cond175 = phi i32 [ %cond163, %cond.true.160 ], [ %div, %cond.false.164 ]
  br label %cond.end.176

cond.end.176:                                     ; preds = %cond.end, %cond.true.153
  %cond177 = phi i32 [ %cond156, %cond.true.153 ], [ %cond175, %cond.end ]
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.end.176, %lor.end
  %cond179 = phi i32 [ %cond150, %lor.end ], [ %cond177, %cond.end.176 ]
  store i32 %cond179, i32* %nwords, align 4
  %84 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %84, align 8
  store %struct.rtx_def* %85, %struct.rtx_def** %saved_rtx, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %87 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %87, align 8
  %88 = load i32, i32* %regno, align 4
  %cmp180 = icmp ult i32 %88, 53
  br i1 %cmp180, label %land.lhs.true.182, label %if.end.213

land.lhs.true.182:                                ; preds = %cond.end.178
  %89 = load i32, i32* %regno, align 4
  %90 = load i32, i32* %outmode.addr, align 4
  %call183 = call i32 @ix86_hard_regno_mode_ok(i32 %89, i32 %90)
  %tobool184 = icmp ne i32 %call183, 0
  br i1 %tobool184, label %land.lhs.true.185, label %if.end.213

land.lhs.true.185:                                ; preds = %land.lhs.true.182
  %91 = load i32, i32* %regno, align 4
  %92 = load i32, i32* %regno, align 4
  %93 = load i32, i32* %nwords, align 4
  %add186 = add i32 %92, %93
  %94 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 3
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %96 = load %struct.rtx_def**, %struct.rtx_def*** %outloc.addr, align 8
  %call190 = call i32 @refers_to_regno_for_reload_p(i32 %91, i32 %add186, %struct.rtx_def* %95, %struct.rtx_def** %96)
  %tobool191 = icmp ne i32 %call190, 0
  br i1 %tobool191, label %if.end.213, label %if.then.192

if.then.192:                                      ; preds = %land.lhs.true.185
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.192
  %97 = load i32, i32* %i, align 4
  %98 = load i32, i32* %nwords, align 4
  %cmp193 = icmp ult i32 %97, %98
  br i1 %cmp193, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %99 = load i32, i32* %class.addr, align 4
  %idxprom195 = sext i32 %99 to i64
  %arrayidx196 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom195
  %100 = load i64, i64* %arrayidx196, align 8
  %101 = load i32, i32* %regno, align 4
  %102 = load i32, i32* %i, align 4
  %add197 = add i32 %101, %102
  %sh_prom = zext i32 %add197 to i64
  %shl = shl i64 1, %sh_prom
  %and198 = and i64 %100, %shl
  %tobool199 = icmp ne i64 %and198, 0
  br i1 %tobool199, label %if.end.201, label %if.then.200

if.then.200:                                      ; preds = %for.body
  br label %for.end

if.end.201:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.201
  %103 = load i32, i32* %i, align 4
  %inc = add i32 %103, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.200, %for.cond
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* %nwords, align 4
  %cmp202 = icmp eq i32 %104, %105
  br i1 %cmp202, label %if.then.204, label %if.end.212

if.then.204:                                      ; preds = %for.end
  %106 = load %struct.rtx_def*, %struct.rtx_def** %real_out.addr, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load205 = load i32, i32* %107, align 8
  %bf.clear206 = and i32 %bf.load205, 65535
  %cmp207 = icmp eq i32 %bf.clear206, 61
  br i1 %cmp207, label %if.then.209, label %if.else

if.then.209:                                      ; preds = %if.then.204
  %108 = load %struct.rtx_def*, %struct.rtx_def** %real_out.addr, align 8
  store %struct.rtx_def* %108, %struct.rtx_def** %value, align 8
  br label %if.end.211

if.else:                                          ; preds = %if.then.204
  %109 = load i32, i32* %outmode.addr, align 4
  %110 = load i32, i32* %regno, align 4
  %call210 = call %struct.rtx_def* @gen_rtx_REG(i32 %109, i32 %110)
  store %struct.rtx_def* %call210, %struct.rtx_def** %value, align 8
  br label %if.end.211

if.end.211:                                       ; preds = %if.else, %if.then.209
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.211, %for.end
  br label %if.end.213

if.end.213:                                       ; preds = %if.end.212, %land.lhs.true.185, %land.lhs.true.182, %cond.end.178
  %111 = load %struct.rtx_def*, %struct.rtx_def** %saved_rtx, align 8
  %112 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  store %struct.rtx_def* %111, %struct.rtx_def** %112, align 8
  br label %if.end.214

if.end.214:                                       ; preds = %if.end.213, %land.lhs.true.108, %while.end.102
  %113 = load i32, i32* @hard_regs_live_known, align 4
  %tobool215 = icmp ne i32 %113, 0
  br i1 %tobool215, label %land.lhs.true.216, label %if.end.396

land.lhs.true.216:                                ; preds = %if.end.214
  %114 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load217 = load i32, i32* %115, align 8
  %bf.clear218 = and i32 %bf.load217, 65535
  %cmp219 = icmp eq i32 %bf.clear218, 61
  br i1 %cmp219, label %land.lhs.true.221, label %if.end.396

land.lhs.true.221:                                ; preds = %land.lhs.true.216
  %116 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i32 0, i64 0
  %rtuint224 = bitcast %union.rtunion_def* %arrayidx223 to i32*
  %117 = load i32, i32* %rtuint224, align 4
  %cmp225 = icmp ult i32 %117, 53
  br i1 %cmp225, label %land.lhs.true.227, label %if.end.396

land.lhs.true.227:                                ; preds = %land.lhs.true.221
  %118 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %cmp228 = icmp eq %struct.rtx_def* %118, null
  br i1 %cmp228, label %land.lhs.true.233, label %lor.lhs.false.230

lor.lhs.false.230:                                ; preds = %land.lhs.true.227
  %119 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** %real_out.addr, align 8
  %call231 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %119, i32 10, %struct.rtx_def* %120)
  %tobool232 = icmp ne %struct.rtx_def* %call231, null
  br i1 %tobool232, label %land.lhs.true.233, label %if.end.396

land.lhs.true.233:                                ; preds = %lor.lhs.false.230, %land.lhs.true.227
  %121 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %real_in.addr, align 8
  %call234 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %121, i32 1, %struct.rtx_def* %122)
  %tobool235 = icmp ne %struct.rtx_def* %call234, null
  br i1 %tobool235, label %land.lhs.true.236, label %if.end.396

land.lhs.true.236:                                ; preds = %land.lhs.true.233
  %123 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i32 0, i64 0
  %rtuint239 = bitcast %union.rtunion_def* %arrayidx238 to i32*
  %124 = load i32, i32* %rtuint239, align 4
  %idxprom240 = zext i32 %124 to i64
  %arrayidx241 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom240
  %125 = load i8, i8* %arrayidx241, align 1
  %tobool242 = icmp ne i8 %125, 0
  br i1 %tobool242, label %if.end.396, label %land.lhs.true.243

land.lhs.true.243:                                ; preds = %land.lhs.true.236
  %126 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld244, i32 0, i64 0
  %rtuint246 = bitcast %union.rtunion_def* %arrayidx245 to i32*
  %127 = load i32, i32* %rtuint246, align 4
  %128 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load247 = load i32, i32* %129, align 8
  %bf.lshr248 = lshr i32 %bf.load247, 16
  %bf.clear249 = and i32 %bf.lshr248, 255
  %cmp250 = icmp ne i32 %bf.clear249, 0
  br i1 %cmp250, label %cond.true.252, label %cond.false.256

cond.true.252:                                    ; preds = %land.lhs.true.243
  %130 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %131 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load253 = load i32, i32* %131, align 8
  %bf.lshr254 = lshr i32 %bf.load253, 16
  %bf.clear255 = and i32 %bf.lshr254, 255
  br label %cond.end.257

cond.false.256:                                   ; preds = %land.lhs.true.243
  %132 = load i32, i32* %outmode.addr, align 4
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.false.256, %cond.true.252
  %cond258 = phi i32 [ %bf.clear255, %cond.true.252 ], [ %132, %cond.false.256 ]
  %call259 = call i32 @ix86_hard_regno_mode_ok(i32 %127, i32 %cond258)
  %tobool260 = icmp ne i32 %call259, 0
  br i1 %tobool260, label %if.then.261, label %if.end.396

if.then.261:                                      ; preds = %cond.end.257
  %133 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %fld263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i32 0, i64 0
  %rtuint265 = bitcast %union.rtunion_def* %arrayidx264 to i32*
  %134 = load i32, i32* %rtuint265, align 4
  %135 = load i32, i32* %in_offset, align 4
  %add266 = add i32 %134, %135
  store i32 %add266, i32* %regno262, align 4
  %136 = load i32, i32* %regno262, align 4
  %cmp268 = icmp uge i32 %136, 8
  br i1 %cmp268, label %land.lhs.true.270, label %lor.lhs.false.273

land.lhs.true.270:                                ; preds = %if.then.261
  %137 = load i32, i32* %regno262, align 4
  %cmp271 = icmp ule i32 %137, 15
  br i1 %cmp271, label %cond.true.291, label %lor.lhs.false.273

lor.lhs.false.273:                                ; preds = %land.lhs.true.270, %if.then.261
  %138 = load i32, i32* %regno262, align 4
  %cmp274 = icmp uge i32 %138, 21
  br i1 %cmp274, label %land.lhs.true.276, label %lor.lhs.false.279

land.lhs.true.276:                                ; preds = %lor.lhs.false.273
  %139 = load i32, i32* %regno262, align 4
  %cmp277 = icmp ule i32 %139, 28
  br i1 %cmp277, label %cond.true.291, label %lor.lhs.false.279

lor.lhs.false.279:                                ; preds = %land.lhs.true.276, %lor.lhs.false.273
  %140 = load i32, i32* %regno262, align 4
  %cmp280 = icmp uge i32 %140, 45
  br i1 %cmp280, label %land.lhs.true.282, label %lor.lhs.false.285

land.lhs.true.282:                                ; preds = %lor.lhs.false.279
  %141 = load i32, i32* %regno262, align 4
  %cmp283 = icmp ule i32 %141, 52
  br i1 %cmp283, label %cond.true.291, label %lor.lhs.false.285

lor.lhs.false.285:                                ; preds = %land.lhs.true.282, %lor.lhs.false.279
  %142 = load i32, i32* %regno262, align 4
  %cmp286 = icmp uge i32 %142, 29
  br i1 %cmp286, label %land.lhs.true.288, label %cond.false.303

land.lhs.true.288:                                ; preds = %lor.lhs.false.285
  %143 = load i32, i32* %regno262, align 4
  %cmp289 = icmp ule i32 %143, 36
  br i1 %cmp289, label %cond.true.291, label %cond.false.303

cond.true.291:                                    ; preds = %land.lhs.true.288, %land.lhs.true.282, %land.lhs.true.276, %land.lhs.true.270
  %144 = load i32, i32* %inmode.addr, align 4
  %idxprom292 = sext i32 %144 to i64
  %arrayidx293 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom292
  %145 = load i32, i32* %arrayidx293, align 4
  %cmp294 = icmp eq i32 %145, 5
  br i1 %cmp294, label %lor.end.301, label %lor.rhs.296

lor.rhs.296:                                      ; preds = %cond.true.291
  %146 = load i32, i32* %inmode.addr, align 4
  %idxprom297 = sext i32 %146 to i64
  %arrayidx298 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom297
  %147 = load i32, i32* %arrayidx298, align 4
  %cmp299 = icmp eq i32 %147, 6
  br label %lor.end.301

lor.end.301:                                      ; preds = %lor.rhs.296, %cond.true.291
  %148 = phi i1 [ true, %cond.true.291 ], [ %cmp299, %lor.rhs.296 ]
  %cond302 = select i1 %148, i32 2, i32 1
  br label %cond.end.334

cond.false.303:                                   ; preds = %land.lhs.true.288, %lor.lhs.false.285
  %149 = load i32, i32* %inmode.addr, align 4
  %cmp304 = icmp eq i32 %149, 18
  br i1 %cmp304, label %cond.true.306, label %cond.false.310

cond.true.306:                                    ; preds = %cond.false.303
  %150 = load i32, i32* @target_flags, align 4
  %and307 = and i32 %150, 33554432
  %tobool308 = icmp ne i32 %and307, 0
  %cond309 = select i1 %tobool308, i32 2, i32 3
  br label %cond.end.332

cond.false.310:                                   ; preds = %cond.false.303
  %151 = load i32, i32* %inmode.addr, align 4
  %cmp311 = icmp eq i32 %151, 24
  br i1 %cmp311, label %cond.true.313, label %cond.false.317

cond.true.313:                                    ; preds = %cond.false.310
  %152 = load i32, i32* @target_flags, align 4
  %and314 = and i32 %152, 33554432
  %tobool315 = icmp ne i32 %and314, 0
  %cond316 = select i1 %tobool315, i32 4, i32 6
  br label %cond.end.330

cond.false.317:                                   ; preds = %cond.false.310
  %153 = load i32, i32* %inmode.addr, align 4
  %idxprom318 = sext i32 %153 to i64
  %arrayidx319 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom318
  %154 = load i8, i8* %arrayidx319, align 1
  %conv320 = zext i8 %154 to i32
  %155 = load i32, i32* @target_flags, align 4
  %and321 = and i32 %155, 33554432
  %tobool322 = icmp ne i32 %and321, 0
  %cond323 = select i1 %tobool322, i32 8, i32 4
  %add324 = add nsw i32 %conv320, %cond323
  %sub325 = sub nsw i32 %add324, 1
  %156 = load i32, i32* @target_flags, align 4
  %and326 = and i32 %156, 33554432
  %tobool327 = icmp ne i32 %and326, 0
  %cond328 = select i1 %tobool327, i32 8, i32 4
  %div329 = sdiv i32 %sub325, %cond328
  br label %cond.end.330

cond.end.330:                                     ; preds = %cond.false.317, %cond.true.313
  %cond331 = phi i32 [ %cond316, %cond.true.313 ], [ %div329, %cond.false.317 ]
  br label %cond.end.332

cond.end.332:                                     ; preds = %cond.end.330, %cond.true.306
  %cond333 = phi i32 [ %cond309, %cond.true.306 ], [ %cond331, %cond.end.330 ]
  br label %cond.end.334

cond.end.334:                                     ; preds = %cond.end.332, %lor.end.301
  %cond335 = phi i32 [ %cond302, %lor.end.301 ], [ %cond333, %cond.end.332 ]
  store i32 %cond335, i32* %nwords267, align 4
  %157 = load i32, i32* %regno262, align 4
  %158 = load i32, i32* %regno262, align 4
  %159 = load i32, i32* %nwords267, align 4
  %add336 = add i32 %158, %159
  %160 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %call337 = call i32 @refers_to_regno_for_reload_p(i32 %157, i32 %add336, %struct.rtx_def* %160, %struct.rtx_def** null)
  %tobool338 = icmp ne i32 %call337, 0
  br i1 %tobool338, label %if.end.395, label %land.lhs.true.339

land.lhs.true.339:                                ; preds = %cond.end.334
  %161 = load i32, i32* %regno262, align 4
  %162 = load i32, i32* %regno262, align 4
  %163 = load i32, i32* %nwords267, align 4
  %add340 = add i32 %162, %163
  %164 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld341, i32 0, i64 3
  %rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rtx343, align 8
  %call344 = call i32 @hard_reg_set_here_p(i32 %161, i32 %add340, %struct.rtx_def* %165)
  %tobool345 = icmp ne i32 %call344, 0
  br i1 %tobool345, label %if.end.395, label %land.lhs.true.346

land.lhs.true.346:                                ; preds = %land.lhs.true.339
  %166 = load i32, i32* %earlyclobber.addr, align 4
  %tobool347 = icmp ne i32 %166, 0
  br i1 %tobool347, label %lor.lhs.false.348, label %if.then.355

lor.lhs.false.348:                                ; preds = %land.lhs.true.346
  %167 = load i32, i32* %regno262, align 4
  %168 = load i32, i32* %regno262, align 4
  %169 = load i32, i32* %nwords267, align 4
  %add349 = add i32 %168, %169
  %170 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 3
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  %172 = load %struct.rtx_def**, %struct.rtx_def*** %inloc.addr, align 8
  %call353 = call i32 @refers_to_regno_for_reload_p(i32 %167, i32 %add349, %struct.rtx_def* %171, %struct.rtx_def** %172)
  %tobool354 = icmp ne i32 %call353, 0
  br i1 %tobool354, label %if.end.395, label %if.then.355

if.then.355:                                      ; preds = %lor.lhs.false.348, %land.lhs.true.346
  store i32 0, i32* %i356, align 4
  br label %for.cond.357

for.cond.357:                                     ; preds = %for.inc.370, %if.then.355
  %173 = load i32, i32* %i356, align 4
  %174 = load i32, i32* %nwords267, align 4
  %cmp358 = icmp ult i32 %173, %174
  br i1 %cmp358, label %for.body.360, label %for.end.372

for.body.360:                                     ; preds = %for.cond.357
  %175 = load i32, i32* %class.addr, align 4
  %idxprom361 = sext i32 %175 to i64
  %arrayidx362 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom361
  %176 = load i64, i64* %arrayidx362, align 8
  %177 = load i32, i32* %regno262, align 4
  %178 = load i32, i32* %i356, align 4
  %add363 = add i32 %177, %178
  %sh_prom364 = zext i32 %add363 to i64
  %shl365 = shl i64 1, %sh_prom364
  %and366 = and i64 %176, %shl365
  %tobool367 = icmp ne i64 %and366, 0
  br i1 %tobool367, label %if.end.369, label %if.then.368

if.then.368:                                      ; preds = %for.body.360
  br label %for.end.372

if.end.369:                                       ; preds = %for.body.360
  br label %for.inc.370

for.inc.370:                                      ; preds = %if.end.369
  %179 = load i32, i32* %i356, align 4
  %inc371 = add i32 %179, 1
  store i32 %inc371, i32* %i356, align 4
  br label %for.cond.357

for.end.372:                                      ; preds = %if.then.368, %for.cond.357
  %180 = load i32, i32* %i356, align 4
  %181 = load i32, i32* %nwords267, align 4
  %cmp373 = icmp eq i32 %180, %181
  br i1 %cmp373, label %if.then.375, label %if.end.394

if.then.375:                                      ; preds = %for.end.372
  %182 = load i32, i32* %for_real.addr, align 4
  %cmp376 = icmp sge i32 %182, 0
  br i1 %cmp376, label %land.lhs.true.378, label %if.end.385

land.lhs.true.378:                                ; preds = %if.then.375
  %183 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %184 = load %struct.rtx_def*, %struct.rtx_def** %real_out.addr, align 8
  %cmp379 = icmp eq %struct.rtx_def* %183, %184
  br i1 %cmp379, label %if.then.381, label %if.end.385

if.then.381:                                      ; preds = %land.lhs.true.378
  %185 = load i32, i32* %for_real.addr, align 4
  %idxprom382 = sext i32 %185 to i64
  %arrayidx383 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom382
  %out384 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx383, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %out384, align 8
  br label %if.end.385

if.end.385:                                       ; preds = %if.then.381, %land.lhs.true.378, %if.then.375
  %186 = load %struct.rtx_def*, %struct.rtx_def** %real_in.addr, align 8
  %187 = bitcast %struct.rtx_def* %186 to i32*
  %bf.load386 = load i32, i32* %187, align 8
  %bf.clear387 = and i32 %bf.load386, 65535
  %cmp388 = icmp eq i32 %bf.clear387, 61
  br i1 %cmp388, label %if.then.390, label %if.else.391

if.then.390:                                      ; preds = %if.end.385
  %188 = load %struct.rtx_def*, %struct.rtx_def** %real_in.addr, align 8
  store %struct.rtx_def* %188, %struct.rtx_def** %value, align 8
  br label %if.end.393

if.else.391:                                      ; preds = %if.end.385
  %189 = load i32, i32* %inmode.addr, align 4
  %190 = load i32, i32* %regno262, align 4
  %call392 = call %struct.rtx_def* @gen_rtx_REG(i32 %189, i32 %190)
  store %struct.rtx_def* %call392, %struct.rtx_def** %value, align 8
  br label %if.end.393

if.end.393:                                       ; preds = %if.else.391, %if.then.390
  br label %if.end.394

if.end.394:                                       ; preds = %if.end.393, %for.end.372
  br label %if.end.395

if.end.395:                                       ; preds = %if.end.394, %lor.lhs.false.348, %land.lhs.true.339, %cond.end.334
  br label %if.end.396

if.end.396:                                       ; preds = %if.end.395, %cond.end.257, %land.lhs.true.236, %land.lhs.true.233, %lor.lhs.false.230, %land.lhs.true.221, %land.lhs.true.216, %if.end.214
  %191 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  store %struct.rtx_def* %191, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.396, %if.then
  %192 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %192
}

; Function Attrs: nounwind uwtable
define i32 @earlyclobber_operand_p(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_earlyclobbers, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i32 0, i64 %idxprom
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp1 = icmp eq %struct.rtx_def* %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %goal, %struct.rtx_def* %insn, i32 %class, i32 %other, i16* %reload_reg_p, i32 %goalreg, i32 %mode) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %goal.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %class.addr = alloca i32, align 4
  %other.addr = alloca i32, align 4
  %reload_reg_p.addr = alloca i16*, align 8
  %goalreg.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %goaltry = alloca %struct.rtx_def*, align 8
  %valtry = alloca %struct.rtx_def*, align 8
  %value = alloca %struct.rtx_def*, align 8
  %where = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %valueno = alloca i32, align 4
  %goal_mem = alloca i32, align 4
  %goal_const = alloca i32, align 4
  %goal_mem_addr_varies = alloca i32, align 4
  %need_stable_sp = alloca i32, align 4
  %nregs = alloca i32, align 4
  %valuenregs = alloca i32, align 4
  %code = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %i982 = alloca i32, align 4
  %i1001 = alloca i32, align 4
  %regno1 = alloca i32, align 4
  %nregs1 = alloca i32, align 4
  %i1189 = alloca i32, align 4
  %dest = alloca %struct.rtx_def*, align 8
  %xregno = alloca i32, align 4
  %xnregs = alloca i32, align 4
  %i1475 = alloca i32, align 4
  %v1 = alloca %struct.rtx_def*, align 8
  %dest1507 = alloca %struct.rtx_def*, align 8
  %xregno1542 = alloca i32, align 4
  %xnregs1546 = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  %dest1743 = alloca %struct.rtx_def*, align 8
  %xregno1752 = alloca i32, align 4
  %xnregs1756 = alloca i32, align 4
  store %struct.rtx_def* %goal, %struct.rtx_def** %goal.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %class, i32* %class.addr, align 4
  store i32 %other, i32* %other.addr, align 4
  store i16* %reload_reg_p, i16** %reload_reg_p.addr, align 8
  store i32 %goalreg, i32* %goalreg.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %p, align 8
  store i32 -1, i32* %regno, align 4
  store i32 0, i32* %goal_mem, align 4
  store i32 0, i32* %goal_const, align 4
  store i32 0, i32* %goal_mem_addr_varies, align 4
  store i32 0, i32* %need_stable_sp, align 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %goalreg.addr, align 4
  store i32 %2, i32* %regno, align 4
  br label %if.end.193

if.else:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 61
  br i1 %cmp1, label %if.then.2, label %if.else.3

if.then.2:                                        ; preds = %if.else
  %5 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %6 = load i32, i32* %rtuint, align 4
  store i32 %6, i32* %regno, align 4
  br label %if.end.192

if.else.3:                                        ; preds = %if.else
  %7 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load4 = load i32, i32* %8, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 66
  br i1 %cmp6, label %if.then.7, label %if.else.23

if.then.7:                                        ; preds = %if.else.3
  %9 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load10 = load i32, i32* %11, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  store i32 %bf.clear11, i32* %code, align 4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load12 = load i32, i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load12, 27
  %bf.clear13 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear13, 0
  br i1 %tobool, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.then.7
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %if.then.7
  %14 = load i32, i32* @flag_float_store, align 4
  %tobool15 = icmp ne i32 %14, 0
  br i1 %tobool15, label %land.lhs.true, label %if.end.22

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load16 = load i32, i32* %16, align 8
  %bf.lshr17 = lshr i32 %bf.load16, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  %idxprom = sext i32 %bf.clear18 to i64
  %arrayidx19 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %17 = load i32, i32* %arrayidx19, align 4
  %cmp20 = icmp eq i32 %17, 2
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.22:                                        ; preds = %land.lhs.true, %if.end
  %18 = load i32, i32* %code, align 4
  switch i32 %18, label %sw.default [
    i32 99, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 96, label %sw.bb
    i32 101, label %sw.bb
    i32 100, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end.22, %if.end.22, %if.end.22, %if.end.22, %if.end.22, %if.end.22
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %if.end.22
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i32 1, i32* %goal_mem, align 4
  br label %if.end.191

if.else.23:                                       ; preds = %if.else.3
  %19 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load24 = load i32, i32* %20, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 67
  br i1 %cmp26, label %if.then.54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.23
  %21 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load27 = load i32, i32* %22, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 68
  br i1 %cmp29, label %if.then.54, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false
  %23 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load31 = load i32, i32* %24, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %if.then.54, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.30
  %25 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load35 = load i32, i32* %26, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 55
  br i1 %cmp37, label %if.then.54, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.34
  %27 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load39 = load i32, i32* %28, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 58
  br i1 %cmp41, label %if.then.54, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.38
  %29 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load43 = load i32, i32* %30, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 134
  br i1 %cmp45, label %if.then.54, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.42
  %31 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load47 = load i32, i32* %32, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 56
  br i1 %cmp49, label %if.then.54, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.46
  %33 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load51 = load i32, i32* %34, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 140
  br i1 %cmp53, label %if.then.54, label %if.else.55

if.then.54:                                       ; preds = %lor.lhs.false.50, %lor.lhs.false.46, %lor.lhs.false.42, %lor.lhs.false.38, %lor.lhs.false.34, %lor.lhs.false.30, %lor.lhs.false, %if.else.23
  store i32 1, i32* %goal_const, align 4
  br label %if.end.190

if.else.55:                                       ; preds = %lor.lhs.false.50
  %35 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load56 = load i32, i32* %36, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 75
  br i1 %cmp58, label %land.lhs.true.59, label %if.else.121

land.lhs.true.59:                                 ; preds = %if.else.55
  %37 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %39 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp63 = icmp eq %struct.rtx_def* %38, %39
  br i1 %cmp63, label %land.lhs.true.64, label %if.else.121

land.lhs.true.64:                                 ; preds = %land.lhs.true.59
  %40 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 1
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx67, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load68 = load i32, i32* %42, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 67
  br i1 %cmp70, label %if.then.120, label %lor.lhs.false.71

lor.lhs.false.71:                                 ; preds = %land.lhs.true.64
  %43 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 1
  %rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx74, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load75 = load i32, i32* %45, align 8
  %bf.clear76 = and i32 %bf.load75, 65535
  %cmp77 = icmp eq i32 %bf.clear76, 68
  br i1 %cmp77, label %if.then.120, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %lor.lhs.false.71
  %46 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 1
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx81, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load82 = load i32, i32* %48, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 54
  br i1 %cmp84, label %if.then.120, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %lor.lhs.false.78
  %49 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 1
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load89 = load i32, i32* %51, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 55
  br i1 %cmp91, label %if.then.120, label %lor.lhs.false.92

lor.lhs.false.92:                                 ; preds = %lor.lhs.false.85
  %52 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 1
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load96 = load i32, i32* %54, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 58
  br i1 %cmp98, label %if.then.120, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %lor.lhs.false.92
  %55 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 1
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx102, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load103 = load i32, i32* %57, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %cmp105 = icmp eq i32 %bf.clear104, 134
  br i1 %cmp105, label %if.then.120, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %lor.lhs.false.99
  %58 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 1
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx109, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load110 = load i32, i32* %60, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 56
  br i1 %cmp112, label %if.then.120, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %lor.lhs.false.106
  %61 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load117 = load i32, i32* %63, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 140
  br i1 %cmp119, label %if.then.120, label %if.else.121

if.then.120:                                      ; preds = %lor.lhs.false.113, %lor.lhs.false.106, %lor.lhs.false.99, %lor.lhs.false.92, %lor.lhs.false.85, %lor.lhs.false.78, %lor.lhs.false.71, %land.lhs.true.64
  store i32 1, i32* %need_stable_sp, align 4
  store i32 1, i32* %goal_const, align 4
  br label %if.end.189

if.else.121:                                      ; preds = %lor.lhs.false.113, %land.lhs.true.59, %if.else.55
  %64 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load122 = load i32, i32* %65, align 8
  %bf.clear123 = and i32 %bf.load122, 65535
  %cmp124 = icmp eq i32 %bf.clear123, 75
  br i1 %cmp124, label %land.lhs.true.125, label %if.else.187

land.lhs.true.125:                                ; preds = %if.else.121
  %66 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 0
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx128, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp129 = icmp eq %struct.rtx_def* %67, %68
  br i1 %cmp129, label %land.lhs.true.130, label %if.else.187

land.lhs.true.130:                                ; preds = %land.lhs.true.125
  %69 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 1
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx133, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load134 = load i32, i32* %71, align 8
  %bf.clear135 = and i32 %bf.load134, 65535
  %cmp136 = icmp eq i32 %bf.clear135, 67
  br i1 %cmp136, label %if.then.186, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %land.lhs.true.130
  %72 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 1
  %rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx140, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load141 = load i32, i32* %74, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  %cmp143 = icmp eq i32 %bf.clear142, 68
  br i1 %cmp143, label %if.then.186, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %lor.lhs.false.137
  %75 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load148 = load i32, i32* %77, align 8
  %bf.clear149 = and i32 %bf.load148, 65535
  %cmp150 = icmp eq i32 %bf.clear149, 54
  br i1 %cmp150, label %if.then.186, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %lor.lhs.false.144
  %78 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 1
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load155 = load i32, i32* %80, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp eq i32 %bf.clear156, 55
  br i1 %cmp157, label %if.then.186, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %lor.lhs.false.151
  %81 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i32 0, i64 1
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx161, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load162 = load i32, i32* %83, align 8
  %bf.clear163 = and i32 %bf.load162, 65535
  %cmp164 = icmp eq i32 %bf.clear163, 58
  br i1 %cmp164, label %if.then.186, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %lor.lhs.false.158
  %84 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 1
  %rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx168, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load169 = load i32, i32* %86, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 134
  br i1 %cmp171, label %if.then.186, label %lor.lhs.false.172

lor.lhs.false.172:                                ; preds = %lor.lhs.false.165
  %87 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 1
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load176 = load i32, i32* %89, align 8
  %bf.clear177 = and i32 %bf.load176, 65535
  %cmp178 = icmp eq i32 %bf.clear177, 56
  br i1 %cmp178, label %if.then.186, label %lor.lhs.false.179

lor.lhs.false.179:                                ; preds = %lor.lhs.false.172
  %90 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 1
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx182, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load183 = load i32, i32* %92, align 8
  %bf.clear184 = and i32 %bf.load183, 65535
  %cmp185 = icmp eq i32 %bf.clear184, 140
  br i1 %cmp185, label %if.then.186, label %if.else.187

if.then.186:                                      ; preds = %lor.lhs.false.179, %lor.lhs.false.172, %lor.lhs.false.165, %lor.lhs.false.158, %lor.lhs.false.151, %lor.lhs.false.144, %lor.lhs.false.137, %land.lhs.true.130
  store i32 1, i32* %goal_const, align 4
  br label %if.end.188

if.else.187:                                      ; preds = %lor.lhs.false.179, %land.lhs.true.125, %if.else.121
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.188:                                       ; preds = %if.then.186
  br label %if.end.189

if.end.189:                                       ; preds = %if.end.188, %if.then.120
  br label %if.end.190

if.end.190:                                       ; preds = %if.end.189, %if.then.54
  br label %if.end.191

if.end.191:                                       ; preds = %if.end.190, %sw.epilog
  br label %if.end.192

if.end.192:                                       ; preds = %if.end.191, %if.then.2
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %if.then
  br label %while.body

while.body:                                       ; preds = %if.end.193, %if.then.465, %if.then.470, %if.then.546, %if.end.551
  %93 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i32 0, i64 1
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx196, align 8
  store %struct.rtx_def* %94, %struct.rtx_def** %p, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %cmp197 = icmp eq %struct.rtx_def* %95, null
  br i1 %cmp197, label %if.then.202, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %while.body
  %96 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load199 = load i32, i32* %97, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 36
  br i1 %cmp201, label %if.then.202, label %if.end.203

if.then.202:                                      ; preds = %lor.lhs.false.198, %while.body
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.203:                                       ; preds = %lor.lhs.false.198
  %98 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load204 = load i32, i32* %99, align 8
  %bf.clear205 = and i32 %bf.load204, 65535
  %cmp206 = icmp eq i32 %bf.clear205, 32
  br i1 %cmp206, label %land.lhs.true.207, label %if.end.551

land.lhs.true.207:                                ; preds = %if.end.203
  %100 = load i16*, i16** %reload_reg_p.addr, align 8
  %cmp208 = icmp ne i16* %100, null
  br i1 %cmp208, label %land.lhs.true.209, label %if.then.215

land.lhs.true.209:                                ; preds = %land.lhs.true.207
  %101 = load i16*, i16** %reload_reg_p.addr, align 8
  %cmp210 = icmp ne i16* %101, inttoptr (i64 1 to i16*)
  br i1 %cmp210, label %lor.lhs.false.211, label %if.then.215

lor.lhs.false.211:                                ; preds = %land.lhs.true.209
  %102 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx213 to i32*
  %103 = load i32, i32* %rtint, align 4
  %104 = load i32, i32* @reload_first_uid, align 4
  %cmp214 = icmp slt i32 %103, %104
  br i1 %cmp214, label %if.then.215, label %if.end.551

if.then.215:                                      ; preds = %lor.lhs.false.211, %land.lhs.true.209, %land.lhs.true.207
  %105 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %106 = bitcast %struct.rtx_def* %105 to i32*
  %bf.load216 = load i32, i32* %106, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %idxprom218 = sext i32 %bf.clear217 to i64
  %arrayidx219 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom218
  %107 = load i8, i8* %arrayidx219, align 1
  %conv = sext i8 %107 to i32
  %cmp220 = icmp eq i32 %conv, 105
  br i1 %cmp220, label %cond.true, label %cond.false.236

cond.true:                                        ; preds = %if.then.215
  %108 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i32 0, i64 3
  %rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx224, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load225 = load i32, i32* %110, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 47
  br i1 %cmp227, label %cond.true.229, label %cond.false

cond.true.229:                                    ; preds = %cond.true
  %111 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx231 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld230, i32 0, i64 3
  %rtx232 = bitcast %union.rtunion_def* %arrayidx231 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx232, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %113 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 3
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %113, %struct.rtx_def* %115)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.229
  %cond = phi %struct.rtx_def* [ %112, %cond.true.229 ], [ %call, %cond.false ]
  br label %cond.end.237

cond.false.236:                                   ; preds = %if.then.215
  br label %cond.end.237

cond.end.237:                                     ; preds = %cond.false.236, %cond.end
  %cond238 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.236 ]
  store %struct.rtx_def* %cond238, %struct.rtx_def** %pat, align 8
  %116 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %cmp239 = icmp ne %struct.rtx_def* %116, null
  br i1 %cmp239, label %land.lhs.true.241, label %if.end.550

land.lhs.true.241:                                ; preds = %cond.end.237
  %117 = load i32, i32* %regno, align 4
  %cmp242 = icmp sge i32 %117, 0
  br i1 %cmp242, label %land.lhs.true.244, label %lor.lhs.false.258

land.lhs.true.244:                                ; preds = %land.lhs.true.241
  %118 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 1
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  %call248 = call i32 @true_regnum(%struct.rtx_def* %119)
  %120 = load i32, i32* %regno, align 4
  %cmp249 = icmp eq i32 %call248, %120
  br i1 %cmp249, label %land.lhs.true.251, label %lor.lhs.false.258

land.lhs.true.251:                                ; preds = %land.lhs.true.244
  %121 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  store %struct.rtx_def* %122, %struct.rtx_def** %valtry, align 8
  %call255 = call i32 @true_regnum(%struct.rtx_def* %122)
  store i32 %call255, i32* %valueno, align 4
  %cmp256 = icmp sge i32 %call255, 0
  br i1 %cmp256, label %if.then.459, label %lor.lhs.false.258

lor.lhs.false.258:                                ; preds = %land.lhs.true.251, %land.lhs.true.244, %land.lhs.true.241
  %123 = load i32, i32* %regno, align 4
  %cmp259 = icmp sge i32 %123, 0
  br i1 %cmp259, label %land.lhs.true.261, label %lor.lhs.false.275

land.lhs.true.261:                                ; preds = %lor.lhs.false.258
  %124 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld262, i32 0, i64 0
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx264, align 8
  %call265 = call i32 @true_regnum(%struct.rtx_def* %125)
  %126 = load i32, i32* %regno, align 4
  %cmp266 = icmp eq i32 %call265, %126
  br i1 %cmp266, label %land.lhs.true.268, label %lor.lhs.false.275

land.lhs.true.268:                                ; preds = %land.lhs.true.261
  %127 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 1
  %rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx271, align 8
  store %struct.rtx_def* %128, %struct.rtx_def** %valtry, align 8
  %call272 = call i32 @true_regnum(%struct.rtx_def* %128)
  store i32 %call272, i32* %valueno, align 4
  %cmp273 = icmp sge i32 %call272, 0
  br i1 %cmp273, label %if.then.459, label %lor.lhs.false.275

lor.lhs.false.275:                                ; preds = %land.lhs.true.268, %land.lhs.true.261, %lor.lhs.false.258
  %129 = load i32, i32* %goal_const, align 4
  %tobool276 = icmp ne i32 %129, 0
  br i1 %tobool276, label %land.lhs.true.277, label %lor.lhs.false.296

land.lhs.true.277:                                ; preds = %lor.lhs.false.275
  %130 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 1
  %rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx280, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call281 = call i32 @rtx_equal_p(%struct.rtx_def* %131, %struct.rtx_def* %132)
  %tobool282 = icmp ne i32 %call281, 0
  br i1 %tobool282, label %land.lhs.true.283, label %lor.lhs.false.296

land.lhs.true.283:                                ; preds = %land.lhs.true.277
  %133 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i32 0, i64 0
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx286, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call287 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %134, %struct.rtx_def* %135)
  %tobool288 = icmp ne i32 %call287, 0
  br i1 %tobool288, label %lor.lhs.false.296, label %land.lhs.true.289

land.lhs.true.289:                                ; preds = %land.lhs.true.283
  %136 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 0
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx292, align 8
  store %struct.rtx_def* %137, %struct.rtx_def** %valtry, align 8
  %call293 = call i32 @true_regnum(%struct.rtx_def* %137)
  store i32 %call293, i32* %valueno, align 4
  %cmp294 = icmp sge i32 %call293, 0
  br i1 %cmp294, label %if.then.459, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %land.lhs.true.289, %land.lhs.true.283, %land.lhs.true.277, %lor.lhs.false.275
  %138 = load i32, i32* %goal_mem, align 4
  %tobool297 = icmp ne i32 %138, 0
  br i1 %tobool297, label %land.lhs.true.298, label %lor.lhs.false.311

land.lhs.true.298:                                ; preds = %lor.lhs.false.296
  %139 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i32 0, i64 0
  %rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx301, align 8
  store %struct.rtx_def* %140, %struct.rtx_def** %valtry, align 8
  %call302 = call i32 @true_regnum(%struct.rtx_def* %140)
  store i32 %call302, i32* %valueno, align 4
  %cmp303 = icmp sge i32 %call302, 0
  br i1 %cmp303, label %land.lhs.true.305, label %lor.lhs.false.311

land.lhs.true.305:                                ; preds = %land.lhs.true.298
  %141 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 1
  %rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx308, align 8
  %call309 = call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %141, %struct.rtx_def* %143)
  %tobool310 = icmp ne i32 %call309, 0
  br i1 %tobool310, label %if.then.459, label %lor.lhs.false.311

lor.lhs.false.311:                                ; preds = %land.lhs.true.305, %land.lhs.true.298, %lor.lhs.false.296
  %144 = load i32, i32* %goal_mem, align 4
  %tobool312 = icmp ne i32 %144, 0
  br i1 %tobool312, label %land.lhs.true.313, label %lor.lhs.false.326

land.lhs.true.313:                                ; preds = %lor.lhs.false.311
  %145 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 1
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx316, align 8
  store %struct.rtx_def* %146, %struct.rtx_def** %valtry, align 8
  %call317 = call i32 @true_regnum(%struct.rtx_def* %146)
  store i32 %call317, i32* %valueno, align 4
  %cmp318 = icmp sge i32 %call317, 0
  br i1 %cmp318, label %land.lhs.true.320, label %lor.lhs.false.326

land.lhs.true.320:                                ; preds = %land.lhs.true.313
  %147 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld321, i32 0, i64 0
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx323, align 8
  %call324 = call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %147, %struct.rtx_def* %149)
  %tobool325 = icmp ne i32 %call324, 0
  br i1 %tobool325, label %if.then.459, label %lor.lhs.false.326

lor.lhs.false.326:                                ; preds = %land.lhs.true.320, %land.lhs.true.313, %lor.lhs.false.311
  %150 = load i32, i32* %goal_const, align 4
  %tobool327 = icmp ne i32 %150, 0
  br i1 %tobool327, label %land.lhs.true.328, label %lor.lhs.false.402

land.lhs.true.328:                                ; preds = %lor.lhs.false.326
  %151 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i32 0, i64 6
  %rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx331, align 8
  %cmp332 = icmp ne %struct.rtx_def* %152, null
  br i1 %cmp332, label %land.lhs.true.334, label %lor.lhs.false.402

land.lhs.true.334:                                ; preds = %land.lhs.true.328
  %153 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call335 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %153, i32 3, %struct.rtx_def* null)
  store %struct.rtx_def* %call335, %struct.rtx_def** %tem, align 8
  %tobool336 = icmp ne %struct.rtx_def* %call335, null
  br i1 %tobool336, label %land.lhs.true.337, label %lor.lhs.false.402

land.lhs.true.337:                                ; preds = %land.lhs.true.334
  %154 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld338 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld338, i32 0, i64 0
  %rtx340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx340, align 8
  %156 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call341 = call i32 @rtx_equal_p(%struct.rtx_def* %155, %struct.rtx_def* %156)
  %tobool342 = icmp ne i32 %call341, 0
  br i1 %tobool342, label %land.lhs.true.343, label %lor.lhs.false.350

land.lhs.true.343:                                ; preds = %land.lhs.true.337
  %157 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 0
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx346, align 8
  store %struct.rtx_def* %158, %struct.rtx_def** %valtry, align 8
  %call347 = call i32 @true_regnum(%struct.rtx_def* %158)
  store i32 %call347, i32* %valueno, align 4
  %cmp348 = icmp sge i32 %call347, 0
  br i1 %cmp348, label %if.then.459, label %lor.lhs.false.350

lor.lhs.false.350:                                ; preds = %land.lhs.true.343, %land.lhs.true.337
  %159 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i32 0, i64 0
  %rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx353, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load354 = load i32, i32* %161, align 8
  %bf.clear355 = and i32 %bf.load354, 65535
  %cmp356 = icmp eq i32 %bf.clear355, 61
  br i1 %cmp356, label %land.lhs.true.358, label %lor.lhs.false.402

land.lhs.true.358:                                ; preds = %lor.lhs.false.350
  %162 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i32 0, i64 0
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx361, align 8
  %164 = bitcast %struct.rtx_def* %163 to i32*
  %bf.load362 = load i32, i32* %164, align 8
  %bf.clear363 = and i32 %bf.load362, 65535
  %cmp364 = icmp eq i32 %bf.clear363, 55
  br i1 %cmp364, label %land.lhs.true.366, label %lor.lhs.false.402

land.lhs.true.366:                                ; preds = %land.lhs.true.358
  %165 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i32 0, i64 0
  %rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx369, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load370 = load i32, i32* %167, align 8
  %bf.lshr371 = lshr i32 %bf.load370, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %idxprom373 = sext i32 %bf.clear372 to i64
  %arrayidx374 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom373
  %168 = load i32, i32* %arrayidx374, align 4
  %cmp375 = icmp eq i32 %168, 2
  br i1 %cmp375, label %land.lhs.true.377, label %lor.lhs.false.402

land.lhs.true.377:                                ; preds = %land.lhs.true.366
  %169 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load378 = load i32, i32* %170, align 8
  %bf.clear379 = and i32 %bf.load378, 65535
  %cmp380 = icmp eq i32 %bf.clear379, 54
  br i1 %cmp380, label %land.lhs.true.382, label %lor.lhs.false.402

land.lhs.true.382:                                ; preds = %land.lhs.true.377
  %171 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 0
  %rtx385 = bitcast %union.rtunion_def* %arrayidx384 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx385, align 8
  %call386 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %172, i32 0, i32 0, i32 0)
  store %struct.rtx_def* %call386, %struct.rtx_def** %goaltry, align 8
  %cmp387 = icmp ne %struct.rtx_def* null, %call386
  br i1 %cmp387, label %land.lhs.true.389, label %lor.lhs.false.402

land.lhs.true.389:                                ; preds = %land.lhs.true.382
  %173 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** %goaltry, align 8
  %call390 = call i32 @rtx_equal_p(%struct.rtx_def* %173, %struct.rtx_def* %174)
  %tobool391 = icmp ne i32 %call390, 0
  br i1 %tobool391, label %land.lhs.true.392, label %lor.lhs.false.402

land.lhs.true.392:                                ; preds = %land.lhs.true.389
  %175 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %call396 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %176, i32 0, i32 0, i32 0)
  store %struct.rtx_def* %call396, %struct.rtx_def** %valtry, align 8
  %tobool397 = icmp ne %struct.rtx_def* %call396, null
  br i1 %tobool397, label %land.lhs.true.398, label %lor.lhs.false.402

land.lhs.true.398:                                ; preds = %land.lhs.true.392
  %177 = load %struct.rtx_def*, %struct.rtx_def** %valtry, align 8
  %call399 = call i32 @true_regnum(%struct.rtx_def* %177)
  store i32 %call399, i32* %valueno, align 4
  %cmp400 = icmp sge i32 %call399, 0
  br i1 %cmp400, label %if.then.459, label %lor.lhs.false.402

lor.lhs.false.402:                                ; preds = %land.lhs.true.398, %land.lhs.true.392, %land.lhs.true.389, %land.lhs.true.382, %land.lhs.true.377, %land.lhs.true.366, %land.lhs.true.358, %lor.lhs.false.350, %land.lhs.true.334, %land.lhs.true.328, %lor.lhs.false.326
  %178 = load i32, i32* %goal_const, align 4
  %tobool403 = icmp ne i32 %178, 0
  br i1 %tobool403, label %land.lhs.true.404, label %if.end.550

land.lhs.true.404:                                ; preds = %lor.lhs.false.402
  %179 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call405 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %179, i32 3, %struct.rtx_def* null)
  store %struct.rtx_def* %call405, %struct.rtx_def** %tem, align 8
  %tobool406 = icmp ne %struct.rtx_def* %call405, null
  br i1 %tobool406, label %land.lhs.true.407, label %if.end.550

land.lhs.true.407:                                ; preds = %land.lhs.true.404
  %180 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %182 = bitcast %struct.rtx_def* %181 to i32*
  %bf.load411 = load i32, i32* %182, align 8
  %bf.clear412 = and i32 %bf.load411, 65535
  %cmp413 = icmp eq i32 %bf.clear412, 61
  br i1 %cmp413, label %land.lhs.true.415, label %if.end.550

land.lhs.true.415:                                ; preds = %land.lhs.true.407
  %183 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtx418 = bitcast %union.rtunion_def* %arrayidx417 to %struct.rtx_def**
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rtx418, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load419 = load i32, i32* %185, align 8
  %bf.clear420 = and i32 %bf.load419, 65535
  %cmp421 = icmp eq i32 %bf.clear420, 55
  br i1 %cmp421, label %land.lhs.true.423, label %if.end.550

land.lhs.true.423:                                ; preds = %land.lhs.true.415
  %186 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld424 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx425 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld424, i32 0, i64 0
  %rtx426 = bitcast %union.rtunion_def* %arrayidx425 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx426, align 8
  %188 = bitcast %struct.rtx_def* %187 to i32*
  %bf.load427 = load i32, i32* %188, align 8
  %bf.lshr428 = lshr i32 %bf.load427, 16
  %bf.clear429 = and i32 %bf.lshr428, 255
  %idxprom430 = sext i32 %bf.clear429 to i64
  %arrayidx431 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom430
  %189 = load i32, i32* %arrayidx431, align 4
  %cmp432 = icmp eq i32 %189, 2
  br i1 %cmp432, label %land.lhs.true.434, label %if.end.550

land.lhs.true.434:                                ; preds = %land.lhs.true.423
  %190 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load435 = load i32, i32* %191, align 8
  %bf.clear436 = and i32 %bf.load435, 65535
  %cmp437 = icmp eq i32 %bf.clear436, 54
  br i1 %cmp437, label %land.lhs.true.439, label %if.end.550

land.lhs.true.439:                                ; preds = %land.lhs.true.434
  %192 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i32 0, i64 0
  %rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rtx442, align 8
  %call443 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %193, i32 1, i32 0, i32 0)
  store %struct.rtx_def* %call443, %struct.rtx_def** %goaltry, align 8
  %cmp444 = icmp ne %struct.rtx_def* null, %call443
  br i1 %cmp444, label %land.lhs.true.446, label %if.end.550

land.lhs.true.446:                                ; preds = %land.lhs.true.439
  %194 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %goaltry, align 8
  %call447 = call i32 @rtx_equal_p(%struct.rtx_def* %194, %struct.rtx_def* %195)
  %tobool448 = icmp ne i32 %call447, 0
  br i1 %tobool448, label %land.lhs.true.449, label %if.end.550

land.lhs.true.449:                                ; preds = %land.lhs.true.446
  %196 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld450, i32 0, i64 0
  %rtx452 = bitcast %union.rtunion_def* %arrayidx451 to %struct.rtx_def**
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rtx452, align 8
  %call453 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %197, i32 1, i32 0, i32 0)
  store %struct.rtx_def* %call453, %struct.rtx_def** %valtry, align 8
  %tobool454 = icmp ne %struct.rtx_def* %call453, null
  br i1 %tobool454, label %land.lhs.true.455, label %if.end.550

land.lhs.true.455:                                ; preds = %land.lhs.true.449
  %198 = load %struct.rtx_def*, %struct.rtx_def** %valtry, align 8
  %call456 = call i32 @true_regnum(%struct.rtx_def* %198)
  store i32 %call456, i32* %valueno, align 4
  %cmp457 = icmp sge i32 %call456, 0
  br i1 %cmp457, label %if.then.459, label %if.end.550

if.then.459:                                      ; preds = %land.lhs.true.455, %land.lhs.true.398, %land.lhs.true.343, %land.lhs.true.320, %land.lhs.true.305, %land.lhs.true.289, %land.lhs.true.268, %land.lhs.true.251
  %199 = load i32, i32* %other.addr, align 4
  %cmp460 = icmp sge i32 %199, 0
  br i1 %cmp460, label %if.then.462, label %if.else.467

if.then.462:                                      ; preds = %if.then.459
  %200 = load i32, i32* %valueno, align 4
  %201 = load i32, i32* %other.addr, align 4
  %cmp463 = icmp ne i32 %200, %201
  br i1 %cmp463, label %if.then.465, label %if.end.466

if.then.465:                                      ; preds = %if.then.462
  br label %while.body

if.end.466:                                       ; preds = %if.then.462
  br label %if.end.549

if.else.467:                                      ; preds = %if.then.459
  %202 = load i32, i32* %valueno, align 4
  %cmp468 = icmp uge i32 %202, 53
  br i1 %cmp468, label %if.then.470, label %if.else.471

if.then.470:                                      ; preds = %if.else.467
  br label %while.body

if.else.471:                                      ; preds = %if.else.467
  %203 = load i32, i32* %valueno, align 4
  %cmp472 = icmp sge i32 %203, 8
  br i1 %cmp472, label %land.lhs.true.474, label %lor.lhs.false.477

land.lhs.true.474:                                ; preds = %if.else.471
  %204 = load i32, i32* %valueno, align 4
  %cmp475 = icmp sle i32 %204, 15
  br i1 %cmp475, label %cond.true.495, label %lor.lhs.false.477

lor.lhs.false.477:                                ; preds = %land.lhs.true.474, %if.else.471
  %205 = load i32, i32* %valueno, align 4
  %cmp478 = icmp sge i32 %205, 21
  br i1 %cmp478, label %land.lhs.true.480, label %lor.lhs.false.483

land.lhs.true.480:                                ; preds = %lor.lhs.false.477
  %206 = load i32, i32* %valueno, align 4
  %cmp481 = icmp sle i32 %206, 28
  br i1 %cmp481, label %cond.true.495, label %lor.lhs.false.483

lor.lhs.false.483:                                ; preds = %land.lhs.true.480, %lor.lhs.false.477
  %207 = load i32, i32* %valueno, align 4
  %cmp484 = icmp sge i32 %207, 45
  br i1 %cmp484, label %land.lhs.true.486, label %lor.lhs.false.489

land.lhs.true.486:                                ; preds = %lor.lhs.false.483
  %208 = load i32, i32* %valueno, align 4
  %cmp487 = icmp sle i32 %208, 52
  br i1 %cmp487, label %cond.true.495, label %lor.lhs.false.489

lor.lhs.false.489:                                ; preds = %land.lhs.true.486, %lor.lhs.false.483
  %209 = load i32, i32* %valueno, align 4
  %cmp490 = icmp sge i32 %209, 29
  br i1 %cmp490, label %land.lhs.true.492, label %cond.false.505

land.lhs.true.492:                                ; preds = %lor.lhs.false.489
  %210 = load i32, i32* %valueno, align 4
  %cmp493 = icmp sle i32 %210, 36
  br i1 %cmp493, label %cond.true.495, label %cond.false.505

cond.true.495:                                    ; preds = %land.lhs.true.492, %land.lhs.true.486, %land.lhs.true.480, %land.lhs.true.474
  %211 = load i32, i32* %mode.addr, align 4
  %idxprom496 = sext i32 %211 to i64
  %arrayidx497 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom496
  %212 = load i32, i32* %arrayidx497, align 4
  %cmp498 = icmp eq i32 %212, 5
  br i1 %cmp498, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.495
  %213 = load i32, i32* %mode.addr, align 4
  %idxprom500 = sext i32 %213 to i64
  %arrayidx501 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom500
  %214 = load i32, i32* %arrayidx501, align 4
  %cmp502 = icmp eq i32 %214, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.495
  %215 = phi i1 [ true, %cond.true.495 ], [ %cmp502, %lor.rhs ]
  %cond504 = select i1 %215, i32 2, i32 1
  br label %cond.end.532

cond.false.505:                                   ; preds = %land.lhs.true.492, %lor.lhs.false.489
  %216 = load i32, i32* %mode.addr, align 4
  %cmp506 = icmp eq i32 %216, 18
  br i1 %cmp506, label %cond.true.508, label %cond.false.511

cond.true.508:                                    ; preds = %cond.false.505
  %217 = load i32, i32* @target_flags, align 4
  %and = and i32 %217, 33554432
  %tobool509 = icmp ne i32 %and, 0
  %cond510 = select i1 %tobool509, i32 2, i32 3
  br label %cond.end.530

cond.false.511:                                   ; preds = %cond.false.505
  %218 = load i32, i32* %mode.addr, align 4
  %cmp512 = icmp eq i32 %218, 24
  br i1 %cmp512, label %cond.true.514, label %cond.false.518

cond.true.514:                                    ; preds = %cond.false.511
  %219 = load i32, i32* @target_flags, align 4
  %and515 = and i32 %219, 33554432
  %tobool516 = icmp ne i32 %and515, 0
  %cond517 = select i1 %tobool516, i32 4, i32 6
  br label %cond.end.528

cond.false.518:                                   ; preds = %cond.false.511
  %220 = load i32, i32* %mode.addr, align 4
  %idxprom519 = sext i32 %220 to i64
  %arrayidx520 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom519
  %221 = load i8, i8* %arrayidx520, align 1
  %conv521 = zext i8 %221 to i32
  %222 = load i32, i32* @target_flags, align 4
  %and522 = and i32 %222, 33554432
  %tobool523 = icmp ne i32 %and522, 0
  %cond524 = select i1 %tobool523, i32 8, i32 4
  %add = add nsw i32 %conv521, %cond524
  %sub = sub nsw i32 %add, 1
  %223 = load i32, i32* @target_flags, align 4
  %and525 = and i32 %223, 33554432
  %tobool526 = icmp ne i32 %and525, 0
  %cond527 = select i1 %tobool526, i32 8, i32 4
  %div = sdiv i32 %sub, %cond527
  br label %cond.end.528

cond.end.528:                                     ; preds = %cond.false.518, %cond.true.514
  %cond529 = phi i32 [ %cond517, %cond.true.514 ], [ %div, %cond.false.518 ]
  br label %cond.end.530

cond.end.530:                                     ; preds = %cond.end.528, %cond.true.508
  %cond531 = phi i32 [ %cond510, %cond.true.508 ], [ %cond529, %cond.end.528 ]
  br label %cond.end.532

cond.end.532:                                     ; preds = %cond.end.530, %lor.end
  %cond533 = phi i32 [ %cond504, %lor.end ], [ %cond531, %cond.end.530 ]
  %sub534 = sub nsw i32 %cond533, 1
  store i32 %sub534, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.532
  %224 = load i32, i32* %i, align 4
  %cmp535 = icmp sge i32 %224, 0
  br i1 %cmp535, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %225 = load i32, i32* %class.addr, align 4
  %idxprom537 = sext i32 %225 to i64
  %arrayidx538 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom537
  %226 = load i64, i64* %arrayidx538, align 8
  %227 = load i32, i32* %valueno, align 4
  %228 = load i32, i32* %i, align 4
  %add539 = add nsw i32 %227, %228
  %sh_prom = zext i32 %add539 to i64
  %shl = shl i64 1, %sh_prom
  %and540 = and i64 %226, %shl
  %tobool541 = icmp ne i64 %and540, 0
  br i1 %tobool541, label %if.end.543, label %if.then.542

if.then.542:                                      ; preds = %for.body
  br label %for.end

if.end.543:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.543
  %229 = load i32, i32* %i, align 4
  %dec = add nsw i32 %229, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.542, %for.cond
  %230 = load i32, i32* %i, align 4
  %cmp544 = icmp sge i32 %230, 0
  br i1 %cmp544, label %if.then.546, label %if.end.547

if.then.546:                                      ; preds = %for.end
  br label %while.body

if.end.547:                                       ; preds = %for.end
  br label %if.end.548

if.end.548:                                       ; preds = %if.end.547
  br label %if.end.549

if.end.549:                                       ; preds = %if.end.548, %if.end.466
  %231 = load %struct.rtx_def*, %struct.rtx_def** %valtry, align 8
  store %struct.rtx_def* %231, %struct.rtx_def** %value, align 8
  %232 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  store %struct.rtx_def* %232, %struct.rtx_def** %where, align 8
  br label %while.end

if.end.550:                                       ; preds = %land.lhs.true.455, %land.lhs.true.449, %land.lhs.true.446, %land.lhs.true.439, %land.lhs.true.434, %land.lhs.true.423, %land.lhs.true.415, %land.lhs.true.407, %land.lhs.true.404, %lor.lhs.false.402, %cond.end.237
  br label %if.end.551

if.end.551:                                       ; preds = %if.end.550, %lor.lhs.false.211, %if.end.203
  br label %while.body

while.end:                                        ; preds = %if.end.549
  %233 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %fld552 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx553 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld552, i32 0, i64 6
  %rtx554 = bitcast %union.rtunion_def* %arrayidx553 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx554, align 8
  %cmp555 = icmp ne %struct.rtx_def* %234, null
  br i1 %cmp555, label %land.lhs.true.557, label %if.end.561

land.lhs.true.557:                                ; preds = %while.end
  %235 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %236 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %call558 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %235, i32 10, %struct.rtx_def* %236)
  %tobool559 = icmp ne %struct.rtx_def* %call558, null
  br i1 %tobool559, label %if.then.560, label %if.end.561

if.then.560:                                      ; preds = %land.lhs.true.557
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.561:                                       ; preds = %land.lhs.true.557, %while.end
  %237 = load i32, i32* %valueno, align 4
  %cmp562 = icmp eq i32 %237, 7
  br i1 %cmp562, label %if.then.572, label %lor.lhs.false.564

lor.lhs.false.564:                                ; preds = %if.end.561
  %238 = load i32, i32* %regno, align 4
  %cmp565 = icmp eq i32 %238, 7
  br i1 %cmp565, label %if.then.572, label %lor.lhs.false.567

lor.lhs.false.567:                                ; preds = %lor.lhs.false.564
  %239 = load i32, i32* %goal_mem, align 4
  %tobool568 = icmp ne i32 %239, 0
  br i1 %tobool568, label %land.lhs.true.569, label %if.end.573

land.lhs.true.569:                                ; preds = %lor.lhs.false.567
  %240 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %241 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call570 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %240, %struct.rtx_def* %241)
  %tobool571 = icmp ne i32 %call570, 0
  br i1 %tobool571, label %if.then.572, label %if.end.573

if.then.572:                                      ; preds = %land.lhs.true.569, %lor.lhs.false.564, %if.end.561
  store i32 1, i32* %need_stable_sp, align 4
  br label %if.end.573

if.end.573:                                       ; preds = %if.then.572, %land.lhs.true.569, %lor.lhs.false.567
  %242 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %243 = bitcast %struct.rtx_def* %242 to i32*
  %bf.load574 = load i32, i32* %243, align 8
  %bf.lshr575 = lshr i32 %bf.load574, 16
  %bf.clear576 = and i32 %bf.lshr575, 255
  %244 = load i32, i32* %mode.addr, align 4
  %cmp577 = icmp ne i32 %bf.clear576, %244
  br i1 %cmp577, label %if.then.579, label %if.end.580

if.then.579:                                      ; preds = %if.end.573
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.580:                                       ; preds = %if.end.573
  %245 = load i32, i32* %goal_mem, align 4
  %tobool581 = icmp ne i32 %245, 0
  br i1 %tobool581, label %land.lhs.true.582, label %if.end.690

land.lhs.true.582:                                ; preds = %if.end.580
  %246 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %247 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load583 = load i32, i32* %248, align 8
  %bf.clear584 = and i32 %bf.load583, 65535
  %idxprom585 = sext i32 %bf.clear584 to i64
  %arrayidx586 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom585
  %249 = load i8, i8* %arrayidx586, align 1
  %conv587 = sext i8 %249 to i32
  %cmp588 = icmp eq i32 %conv587, 105
  br i1 %cmp588, label %cond.true.590, label %cond.false.609

cond.true.590:                                    ; preds = %land.lhs.true.582
  %250 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 3
  %rtx593 = bitcast %union.rtunion_def* %arrayidx592 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx593, align 8
  %252 = bitcast %struct.rtx_def* %251 to i32*
  %bf.load594 = load i32, i32* %252, align 8
  %bf.clear595 = and i32 %bf.load594, 65535
  %cmp596 = icmp eq i32 %bf.clear595, 47
  br i1 %cmp596, label %cond.true.598, label %cond.false.602

cond.true.598:                                    ; preds = %cond.true.590
  %253 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %fld599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld599, i32 0, i64 3
  %rtx601 = bitcast %union.rtunion_def* %arrayidx600 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx601, align 8
  br label %cond.end.607

cond.false.602:                                   ; preds = %cond.true.590
  %255 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %256 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %fld603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld603, i32 0, i64 3
  %rtx605 = bitcast %union.rtunion_def* %arrayidx604 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx605, align 8
  %call606 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %255, %struct.rtx_def* %257)
  br label %cond.end.607

cond.end.607:                                     ; preds = %cond.false.602, %cond.true.598
  %cond608 = phi %struct.rtx_def* [ %254, %cond.true.598 ], [ %call606, %cond.false.602 ]
  br label %cond.end.610

cond.false.609:                                   ; preds = %land.lhs.true.582
  br label %cond.end.610

cond.end.610:                                     ; preds = %cond.false.609, %cond.end.607
  %cond611 = phi %struct.rtx_def* [ %cond608, %cond.end.607 ], [ null, %cond.false.609 ]
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond611, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 0
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %258 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  %cmp615 = icmp eq %struct.rtx_def* %246, %258
  br i1 %cmp615, label %land.lhs.true.617, label %if.end.690

land.lhs.true.617:                                ; preds = %cond.end.610
  %259 = load i32, i32* %valueno, align 4
  %260 = load i32, i32* %valueno, align 4
  %261 = load i32, i32* %valueno, align 4
  %cmp618 = icmp sge i32 %261, 8
  br i1 %cmp618, label %land.lhs.true.620, label %lor.lhs.false.623

land.lhs.true.620:                                ; preds = %land.lhs.true.617
  %262 = load i32, i32* %valueno, align 4
  %cmp621 = icmp sle i32 %262, 15
  br i1 %cmp621, label %cond.true.641, label %lor.lhs.false.623

lor.lhs.false.623:                                ; preds = %land.lhs.true.620, %land.lhs.true.617
  %263 = load i32, i32* %valueno, align 4
  %cmp624 = icmp sge i32 %263, 21
  br i1 %cmp624, label %land.lhs.true.626, label %lor.lhs.false.629

land.lhs.true.626:                                ; preds = %lor.lhs.false.623
  %264 = load i32, i32* %valueno, align 4
  %cmp627 = icmp sle i32 %264, 28
  br i1 %cmp627, label %cond.true.641, label %lor.lhs.false.629

lor.lhs.false.629:                                ; preds = %land.lhs.true.626, %lor.lhs.false.623
  %265 = load i32, i32* %valueno, align 4
  %cmp630 = icmp sge i32 %265, 45
  br i1 %cmp630, label %land.lhs.true.632, label %lor.lhs.false.635

land.lhs.true.632:                                ; preds = %lor.lhs.false.629
  %266 = load i32, i32* %valueno, align 4
  %cmp633 = icmp sle i32 %266, 52
  br i1 %cmp633, label %cond.true.641, label %lor.lhs.false.635

lor.lhs.false.635:                                ; preds = %land.lhs.true.632, %lor.lhs.false.629
  %267 = load i32, i32* %valueno, align 4
  %cmp636 = icmp sge i32 %267, 29
  br i1 %cmp636, label %land.lhs.true.638, label %cond.false.653

land.lhs.true.638:                                ; preds = %lor.lhs.false.635
  %268 = load i32, i32* %valueno, align 4
  %cmp639 = icmp sle i32 %268, 36
  br i1 %cmp639, label %cond.true.641, label %cond.false.653

cond.true.641:                                    ; preds = %land.lhs.true.638, %land.lhs.true.632, %land.lhs.true.626, %land.lhs.true.620
  %269 = load i32, i32* %mode.addr, align 4
  %idxprom642 = sext i32 %269 to i64
  %arrayidx643 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom642
  %270 = load i32, i32* %arrayidx643, align 4
  %cmp644 = icmp eq i32 %270, 5
  br i1 %cmp644, label %lor.end.651, label %lor.rhs.646

lor.rhs.646:                                      ; preds = %cond.true.641
  %271 = load i32, i32* %mode.addr, align 4
  %idxprom647 = sext i32 %271 to i64
  %arrayidx648 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom647
  %272 = load i32, i32* %arrayidx648, align 4
  %cmp649 = icmp eq i32 %272, 6
  br label %lor.end.651

lor.end.651:                                      ; preds = %lor.rhs.646, %cond.true.641
  %273 = phi i1 [ true, %cond.true.641 ], [ %cmp649, %lor.rhs.646 ]
  %cond652 = select i1 %273, i32 2, i32 1
  br label %cond.end.684

cond.false.653:                                   ; preds = %land.lhs.true.638, %lor.lhs.false.635
  %274 = load i32, i32* %mode.addr, align 4
  %cmp654 = icmp eq i32 %274, 18
  br i1 %cmp654, label %cond.true.656, label %cond.false.660

cond.true.656:                                    ; preds = %cond.false.653
  %275 = load i32, i32* @target_flags, align 4
  %and657 = and i32 %275, 33554432
  %tobool658 = icmp ne i32 %and657, 0
  %cond659 = select i1 %tobool658, i32 2, i32 3
  br label %cond.end.682

cond.false.660:                                   ; preds = %cond.false.653
  %276 = load i32, i32* %mode.addr, align 4
  %cmp661 = icmp eq i32 %276, 24
  br i1 %cmp661, label %cond.true.663, label %cond.false.667

cond.true.663:                                    ; preds = %cond.false.660
  %277 = load i32, i32* @target_flags, align 4
  %and664 = and i32 %277, 33554432
  %tobool665 = icmp ne i32 %and664, 0
  %cond666 = select i1 %tobool665, i32 4, i32 6
  br label %cond.end.680

cond.false.667:                                   ; preds = %cond.false.660
  %278 = load i32, i32* %mode.addr, align 4
  %idxprom668 = sext i32 %278 to i64
  %arrayidx669 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom668
  %279 = load i8, i8* %arrayidx669, align 1
  %conv670 = zext i8 %279 to i32
  %280 = load i32, i32* @target_flags, align 4
  %and671 = and i32 %280, 33554432
  %tobool672 = icmp ne i32 %and671, 0
  %cond673 = select i1 %tobool672, i32 8, i32 4
  %add674 = add nsw i32 %conv670, %cond673
  %sub675 = sub nsw i32 %add674, 1
  %281 = load i32, i32* @target_flags, align 4
  %and676 = and i32 %281, 33554432
  %tobool677 = icmp ne i32 %and676, 0
  %cond678 = select i1 %tobool677, i32 8, i32 4
  %div679 = sdiv i32 %sub675, %cond678
  br label %cond.end.680

cond.end.680:                                     ; preds = %cond.false.667, %cond.true.663
  %cond681 = phi i32 [ %cond666, %cond.true.663 ], [ %div679, %cond.false.667 ]
  br label %cond.end.682

cond.end.682:                                     ; preds = %cond.end.680, %cond.true.656
  %cond683 = phi i32 [ %cond659, %cond.true.656 ], [ %cond681, %cond.end.680 ]
  br label %cond.end.684

cond.end.684:                                     ; preds = %cond.end.682, %lor.end.651
  %cond685 = phi i32 [ %cond652, %lor.end.651 ], [ %cond683, %cond.end.682 ]
  %add686 = add nsw i32 %260, %cond685
  %282 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call687 = call i32 @refers_to_regno_for_reload_p(i32 %259, i32 %add686, %struct.rtx_def* %282, %struct.rtx_def** null)
  %tobool688 = icmp ne i32 %call687, 0
  br i1 %tobool688, label %if.then.689, label %if.end.690

if.then.689:                                      ; preds = %cond.end.684
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.690:                                       ; preds = %cond.end.684, %cond.end.610, %if.end.580
  %283 = load i32, i32* %goal_mem, align 4
  %tobool691 = icmp ne i32 %283, 0
  br i1 %tobool691, label %if.end.839, label %land.lhs.true.692

land.lhs.true.692:                                ; preds = %if.end.690
  %284 = load i32, i32* %goal_const, align 4
  %tobool693 = icmp ne i32 %284, 0
  br i1 %tobool693, label %if.end.839, label %land.lhs.true.694

land.lhs.true.694:                                ; preds = %land.lhs.true.692
  %285 = load i32, i32* %regno, align 4
  %286 = load i32, i32* %regno, align 4
  %cmp695 = icmp sge i32 %286, 8
  br i1 %cmp695, label %land.lhs.true.697, label %lor.lhs.false.700

land.lhs.true.697:                                ; preds = %land.lhs.true.694
  %287 = load i32, i32* %regno, align 4
  %cmp698 = icmp sle i32 %287, 15
  br i1 %cmp698, label %cond.true.718, label %lor.lhs.false.700

lor.lhs.false.700:                                ; preds = %land.lhs.true.697, %land.lhs.true.694
  %288 = load i32, i32* %regno, align 4
  %cmp701 = icmp sge i32 %288, 21
  br i1 %cmp701, label %land.lhs.true.703, label %lor.lhs.false.706

land.lhs.true.703:                                ; preds = %lor.lhs.false.700
  %289 = load i32, i32* %regno, align 4
  %cmp704 = icmp sle i32 %289, 28
  br i1 %cmp704, label %cond.true.718, label %lor.lhs.false.706

lor.lhs.false.706:                                ; preds = %land.lhs.true.703, %lor.lhs.false.700
  %290 = load i32, i32* %regno, align 4
  %cmp707 = icmp sge i32 %290, 45
  br i1 %cmp707, label %land.lhs.true.709, label %lor.lhs.false.712

land.lhs.true.709:                                ; preds = %lor.lhs.false.706
  %291 = load i32, i32* %regno, align 4
  %cmp710 = icmp sle i32 %291, 52
  br i1 %cmp710, label %cond.true.718, label %lor.lhs.false.712

lor.lhs.false.712:                                ; preds = %land.lhs.true.709, %lor.lhs.false.706
  %292 = load i32, i32* %regno, align 4
  %cmp713 = icmp sge i32 %292, 29
  br i1 %cmp713, label %land.lhs.true.715, label %cond.false.730

land.lhs.true.715:                                ; preds = %lor.lhs.false.712
  %293 = load i32, i32* %regno, align 4
  %cmp716 = icmp sle i32 %293, 36
  br i1 %cmp716, label %cond.true.718, label %cond.false.730

cond.true.718:                                    ; preds = %land.lhs.true.715, %land.lhs.true.709, %land.lhs.true.703, %land.lhs.true.697
  %294 = load i32, i32* %mode.addr, align 4
  %idxprom719 = sext i32 %294 to i64
  %arrayidx720 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom719
  %295 = load i32, i32* %arrayidx720, align 4
  %cmp721 = icmp eq i32 %295, 5
  br i1 %cmp721, label %lor.end.728, label %lor.rhs.723

lor.rhs.723:                                      ; preds = %cond.true.718
  %296 = load i32, i32* %mode.addr, align 4
  %idxprom724 = sext i32 %296 to i64
  %arrayidx725 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom724
  %297 = load i32, i32* %arrayidx725, align 4
  %cmp726 = icmp eq i32 %297, 6
  br label %lor.end.728

lor.end.728:                                      ; preds = %lor.rhs.723, %cond.true.718
  %298 = phi i1 [ true, %cond.true.718 ], [ %cmp726, %lor.rhs.723 ]
  %cond729 = select i1 %298, i32 2, i32 1
  br label %cond.end.761

cond.false.730:                                   ; preds = %land.lhs.true.715, %lor.lhs.false.712
  %299 = load i32, i32* %mode.addr, align 4
  %cmp731 = icmp eq i32 %299, 18
  br i1 %cmp731, label %cond.true.733, label %cond.false.737

cond.true.733:                                    ; preds = %cond.false.730
  %300 = load i32, i32* @target_flags, align 4
  %and734 = and i32 %300, 33554432
  %tobool735 = icmp ne i32 %and734, 0
  %cond736 = select i1 %tobool735, i32 2, i32 3
  br label %cond.end.759

cond.false.737:                                   ; preds = %cond.false.730
  %301 = load i32, i32* %mode.addr, align 4
  %cmp738 = icmp eq i32 %301, 24
  br i1 %cmp738, label %cond.true.740, label %cond.false.744

cond.true.740:                                    ; preds = %cond.false.737
  %302 = load i32, i32* @target_flags, align 4
  %and741 = and i32 %302, 33554432
  %tobool742 = icmp ne i32 %and741, 0
  %cond743 = select i1 %tobool742, i32 4, i32 6
  br label %cond.end.757

cond.false.744:                                   ; preds = %cond.false.737
  %303 = load i32, i32* %mode.addr, align 4
  %idxprom745 = sext i32 %303 to i64
  %arrayidx746 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom745
  %304 = load i8, i8* %arrayidx746, align 1
  %conv747 = zext i8 %304 to i32
  %305 = load i32, i32* @target_flags, align 4
  %and748 = and i32 %305, 33554432
  %tobool749 = icmp ne i32 %and748, 0
  %cond750 = select i1 %tobool749, i32 8, i32 4
  %add751 = add nsw i32 %conv747, %cond750
  %sub752 = sub nsw i32 %add751, 1
  %306 = load i32, i32* @target_flags, align 4
  %and753 = and i32 %306, 33554432
  %tobool754 = icmp ne i32 %and753, 0
  %cond755 = select i1 %tobool754, i32 8, i32 4
  %div756 = sdiv i32 %sub752, %cond755
  br label %cond.end.757

cond.end.757:                                     ; preds = %cond.false.744, %cond.true.740
  %cond758 = phi i32 [ %cond743, %cond.true.740 ], [ %div756, %cond.false.744 ]
  br label %cond.end.759

cond.end.759:                                     ; preds = %cond.end.757, %cond.true.733
  %cond760 = phi i32 [ %cond736, %cond.true.733 ], [ %cond758, %cond.end.757 ]
  br label %cond.end.761

cond.end.761:                                     ; preds = %cond.end.759, %lor.end.728
  %cond762 = phi i32 [ %cond729, %lor.end.728 ], [ %cond760, %cond.end.759 ]
  %add763 = add nsw i32 %285, %cond762
  %307 = load i32, i32* %valueno, align 4
  %cmp764 = icmp sgt i32 %add763, %307
  br i1 %cmp764, label %land.lhs.true.766, label %if.end.839

land.lhs.true.766:                                ; preds = %cond.end.761
  %308 = load i32, i32* %regno, align 4
  %309 = load i32, i32* %valueno, align 4
  %310 = load i32, i32* %valueno, align 4
  %cmp767 = icmp sge i32 %310, 8
  br i1 %cmp767, label %land.lhs.true.769, label %lor.lhs.false.772

land.lhs.true.769:                                ; preds = %land.lhs.true.766
  %311 = load i32, i32* %valueno, align 4
  %cmp770 = icmp sle i32 %311, 15
  br i1 %cmp770, label %cond.true.790, label %lor.lhs.false.772

lor.lhs.false.772:                                ; preds = %land.lhs.true.769, %land.lhs.true.766
  %312 = load i32, i32* %valueno, align 4
  %cmp773 = icmp sge i32 %312, 21
  br i1 %cmp773, label %land.lhs.true.775, label %lor.lhs.false.778

land.lhs.true.775:                                ; preds = %lor.lhs.false.772
  %313 = load i32, i32* %valueno, align 4
  %cmp776 = icmp sle i32 %313, 28
  br i1 %cmp776, label %cond.true.790, label %lor.lhs.false.778

lor.lhs.false.778:                                ; preds = %land.lhs.true.775, %lor.lhs.false.772
  %314 = load i32, i32* %valueno, align 4
  %cmp779 = icmp sge i32 %314, 45
  br i1 %cmp779, label %land.lhs.true.781, label %lor.lhs.false.784

land.lhs.true.781:                                ; preds = %lor.lhs.false.778
  %315 = load i32, i32* %valueno, align 4
  %cmp782 = icmp sle i32 %315, 52
  br i1 %cmp782, label %cond.true.790, label %lor.lhs.false.784

lor.lhs.false.784:                                ; preds = %land.lhs.true.781, %lor.lhs.false.778
  %316 = load i32, i32* %valueno, align 4
  %cmp785 = icmp sge i32 %316, 29
  br i1 %cmp785, label %land.lhs.true.787, label %cond.false.802

land.lhs.true.787:                                ; preds = %lor.lhs.false.784
  %317 = load i32, i32* %valueno, align 4
  %cmp788 = icmp sle i32 %317, 36
  br i1 %cmp788, label %cond.true.790, label %cond.false.802

cond.true.790:                                    ; preds = %land.lhs.true.787, %land.lhs.true.781, %land.lhs.true.775, %land.lhs.true.769
  %318 = load i32, i32* %mode.addr, align 4
  %idxprom791 = sext i32 %318 to i64
  %arrayidx792 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom791
  %319 = load i32, i32* %arrayidx792, align 4
  %cmp793 = icmp eq i32 %319, 5
  br i1 %cmp793, label %lor.end.800, label %lor.rhs.795

lor.rhs.795:                                      ; preds = %cond.true.790
  %320 = load i32, i32* %mode.addr, align 4
  %idxprom796 = sext i32 %320 to i64
  %arrayidx797 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom796
  %321 = load i32, i32* %arrayidx797, align 4
  %cmp798 = icmp eq i32 %321, 6
  br label %lor.end.800

lor.end.800:                                      ; preds = %lor.rhs.795, %cond.true.790
  %322 = phi i1 [ true, %cond.true.790 ], [ %cmp798, %lor.rhs.795 ]
  %cond801 = select i1 %322, i32 2, i32 1
  br label %cond.end.833

cond.false.802:                                   ; preds = %land.lhs.true.787, %lor.lhs.false.784
  %323 = load i32, i32* %mode.addr, align 4
  %cmp803 = icmp eq i32 %323, 18
  br i1 %cmp803, label %cond.true.805, label %cond.false.809

cond.true.805:                                    ; preds = %cond.false.802
  %324 = load i32, i32* @target_flags, align 4
  %and806 = and i32 %324, 33554432
  %tobool807 = icmp ne i32 %and806, 0
  %cond808 = select i1 %tobool807, i32 2, i32 3
  br label %cond.end.831

cond.false.809:                                   ; preds = %cond.false.802
  %325 = load i32, i32* %mode.addr, align 4
  %cmp810 = icmp eq i32 %325, 24
  br i1 %cmp810, label %cond.true.812, label %cond.false.816

cond.true.812:                                    ; preds = %cond.false.809
  %326 = load i32, i32* @target_flags, align 4
  %and813 = and i32 %326, 33554432
  %tobool814 = icmp ne i32 %and813, 0
  %cond815 = select i1 %tobool814, i32 4, i32 6
  br label %cond.end.829

cond.false.816:                                   ; preds = %cond.false.809
  %327 = load i32, i32* %mode.addr, align 4
  %idxprom817 = sext i32 %327 to i64
  %arrayidx818 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom817
  %328 = load i8, i8* %arrayidx818, align 1
  %conv819 = zext i8 %328 to i32
  %329 = load i32, i32* @target_flags, align 4
  %and820 = and i32 %329, 33554432
  %tobool821 = icmp ne i32 %and820, 0
  %cond822 = select i1 %tobool821, i32 8, i32 4
  %add823 = add nsw i32 %conv819, %cond822
  %sub824 = sub nsw i32 %add823, 1
  %330 = load i32, i32* @target_flags, align 4
  %and825 = and i32 %330, 33554432
  %tobool826 = icmp ne i32 %and825, 0
  %cond827 = select i1 %tobool826, i32 8, i32 4
  %div828 = sdiv i32 %sub824, %cond827
  br label %cond.end.829

cond.end.829:                                     ; preds = %cond.false.816, %cond.true.812
  %cond830 = phi i32 [ %cond815, %cond.true.812 ], [ %div828, %cond.false.816 ]
  br label %cond.end.831

cond.end.831:                                     ; preds = %cond.end.829, %cond.true.805
  %cond832 = phi i32 [ %cond808, %cond.true.805 ], [ %cond830, %cond.end.829 ]
  br label %cond.end.833

cond.end.833:                                     ; preds = %cond.end.831, %lor.end.800
  %cond834 = phi i32 [ %cond801, %lor.end.800 ], [ %cond832, %cond.end.831 ]
  %add835 = add nsw i32 %309, %cond834
  %cmp836 = icmp slt i32 %308, %add835
  br i1 %cmp836, label %if.then.838, label %if.end.839

if.then.838:                                      ; preds = %cond.end.833
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.839:                                       ; preds = %cond.end.833, %cond.end.761, %land.lhs.true.692, %if.end.690
  %331 = load i32, i32* %regno, align 4
  %cmp840 = icmp sge i32 %331, 8
  br i1 %cmp840, label %land.lhs.true.842, label %lor.lhs.false.845

land.lhs.true.842:                                ; preds = %if.end.839
  %332 = load i32, i32* %regno, align 4
  %cmp843 = icmp sle i32 %332, 15
  br i1 %cmp843, label %cond.true.863, label %lor.lhs.false.845

lor.lhs.false.845:                                ; preds = %land.lhs.true.842, %if.end.839
  %333 = load i32, i32* %regno, align 4
  %cmp846 = icmp sge i32 %333, 21
  br i1 %cmp846, label %land.lhs.true.848, label %lor.lhs.false.851

land.lhs.true.848:                                ; preds = %lor.lhs.false.845
  %334 = load i32, i32* %regno, align 4
  %cmp849 = icmp sle i32 %334, 28
  br i1 %cmp849, label %cond.true.863, label %lor.lhs.false.851

lor.lhs.false.851:                                ; preds = %land.lhs.true.848, %lor.lhs.false.845
  %335 = load i32, i32* %regno, align 4
  %cmp852 = icmp sge i32 %335, 45
  br i1 %cmp852, label %land.lhs.true.854, label %lor.lhs.false.857

land.lhs.true.854:                                ; preds = %lor.lhs.false.851
  %336 = load i32, i32* %regno, align 4
  %cmp855 = icmp sle i32 %336, 52
  br i1 %cmp855, label %cond.true.863, label %lor.lhs.false.857

lor.lhs.false.857:                                ; preds = %land.lhs.true.854, %lor.lhs.false.851
  %337 = load i32, i32* %regno, align 4
  %cmp858 = icmp sge i32 %337, 29
  br i1 %cmp858, label %land.lhs.true.860, label %cond.false.875

land.lhs.true.860:                                ; preds = %lor.lhs.false.857
  %338 = load i32, i32* %regno, align 4
  %cmp861 = icmp sle i32 %338, 36
  br i1 %cmp861, label %cond.true.863, label %cond.false.875

cond.true.863:                                    ; preds = %land.lhs.true.860, %land.lhs.true.854, %land.lhs.true.848, %land.lhs.true.842
  %339 = load i32, i32* %mode.addr, align 4
  %idxprom864 = sext i32 %339 to i64
  %arrayidx865 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom864
  %340 = load i32, i32* %arrayidx865, align 4
  %cmp866 = icmp eq i32 %340, 5
  br i1 %cmp866, label %lor.end.873, label %lor.rhs.868

lor.rhs.868:                                      ; preds = %cond.true.863
  %341 = load i32, i32* %mode.addr, align 4
  %idxprom869 = sext i32 %341 to i64
  %arrayidx870 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom869
  %342 = load i32, i32* %arrayidx870, align 4
  %cmp871 = icmp eq i32 %342, 6
  br label %lor.end.873

lor.end.873:                                      ; preds = %lor.rhs.868, %cond.true.863
  %343 = phi i1 [ true, %cond.true.863 ], [ %cmp871, %lor.rhs.868 ]
  %cond874 = select i1 %343, i32 2, i32 1
  br label %cond.end.906

cond.false.875:                                   ; preds = %land.lhs.true.860, %lor.lhs.false.857
  %344 = load i32, i32* %mode.addr, align 4
  %cmp876 = icmp eq i32 %344, 18
  br i1 %cmp876, label %cond.true.878, label %cond.false.882

cond.true.878:                                    ; preds = %cond.false.875
  %345 = load i32, i32* @target_flags, align 4
  %and879 = and i32 %345, 33554432
  %tobool880 = icmp ne i32 %and879, 0
  %cond881 = select i1 %tobool880, i32 2, i32 3
  br label %cond.end.904

cond.false.882:                                   ; preds = %cond.false.875
  %346 = load i32, i32* %mode.addr, align 4
  %cmp883 = icmp eq i32 %346, 24
  br i1 %cmp883, label %cond.true.885, label %cond.false.889

cond.true.885:                                    ; preds = %cond.false.882
  %347 = load i32, i32* @target_flags, align 4
  %and886 = and i32 %347, 33554432
  %tobool887 = icmp ne i32 %and886, 0
  %cond888 = select i1 %tobool887, i32 4, i32 6
  br label %cond.end.902

cond.false.889:                                   ; preds = %cond.false.882
  %348 = load i32, i32* %mode.addr, align 4
  %idxprom890 = sext i32 %348 to i64
  %arrayidx891 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom890
  %349 = load i8, i8* %arrayidx891, align 1
  %conv892 = zext i8 %349 to i32
  %350 = load i32, i32* @target_flags, align 4
  %and893 = and i32 %350, 33554432
  %tobool894 = icmp ne i32 %and893, 0
  %cond895 = select i1 %tobool894, i32 8, i32 4
  %add896 = add nsw i32 %conv892, %cond895
  %sub897 = sub nsw i32 %add896, 1
  %351 = load i32, i32* @target_flags, align 4
  %and898 = and i32 %351, 33554432
  %tobool899 = icmp ne i32 %and898, 0
  %cond900 = select i1 %tobool899, i32 8, i32 4
  %div901 = sdiv i32 %sub897, %cond900
  br label %cond.end.902

cond.end.902:                                     ; preds = %cond.false.889, %cond.true.885
  %cond903 = phi i32 [ %cond888, %cond.true.885 ], [ %div901, %cond.false.889 ]
  br label %cond.end.904

cond.end.904:                                     ; preds = %cond.end.902, %cond.true.878
  %cond905 = phi i32 [ %cond881, %cond.true.878 ], [ %cond903, %cond.end.902 ]
  br label %cond.end.906

cond.end.906:                                     ; preds = %cond.end.904, %lor.end.873
  %cond907 = phi i32 [ %cond874, %lor.end.873 ], [ %cond905, %cond.end.904 ]
  store i32 %cond907, i32* %nregs, align 4
  %352 = load i32, i32* %valueno, align 4
  %cmp908 = icmp sge i32 %352, 8
  br i1 %cmp908, label %land.lhs.true.910, label %lor.lhs.false.913

land.lhs.true.910:                                ; preds = %cond.end.906
  %353 = load i32, i32* %valueno, align 4
  %cmp911 = icmp sle i32 %353, 15
  br i1 %cmp911, label %cond.true.931, label %lor.lhs.false.913

lor.lhs.false.913:                                ; preds = %land.lhs.true.910, %cond.end.906
  %354 = load i32, i32* %valueno, align 4
  %cmp914 = icmp sge i32 %354, 21
  br i1 %cmp914, label %land.lhs.true.916, label %lor.lhs.false.919

land.lhs.true.916:                                ; preds = %lor.lhs.false.913
  %355 = load i32, i32* %valueno, align 4
  %cmp917 = icmp sle i32 %355, 28
  br i1 %cmp917, label %cond.true.931, label %lor.lhs.false.919

lor.lhs.false.919:                                ; preds = %land.lhs.true.916, %lor.lhs.false.913
  %356 = load i32, i32* %valueno, align 4
  %cmp920 = icmp sge i32 %356, 45
  br i1 %cmp920, label %land.lhs.true.922, label %lor.lhs.false.925

land.lhs.true.922:                                ; preds = %lor.lhs.false.919
  %357 = load i32, i32* %valueno, align 4
  %cmp923 = icmp sle i32 %357, 52
  br i1 %cmp923, label %cond.true.931, label %lor.lhs.false.925

lor.lhs.false.925:                                ; preds = %land.lhs.true.922, %lor.lhs.false.919
  %358 = load i32, i32* %valueno, align 4
  %cmp926 = icmp sge i32 %358, 29
  br i1 %cmp926, label %land.lhs.true.928, label %cond.false.943

land.lhs.true.928:                                ; preds = %lor.lhs.false.925
  %359 = load i32, i32* %valueno, align 4
  %cmp929 = icmp sle i32 %359, 36
  br i1 %cmp929, label %cond.true.931, label %cond.false.943

cond.true.931:                                    ; preds = %land.lhs.true.928, %land.lhs.true.922, %land.lhs.true.916, %land.lhs.true.910
  %360 = load i32, i32* %mode.addr, align 4
  %idxprom932 = sext i32 %360 to i64
  %arrayidx933 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom932
  %361 = load i32, i32* %arrayidx933, align 4
  %cmp934 = icmp eq i32 %361, 5
  br i1 %cmp934, label %lor.end.941, label %lor.rhs.936

lor.rhs.936:                                      ; preds = %cond.true.931
  %362 = load i32, i32* %mode.addr, align 4
  %idxprom937 = sext i32 %362 to i64
  %arrayidx938 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom937
  %363 = load i32, i32* %arrayidx938, align 4
  %cmp939 = icmp eq i32 %363, 6
  br label %lor.end.941

lor.end.941:                                      ; preds = %lor.rhs.936, %cond.true.931
  %364 = phi i1 [ true, %cond.true.931 ], [ %cmp939, %lor.rhs.936 ]
  %cond942 = select i1 %364, i32 2, i32 1
  br label %cond.end.974

cond.false.943:                                   ; preds = %land.lhs.true.928, %lor.lhs.false.925
  %365 = load i32, i32* %mode.addr, align 4
  %cmp944 = icmp eq i32 %365, 18
  br i1 %cmp944, label %cond.true.946, label %cond.false.950

cond.true.946:                                    ; preds = %cond.false.943
  %366 = load i32, i32* @target_flags, align 4
  %and947 = and i32 %366, 33554432
  %tobool948 = icmp ne i32 %and947, 0
  %cond949 = select i1 %tobool948, i32 2, i32 3
  br label %cond.end.972

cond.false.950:                                   ; preds = %cond.false.943
  %367 = load i32, i32* %mode.addr, align 4
  %cmp951 = icmp eq i32 %367, 24
  br i1 %cmp951, label %cond.true.953, label %cond.false.957

cond.true.953:                                    ; preds = %cond.false.950
  %368 = load i32, i32* @target_flags, align 4
  %and954 = and i32 %368, 33554432
  %tobool955 = icmp ne i32 %and954, 0
  %cond956 = select i1 %tobool955, i32 4, i32 6
  br label %cond.end.970

cond.false.957:                                   ; preds = %cond.false.950
  %369 = load i32, i32* %mode.addr, align 4
  %idxprom958 = sext i32 %369 to i64
  %arrayidx959 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom958
  %370 = load i8, i8* %arrayidx959, align 1
  %conv960 = zext i8 %370 to i32
  %371 = load i32, i32* @target_flags, align 4
  %and961 = and i32 %371, 33554432
  %tobool962 = icmp ne i32 %and961, 0
  %cond963 = select i1 %tobool962, i32 8, i32 4
  %add964 = add nsw i32 %conv960, %cond963
  %sub965 = sub nsw i32 %add964, 1
  %372 = load i32, i32* @target_flags, align 4
  %and966 = and i32 %372, 33554432
  %tobool967 = icmp ne i32 %and966, 0
  %cond968 = select i1 %tobool967, i32 8, i32 4
  %div969 = sdiv i32 %sub965, %cond968
  br label %cond.end.970

cond.end.970:                                     ; preds = %cond.false.957, %cond.true.953
  %cond971 = phi i32 [ %cond956, %cond.true.953 ], [ %div969, %cond.false.957 ]
  br label %cond.end.972

cond.end.972:                                     ; preds = %cond.end.970, %cond.true.946
  %cond973 = phi i32 [ %cond949, %cond.true.946 ], [ %cond971, %cond.end.970 ]
  br label %cond.end.974

cond.end.974:                                     ; preds = %cond.end.972, %lor.end.941
  %cond975 = phi i32 [ %cond942, %lor.end.941 ], [ %cond973, %cond.end.972 ]
  store i32 %cond975, i32* %valuenregs, align 4
  %373 = load i16*, i16** %reload_reg_p.addr, align 8
  %cmp976 = icmp ne i16* %373, null
  br i1 %cmp976, label %land.lhs.true.978, label %if.end.997

land.lhs.true.978:                                ; preds = %cond.end.974
  %374 = load i16*, i16** %reload_reg_p.addr, align 8
  %cmp979 = icmp ne i16* %374, inttoptr (i64 1 to i16*)
  br i1 %cmp979, label %if.then.981, label %if.end.997

if.then.981:                                      ; preds = %land.lhs.true.978
  store i32 0, i32* %i982, align 4
  br label %for.cond.983

for.cond.983:                                     ; preds = %for.inc.995, %if.then.981
  %375 = load i32, i32* %i982, align 4
  %376 = load i32, i32* %valuenregs, align 4
  %cmp984 = icmp slt i32 %375, %376
  br i1 %cmp984, label %for.body.986, label %for.end.996

for.body.986:                                     ; preds = %for.cond.983
  %377 = load i32, i32* %valueno, align 4
  %378 = load i32, i32* %i982, align 4
  %add987 = add nsw i32 %377, %378
  %idxprom988 = sext i32 %add987 to i64
  %379 = load i16*, i16** %reload_reg_p.addr, align 8
  %arrayidx989 = getelementptr inbounds i16, i16* %379, i64 %idxprom988
  %380 = load i16, i16* %arrayidx989, align 2
  %conv990 = sext i16 %380 to i32
  %cmp991 = icmp sge i32 %conv990, 0
  br i1 %cmp991, label %if.then.993, label %if.end.994

if.then.993:                                      ; preds = %for.body.986
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.994:                                       ; preds = %for.body.986
  br label %for.inc.995

for.inc.995:                                      ; preds = %if.end.994
  %381 = load i32, i32* %i982, align 4
  %inc = add nsw i32 %381, 1
  store i32 %inc, i32* %i982, align 4
  br label %for.cond.983

for.end.996:                                      ; preds = %for.cond.983
  br label %if.end.997

if.end.997:                                       ; preds = %for.end.996, %land.lhs.true.978, %cond.end.974
  %382 = load i16*, i16** %reload_reg_p.addr, align 8
  %cmp998 = icmp ne i16* %382, null
  br i1 %cmp998, label %if.then.1000, label %if.end.1132

if.then.1000:                                     ; preds = %if.end.997
  store i32 0, i32* %i1001, align 4
  br label %for.cond.1002

for.cond.1002:                                    ; preds = %for.inc.1129, %if.then.1000
  %383 = load i32, i32* %i1001, align 4
  %384 = load i32, i32* @n_reloads, align 4
  %cmp1003 = icmp slt i32 %383, %384
  br i1 %cmp1003, label %for.body.1005, label %for.end.1131

for.body.1005:                                    ; preds = %for.cond.1002
  %385 = load i32, i32* %i1001, align 4
  %idxprom1006 = sext i32 %385 to i64
  %arrayidx1007 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1006
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1007, i32 0, i32 11
  %386 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %cmp1008 = icmp ne %struct.rtx_def* %386, null
  br i1 %cmp1008, label %land.lhs.true.1010, label %if.end.1128

land.lhs.true.1010:                               ; preds = %for.body.1005
  %387 = load i32, i32* %i1001, align 4
  %idxprom1011 = sext i32 %387 to i64
  %arrayidx1012 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1011
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1012, i32 0, i32 0
  %388 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %tobool1013 = icmp ne %struct.rtx_def* %388, null
  br i1 %tobool1013, label %if.then.1014, label %if.end.1128

if.then.1014:                                     ; preds = %land.lhs.true.1010
  %389 = load i32, i32* %i1001, align 4
  %idxprom1015 = sext i32 %389 to i64
  %arrayidx1016 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1015
  %reg_rtx1017 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1016, i32 0, i32 11
  %390 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1017, align 8
  %fld1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %390, i32 0, i32 1
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i32 0, i64 0
  %rtuint1020 = bitcast %union.rtunion_def* %arrayidx1019 to i32*
  %391 = load i32, i32* %rtuint1020, align 4
  store i32 %391, i32* %regno1, align 4
  %392 = load i32, i32* %regno1, align 4
  %cmp1021 = icmp sge i32 %392, 8
  br i1 %cmp1021, label %land.lhs.true.1023, label %lor.lhs.false.1026

land.lhs.true.1023:                               ; preds = %if.then.1014
  %393 = load i32, i32* %regno1, align 4
  %cmp1024 = icmp sle i32 %393, 15
  br i1 %cmp1024, label %cond.true.1044, label %lor.lhs.false.1026

lor.lhs.false.1026:                               ; preds = %land.lhs.true.1023, %if.then.1014
  %394 = load i32, i32* %regno1, align 4
  %cmp1027 = icmp sge i32 %394, 21
  br i1 %cmp1027, label %land.lhs.true.1029, label %lor.lhs.false.1032

land.lhs.true.1029:                               ; preds = %lor.lhs.false.1026
  %395 = load i32, i32* %regno1, align 4
  %cmp1030 = icmp sle i32 %395, 28
  br i1 %cmp1030, label %cond.true.1044, label %lor.lhs.false.1032

lor.lhs.false.1032:                               ; preds = %land.lhs.true.1029, %lor.lhs.false.1026
  %396 = load i32, i32* %regno1, align 4
  %cmp1033 = icmp sge i32 %396, 45
  br i1 %cmp1033, label %land.lhs.true.1035, label %lor.lhs.false.1038

land.lhs.true.1035:                               ; preds = %lor.lhs.false.1032
  %397 = load i32, i32* %regno1, align 4
  %cmp1036 = icmp sle i32 %397, 52
  br i1 %cmp1036, label %cond.true.1044, label %lor.lhs.false.1038

lor.lhs.false.1038:                               ; preds = %land.lhs.true.1035, %lor.lhs.false.1032
  %398 = load i32, i32* %regno1, align 4
  %cmp1039 = icmp sge i32 %398, 29
  br i1 %cmp1039, label %land.lhs.true.1041, label %cond.false.1068

land.lhs.true.1041:                               ; preds = %lor.lhs.false.1038
  %399 = load i32, i32* %regno1, align 4
  %cmp1042 = icmp sle i32 %399, 36
  br i1 %cmp1042, label %cond.true.1044, label %cond.false.1068

cond.true.1044:                                   ; preds = %land.lhs.true.1041, %land.lhs.true.1035, %land.lhs.true.1029, %land.lhs.true.1023
  %400 = load i32, i32* %i1001, align 4
  %idxprom1045 = sext i32 %400 to i64
  %arrayidx1046 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1045
  %reg_rtx1047 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1046, i32 0, i32 11
  %401 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1047, align 8
  %402 = bitcast %struct.rtx_def* %401 to i32*
  %bf.load1048 = load i32, i32* %402, align 8
  %bf.lshr1049 = lshr i32 %bf.load1048, 16
  %bf.clear1050 = and i32 %bf.lshr1049, 255
  %idxprom1051 = sext i32 %bf.clear1050 to i64
  %arrayidx1052 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1051
  %403 = load i32, i32* %arrayidx1052, align 4
  %cmp1053 = icmp eq i32 %403, 5
  br i1 %cmp1053, label %lor.end.1066, label %lor.rhs.1055

lor.rhs.1055:                                     ; preds = %cond.true.1044
  %404 = load i32, i32* %i1001, align 4
  %idxprom1056 = sext i32 %404 to i64
  %arrayidx1057 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1056
  %reg_rtx1058 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1057, i32 0, i32 11
  %405 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1058, align 8
  %406 = bitcast %struct.rtx_def* %405 to i32*
  %bf.load1059 = load i32, i32* %406, align 8
  %bf.lshr1060 = lshr i32 %bf.load1059, 16
  %bf.clear1061 = and i32 %bf.lshr1060, 255
  %idxprom1062 = sext i32 %bf.clear1061 to i64
  %arrayidx1063 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1062
  %407 = load i32, i32* %arrayidx1063, align 4
  %cmp1064 = icmp eq i32 %407, 6
  br label %lor.end.1066

lor.end.1066:                                     ; preds = %lor.rhs.1055, %cond.true.1044
  %408 = phi i1 [ true, %cond.true.1044 ], [ %cmp1064, %lor.rhs.1055 ]
  %cond1067 = select i1 %408, i32 2, i32 1
  br label %cond.end.1117

cond.false.1068:                                  ; preds = %land.lhs.true.1041, %lor.lhs.false.1038
  %409 = load i32, i32* %i1001, align 4
  %idxprom1069 = sext i32 %409 to i64
  %arrayidx1070 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1069
  %reg_rtx1071 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1070, i32 0, i32 11
  %410 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1071, align 8
  %411 = bitcast %struct.rtx_def* %410 to i32*
  %bf.load1072 = load i32, i32* %411, align 8
  %bf.lshr1073 = lshr i32 %bf.load1072, 16
  %bf.clear1074 = and i32 %bf.lshr1073, 255
  %cmp1075 = icmp eq i32 %bf.clear1074, 18
  br i1 %cmp1075, label %cond.true.1077, label %cond.false.1081

cond.true.1077:                                   ; preds = %cond.false.1068
  %412 = load i32, i32* @target_flags, align 4
  %and1078 = and i32 %412, 33554432
  %tobool1079 = icmp ne i32 %and1078, 0
  %cond1080 = select i1 %tobool1079, i32 2, i32 3
  br label %cond.end.1115

cond.false.1081:                                  ; preds = %cond.false.1068
  %413 = load i32, i32* %i1001, align 4
  %idxprom1082 = sext i32 %413 to i64
  %arrayidx1083 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1082
  %reg_rtx1084 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1083, i32 0, i32 11
  %414 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1084, align 8
  %415 = bitcast %struct.rtx_def* %414 to i32*
  %bf.load1085 = load i32, i32* %415, align 8
  %bf.lshr1086 = lshr i32 %bf.load1085, 16
  %bf.clear1087 = and i32 %bf.lshr1086, 255
  %cmp1088 = icmp eq i32 %bf.clear1087, 24
  br i1 %cmp1088, label %cond.true.1090, label %cond.false.1094

cond.true.1090:                                   ; preds = %cond.false.1081
  %416 = load i32, i32* @target_flags, align 4
  %and1091 = and i32 %416, 33554432
  %tobool1092 = icmp ne i32 %and1091, 0
  %cond1093 = select i1 %tobool1092, i32 4, i32 6
  br label %cond.end.1113

cond.false.1094:                                  ; preds = %cond.false.1081
  %417 = load i32, i32* %i1001, align 4
  %idxprom1095 = sext i32 %417 to i64
  %arrayidx1096 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1095
  %reg_rtx1097 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1096, i32 0, i32 11
  %418 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1097, align 8
  %419 = bitcast %struct.rtx_def* %418 to i32*
  %bf.load1098 = load i32, i32* %419, align 8
  %bf.lshr1099 = lshr i32 %bf.load1098, 16
  %bf.clear1100 = and i32 %bf.lshr1099, 255
  %idxprom1101 = sext i32 %bf.clear1100 to i64
  %arrayidx1102 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1101
  %420 = load i8, i8* %arrayidx1102, align 1
  %conv1103 = zext i8 %420 to i32
  %421 = load i32, i32* @target_flags, align 4
  %and1104 = and i32 %421, 33554432
  %tobool1105 = icmp ne i32 %and1104, 0
  %cond1106 = select i1 %tobool1105, i32 8, i32 4
  %add1107 = add nsw i32 %conv1103, %cond1106
  %sub1108 = sub nsw i32 %add1107, 1
  %422 = load i32, i32* @target_flags, align 4
  %and1109 = and i32 %422, 33554432
  %tobool1110 = icmp ne i32 %and1109, 0
  %cond1111 = select i1 %tobool1110, i32 8, i32 4
  %div1112 = sdiv i32 %sub1108, %cond1111
  br label %cond.end.1113

cond.end.1113:                                    ; preds = %cond.false.1094, %cond.true.1090
  %cond1114 = phi i32 [ %cond1093, %cond.true.1090 ], [ %div1112, %cond.false.1094 ]
  br label %cond.end.1115

cond.end.1115:                                    ; preds = %cond.end.1113, %cond.true.1077
  %cond1116 = phi i32 [ %cond1080, %cond.true.1077 ], [ %cond1114, %cond.end.1113 ]
  br label %cond.end.1117

cond.end.1117:                                    ; preds = %cond.end.1115, %lor.end.1066
  %cond1118 = phi i32 [ %cond1067, %lor.end.1066 ], [ %cond1116, %cond.end.1115 ]
  store i32 %cond1118, i32* %nregs1, align 4
  %423 = load i32, i32* %regno1, align 4
  %424 = load i32, i32* %valueno, align 4
  %425 = load i32, i32* %valuenregs, align 4
  %add1119 = add nsw i32 %424, %425
  %cmp1120 = icmp slt i32 %423, %add1119
  br i1 %cmp1120, label %land.lhs.true.1122, label %if.end.1127

land.lhs.true.1122:                               ; preds = %cond.end.1117
  %426 = load i32, i32* %regno1, align 4
  %427 = load i32, i32* %nregs1, align 4
  %add1123 = add nsw i32 %426, %427
  %428 = load i32, i32* %valueno, align 4
  %cmp1124 = icmp sgt i32 %add1123, %428
  br i1 %cmp1124, label %if.then.1126, label %if.end.1127

if.then.1126:                                     ; preds = %land.lhs.true.1122
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1127:                                      ; preds = %land.lhs.true.1122, %cond.end.1117
  br label %if.end.1128

if.end.1128:                                      ; preds = %if.end.1127, %land.lhs.true.1010, %for.body.1005
  br label %for.inc.1129

for.inc.1129:                                     ; preds = %if.end.1128
  %429 = load i32, i32* %i1001, align 4
  %inc1130 = add nsw i32 %429, 1
  store i32 %inc1130, i32* %i1001, align 4
  br label %for.cond.1002

for.end.1131:                                     ; preds = %for.cond.1002
  br label %if.end.1132

if.end.1132:                                      ; preds = %for.end.1131, %if.end.997
  %430 = load i32, i32* %goal_mem, align 4
  %tobool1133 = icmp ne i32 %430, 0
  br i1 %tobool1133, label %if.then.1134, label %if.end.1175

if.then.1134:                                     ; preds = %if.end.1132
  %431 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld1135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %arrayidx1136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1135, i32 0, i64 0
  %rtx1137 = bitcast %union.rtunion_def* %arrayidx1136 to %struct.rtx_def**
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rtx1137, align 8
  %433 = bitcast %struct.rtx_def* %432 to i32*
  %bf.load1138 = load i32, i32* %433, align 8
  %bf.clear1139 = and i32 %bf.load1138, 65535
  %cmp1140 = icmp eq i32 %bf.clear1139, 67
  br i1 %cmp1140, label %lor.end.1174, label %lor.lhs.false.1142

lor.lhs.false.1142:                               ; preds = %if.then.1134
  %434 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld1143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %434, i32 0, i32 1
  %arrayidx1144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1143, i32 0, i64 0
  %rtx1145 = bitcast %union.rtunion_def* %arrayidx1144 to %struct.rtx_def**
  %435 = load %struct.rtx_def*, %struct.rtx_def** %rtx1145, align 8
  %436 = bitcast %struct.rtx_def* %435 to i32*
  %bf.load1146 = load i32, i32* %436, align 8
  %bf.clear1147 = and i32 %bf.load1146, 65535
  %cmp1148 = icmp eq i32 %bf.clear1147, 68
  br i1 %cmp1148, label %lor.end.1174, label %lor.lhs.false.1150

lor.lhs.false.1150:                               ; preds = %lor.lhs.false.1142
  %437 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld1151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %437, i32 0, i32 1
  %arrayidx1152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1151, i32 0, i64 0
  %rtx1153 = bitcast %union.rtunion_def* %arrayidx1152 to %struct.rtx_def**
  %438 = load %struct.rtx_def*, %struct.rtx_def** %rtx1153, align 8
  %439 = bitcast %struct.rtx_def* %438 to i32*
  %bf.load1154 = load i32, i32* %439, align 8
  %bf.clear1155 = and i32 %bf.load1154, 65535
  %cmp1156 = icmp eq i32 %bf.clear1155, 54
  br i1 %cmp1156, label %lor.end.1174, label %lor.lhs.false.1158

lor.lhs.false.1158:                               ; preds = %lor.lhs.false.1150
  %440 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld1159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %440, i32 0, i32 1
  %arrayidx1160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1159, i32 0, i64 0
  %rtx1161 = bitcast %union.rtunion_def* %arrayidx1160 to %struct.rtx_def**
  %441 = load %struct.rtx_def*, %struct.rtx_def** %rtx1161, align 8
  %442 = bitcast %struct.rtx_def* %441 to i32*
  %bf.load1162 = load i32, i32* %442, align 8
  %bf.clear1163 = and i32 %bf.load1162, 65535
  %cmp1164 = icmp eq i32 %bf.clear1163, 58
  br i1 %cmp1164, label %lor.end.1174, label %lor.rhs.1166

lor.rhs.1166:                                     ; preds = %lor.lhs.false.1158
  %443 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %fld1167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1
  %arrayidx1168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1167, i32 0, i64 0
  %rtx1169 = bitcast %union.rtunion_def* %arrayidx1168 to %struct.rtx_def**
  %444 = load %struct.rtx_def*, %struct.rtx_def** %rtx1169, align 8
  %445 = bitcast %struct.rtx_def* %444 to i32*
  %bf.load1170 = load i32, i32* %445, align 8
  %bf.clear1171 = and i32 %bf.load1170, 65535
  %cmp1172 = icmp eq i32 %bf.clear1171, 55
  br label %lor.end.1174

lor.end.1174:                                     ; preds = %lor.rhs.1166, %lor.lhs.false.1158, %lor.lhs.false.1150, %lor.lhs.false.1142, %if.then.1134
  %446 = phi i1 [ true, %lor.lhs.false.1158 ], [ true, %lor.lhs.false.1150 ], [ true, %lor.lhs.false.1142 ], [ true, %if.then.1134 ], [ %cmp1172, %lor.rhs.1166 ]
  %lnot = xor i1 %446, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %goal_mem_addr_varies, align 4
  br label %if.end.1175

if.end.1175:                                      ; preds = %lor.end.1174, %if.end.1132
  %447 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %447, %struct.rtx_def** %p, align 8
  br label %while.body.1176

while.body.1176:                                  ; preds = %if.end.1175, %if.end.1899
  %448 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld1177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1
  %arrayidx1178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1177, i32 0, i64 1
  %rtx1179 = bitcast %union.rtunion_def* %arrayidx1178 to %struct.rtx_def**
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rtx1179, align 8
  store %struct.rtx_def* %449, %struct.rtx_def** %p, align 8
  %450 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %451 = load %struct.rtx_def*, %struct.rtx_def** %where, align 8
  %cmp1180 = icmp eq %struct.rtx_def* %450, %451
  br i1 %cmp1180, label %if.then.1182, label %if.end.1183

if.then.1182:                                     ; preds = %while.body.1176
  %452 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  store %struct.rtx_def* %452, %struct.rtx_def** %retval
  br label %return

if.end.1183:                                      ; preds = %while.body.1176
  %453 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %454 = bitcast %struct.rtx_def* %453 to i32*
  %bf.load1184 = load i32, i32* %454, align 8
  %bf.clear1185 = and i32 %bf.load1184, 65535
  %cmp1186 = icmp eq i32 %bf.clear1185, 34
  br i1 %cmp1186, label %if.then.1188, label %if.end.1235

if.then.1188:                                     ; preds = %if.end.1183
  %455 = load i32, i32* %goal_mem, align 4
  %tobool1190 = icmp ne i32 %455, 0
  br i1 %tobool1190, label %if.then.1193, label %lor.lhs.false.1191

lor.lhs.false.1191:                               ; preds = %if.then.1188
  %456 = load i32, i32* %need_stable_sp, align 4
  %tobool1192 = icmp ne i32 %456, 0
  br i1 %tobool1192, label %if.then.1193, label %if.end.1194

if.then.1193:                                     ; preds = %lor.lhs.false.1191, %if.then.1188
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1194:                                      ; preds = %lor.lhs.false.1191
  %457 = load i32, i32* %regno, align 4
  %cmp1195 = icmp sge i32 %457, 0
  br i1 %cmp1195, label %land.lhs.true.1197, label %if.end.1214

land.lhs.true.1197:                               ; preds = %if.end.1194
  %458 = load i32, i32* %regno, align 4
  %cmp1198 = icmp slt i32 %458, 53
  br i1 %cmp1198, label %if.then.1200, label %if.end.1214

if.then.1200:                                     ; preds = %land.lhs.true.1197
  store i32 0, i32* %i1189, align 4
  br label %for.cond.1201

for.cond.1201:                                    ; preds = %for.inc.1211, %if.then.1200
  %459 = load i32, i32* %i1189, align 4
  %460 = load i32, i32* %nregs, align 4
  %cmp1202 = icmp slt i32 %459, %460
  br i1 %cmp1202, label %for.body.1204, label %for.end.1213

for.body.1204:                                    ; preds = %for.cond.1201
  %461 = load i32, i32* %regno, align 4
  %462 = load i32, i32* %i1189, align 4
  %add1205 = add nsw i32 %461, %462
  %idxprom1206 = sext i32 %add1205 to i64
  %arrayidx1207 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom1206
  %463 = load i8, i8* %arrayidx1207, align 1
  %tobool1208 = icmp ne i8 %463, 0
  br i1 %tobool1208, label %if.then.1209, label %if.end.1210

if.then.1209:                                     ; preds = %for.body.1204
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1210:                                      ; preds = %for.body.1204
  br label %for.inc.1211

for.inc.1211:                                     ; preds = %if.end.1210
  %464 = load i32, i32* %i1189, align 4
  %inc1212 = add nsw i32 %464, 1
  store i32 %inc1212, i32* %i1189, align 4
  br label %for.cond.1201

for.end.1213:                                     ; preds = %for.cond.1201
  br label %if.end.1214

if.end.1214:                                      ; preds = %for.end.1213, %land.lhs.true.1197, %if.end.1194
  %465 = load i32, i32* %valueno, align 4
  %cmp1215 = icmp sge i32 %465, 0
  br i1 %cmp1215, label %land.lhs.true.1217, label %if.end.1234

land.lhs.true.1217:                               ; preds = %if.end.1214
  %466 = load i32, i32* %valueno, align 4
  %cmp1218 = icmp slt i32 %466, 53
  br i1 %cmp1218, label %if.then.1220, label %if.end.1234

if.then.1220:                                     ; preds = %land.lhs.true.1217
  store i32 0, i32* %i1189, align 4
  br label %for.cond.1221

for.cond.1221:                                    ; preds = %for.inc.1231, %if.then.1220
  %467 = load i32, i32* %i1189, align 4
  %468 = load i32, i32* %valuenregs, align 4
  %cmp1222 = icmp slt i32 %467, %468
  br i1 %cmp1222, label %for.body.1224, label %for.end.1233

for.body.1224:                                    ; preds = %for.cond.1221
  %469 = load i32, i32* %valueno, align 4
  %470 = load i32, i32* %i1189, align 4
  %add1225 = add nsw i32 %469, %470
  %idxprom1226 = sext i32 %add1225 to i64
  %arrayidx1227 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i32 0, i64 %idxprom1226
  %471 = load i8, i8* %arrayidx1227, align 1
  %tobool1228 = icmp ne i8 %471, 0
  br i1 %tobool1228, label %if.then.1229, label %if.end.1230

if.then.1229:                                     ; preds = %for.body.1224
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1230:                                      ; preds = %for.body.1224
  br label %for.inc.1231

for.inc.1231:                                     ; preds = %if.end.1230
  %472 = load i32, i32* %i1189, align 4
  %inc1232 = add nsw i32 %472, 1
  store i32 %inc1232, i32* %i1189, align 4
  br label %for.cond.1221

for.end.1233:                                     ; preds = %for.cond.1221
  br label %if.end.1234

if.end.1234:                                      ; preds = %for.end.1233, %land.lhs.true.1217, %if.end.1214
  br label %if.end.1235

if.end.1235:                                      ; preds = %if.end.1234, %if.end.1183
  %473 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %474 = bitcast %struct.rtx_def* %473 to i32*
  %bf.load1236 = load i32, i32* %474, align 8
  %bf.clear1237 = and i32 %bf.load1236, 65535
  %idxprom1238 = sext i32 %bf.clear1237 to i64
  %arrayidx1239 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1238
  %475 = load i8, i8* %arrayidx1239, align 1
  %conv1240 = sext i8 %475 to i32
  %cmp1241 = icmp eq i32 %conv1240, 105
  br i1 %cmp1241, label %if.then.1243, label %if.end.1899

if.then.1243:                                     ; preds = %if.end.1235
  %476 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld1244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %476, i32 0, i32 1
  %arrayidx1245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1244, i32 0, i64 3
  %rtx1246 = bitcast %union.rtunion_def* %arrayidx1245 to %struct.rtx_def**
  %477 = load %struct.rtx_def*, %struct.rtx_def** %rtx1246, align 8
  store %struct.rtx_def* %477, %struct.rtx_def** %pat, align 8
  %478 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %call1247 = call i32 @volatile_insn_p(%struct.rtx_def* %478)
  %tobool1248 = icmp ne i32 %call1247, 0
  br i1 %tobool1248, label %if.then.1249, label %if.end.1250

if.then.1249:                                     ; preds = %if.then.1243
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1250:                                      ; preds = %if.then.1243
  %479 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %480 = bitcast %struct.rtx_def* %479 to i32*
  %bf.load1251 = load i32, i32* %480, align 8
  %bf.clear1252 = and i32 %bf.load1251, 65535
  %cmp1253 = icmp eq i32 %bf.clear1252, 38
  br i1 %cmp1253, label %if.then.1255, label %if.end.1259

if.then.1255:                                     ; preds = %if.end.1250
  %481 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld1256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1
  %arrayidx1257 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1256, i32 0, i64 1
  %rtx1258 = bitcast %union.rtunion_def* %arrayidx1257 to %struct.rtx_def**
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rtx1258, align 8
  store %struct.rtx_def* %482, %struct.rtx_def** %pat, align 8
  br label %if.end.1259

if.end.1259:                                      ; preds = %if.then.1255, %if.end.1250
  %483 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %484 = bitcast %struct.rtx_def* %483 to i32*
  %bf.load1260 = load i32, i32* %484, align 8
  %bf.clear1261 = and i32 %bf.load1260, 65535
  %cmp1262 = icmp eq i32 %bf.clear1261, 47
  br i1 %cmp1262, label %if.then.1269, label %lor.lhs.false.1264

lor.lhs.false.1264:                               ; preds = %if.end.1259
  %485 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %486 = bitcast %struct.rtx_def* %485 to i32*
  %bf.load1265 = load i32, i32* %486, align 8
  %bf.clear1266 = and i32 %bf.load1265, 65535
  %cmp1267 = icmp eq i32 %bf.clear1266, 49
  br i1 %cmp1267, label %if.then.1269, label %if.else.1469

if.then.1269:                                     ; preds = %lor.lhs.false.1264, %if.end.1259
  %487 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld1270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %487, i32 0, i32 1
  %arrayidx1271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1270, i32 0, i64 0
  %rtx1272 = bitcast %union.rtunion_def* %arrayidx1271 to %struct.rtx_def**
  %488 = load %struct.rtx_def*, %struct.rtx_def** %rtx1272, align 8
  store %struct.rtx_def* %488, %struct.rtx_def** %dest, align 8
  br label %while.cond.1273

while.cond.1273:                                  ; preds = %while.body.1294, %if.then.1269
  %489 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %490 = bitcast %struct.rtx_def* %489 to i32*
  %bf.load1274 = load i32, i32* %490, align 8
  %bf.clear1275 = and i32 %bf.load1274, 65535
  %cmp1276 = icmp eq i32 %bf.clear1275, 63
  br i1 %cmp1276, label %lor.end.1293, label %lor.lhs.false.1278

lor.lhs.false.1278:                               ; preds = %while.cond.1273
  %491 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %492 = bitcast %struct.rtx_def* %491 to i32*
  %bf.load1279 = load i32, i32* %492, align 8
  %bf.clear1280 = and i32 %bf.load1279, 65535
  %cmp1281 = icmp eq i32 %bf.clear1280, 133
  br i1 %cmp1281, label %lor.end.1293, label %lor.lhs.false.1283

lor.lhs.false.1283:                               ; preds = %lor.lhs.false.1278
  %493 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %494 = bitcast %struct.rtx_def* %493 to i32*
  %bf.load1284 = load i32, i32* %494, align 8
  %bf.clear1285 = and i32 %bf.load1284, 65535
  %cmp1286 = icmp eq i32 %bf.clear1285, 132
  br i1 %cmp1286, label %lor.end.1293, label %lor.rhs.1288

lor.rhs.1288:                                     ; preds = %lor.lhs.false.1283
  %495 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %496 = bitcast %struct.rtx_def* %495 to i32*
  %bf.load1289 = load i32, i32* %496, align 8
  %bf.clear1290 = and i32 %bf.load1289, 65535
  %cmp1291 = icmp eq i32 %bf.clear1290, 64
  br label %lor.end.1293

lor.end.1293:                                     ; preds = %lor.rhs.1288, %lor.lhs.false.1283, %lor.lhs.false.1278, %while.cond.1273
  %497 = phi i1 [ true, %lor.lhs.false.1283 ], [ true, %lor.lhs.false.1278 ], [ true, %while.cond.1273 ], [ %cmp1291, %lor.rhs.1288 ]
  br i1 %497, label %while.body.1294, label %while.end.1298

while.body.1294:                                  ; preds = %lor.end.1293
  %498 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld1295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %498, i32 0, i32 1
  %arrayidx1296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1295, i32 0, i64 0
  %rtx1297 = bitcast %union.rtunion_def* %arrayidx1296 to %struct.rtx_def**
  %499 = load %struct.rtx_def*, %struct.rtx_def** %rtx1297, align 8
  store %struct.rtx_def* %499, %struct.rtx_def** %dest, align 8
  br label %while.cond.1273

while.end.1298:                                   ; preds = %lor.end.1293
  %500 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %501 = bitcast %struct.rtx_def* %500 to i32*
  %bf.load1299 = load i32, i32* %501, align 8
  %bf.clear1300 = and i32 %bf.load1299, 65535
  %cmp1301 = icmp eq i32 %bf.clear1300, 61
  br i1 %cmp1301, label %if.then.1303, label %if.else.1428

if.then.1303:                                     ; preds = %while.end.1298
  %502 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld1304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1
  %arrayidx1305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1304, i32 0, i64 0
  %rtuint1306 = bitcast %union.rtunion_def* %arrayidx1305 to i32*
  %503 = load i32, i32* %rtuint1306, align 4
  store i32 %503, i32* %xregno, align 4
  %504 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld1307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %504, i32 0, i32 1
  %arrayidx1308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1307, i32 0, i64 0
  %rtuint1309 = bitcast %union.rtunion_def* %arrayidx1308 to i32*
  %505 = load i32, i32* %rtuint1309, align 4
  %cmp1310 = icmp ult i32 %505, 53
  br i1 %cmp1310, label %if.then.1312, label %if.else.1396

if.then.1312:                                     ; preds = %if.then.1303
  %506 = load i32, i32* %xregno, align 4
  %cmp1313 = icmp sge i32 %506, 8
  br i1 %cmp1313, label %land.lhs.true.1315, label %lor.lhs.false.1318

land.lhs.true.1315:                               ; preds = %if.then.1312
  %507 = load i32, i32* %xregno, align 4
  %cmp1316 = icmp sle i32 %507, 15
  br i1 %cmp1316, label %cond.true.1336, label %lor.lhs.false.1318

lor.lhs.false.1318:                               ; preds = %land.lhs.true.1315, %if.then.1312
  %508 = load i32, i32* %xregno, align 4
  %cmp1319 = icmp sge i32 %508, 21
  br i1 %cmp1319, label %land.lhs.true.1321, label %lor.lhs.false.1324

land.lhs.true.1321:                               ; preds = %lor.lhs.false.1318
  %509 = load i32, i32* %xregno, align 4
  %cmp1322 = icmp sle i32 %509, 28
  br i1 %cmp1322, label %cond.true.1336, label %lor.lhs.false.1324

lor.lhs.false.1324:                               ; preds = %land.lhs.true.1321, %lor.lhs.false.1318
  %510 = load i32, i32* %xregno, align 4
  %cmp1325 = icmp sge i32 %510, 45
  br i1 %cmp1325, label %land.lhs.true.1327, label %lor.lhs.false.1330

land.lhs.true.1327:                               ; preds = %lor.lhs.false.1324
  %511 = load i32, i32* %xregno, align 4
  %cmp1328 = icmp sle i32 %511, 52
  br i1 %cmp1328, label %cond.true.1336, label %lor.lhs.false.1330

lor.lhs.false.1330:                               ; preds = %land.lhs.true.1327, %lor.lhs.false.1324
  %512 = load i32, i32* %xregno, align 4
  %cmp1331 = icmp sge i32 %512, 29
  br i1 %cmp1331, label %land.lhs.true.1333, label %cond.false.1354

land.lhs.true.1333:                               ; preds = %lor.lhs.false.1330
  %513 = load i32, i32* %xregno, align 4
  %cmp1334 = icmp sle i32 %513, 36
  br i1 %cmp1334, label %cond.true.1336, label %cond.false.1354

cond.true.1336:                                   ; preds = %land.lhs.true.1333, %land.lhs.true.1327, %land.lhs.true.1321, %land.lhs.true.1315
  %514 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %515 = bitcast %struct.rtx_def* %514 to i32*
  %bf.load1337 = load i32, i32* %515, align 8
  %bf.lshr1338 = lshr i32 %bf.load1337, 16
  %bf.clear1339 = and i32 %bf.lshr1338, 255
  %idxprom1340 = sext i32 %bf.clear1339 to i64
  %arrayidx1341 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1340
  %516 = load i32, i32* %arrayidx1341, align 4
  %cmp1342 = icmp eq i32 %516, 5
  br i1 %cmp1342, label %lor.end.1352, label %lor.rhs.1344

lor.rhs.1344:                                     ; preds = %cond.true.1336
  %517 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %518 = bitcast %struct.rtx_def* %517 to i32*
  %bf.load1345 = load i32, i32* %518, align 8
  %bf.lshr1346 = lshr i32 %bf.load1345, 16
  %bf.clear1347 = and i32 %bf.lshr1346, 255
  %idxprom1348 = sext i32 %bf.clear1347 to i64
  %arrayidx1349 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1348
  %519 = load i32, i32* %arrayidx1349, align 4
  %cmp1350 = icmp eq i32 %519, 6
  br label %lor.end.1352

lor.end.1352:                                     ; preds = %lor.rhs.1344, %cond.true.1336
  %520 = phi i1 [ true, %cond.true.1336 ], [ %cmp1350, %lor.rhs.1344 ]
  %cond1353 = select i1 %520, i32 2, i32 1
  br label %cond.end.1394

cond.false.1354:                                  ; preds = %land.lhs.true.1333, %lor.lhs.false.1330
  %521 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %522 = bitcast %struct.rtx_def* %521 to i32*
  %bf.load1355 = load i32, i32* %522, align 8
  %bf.lshr1356 = lshr i32 %bf.load1355, 16
  %bf.clear1357 = and i32 %bf.lshr1356, 255
  %cmp1358 = icmp eq i32 %bf.clear1357, 18
  br i1 %cmp1358, label %cond.true.1360, label %cond.false.1364

cond.true.1360:                                   ; preds = %cond.false.1354
  %523 = load i32, i32* @target_flags, align 4
  %and1361 = and i32 %523, 33554432
  %tobool1362 = icmp ne i32 %and1361, 0
  %cond1363 = select i1 %tobool1362, i32 2, i32 3
  br label %cond.end.1392

cond.false.1364:                                  ; preds = %cond.false.1354
  %524 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %525 = bitcast %struct.rtx_def* %524 to i32*
  %bf.load1365 = load i32, i32* %525, align 8
  %bf.lshr1366 = lshr i32 %bf.load1365, 16
  %bf.clear1367 = and i32 %bf.lshr1366, 255
  %cmp1368 = icmp eq i32 %bf.clear1367, 24
  br i1 %cmp1368, label %cond.true.1370, label %cond.false.1374

cond.true.1370:                                   ; preds = %cond.false.1364
  %526 = load i32, i32* @target_flags, align 4
  %and1371 = and i32 %526, 33554432
  %tobool1372 = icmp ne i32 %and1371, 0
  %cond1373 = select i1 %tobool1372, i32 4, i32 6
  br label %cond.end.1390

cond.false.1374:                                  ; preds = %cond.false.1364
  %527 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %528 = bitcast %struct.rtx_def* %527 to i32*
  %bf.load1375 = load i32, i32* %528, align 8
  %bf.lshr1376 = lshr i32 %bf.load1375, 16
  %bf.clear1377 = and i32 %bf.lshr1376, 255
  %idxprom1378 = sext i32 %bf.clear1377 to i64
  %arrayidx1379 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1378
  %529 = load i8, i8* %arrayidx1379, align 1
  %conv1380 = zext i8 %529 to i32
  %530 = load i32, i32* @target_flags, align 4
  %and1381 = and i32 %530, 33554432
  %tobool1382 = icmp ne i32 %and1381, 0
  %cond1383 = select i1 %tobool1382, i32 8, i32 4
  %add1384 = add nsw i32 %conv1380, %cond1383
  %sub1385 = sub nsw i32 %add1384, 1
  %531 = load i32, i32* @target_flags, align 4
  %and1386 = and i32 %531, 33554432
  %tobool1387 = icmp ne i32 %and1386, 0
  %cond1388 = select i1 %tobool1387, i32 8, i32 4
  %div1389 = sdiv i32 %sub1385, %cond1388
  br label %cond.end.1390

cond.end.1390:                                    ; preds = %cond.false.1374, %cond.true.1370
  %cond1391 = phi i32 [ %cond1373, %cond.true.1370 ], [ %div1389, %cond.false.1374 ]
  br label %cond.end.1392

cond.end.1392:                                    ; preds = %cond.end.1390, %cond.true.1360
  %cond1393 = phi i32 [ %cond1363, %cond.true.1360 ], [ %cond1391, %cond.end.1390 ]
  br label %cond.end.1394

cond.end.1394:                                    ; preds = %cond.end.1392, %lor.end.1352
  %cond1395 = phi i32 [ %cond1353, %lor.end.1352 ], [ %cond1393, %cond.end.1392 ]
  store i32 %cond1395, i32* %xnregs, align 4
  br label %if.end.1397

if.else.1396:                                     ; preds = %if.then.1303
  store i32 1, i32* %xnregs, align 4
  br label %if.end.1397

if.end.1397:                                      ; preds = %if.else.1396, %cond.end.1394
  %532 = load i32, i32* %xregno, align 4
  %533 = load i32, i32* %regno, align 4
  %534 = load i32, i32* %nregs, align 4
  %add1398 = add nsw i32 %533, %534
  %cmp1399 = icmp slt i32 %532, %add1398
  br i1 %cmp1399, label %land.lhs.true.1401, label %if.end.1406

land.lhs.true.1401:                               ; preds = %if.end.1397
  %535 = load i32, i32* %xregno, align 4
  %536 = load i32, i32* %xnregs, align 4
  %add1402 = add nsw i32 %535, %536
  %537 = load i32, i32* %regno, align 4
  %cmp1403 = icmp sgt i32 %add1402, %537
  br i1 %cmp1403, label %if.then.1405, label %if.end.1406

if.then.1405:                                     ; preds = %land.lhs.true.1401
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1406:                                      ; preds = %land.lhs.true.1401, %if.end.1397
  %538 = load i32, i32* %xregno, align 4
  %539 = load i32, i32* %valueno, align 4
  %540 = load i32, i32* %valuenregs, align 4
  %add1407 = add nsw i32 %539, %540
  %cmp1408 = icmp slt i32 %538, %add1407
  br i1 %cmp1408, label %land.lhs.true.1410, label %if.end.1415

land.lhs.true.1410:                               ; preds = %if.end.1406
  %541 = load i32, i32* %xregno, align 4
  %542 = load i32, i32* %xnregs, align 4
  %add1411 = add nsw i32 %541, %542
  %543 = load i32, i32* %valueno, align 4
  %cmp1412 = icmp sgt i32 %add1411, %543
  br i1 %cmp1412, label %if.then.1414, label %if.end.1415

if.then.1414:                                     ; preds = %land.lhs.true.1410
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1415:                                      ; preds = %land.lhs.true.1410, %if.end.1406
  %544 = load i32, i32* %goal_mem_addr_varies, align 4
  %tobool1416 = icmp ne i32 %544, 0
  br i1 %tobool1416, label %land.lhs.true.1417, label %if.end.1421

land.lhs.true.1417:                               ; preds = %if.end.1415
  %545 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %546 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call1418 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %545, %struct.rtx_def* %546)
  %tobool1419 = icmp ne i32 %call1418, 0
  br i1 %tobool1419, label %if.then.1420, label %if.end.1421

if.then.1420:                                     ; preds = %land.lhs.true.1417
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1421:                                      ; preds = %land.lhs.true.1417, %if.end.1415
  %547 = load i32, i32* %xregno, align 4
  %cmp1422 = icmp eq i32 %547, 7
  br i1 %cmp1422, label %land.lhs.true.1424, label %if.end.1427

land.lhs.true.1424:                               ; preds = %if.end.1421
  %548 = load i32, i32* %need_stable_sp, align 4
  %tobool1425 = icmp ne i32 %548, 0
  br i1 %tobool1425, label %if.then.1426, label %if.end.1427

if.then.1426:                                     ; preds = %land.lhs.true.1424
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1427:                                      ; preds = %land.lhs.true.1424, %if.end.1421
  br label %if.end.1468

if.else.1428:                                     ; preds = %while.end.1298
  %549 = load i32, i32* %goal_mem, align 4
  %tobool1429 = icmp ne i32 %549, 0
  br i1 %tobool1429, label %land.lhs.true.1430, label %if.else.1442

land.lhs.true.1430:                               ; preds = %if.else.1428
  %550 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %551 = bitcast %struct.rtx_def* %550 to i32*
  %bf.load1431 = load i32, i32* %551, align 8
  %bf.clear1432 = and i32 %bf.load1431, 65535
  %cmp1433 = icmp eq i32 %bf.clear1432, 66
  br i1 %cmp1433, label %land.lhs.true.1435, label %if.else.1442

land.lhs.true.1435:                               ; preds = %land.lhs.true.1430
  %552 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %553 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %554 = bitcast %struct.rtx_def* %553 to i32*
  %bf.load1436 = load i32, i32* %554, align 8
  %bf.lshr1437 = lshr i32 %bf.load1436, 16
  %bf.clear1438 = and i32 %bf.lshr1437, 255
  %call1439 = call i32 @push_operand(%struct.rtx_def* %552, i32 %bf.clear1438)
  %tobool1440 = icmp ne i32 %call1439, 0
  br i1 %tobool1440, label %if.else.1442, label %if.then.1441

if.then.1441:                                     ; preds = %land.lhs.true.1435
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1442:                                     ; preds = %land.lhs.true.1435, %land.lhs.true.1430, %if.else.1428
  %555 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %556 = bitcast %struct.rtx_def* %555 to i32*
  %bf.load1443 = load i32, i32* %556, align 8
  %bf.clear1444 = and i32 %bf.load1443, 65535
  %cmp1445 = icmp eq i32 %bf.clear1444, 66
  br i1 %cmp1445, label %land.lhs.true.1447, label %if.else.1456

land.lhs.true.1447:                               ; preds = %if.else.1442
  %557 = load i32, i32* %regno, align 4
  %cmp1448 = icmp sge i32 %557, 53
  br i1 %cmp1448, label %land.lhs.true.1450, label %if.else.1456

land.lhs.true.1450:                               ; preds = %land.lhs.true.1447
  %558 = load i32, i32* %regno, align 4
  %idxprom1451 = sext i32 %558 to i64
  %559 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1452 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %559, i64 %idxprom1451
  %560 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1452, align 8
  %cmp1453 = icmp ne %struct.rtx_def* %560, null
  br i1 %cmp1453, label %if.then.1455, label %if.else.1456

if.then.1455:                                     ; preds = %land.lhs.true.1450
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1456:                                     ; preds = %land.lhs.true.1450, %land.lhs.true.1447, %if.else.1442
  %561 = load i32, i32* %need_stable_sp, align 4
  %tobool1457 = icmp ne i32 %561, 0
  br i1 %tobool1457, label %land.lhs.true.1458, label %if.end.1465

land.lhs.true.1458:                               ; preds = %if.else.1456
  %562 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %563 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %564 = bitcast %struct.rtx_def* %563 to i32*
  %bf.load1459 = load i32, i32* %564, align 8
  %bf.lshr1460 = lshr i32 %bf.load1459, 16
  %bf.clear1461 = and i32 %bf.lshr1460, 255
  %call1462 = call i32 @push_operand(%struct.rtx_def* %562, i32 %bf.clear1461)
  %tobool1463 = icmp ne i32 %call1462, 0
  br i1 %tobool1463, label %if.then.1464, label %if.end.1465

if.then.1464:                                     ; preds = %land.lhs.true.1458
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1465:                                      ; preds = %land.lhs.true.1458, %if.else.1456
  br label %if.end.1466

if.end.1466:                                      ; preds = %if.end.1465
  br label %if.end.1467

if.end.1467:                                      ; preds = %if.end.1466
  br label %if.end.1468

if.end.1468:                                      ; preds = %if.end.1467, %if.end.1427
  br label %if.end.1714

if.else.1469:                                     ; preds = %lor.lhs.false.1264
  %565 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %566 = bitcast %struct.rtx_def* %565 to i32*
  %bf.load1470 = load i32, i32* %566, align 8
  %bf.clear1471 = and i32 %bf.load1470, 65535
  %cmp1472 = icmp eq i32 %bf.clear1471, 39
  br i1 %cmp1472, label %if.then.1474, label %if.end.1713

if.then.1474:                                     ; preds = %if.else.1469
  %567 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld1476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %567, i32 0, i32 1
  %arrayidx1477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1476, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx1477 to %struct.rtvec_def**
  %568 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %568, i32 0, i32 0
  %569 = load i32, i32* %num_elem, align 4
  %sub1478 = sub nsw i32 %569, 1
  store i32 %sub1478, i32* %i1475, align 4
  br label %for.cond.1479

for.cond.1479:                                    ; preds = %for.inc.1710, %if.then.1474
  %570 = load i32, i32* %i1475, align 4
  %cmp1480 = icmp sge i32 %570, 0
  br i1 %cmp1480, label %for.body.1482, label %for.end.1712

for.body.1482:                                    ; preds = %for.cond.1479
  %571 = load i32, i32* %i1475, align 4
  %idxprom1483 = sext i32 %571 to i64
  %572 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld1484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %572, i32 0, i32 1
  %arrayidx1485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1484, i32 0, i64 0
  %rtvec1486 = bitcast %union.rtunion_def* %arrayidx1485 to %struct.rtvec_def**
  %573 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1486, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %573, i32 0, i32 1
  %arrayidx1487 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom1483
  %574 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1487, align 8
  store %struct.rtx_def* %574, %struct.rtx_def** %v1, align 8
  %575 = load %struct.rtx_def*, %struct.rtx_def** %v1, align 8
  %576 = bitcast %struct.rtx_def* %575 to i32*
  %bf.load1488 = load i32, i32* %576, align 8
  %bf.clear1489 = and i32 %bf.load1488, 65535
  %cmp1490 = icmp eq i32 %bf.clear1489, 38
  br i1 %cmp1490, label %if.then.1492, label %if.end.1496

if.then.1492:                                     ; preds = %for.body.1482
  %577 = load %struct.rtx_def*, %struct.rtx_def** %v1, align 8
  %fld1493 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %577, i32 0, i32 1
  %arrayidx1494 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1493, i32 0, i64 1
  %rtx1495 = bitcast %union.rtunion_def* %arrayidx1494 to %struct.rtx_def**
  %578 = load %struct.rtx_def*, %struct.rtx_def** %rtx1495, align 8
  store %struct.rtx_def* %578, %struct.rtx_def** %v1, align 8
  br label %if.end.1496

if.end.1496:                                      ; preds = %if.then.1492, %for.body.1482
  %579 = load %struct.rtx_def*, %struct.rtx_def** %v1, align 8
  %580 = bitcast %struct.rtx_def* %579 to i32*
  %bf.load1497 = load i32, i32* %580, align 8
  %bf.clear1498 = and i32 %bf.load1497, 65535
  %cmp1499 = icmp eq i32 %bf.clear1498, 47
  br i1 %cmp1499, label %if.then.1506, label %lor.lhs.false.1501

lor.lhs.false.1501:                               ; preds = %if.end.1496
  %581 = load %struct.rtx_def*, %struct.rtx_def** %v1, align 8
  %582 = bitcast %struct.rtx_def* %581 to i32*
  %bf.load1502 = load i32, i32* %582, align 8
  %bf.clear1503 = and i32 %bf.load1502, 65535
  %cmp1504 = icmp eq i32 %bf.clear1503, 49
  br i1 %cmp1504, label %if.then.1506, label %if.end.1709

if.then.1506:                                     ; preds = %lor.lhs.false.1501, %if.end.1496
  %583 = load %struct.rtx_def*, %struct.rtx_def** %v1, align 8
  %fld1508 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1
  %arrayidx1509 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1508, i32 0, i64 0
  %rtx1510 = bitcast %union.rtunion_def* %arrayidx1509 to %struct.rtx_def**
  %584 = load %struct.rtx_def*, %struct.rtx_def** %rtx1510, align 8
  store %struct.rtx_def* %584, %struct.rtx_def** %dest1507, align 8
  br label %while.cond.1511

while.cond.1511:                                  ; preds = %while.body.1532, %if.then.1506
  %585 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %586 = bitcast %struct.rtx_def* %585 to i32*
  %bf.load1512 = load i32, i32* %586, align 8
  %bf.clear1513 = and i32 %bf.load1512, 65535
  %cmp1514 = icmp eq i32 %bf.clear1513, 63
  br i1 %cmp1514, label %lor.end.1531, label %lor.lhs.false.1516

lor.lhs.false.1516:                               ; preds = %while.cond.1511
  %587 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %588 = bitcast %struct.rtx_def* %587 to i32*
  %bf.load1517 = load i32, i32* %588, align 8
  %bf.clear1518 = and i32 %bf.load1517, 65535
  %cmp1519 = icmp eq i32 %bf.clear1518, 133
  br i1 %cmp1519, label %lor.end.1531, label %lor.lhs.false.1521

lor.lhs.false.1521:                               ; preds = %lor.lhs.false.1516
  %589 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %590 = bitcast %struct.rtx_def* %589 to i32*
  %bf.load1522 = load i32, i32* %590, align 8
  %bf.clear1523 = and i32 %bf.load1522, 65535
  %cmp1524 = icmp eq i32 %bf.clear1523, 132
  br i1 %cmp1524, label %lor.end.1531, label %lor.rhs.1526

lor.rhs.1526:                                     ; preds = %lor.lhs.false.1521
  %591 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %592 = bitcast %struct.rtx_def* %591 to i32*
  %bf.load1527 = load i32, i32* %592, align 8
  %bf.clear1528 = and i32 %bf.load1527, 65535
  %cmp1529 = icmp eq i32 %bf.clear1528, 64
  br label %lor.end.1531

lor.end.1531:                                     ; preds = %lor.rhs.1526, %lor.lhs.false.1521, %lor.lhs.false.1516, %while.cond.1511
  %593 = phi i1 [ true, %lor.lhs.false.1521 ], [ true, %lor.lhs.false.1516 ], [ true, %while.cond.1511 ], [ %cmp1529, %lor.rhs.1526 ]
  br i1 %593, label %while.body.1532, label %while.end.1536

while.body.1532:                                  ; preds = %lor.end.1531
  %594 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %fld1533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %594, i32 0, i32 1
  %arrayidx1534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1533, i32 0, i64 0
  %rtx1535 = bitcast %union.rtunion_def* %arrayidx1534 to %struct.rtx_def**
  %595 = load %struct.rtx_def*, %struct.rtx_def** %rtx1535, align 8
  store %struct.rtx_def* %595, %struct.rtx_def** %dest1507, align 8
  br label %while.cond.1511

while.end.1536:                                   ; preds = %lor.end.1531
  %596 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %597 = bitcast %struct.rtx_def* %596 to i32*
  %bf.load1537 = load i32, i32* %597, align 8
  %bf.clear1538 = and i32 %bf.load1537, 65535
  %cmp1539 = icmp eq i32 %bf.clear1538, 61
  br i1 %cmp1539, label %if.then.1541, label %if.else.1668

if.then.1541:                                     ; preds = %while.end.1536
  %598 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %fld1543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %598, i32 0, i32 1
  %arrayidx1544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1543, i32 0, i64 0
  %rtuint1545 = bitcast %union.rtunion_def* %arrayidx1544 to i32*
  %599 = load i32, i32* %rtuint1545, align 4
  store i32 %599, i32* %xregno1542, align 4
  %600 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %fld1547 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %600, i32 0, i32 1
  %arrayidx1548 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1547, i32 0, i64 0
  %rtuint1549 = bitcast %union.rtunion_def* %arrayidx1548 to i32*
  %601 = load i32, i32* %rtuint1549, align 4
  %cmp1550 = icmp ult i32 %601, 53
  br i1 %cmp1550, label %if.then.1552, label %if.else.1636

if.then.1552:                                     ; preds = %if.then.1541
  %602 = load i32, i32* %xregno1542, align 4
  %cmp1553 = icmp sge i32 %602, 8
  br i1 %cmp1553, label %land.lhs.true.1555, label %lor.lhs.false.1558

land.lhs.true.1555:                               ; preds = %if.then.1552
  %603 = load i32, i32* %xregno1542, align 4
  %cmp1556 = icmp sle i32 %603, 15
  br i1 %cmp1556, label %cond.true.1576, label %lor.lhs.false.1558

lor.lhs.false.1558:                               ; preds = %land.lhs.true.1555, %if.then.1552
  %604 = load i32, i32* %xregno1542, align 4
  %cmp1559 = icmp sge i32 %604, 21
  br i1 %cmp1559, label %land.lhs.true.1561, label %lor.lhs.false.1564

land.lhs.true.1561:                               ; preds = %lor.lhs.false.1558
  %605 = load i32, i32* %xregno1542, align 4
  %cmp1562 = icmp sle i32 %605, 28
  br i1 %cmp1562, label %cond.true.1576, label %lor.lhs.false.1564

lor.lhs.false.1564:                               ; preds = %land.lhs.true.1561, %lor.lhs.false.1558
  %606 = load i32, i32* %xregno1542, align 4
  %cmp1565 = icmp sge i32 %606, 45
  br i1 %cmp1565, label %land.lhs.true.1567, label %lor.lhs.false.1570

land.lhs.true.1567:                               ; preds = %lor.lhs.false.1564
  %607 = load i32, i32* %xregno1542, align 4
  %cmp1568 = icmp sle i32 %607, 52
  br i1 %cmp1568, label %cond.true.1576, label %lor.lhs.false.1570

lor.lhs.false.1570:                               ; preds = %land.lhs.true.1567, %lor.lhs.false.1564
  %608 = load i32, i32* %xregno1542, align 4
  %cmp1571 = icmp sge i32 %608, 29
  br i1 %cmp1571, label %land.lhs.true.1573, label %cond.false.1594

land.lhs.true.1573:                               ; preds = %lor.lhs.false.1570
  %609 = load i32, i32* %xregno1542, align 4
  %cmp1574 = icmp sle i32 %609, 36
  br i1 %cmp1574, label %cond.true.1576, label %cond.false.1594

cond.true.1576:                                   ; preds = %land.lhs.true.1573, %land.lhs.true.1567, %land.lhs.true.1561, %land.lhs.true.1555
  %610 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %611 = bitcast %struct.rtx_def* %610 to i32*
  %bf.load1577 = load i32, i32* %611, align 8
  %bf.lshr1578 = lshr i32 %bf.load1577, 16
  %bf.clear1579 = and i32 %bf.lshr1578, 255
  %idxprom1580 = sext i32 %bf.clear1579 to i64
  %arrayidx1581 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1580
  %612 = load i32, i32* %arrayidx1581, align 4
  %cmp1582 = icmp eq i32 %612, 5
  br i1 %cmp1582, label %lor.end.1592, label %lor.rhs.1584

lor.rhs.1584:                                     ; preds = %cond.true.1576
  %613 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %614 = bitcast %struct.rtx_def* %613 to i32*
  %bf.load1585 = load i32, i32* %614, align 8
  %bf.lshr1586 = lshr i32 %bf.load1585, 16
  %bf.clear1587 = and i32 %bf.lshr1586, 255
  %idxprom1588 = sext i32 %bf.clear1587 to i64
  %arrayidx1589 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1588
  %615 = load i32, i32* %arrayidx1589, align 4
  %cmp1590 = icmp eq i32 %615, 6
  br label %lor.end.1592

lor.end.1592:                                     ; preds = %lor.rhs.1584, %cond.true.1576
  %616 = phi i1 [ true, %cond.true.1576 ], [ %cmp1590, %lor.rhs.1584 ]
  %cond1593 = select i1 %616, i32 2, i32 1
  br label %cond.end.1634

cond.false.1594:                                  ; preds = %land.lhs.true.1573, %lor.lhs.false.1570
  %617 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %618 = bitcast %struct.rtx_def* %617 to i32*
  %bf.load1595 = load i32, i32* %618, align 8
  %bf.lshr1596 = lshr i32 %bf.load1595, 16
  %bf.clear1597 = and i32 %bf.lshr1596, 255
  %cmp1598 = icmp eq i32 %bf.clear1597, 18
  br i1 %cmp1598, label %cond.true.1600, label %cond.false.1604

cond.true.1600:                                   ; preds = %cond.false.1594
  %619 = load i32, i32* @target_flags, align 4
  %and1601 = and i32 %619, 33554432
  %tobool1602 = icmp ne i32 %and1601, 0
  %cond1603 = select i1 %tobool1602, i32 2, i32 3
  br label %cond.end.1632

cond.false.1604:                                  ; preds = %cond.false.1594
  %620 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %621 = bitcast %struct.rtx_def* %620 to i32*
  %bf.load1605 = load i32, i32* %621, align 8
  %bf.lshr1606 = lshr i32 %bf.load1605, 16
  %bf.clear1607 = and i32 %bf.lshr1606, 255
  %cmp1608 = icmp eq i32 %bf.clear1607, 24
  br i1 %cmp1608, label %cond.true.1610, label %cond.false.1614

cond.true.1610:                                   ; preds = %cond.false.1604
  %622 = load i32, i32* @target_flags, align 4
  %and1611 = and i32 %622, 33554432
  %tobool1612 = icmp ne i32 %and1611, 0
  %cond1613 = select i1 %tobool1612, i32 4, i32 6
  br label %cond.end.1630

cond.false.1614:                                  ; preds = %cond.false.1604
  %623 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %624 = bitcast %struct.rtx_def* %623 to i32*
  %bf.load1615 = load i32, i32* %624, align 8
  %bf.lshr1616 = lshr i32 %bf.load1615, 16
  %bf.clear1617 = and i32 %bf.lshr1616, 255
  %idxprom1618 = sext i32 %bf.clear1617 to i64
  %arrayidx1619 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1618
  %625 = load i8, i8* %arrayidx1619, align 1
  %conv1620 = zext i8 %625 to i32
  %626 = load i32, i32* @target_flags, align 4
  %and1621 = and i32 %626, 33554432
  %tobool1622 = icmp ne i32 %and1621, 0
  %cond1623 = select i1 %tobool1622, i32 8, i32 4
  %add1624 = add nsw i32 %conv1620, %cond1623
  %sub1625 = sub nsw i32 %add1624, 1
  %627 = load i32, i32* @target_flags, align 4
  %and1626 = and i32 %627, 33554432
  %tobool1627 = icmp ne i32 %and1626, 0
  %cond1628 = select i1 %tobool1627, i32 8, i32 4
  %div1629 = sdiv i32 %sub1625, %cond1628
  br label %cond.end.1630

cond.end.1630:                                    ; preds = %cond.false.1614, %cond.true.1610
  %cond1631 = phi i32 [ %cond1613, %cond.true.1610 ], [ %div1629, %cond.false.1614 ]
  br label %cond.end.1632

cond.end.1632:                                    ; preds = %cond.end.1630, %cond.true.1600
  %cond1633 = phi i32 [ %cond1603, %cond.true.1600 ], [ %cond1631, %cond.end.1630 ]
  br label %cond.end.1634

cond.end.1634:                                    ; preds = %cond.end.1632, %lor.end.1592
  %cond1635 = phi i32 [ %cond1593, %lor.end.1592 ], [ %cond1633, %cond.end.1632 ]
  store i32 %cond1635, i32* %xnregs1546, align 4
  br label %if.end.1637

if.else.1636:                                     ; preds = %if.then.1541
  store i32 1, i32* %xnregs1546, align 4
  br label %if.end.1637

if.end.1637:                                      ; preds = %if.else.1636, %cond.end.1634
  %628 = load i32, i32* %xregno1542, align 4
  %629 = load i32, i32* %regno, align 4
  %630 = load i32, i32* %nregs, align 4
  %add1638 = add nsw i32 %629, %630
  %cmp1639 = icmp slt i32 %628, %add1638
  br i1 %cmp1639, label %land.lhs.true.1641, label %if.end.1646

land.lhs.true.1641:                               ; preds = %if.end.1637
  %631 = load i32, i32* %xregno1542, align 4
  %632 = load i32, i32* %xnregs1546, align 4
  %add1642 = add nsw i32 %631, %632
  %633 = load i32, i32* %regno, align 4
  %cmp1643 = icmp sgt i32 %add1642, %633
  br i1 %cmp1643, label %if.then.1645, label %if.end.1646

if.then.1645:                                     ; preds = %land.lhs.true.1641
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1646:                                      ; preds = %land.lhs.true.1641, %if.end.1637
  %634 = load i32, i32* %xregno1542, align 4
  %635 = load i32, i32* %valueno, align 4
  %636 = load i32, i32* %valuenregs, align 4
  %add1647 = add nsw i32 %635, %636
  %cmp1648 = icmp slt i32 %634, %add1647
  br i1 %cmp1648, label %land.lhs.true.1650, label %if.end.1655

land.lhs.true.1650:                               ; preds = %if.end.1646
  %637 = load i32, i32* %xregno1542, align 4
  %638 = load i32, i32* %xnregs1546, align 4
  %add1651 = add nsw i32 %637, %638
  %639 = load i32, i32* %valueno, align 4
  %cmp1652 = icmp sgt i32 %add1651, %639
  br i1 %cmp1652, label %if.then.1654, label %if.end.1655

if.then.1654:                                     ; preds = %land.lhs.true.1650
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1655:                                      ; preds = %land.lhs.true.1650, %if.end.1646
  %640 = load i32, i32* %goal_mem_addr_varies, align 4
  %tobool1656 = icmp ne i32 %640, 0
  br i1 %tobool1656, label %land.lhs.true.1657, label %if.end.1661

land.lhs.true.1657:                               ; preds = %if.end.1655
  %641 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %642 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call1658 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %641, %struct.rtx_def* %642)
  %tobool1659 = icmp ne i32 %call1658, 0
  br i1 %tobool1659, label %if.then.1660, label %if.end.1661

if.then.1660:                                     ; preds = %land.lhs.true.1657
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1661:                                      ; preds = %land.lhs.true.1657, %if.end.1655
  %643 = load i32, i32* %xregno1542, align 4
  %cmp1662 = icmp eq i32 %643, 7
  br i1 %cmp1662, label %land.lhs.true.1664, label %if.end.1667

land.lhs.true.1664:                               ; preds = %if.end.1661
  %644 = load i32, i32* %need_stable_sp, align 4
  %tobool1665 = icmp ne i32 %644, 0
  br i1 %tobool1665, label %if.then.1666, label %if.end.1667

if.then.1666:                                     ; preds = %land.lhs.true.1664
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1667:                                      ; preds = %land.lhs.true.1664, %if.end.1661
  br label %if.end.1708

if.else.1668:                                     ; preds = %while.end.1536
  %645 = load i32, i32* %goal_mem, align 4
  %tobool1669 = icmp ne i32 %645, 0
  br i1 %tobool1669, label %land.lhs.true.1670, label %if.else.1682

land.lhs.true.1670:                               ; preds = %if.else.1668
  %646 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %647 = bitcast %struct.rtx_def* %646 to i32*
  %bf.load1671 = load i32, i32* %647, align 8
  %bf.clear1672 = and i32 %bf.load1671, 65535
  %cmp1673 = icmp eq i32 %bf.clear1672, 66
  br i1 %cmp1673, label %land.lhs.true.1675, label %if.else.1682

land.lhs.true.1675:                               ; preds = %land.lhs.true.1670
  %648 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %649 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %650 = bitcast %struct.rtx_def* %649 to i32*
  %bf.load1676 = load i32, i32* %650, align 8
  %bf.lshr1677 = lshr i32 %bf.load1676, 16
  %bf.clear1678 = and i32 %bf.lshr1677, 255
  %call1679 = call i32 @push_operand(%struct.rtx_def* %648, i32 %bf.clear1678)
  %tobool1680 = icmp ne i32 %call1679, 0
  br i1 %tobool1680, label %if.else.1682, label %if.then.1681

if.then.1681:                                     ; preds = %land.lhs.true.1675
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1682:                                     ; preds = %land.lhs.true.1675, %land.lhs.true.1670, %if.else.1668
  %651 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %652 = bitcast %struct.rtx_def* %651 to i32*
  %bf.load1683 = load i32, i32* %652, align 8
  %bf.clear1684 = and i32 %bf.load1683, 65535
  %cmp1685 = icmp eq i32 %bf.clear1684, 66
  br i1 %cmp1685, label %land.lhs.true.1687, label %if.else.1696

land.lhs.true.1687:                               ; preds = %if.else.1682
  %653 = load i32, i32* %regno, align 4
  %cmp1688 = icmp sge i32 %653, 53
  br i1 %cmp1688, label %land.lhs.true.1690, label %if.else.1696

land.lhs.true.1690:                               ; preds = %land.lhs.true.1687
  %654 = load i32, i32* %regno, align 4
  %idxprom1691 = sext i32 %654 to i64
  %655 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1692 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %655, i64 %idxprom1691
  %656 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1692, align 8
  %cmp1693 = icmp ne %struct.rtx_def* %656, null
  br i1 %cmp1693, label %if.then.1695, label %if.else.1696

if.then.1695:                                     ; preds = %land.lhs.true.1690
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1696:                                     ; preds = %land.lhs.true.1690, %land.lhs.true.1687, %if.else.1682
  %657 = load i32, i32* %need_stable_sp, align 4
  %tobool1697 = icmp ne i32 %657, 0
  br i1 %tobool1697, label %land.lhs.true.1698, label %if.end.1705

land.lhs.true.1698:                               ; preds = %if.else.1696
  %658 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %659 = load %struct.rtx_def*, %struct.rtx_def** %dest1507, align 8
  %660 = bitcast %struct.rtx_def* %659 to i32*
  %bf.load1699 = load i32, i32* %660, align 8
  %bf.lshr1700 = lshr i32 %bf.load1699, 16
  %bf.clear1701 = and i32 %bf.lshr1700, 255
  %call1702 = call i32 @push_operand(%struct.rtx_def* %658, i32 %bf.clear1701)
  %tobool1703 = icmp ne i32 %call1702, 0
  br i1 %tobool1703, label %if.then.1704, label %if.end.1705

if.then.1704:                                     ; preds = %land.lhs.true.1698
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1705:                                      ; preds = %land.lhs.true.1698, %if.else.1696
  br label %if.end.1706

if.end.1706:                                      ; preds = %if.end.1705
  br label %if.end.1707

if.end.1707:                                      ; preds = %if.end.1706
  br label %if.end.1708

if.end.1708:                                      ; preds = %if.end.1707, %if.end.1667
  br label %if.end.1709

if.end.1709:                                      ; preds = %if.end.1708, %lor.lhs.false.1501
  br label %for.inc.1710

for.inc.1710:                                     ; preds = %if.end.1709
  %661 = load i32, i32* %i1475, align 4
  %dec1711 = add nsw i32 %661, -1
  store i32 %dec1711, i32* %i1475, align 4
  br label %for.cond.1479

for.end.1712:                                     ; preds = %for.cond.1479
  br label %if.end.1713

if.end.1713:                                      ; preds = %for.end.1712, %if.else.1469
  br label %if.end.1714

if.end.1714:                                      ; preds = %if.end.1713, %if.end.1468
  %662 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %663 = bitcast %struct.rtx_def* %662 to i32*
  %bf.load1715 = load i32, i32* %663, align 8
  %bf.clear1716 = and i32 %bf.load1715, 65535
  %cmp1717 = icmp eq i32 %bf.clear1716, 34
  br i1 %cmp1717, label %land.lhs.true.1719, label %if.end.1898

land.lhs.true.1719:                               ; preds = %if.end.1714
  %664 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld1720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %664, i32 0, i32 1
  %arrayidx1721 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1720, i32 0, i64 7
  %rtx1722 = bitcast %union.rtunion_def* %arrayidx1721 to %struct.rtx_def**
  %665 = load %struct.rtx_def*, %struct.rtx_def** %rtx1722, align 8
  %tobool1723 = icmp ne %struct.rtx_def* %665, null
  br i1 %tobool1723, label %if.then.1724, label %if.end.1898

if.then.1724:                                     ; preds = %land.lhs.true.1719
  %666 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld1725 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %666, i32 0, i32 1
  %arrayidx1726 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1725, i32 0, i64 7
  %rtx1727 = bitcast %union.rtunion_def* %arrayidx1726 to %struct.rtx_def**
  %667 = load %struct.rtx_def*, %struct.rtx_def** %rtx1727, align 8
  store %struct.rtx_def* %667, %struct.rtx_def** %link, align 8
  br label %for.cond.1728

for.cond.1728:                                    ; preds = %for.inc.1893, %if.then.1724
  %668 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %668, i32 0, i32 1
  %arrayidx1730 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1729, i32 0, i64 1
  %rtx1731 = bitcast %union.rtunion_def* %arrayidx1730 to %struct.rtx_def**
  %669 = load %struct.rtx_def*, %struct.rtx_def** %rtx1731, align 8
  %cmp1732 = icmp ne %struct.rtx_def* %669, null
  br i1 %cmp1732, label %for.body.1734, label %for.end.1897

for.body.1734:                                    ; preds = %for.cond.1728
  %670 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %670, i32 0, i32 1
  %arrayidx1736 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1735, i32 0, i64 0
  %rtx1737 = bitcast %union.rtunion_def* %arrayidx1736 to %struct.rtx_def**
  %671 = load %struct.rtx_def*, %struct.rtx_def** %rtx1737, align 8
  store %struct.rtx_def* %671, %struct.rtx_def** %pat, align 8
  %672 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %673 = bitcast %struct.rtx_def* %672 to i32*
  %bf.load1738 = load i32, i32* %673, align 8
  %bf.clear1739 = and i32 %bf.load1738, 65535
  %cmp1740 = icmp eq i32 %bf.clear1739, 49
  br i1 %cmp1740, label %if.then.1742, label %if.end.1892

if.then.1742:                                     ; preds = %for.body.1734
  %674 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8
  %fld1744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %674, i32 0, i32 1
  %arrayidx1745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1744, i32 0, i64 0
  %rtx1746 = bitcast %union.rtunion_def* %arrayidx1745 to %struct.rtx_def**
  %675 = load %struct.rtx_def*, %struct.rtx_def** %rtx1746, align 8
  store %struct.rtx_def* %675, %struct.rtx_def** %dest1743, align 8
  %676 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %677 = bitcast %struct.rtx_def* %676 to i32*
  %bf.load1747 = load i32, i32* %677, align 8
  %bf.clear1748 = and i32 %bf.load1747, 65535
  %cmp1749 = icmp eq i32 %bf.clear1748, 61
  br i1 %cmp1749, label %if.then.1751, label %if.else.1866

if.then.1751:                                     ; preds = %if.then.1742
  %678 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %fld1753 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %678, i32 0, i32 1
  %arrayidx1754 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1753, i32 0, i64 0
  %rtuint1755 = bitcast %union.rtunion_def* %arrayidx1754 to i32*
  %679 = load i32, i32* %rtuint1755, align 4
  store i32 %679, i32* %xregno1752, align 4
  %680 = load i32, i32* %xregno1752, align 4
  %cmp1757 = icmp sge i32 %680, 8
  br i1 %cmp1757, label %land.lhs.true.1759, label %lor.lhs.false.1762

land.lhs.true.1759:                               ; preds = %if.then.1751
  %681 = load i32, i32* %xregno1752, align 4
  %cmp1760 = icmp sle i32 %681, 15
  br i1 %cmp1760, label %cond.true.1780, label %lor.lhs.false.1762

lor.lhs.false.1762:                               ; preds = %land.lhs.true.1759, %if.then.1751
  %682 = load i32, i32* %xregno1752, align 4
  %cmp1763 = icmp sge i32 %682, 21
  br i1 %cmp1763, label %land.lhs.true.1765, label %lor.lhs.false.1768

land.lhs.true.1765:                               ; preds = %lor.lhs.false.1762
  %683 = load i32, i32* %xregno1752, align 4
  %cmp1766 = icmp sle i32 %683, 28
  br i1 %cmp1766, label %cond.true.1780, label %lor.lhs.false.1768

lor.lhs.false.1768:                               ; preds = %land.lhs.true.1765, %lor.lhs.false.1762
  %684 = load i32, i32* %xregno1752, align 4
  %cmp1769 = icmp sge i32 %684, 45
  br i1 %cmp1769, label %land.lhs.true.1771, label %lor.lhs.false.1774

land.lhs.true.1771:                               ; preds = %lor.lhs.false.1768
  %685 = load i32, i32* %xregno1752, align 4
  %cmp1772 = icmp sle i32 %685, 52
  br i1 %cmp1772, label %cond.true.1780, label %lor.lhs.false.1774

lor.lhs.false.1774:                               ; preds = %land.lhs.true.1771, %lor.lhs.false.1768
  %686 = load i32, i32* %xregno1752, align 4
  %cmp1775 = icmp sge i32 %686, 29
  br i1 %cmp1775, label %land.lhs.true.1777, label %cond.false.1798

land.lhs.true.1777:                               ; preds = %lor.lhs.false.1774
  %687 = load i32, i32* %xregno1752, align 4
  %cmp1778 = icmp sle i32 %687, 36
  br i1 %cmp1778, label %cond.true.1780, label %cond.false.1798

cond.true.1780:                                   ; preds = %land.lhs.true.1777, %land.lhs.true.1771, %land.lhs.true.1765, %land.lhs.true.1759
  %688 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %689 = bitcast %struct.rtx_def* %688 to i32*
  %bf.load1781 = load i32, i32* %689, align 8
  %bf.lshr1782 = lshr i32 %bf.load1781, 16
  %bf.clear1783 = and i32 %bf.lshr1782, 255
  %idxprom1784 = sext i32 %bf.clear1783 to i64
  %arrayidx1785 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1784
  %690 = load i32, i32* %arrayidx1785, align 4
  %cmp1786 = icmp eq i32 %690, 5
  br i1 %cmp1786, label %lor.end.1796, label %lor.rhs.1788

lor.rhs.1788:                                     ; preds = %cond.true.1780
  %691 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %692 = bitcast %struct.rtx_def* %691 to i32*
  %bf.load1789 = load i32, i32* %692, align 8
  %bf.lshr1790 = lshr i32 %bf.load1789, 16
  %bf.clear1791 = and i32 %bf.lshr1790, 255
  %idxprom1792 = sext i32 %bf.clear1791 to i64
  %arrayidx1793 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1792
  %693 = load i32, i32* %arrayidx1793, align 4
  %cmp1794 = icmp eq i32 %693, 6
  br label %lor.end.1796

lor.end.1796:                                     ; preds = %lor.rhs.1788, %cond.true.1780
  %694 = phi i1 [ true, %cond.true.1780 ], [ %cmp1794, %lor.rhs.1788 ]
  %cond1797 = select i1 %694, i32 2, i32 1
  br label %cond.end.1838

cond.false.1798:                                  ; preds = %land.lhs.true.1777, %lor.lhs.false.1774
  %695 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %696 = bitcast %struct.rtx_def* %695 to i32*
  %bf.load1799 = load i32, i32* %696, align 8
  %bf.lshr1800 = lshr i32 %bf.load1799, 16
  %bf.clear1801 = and i32 %bf.lshr1800, 255
  %cmp1802 = icmp eq i32 %bf.clear1801, 18
  br i1 %cmp1802, label %cond.true.1804, label %cond.false.1808

cond.true.1804:                                   ; preds = %cond.false.1798
  %697 = load i32, i32* @target_flags, align 4
  %and1805 = and i32 %697, 33554432
  %tobool1806 = icmp ne i32 %and1805, 0
  %cond1807 = select i1 %tobool1806, i32 2, i32 3
  br label %cond.end.1836

cond.false.1808:                                  ; preds = %cond.false.1798
  %698 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %699 = bitcast %struct.rtx_def* %698 to i32*
  %bf.load1809 = load i32, i32* %699, align 8
  %bf.lshr1810 = lshr i32 %bf.load1809, 16
  %bf.clear1811 = and i32 %bf.lshr1810, 255
  %cmp1812 = icmp eq i32 %bf.clear1811, 24
  br i1 %cmp1812, label %cond.true.1814, label %cond.false.1818

cond.true.1814:                                   ; preds = %cond.false.1808
  %700 = load i32, i32* @target_flags, align 4
  %and1815 = and i32 %700, 33554432
  %tobool1816 = icmp ne i32 %and1815, 0
  %cond1817 = select i1 %tobool1816, i32 4, i32 6
  br label %cond.end.1834

cond.false.1818:                                  ; preds = %cond.false.1808
  %701 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %702 = bitcast %struct.rtx_def* %701 to i32*
  %bf.load1819 = load i32, i32* %702, align 8
  %bf.lshr1820 = lshr i32 %bf.load1819, 16
  %bf.clear1821 = and i32 %bf.lshr1820, 255
  %idxprom1822 = sext i32 %bf.clear1821 to i64
  %arrayidx1823 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1822
  %703 = load i8, i8* %arrayidx1823, align 1
  %conv1824 = zext i8 %703 to i32
  %704 = load i32, i32* @target_flags, align 4
  %and1825 = and i32 %704, 33554432
  %tobool1826 = icmp ne i32 %and1825, 0
  %cond1827 = select i1 %tobool1826, i32 8, i32 4
  %add1828 = add nsw i32 %conv1824, %cond1827
  %sub1829 = sub nsw i32 %add1828, 1
  %705 = load i32, i32* @target_flags, align 4
  %and1830 = and i32 %705, 33554432
  %tobool1831 = icmp ne i32 %and1830, 0
  %cond1832 = select i1 %tobool1831, i32 8, i32 4
  %div1833 = sdiv i32 %sub1829, %cond1832
  br label %cond.end.1834

cond.end.1834:                                    ; preds = %cond.false.1818, %cond.true.1814
  %cond1835 = phi i32 [ %cond1817, %cond.true.1814 ], [ %div1833, %cond.false.1818 ]
  br label %cond.end.1836

cond.end.1836:                                    ; preds = %cond.end.1834, %cond.true.1804
  %cond1837 = phi i32 [ %cond1807, %cond.true.1804 ], [ %cond1835, %cond.end.1834 ]
  br label %cond.end.1838

cond.end.1838:                                    ; preds = %cond.end.1836, %lor.end.1796
  %cond1839 = phi i32 [ %cond1797, %lor.end.1796 ], [ %cond1837, %cond.end.1836 ]
  store i32 %cond1839, i32* %xnregs1756, align 4
  %706 = load i32, i32* %xregno1752, align 4
  %707 = load i32, i32* %regno, align 4
  %708 = load i32, i32* %nregs, align 4
  %add1840 = add nsw i32 %707, %708
  %cmp1841 = icmp slt i32 %706, %add1840
  br i1 %cmp1841, label %land.lhs.true.1843, label %if.else.1848

land.lhs.true.1843:                               ; preds = %cond.end.1838
  %709 = load i32, i32* %xregno1752, align 4
  %710 = load i32, i32* %xnregs1756, align 4
  %add1844 = add nsw i32 %709, %710
  %711 = load i32, i32* %regno, align 4
  %cmp1845 = icmp sgt i32 %add1844, %711
  br i1 %cmp1845, label %if.then.1847, label %if.else.1848

if.then.1847:                                     ; preds = %land.lhs.true.1843
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1848:                                     ; preds = %land.lhs.true.1843, %cond.end.1838
  %712 = load i32, i32* %xregno1752, align 4
  %713 = load i32, i32* %valueno, align 4
  %714 = load i32, i32* %valuenregs, align 4
  %add1849 = add nsw i32 %713, %714
  %cmp1850 = icmp slt i32 %712, %add1849
  br i1 %cmp1850, label %land.lhs.true.1852, label %if.else.1857

land.lhs.true.1852:                               ; preds = %if.else.1848
  %715 = load i32, i32* %xregno1752, align 4
  %716 = load i32, i32* %xnregs1756, align 4
  %add1853 = add nsw i32 %715, %716
  %717 = load i32, i32* %valueno, align 4
  %cmp1854 = icmp sgt i32 %add1853, %717
  br i1 %cmp1854, label %if.then.1856, label %if.else.1857

if.then.1856:                                     ; preds = %land.lhs.true.1852
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1857:                                     ; preds = %land.lhs.true.1852, %if.else.1848
  %718 = load i32, i32* %goal_mem_addr_varies, align 4
  %tobool1858 = icmp ne i32 %718, 0
  br i1 %tobool1858, label %land.lhs.true.1859, label %if.end.1863

land.lhs.true.1859:                               ; preds = %if.else.1857
  %719 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %720 = load %struct.rtx_def*, %struct.rtx_def** %goal.addr, align 8
  %call1860 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %719, %struct.rtx_def* %720)
  %tobool1861 = icmp ne i32 %call1860, 0
  br i1 %tobool1861, label %if.then.1862, label %if.end.1863

if.then.1862:                                     ; preds = %land.lhs.true.1859
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1863:                                      ; preds = %land.lhs.true.1859, %if.else.1857
  br label %if.end.1864

if.end.1864:                                      ; preds = %if.end.1863
  br label %if.end.1865

if.end.1865:                                      ; preds = %if.end.1864
  br label %if.end.1891

if.else.1866:                                     ; preds = %if.then.1742
  %721 = load i32, i32* %goal_mem, align 4
  %tobool1867 = icmp ne i32 %721, 0
  br i1 %tobool1867, label %land.lhs.true.1868, label %if.else.1880

land.lhs.true.1868:                               ; preds = %if.else.1866
  %722 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %723 = bitcast %struct.rtx_def* %722 to i32*
  %bf.load1869 = load i32, i32* %723, align 8
  %bf.clear1870 = and i32 %bf.load1869, 65535
  %cmp1871 = icmp eq i32 %bf.clear1870, 66
  br i1 %cmp1871, label %land.lhs.true.1873, label %if.else.1880

land.lhs.true.1873:                               ; preds = %land.lhs.true.1868
  %724 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %725 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %726 = bitcast %struct.rtx_def* %725 to i32*
  %bf.load1874 = load i32, i32* %726, align 8
  %bf.lshr1875 = lshr i32 %bf.load1874, 16
  %bf.clear1876 = and i32 %bf.lshr1875, 255
  %call1877 = call i32 @push_operand(%struct.rtx_def* %724, i32 %bf.clear1876)
  %tobool1878 = icmp ne i32 %call1877, 0
  br i1 %tobool1878, label %if.else.1880, label %if.then.1879

if.then.1879:                                     ; preds = %land.lhs.true.1873
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.else.1880:                                     ; preds = %land.lhs.true.1873, %land.lhs.true.1868, %if.else.1866
  %727 = load i32, i32* %need_stable_sp, align 4
  %tobool1881 = icmp ne i32 %727, 0
  br i1 %tobool1881, label %land.lhs.true.1882, label %if.end.1889

land.lhs.true.1882:                               ; preds = %if.else.1880
  %728 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %729 = load %struct.rtx_def*, %struct.rtx_def** %dest1743, align 8
  %730 = bitcast %struct.rtx_def* %729 to i32*
  %bf.load1883 = load i32, i32* %730, align 8
  %bf.lshr1884 = lshr i32 %bf.load1883, 16
  %bf.clear1885 = and i32 %bf.lshr1884, 255
  %call1886 = call i32 @push_operand(%struct.rtx_def* %728, i32 %bf.clear1885)
  %tobool1887 = icmp ne i32 %call1886, 0
  br i1 %tobool1887, label %if.then.1888, label %if.end.1889

if.then.1888:                                     ; preds = %land.lhs.true.1882
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.1889:                                      ; preds = %land.lhs.true.1882, %if.else.1880
  br label %if.end.1890

if.end.1890:                                      ; preds = %if.end.1889
  br label %if.end.1891

if.end.1891:                                      ; preds = %if.end.1890, %if.end.1865
  br label %if.end.1892

if.end.1892:                                      ; preds = %if.end.1891, %for.body.1734
  br label %for.inc.1893

for.inc.1893:                                     ; preds = %if.end.1892
  %731 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1894 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %731, i32 0, i32 1
  %arrayidx1895 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1894, i32 0, i64 1
  %rtx1896 = bitcast %union.rtunion_def* %arrayidx1895 to %struct.rtx_def**
  %732 = load %struct.rtx_def*, %struct.rtx_def** %rtx1896, align 8
  store %struct.rtx_def* %732, %struct.rtx_def** %link, align 8
  br label %for.cond.1728

for.end.1897:                                     ; preds = %for.cond.1728
  br label %if.end.1898

if.end.1898:                                      ; preds = %for.end.1897, %land.lhs.true.1719, %if.end.1714
  br label %if.end.1899

if.end.1899:                                      ; preds = %if.end.1898, %if.end.1235
  br label %while.body.1176

return:                                           ; preds = %if.then.1888, %if.then.1879, %if.then.1862, %if.then.1856, %if.then.1847, %if.then.1704, %if.then.1695, %if.then.1681, %if.then.1666, %if.then.1660, %if.then.1654, %if.then.1645, %if.then.1464, %if.then.1455, %if.then.1441, %if.then.1426, %if.then.1420, %if.then.1414, %if.then.1405, %if.then.1249, %if.then.1229, %if.then.1209, %if.then.1193, %if.then.1182, %if.then.1126, %if.then.993, %if.then.838, %if.then.689, %if.then.579, %if.then.560, %if.then.202, %if.else.187, %sw.bb, %if.then.21, %if.then.14
  %733 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %733
}

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @refers_to_regno_for_reload_p(i32 %regno, i32 %endregno, %struct.rtx_def* %x, %struct.rtx_def** %loc) #0 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %endregno.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %inner_regno = alloca i32, align 4
  %inner_endregno = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %endregno, i32* %endregno.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %repeat

repeat:                                           ; preds = %if.then.309, %if.end.282, %if.end
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  switch i32 %3, label %sw.default [
    i32 61, label %sw.bb
    i32 63, label %sw.bb.80
    i32 49, label %sw.bb.196
    i32 47, label %sw.bb.196
  ]

sw.bb:                                            ; preds = %repeat
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32, i32* %rtuint, align 4
  store i32 %5, i32* %r, align 4
  %6 = load i32, i32* %r, align 4
  %cmp1 = icmp uge i32 %6, 53
  br i1 %cmp1, label %if.then.2, label %if.end.13

if.then.2:                                        ; preds = %sw.bb
  %7 = load i32, i32* %r, align 4
  %idxprom = zext i32 %7 to i64
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3, align 8
  %tobool = icmp ne %struct.rtx_def* %9, null
  br i1 %tobool, label %if.then.4, label %if.end.7

if.then.4:                                        ; preds = %if.then.2
  %10 = load i32, i32* %regno.addr, align 4
  %11 = load i32, i32* %endregno.addr, align 4
  %12 = load i32, i32* %r, align 4
  %idxprom5 = zext i32 %12 to i64
  %13 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %13, i64 %idxprom5
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8
  %call = call i32 @refers_to_regno_for_reload_p(i32 %10, i32 %11, %struct.rtx_def* %14, %struct.rtx_def** null)
  store i32 %call, i32* %retval
  br label %return

if.end.7:                                         ; preds = %if.then.2
  %15 = load i32, i32* %r, align 4
  %idxprom8 = zext i32 %15 to i64
  %16 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %idxprom8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8
  %tobool10 = icmp ne %struct.rtx_def* %17, null
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.7
  store i32 0, i32* %retval
  br label %return

if.end.12:                                        ; preds = %if.end.7
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 6115, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.refers_to_regno_for_reload_p, i32 0, i32 0)) #5
  unreachable

if.end.13:                                        ; preds = %sw.bb
  %18 = load i32, i32* %endregno.addr, align 4
  %19 = load i32, i32* %r, align 4
  %cmp14 = icmp ugt i32 %18, %19
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.13
  %20 = load i32, i32* %regno.addr, align 4
  %21 = load i32, i32* %r, align 4
  %22 = load i32, i32* %r, align 4
  %cmp15 = icmp ult i32 %22, 53
  br i1 %cmp15, label %cond.true, label %cond.false.74

cond.true:                                        ; preds = %land.rhs
  %23 = load i32, i32* %r, align 4
  %cmp16 = icmp uge i32 %23, 8
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.true
  %24 = load i32, i32* %r, align 4
  %cmp17 = icmp ule i32 %24, 15
  br i1 %cmp17, label %cond.true.29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.true
  %25 = load i32, i32* %r, align 4
  %cmp18 = icmp uge i32 %25, 21
  br i1 %cmp18, label %land.lhs.true.19, label %lor.lhs.false.21

land.lhs.true.19:                                 ; preds = %lor.lhs.false
  %26 = load i32, i32* %r, align 4
  %cmp20 = icmp ule i32 %26, 28
  br i1 %cmp20, label %cond.true.29, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %land.lhs.true.19, %lor.lhs.false
  %27 = load i32, i32* %r, align 4
  %cmp22 = icmp uge i32 %27, 45
  br i1 %cmp22, label %land.lhs.true.23, label %lor.lhs.false.25

land.lhs.true.23:                                 ; preds = %lor.lhs.false.21
  %28 = load i32, i32* %r, align 4
  %cmp24 = icmp ule i32 %28, 52
  br i1 %cmp24, label %cond.true.29, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %land.lhs.true.23, %lor.lhs.false.21
  %29 = load i32, i32* %r, align 4
  %cmp26 = icmp uge i32 %29, 29
  br i1 %cmp26, label %land.lhs.true.27, label %cond.false

land.lhs.true.27:                                 ; preds = %lor.lhs.false.25
  %30 = load i32, i32* %r, align 4
  %cmp28 = icmp ule i32 %30, 36
  br i1 %cmp28, label %cond.true.29, label %cond.false

cond.true.29:                                     ; preds = %land.lhs.true.27, %land.lhs.true.23, %land.lhs.true.19, %land.lhs.true
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load30 = load i32, i32* %32, align 8
  %bf.lshr = lshr i32 %bf.load30, 16
  %bf.clear31 = and i32 %bf.lshr, 255
  %idxprom32 = sext i32 %bf.clear31 to i64
  %arrayidx33 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom32
  %33 = load i32, i32* %arrayidx33, align 4
  %cmp34 = icmp eq i32 %33, 5
  br i1 %cmp34, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.29
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load35 = load i32, i32* %35, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %idxprom38 = sext i32 %bf.clear37 to i64
  %arrayidx39 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom38
  %36 = load i32, i32* %arrayidx39, align 4
  %cmp40 = icmp eq i32 %36, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.29
  %37 = phi i1 [ true, %cond.true.29 ], [ %cmp40, %lor.rhs ]
  %cond = select i1 %37, i32 2, i32 1
  br label %cond.end.72

cond.false:                                       ; preds = %land.lhs.true.27, %lor.lhs.false.25
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load41 = load i32, i32* %39, align 8
  %bf.lshr42 = lshr i32 %bf.load41, 16
  %bf.clear43 = and i32 %bf.lshr42, 255
  %cmp44 = icmp eq i32 %bf.clear43, 18
  br i1 %cmp44, label %cond.true.45, label %cond.false.48

cond.true.45:                                     ; preds = %cond.false
  %40 = load i32, i32* @target_flags, align 4
  %and = and i32 %40, 33554432
  %tobool46 = icmp ne i32 %and, 0
  %cond47 = select i1 %tobool46, i32 2, i32 3
  br label %cond.end.70

cond.false.48:                                    ; preds = %cond.false
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load49 = load i32, i32* %42, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 24
  br i1 %cmp52, label %cond.true.53, label %cond.false.57

cond.true.53:                                     ; preds = %cond.false.48
  %43 = load i32, i32* @target_flags, align 4
  %and54 = and i32 %43, 33554432
  %tobool55 = icmp ne i32 %and54, 0
  %cond56 = select i1 %tobool55, i32 4, i32 6
  br label %cond.end

cond.false.57:                                    ; preds = %cond.false.48
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load58 = load i32, i32* %45, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %idxprom61 = sext i32 %bf.clear60 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom61
  %46 = load i8, i8* %arrayidx62, align 1
  %conv = zext i8 %46 to i32
  %47 = load i32, i32* @target_flags, align 4
  %and63 = and i32 %47, 33554432
  %tobool64 = icmp ne i32 %and63, 0
  %cond65 = select i1 %tobool64, i32 8, i32 4
  %add = add nsw i32 %conv, %cond65
  %sub = sub nsw i32 %add, 1
  %48 = load i32, i32* @target_flags, align 4
  %and66 = and i32 %48, 33554432
  %tobool67 = icmp ne i32 %and66, 0
  %cond68 = select i1 %tobool67, i32 8, i32 4
  %div = sdiv i32 %sub, %cond68
  br label %cond.end

cond.end:                                         ; preds = %cond.false.57, %cond.true.53
  %cond69 = phi i32 [ %cond56, %cond.true.53 ], [ %div, %cond.false.57 ]
  br label %cond.end.70

cond.end.70:                                      ; preds = %cond.end, %cond.true.45
  %cond71 = phi i32 [ %cond47, %cond.true.45 ], [ %cond69, %cond.end ]
  br label %cond.end.72

cond.end.72:                                      ; preds = %cond.end.70, %lor.end
  %cond73 = phi i32 [ %cond, %lor.end ], [ %cond71, %cond.end.70 ]
  br label %cond.end.75

cond.false.74:                                    ; preds = %land.rhs
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.false.74, %cond.end.72
  %cond76 = phi i32 [ %cond73, %cond.end.72 ], [ 1, %cond.false.74 ]
  %add77 = add i32 %21, %cond76
  %cmp78 = icmp ult i32 %20, %add77
  br label %land.end

land.end:                                         ; preds = %cond.end.75, %if.end.13
  %49 = phi i1 [ false, %if.end.13 ], [ %cmp78, %cond.end.75 ]
  %land.ext = zext i1 %49 to i32
  store i32 %land.ext, i32* %retval
  br label %return

sw.bb.80:                                         ; preds = %repeat
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load83 = load i32, i32* %52, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 61
  br i1 %cmp85, label %land.lhs.true.87, label %if.end.195

land.lhs.true.87:                                 ; preds = %sw.bb.80
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx90, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 0
  %rtuint93 = bitcast %union.rtunion_def* %arrayidx92 to i32*
  %55 = load i32, i32* %rtuint93, align 4
  %cmp94 = icmp ult i32 %55, 53
  br i1 %cmp94, label %if.then.96, label %if.end.195

if.then.96:                                       ; preds = %land.lhs.true.87
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call97 = call i32 @subreg_regno(%struct.rtx_def* %56)
  store i32 %call97, i32* %inner_regno, align 4
  %57 = load i32, i32* %inner_regno, align 4
  %58 = load i32, i32* %inner_regno, align 4
  %cmp98 = icmp ult i32 %58, 53
  br i1 %cmp98, label %cond.true.100, label %cond.false.184

cond.true.100:                                    ; preds = %if.then.96
  %59 = load i32, i32* %regno.addr, align 4
  %cmp101 = icmp uge i32 %59, 8
  br i1 %cmp101, label %land.lhs.true.103, label %lor.lhs.false.106

land.lhs.true.103:                                ; preds = %cond.true.100
  %60 = load i32, i32* %regno.addr, align 4
  %cmp104 = icmp ule i32 %60, 15
  br i1 %cmp104, label %cond.true.124, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %land.lhs.true.103, %cond.true.100
  %61 = load i32, i32* %regno.addr, align 4
  %cmp107 = icmp uge i32 %61, 21
  br i1 %cmp107, label %land.lhs.true.109, label %lor.lhs.false.112

land.lhs.true.109:                                ; preds = %lor.lhs.false.106
  %62 = load i32, i32* %regno.addr, align 4
  %cmp110 = icmp ule i32 %62, 28
  br i1 %cmp110, label %cond.true.124, label %lor.lhs.false.112

lor.lhs.false.112:                                ; preds = %land.lhs.true.109, %lor.lhs.false.106
  %63 = load i32, i32* %regno.addr, align 4
  %cmp113 = icmp uge i32 %63, 45
  br i1 %cmp113, label %land.lhs.true.115, label %lor.lhs.false.118

land.lhs.true.115:                                ; preds = %lor.lhs.false.112
  %64 = load i32, i32* %regno.addr, align 4
  %cmp116 = icmp ule i32 %64, 52
  br i1 %cmp116, label %cond.true.124, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %land.lhs.true.115, %lor.lhs.false.112
  %65 = load i32, i32* %regno.addr, align 4
  %cmp119 = icmp uge i32 %65, 29
  br i1 %cmp119, label %land.lhs.true.121, label %cond.false.142

land.lhs.true.121:                                ; preds = %lor.lhs.false.118
  %66 = load i32, i32* %regno.addr, align 4
  %cmp122 = icmp ule i32 %66, 36
  br i1 %cmp122, label %cond.true.124, label %cond.false.142

cond.true.124:                                    ; preds = %land.lhs.true.121, %land.lhs.true.115, %land.lhs.true.109, %land.lhs.true.103
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load125 = load i32, i32* %68, align 8
  %bf.lshr126 = lshr i32 %bf.load125, 16
  %bf.clear127 = and i32 %bf.lshr126, 255
  %idxprom128 = sext i32 %bf.clear127 to i64
  %arrayidx129 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom128
  %69 = load i32, i32* %arrayidx129, align 4
  %cmp130 = icmp eq i32 %69, 5
  br i1 %cmp130, label %lor.end.140, label %lor.rhs.132

lor.rhs.132:                                      ; preds = %cond.true.124
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load133 = load i32, i32* %71, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %idxprom136 = sext i32 %bf.clear135 to i64
  %arrayidx137 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom136
  %72 = load i32, i32* %arrayidx137, align 4
  %cmp138 = icmp eq i32 %72, 6
  br label %lor.end.140

lor.end.140:                                      ; preds = %lor.rhs.132, %cond.true.124
  %73 = phi i1 [ true, %cond.true.124 ], [ %cmp138, %lor.rhs.132 ]
  %cond141 = select i1 %73, i32 2, i32 1
  br label %cond.end.182

cond.false.142:                                   ; preds = %land.lhs.true.121, %lor.lhs.false.118
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load143 = load i32, i32* %75, align 8
  %bf.lshr144 = lshr i32 %bf.load143, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  %cmp146 = icmp eq i32 %bf.clear145, 18
  br i1 %cmp146, label %cond.true.148, label %cond.false.152

cond.true.148:                                    ; preds = %cond.false.142
  %76 = load i32, i32* @target_flags, align 4
  %and149 = and i32 %76, 33554432
  %tobool150 = icmp ne i32 %and149, 0
  %cond151 = select i1 %tobool150, i32 2, i32 3
  br label %cond.end.180

cond.false.152:                                   ; preds = %cond.false.142
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load153 = load i32, i32* %78, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 16
  %bf.clear155 = and i32 %bf.lshr154, 255
  %cmp156 = icmp eq i32 %bf.clear155, 24
  br i1 %cmp156, label %cond.true.158, label %cond.false.162

cond.true.158:                                    ; preds = %cond.false.152
  %79 = load i32, i32* @target_flags, align 4
  %and159 = and i32 %79, 33554432
  %tobool160 = icmp ne i32 %and159, 0
  %cond161 = select i1 %tobool160, i32 4, i32 6
  br label %cond.end.178

cond.false.162:                                   ; preds = %cond.false.152
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load163 = load i32, i32* %81, align 8
  %bf.lshr164 = lshr i32 %bf.load163, 16
  %bf.clear165 = and i32 %bf.lshr164, 255
  %idxprom166 = sext i32 %bf.clear165 to i64
  %arrayidx167 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom166
  %82 = load i8, i8* %arrayidx167, align 1
  %conv168 = zext i8 %82 to i32
  %83 = load i32, i32* @target_flags, align 4
  %and169 = and i32 %83, 33554432
  %tobool170 = icmp ne i32 %and169, 0
  %cond171 = select i1 %tobool170, i32 8, i32 4
  %add172 = add nsw i32 %conv168, %cond171
  %sub173 = sub nsw i32 %add172, 1
  %84 = load i32, i32* @target_flags, align 4
  %and174 = and i32 %84, 33554432
  %tobool175 = icmp ne i32 %and174, 0
  %cond176 = select i1 %tobool175, i32 8, i32 4
  %div177 = sdiv i32 %sub173, %cond176
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.false.162, %cond.true.158
  %cond179 = phi i32 [ %cond161, %cond.true.158 ], [ %div177, %cond.false.162 ]
  br label %cond.end.180

cond.end.180:                                     ; preds = %cond.end.178, %cond.true.148
  %cond181 = phi i32 [ %cond151, %cond.true.148 ], [ %cond179, %cond.end.178 ]
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.end.180, %lor.end.140
  %cond183 = phi i32 [ %cond141, %lor.end.140 ], [ %cond181, %cond.end.180 ]
  br label %cond.end.185

cond.false.184:                                   ; preds = %if.then.96
  br label %cond.end.185

cond.end.185:                                     ; preds = %cond.false.184, %cond.end.182
  %cond186 = phi i32 [ %cond183, %cond.end.182 ], [ 1, %cond.false.184 ]
  %add187 = add i32 %57, %cond186
  store i32 %add187, i32* %inner_endregno, align 4
  %85 = load i32, i32* %endregno.addr, align 4
  %86 = load i32, i32* %inner_regno, align 4
  %cmp188 = icmp ugt i32 %85, %86
  br i1 %cmp188, label %land.rhs.190, label %land.end.193

land.rhs.190:                                     ; preds = %cond.end.185
  %87 = load i32, i32* %regno.addr, align 4
  %88 = load i32, i32* %inner_endregno, align 4
  %cmp191 = icmp ult i32 %87, %88
  br label %land.end.193

land.end.193:                                     ; preds = %land.rhs.190, %cond.end.185
  %89 = phi i1 [ false, %cond.end.185 ], [ %cmp191, %land.rhs.190 ]
  %land.ext194 = zext i1 %89 to i32
  store i32 %land.ext194, i32* %retval
  br label %return

if.end.195:                                       ; preds = %land.lhs.true.87, %sw.bb.80
  br label %sw.epilog

sw.bb.196:                                        ; preds = %repeat, %repeat
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 0
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %91 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %cmp200 = icmp ne %struct.rtx_def** %rtx199, %91
  br i1 %cmp200, label %land.lhs.true.202, label %if.end.272

land.lhs.true.202:                                ; preds = %sw.bb.196
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i32 0, i64 0
  %rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx205, align 8
  %94 = bitcast %struct.rtx_def* %93 to i32*
  %bf.load206 = load i32, i32* %94, align 8
  %bf.clear207 = and i32 %bf.load206, 65535
  %cmp208 = icmp eq i32 %bf.clear207, 63
  br i1 %cmp208, label %land.lhs.true.210, label %lor.lhs.false.251

land.lhs.true.210:                                ; preds = %land.lhs.true.202
  %95 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 0
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 0
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %cmp217 = icmp ne %struct.rtx_def** %95, %rtx216
  br i1 %cmp217, label %land.lhs.true.219, label %lor.lhs.false.251

land.lhs.true.219:                                ; preds = %land.lhs.true.210
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i32 0, i64 0
  %rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx222, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 0
  %rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx225, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load226 = load i32, i32* %101, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 61
  br i1 %cmp228, label %land.lhs.true.230, label %lor.lhs.false.251

land.lhs.true.230:                                ; preds = %land.lhs.true.219
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 0
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx236, align 8
  %fld237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i32 0, i64 0
  %rtuint239 = bitcast %union.rtunion_def* %arrayidx238 to i32*
  %105 = load i32, i32* %rtuint239, align 4
  %cmp240 = icmp uge i32 %105, 53
  br i1 %cmp240, label %land.lhs.true.242, label %lor.lhs.false.251

land.lhs.true.242:                                ; preds = %land.lhs.true.230
  %106 = load i32, i32* %regno.addr, align 4
  %107 = load i32, i32* %endregno.addr, align 4
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i32 0, i64 0
  %rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx245, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx248, align 8
  %111 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %call249 = call i32 @refers_to_regno_for_reload_p(i32 %106, i32 %107, %struct.rtx_def* %110, %struct.rtx_def** %111)
  %tobool250 = icmp ne i32 %call249, 0
  br i1 %tobool250, label %if.then.271, label %lor.lhs.false.251

lor.lhs.false.251:                                ; preds = %land.lhs.true.242, %land.lhs.true.230, %land.lhs.true.219, %land.lhs.true.210, %land.lhs.true.202
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load255 = load i32, i32* %114, align 8
  %bf.clear256 = and i32 %bf.load255, 65535
  %cmp257 = icmp ne i32 %bf.clear256, 61
  br i1 %cmp257, label %land.lhs.true.265, label %lor.lhs.false.259

lor.lhs.false.259:                                ; preds = %lor.lhs.false.251
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 0
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx262, align 8
  %call263 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %116)
  %tobool264 = icmp ne i32 %call263, 0
  br i1 %tobool264, label %land.lhs.true.265, label %if.end.272

land.lhs.true.265:                                ; preds = %lor.lhs.false.259, %lor.lhs.false.251
  %117 = load i32, i32* %regno.addr, align 4
  %118 = load i32, i32* %endregno.addr, align 4
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld266, i32 0, i64 0
  %rtx268 = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx268, align 8
  %121 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %call269 = call i32 @refers_to_regno_for_reload_p(i32 %117, i32 %118, %struct.rtx_def* %120, %struct.rtx_def** %121)
  %tobool270 = icmp ne i32 %call269, 0
  br i1 %tobool270, label %if.then.271, label %if.end.272

if.then.271:                                      ; preds = %land.lhs.true.265, %land.lhs.true.242
  store i32 1, i32* %retval
  br label %return

if.end.272:                                       ; preds = %land.lhs.true.265, %lor.lhs.false.259, %sw.bb.196
  %122 = load i32, i32* %code, align 4
  %cmp273 = icmp eq i32 %122, 49
  br i1 %cmp273, label %if.then.281, label %lor.lhs.false.275

lor.lhs.false.275:                                ; preds = %if.end.272
  %123 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 1
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %cmp279 = icmp eq %struct.rtx_def** %123, %rtx278
  br i1 %cmp279, label %if.then.281, label %if.end.282

if.then.281:                                      ; preds = %lor.lhs.false.275, %if.end.272
  store i32 0, i32* %retval
  br label %return

if.end.282:                                       ; preds = %lor.lhs.false.275
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 1
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx285, align 8
  store %struct.rtx_def* %126, %struct.rtx_def** %x.addr, align 8
  br label %repeat

sw.default:                                       ; preds = %repeat
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.195
  %127 = load i32, i32* %code, align 4
  %idxprom286 = sext i32 %127 to i64
  %arrayidx287 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom286
  %128 = load i8*, i8** %arrayidx287, align 8
  store i8* %128, i8** %fmt, align 8
  %129 = load i32, i32* %code, align 4
  %idxprom288 = sext i32 %129 to i64
  %arrayidx289 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom288
  %130 = load i8, i8* %arrayidx289, align 1
  %conv290 = zext i8 %130 to i32
  %sub291 = sub nsw i32 %conv290, 1
  store i32 %sub291, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.359, %sw.epilog
  %131 = load i32, i32* %i, align 4
  %cmp292 = icmp sge i32 %131, 0
  br i1 %cmp292, label %for.body, label %for.end.361

for.body:                                         ; preds = %for.cond
  %132 = load i32, i32* %i, align 4
  %idxprom294 = sext i32 %132 to i64
  %133 = load i8*, i8** %fmt, align 8
  %arrayidx295 = getelementptr inbounds i8, i8* %133, i64 %idxprom294
  %134 = load i8, i8* %arrayidx295, align 1
  %conv296 = sext i8 %134 to i32
  %cmp297 = icmp eq i32 %conv296, 101
  br i1 %cmp297, label %land.lhs.true.299, label %if.else.322

land.lhs.true.299:                                ; preds = %for.body
  %135 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %136 = load i32, i32* %i, align 4
  %idxprom300 = sext i32 %136 to i64
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx302 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld301, i32 0, i64 %idxprom300
  %rtx303 = bitcast %union.rtunion_def* %arrayidx302 to %struct.rtx_def**
  %cmp304 = icmp ne %struct.rtx_def** %135, %rtx303
  br i1 %cmp304, label %if.then.306, label %if.else.322

if.then.306:                                      ; preds = %land.lhs.true.299
  %138 = load i32, i32* %i, align 4
  %cmp307 = icmp eq i32 %138, 0
  br i1 %cmp307, label %if.then.309, label %if.else

if.then.309:                                      ; preds = %if.then.306
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i32 0, i64 0
  %rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx312, align 8
  store %struct.rtx_def* %140, %struct.rtx_def** %x.addr, align 8
  br label %repeat

if.else:                                          ; preds = %if.then.306
  %141 = load i32, i32* %regno.addr, align 4
  %142 = load i32, i32* %endregno.addr, align 4
  %143 = load i32, i32* %i, align 4
  %idxprom313 = sext i32 %143 to i64
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 %idxprom313
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx316, align 8
  %146 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %call317 = call i32 @refers_to_regno_for_reload_p(i32 %141, i32 %142, %struct.rtx_def* %145, %struct.rtx_def** %146)
  %tobool318 = icmp ne i32 %call317, 0
  br i1 %tobool318, label %if.then.319, label %if.end.320

if.then.319:                                      ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end.320:                                       ; preds = %if.else
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.320
  br label %if.end.358

if.else.322:                                      ; preds = %land.lhs.true.299, %for.body
  %147 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %147 to i64
  %148 = load i8*, i8** %fmt, align 8
  %arrayidx324 = getelementptr inbounds i8, i8* %148, i64 %idxprom323
  %149 = load i8, i8* %arrayidx324, align 1
  %conv325 = sext i8 %149 to i32
  %cmp326 = icmp eq i32 %conv325, 69
  br i1 %cmp326, label %if.then.328, label %if.end.357

if.then.328:                                      ; preds = %if.else.322
  %150 = load i32, i32* %i, align 4
  %idxprom329 = sext i32 %150 to i64
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i32 0, i64 %idxprom329
  %rtvec = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtvec_def**
  %152 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %152, i32 0, i32 0
  %153 = load i32, i32* %num_elem, align 4
  %sub332 = sub nsw i32 %153, 1
  store i32 %sub332, i32* %j, align 4
  br label %for.cond.333

for.cond.333:                                     ; preds = %for.inc, %if.then.328
  %154 = load i32, i32* %j, align 4
  %cmp334 = icmp sge i32 %154, 0
  br i1 %cmp334, label %for.body.336, label %for.end

for.body.336:                                     ; preds = %for.cond.333
  %155 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %156 = load i32, i32* %j, align 4
  %idxprom337 = sext i32 %156 to i64
  %157 = load i32, i32* %i, align 4
  %idxprom338 = sext i32 %157 to i64
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx340 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld339, i32 0, i64 %idxprom338
  %rtvec341 = bitcast %union.rtunion_def* %arrayidx340 to %struct.rtvec_def**
  %159 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec341, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %159, i32 0, i32 1
  %arrayidx342 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom337
  %cmp343 = icmp ne %struct.rtx_def** %155, %arrayidx342
  br i1 %cmp343, label %land.lhs.true.345, label %if.end.356

land.lhs.true.345:                                ; preds = %for.body.336
  %160 = load i32, i32* %regno.addr, align 4
  %161 = load i32, i32* %endregno.addr, align 4
  %162 = load i32, i32* %j, align 4
  %idxprom346 = sext i32 %162 to i64
  %163 = load i32, i32* %i, align 4
  %idxprom347 = sext i32 %163 to i64
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 %idxprom347
  %rtvec350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtvec_def**
  %165 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec350, align 8
  %elem351 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %165, i32 0, i32 1
  %arrayidx352 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem351, i32 0, i64 %idxprom346
  %166 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx352, align 8
  %167 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %call353 = call i32 @refers_to_regno_for_reload_p(i32 %160, i32 %161, %struct.rtx_def* %166, %struct.rtx_def** %167)
  %tobool354 = icmp ne i32 %call353, 0
  br i1 %tobool354, label %if.then.355, label %if.end.356

if.then.355:                                      ; preds = %land.lhs.true.345
  store i32 1, i32* %retval
  br label %return

if.end.356:                                       ; preds = %land.lhs.true.345, %for.body.336
  br label %for.inc

for.inc:                                          ; preds = %if.end.356
  %168 = load i32, i32* %j, align 4
  %dec = add nsw i32 %168, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.333

for.end:                                          ; preds = %for.cond.333
  br label %if.end.357

if.end.357:                                       ; preds = %for.end, %if.else.322
  br label %if.end.358

if.end.358:                                       ; preds = %if.end.357, %if.end.321
  br label %for.inc.359

for.inc.359:                                      ; preds = %if.end.358
  %169 = load i32, i32* %i, align 4
  %dec360 = add nsw i32 %169, -1
  store i32 %dec360, i32* %i, align 4
  br label %for.cond

for.end.361:                                      ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end.361, %if.then.355, %if.then.319, %if.then.281, %if.then.271, %land.end.193, %land.end, %if.then.11, %if.then.4, %if.then
  %170 = load i32, i32* %retval
  ret i32 %170
}

; Function Attrs: nounwind uwtable
define internal i32 @hard_reg_set_here_p(i32 %beg_regno, i32 %end_regno, %struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %beg_regno.addr = alloca i32, align 4
  %end_regno.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %beg_regno, i32* %beg_regno.addr, align 4
  store i32 %end_regno, i32* %end_regno.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 49
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %op0, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 63
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  store %struct.rtx_def* %9, %struct.rtx_def** %op0, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load10 = load i32, i32* %11, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 61
  br i1 %cmp12, label %if.then.13, label %if.end.78

if.then.13:                                       ; preds = %while.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %13 = load i32, i32* %rtuint, align 4
  store i32 %13, i32* %r, align 4
  %14 = load i32, i32* %r, align 4
  %15 = load i32, i32* %end_regno.addr, align 4
  %cmp16 = icmp ult i32 %14, %15
  br i1 %cmp16, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then.13
  %16 = load i32, i32* %r, align 4
  %17 = load i32, i32* %r, align 4
  %cmp17 = icmp uge i32 %17, 8
  br i1 %cmp17, label %land.lhs.true.18, label %lor.lhs.false.20

land.lhs.true.18:                                 ; preds = %land.lhs.true
  %18 = load i32, i32* %r, align 4
  %cmp19 = icmp ule i32 %18, 15
  br i1 %cmp19, label %cond.true, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %land.lhs.true.18, %land.lhs.true
  %19 = load i32, i32* %r, align 4
  %cmp21 = icmp uge i32 %19, 21
  br i1 %cmp21, label %land.lhs.true.22, label %lor.lhs.false.24

land.lhs.true.22:                                 ; preds = %lor.lhs.false.20
  %20 = load i32, i32* %r, align 4
  %cmp23 = icmp ule i32 %20, 28
  br i1 %cmp23, label %cond.true, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %land.lhs.true.22, %lor.lhs.false.20
  %21 = load i32, i32* %r, align 4
  %cmp25 = icmp uge i32 %21, 45
  br i1 %cmp25, label %land.lhs.true.26, label %lor.lhs.false.28

land.lhs.true.26:                                 ; preds = %lor.lhs.false.24
  %22 = load i32, i32* %r, align 4
  %cmp27 = icmp ule i32 %22, 52
  br i1 %cmp27, label %cond.true, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %land.lhs.true.26, %lor.lhs.false.24
  %23 = load i32, i32* %r, align 4
  %cmp29 = icmp uge i32 %23, 29
  br i1 %cmp29, label %land.lhs.true.30, label %cond.false

land.lhs.true.30:                                 ; preds = %lor.lhs.false.28
  %24 = load i32, i32* %r, align 4
  %cmp31 = icmp ule i32 %24, 36
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.30, %land.lhs.true.26, %land.lhs.true.22, %land.lhs.true.18
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load32 = load i32, i32* %26, align 8
  %bf.lshr = lshr i32 %bf.load32, 16
  %bf.clear33 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear33 to i64
  %arrayidx34 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %27 = load i32, i32* %arrayidx34, align 4
  %cmp35 = icmp eq i32 %27, 5
  br i1 %cmp35, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load36 = load i32, i32* %29, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 16
  %bf.clear38 = and i32 %bf.lshr37, 255
  %idxprom39 = sext i32 %bf.clear38 to i64
  %arrayidx40 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom39
  %30 = load i32, i32* %arrayidx40, align 4
  %cmp41 = icmp eq i32 %30, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %31 = phi i1 [ true, %cond.true ], [ %cmp41, %lor.rhs ]
  %cond = select i1 %31, i32 2, i32 1
  br label %cond.end.72

cond.false:                                       ; preds = %land.lhs.true.30, %lor.lhs.false.28
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load42 = load i32, i32* %33, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 16
  %bf.clear44 = and i32 %bf.lshr43, 255
  %cmp45 = icmp eq i32 %bf.clear44, 18
  br i1 %cmp45, label %cond.true.46, label %cond.false.48

cond.true.46:                                     ; preds = %cond.false
  %34 = load i32, i32* @target_flags, align 4
  %and = and i32 %34, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond47 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.70

cond.false.48:                                    ; preds = %cond.false
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load49 = load i32, i32* %36, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 24
  br i1 %cmp52, label %cond.true.53, label %cond.false.57

cond.true.53:                                     ; preds = %cond.false.48
  %37 = load i32, i32* @target_flags, align 4
  %and54 = and i32 %37, 33554432
  %tobool55 = icmp ne i32 %and54, 0
  %cond56 = select i1 %tobool55, i32 4, i32 6
  br label %cond.end

cond.false.57:                                    ; preds = %cond.false.48
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load58 = load i32, i32* %39, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %idxprom61 = sext i32 %bf.clear60 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom61
  %40 = load i8, i8* %arrayidx62, align 1
  %conv = zext i8 %40 to i32
  %41 = load i32, i32* @target_flags, align 4
  %and63 = and i32 %41, 33554432
  %tobool64 = icmp ne i32 %and63, 0
  %cond65 = select i1 %tobool64, i32 8, i32 4
  %add = add nsw i32 %conv, %cond65
  %sub = sub nsw i32 %add, 1
  %42 = load i32, i32* @target_flags, align 4
  %and66 = and i32 %42, 33554432
  %tobool67 = icmp ne i32 %and66, 0
  %cond68 = select i1 %tobool67, i32 8, i32 4
  %div = sdiv i32 %sub, %cond68
  br label %cond.end

cond.end:                                         ; preds = %cond.false.57, %cond.true.53
  %cond69 = phi i32 [ %cond56, %cond.true.53 ], [ %div, %cond.false.57 ]
  br label %cond.end.70

cond.end.70:                                      ; preds = %cond.end, %cond.true.46
  %cond71 = phi i32 [ %cond47, %cond.true.46 ], [ %cond69, %cond.end ]
  br label %cond.end.72

cond.end.72:                                      ; preds = %cond.end.70, %lor.end
  %cond73 = phi i32 [ %cond, %lor.end ], [ %cond71, %cond.end.70 ]
  %add74 = add i32 %16, %cond73
  %43 = load i32, i32* %beg_regno.addr, align 4
  %cmp75 = icmp ugt i32 %add74, %43
  br i1 %cmp75, label %if.then.77, label %if.end

if.then.77:                                       ; preds = %cond.end.72
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.72, %if.then.13
  br label %if.end.78

if.end.78:                                        ; preds = %if.end, %while.end
  br label %if.end.98

if.else:                                          ; preds = %lor.lhs.false
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load79 = load i32, i32* %45, align 8
  %bf.clear80 = and i32 %bf.load79, 65535
  %cmp81 = icmp eq i32 %bf.clear80, 39
  br i1 %cmp81, label %if.then.83, label %if.end.97

if.then.83:                                       ; preds = %if.else
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtvec_def**
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i32 0, i32 0
  %48 = load i32, i32* %num_elem, align 4
  %sub86 = sub nsw i32 %48, 1
  store i32 %sub86, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.83
  %49 = load i32, i32* %i, align 4
  %cmp87 = icmp sge i32 %49, 0
  br i1 %cmp87, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %50 = load i32, i32* %beg_regno.addr, align 4
  %51 = load i32, i32* %end_regno.addr, align 4
  %52 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %52 to i64
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtvec92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtvec_def**
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec92, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom89
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx93, align 8
  %call = call i32 @hard_reg_set_here_p(i32 %50, i32 %51, %struct.rtx_def* %55)
  %tobool94 = icmp ne i32 %call, 0
  br i1 %tobool94, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end.96:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.96
  %56 = load i32, i32* %i, align 4
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.97

if.end.97:                                        ; preds = %for.end, %if.else
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97, %if.end.78
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.98, %if.then.95, %if.then.77
  %57 = load i32, i32* %retval
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define void @transfer_replacements(i32 %to, i32 %from) #0 {
entry:
  %to.addr = alloca i32, align 4
  %from.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %to, i32* %to.addr, align 4
  store i32 %from, i32* %from.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_replacements, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx, i32 0, i32 2
  %3 = load i32, i32* %what, align 4
  %4 = load i32, i32* %from.addr, align 4
  %cmp1 = icmp eq i32 %3, %4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %to.addr, align 4
  %6 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom2
  %what4 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx3, i32 0, i32 2
  store i32 %5, i32* %what4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @loc_mentioned_in_p(%struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare void @deallocate_reload_reg(i32) #1

declare i32 @legitimate_address_p(i32, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @operands_match_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %success_2 = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i32, align 4
  %j172 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %code, align 4
  %cmp1 = icmp eq i32 %4, 61
  br i1 %cmp1, label %land.lhs.true.6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %code, align 4
  %cmp2 = icmp eq i32 %5, 63
  br i1 %cmp2, label %land.lhs.true, label %if.end.92

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load3 = load i32, i32* %8, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 61
  br i1 %cmp5, label %land.lhs.true.6, label %if.end.92

land.lhs.true.6:                                  ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load7 = load i32, i32* %10, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %if.then.21, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %land.lhs.true.6
  %11 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load11 = load i32, i32* %12, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 63
  br i1 %cmp13, label %land.lhs.true.14, label %if.end.92

land.lhs.true.14:                                 ; preds = %lor.lhs.false.10
  %13 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load18 = load i32, i32* %15, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %if.then.21, label %if.end.92

if.then.21:                                       ; preds = %land.lhs.true.14, %land.lhs.true.6
  %16 = load i32, i32* %code, align 4
  %cmp22 = icmp eq i32 %16, 63
  br i1 %cmp22, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %if.then.21
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %19 = load i32, i32* %rtuint, align 4
  store i32 %19, i32* %i, align 4
  %20 = load i32, i32* %i, align 4
  %cmp29 = icmp sge i32 %20, 53
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.then.23
  br label %slow

if.end.31:                                        ; preds = %if.then.23
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %23 = load i32, i32* %rtuint37, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load41 = load i32, i32* %26, align 8
  %bf.lshr = lshr i32 %bf.load41, 16
  %bf.clear42 = and i32 %bf.lshr, 255
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 1
  %rtuint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %28 = load i32, i32* %rtuint45, align 4
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load46 = load i32, i32* %30, align 8
  %bf.lshr47 = lshr i32 %bf.load46, 16
  %bf.clear48 = and i32 %bf.lshr47, 255
  %call = call i32 @subreg_regno_offset(i32 %23, i32 %bf.clear42, i32 %28, i32 %bf.clear48)
  %31 = load i32, i32* %i, align 4
  %add = add i32 %31, %call
  store i32 %add, i32* %i, align 4
  br label %if.end.52

if.else:                                          ; preds = %if.then.21
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 0
  %rtuint51 = bitcast %union.rtunion_def* %arrayidx50 to i32*
  %33 = load i32, i32* %rtuint51, align 4
  store i32 %33, i32* %i, align 4
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.end.31
  %34 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load53 = load i32, i32* %35, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  %cmp55 = icmp eq i32 %bf.clear54, 63
  br i1 %cmp55, label %if.then.56, label %if.else.86

if.then.56:                                       ; preds = %if.end.52
  %36 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %38 = load i32, i32* %rtuint62, align 4
  store i32 %38, i32* %j, align 4
  %39 = load i32, i32* %j, align 4
  %cmp63 = icmp sge i32 %39, 53
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.then.56
  br label %slow

if.end.65:                                        ; preds = %if.then.56
  %40 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx68, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtuint71 = bitcast %union.rtunion_def* %arrayidx70 to i32*
  %42 = load i32, i32* %rtuint71, align 4
  %43 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx74, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load75 = load i32, i32* %45, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %46 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i32 0, i64 1
  %rtuint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %47 = load i32, i32* %rtuint80, align 4
  %48 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load81 = load i32, i32* %49, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %call84 = call i32 @subreg_regno_offset(i32 %42, i32 %bf.clear77, i32 %47, i32 %bf.clear83)
  %50 = load i32, i32* %j, align 4
  %add85 = add i32 %50, %call84
  store i32 %add85, i32* %j, align 4
  br label %if.end.90

if.else.86:                                       ; preds = %if.end.52
  %51 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 0
  %rtuint89 = bitcast %union.rtunion_def* %arrayidx88 to i32*
  %52 = load i32, i32* %rtuint89, align 4
  store i32 %52, i32* %j, align 4
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.86, %if.end.65
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %cmp91 = icmp eq i32 %53, %54
  %conv = zext i1 %cmp91 to i32
  store i32 %conv, i32* %retval
  br label %return

if.end.92:                                        ; preds = %land.lhs.true.14, %lor.lhs.false.10, %land.lhs.true, %lor.lhs.false
  %55 = load i32, i32* %code, align 4
  %cmp93 = icmp eq i32 %55, 98
  br i1 %cmp93, label %if.then.101, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %if.end.92
  %56 = load i32, i32* %code, align 4
  %cmp96 = icmp eq i32 %56, 99
  br i1 %cmp96, label %if.then.101, label %lor.lhs.false.98

lor.lhs.false.98:                                 ; preds = %lor.lhs.false.95
  %57 = load i32, i32* %code, align 4
  %cmp99 = icmp eq i32 %57, 101
  br i1 %cmp99, label %if.then.101, label %if.end.106

if.then.101:                                      ; preds = %lor.lhs.false.98, %lor.lhs.false.95, %if.end.92
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call105 = call i32 @operands_match_p(%struct.rtx_def* %59, %struct.rtx_def* %60)
  store i32 %call105, i32* %retval
  br label %return

if.end.106:                                       ; preds = %lor.lhs.false.98
  %61 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load107 = load i32, i32* %62, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 96
  br i1 %cmp109, label %if.then.121, label %lor.lhs.false.111

lor.lhs.false.111:                                ; preds = %if.end.106
  %63 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load112 = load i32, i32* %64, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 97
  br i1 %cmp114, label %if.then.121, label %lor.lhs.false.116

lor.lhs.false.116:                                ; preds = %lor.lhs.false.111
  %65 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load117 = load i32, i32* %66, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 100
  br i1 %cmp119, label %if.then.121, label %if.end.126

if.then.121:                                      ; preds = %lor.lhs.false.116, %lor.lhs.false.111, %if.end.106
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 0
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %call125 = call i32 @operands_match_p(%struct.rtx_def* %67, %struct.rtx_def* %69)
  %tobool = icmp ne i32 %call125, 0
  %cond = select i1 %tobool, i32 2, i32 0
  store i32 %cond, i32* %retval
  br label %return

if.end.126:                                       ; preds = %lor.lhs.false.116
  br label %slow

slow:                                             ; preds = %if.end.126, %if.then.64, %if.then.30
  %70 = load i32, i32* %code, align 4
  %71 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load127 = load i32, i32* %72, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp ne i32 %70, %bf.clear128
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %slow
  store i32 0, i32* %retval
  br label %return

if.end.132:                                       ; preds = %slow
  %73 = load i32, i32* %code, align 4
  %cmp133 = icmp eq i32 %73, 67
  br i1 %cmp133, label %if.then.135, label %if.end.144

if.then.135:                                      ; preds = %if.end.132
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 0
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx138, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 0
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  %cmp142 = icmp eq %struct.rtx_def* %75, %77
  %conv143 = zext i1 %cmp142 to i32
  store i32 %conv143, i32* %retval
  br label %return

if.end.144:                                       ; preds = %if.end.132
  %78 = load i32, i32* %code, align 4
  %cmp145 = icmp eq i32 %78, 68
  br i1 %cmp145, label %if.then.147, label %if.end.155

if.then.147:                                      ; preds = %if.end.144
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx149 to i8**
  %80 = load i8*, i8** %rtstr, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 0
  %rtstr152 = bitcast %union.rtunion_def* %arrayidx151 to i8**
  %82 = load i8*, i8** %rtstr152, align 8
  %cmp153 = icmp eq i8* %80, %82
  %conv154 = zext i1 %cmp153 to i32
  store i32 %conv154, i32* %retval
  br label %return

if.end.155:                                       ; preds = %if.end.144
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load156 = load i32, i32* %84, align 8
  %bf.lshr157 = lshr i32 %bf.load156, 16
  %bf.clear158 = and i32 %bf.lshr157, 255
  %85 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load159 = load i32, i32* %86, align 8
  %bf.lshr160 = lshr i32 %bf.load159, 16
  %bf.clear161 = and i32 %bf.lshr160, 255
  %cmp162 = icmp ne i32 %bf.clear158, %bf.clear161
  br i1 %cmp162, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %if.end.155
  store i32 0, i32* %retval
  br label %return

if.end.165:                                       ; preds = %if.end.155
  store i32 0, i32* %success_2, align 4
  %87 = load i32, i32* %code, align 4
  %idxprom = sext i32 %87 to i64
  %arrayidx166 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %88 = load i8*, i8** %arrayidx166, align 8
  store i8* %88, i8** %fmt, align 8
  %89 = load i32, i32* %code, align 4
  %idxprom167 = sext i32 %89 to i64
  %arrayidx168 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom167
  %90 = load i8, i8* %arrayidx168, align 1
  %conv169 = zext i8 %90 to i32
  %sub = sub nsw i32 %conv169, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.263, %if.end.165
  %91 = load i32, i32* %i, align 4
  %cmp170 = icmp sge i32 %91, 0
  br i1 %cmp170, label %for.body, label %for.end.265

for.body:                                         ; preds = %for.cond
  %92 = load i32, i32* %i, align 4
  %idxprom173 = sext i32 %92 to i64
  %93 = load i8*, i8** %fmt, align 8
  %arrayidx174 = getelementptr inbounds i8, i8* %93, i64 %idxprom173
  %94 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %94 to i32
  switch i32 %conv175, label %sw.default [
    i32 119, label %sw.bb
    i32 105, label %sw.bb.187
    i32 101, label %sw.bb.199
    i32 48, label %sw.bb.217
    i32 69, label %sw.bb.218
  ]

sw.bb:                                            ; preds = %for.body
  %95 = load i32, i32* %i, align 4
  %idxprom176 = sext i32 %95 to i64
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 %idxprom176
  %rtwint = bitcast %union.rtunion_def* %arrayidx178 to i64*
  %97 = load i64, i64* %rtwint, align 8
  %98 = load i32, i32* %i, align 4
  %idxprom179 = sext i32 %98 to i64
  %99 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i32 0, i64 %idxprom179
  %rtwint182 = bitcast %union.rtunion_def* %arrayidx181 to i64*
  %100 = load i64, i64* %rtwint182, align 8
  %cmp183 = icmp ne i64 %97, %100
  br i1 %cmp183, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %sw.bb
  store i32 0, i32* %retval
  br label %return

if.end.186:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.bb.187:                                        ; preds = %for.body
  %101 = load i32, i32* %i, align 4
  %idxprom188 = sext i32 %101 to i64
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 %idxprom188
  %rtint = bitcast %union.rtunion_def* %arrayidx190 to i32*
  %103 = load i32, i32* %rtint, align 4
  %104 = load i32, i32* %i, align 4
  %idxprom191 = sext i32 %104 to i64
  %105 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 %idxprom191
  %rtint194 = bitcast %union.rtunion_def* %arrayidx193 to i32*
  %106 = load i32, i32* %rtint194, align 4
  %cmp195 = icmp ne i32 %103, %106
  br i1 %cmp195, label %if.then.197, label %if.end.198

if.then.197:                                      ; preds = %sw.bb.187
  store i32 0, i32* %retval
  br label %return

if.end.198:                                       ; preds = %sw.bb.187
  br label %sw.epilog

sw.bb.199:                                        ; preds = %for.body
  %107 = load i32, i32* %i, align 4
  %idxprom200 = sext i32 %107 to i64
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 %idxprom200
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  %110 = load i32, i32* %i, align 4
  %idxprom204 = sext i32 %110 to i64
  %111 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 %idxprom204
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %call208 = call i32 @operands_match_p(%struct.rtx_def* %109, %struct.rtx_def* %112)
  store i32 %call208, i32* %val, align 4
  %113 = load i32, i32* %val, align 4
  %cmp209 = icmp eq i32 %113, 0
  br i1 %cmp209, label %if.then.211, label %if.end.212

if.then.211:                                      ; preds = %sw.bb.199
  store i32 0, i32* %retval
  br label %return

if.end.212:                                       ; preds = %sw.bb.199
  %114 = load i32, i32* %val, align 4
  %cmp213 = icmp eq i32 %114, 2
  br i1 %cmp213, label %if.then.215, label %if.end.216

if.then.215:                                      ; preds = %if.end.212
  store i32 1, i32* %success_2, align 4
  br label %if.end.216

if.end.216:                                       ; preds = %if.then.215, %if.end.212
  br label %sw.epilog

sw.bb.217:                                        ; preds = %for.body
  br label %sw.epilog

sw.bb.218:                                        ; preds = %for.body
  %115 = load i32, i32* %i, align 4
  %idxprom219 = sext i32 %115 to i64
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i32 0, i64 %idxprom219
  %rtvec = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtvec_def**
  %117 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %117, i32 0, i32 0
  %118 = load i32, i32* %num_elem, align 4
  %119 = load i32, i32* %i, align 4
  %idxprom222 = sext i32 %119 to i64
  %120 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 %idxprom222
  %rtvec225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtvec_def**
  %121 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec225, align 8
  %num_elem226 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %121, i32 0, i32 0
  %122 = load i32, i32* %num_elem226, align 4
  %cmp227 = icmp ne i32 %118, %122
  br i1 %cmp227, label %if.then.229, label %if.end.230

if.then.229:                                      ; preds = %sw.bb.218
  store i32 0, i32* %retval
  br label %return

if.end.230:                                       ; preds = %sw.bb.218
  %123 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %123 to i64
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 %idxprom231
  %rtvec234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtvec_def**
  %125 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec234, align 8
  %num_elem235 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %125, i32 0, i32 0
  %126 = load i32, i32* %num_elem235, align 4
  %sub236 = sub nsw i32 %126, 1
  store i32 %sub236, i32* %j172, align 4
  br label %for.cond.237

for.cond.237:                                     ; preds = %for.inc, %if.end.230
  %127 = load i32, i32* %j172, align 4
  %cmp238 = icmp sge i32 %127, 0
  br i1 %cmp238, label %for.body.240, label %for.end

for.body.240:                                     ; preds = %for.cond.237
  %128 = load i32, i32* %j172, align 4
  %idxprom241 = sext i32 %128 to i64
  %129 = load i32, i32* %i, align 4
  %idxprom242 = sext i32 %129 to i64
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i32 0, i64 %idxprom242
  %rtvec245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtvec_def**
  %131 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec245, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %131, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom241
  %132 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8
  %133 = load i32, i32* %j172, align 4
  %idxprom247 = sext i32 %133 to i64
  %134 = load i32, i32* %i, align 4
  %idxprom248 = sext i32 %134 to i64
  %135 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i32 0, i64 %idxprom248
  %rtvec251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtvec_def**
  %136 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec251, align 8
  %elem252 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %136, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem252, i32 0, i64 %idxprom247
  %137 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx253, align 8
  %call254 = call i32 @operands_match_p(%struct.rtx_def* %132, %struct.rtx_def* %137)
  store i32 %call254, i32* %val, align 4
  %138 = load i32, i32* %val, align 4
  %cmp255 = icmp eq i32 %138, 0
  br i1 %cmp255, label %if.then.257, label %if.end.258

if.then.257:                                      ; preds = %for.body.240
  store i32 0, i32* %retval
  br label %return

if.end.258:                                       ; preds = %for.body.240
  %139 = load i32, i32* %val, align 4
  %cmp259 = icmp eq i32 %139, 2
  br i1 %cmp259, label %if.then.261, label %if.end.262

if.then.261:                                      ; preds = %if.end.258
  store i32 1, i32* %success_2, align 4
  br label %if.end.262

if.end.262:                                       ; preds = %if.then.261, %if.end.258
  br label %for.inc

for.inc:                                          ; preds = %if.end.262
  %140 = load i32, i32* %j172, align 4
  %dec = add nsw i32 %140, -1
  store i32 %dec, i32* %j172, align 4
  br label %for.cond.237

for.end:                                          ; preds = %for.cond.237
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2206, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.operands_match_p, i32 0, i32 0)) #5
  unreachable

sw.epilog:                                        ; preds = %for.end, %sw.bb.217, %if.end.216, %if.end.198, %if.end.186
  br label %for.inc.263

for.inc.263:                                      ; preds = %sw.epilog
  %141 = load i32, i32* %i, align 4
  %dec264 = add nsw i32 %141, -1
  store i32 %dec264, i32* %i, align 4
  br label %for.cond

for.end.265:                                      ; preds = %for.cond
  %142 = load i32, i32* %success_2, align 4
  %add266 = add nsw i32 1, %142
  store i32 %add266, i32* %retval
  br label %return

return:                                           ; preds = %for.end.265, %if.then.257, %if.then.229, %if.then.211, %if.then.197, %if.then.185, %if.then.164, %if.then.147, %if.then.135, %if.then.131, %if.then.121, %if.then.101, %if.end.90, %if.then
  %143 = load i32, i32* %retval
  ret i32 %143
}

; Function Attrs: nounwind uwtable
define i32 @safe_from_earlyclobber(%struct.rtx_def* %op, %struct.rtx_def* %clobber) #0 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  %clobber.addr = alloca %struct.rtx_def*, align 8
  %early_data = alloca %struct.decomposition, align 8
  %tmp = alloca %struct.decomposition, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  store %struct.rtx_def* %clobber, %struct.rtx_def** %clobber.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %clobber.addr, align 8
  call void @decompose(%struct.decomposition* sret %tmp, %struct.rtx_def* %0)
  %1 = bitcast %struct.decomposition* %early_data to i8*
  %2 = bitcast %struct.decomposition* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 32, i32 8, i1 false)
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %clobber.addr, align 8
  %call = call i32 @immune_p(%struct.rtx_def* %3, %struct.rtx_def* %4, %struct.decomposition* byval align 8 %early_data)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @decompose(%struct.decomposition* noalias sret %agg.result, %struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.decomposition, align 8
  %all_const = alloca i32, align 4
  %base1 = alloca %struct.rtx_def*, align 8
  %offset = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 0, i32* %all_const, align 4
  %reg_flag = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 0
  store i32 0, i32* %reg_flag, align 4
  %safe = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 1
  store i32 0, i32* %safe, align 4
  %base = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  store %struct.rtx_def* null, %struct.rtx_def** %base, align 8
  %start = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 0, i64* %start, align 8
  %end = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 0, i64* %end, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.else.449

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %base1, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %offset, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %addr, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load2 = load i32, i32* %5, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 96
  br i1 %cmp4, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load5 = load i32, i32* %7, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 97
  br i1 %cmp7, label %if.then.16, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load9 = load i32, i32* %9, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 98
  br i1 %cmp11, label %if.then.16, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load13 = load i32, i32* %11, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 99
  br i1 %cmp15, label %if.then.16, label %if.end

if.then.16:                                       ; preds = %lor.lhs.false.12, %lor.lhs.false.8, %lor.lhs.false, %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %base20 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  store %struct.rtx_def* %13, %struct.rtx_def** %base20, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load21 = load i32, i32* %15, align 8
  %bf.lshr = lshr i32 %bf.load21, 16
  %bf.clear22 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear22 to i64
  %arrayidx23 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %16 = load i8, i8* %arrayidx23, align 1
  %conv = zext i8 %16 to i32
  %sub = sub nsw i32 0, %conv
  %conv24 = sext i32 %sub to i64
  %start25 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %conv24, i64* %start25, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load26 = load i32, i32* %18, align 8
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  %idxprom29 = sext i32 %bf.clear28 to i64
  %arrayidx30 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom29
  %19 = load i8, i8* %arrayidx30, align 1
  %conv31 = zext i8 %19 to i64
  %end32 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %conv31, i64* %end32, align 8
  %base33 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  %20 = load %struct.rtx_def*, %struct.rtx_def** %base33, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %21 = load i32, i32* %rtuint, align 4
  %cmp36 = icmp eq i32 %21, 7
  %conv37 = zext i1 %cmp36 to i32
  %safe38 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 1
  store i32 %conv37, i32* %safe38, align 4
  %22 = bitcast %struct.decomposition* %agg.result to i8*
  %23 = bitcast %struct.decomposition* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 32, i32 8, i1 false)
  br label %return

if.end:                                           ; preds = %lor.lhs.false.12
  %24 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load39 = load i32, i32* %25, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 100
  br i1 %cmp41, label %if.then.48, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %if.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load44 = load i32, i32* %27, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 101
  br i1 %cmp46, label %if.then.48, label %if.end.188

if.then.48:                                       ; preds = %lor.lhs.false.43, %if.end
  %28 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load52 = load i32, i32* %30, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 75
  br i1 %cmp54, label %land.lhs.true, label %if.end.187

land.lhs.true:                                    ; preds = %if.then.48
  %31 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx64, align 8
  %cmp65 = icmp eq %struct.rtx_def* %32, %35
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.187

land.lhs.true.67:                                 ; preds = %land.lhs.true
  %36 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 1
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx70, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load74 = load i32, i32* %39, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 67
  br i1 %cmp76, label %if.then.155, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %land.lhs.true.67
  %40 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 1
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx81, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 1
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx84, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load85 = load i32, i32* %43, align 8
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 68
  br i1 %cmp87, label %if.then.155, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false.78
  %44 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 1
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 1
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx95, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load96 = load i32, i32* %47, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  br i1 %cmp98, label %if.then.155, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.89
  %48 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 1
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx103, align 8
  %fld104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i32 0, i64 1
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx106, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load107 = load i32, i32* %51, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 55
  br i1 %cmp109, label %if.then.155, label %lor.lhs.false.111

lor.lhs.false.111:                                ; preds = %lor.lhs.false.100
  %52 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 1
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 1
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load118 = load i32, i32* %55, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 58
  br i1 %cmp120, label %if.then.155, label %lor.lhs.false.122

lor.lhs.false.122:                                ; preds = %lor.lhs.false.111
  %56 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx125, align 8
  %fld126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i32 0, i64 1
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtx128, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load129 = load i32, i32* %59, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 134
  br i1 %cmp131, label %if.then.155, label %lor.lhs.false.133

lor.lhs.false.133:                                ; preds = %lor.lhs.false.122
  %60 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 1
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load140 = load i32, i32* %63, align 8
  %bf.clear141 = and i32 %bf.load140, 65535
  %cmp142 = icmp eq i32 %bf.clear141, 56
  br i1 %cmp142, label %if.then.155, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %lor.lhs.false.133
  %64 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 1
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load151 = load i32, i32* %67, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 140
  br i1 %cmp153, label %if.then.155, label %if.end.187

if.then.155:                                      ; preds = %lor.lhs.false.144, %lor.lhs.false.133, %lor.lhs.false.122, %lor.lhs.false.111, %lor.lhs.false.100, %lor.lhs.false.89, %lor.lhs.false.78, %land.lhs.true.67
  %68 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  %base159 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  store %struct.rtx_def* %69, %struct.rtx_def** %base159, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 1
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 1
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx167 to i64*
  %73 = load i64, i64* %rtwint, align 8
  %sub168 = sub nsw i64 0, %73
  %start169 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %sub168, i64* %start169, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 1
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rtx172, align 8
  %fld173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i32 0, i64 1
  %rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx175, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 0
  %rtwint178 = bitcast %union.rtunion_def* %arrayidx177 to i64*
  %77 = load i64, i64* %rtwint178, align 8
  %end179 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %77, i64* %end179, align 8
  %base180 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  %78 = load %struct.rtx_def*, %struct.rtx_def** %base180, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtuint183 = bitcast %union.rtunion_def* %arrayidx182 to i32*
  %79 = load i32, i32* %rtuint183, align 4
  %cmp184 = icmp eq i32 %79, 7
  %conv185 = zext i1 %cmp184 to i32
  %safe186 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 1
  store i32 %conv185, i32* %safe186, align 4
  %80 = bitcast %struct.decomposition* %agg.result to i8*
  %81 = bitcast %struct.decomposition* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 32, i32 8, i1 false)
  br label %return

if.end.187:                                       ; preds = %lor.lhs.false.144, %land.lhs.true, %if.then.48
  br label %if.end.188

if.end.188:                                       ; preds = %if.end.187, %lor.lhs.false.43
  %82 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load189 = load i32, i32* %83, align 8
  %bf.clear190 = and i32 %bf.load189, 65535
  %cmp191 = icmp eq i32 %bf.clear190, 58
  br i1 %cmp191, label %if.then.193, label %if.end.197

if.then.193:                                      ; preds = %if.end.188
  %84 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i32 0, i64 0
  %rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx196, align 8
  store %struct.rtx_def* %85, %struct.rtx_def** %addr, align 8
  store i32 1, i32* %all_const, align 4
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.193, %if.end.188
  %86 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load198 = load i32, i32* %87, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 75
  br i1 %cmp200, label %if.then.202, label %if.end.345

if.then.202:                                      ; preds = %if.end.197
  %88 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i32 0, i64 0
  %rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx205, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load206 = load i32, i32* %90, align 8
  %bf.clear207 = and i32 %bf.load206, 65535
  %cmp208 = icmp eq i32 %bf.clear207, 67
  br i1 %cmp208, label %if.then.266, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %if.then.202
  %91 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 0
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load214 = load i32, i32* %93, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 68
  br i1 %cmp216, label %if.then.266, label %lor.lhs.false.218

lor.lhs.false.218:                                ; preds = %lor.lhs.false.210
  %94 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 0
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load222 = load i32, i32* %96, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 54
  br i1 %cmp224, label %if.then.266, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %lor.lhs.false.218
  %97 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 0
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx229, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load230 = load i32, i32* %99, align 8
  %bf.clear231 = and i32 %bf.load230, 65535
  %cmp232 = icmp eq i32 %bf.clear231, 55
  br i1 %cmp232, label %if.then.266, label %lor.lhs.false.234

lor.lhs.false.234:                                ; preds = %lor.lhs.false.226
  %100 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld235, i32 0, i64 0
  %rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx237, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load238 = load i32, i32* %102, align 8
  %bf.clear239 = and i32 %bf.load238, 65535
  %cmp240 = icmp eq i32 %bf.clear239, 58
  br i1 %cmp240, label %if.then.266, label %lor.lhs.false.242

lor.lhs.false.242:                                ; preds = %lor.lhs.false.234
  %103 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i32 0, i64 0
  %rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx245, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load246 = load i32, i32* %105, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 134
  br i1 %cmp248, label %if.then.266, label %lor.lhs.false.250

lor.lhs.false.250:                                ; preds = %lor.lhs.false.242
  %106 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtx253, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load254 = load i32, i32* %108, align 8
  %bf.clear255 = and i32 %bf.load254, 65535
  %cmp256 = icmp eq i32 %bf.clear255, 56
  br i1 %cmp256, label %if.then.266, label %lor.lhs.false.258

lor.lhs.false.258:                                ; preds = %lor.lhs.false.250
  %109 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i32 0, i64 0
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx261, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load262 = load i32, i32* %111, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 140
  br i1 %cmp264, label %if.then.266, label %if.else

if.then.266:                                      ; preds = %lor.lhs.false.258, %lor.lhs.false.250, %lor.lhs.false.242, %lor.lhs.false.234, %lor.lhs.false.226, %lor.lhs.false.218, %lor.lhs.false.210, %if.then.202
  %112 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 1
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  store %struct.rtx_def* %113, %struct.rtx_def** %base1, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx272, align 8
  store %struct.rtx_def* %115, %struct.rtx_def** %offset, align 8
  br label %if.end.344

if.else:                                          ; preds = %lor.lhs.false.258
  %116 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i32 0, i64 1
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rtx275, align 8
  %118 = bitcast %struct.rtx_def* %117 to i32*
  %bf.load276 = load i32, i32* %118, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  %cmp278 = icmp eq i32 %bf.clear277, 67
  br i1 %cmp278, label %if.then.336, label %lor.lhs.false.280

lor.lhs.false.280:                                ; preds = %if.else
  %119 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 1
  %rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx283, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load284 = load i32, i32* %121, align 8
  %bf.clear285 = and i32 %bf.load284, 65535
  %cmp286 = icmp eq i32 %bf.clear285, 68
  br i1 %cmp286, label %if.then.336, label %lor.lhs.false.288

lor.lhs.false.288:                                ; preds = %lor.lhs.false.280
  %122 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i32 0, i64 1
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx291, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load292 = load i32, i32* %124, align 8
  %bf.clear293 = and i32 %bf.load292, 65535
  %cmp294 = icmp eq i32 %bf.clear293, 54
  br i1 %cmp294, label %if.then.336, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %lor.lhs.false.288
  %125 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i32 0, i64 1
  %rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx299, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load300 = load i32, i32* %127, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 55
  br i1 %cmp302, label %if.then.336, label %lor.lhs.false.304

lor.lhs.false.304:                                ; preds = %lor.lhs.false.296
  %128 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 1
  %rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx307, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load308 = load i32, i32* %130, align 8
  %bf.clear309 = and i32 %bf.load308, 65535
  %cmp310 = icmp eq i32 %bf.clear309, 58
  br i1 %cmp310, label %if.then.336, label %lor.lhs.false.312

lor.lhs.false.312:                                ; preds = %lor.lhs.false.304
  %131 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld313 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld313, i32 0, i64 1
  %rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx315, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load316 = load i32, i32* %133, align 8
  %bf.clear317 = and i32 %bf.load316, 65535
  %cmp318 = icmp eq i32 %bf.clear317, 134
  br i1 %cmp318, label %if.then.336, label %lor.lhs.false.320

lor.lhs.false.320:                                ; preds = %lor.lhs.false.312
  %134 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld321, i32 0, i64 1
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rtx323, align 8
  %136 = bitcast %struct.rtx_def* %135 to i32*
  %bf.load324 = load i32, i32* %136, align 8
  %bf.clear325 = and i32 %bf.load324, 65535
  %cmp326 = icmp eq i32 %bf.clear325, 56
  br i1 %cmp326, label %if.then.336, label %lor.lhs.false.328

lor.lhs.false.328:                                ; preds = %lor.lhs.false.320
  %137 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i32 0, i64 1
  %rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rtx331, align 8
  %139 = bitcast %struct.rtx_def* %138 to i32*
  %bf.load332 = load i32, i32* %139, align 8
  %bf.clear333 = and i32 %bf.load332, 65535
  %cmp334 = icmp eq i32 %bf.clear333, 140
  br i1 %cmp334, label %if.then.336, label %if.end.343

if.then.336:                                      ; preds = %lor.lhs.false.328, %lor.lhs.false.320, %lor.lhs.false.312, %lor.lhs.false.304, %lor.lhs.false.296, %lor.lhs.false.288, %lor.lhs.false.280, %if.else
  %140 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 0
  %rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtx339, align 8
  store %struct.rtx_def* %141, %struct.rtx_def** %base1, align 8
  %142 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 1
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  store %struct.rtx_def* %143, %struct.rtx_def** %offset, align 8
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.336, %lor.lhs.false.328
  br label %if.end.344

if.end.344:                                       ; preds = %if.end.343, %if.then.266
  br label %if.end.345

if.end.345:                                       ; preds = %if.end.344, %if.end.197
  %144 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %cmp346 = icmp eq %struct.rtx_def* %144, null
  br i1 %cmp346, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %if.end.345
  %145 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  store %struct.rtx_def* %145, %struct.rtx_def** %base1, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %146, %struct.rtx_def** %offset, align 8
  br label %if.end.349

if.end.349:                                       ; preds = %if.then.348, %if.end.345
  %147 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load350 = load i32, i32* %148, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 58
  br i1 %cmp352, label %if.then.354, label %if.end.358

if.then.354:                                      ; preds = %if.end.349
  %149 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  store %struct.rtx_def* %150, %struct.rtx_def** %offset, align 8
  br label %if.end.358

if.end.358:                                       ; preds = %if.then.354, %if.end.349
  %151 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load359 = load i32, i32* %152, align 8
  %bf.clear360 = and i32 %bf.load359, 65535
  %cmp361 = icmp eq i32 %bf.clear360, 75
  br i1 %cmp361, label %if.then.363, label %if.else.407

if.then.363:                                      ; preds = %if.end.358
  %153 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld364, i32 0, i64 0
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx366, align 8
  %155 = bitcast %struct.rtx_def* %154 to i32*
  %bf.load367 = load i32, i32* %155, align 8
  %bf.clear368 = and i32 %bf.load367, 65535
  %cmp369 = icmp eq i32 %bf.clear368, 54
  br i1 %cmp369, label %if.then.371, label %if.else.381

if.then.371:                                      ; preds = %if.then.363
  %156 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load372 = load i32, i32* %157, align 8
  %bf.lshr373 = lshr i32 %bf.load372, 16
  %bf.clear374 = and i32 %bf.lshr373, 255
  %158 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %159 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 1
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  %call = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear374, %struct.rtx_def* %158, %struct.rtx_def* %160)
  store %struct.rtx_def* %call, %struct.rtx_def** %base1, align 8
  %161 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i32 0, i64 0
  %rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx380, align 8
  store %struct.rtx_def* %162, %struct.rtx_def** %offset, align 8
  br label %if.end.406

if.else.381:                                      ; preds = %if.then.363
  %163 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i32 0, i64 1
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx384, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load385 = load i32, i32* %165, align 8
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 54
  br i1 %cmp387, label %if.then.389, label %if.else.400

if.then.389:                                      ; preds = %if.else.381
  %166 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load390 = load i32, i32* %167, align 8
  %bf.lshr391 = lshr i32 %bf.load390, 16
  %bf.clear392 = and i32 %bf.lshr391, 255
  %168 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %169 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtx395 = bitcast %union.rtunion_def* %arrayidx394 to %struct.rtx_def**
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rtx395, align 8
  %call396 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear392, %struct.rtx_def* %168, %struct.rtx_def* %170)
  store %struct.rtx_def* %call396, %struct.rtx_def** %base1, align 8
  %171 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld397 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i32 0, i64 1
  %rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx399, align 8
  store %struct.rtx_def* %172, %struct.rtx_def** %offset, align 8
  br label %if.end.405

if.else.400:                                      ; preds = %if.else.381
  %173 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %bf.load401 = load i32, i32* %174, align 8
  %bf.lshr402 = lshr i32 %bf.load401, 16
  %bf.clear403 = and i32 %bf.lshr402, 255
  %175 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %176 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %call404 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear403, %struct.rtx_def* %175, %struct.rtx_def* %176)
  store %struct.rtx_def* %call404, %struct.rtx_def** %base1, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %177, %struct.rtx_def** %offset, align 8
  br label %if.end.405

if.end.405:                                       ; preds = %if.else.400, %if.then.389
  br label %if.end.406

if.end.406:                                       ; preds = %if.end.405, %if.then.371
  br label %if.end.418

if.else.407:                                      ; preds = %if.end.358
  %178 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %179 = bitcast %struct.rtx_def* %178 to i32*
  %bf.load408 = load i32, i32* %179, align 8
  %bf.clear409 = and i32 %bf.load408, 65535
  %cmp410 = icmp ne i32 %bf.clear409, 54
  br i1 %cmp410, label %if.then.412, label %if.end.417

if.then.412:                                      ; preds = %if.else.407
  %180 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %181 = bitcast %struct.rtx_def* %180 to i32*
  %bf.load413 = load i32, i32* %181, align 8
  %bf.lshr414 = lshr i32 %bf.load413, 16
  %bf.clear415 = and i32 %bf.lshr414, 255
  %182 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %183 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %call416 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear415, %struct.rtx_def* %182, %struct.rtx_def* %183)
  store %struct.rtx_def* %call416, %struct.rtx_def** %base1, align 8
  %184 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %184, %struct.rtx_def** %offset, align 8
  br label %if.end.417

if.end.417:                                       ; preds = %if.then.412, %if.else.407
  br label %if.end.418

if.end.418:                                       ; preds = %if.end.417, %if.end.406
  %185 = load i32, i32* %all_const, align 4
  %tobool = icmp ne i32 %185, 0
  br i1 %tobool, label %land.lhs.true.419, label %if.end.429

land.lhs.true.419:                                ; preds = %if.end.418
  %186 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %187 = bitcast %struct.rtx_def* %186 to i32*
  %bf.load420 = load i32, i32* %187, align 8
  %bf.clear421 = and i32 %bf.load420, 65535
  %cmp422 = icmp eq i32 %bf.clear421, 75
  br i1 %cmp422, label %if.then.424, label %if.end.429

if.then.424:                                      ; preds = %land.lhs.true.419
  %188 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load425 = load i32, i32* %189, align 8
  %bf.lshr426 = lshr i32 %bf.load425, 16
  %bf.clear427 = and i32 %bf.lshr426, 255
  %190 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %call428 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %bf.clear427, %struct.rtx_def* %190)
  store %struct.rtx_def* %call428, %struct.rtx_def** %base1, align 8
  br label %if.end.429

if.end.429:                                       ; preds = %if.then.424, %land.lhs.true.419, %if.end.418
  %191 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %192 = bitcast %struct.rtx_def* %191 to i32*
  %bf.load430 = load i32, i32* %192, align 8
  %bf.clear431 = and i32 %bf.load430, 65535
  %cmp432 = icmp ne i32 %bf.clear431, 54
  br i1 %cmp432, label %if.then.434, label %if.end.435

if.then.434:                                      ; preds = %if.end.429
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2315, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.decompose, i32 0, i32 0)) #5
  unreachable

if.end.435:                                       ; preds = %if.end.429
  %193 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 0
  %rtwint438 = bitcast %union.rtunion_def* %arrayidx437 to i64*
  %194 = load i64, i64* %rtwint438, align 8
  %start439 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %194, i64* %start439, align 8
  %start440 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %195 = load i64, i64* %start440, align 8
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load441 = load i32, i32* %197, align 8
  %bf.lshr442 = lshr i32 %bf.load441, 16
  %bf.clear443 = and i32 %bf.lshr442, 255
  %idxprom444 = sext i32 %bf.clear443 to i64
  %arrayidx445 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom444
  %198 = load i8, i8* %arrayidx445, align 1
  %conv446 = zext i8 %198 to i64
  %add = add nsw i64 %195, %conv446
  %end447 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %add, i64* %end447, align 8
  %199 = load %struct.rtx_def*, %struct.rtx_def** %base1, align 8
  %base448 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 2
  store %struct.rtx_def* %199, %struct.rtx_def** %base448, align 8
  %200 = bitcast %struct.decomposition* %agg.result to i8*
  %201 = bitcast %struct.decomposition* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %200, i8* %201, i64 32, i32 8, i1 false)
  br label %return

if.else.449:                                      ; preds = %entry
  %202 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load450 = load i32, i32* %203, align 8
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 61
  br i1 %cmp452, label %if.then.454, label %if.else.560

if.then.454:                                      ; preds = %if.else.449
  %reg_flag455 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 0
  store i32 1, i32* %reg_flag455, align 4
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call456 = call i32 @true_regnum(%struct.rtx_def* %204)
  %conv457 = sext i32 %call456 to i64
  %start458 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %conv457, i64* %start458, align 8
  %start459 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %205 = load i64, i64* %start459, align 8
  %cmp460 = icmp slt i64 %205, 0
  br i1 %cmp460, label %if.then.462, label %if.else.471

if.then.462:                                      ; preds = %if.then.454
  %206 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld463, i32 0, i64 0
  %rtuint465 = bitcast %union.rtunion_def* %arrayidx464 to i32*
  %207 = load i32, i32* %rtuint465, align 4
  %conv466 = zext i32 %207 to i64
  %start467 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %conv466, i64* %start467, align 8
  %start468 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %208 = load i64, i64* %start468, align 8
  %add469 = add nsw i64 %208, 1
  %end470 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %add469, i64* %end470, align 8
  br label %if.end.559

if.else.471:                                      ; preds = %if.then.454
  %start472 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %209 = load i64, i64* %start472, align 8
  %start473 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %210 = load i64, i64* %start473, align 8
  %cmp474 = icmp sge i64 %210, 8
  br i1 %cmp474, label %land.lhs.true.476, label %lor.lhs.false.480

land.lhs.true.476:                                ; preds = %if.else.471
  %start477 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %211 = load i64, i64* %start477, align 8
  %cmp478 = icmp sle i64 %211, 15
  br i1 %cmp478, label %cond.true, label %lor.lhs.false.480

lor.lhs.false.480:                                ; preds = %land.lhs.true.476, %if.else.471
  %start481 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %212 = load i64, i64* %start481, align 8
  %cmp482 = icmp sge i64 %212, 21
  br i1 %cmp482, label %land.lhs.true.484, label %lor.lhs.false.488

land.lhs.true.484:                                ; preds = %lor.lhs.false.480
  %start485 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %213 = load i64, i64* %start485, align 8
  %cmp486 = icmp sle i64 %213, 28
  br i1 %cmp486, label %cond.true, label %lor.lhs.false.488

lor.lhs.false.488:                                ; preds = %land.lhs.true.484, %lor.lhs.false.480
  %start489 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %214 = load i64, i64* %start489, align 8
  %cmp490 = icmp sge i64 %214, 45
  br i1 %cmp490, label %land.lhs.true.492, label %lor.lhs.false.496

land.lhs.true.492:                                ; preds = %lor.lhs.false.488
  %start493 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %215 = load i64, i64* %start493, align 8
  %cmp494 = icmp sle i64 %215, 52
  br i1 %cmp494, label %cond.true, label %lor.lhs.false.496

lor.lhs.false.496:                                ; preds = %land.lhs.true.492, %lor.lhs.false.488
  %start497 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %216 = load i64, i64* %start497, align 8
  %cmp498 = icmp sge i64 %216, 29
  br i1 %cmp498, label %land.lhs.true.500, label %cond.false

land.lhs.true.500:                                ; preds = %lor.lhs.false.496
  %start501 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %217 = load i64, i64* %start501, align 8
  %cmp502 = icmp sle i64 %217, 36
  br i1 %cmp502, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.500, %land.lhs.true.492, %land.lhs.true.484, %land.lhs.true.476
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %219 = bitcast %struct.rtx_def* %218 to i32*
  %bf.load504 = load i32, i32* %219, align 8
  %bf.lshr505 = lshr i32 %bf.load504, 16
  %bf.clear506 = and i32 %bf.lshr505, 255
  %idxprom507 = sext i32 %bf.clear506 to i64
  %arrayidx508 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom507
  %220 = load i32, i32* %arrayidx508, align 4
  %cmp509 = icmp eq i32 %220, 5
  br i1 %cmp509, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %221 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load511 = load i32, i32* %222, align 8
  %bf.lshr512 = lshr i32 %bf.load511, 16
  %bf.clear513 = and i32 %bf.lshr512, 255
  %idxprom514 = sext i32 %bf.clear513 to i64
  %arrayidx515 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom514
  %223 = load i32, i32* %arrayidx515, align 4
  %cmp516 = icmp eq i32 %223, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %224 = phi i1 [ true, %cond.true ], [ %cmp516, %lor.rhs ]
  %cond = select i1 %224, i32 2, i32 1
  br label %cond.end.554

cond.false:                                       ; preds = %land.lhs.true.500, %lor.lhs.false.496
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %226 = bitcast %struct.rtx_def* %225 to i32*
  %bf.load518 = load i32, i32* %226, align 8
  %bf.lshr519 = lshr i32 %bf.load518, 16
  %bf.clear520 = and i32 %bf.lshr519, 255
  %cmp521 = icmp eq i32 %bf.clear520, 18
  br i1 %cmp521, label %cond.true.523, label %cond.false.526

cond.true.523:                                    ; preds = %cond.false
  %227 = load i32, i32* @target_flags, align 4
  %and = and i32 %227, 33554432
  %tobool524 = icmp ne i32 %and, 0
  %cond525 = select i1 %tobool524, i32 2, i32 3
  br label %cond.end.552

cond.false.526:                                   ; preds = %cond.false
  %228 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %bf.load527 = load i32, i32* %229, align 8
  %bf.lshr528 = lshr i32 %bf.load527, 16
  %bf.clear529 = and i32 %bf.lshr528, 255
  %cmp530 = icmp eq i32 %bf.clear529, 24
  br i1 %cmp530, label %cond.true.532, label %cond.false.536

cond.true.532:                                    ; preds = %cond.false.526
  %230 = load i32, i32* @target_flags, align 4
  %and533 = and i32 %230, 33554432
  %tobool534 = icmp ne i32 %and533, 0
  %cond535 = select i1 %tobool534, i32 4, i32 6
  br label %cond.end

cond.false.536:                                   ; preds = %cond.false.526
  %231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %232 = bitcast %struct.rtx_def* %231 to i32*
  %bf.load537 = load i32, i32* %232, align 8
  %bf.lshr538 = lshr i32 %bf.load537, 16
  %bf.clear539 = and i32 %bf.lshr538, 255
  %idxprom540 = sext i32 %bf.clear539 to i64
  %arrayidx541 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom540
  %233 = load i8, i8* %arrayidx541, align 1
  %conv542 = zext i8 %233 to i32
  %234 = load i32, i32* @target_flags, align 4
  %and543 = and i32 %234, 33554432
  %tobool544 = icmp ne i32 %and543, 0
  %cond545 = select i1 %tobool544, i32 8, i32 4
  %add546 = add nsw i32 %conv542, %cond545
  %sub547 = sub nsw i32 %add546, 1
  %235 = load i32, i32* @target_flags, align 4
  %and548 = and i32 %235, 33554432
  %tobool549 = icmp ne i32 %and548, 0
  %cond550 = select i1 %tobool549, i32 8, i32 4
  %div = sdiv i32 %sub547, %cond550
  br label %cond.end

cond.end:                                         ; preds = %cond.false.536, %cond.true.532
  %cond551 = phi i32 [ %cond535, %cond.true.532 ], [ %div, %cond.false.536 ]
  br label %cond.end.552

cond.end.552:                                     ; preds = %cond.end, %cond.true.523
  %cond553 = phi i32 [ %cond525, %cond.true.523 ], [ %cond551, %cond.end ]
  br label %cond.end.554

cond.end.554:                                     ; preds = %cond.end.552, %lor.end
  %cond555 = phi i32 [ %cond, %lor.end ], [ %cond553, %cond.end.552 ]
  %conv556 = sext i32 %cond555 to i64
  %add557 = add nsw i64 %209, %conv556
  %end558 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %add557, i64* %end558, align 8
  br label %if.end.559

if.end.559:                                       ; preds = %cond.end.554, %if.then.462
  br label %if.end.736

if.else.560:                                      ; preds = %if.else.449
  %236 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %237 = bitcast %struct.rtx_def* %236 to i32*
  %bf.load561 = load i32, i32* %237, align 8
  %bf.clear562 = and i32 %bf.load561, 65535
  %cmp563 = icmp eq i32 %bf.clear562, 63
  br i1 %cmp563, label %if.then.565, label %if.else.686

if.then.565:                                      ; preds = %if.else.560
  %238 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld566, i32 0, i64 0
  %rtx568 = bitcast %union.rtunion_def* %arrayidx567 to %struct.rtx_def**
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rtx568, align 8
  %240 = bitcast %struct.rtx_def* %239 to i32*
  %bf.load569 = load i32, i32* %240, align 8
  %bf.clear570 = and i32 %bf.load569, 65535
  %cmp571 = icmp ne i32 %bf.clear570, 61
  br i1 %cmp571, label %if.then.573, label %if.end.577

if.then.573:                                      ; preds = %if.then.565
  %241 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld574 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx575 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld574, i32 0, i64 0
  %rtx576 = bitcast %union.rtunion_def* %arrayidx575 to %struct.rtx_def**
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rtx576, align 8
  call void @decompose(%struct.decomposition* sret %agg.result, %struct.rtx_def* %242)
  br label %return

if.end.577:                                       ; preds = %if.then.565
  %reg_flag578 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 0
  store i32 1, i32* %reg_flag578, align 4
  %243 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call579 = call i32 @true_regnum(%struct.rtx_def* %243)
  %conv580 = sext i32 %call579 to i64
  %start581 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  store i64 %conv580, i64* %start581, align 8
  %start582 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %244 = load i64, i64* %start582, align 8
  %cmp583 = icmp slt i64 %244, 0
  br i1 %cmp583, label %if.then.585, label %if.else.589

if.then.585:                                      ; preds = %if.end.577
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx587 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld586, i32 0, i64 0
  %rtx588 = bitcast %union.rtunion_def* %arrayidx587 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx588, align 8
  call void @decompose(%struct.decomposition* sret %agg.result, %struct.rtx_def* %246)
  br label %return

if.else.589:                                      ; preds = %if.end.577
  %start590 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %247 = load i64, i64* %start590, align 8
  %start591 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %248 = load i64, i64* %start591, align 8
  %cmp592 = icmp sge i64 %248, 8
  br i1 %cmp592, label %land.lhs.true.594, label %lor.lhs.false.598

land.lhs.true.594:                                ; preds = %if.else.589
  %start595 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %249 = load i64, i64* %start595, align 8
  %cmp596 = icmp sle i64 %249, 15
  br i1 %cmp596, label %cond.true.622, label %lor.lhs.false.598

lor.lhs.false.598:                                ; preds = %land.lhs.true.594, %if.else.589
  %start599 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %250 = load i64, i64* %start599, align 8
  %cmp600 = icmp sge i64 %250, 21
  br i1 %cmp600, label %land.lhs.true.602, label %lor.lhs.false.606

land.lhs.true.602:                                ; preds = %lor.lhs.false.598
  %start603 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %251 = load i64, i64* %start603, align 8
  %cmp604 = icmp sle i64 %251, 28
  br i1 %cmp604, label %cond.true.622, label %lor.lhs.false.606

lor.lhs.false.606:                                ; preds = %land.lhs.true.602, %lor.lhs.false.598
  %start607 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %252 = load i64, i64* %start607, align 8
  %cmp608 = icmp sge i64 %252, 45
  br i1 %cmp608, label %land.lhs.true.610, label %lor.lhs.false.614

land.lhs.true.610:                                ; preds = %lor.lhs.false.606
  %start611 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %253 = load i64, i64* %start611, align 8
  %cmp612 = icmp sle i64 %253, 52
  br i1 %cmp612, label %cond.true.622, label %lor.lhs.false.614

lor.lhs.false.614:                                ; preds = %land.lhs.true.610, %lor.lhs.false.606
  %start615 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %254 = load i64, i64* %start615, align 8
  %cmp616 = icmp sge i64 %254, 29
  br i1 %cmp616, label %land.lhs.true.618, label %cond.false.640

land.lhs.true.618:                                ; preds = %lor.lhs.false.614
  %start619 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 3
  %255 = load i64, i64* %start619, align 8
  %cmp620 = icmp sle i64 %255, 36
  br i1 %cmp620, label %cond.true.622, label %cond.false.640

cond.true.622:                                    ; preds = %land.lhs.true.618, %land.lhs.true.610, %land.lhs.true.602, %land.lhs.true.594
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %257 = bitcast %struct.rtx_def* %256 to i32*
  %bf.load623 = load i32, i32* %257, align 8
  %bf.lshr624 = lshr i32 %bf.load623, 16
  %bf.clear625 = and i32 %bf.lshr624, 255
  %idxprom626 = sext i32 %bf.clear625 to i64
  %arrayidx627 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom626
  %258 = load i32, i32* %arrayidx627, align 4
  %cmp628 = icmp eq i32 %258, 5
  br i1 %cmp628, label %lor.end.638, label %lor.rhs.630

lor.rhs.630:                                      ; preds = %cond.true.622
  %259 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %260 = bitcast %struct.rtx_def* %259 to i32*
  %bf.load631 = load i32, i32* %260, align 8
  %bf.lshr632 = lshr i32 %bf.load631, 16
  %bf.clear633 = and i32 %bf.lshr632, 255
  %idxprom634 = sext i32 %bf.clear633 to i64
  %arrayidx635 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom634
  %261 = load i32, i32* %arrayidx635, align 4
  %cmp636 = icmp eq i32 %261, 6
  br label %lor.end.638

lor.end.638:                                      ; preds = %lor.rhs.630, %cond.true.622
  %262 = phi i1 [ true, %cond.true.622 ], [ %cmp636, %lor.rhs.630 ]
  %cond639 = select i1 %262, i32 2, i32 1
  br label %cond.end.680

cond.false.640:                                   ; preds = %land.lhs.true.618, %lor.lhs.false.614
  %263 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load641 = load i32, i32* %264, align 8
  %bf.lshr642 = lshr i32 %bf.load641, 16
  %bf.clear643 = and i32 %bf.lshr642, 255
  %cmp644 = icmp eq i32 %bf.clear643, 18
  br i1 %cmp644, label %cond.true.646, label %cond.false.650

cond.true.646:                                    ; preds = %cond.false.640
  %265 = load i32, i32* @target_flags, align 4
  %and647 = and i32 %265, 33554432
  %tobool648 = icmp ne i32 %and647, 0
  %cond649 = select i1 %tobool648, i32 2, i32 3
  br label %cond.end.678

cond.false.650:                                   ; preds = %cond.false.640
  %266 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %267 = bitcast %struct.rtx_def* %266 to i32*
  %bf.load651 = load i32, i32* %267, align 8
  %bf.lshr652 = lshr i32 %bf.load651, 16
  %bf.clear653 = and i32 %bf.lshr652, 255
  %cmp654 = icmp eq i32 %bf.clear653, 24
  br i1 %cmp654, label %cond.true.656, label %cond.false.660

cond.true.656:                                    ; preds = %cond.false.650
  %268 = load i32, i32* @target_flags, align 4
  %and657 = and i32 %268, 33554432
  %tobool658 = icmp ne i32 %and657, 0
  %cond659 = select i1 %tobool658, i32 4, i32 6
  br label %cond.end.676

cond.false.660:                                   ; preds = %cond.false.650
  %269 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load661 = load i32, i32* %270, align 8
  %bf.lshr662 = lshr i32 %bf.load661, 16
  %bf.clear663 = and i32 %bf.lshr662, 255
  %idxprom664 = sext i32 %bf.clear663 to i64
  %arrayidx665 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom664
  %271 = load i8, i8* %arrayidx665, align 1
  %conv666 = zext i8 %271 to i32
  %272 = load i32, i32* @target_flags, align 4
  %and667 = and i32 %272, 33554432
  %tobool668 = icmp ne i32 %and667, 0
  %cond669 = select i1 %tobool668, i32 8, i32 4
  %add670 = add nsw i32 %conv666, %cond669
  %sub671 = sub nsw i32 %add670, 1
  %273 = load i32, i32* @target_flags, align 4
  %and672 = and i32 %273, 33554432
  %tobool673 = icmp ne i32 %and672, 0
  %cond674 = select i1 %tobool673, i32 8, i32 4
  %div675 = sdiv i32 %sub671, %cond674
  br label %cond.end.676

cond.end.676:                                     ; preds = %cond.false.660, %cond.true.656
  %cond677 = phi i32 [ %cond659, %cond.true.656 ], [ %div675, %cond.false.660 ]
  br label %cond.end.678

cond.end.678:                                     ; preds = %cond.end.676, %cond.true.646
  %cond679 = phi i32 [ %cond649, %cond.true.646 ], [ %cond677, %cond.end.676 ]
  br label %cond.end.680

cond.end.680:                                     ; preds = %cond.end.678, %lor.end.638
  %cond681 = phi i32 [ %cond639, %lor.end.638 ], [ %cond679, %cond.end.678 ]
  %conv682 = sext i32 %cond681 to i64
  %add683 = add nsw i64 %247, %conv682
  %end684 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 4
  store i64 %add683, i64* %end684, align 8
  br label %if.end.685

if.end.685:                                       ; preds = %cond.end.680
  br label %if.end.735

if.else.686:                                      ; preds = %if.else.560
  %274 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %275 = bitcast %struct.rtx_def* %274 to i32*
  %bf.load687 = load i32, i32* %275, align 8
  %bf.clear688 = and i32 %bf.load687, 65535
  %cmp689 = icmp eq i32 %bf.clear688, 67
  br i1 %cmp689, label %if.then.731, label %lor.lhs.false.691

lor.lhs.false.691:                                ; preds = %if.else.686
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %277 = bitcast %struct.rtx_def* %276 to i32*
  %bf.load692 = load i32, i32* %277, align 8
  %bf.clear693 = and i32 %bf.load692, 65535
  %cmp694 = icmp eq i32 %bf.clear693, 68
  br i1 %cmp694, label %if.then.731, label %lor.lhs.false.696

lor.lhs.false.696:                                ; preds = %lor.lhs.false.691
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %279 = bitcast %struct.rtx_def* %278 to i32*
  %bf.load697 = load i32, i32* %279, align 8
  %bf.clear698 = and i32 %bf.load697, 65535
  %cmp699 = icmp eq i32 %bf.clear698, 54
  br i1 %cmp699, label %if.then.731, label %lor.lhs.false.701

lor.lhs.false.701:                                ; preds = %lor.lhs.false.696
  %280 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %281 = bitcast %struct.rtx_def* %280 to i32*
  %bf.load702 = load i32, i32* %281, align 8
  %bf.clear703 = and i32 %bf.load702, 65535
  %cmp704 = icmp eq i32 %bf.clear703, 55
  br i1 %cmp704, label %if.then.731, label %lor.lhs.false.706

lor.lhs.false.706:                                ; preds = %lor.lhs.false.701
  %282 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %283 = bitcast %struct.rtx_def* %282 to i32*
  %bf.load707 = load i32, i32* %283, align 8
  %bf.clear708 = and i32 %bf.load707, 65535
  %cmp709 = icmp eq i32 %bf.clear708, 58
  br i1 %cmp709, label %if.then.731, label %lor.lhs.false.711

lor.lhs.false.711:                                ; preds = %lor.lhs.false.706
  %284 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %285 = bitcast %struct.rtx_def* %284 to i32*
  %bf.load712 = load i32, i32* %285, align 8
  %bf.clear713 = and i32 %bf.load712, 65535
  %cmp714 = icmp eq i32 %bf.clear713, 134
  br i1 %cmp714, label %if.then.731, label %lor.lhs.false.716

lor.lhs.false.716:                                ; preds = %lor.lhs.false.711
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %287 = bitcast %struct.rtx_def* %286 to i32*
  %bf.load717 = load i32, i32* %287, align 8
  %bf.clear718 = and i32 %bf.load717, 65535
  %cmp719 = icmp eq i32 %bf.clear718, 56
  br i1 %cmp719, label %if.then.731, label %lor.lhs.false.721

lor.lhs.false.721:                                ; preds = %lor.lhs.false.716
  %288 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %289 = bitcast %struct.rtx_def* %288 to i32*
  %bf.load722 = load i32, i32* %289, align 8
  %bf.clear723 = and i32 %bf.load722, 65535
  %cmp724 = icmp eq i32 %bf.clear723, 140
  br i1 %cmp724, label %if.then.731, label %lor.lhs.false.726

lor.lhs.false.726:                                ; preds = %lor.lhs.false.721
  %290 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %291 = bitcast %struct.rtx_def* %290 to i32*
  %bf.load727 = load i32, i32* %291, align 8
  %bf.clear728 = and i32 %bf.load727, 65535
  %cmp729 = icmp eq i32 %bf.clear728, 62
  br i1 %cmp729, label %if.then.731, label %if.else.733

if.then.731:                                      ; preds = %lor.lhs.false.726, %lor.lhs.false.721, %lor.lhs.false.716, %lor.lhs.false.711, %lor.lhs.false.706, %lor.lhs.false.701, %lor.lhs.false.696, %lor.lhs.false.691, %if.else.686
  %safe732 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %val, i32 0, i32 1
  store i32 1, i32* %safe732, align 4
  br label %if.end.734

if.else.733:                                      ; preds = %lor.lhs.false.726
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2354, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.decompose, i32 0, i32 0)) #5
  unreachable

if.end.734:                                       ; preds = %if.then.731
  br label %if.end.735

if.end.735:                                       ; preds = %if.end.734, %if.end.685
  br label %if.end.736

if.end.736:                                       ; preds = %if.end.735, %if.end.559
  br label %if.end.737

if.end.737:                                       ; preds = %if.end.736
  %292 = bitcast %struct.decomposition* %agg.result to i8*
  %293 = bitcast %struct.decomposition* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %292, i8* %293, i64 32, i32 8, i1 false)
  br label %return

return:                                           ; preds = %if.end.737, %if.then.585, %if.then.573, %if.end.435, %if.then.155, %if.then.16
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @immune_p(%struct.rtx_def* %x, %struct.rtx_def* %y, %struct.decomposition* byval align 8 %ydata) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %xdata = alloca %struct.decomposition, align 8
  %tmp = alloca %struct.decomposition, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  %reg_flag = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 0
  %0 = load i32, i32* %reg_flag, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %start = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 3
  %1 = load i64, i64* %start, align 8
  %conv = trunc i64 %1 to i32
  %end = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 4
  %2 = load i64, i64* %end, align 8
  %conv1 = trunc i64 %2 to i32
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @refers_to_regno_for_reload_p(i32 %conv, i32 %conv1, %struct.rtx_def* %3, %struct.rtx_def** null)
  %tobool2 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool2, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %safe = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 1
  %4 = load i32, i32* %safe, align 4
  %tobool3 = icmp ne i32 %4, 0
  br i1 %tobool3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 66
  br i1 %cmp, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.5
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2374, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.immune_p, i32 0, i32 0)) #5
  unreachable

if.end.8:                                         ; preds = %if.end.5
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load9 = load i32, i32* %8, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp ne i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.8
  store i32 1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  call void @decompose(%struct.decomposition* sret %tmp, %struct.rtx_def* %9)
  %10 = bitcast %struct.decomposition* %xdata to i8*
  %11 = bitcast %struct.decomposition* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  %base = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %12 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %base15 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %13 = load %struct.rtx_def*, %struct.rtx_def** %base15, align 8
  %call16 = call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %13)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.236, label %if.then.18

if.then.18:                                       ; preds = %if.end.14
  %base19 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %14 = load %struct.rtx_def*, %struct.rtx_def** %base19, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load20 = load i32, i32* %15, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 67
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.18
  %base24 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %16 = load %struct.rtx_def*, %struct.rtx_def** %base24, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load25 = load i32, i32* %17, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 68
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %lor.lhs.false
  %base30 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %18 = load %struct.rtx_def*, %struct.rtx_def** %base30, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load31 = load i32, i32* %19, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %land.lhs.true, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.29
  %base36 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %20 = load %struct.rtx_def*, %struct.rtx_def** %base36, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load37 = load i32, i32* %21, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 55
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %lor.lhs.false.35
  %base42 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %22 = load %struct.rtx_def*, %struct.rtx_def** %base42, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load43 = load i32, i32* %23, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 58
  br i1 %cmp45, label %land.lhs.true, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %lor.lhs.false.41
  %base48 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %24 = load %struct.rtx_def*, %struct.rtx_def** %base48, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load49 = load i32, i32* %25, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 134
  br i1 %cmp51, label %land.lhs.true, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.47
  %base54 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %26 = load %struct.rtx_def*, %struct.rtx_def** %base54, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load55 = load i32, i32* %27, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 56
  br i1 %cmp57, label %land.lhs.true, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %lor.lhs.false.53
  %base60 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %28 = load %struct.rtx_def*, %struct.rtx_def** %base60, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load61 = load i32, i32* %29, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 140
  br i1 %cmp63, label %land.lhs.true, label %if.end.113

land.lhs.true:                                    ; preds = %lor.lhs.false.59, %lor.lhs.false.53, %lor.lhs.false.47, %lor.lhs.false.41, %lor.lhs.false.35, %lor.lhs.false.29, %lor.lhs.false, %if.then.18
  %base65 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %30 = load %struct.rtx_def*, %struct.rtx_def** %base65, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load66 = load i32, i32* %31, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 67
  br i1 %cmp68, label %if.then.112, label %lor.lhs.false.70

lor.lhs.false.70:                                 ; preds = %land.lhs.true
  %base71 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %32 = load %struct.rtx_def*, %struct.rtx_def** %base71, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load72 = load i32, i32* %33, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 68
  br i1 %cmp74, label %if.then.112, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %lor.lhs.false.70
  %base77 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %34 = load %struct.rtx_def*, %struct.rtx_def** %base77, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load78 = load i32, i32* %35, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 54
  br i1 %cmp80, label %if.then.112, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %lor.lhs.false.76
  %base83 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %36 = load %struct.rtx_def*, %struct.rtx_def** %base83, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load84 = load i32, i32* %37, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 55
  br i1 %cmp86, label %if.then.112, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %lor.lhs.false.82
  %base89 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %38 = load %struct.rtx_def*, %struct.rtx_def** %base89, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load90 = load i32, i32* %39, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 58
  br i1 %cmp92, label %if.then.112, label %lor.lhs.false.94

lor.lhs.false.94:                                 ; preds = %lor.lhs.false.88
  %base95 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %40 = load %struct.rtx_def*, %struct.rtx_def** %base95, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load96 = load i32, i32* %41, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 134
  br i1 %cmp98, label %if.then.112, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.94
  %base101 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %42 = load %struct.rtx_def*, %struct.rtx_def** %base101, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load102 = load i32, i32* %43, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp eq i32 %bf.clear103, 56
  br i1 %cmp104, label %if.then.112, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %lor.lhs.false.100
  %base107 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %44 = load %struct.rtx_def*, %struct.rtx_def** %base107, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load108 = load i32, i32* %45, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 140
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %lor.lhs.false.106, %lor.lhs.false.100, %lor.lhs.false.94, %lor.lhs.false.88, %lor.lhs.false.82, %lor.lhs.false.76, %lor.lhs.false.70, %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end.113:                                       ; preds = %lor.lhs.false.106, %lor.lhs.false.59
  %base114 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %46 = load %struct.rtx_def*, %struct.rtx_def** %base114, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load115 = load i32, i32* %47, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %cmp117 = icmp eq i32 %bf.clear116, 67
  br i1 %cmp117, label %land.lhs.true.161, label %lor.lhs.false.119

lor.lhs.false.119:                                ; preds = %if.end.113
  %base120 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %48 = load %struct.rtx_def*, %struct.rtx_def** %base120, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load121 = load i32, i32* %49, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 68
  br i1 %cmp123, label %land.lhs.true.161, label %lor.lhs.false.125

lor.lhs.false.125:                                ; preds = %lor.lhs.false.119
  %base126 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %50 = load %struct.rtx_def*, %struct.rtx_def** %base126, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load127 = load i32, i32* %51, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear128, 54
  br i1 %cmp129, label %land.lhs.true.161, label %lor.lhs.false.131

lor.lhs.false.131:                                ; preds = %lor.lhs.false.125
  %base132 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %52 = load %struct.rtx_def*, %struct.rtx_def** %base132, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load133 = load i32, i32* %53, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 55
  br i1 %cmp135, label %land.lhs.true.161, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %lor.lhs.false.131
  %base138 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %54 = load %struct.rtx_def*, %struct.rtx_def** %base138, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load139 = load i32, i32* %55, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp eq i32 %bf.clear140, 58
  br i1 %cmp141, label %land.lhs.true.161, label %lor.lhs.false.143

lor.lhs.false.143:                                ; preds = %lor.lhs.false.137
  %base144 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %56 = load %struct.rtx_def*, %struct.rtx_def** %base144, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load145 = load i32, i32* %57, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 134
  br i1 %cmp147, label %land.lhs.true.161, label %lor.lhs.false.149

lor.lhs.false.149:                                ; preds = %lor.lhs.false.143
  %base150 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %58 = load %struct.rtx_def*, %struct.rtx_def** %base150, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load151 = load i32, i32* %59, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 56
  br i1 %cmp153, label %land.lhs.true.161, label %lor.lhs.false.155

lor.lhs.false.155:                                ; preds = %lor.lhs.false.149
  %base156 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %60 = load %struct.rtx_def*, %struct.rtx_def** %base156, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load157 = load i32, i32* %61, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 140
  br i1 %cmp159, label %land.lhs.true.161, label %if.end.174

land.lhs.true.161:                                ; preds = %lor.lhs.false.155, %lor.lhs.false.149, %lor.lhs.false.143, %lor.lhs.false.137, %lor.lhs.false.131, %lor.lhs.false.125, %lor.lhs.false.119, %if.end.113
  %base162 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %62 = load %struct.rtx_def*, %struct.rtx_def** %base162, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp163 = icmp eq %struct.rtx_def* %62, %63
  br i1 %cmp163, label %if.then.173, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %land.lhs.true.161
  %base166 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %64 = load %struct.rtx_def*, %struct.rtx_def** %base166, align 8
  %65 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp167 = icmp eq %struct.rtx_def* %64, %65
  br i1 %cmp167, label %if.then.173, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %lor.lhs.false.165
  %base170 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %66 = load %struct.rtx_def*, %struct.rtx_def** %base170, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp171 = icmp eq %struct.rtx_def* %66, %67
  br i1 %cmp171, label %if.then.173, label %if.end.174

if.then.173:                                      ; preds = %lor.lhs.false.169, %lor.lhs.false.165, %land.lhs.true.161
  store i32 1, i32* %retval
  br label %return

if.end.174:                                       ; preds = %lor.lhs.false.169, %lor.lhs.false.155
  %base175 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %68 = load %struct.rtx_def*, %struct.rtx_def** %base175, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load176 = load i32, i32* %69, align 8
  %bf.clear177 = and i32 %bf.load176, 65535
  %cmp178 = icmp eq i32 %bf.clear177, 67
  br i1 %cmp178, label %land.lhs.true.222, label %lor.lhs.false.180

lor.lhs.false.180:                                ; preds = %if.end.174
  %base181 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %70 = load %struct.rtx_def*, %struct.rtx_def** %base181, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load182 = load i32, i32* %71, align 8
  %bf.clear183 = and i32 %bf.load182, 65535
  %cmp184 = icmp eq i32 %bf.clear183, 68
  br i1 %cmp184, label %land.lhs.true.222, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %lor.lhs.false.180
  %base187 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %72 = load %struct.rtx_def*, %struct.rtx_def** %base187, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load188 = load i32, i32* %73, align 8
  %bf.clear189 = and i32 %bf.load188, 65535
  %cmp190 = icmp eq i32 %bf.clear189, 54
  br i1 %cmp190, label %land.lhs.true.222, label %lor.lhs.false.192

lor.lhs.false.192:                                ; preds = %lor.lhs.false.186
  %base193 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %74 = load %struct.rtx_def*, %struct.rtx_def** %base193, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load194 = load i32, i32* %75, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 55
  br i1 %cmp196, label %land.lhs.true.222, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %lor.lhs.false.192
  %base199 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %76 = load %struct.rtx_def*, %struct.rtx_def** %base199, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load200 = load i32, i32* %77, align 8
  %bf.clear201 = and i32 %bf.load200, 65535
  %cmp202 = icmp eq i32 %bf.clear201, 58
  br i1 %cmp202, label %land.lhs.true.222, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.198
  %base205 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %78 = load %struct.rtx_def*, %struct.rtx_def** %base205, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %bf.load206 = load i32, i32* %79, align 8
  %bf.clear207 = and i32 %bf.load206, 65535
  %cmp208 = icmp eq i32 %bf.clear207, 134
  br i1 %cmp208, label %land.lhs.true.222, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %lor.lhs.false.204
  %base211 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %80 = load %struct.rtx_def*, %struct.rtx_def** %base211, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load212 = load i32, i32* %81, align 8
  %bf.clear213 = and i32 %bf.load212, 65535
  %cmp214 = icmp eq i32 %bf.clear213, 56
  br i1 %cmp214, label %land.lhs.true.222, label %lor.lhs.false.216

lor.lhs.false.216:                                ; preds = %lor.lhs.false.210
  %base217 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 2
  %82 = load %struct.rtx_def*, %struct.rtx_def** %base217, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load218 = load i32, i32* %83, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 140
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.235

land.lhs.true.222:                                ; preds = %lor.lhs.false.216, %lor.lhs.false.210, %lor.lhs.false.204, %lor.lhs.false.198, %lor.lhs.false.192, %lor.lhs.false.186, %lor.lhs.false.180, %if.end.174
  %base223 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %84 = load %struct.rtx_def*, %struct.rtx_def** %base223, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp224 = icmp eq %struct.rtx_def* %84, %85
  br i1 %cmp224, label %if.then.234, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %land.lhs.true.222
  %base227 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %86 = load %struct.rtx_def*, %struct.rtx_def** %base227, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp228 = icmp eq %struct.rtx_def* %86, %87
  br i1 %cmp228, label %if.then.234, label %lor.lhs.false.230

lor.lhs.false.230:                                ; preds = %lor.lhs.false.226
  %base231 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 2
  %88 = load %struct.rtx_def*, %struct.rtx_def** %base231, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp232 = icmp eq %struct.rtx_def* %88, %89
  br i1 %cmp232, label %if.then.234, label %if.end.235

if.then.234:                                      ; preds = %lor.lhs.false.230, %lor.lhs.false.226, %land.lhs.true.222
  store i32 1, i32* %retval
  br label %return

if.end.235:                                       ; preds = %lor.lhs.false.230, %lor.lhs.false.216
  store i32 0, i32* %retval
  br label %return

if.end.236:                                       ; preds = %if.end.14
  %start237 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 3
  %90 = load i64, i64* %start237, align 8
  %end238 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 4
  %91 = load i64, i64* %end238, align 8
  %cmp239 = icmp sge i64 %90, %91
  br i1 %cmp239, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.236
  %start241 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %ydata, i32 0, i32 3
  %92 = load i64, i64* %start241, align 8
  %end242 = getelementptr inbounds %struct.decomposition, %struct.decomposition* %xdata, i32 0, i32 4
  %93 = load i64, i64* %end242, align 8
  %cmp243 = icmp sge i64 %92, %93
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.236
  %94 = phi i1 [ true, %if.end.236 ], [ %cmp243, %lor.rhs ]
  %lor.ext = zext i1 %94 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

return:                                           ; preds = %lor.end, %if.end.235, %if.then.234, %if.then.173, %if.then.112, %if.then.13, %if.then.4, %if.then
  %95 = load i32, i32* %retval
  ret i32 %95
}

; Function Attrs: nounwind uwtable
define i32 @find_reloads(%struct.rtx_def* %insn, i32 %replace, i32 %ind_levels, i32 %live_known, i16* %reload_reg_p) #0 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %replace.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %live_known.addr = alloca i32, align 4
  %reload_reg_p.addr = alloca i16*, align 8
  %insn_code_number = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %noperands = alloca i32, align 4
  %constraints = alloca [30 x i8*], align 16
  %preferred_class = alloca [30 x i32], align 16
  %pref_or_nothing = alloca [30 x i8], align 16
  %address_reloaded = alloca [30 x i32], align 16
  %operand_type = alloca [30 x i32], align 16
  %address_type = alloca [30 x i32], align 16
  %modified = alloca [30 x i32], align 16
  %no_input_reloads = alloca i32, align 4
  %no_output_reloads = alloca i32, align 4
  %n_alternatives = alloca i32, align 4
  %this_alternative = alloca [30 x i32], align 16
  %this_alternative_match_win = alloca [30 x i8], align 16
  %this_alternative_win = alloca [30 x i8], align 16
  %this_alternative_offmemok = alloca [30 x i8], align 16
  %this_alternative_earlyclobber = alloca [30 x i8], align 16
  %this_alternative_matches = alloca [30 x i32], align 16
  %swapped = alloca i32, align 4
  %goal_alternative = alloca [30 x i32], align 16
  %this_alternative_number = alloca i32, align 4
  %goal_alternative_number = alloca i32, align 4
  %operand_reloadnum = alloca [30 x i32], align 16
  %goal_alternative_matches = alloca [30 x i32], align 16
  %goal_alternative_matched = alloca [30 x i32], align 16
  %goal_alternative_match_win = alloca [30 x i8], align 16
  %goal_alternative_win = alloca [30 x i8], align 16
  %goal_alternative_offmemok = alloca [30 x i8], align 16
  %goal_alternative_earlyclobber = alloca [30 x i8], align 16
  %goal_alternative_swapped = alloca i32, align 4
  %best = alloca i32, align 4
  %commutative = alloca i32, align 4
  %operands_match = alloca [30 x [30 x i8]], align 16
  %substed_operand = alloca [30 x %struct.rtx_def*], align 16
  %body = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %goal_earlyclobber = alloca i32, align 4
  %this_earlyclobber = alloca i32, align 4
  %operand_mode = alloca [30 x i32], align 16
  %retval20 = alloca i32, align 4
  %p = alloca i8*, align 8
  %c = alloca i32, align 4
  %other = alloca i32, align 4
  %other191 = alloca i32, align 4
  %code = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %op = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %losers = alloca i32, align 4
  %bad = alloca i32, align 4
  %reject = alloca i32, align 4
  %p611 = alloca i8*, align 8
  %win = alloca i32, align 4
  %did_match = alloca i32, align 4
  %badop = alloca i32, align 4
  %winreg = alloca i32, align 4
  %c614 = alloca i32, align 4
  %operand = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %force_reload = alloca i32, align 4
  %offmemok = alloca i32, align 4
  %constmemok = alloca i32, align 4
  %earlyclobber = alloca i32, align 4
  %value = alloca %struct.rtx_def*, align 8
  %const_to_mem = alloca i32, align 4
  %early_data = alloca %struct.decomposition, align 8
  %tmp = alloca %struct.decomposition, align 8
  %tclass = alloca i32, align 4
  %t = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %operand3136 = alloca %struct.rtx_def*, align 8
  %operand3364 = alloca %struct.rtx_def*, align 8
  %substitution = alloca %struct.rtx_def*, align 8
  %opno = alloca i32, align 4
  %k = alloca i32, align 4
  %secondary_in_reload3802 = alloca i32, align 4
  %secondary_out_reload3844 = alloca i32, align 4
  %first_op_addr_num = alloca i32, align 4
  %first_inpaddr_num = alloca [30 x i32], align 16
  %first_outpaddr_num = alloca [30 x i32], align 16
  %need_change = alloca i32, align 4
  %first_num = alloca i32, align 4
  %type = alloca i32, align 4
  %dest = alloca %struct.rtx_def*, align 8
  %regno4419 = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %replace, i32* %replace.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  store i32 %live_known, i32* %live_known.addr, align 4
  store i16* %reload_reg_p, i16** %reload_reg_p.addr, align 8
  store i32 0, i32* %no_input_reloads, align 4
  store i32 0, i32* %no_output_reloads, align 4
  store i32 0, i32* %goal_alternative_number, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %body, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx1 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %cond.true, label %cond.false.17

cond.true:                                        ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 3
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx5, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load6 = load i32, i32* %7, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 47
  br i1 %cmp8, label %cond.true.10, label %cond.false

cond.true.10:                                     ; preds = %cond.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 3
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 3
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %10, %struct.rtx_def* %12)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.10
  %cond = phi %struct.rtx_def* [ %9, %cond.true.10 ], [ %call, %cond.false ]
  br label %cond.end.18

cond.false.17:                                    ; preds = %entry
  br label %cond.end.18

cond.end.18:                                      ; preds = %cond.false.17, %cond.end
  %cond19 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.17 ]
  store %struct.rtx_def* %cond19, %struct.rtx_def** %set, align 8
  store i32 0, i32* %goal_earlyclobber, align 4
  store i32 0, i32* %retval20, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** @this_insn, align 8
  store i32 0, i32* @n_reloads, align 4
  store i32 0, i32* @n_replacements, align 4
  store i32 0, i32* @n_earlyclobbers, align 4
  %14 = load i32, i32* %replace.addr, align 4
  store i32 %14, i32* @replace_reloads, align 4
  %15 = load i32, i32* %live_known.addr, align 4
  store i32 %15, i32* @hard_regs_live_known, align 4
  %16 = load i16*, i16** %reload_reg_p.addr, align 8
  store i16* %16, i16** @static_reload_reg_p, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load21 = load i32, i32* %18, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 33
  br i1 %cmp23, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end.18
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load25 = load i32, i32* %20, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 34
  br i1 %cmp27, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %cond.end.18
  store i32 1, i32* %no_output_reloads, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  call void @llvm.memset.p0i8.i64(i8* bitcast ([59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim to i8*), i8 0, i64 14160, i32 1, i1 false)
  %21 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load29 = load i32, i32* %22, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 47
  br i1 %cmp31, label %land.lhs.true, label %if.end.91

land.lhs.true:                                    ; preds = %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 0
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load36 = load i32, i32* %25, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 61
  br i1 %cmp38, label %land.lhs.true.40, label %if.end.91

land.lhs.true.40:                                 ; preds = %land.lhs.true
  %26 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx45 to i32*
  %28 = load i32, i32* %rtuint, align 4
  %cmp46 = icmp ult i32 %28, 53
  br i1 %cmp46, label %land.lhs.true.48, label %if.end.91

land.lhs.true.48:                                 ; preds = %land.lhs.true.40
  %29 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load52 = load i32, i32* %31, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 61
  br i1 %cmp54, label %land.lhs.true.56, label %if.end.91

land.lhs.true.56:                                 ; preds = %land.lhs.true.48
  %32 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 1
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %34 = load i32, i32* %rtuint62, align 4
  %cmp63 = icmp ult i32 %34, 53
  br i1 %cmp63, label %land.lhs.true.65, label %if.end.91

land.lhs.true.65:                                 ; preds = %land.lhs.true.56
  %35 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx68, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load69 = load i32, i32* %37, align 8
  %bf.lshr = lshr i32 %bf.load69, 16
  %bf.clear70 = and i32 %bf.lshr, 255
  %38 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtuint76 = bitcast %union.rtunion_def* %arrayidx75 to i32*
  %40 = load i32, i32* %rtuint76, align 4
  %idxprom77 = zext i32 %40 to i64
  %arrayidx78 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom77
  %41 = load i32, i32* %arrayidx78, align 4
  %42 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 0
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx81, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 0
  %rtuint84 = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %44 = load i32, i32* %rtuint84, align 4
  %idxprom85 = zext i32 %44 to i64
  %arrayidx86 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom85
  %45 = load i32, i32* %arrayidx86, align 4
  %call87 = call i32 @ix86_register_move_cost(i32 %bf.clear70, i32 %41, i32 %45)
  %cmp88 = icmp eq i32 %call87, 2
  br i1 %cmp88, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %land.lhs.true.65
  store i32 0, i32* %retval
  br label %return

if.end.91:                                        ; preds = %land.lhs.true.65, %land.lhs.true.56, %land.lhs.true.48, %land.lhs.true.40, %land.lhs.true, %if.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @extract_insn(%struct.rtx_def* %46)
  %47 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 1
  %conv92 = sext i8 %47 to i32
  store i32 %conv92, i32* @reload_n_operands, align 4
  store i32 %conv92, i32* %noperands, align 4
  %48 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 1
  %conv93 = sext i8 %48 to i32
  store i32 %conv93, i32* %n_alternatives, align 4
  %49 = load i32, i32* %noperands, align 4
  %cmp94 = icmp eq i32 %49, 0
  br i1 %cmp94, label %if.then.99, label %lor.lhs.false.96

lor.lhs.false.96:                                 ; preds = %if.end.91
  %50 = load i32, i32* %n_alternatives, align 4
  %cmp97 = icmp eq i32 %50, 0
  br i1 %cmp97, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %lor.lhs.false.96, %if.end.91
  store i32 0, i32* %retval
  br label %return

if.end.100:                                       ; preds = %lor.lhs.false.96
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %52 = load i32, i32* %rtint, align 4
  store i32 %52, i32* %insn_code_number, align 4
  %53 = load i32, i32* %insn_code_number, align 4
  %cmp103 = icmp slt i32 %53, 0
  %conv104 = zext i1 %cmp103 to i32
  store i32 %conv104, i32* @this_insn_is_asm, align 4
  %54 = bitcast [30 x i32]* %operand_mode to i8*
  %55 = load i32, i32* %noperands, align 4
  %conv105 = sext i32 %55 to i64
  %mul = mul i64 %conv105, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* bitcast ([30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3) to i8*), i64 %mul, i32 8, i1 false)
  %56 = bitcast [30 x i8*]* %constraints to i8*
  %57 = load i32, i32* %noperands, align 4
  %conv106 = sext i32 %57 to i64
  %mul107 = mul i64 %conv106, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* bitcast ([30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2) to i8*), i64 %mul107, i32 8, i1 false)
  store i32 -1, i32* %commutative, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.100
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %noperands, align 4
  %cmp108 = icmp slt i32 %58, %59
  br i1 %cmp108, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %60 = load i32, i32* %i, align 4
  %idxprom110 = sext i32 %60 to i64
  %arrayidx111 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom110
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx111, align 8
  %62 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %62 to i64
  %arrayidx113 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom112
  store %struct.rtx_def* %61, %struct.rtx_def** %arrayidx113, align 8
  %63 = load i32, i32* %i, align 4
  %idxprom114 = sext i32 %63 to i64
  %arrayidx115 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom114
  %64 = load i8*, i8** %arrayidx115, align 8
  store i8* %64, i8** %p, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %65 to i64
  %arrayidx117 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom116
  store i32 0, i32* %arrayidx117, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.211, %for.body
  %66 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %67 = load i8, i8* %66, align 1
  %conv118 = sext i8 %67 to i32
  store i32 %conv118, i32* %c, align 4
  %tobool = icmp ne i32 %conv118, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %68 = load i32, i32* %c, align 4
  %cmp119 = icmp eq i32 %68, 61
  br i1 %cmp119, label %if.then.121, label %if.else

if.then.121:                                      ; preds = %while.body
  %69 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %69 to i64
  %arrayidx123 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom122
  store i32 2, i32* %arrayidx123, align 4
  br label %if.end.211

if.else:                                          ; preds = %while.body
  %70 = load i32, i32* %c, align 4
  %cmp124 = icmp eq i32 %70, 43
  br i1 %cmp124, label %if.then.126, label %if.else.129

if.then.126:                                      ; preds = %if.else
  %71 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %71 to i64
  %arrayidx128 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom127
  store i32 1, i32* %arrayidx128, align 4
  br label %if.end.210

if.else.129:                                      ; preds = %if.else
  %72 = load i32, i32* %c, align 4
  %cmp130 = icmp eq i32 %72, 37
  br i1 %cmp130, label %if.then.132, label %if.else.137

if.then.132:                                      ; preds = %if.else.129
  %73 = load i32, i32* %i, align 4
  %74 = load i32, i32* %noperands, align 4
  %sub = sub nsw i32 %74, 1
  %cmp133 = icmp eq i32 %73, %sub
  br i1 %cmp133, label %if.then.135, label %if.end.136

if.then.135:                                      ; preds = %if.then.132
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2580, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.end.136:                                       ; preds = %if.then.132
  %75 = load i32, i32* %i, align 4
  store i32 %75, i32* %commutative, align 4
  br label %if.end.209

if.else.137:                                      ; preds = %if.else.129
  %76 = load i32, i32* %c, align 4
  %and = and i32 %76, 255
  %idxprom138 = sext i32 %and to i64
  %arrayidx139 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i32 0, i64 %idxprom138
  %77 = load i16, i16* %arrayidx139, align 2
  %conv140 = zext i16 %77 to i32
  %and141 = and i32 %conv140, 4
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %if.then.143, label %if.end.208

if.then.143:                                      ; preds = %if.else.137
  %78 = load i8*, i8** %p, align 8
  %add.ptr = getelementptr inbounds i8, i8* %78, i64 -1
  %call144 = call i64 @strtoul(i8* %add.ptr, i8** %p, i32 10) #2
  %conv145 = trunc i64 %call144 to i32
  store i32 %conv145, i32* %c, align 4
  %79 = load i32, i32* %c, align 4
  %idxprom146 = sext i32 %79 to i64
  %arrayidx147 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom146
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx147, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom148 = sext i32 %81 to i64
  %arrayidx149 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom148
  %82 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx149, align 8
  %call150 = call i32 @operands_match_p(%struct.rtx_def* %80, %struct.rtx_def* %82)
  %conv151 = trunc i32 %call150 to i8
  %83 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %83 to i64
  %84 = load i32, i32* %c, align 4
  %idxprom153 = sext i32 %84 to i64
  %arrayidx154 = getelementptr inbounds [30 x [30 x i8]], [30 x [30 x i8]]* %operands_match, i32 0, i64 %idxprom153
  %arrayidx155 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx154, i32 0, i64 %idxprom152
  store i8 %conv151, i8* %arrayidx155, align 1
  %85 = load i32, i32* %c, align 4
  %86 = load i32, i32* %i, align 4
  %cmp156 = icmp eq i32 %85, %86
  br i1 %cmp156, label %if.then.158, label %if.end.159

if.then.158:                                      ; preds = %if.then.143
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 2594, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.end.159:                                       ; preds = %if.then.143
  %87 = load i32, i32* %commutative, align 4
  %cmp160 = icmp sge i32 %87, 0
  br i1 %cmp160, label %if.then.162, label %if.end.207

if.then.162:                                      ; preds = %if.end.159
  %88 = load i32, i32* %c, align 4
  %89 = load i32, i32* %commutative, align 4
  %cmp163 = icmp eq i32 %88, %89
  br i1 %cmp163, label %if.then.168, label %lor.lhs.false.165

lor.lhs.false.165:                                ; preds = %if.then.162
  %90 = load i32, i32* %c, align 4
  %91 = load i32, i32* %commutative, align 4
  %add = add nsw i32 %91, 1
  %cmp166 = icmp eq i32 %90, %add
  br i1 %cmp166, label %if.then.168, label %if.end.183

if.then.168:                                      ; preds = %lor.lhs.false.165, %if.then.162
  %92 = load i32, i32* %c, align 4
  %93 = load i32, i32* %c, align 4
  %94 = load i32, i32* %commutative, align 4
  %cmp169 = icmp eq i32 %93, %94
  %cond171 = select i1 %cmp169, i32 1, i32 -1
  %add172 = add nsw i32 %92, %cond171
  store i32 %add172, i32* %other, align 4
  %95 = load i32, i32* %other, align 4
  %idxprom173 = sext i32 %95 to i64
  %arrayidx174 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom173
  %96 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx174, align 8
  %97 = load i32, i32* %i, align 4
  %idxprom175 = sext i32 %97 to i64
  %arrayidx176 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom175
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx176, align 8
  %call177 = call i32 @operands_match_p(%struct.rtx_def* %96, %struct.rtx_def* %98)
  %conv178 = trunc i32 %call177 to i8
  %99 = load i32, i32* %i, align 4
  %idxprom179 = sext i32 %99 to i64
  %100 = load i32, i32* %other, align 4
  %idxprom180 = sext i32 %100 to i64
  %arrayidx181 = getelementptr inbounds [30 x [30 x i8]], [30 x [30 x i8]]* %operands_match, i32 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx181, i32 0, i64 %idxprom179
  store i8 %conv178, i8* %arrayidx182, align 1
  br label %if.end.183

if.end.183:                                       ; preds = %if.then.168, %lor.lhs.false.165
  %101 = load i32, i32* %i, align 4
  %102 = load i32, i32* %commutative, align 4
  %cmp184 = icmp eq i32 %101, %102
  br i1 %cmp184, label %if.then.190, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %if.end.183
  %103 = load i32, i32* %i, align 4
  %104 = load i32, i32* %commutative, align 4
  %add187 = add nsw i32 %104, 1
  %cmp188 = icmp eq i32 %103, %add187
  br i1 %cmp188, label %if.then.190, label %if.end.206

if.then.190:                                      ; preds = %lor.lhs.false.186, %if.end.183
  %105 = load i32, i32* %i, align 4
  %106 = load i32, i32* %i, align 4
  %107 = load i32, i32* %commutative, align 4
  %cmp192 = icmp eq i32 %106, %107
  %cond194 = select i1 %cmp192, i32 1, i32 -1
  %add195 = add nsw i32 %105, %cond194
  store i32 %add195, i32* %other191, align 4
  %108 = load i32, i32* %c, align 4
  %idxprom196 = sext i32 %108 to i64
  %arrayidx197 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom196
  %109 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx197, align 8
  %110 = load i32, i32* %other191, align 4
  %idxprom198 = sext i32 %110 to i64
  %arrayidx199 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom198
  %111 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx199, align 8
  %call200 = call i32 @operands_match_p(%struct.rtx_def* %109, %struct.rtx_def* %111)
  %conv201 = trunc i32 %call200 to i8
  %112 = load i32, i32* %other191, align 4
  %idxprom202 = sext i32 %112 to i64
  %113 = load i32, i32* %c, align 4
  %idxprom203 = sext i32 %113 to i64
  %arrayidx204 = getelementptr inbounds [30 x [30 x i8]], [30 x [30 x i8]]* %operands_match, i32 0, i64 %idxprom203
  %arrayidx205 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx204, i32 0, i64 %idxprom202
  store i8 %conv201, i8* %arrayidx205, align 1
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.190, %lor.lhs.false.186
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206, %if.end.159
  br label %if.end.208

if.end.208:                                       ; preds = %if.end.207, %if.else.137
  br label %if.end.209

if.end.209:                                       ; preds = %if.end.208, %if.end.136
  br label %if.end.210

if.end.210:                                       ; preds = %if.end.209, %if.then.126
  br label %if.end.211

if.end.211:                                       ; preds = %if.end.210, %if.then.121
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %for.inc

for.inc:                                          ; preds = %while.end
  %114 = load i32, i32* %i, align 4
  %inc = add nsw i32 %114, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.212

for.cond.212:                                     ; preds = %for.inc.562, %for.end
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %noperands, align 4
  %cmp213 = icmp slt i32 %115, %116
  br i1 %cmp213, label %for.body.215, label %for.end.564

for.body.215:                                     ; preds = %for.cond.212
  %117 = load i32, i32* %i, align 4
  %idxprom216 = sext i32 %117 to i64
  %arrayidx217 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom216
  %118 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx217, align 8
  %119 = bitcast %struct.rtx_def* %118 to i32*
  %bf.load218 = load i32, i32* %119, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  store i32 %bf.clear219, i32* %code, align 4
  %120 = load i32, i32* %i, align 4
  %idxprom220 = sext i32 %120 to i64
  %arrayidx221 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom220
  store i32 0, i32* %arrayidx221, align 4
  %121 = load i32, i32* %i, align 4
  %idxprom222 = sext i32 %121 to i64
  %arrayidx223 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom222
  %122 = load i32, i32* %arrayidx223, align 4
  %cmp224 = icmp eq i32 %122, 0
  br i1 %cmp224, label %cond.true.226, label %cond.false.227

cond.true.226:                                    ; preds = %for.body.215
  br label %cond.end.233

cond.false.227:                                   ; preds = %for.body.215
  %123 = load i32, i32* %i, align 4
  %idxprom228 = sext i32 %123 to i64
  %arrayidx229 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom228
  %124 = load i32, i32* %arrayidx229, align 4
  %cmp230 = icmp eq i32 %124, 2
  %cond232 = select i1 %cmp230, i32 1, i32 9
  br label %cond.end.233

cond.end.233:                                     ; preds = %cond.false.227, %cond.true.226
  %cond234 = phi i32 [ 0, %cond.true.226 ], [ %cond232, %cond.false.227 ]
  %125 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %125 to i64
  %arrayidx236 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom235
  store i32 %cond234, i32* %arrayidx236, align 4
  %126 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %126 to i64
  %arrayidx238 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom237
  %127 = load i32, i32* %arrayidx238, align 4
  %cmp239 = icmp eq i32 %127, 0
  br i1 %cmp239, label %cond.true.241, label %cond.false.242

cond.true.241:                                    ; preds = %cond.end.233
  br label %cond.end.248

cond.false.242:                                   ; preds = %cond.end.233
  %128 = load i32, i32* %i, align 4
  %idxprom243 = sext i32 %128 to i64
  %arrayidx244 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom243
  %129 = load i32, i32* %arrayidx244, align 4
  %cmp245 = icmp eq i32 %129, 2
  %cond247 = select i1 %cmp245, i32 5, i32 9
  br label %cond.end.248

cond.end.248:                                     ; preds = %cond.false.242, %cond.true.241
  %cond249 = phi i32 [ 3, %cond.true.241 ], [ %cond247, %cond.false.242 ]
  %130 = load i32, i32* %i, align 4
  %idxprom250 = sext i32 %130 to i64
  %arrayidx251 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom250
  store i32 %cond249, i32* %arrayidx251, align 4
  %131 = load i32, i32* %i, align 4
  %idxprom252 = sext i32 %131 to i64
  %arrayidx253 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom252
  %132 = load i8*, i8** %arrayidx253, align 8
  %133 = load i8, i8* %132, align 1
  %conv254 = sext i8 %133 to i32
  %cmp255 = icmp eq i32 %conv254, 0
  br i1 %cmp255, label %if.then.257, label %if.else.258

if.then.257:                                      ; preds = %cond.end.248
  br label %if.end.511

if.else.258:                                      ; preds = %cond.end.248
  %134 = load i32, i32* %i, align 4
  %idxprom259 = sext i32 %134 to i64
  %arrayidx260 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom259
  %135 = load i8*, i8** %arrayidx260, align 8
  %arrayidx261 = getelementptr inbounds i8, i8* %135, i64 0
  %136 = load i8, i8* %arrayidx261, align 1
  %conv262 = sext i8 %136 to i32
  %cmp263 = icmp eq i32 %conv262, 112
  br i1 %cmp263, label %if.then.265, label %if.else.317

if.then.265:                                      ; preds = %if.else.258
  %137 = load i32, i32* %i, align 4
  %idxprom266 = sext i32 %137 to i64
  %arrayidx267 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom266
  %138 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx267, align 8
  %139 = load i32, i32* %i, align 4
  %idxprom268 = sext i32 %139 to i64
  %arrayidx269 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom268
  %140 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx269, align 8
  %141 = load i32, i32* %i, align 4
  %142 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %142 to i64
  %arrayidx271 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom270
  %143 = load i32, i32* %arrayidx271, align 4
  %144 = load i32, i32* %ind_levels.addr, align 4
  %145 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call272 = call i32 @find_reloads_address(i32 0, %struct.rtx_def** null, %struct.rtx_def* %138, %struct.rtx_def** %140, i32 %141, i32 %143, i32 %144, %struct.rtx_def* %145)
  %146 = load i32, i32* %i, align 4
  %idxprom273 = sext i32 %146 to i64
  %arrayidx274 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom273
  %147 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx274, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %147, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load275 = load i32, i32* %149, align 8
  %bf.clear276 = and i32 %bf.load275, 65535
  %idxprom277 = sext i32 %bf.clear276 to i64
  %arrayidx278 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom277
  %150 = load i8, i8* %arrayidx278, align 1
  %conv279 = sext i8 %150 to i32
  %cmp280 = icmp eq i32 %conv279, 111
  br i1 %cmp280, label %land.lhs.true.289, label %lor.lhs.false.282

lor.lhs.false.282:                                ; preds = %if.then.265
  %151 = load i32, i32* %i, align 4
  %idxprom283 = sext i32 %151 to i64
  %arrayidx284 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom283
  %152 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx284, align 8
  %153 = load %struct.rtx_def*, %struct.rtx_def** %152, align 8
  %154 = bitcast %struct.rtx_def* %153 to i32*
  %bf.load285 = load i32, i32* %154, align 8
  %bf.clear286 = and i32 %bf.load285, 65535
  %cmp287 = icmp eq i32 %bf.clear286, 63
  br i1 %cmp287, label %land.lhs.true.289, label %if.end.308

land.lhs.true.289:                                ; preds = %lor.lhs.false.282, %if.then.265
  %155 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %155 to i64
  %arrayidx291 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom290
  %156 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx291, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load292 = load i32, i32* %157, align 8
  %bf.clear293 = and i32 %bf.load292, 65535
  %cmp294 = icmp eq i32 %bf.clear293, 78
  br i1 %cmp294, label %if.then.303, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %land.lhs.true.289
  %158 = load i32, i32* %i, align 4
  %idxprom297 = sext i32 %158 to i64
  %arrayidx298 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom297
  %159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx298, align 8
  %160 = bitcast %struct.rtx_def* %159 to i32*
  %bf.load299 = load i32, i32* %160, align 8
  %bf.clear300 = and i32 %bf.load299, 65535
  %cmp301 = icmp eq i32 %bf.clear300, 75
  br i1 %cmp301, label %if.then.303, label %if.end.308

if.then.303:                                      ; preds = %lor.lhs.false.296, %land.lhs.true.289
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i32 0, i64 4
  %rtint306 = bitcast %union.rtunion_def* %arrayidx305 to i32*
  store i32 -1, i32* %rtint306, align 4
  %162 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %163 = load i32, i32* %replace.addr, align 4
  %164 = load i32, i32* %ind_levels.addr, align 4
  %165 = load i32, i32* %live_known.addr, align 4
  %166 = load i16*, i16** %reload_reg_p.addr, align 8
  %call307 = call i32 @find_reloads(%struct.rtx_def* %162, i32 %163, i32 %164, i32 %165, i16* %166)
  store i32 %call307, i32* %retval20, align 4
  %167 = load i32, i32* %retval20, align 4
  store i32 %167, i32* %retval
  br label %return

if.end.308:                                       ; preds = %lor.lhs.false.296, %lor.lhs.false.282
  %168 = load i32, i32* %i, align 4
  %idxprom309 = sext i32 %168 to i64
  %arrayidx310 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom309
  %169 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx310, align 8
  %170 = load %struct.rtx_def*, %struct.rtx_def** %169, align 8
  %171 = load i32, i32* %i, align 4
  %idxprom311 = sext i32 %171 to i64
  %arrayidx312 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom311
  store %struct.rtx_def* %170, %struct.rtx_def** %arrayidx312, align 8
  %172 = load i32, i32* %i, align 4
  %idxprom313 = sext i32 %172 to i64
  %arrayidx314 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom313
  %173 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx314, align 8
  %174 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %174 to i64
  %arrayidx316 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom315
  store %struct.rtx_def* %173, %struct.rtx_def** %arrayidx316, align 8
  br label %if.end.510

if.else.317:                                      ; preds = %if.else.258
  %175 = load i32, i32* %code, align 4
  %cmp318 = icmp eq i32 %175, 66
  br i1 %cmp318, label %if.then.320, label %if.else.351

if.then.320:                                      ; preds = %if.else.317
  %176 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %176 to i64
  %arrayidx322 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom321
  %177 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx322, align 8
  %178 = bitcast %struct.rtx_def* %177 to i32*
  %bf.load323 = load i32, i32* %178, align 8
  %bf.lshr324 = lshr i32 %bf.load323, 16
  %bf.clear325 = and i32 %bf.lshr324, 255
  %179 = load i32, i32* %i, align 4
  %idxprom326 = sext i32 %179 to i64
  %arrayidx327 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom326
  %180 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx327, align 8
  %181 = load i32, i32* %i, align 4
  %idxprom328 = sext i32 %181 to i64
  %arrayidx329 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom328
  %182 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx329, align 8
  %fld330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i32 0, i64 0
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx332, align 8
  %184 = load i32, i32* %i, align 4
  %idxprom333 = sext i32 %184 to i64
  %arrayidx334 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom333
  %185 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx334, align 8
  %fld335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx336 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld335, i32 0, i64 0
  %rtx337 = bitcast %union.rtunion_def* %arrayidx336 to %struct.rtx_def**
  %186 = load i32, i32* %i, align 4
  %187 = load i32, i32* %i, align 4
  %idxprom338 = sext i32 %187 to i64
  %arrayidx339 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom338
  %188 = load i32, i32* %arrayidx339, align 4
  %189 = load i32, i32* %ind_levels.addr, align 4
  %190 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call340 = call i32 @find_reloads_address(i32 %bf.clear325, %struct.rtx_def** %180, %struct.rtx_def* %183, %struct.rtx_def** %rtx337, i32 %186, i32 %188, i32 %189, %struct.rtx_def* %190)
  %191 = load i32, i32* %i, align 4
  %idxprom341 = sext i32 %191 to i64
  %arrayidx342 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom341
  store i32 %call340, i32* %arrayidx342, align 4
  %192 = load i32, i32* %i, align 4
  %idxprom343 = sext i32 %192 to i64
  %arrayidx344 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom343
  %193 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx344, align 8
  %194 = load %struct.rtx_def*, %struct.rtx_def** %193, align 8
  %195 = load i32, i32* %i, align 4
  %idxprom345 = sext i32 %195 to i64
  %arrayidx346 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom345
  store %struct.rtx_def* %194, %struct.rtx_def** %arrayidx346, align 8
  %196 = load i32, i32* %i, align 4
  %idxprom347 = sext i32 %196 to i64
  %arrayidx348 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom347
  %197 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx348, align 8
  %198 = load i32, i32* %i, align 4
  %idxprom349 = sext i32 %198 to i64
  %arrayidx350 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom349
  store %struct.rtx_def* %197, %struct.rtx_def** %arrayidx350, align 8
  br label %if.end.509

if.else.351:                                      ; preds = %if.else.317
  %199 = load i32, i32* %code, align 4
  %cmp352 = icmp eq i32 %199, 63
  br i1 %cmp352, label %if.then.354, label %if.else.416

if.then.354:                                      ; preds = %if.else.351
  %200 = load i32, i32* %i, align 4
  %idxprom355 = sext i32 %200 to i64
  %arrayidx356 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom355
  %201 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx356, align 8
  %fld357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i32 0, i64 0
  %rtx359 = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx359, align 8
  store %struct.rtx_def* %202, %struct.rtx_def** %reg, align 8
  %203 = load i32, i32* %i, align 4
  %idxprom360 = sext i32 %203 to i64
  %arrayidx361 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom360
  %204 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx361, align 8
  %205 = load i32, i32* %i, align 4
  %206 = load i32, i32* %i, align 4
  %idxprom362 = sext i32 %206 to i64
  %arrayidx363 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom362
  %207 = load i32, i32* %arrayidx363, align 4
  %208 = load i32, i32* %ind_levels.addr, align 4
  %209 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp364 = icmp ne %struct.rtx_def* %209, null
  br i1 %cmp364, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.354
  %210 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %211 = load i32, i32* %i, align 4
  %idxprom369 = sext i32 %211 to i64
  %arrayidx370 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom369
  %212 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx370, align 8
  %cmp371 = icmp eq %struct.rtx_def** %rtx368, %212
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.354
  %213 = phi i1 [ false, %if.then.354 ], [ %cmp371, %land.rhs ]
  %land.ext = zext i1 %213 to i32
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %215 = load i32, i32* %i, align 4
  %idxprom373 = sext i32 %215 to i64
  %arrayidx374 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom373
  %call375 = call %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %204, i32 %205, i32 %207, i32 %208, i32 %land.ext, %struct.rtx_def* %214, i32* %arrayidx374)
  store %struct.rtx_def* %call375, %struct.rtx_def** %op, align 8
  %216 = load i32, i32* %replace.addr, align 4
  %tobool376 = icmp ne i32 %216, 0
  br i1 %tobool376, label %land.lhs.true.377, label %if.end.411

land.lhs.true.377:                                ; preds = %land.end
  %217 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8
  %218 = bitcast %struct.rtx_def* %217 to i32*
  %bf.load378 = load i32, i32* %218, align 8
  %bf.clear379 = and i32 %bf.load378, 65535
  %cmp380 = icmp eq i32 %bf.clear379, 66
  br i1 %cmp380, label %land.lhs.true.382, label %if.end.411

land.lhs.true.382:                                ; preds = %land.lhs.true.377
  %219 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %220 = bitcast %struct.rtx_def* %219 to i32*
  %bf.load383 = load i32, i32* %220, align 8
  %bf.clear384 = and i32 %bf.load383, 65535
  %cmp385 = icmp eq i32 %bf.clear384, 61
  br i1 %cmp385, label %land.lhs.true.387, label %if.end.411

land.lhs.true.387:                                ; preds = %land.lhs.true.382
  %221 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load388 = load i32, i32* %222, align 8
  %bf.lshr389 = lshr i32 %bf.load388, 16
  %bf.clear390 = and i32 %bf.lshr389, 255
  %idxprom391 = sext i32 %bf.clear390 to i64
  %arrayidx392 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom391
  %223 = load i8, i8* %arrayidx392, align 1
  %conv393 = zext i8 %223 to i32
  %224 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load394 = load i32, i32* %225, align 8
  %bf.lshr395 = lshr i32 %bf.load394, 16
  %bf.clear396 = and i32 %bf.lshr395, 255
  %idxprom397 = sext i32 %bf.clear396 to i64
  %arrayidx398 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom397
  %226 = load i8, i8* %arrayidx398, align 1
  %conv399 = zext i8 %226 to i32
  %cmp400 = icmp sge i32 %conv393, %conv399
  br i1 %cmp400, label %if.then.402, label %if.end.411

if.then.402:                                      ; preds = %land.lhs.true.387
  %227 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %call403 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %227)
  %228 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call404 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call403, %struct.rtx_def* %228)
  %229 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8
  %fld405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i32 0, i64 0
  %rtuint407 = bitcast %union.rtunion_def* %arrayidx406 to i32*
  %230 = load i32, i32* %rtuint407, align 4
  %idxprom408 = zext i32 %230 to i64
  %231 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx409 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %231, i64 %idxprom408
  %232 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx409, align 8
  %call410 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call404, i32 4, %struct.rtx_def* %232)
  br label %if.end.411

if.end.411:                                       ; preds = %if.then.402, %land.lhs.true.387, %land.lhs.true.382, %land.lhs.true.377, %land.end
  %233 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8
  %234 = load i32, i32* %i, align 4
  %idxprom412 = sext i32 %234 to i64
  %arrayidx413 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom412
  store %struct.rtx_def* %233, %struct.rtx_def** %arrayidx413, align 8
  %235 = load i32, i32* %i, align 4
  %idxprom414 = sext i32 %235 to i64
  %arrayidx415 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom414
  store %struct.rtx_def* %233, %struct.rtx_def** %arrayidx415, align 8
  br label %if.end.508

if.else.416:                                      ; preds = %if.else.351
  %236 = load i32, i32* %code, align 4
  %cmp417 = icmp eq i32 %236, 75
  br i1 %cmp417, label %if.then.425, label %lor.lhs.false.419

lor.lhs.false.419:                                ; preds = %if.else.416
  %237 = load i32, i32* %code, align 4
  %idxprom420 = sext i32 %237 to i64
  %arrayidx421 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom420
  %238 = load i8, i8* %arrayidx421, align 1
  %conv422 = sext i8 %238 to i32
  %cmp423 = icmp eq i32 %conv422, 49
  br i1 %cmp423, label %if.then.425, label %if.else.437

if.then.425:                                      ; preds = %lor.lhs.false.419, %if.else.416
  %239 = load i32, i32* %i, align 4
  %idxprom426 = sext i32 %239 to i64
  %arrayidx427 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom426
  %240 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx427, align 8
  %241 = load i32, i32* %i, align 4
  %242 = load i32, i32* %i, align 4
  %idxprom428 = sext i32 %242 to i64
  %arrayidx429 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom428
  %243 = load i32, i32* %arrayidx429, align 4
  %244 = load i32, i32* %ind_levels.addr, align 4
  %245 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %246 = load i32, i32* %i, align 4
  %idxprom430 = sext i32 %246 to i64
  %arrayidx431 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom430
  %call432 = call %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %240, i32 %241, i32 %243, i32 %244, i32 0, %struct.rtx_def* %245, i32* %arrayidx431)
  %247 = load i32, i32* %i, align 4
  %idxprom433 = sext i32 %247 to i64
  %arrayidx434 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom433
  store %struct.rtx_def* %call432, %struct.rtx_def** %arrayidx434, align 8
  %248 = load i32, i32* %i, align 4
  %idxprom435 = sext i32 %248 to i64
  %arrayidx436 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom435
  store %struct.rtx_def* %call432, %struct.rtx_def** %arrayidx436, align 8
  br label %if.end.507

if.else.437:                                      ; preds = %lor.lhs.false.419
  %249 = load i32, i32* %code, align 4
  %cmp438 = icmp eq i32 %249, 61
  br i1 %cmp438, label %if.then.440, label %if.end.506

if.then.440:                                      ; preds = %if.else.437
  %250 = load i32, i32* %i, align 4
  %idxprom441 = sext i32 %250 to i64
  %arrayidx442 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom441
  %251 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx442, align 8
  %fld443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx444 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld443, i32 0, i64 0
  %rtuint445 = bitcast %union.rtunion_def* %arrayidx444 to i32*
  %252 = load i32, i32* %rtuint445, align 4
  store i32 %252, i32* %regno, align 4
  %253 = load i32, i32* %regno, align 4
  %idxprom446 = sext i32 %253 to i64
  %254 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx447 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %254, i64 %idxprom446
  %255 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx447, align 8
  %cmp448 = icmp ne %struct.rtx_def* %255, null
  br i1 %cmp448, label %land.lhs.true.450, label %if.end.481

land.lhs.true.450:                                ; preds = %if.then.440
  %256 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp451 = icmp eq %struct.rtx_def* %256, null
  br i1 %cmp451, label %if.then.461, label %lor.lhs.false.453

lor.lhs.false.453:                                ; preds = %land.lhs.true.450
  %257 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld454, i32 0, i64 0
  %rtx456 = bitcast %union.rtunion_def* %arrayidx455 to %struct.rtx_def**
  %258 = load i32, i32* %i, align 4
  %idxprom457 = sext i32 %258 to i64
  %arrayidx458 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom457
  %259 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx458, align 8
  %cmp459 = icmp ne %struct.rtx_def** %rtx456, %259
  br i1 %cmp459, label %if.then.461, label %if.end.481

if.then.461:                                      ; preds = %lor.lhs.false.453, %land.lhs.true.450
  %260 = load i32, i32* %i, align 4
  %idxprom462 = sext i32 %260 to i64
  %arrayidx463 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom462
  %261 = load i32, i32* %arrayidx463, align 4
  %cmp464 = icmp eq i32 %261, 0
  br i1 %cmp464, label %if.then.466, label %if.end.474

if.then.466:                                      ; preds = %if.then.461
  %262 = load i32, i32* %i, align 4
  %idxprom467 = sext i32 %262 to i64
  %arrayidx468 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom467
  %263 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx468, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load469 = load i32, i32* %264, align 8
  %bf.lshr470 = lshr i32 %bf.load469, 16
  %bf.clear471 = and i32 %bf.lshr470, 255
  %265 = load i32, i32* %i, align 4
  %idxprom472 = sext i32 %265 to i64
  %arrayidx473 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom472
  store i32 %bf.clear471, i32* %arrayidx473, align 4
  br label %if.end.474

if.end.474:                                       ; preds = %if.then.466, %if.then.461
  %266 = load i32, i32* %regno, align 4
  %idxprom475 = sext i32 %266 to i64
  %267 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx476 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %267, i64 %idxprom475
  %268 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx476, align 8
  %269 = load i32, i32* %i, align 4
  %idxprom477 = sext i32 %269 to i64
  %arrayidx478 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom477
  store %struct.rtx_def* %268, %struct.rtx_def** %arrayidx478, align 8
  %270 = load i32, i32* %i, align 4
  %idxprom479 = sext i32 %270 to i64
  %arrayidx480 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom479
  store %struct.rtx_def* %268, %struct.rtx_def** %arrayidx480, align 8
  br label %if.end.481

if.end.481:                                       ; preds = %if.end.474, %lor.lhs.false.453, %if.then.440
  %271 = load i32, i32* %regno, align 4
  %idxprom482 = sext i32 %271 to i64
  %272 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx483 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %272, i64 %idxprom482
  %273 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx483, align 8
  %cmp484 = icmp ne %struct.rtx_def* %273, null
  br i1 %cmp484, label %land.lhs.true.486, label %if.end.505

land.lhs.true.486:                                ; preds = %if.end.481
  %274 = load i32, i32* %regno, align 4
  %idxprom487 = sext i32 %274 to i64
  %275 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx488 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %275, i64 %idxprom487
  %276 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx488, align 8
  %cmp489 = icmp ne %struct.rtx_def* %276, null
  br i1 %cmp489, label %if.then.493, label %lor.lhs.false.491

lor.lhs.false.491:                                ; preds = %land.lhs.true.486
  %277 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool492 = icmp ne i32 %277, 0
  br i1 %tobool492, label %if.then.493, label %if.end.505

if.then.493:                                      ; preds = %lor.lhs.false.491, %land.lhs.true.486
  %278 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %278 to i64
  %arrayidx495 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom494
  %279 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx495, align 8
  %280 = load i32, i32* %i, align 4
  %281 = load i32, i32* %i, align 4
  %idxprom496 = sext i32 %281 to i64
  %arrayidx497 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom496
  %282 = load i32, i32* %arrayidx497, align 4
  %283 = load i32, i32* %ind_levels.addr, align 4
  %284 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %285 = load i32, i32* %i, align 4
  %idxprom498 = sext i32 %285 to i64
  %arrayidx499 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom498
  %call500 = call %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %279, i32 %280, i32 %282, i32 %283, i32 0, %struct.rtx_def* %284, i32* %arrayidx499)
  %286 = load i32, i32* %i, align 4
  %idxprom501 = sext i32 %286 to i64
  %arrayidx502 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom501
  store %struct.rtx_def* %call500, %struct.rtx_def** %arrayidx502, align 8
  %287 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %287 to i64
  %arrayidx504 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom503
  store %struct.rtx_def* %call500, %struct.rtx_def** %arrayidx504, align 8
  br label %if.end.505

if.end.505:                                       ; preds = %if.then.493, %lor.lhs.false.491, %if.end.481
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.505, %if.else.437
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %if.then.425
  br label %if.end.508

if.end.508:                                       ; preds = %if.end.507, %if.end.411
  br label %if.end.509

if.end.509:                                       ; preds = %if.end.508, %if.then.320
  br label %if.end.510

if.end.510:                                       ; preds = %if.end.509, %if.end.308
  br label %if.end.511

if.end.511:                                       ; preds = %if.end.510, %if.then.257
  %288 = load i32, i32* %i, align 4
  %idxprom512 = sext i32 %288 to i64
  %arrayidx513 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom512
  %289 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx513, align 8
  %290 = bitcast %struct.rtx_def* %289 to i32*
  %bf.load514 = load i32, i32* %290, align 8
  %bf.clear515 = and i32 %bf.load514, 65535
  store i32 %bf.clear515, i32* %code, align 4
  %291 = load i32, i32* %code, align 4
  %cmp516 = icmp eq i32 %291, 61
  br i1 %cmp516, label %land.lhs.true.518, label %cond.false.533

land.lhs.true.518:                                ; preds = %if.end.511
  %292 = load i32, i32* %i, align 4
  %idxprom519 = sext i32 %292 to i64
  %arrayidx520 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom519
  %293 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx520, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 0
  %rtuint523 = bitcast %union.rtunion_def* %arrayidx522 to i32*
  %294 = load i32, i32* %rtuint523, align 4
  %cmp524 = icmp uge i32 %294, 53
  br i1 %cmp524, label %cond.true.526, label %cond.false.533

cond.true.526:                                    ; preds = %land.lhs.true.518
  %295 = load i32, i32* %i, align 4
  %idxprom527 = sext i32 %295 to i64
  %arrayidx528 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom527
  %296 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx528, align 8
  %fld529 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx530 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld529, i32 0, i64 0
  %rtuint531 = bitcast %union.rtunion_def* %arrayidx530 to i32*
  %297 = load i32, i32* %rtuint531, align 4
  %call532 = call i32 @reg_preferred_class(i32 %297)
  br label %cond.end.534

cond.false.533:                                   ; preds = %land.lhs.true.518, %if.end.511
  br label %cond.end.534

cond.end.534:                                     ; preds = %cond.false.533, %cond.true.526
  %cond535 = phi i32 [ %call532, %cond.true.526 ], [ 0, %cond.false.533 ]
  %298 = load i32, i32* %i, align 4
  %idxprom536 = sext i32 %298 to i64
  %arrayidx537 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom536
  store i32 %cond535, i32* %arrayidx537, align 4
  %299 = load i32, i32* %code, align 4
  %cmp538 = icmp eq i32 %299, 61
  br i1 %cmp538, label %land.lhs.true.540, label %land.end.557

land.lhs.true.540:                                ; preds = %cond.end.534
  %300 = load i32, i32* %i, align 4
  %idxprom541 = sext i32 %300 to i64
  %arrayidx542 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom541
  %301 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx542, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtuint545 = bitcast %union.rtunion_def* %arrayidx544 to i32*
  %302 = load i32, i32* %rtuint545, align 4
  %cmp546 = icmp uge i32 %302, 53
  br i1 %cmp546, label %land.rhs.548, label %land.end.557

land.rhs.548:                                     ; preds = %land.lhs.true.540
  %303 = load i32, i32* %i, align 4
  %idxprom549 = sext i32 %303 to i64
  %arrayidx550 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom549
  %304 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx550, align 8
  %fld551 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1
  %arrayidx552 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld551, i32 0, i64 0
  %rtuint553 = bitcast %union.rtunion_def* %arrayidx552 to i32*
  %305 = load i32, i32* %rtuint553, align 4
  %call554 = call i32 @reg_alternate_class(i32 %305)
  %cmp555 = icmp eq i32 %call554, 0
  br label %land.end.557

land.end.557:                                     ; preds = %land.rhs.548, %land.lhs.true.540, %cond.end.534
  %306 = phi i1 [ false, %land.lhs.true.540 ], [ false, %cond.end.534 ], [ %cmp555, %land.rhs.548 ]
  %land.ext558 = zext i1 %306 to i32
  %conv559 = trunc i32 %land.ext558 to i8
  %307 = load i32, i32* %i, align 4
  %idxprom560 = sext i32 %307 to i64
  %arrayidx561 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom560
  store i8 %conv559, i8* %arrayidx561, align 1
  br label %for.inc.562

for.inc.562:                                      ; preds = %land.end.557
  %308 = load i32, i32* %i, align 4
  %inc563 = add nsw i32 %308, 1
  store i32 %inc563, i32* %i, align 4
  br label %for.cond.212

for.end.564:                                      ; preds = %for.cond.212
  %309 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %cmp565 = icmp ne %struct.rtx_def* %309, null
  br i1 %cmp565, label %land.lhs.true.567, label %if.end.602

land.lhs.true.567:                                ; preds = %for.end.564
  %310 = load i32, i32* %noperands, align 4
  %cmp568 = icmp sge i32 %310, 2
  br i1 %cmp568, label %land.lhs.true.570, label %if.end.602

land.lhs.true.570:                                ; preds = %land.lhs.true.567
  %311 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 0), align 8
  %312 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 0
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rtx573, align 8
  %cmp574 = icmp eq %struct.rtx_def* %311, %313
  br i1 %cmp574, label %land.lhs.true.576, label %if.end.602

land.lhs.true.576:                                ; preds = %land.lhs.true.570
  %314 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 1), align 8
  %315 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i32 0, i64 1
  %rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rtx579, align 8
  %cmp580 = icmp eq %struct.rtx_def* %314, %316
  br i1 %cmp580, label %if.then.582, label %if.end.602

if.then.582:                                      ; preds = %land.lhs.true.576
  %arrayidx583 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 1
  %317 = load i32, i32* %arrayidx583, align 4
  %idxprom584 = sext i32 %317 to i64
  %arrayidx585 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 0
  %318 = load i32, i32* %arrayidx585, align 4
  %idxprom586 = sext i32 %318 to i64
  %arrayidx587 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom586
  %arrayidx588 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx587, i32 0, i64 %idxprom584
  %319 = load i32, i32* %arrayidx588, align 4
  %arrayidx589 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 1
  store i32 %319, i32* %arrayidx589, align 4
  %arrayidx590 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 0
  store i32 %319, i32* %arrayidx590, align 4
  %arrayidx591 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 1
  %320 = load i8, i8* %arrayidx591, align 1
  %conv592 = sext i8 %320 to i32
  %arrayidx593 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 0
  %321 = load i8, i8* %arrayidx593, align 1
  %conv594 = sext i8 %321 to i32
  %or = or i32 %conv594, %conv592
  %conv595 = trunc i32 %or to i8
  store i8 %conv595, i8* %arrayidx593, align 1
  %arrayidx596 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 0
  %322 = load i8, i8* %arrayidx596, align 1
  %conv597 = sext i8 %322 to i32
  %arrayidx598 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 1
  %323 = load i8, i8* %arrayidx598, align 1
  %conv599 = sext i8 %323 to i32
  %or600 = or i32 %conv599, %conv597
  %conv601 = trunc i32 %or600 to i8
  store i8 %conv601, i8* %arrayidx598, align 1
  br label %if.end.602

if.end.602:                                       ; preds = %if.then.582, %land.lhs.true.576, %land.lhs.true.570, %land.lhs.true.567, %for.end.564
  store i32 660, i32* %best, align 4
  store i32 0, i32* %swapped, align 4
  store i32 0, i32* %goal_alternative_swapped, align 4
  br label %try_swapped

try_swapped:                                      ; preds = %for.end.2494, %if.end.602
  store i32 0, i32* %this_alternative_number, align 4
  br label %for.cond.603

for.cond.603:                                     ; preds = %for.inc.2445, %try_swapped
  %324 = load i32, i32* %this_alternative_number, align 4
  %325 = load i32, i32* %n_alternatives, align 4
  %cmp604 = icmp slt i32 %324, %325
  br i1 %cmp604, label %for.body.606, label %for.end.2447

for.body.606:                                     ; preds = %for.cond.603
  store i32 0, i32* %losers, align 4
  store i32 0, i32* %bad, align 4
  store i32 0, i32* %reject, align 4
  store i32 0, i32* %this_earlyclobber, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.607

for.cond.607:                                     ; preds = %for.inc.2203, %for.body.606
  %326 = load i32, i32* %i, align 4
  %327 = load i32, i32* %noperands, align 4
  %cmp608 = icmp slt i32 %326, %327
  br i1 %cmp608, label %for.body.610, label %for.end.2205

for.body.610:                                     ; preds = %for.cond.607
  %328 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %328 to i64
  %arrayidx613 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom612
  %329 = load i8*, i8** %arrayidx613, align 8
  store i8* %329, i8** %p611, align 8
  store i32 0, i32* %win, align 4
  store i32 0, i32* %did_match, align 4
  store i32 1, i32* %badop, align 4
  store i32 0, i32* %winreg, align 4
  %330 = load i32, i32* %i, align 4
  %idxprom615 = sext i32 %330 to i64
  %arrayidx616 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom615
  %331 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx616, align 8
  store %struct.rtx_def* %331, %struct.rtx_def** %operand, align 8
  store i32 0, i32* %offset, align 4
  store i32 0, i32* %force_reload, align 4
  store i32 0, i32* %offmemok, align 4
  store i32 0, i32* %constmemok, align 4
  store i32 0, i32* %earlyclobber, align 4
  %332 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %333 = bitcast %struct.rtx_def* %332 to i32*
  %bf.load617 = load i32, i32* %333, align 8
  %bf.clear618 = and i32 %bf.load617, 65535
  %idxprom619 = sext i32 %bf.clear618 to i64
  %arrayidx620 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom619
  %334 = load i8, i8* %arrayidx620, align 1
  %conv621 = sext i8 %334 to i32
  %cmp622 = icmp eq i32 %conv621, 49
  br i1 %cmp622, label %land.lhs.true.624, label %if.end.632

land.lhs.true.624:                                ; preds = %for.body.610
  %335 = load i8*, i8** %p611, align 8
  %336 = load i8, i8* %335, align 1
  %conv625 = sext i8 %336 to i32
  %cmp626 = icmp ne i32 %conv625, 0
  br i1 %cmp626, label %if.then.628, label %if.end.632

if.then.628:                                      ; preds = %land.lhs.true.624
  %337 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %337, i32 0, i32 1
  %arrayidx630 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld629, i32 0, i64 0
  %rtx631 = bitcast %union.rtunion_def* %arrayidx630 to %struct.rtx_def**
  %338 = load %struct.rtx_def*, %struct.rtx_def** %rtx631, align 8
  store %struct.rtx_def* %338, %struct.rtx_def** %operand, align 8
  br label %if.end.632

if.end.632:                                       ; preds = %if.then.628, %land.lhs.true.624, %for.body.610
  br label %while.cond.633

while.cond.633:                                   ; preds = %if.end.770, %if.end.632
  %339 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %340 = bitcast %struct.rtx_def* %339 to i32*
  %bf.load634 = load i32, i32* %340, align 8
  %bf.clear635 = and i32 %bf.load634, 65535
  %cmp636 = icmp eq i32 %bf.clear635, 63
  br i1 %cmp636, label %while.body.638, label %while.end.771

while.body.638:                                   ; preds = %while.cond.633
  %341 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1
  %arrayidx640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld639, i32 0, i64 0
  %rtx641 = bitcast %union.rtunion_def* %arrayidx640 to %struct.rtx_def**
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rtx641, align 8
  %343 = bitcast %struct.rtx_def* %342 to i32*
  %bf.load642 = load i32, i32* %343, align 8
  %bf.clear643 = and i32 %bf.load642, 65535
  %cmp644 = icmp eq i32 %bf.clear643, 61
  br i1 %cmp644, label %land.lhs.true.646, label %if.end.676

land.lhs.true.646:                                ; preds = %while.body.638
  %344 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx648 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld647, i32 0, i64 0
  %rtx649 = bitcast %union.rtunion_def* %arrayidx648 to %struct.rtx_def**
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rtx649, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 0
  %rtuint652 = bitcast %union.rtunion_def* %arrayidx651 to i32*
  %346 = load i32, i32* %rtuint652, align 4
  %cmp653 = icmp ult i32 %346, 53
  br i1 %cmp653, label %if.then.655, label %if.end.676

if.then.655:                                      ; preds = %land.lhs.true.646
  %347 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld656, i32 0, i64 0
  %rtx658 = bitcast %union.rtunion_def* %arrayidx657 to %struct.rtx_def**
  %348 = load %struct.rtx_def*, %struct.rtx_def** %rtx658, align 8
  %fld659 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %348, i32 0, i32 1
  %arrayidx660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld659, i32 0, i64 0
  %rtuint661 = bitcast %union.rtunion_def* %arrayidx660 to i32*
  %349 = load i32, i32* %rtuint661, align 4
  %350 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx663 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld662, i32 0, i64 0
  %rtx664 = bitcast %union.rtunion_def* %arrayidx663 to %struct.rtx_def**
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rtx664, align 8
  %352 = bitcast %struct.rtx_def* %351 to i32*
  %bf.load665 = load i32, i32* %352, align 8
  %bf.lshr666 = lshr i32 %bf.load665, 16
  %bf.clear667 = and i32 %bf.lshr666, 255
  %353 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld668 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1
  %arrayidx669 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld668, i32 0, i64 1
  %rtuint670 = bitcast %union.rtunion_def* %arrayidx669 to i32*
  %354 = load i32, i32* %rtuint670, align 4
  %355 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %356 = bitcast %struct.rtx_def* %355 to i32*
  %bf.load671 = load i32, i32* %356, align 8
  %bf.lshr672 = lshr i32 %bf.load671, 16
  %bf.clear673 = and i32 %bf.lshr672, 255
  %call674 = call i32 @subreg_regno_offset(i32 %349, i32 %bf.clear667, i32 %354, i32 %bf.clear673)
  %357 = load i32, i32* %offset, align 4
  %add675 = add i32 %357, %call674
  store i32 %add675, i32* %offset, align 4
  br label %if.end.676

if.end.676:                                       ; preds = %if.then.655, %land.lhs.true.646, %while.body.638
  %358 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld677 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1
  %arrayidx678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld677, i32 0, i64 0
  %rtx679 = bitcast %union.rtunion_def* %arrayidx678 to %struct.rtx_def**
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rtx679, align 8
  store %struct.rtx_def* %359, %struct.rtx_def** %operand, align 8
  %360 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %361 = bitcast %struct.rtx_def* %360 to i32*
  %bf.load680 = load i32, i32* %361, align 8
  %bf.clear681 = and i32 %bf.load680, 65535
  %cmp682 = icmp eq i32 %bf.clear681, 67
  br i1 %cmp682, label %if.then.769, label %lor.lhs.false.684

lor.lhs.false.684:                                ; preds = %if.end.676
  %362 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load685 = load i32, i32* %363, align 8
  %bf.clear686 = and i32 %bf.load685, 65535
  %cmp687 = icmp eq i32 %bf.clear686, 68
  br i1 %cmp687, label %if.then.769, label %lor.lhs.false.689

lor.lhs.false.689:                                ; preds = %lor.lhs.false.684
  %364 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %bf.load690 = load i32, i32* %365, align 8
  %bf.clear691 = and i32 %bf.load690, 65535
  %cmp692 = icmp eq i32 %bf.clear691, 54
  br i1 %cmp692, label %if.then.769, label %lor.lhs.false.694

lor.lhs.false.694:                                ; preds = %lor.lhs.false.689
  %366 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %367 = bitcast %struct.rtx_def* %366 to i32*
  %bf.load695 = load i32, i32* %367, align 8
  %bf.clear696 = and i32 %bf.load695, 65535
  %cmp697 = icmp eq i32 %bf.clear696, 55
  br i1 %cmp697, label %if.then.769, label %lor.lhs.false.699

lor.lhs.false.699:                                ; preds = %lor.lhs.false.694
  %368 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %369 = bitcast %struct.rtx_def* %368 to i32*
  %bf.load700 = load i32, i32* %369, align 8
  %bf.clear701 = and i32 %bf.load700, 65535
  %cmp702 = icmp eq i32 %bf.clear701, 58
  br i1 %cmp702, label %if.then.769, label %lor.lhs.false.704

lor.lhs.false.704:                                ; preds = %lor.lhs.false.699
  %370 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %371 = bitcast %struct.rtx_def* %370 to i32*
  %bf.load705 = load i32, i32* %371, align 8
  %bf.clear706 = and i32 %bf.load705, 65535
  %cmp707 = icmp eq i32 %bf.clear706, 134
  br i1 %cmp707, label %if.then.769, label %lor.lhs.false.709

lor.lhs.false.709:                                ; preds = %lor.lhs.false.704
  %372 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %373 = bitcast %struct.rtx_def* %372 to i32*
  %bf.load710 = load i32, i32* %373, align 8
  %bf.clear711 = and i32 %bf.load710, 65535
  %cmp712 = icmp eq i32 %bf.clear711, 56
  br i1 %cmp712, label %if.then.769, label %lor.lhs.false.714

lor.lhs.false.714:                                ; preds = %lor.lhs.false.709
  %374 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %375 = bitcast %struct.rtx_def* %374 to i32*
  %bf.load715 = load i32, i32* %375, align 8
  %bf.clear716 = and i32 %bf.load715, 65535
  %cmp717 = icmp eq i32 %bf.clear716, 140
  br i1 %cmp717, label %if.then.769, label %lor.lhs.false.719

lor.lhs.false.719:                                ; preds = %lor.lhs.false.714
  %376 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %377 = bitcast %struct.rtx_def* %376 to i32*
  %bf.load720 = load i32, i32* %377, align 8
  %bf.clear721 = and i32 %bf.load720, 65535
  %cmp722 = icmp eq i32 %bf.clear721, 75
  br i1 %cmp722, label %if.then.769, label %lor.lhs.false.724

lor.lhs.false.724:                                ; preds = %lor.lhs.false.719
  %378 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %379 = bitcast %struct.rtx_def* %378 to i32*
  %bf.load725 = load i32, i32* %379, align 8
  %bf.clear726 = and i32 %bf.load725, 65535
  %cmp727 = icmp eq i32 %bf.clear726, 66
  br i1 %cmp727, label %land.lhs.true.740, label %lor.lhs.false.729

lor.lhs.false.729:                                ; preds = %lor.lhs.false.724
  %380 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %381 = bitcast %struct.rtx_def* %380 to i32*
  %bf.load730 = load i32, i32* %381, align 8
  %bf.clear731 = and i32 %bf.load730, 65535
  %cmp732 = icmp eq i32 %bf.clear731, 61
  br i1 %cmp732, label %land.lhs.true.734, label %if.end.770

land.lhs.true.734:                                ; preds = %lor.lhs.false.729
  %382 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1
  %arrayidx736 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld735, i32 0, i64 0
  %rtuint737 = bitcast %union.rtunion_def* %arrayidx736 to i32*
  %383 = load i32, i32* %rtuint737, align 4
  %cmp738 = icmp uge i32 %383, 53
  br i1 %cmp738, label %land.lhs.true.740, label %if.end.770

land.lhs.true.740:                                ; preds = %land.lhs.true.734, %lor.lhs.false.724
  %384 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %385 = bitcast %struct.rtx_def* %384 to i32*
  %bf.load741 = load i32, i32* %385, align 8
  %bf.lshr742 = lshr i32 %bf.load741, 16
  %bf.clear743 = and i32 %bf.lshr742, 255
  %idxprom744 = sext i32 %bf.clear743 to i64
  %arrayidx745 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom744
  %386 = load i16, i16* %arrayidx745, align 2
  %conv746 = zext i16 %386 to i32
  %cmp747 = icmp slt i32 %conv746, 128
  br i1 %cmp747, label %land.lhs.true.749, label %lor.lhs.false.763

land.lhs.true.749:                                ; preds = %land.lhs.true.740
  %387 = load i32, i32* %i, align 4
  %idxprom750 = sext i32 %387 to i64
  %arrayidx751 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom750
  %388 = load i32, i32* %arrayidx751, align 4
  %idxprom752 = sext i32 %388 to i64
  %arrayidx753 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom752
  %389 = load i8, i8* %arrayidx753, align 1
  %conv754 = zext i8 %389 to i32
  %390 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %391 = bitcast %struct.rtx_def* %390 to i32*
  %bf.load755 = load i32, i32* %391, align 8
  %bf.lshr756 = lshr i32 %bf.load755, 16
  %bf.clear757 = and i32 %bf.lshr756, 255
  %idxprom758 = sext i32 %bf.clear757 to i64
  %arrayidx759 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom758
  %392 = load i8, i8* %arrayidx759, align 1
  %conv760 = zext i8 %392 to i32
  %cmp761 = icmp sgt i32 %conv754, %conv760
  br i1 %cmp761, label %if.then.769, label %lor.lhs.false.763

lor.lhs.false.763:                                ; preds = %land.lhs.true.749, %land.lhs.true.740
  %393 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %394 = bitcast %struct.rtx_def* %393 to i32*
  %bf.load764 = load i32, i32* %394, align 8
  %bf.clear765 = and i32 %bf.load764, 65535
  %cmp766 = icmp eq i32 %bf.clear765, 66
  br i1 %cmp766, label %land.lhs.true.768, label %if.end.770

land.lhs.true.768:                                ; preds = %lor.lhs.false.763
  br i1 false, label %if.then.769, label %if.end.770

if.then.769:                                      ; preds = %land.lhs.true.768, %land.lhs.true.749, %lor.lhs.false.719, %lor.lhs.false.714, %lor.lhs.false.709, %lor.lhs.false.704, %lor.lhs.false.699, %lor.lhs.false.694, %lor.lhs.false.689, %lor.lhs.false.684, %if.end.676
  store i32 1, i32* %force_reload, align 4
  br label %if.end.770

if.end.770:                                       ; preds = %if.then.769, %land.lhs.true.768, %lor.lhs.false.763, %land.lhs.true.734, %lor.lhs.false.729
  br label %while.cond.633

while.end.771:                                    ; preds = %while.cond.633
  %395 = load i32, i32* %i, align 4
  %idxprom772 = sext i32 %395 to i64
  %arrayidx773 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom772
  store i32 0, i32* %arrayidx773, align 4
  %396 = load i32, i32* %i, align 4
  %idxprom774 = sext i32 %396 to i64
  %arrayidx775 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom774
  store i8 0, i8* %arrayidx775, align 1
  %397 = load i32, i32* %i, align 4
  %idxprom776 = sext i32 %397 to i64
  %arrayidx777 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom776
  store i8 0, i8* %arrayidx777, align 1
  %398 = load i32, i32* %i, align 4
  %idxprom778 = sext i32 %398 to i64
  %arrayidx779 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_offmemok, i32 0, i64 %idxprom778
  store i8 0, i8* %arrayidx779, align 1
  %399 = load i32, i32* %i, align 4
  %idxprom780 = sext i32 %399 to i64
  %arrayidx781 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom780
  store i8 0, i8* %arrayidx781, align 1
  %400 = load i32, i32* %i, align 4
  %idxprom782 = sext i32 %400 to i64
  %arrayidx783 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom782
  store i32 -1, i32* %arrayidx783, align 4
  %401 = load i8*, i8** %p611, align 8
  %402 = load i8, i8* %401, align 1
  %conv784 = sext i8 %402 to i32
  %cmp785 = icmp eq i32 %conv784, 0
  br i1 %cmp785, label %if.then.791, label %lor.lhs.false.787

lor.lhs.false.787:                                ; preds = %while.end.771
  %403 = load i8*, i8** %p611, align 8
  %404 = load i8, i8* %403, align 1
  %conv788 = sext i8 %404 to i32
  %cmp789 = icmp eq i32 %conv788, 44
  br i1 %cmp789, label %if.then.791, label %if.end.792

if.then.791:                                      ; preds = %lor.lhs.false.787, %while.end.771
  store i32 1, i32* %win, align 4
  store i32 0, i32* %badop, align 4
  br label %if.end.792

if.end.792:                                       ; preds = %if.then.791, %lor.lhs.false.787
  br label %while.cond.793

while.cond.793:                                   ; preds = %sw.epilog, %if.end.792
  %405 = load i8*, i8** %p611, align 8
  %406 = load i8, i8* %405, align 1
  %conv794 = sext i8 %406 to i32
  %tobool795 = icmp ne i32 %conv794, 0
  br i1 %tobool795, label %land.rhs.796, label %land.end.801

land.rhs.796:                                     ; preds = %while.cond.793
  %407 = load i8*, i8** %p611, align 8
  %incdec.ptr797 = getelementptr inbounds i8, i8* %407, i32 1
  store i8* %incdec.ptr797, i8** %p611, align 8
  %408 = load i8, i8* %407, align 1
  %conv798 = sext i8 %408 to i32
  store i32 %conv798, i32* %c614, align 4
  %cmp799 = icmp ne i32 %conv798, 44
  br label %land.end.801

land.end.801:                                     ; preds = %land.rhs.796, %while.cond.793
  %409 = phi i1 [ false, %while.cond.793 ], [ %cmp799, %land.rhs.796 ]
  br i1 %409, label %while.body.803, label %while.end.1915

while.body.803:                                   ; preds = %land.end.801
  %410 = load i32, i32* %c614, align 4
  switch i32 %410, label %sw.default [
    i32 61, label %sw.bb
    i32 43, label %sw.bb
    i32 42, label %sw.bb
    i32 37, label %sw.bb.804
    i32 63, label %sw.bb.810
    i32 33, label %sw.bb.812
    i32 35, label %sw.bb.813
    i32 48, label %sw.bb.826
    i32 49, label %sw.bb.826
    i32 50, label %sw.bb.826
    i32 51, label %sw.bb.826
    i32 52, label %sw.bb.826
    i32 53, label %sw.bb.826
    i32 54, label %sw.bb.826
    i32 55, label %sw.bb.826
    i32 56, label %sw.bb.826
    i32 57, label %sw.bb.826
    i32 112, label %sw.bb.968
    i32 109, label %sw.bb.971
    i32 60, label %sw.bb.1047
    i32 62, label %sw.bb.1074
    i32 86, label %sw.bb.1101
    i32 111, label %sw.bb.1141
    i32 38, label %sw.bb.1258
    i32 69, label %sw.bb.1259
    i32 70, label %sw.bb.1266
    i32 71, label %sw.bb.1273
    i32 72, label %sw.bb.1273
    i32 115, label %sw.bb.1293
    i32 105, label %sw.bb.1311
    i32 110, label %sw.bb.1376
    i32 73, label %sw.bb.1394
    i32 74, label %sw.bb.1394
    i32 75, label %sw.bb.1394
    i32 76, label %sw.bb.1394
    i32 77, label %sw.bb.1394
    i32 78, label %sw.bb.1394
    i32 79, label %sw.bb.1394
    i32 80, label %sw.bb.1394
    i32 88, label %sw.bb.1491
    i32 103, label %sw.bb.1492
    i32 114, label %sw.bb.1589
  ]

sw.bb:                                            ; preds = %while.body.803, %while.body.803, %while.body.803
  br label %sw.epilog

sw.bb.804:                                        ; preds = %while.body.803
  %411 = load i32, i32* %i, align 4
  %412 = load i32, i32* %noperands, align 4
  %sub805 = sub nsw i32 %412, 1
  %cmp806 = icmp ne i32 %411, %sub805
  br i1 %cmp806, label %if.then.808, label %if.end.809

if.then.808:                                      ; preds = %sw.bb.804
  %413 = load i32, i32* %i, align 4
  store i32 %413, i32* %commutative, align 4
  br label %if.end.809

if.end.809:                                       ; preds = %if.then.808, %sw.bb.804
  br label %sw.epilog

sw.bb.810:                                        ; preds = %while.body.803
  %414 = load i32, i32* %reject, align 4
  %add811 = add nsw i32 %414, 6
  store i32 %add811, i32* %reject, align 4
  br label %sw.epilog

sw.bb.812:                                        ; preds = %while.body.803
  store i32 600, i32* %reject, align 4
  br label %sw.epilog

sw.bb.813:                                        ; preds = %while.body.803
  br label %while.cond.814

while.cond.814:                                   ; preds = %while.body.823, %sw.bb.813
  %415 = load i8*, i8** %p611, align 8
  %416 = load i8, i8* %415, align 1
  %conv815 = sext i8 %416 to i32
  %tobool816 = icmp ne i32 %conv815, 0
  br i1 %tobool816, label %land.rhs.817, label %land.end.821

land.rhs.817:                                     ; preds = %while.cond.814
  %417 = load i8*, i8** %p611, align 8
  %418 = load i8, i8* %417, align 1
  %conv818 = sext i8 %418 to i32
  %cmp819 = icmp ne i32 %conv818, 44
  br label %land.end.821

land.end.821:                                     ; preds = %land.rhs.817, %while.cond.814
  %419 = phi i1 [ false, %while.cond.814 ], [ %cmp819, %land.rhs.817 ]
  br i1 %419, label %while.body.823, label %while.end.825

while.body.823:                                   ; preds = %land.end.821
  %420 = load i8*, i8** %p611, align 8
  %incdec.ptr824 = getelementptr inbounds i8, i8* %420, i32 1
  store i8* %incdec.ptr824, i8** %p611, align 8
  br label %while.cond.814

while.end.825:                                    ; preds = %land.end.821
  br label %sw.epilog

sw.bb.826:                                        ; preds = %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803
  %421 = load i8*, i8** %p611, align 8
  %add.ptr827 = getelementptr inbounds i8, i8* %421, i64 -1
  %call828 = call i64 @strtoul(i8* %add.ptr827, i8** %p611, i32 10) #2
  %conv829 = trunc i64 %call828 to i32
  store i32 %conv829, i32* %c614, align 4
  %422 = load i32, i32* %c614, align 4
  %423 = load i32, i32* %i, align 4
  %idxprom830 = sext i32 %423 to i64
  %arrayidx831 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom830
  store i32 %422, i32* %arrayidx831, align 4
  %424 = load i32, i32* %swapped, align 4
  %tobool832 = icmp ne i32 %424, 0
  br i1 %tobool832, label %land.lhs.true.833, label %cond.false.873

land.lhs.true.833:                                ; preds = %sw.bb.826
  %425 = load i32, i32* %c614, align 4
  %426 = load i32, i32* %commutative, align 4
  %cmp834 = icmp ne i32 %425, %426
  br i1 %cmp834, label %cond.true.840, label %lor.lhs.false.836

lor.lhs.false.836:                                ; preds = %land.lhs.true.833
  %427 = load i32, i32* %i, align 4
  %428 = load i32, i32* %commutative, align 4
  %add837 = add nsw i32 %428, 1
  %cmp838 = icmp ne i32 %427, %add837
  br i1 %cmp838, label %cond.true.840, label %cond.false.873

cond.true.840:                                    ; preds = %lor.lhs.false.836, %land.lhs.true.833
  %429 = load i32, i32* %i, align 4
  %430 = load i32, i32* %commutative, align 4
  %cmp841 = icmp eq i32 %429, %430
  br i1 %cmp841, label %cond.true.847, label %lor.lhs.false.843

lor.lhs.false.843:                                ; preds = %cond.true.840
  %431 = load i32, i32* %i, align 4
  %432 = load i32, i32* %commutative, align 4
  %add844 = add nsw i32 %432, 1
  %cmp845 = icmp eq i32 %431, %add844
  br i1 %cmp845, label %cond.true.847, label %cond.false.851

cond.true.847:                                    ; preds = %lor.lhs.false.843, %cond.true.840
  %433 = load i32, i32* %commutative, align 4
  %mul848 = mul nsw i32 2, %433
  %add849 = add nsw i32 %mul848, 1
  %434 = load i32, i32* %i, align 4
  %sub850 = sub nsw i32 %add849, %434
  br label %cond.end.852

cond.false.851:                                   ; preds = %lor.lhs.false.843
  %435 = load i32, i32* %i, align 4
  br label %cond.end.852

cond.end.852:                                     ; preds = %cond.false.851, %cond.true.847
  %cond853 = phi i32 [ %sub850, %cond.true.847 ], [ %435, %cond.false.851 ]
  %idxprom854 = sext i32 %cond853 to i64
  %436 = load i32, i32* %c614, align 4
  %437 = load i32, i32* %commutative, align 4
  %cmp855 = icmp eq i32 %436, %437
  br i1 %cmp855, label %cond.true.861, label %lor.lhs.false.857

lor.lhs.false.857:                                ; preds = %cond.end.852
  %438 = load i32, i32* %c614, align 4
  %439 = load i32, i32* %commutative, align 4
  %add858 = add nsw i32 %439, 1
  %cmp859 = icmp eq i32 %438, %add858
  br i1 %cmp859, label %cond.true.861, label %cond.false.865

cond.true.861:                                    ; preds = %lor.lhs.false.857, %cond.end.852
  %440 = load i32, i32* %commutative, align 4
  %mul862 = mul nsw i32 2, %440
  %add863 = add nsw i32 %mul862, 1
  %441 = load i32, i32* %c614, align 4
  %sub864 = sub nsw i32 %add863, %441
  br label %cond.end.866

cond.false.865:                                   ; preds = %lor.lhs.false.857
  %442 = load i32, i32* %c614, align 4
  br label %cond.end.866

cond.end.866:                                     ; preds = %cond.false.865, %cond.true.861
  %cond867 = phi i32 [ %sub864, %cond.true.861 ], [ %442, %cond.false.865 ]
  %idxprom868 = sext i32 %cond867 to i64
  %arrayidx869 = getelementptr inbounds [30 x [30 x i8]], [30 x [30 x i8]]* %operands_match, i32 0, i64 %idxprom868
  %arrayidx870 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx869, i32 0, i64 %idxprom854
  %443 = load i8, i8* %arrayidx870, align 1
  %conv871 = sext i8 %443 to i32
  %tobool872 = icmp ne i32 %conv871, 0
  br i1 %tobool872, label %if.then.880, label %if.else.906

cond.false.873:                                   ; preds = %lor.lhs.false.836, %sw.bb.826
  %444 = load i32, i32* %i, align 4
  %idxprom874 = sext i32 %444 to i64
  %445 = load i32, i32* %c614, align 4
  %idxprom875 = sext i32 %445 to i64
  %arrayidx876 = getelementptr inbounds [30 x [30 x i8]], [30 x [30 x i8]]* %operands_match, i32 0, i64 %idxprom875
  %arrayidx877 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx876, i32 0, i64 %idxprom874
  %446 = load i8, i8* %arrayidx877, align 1
  %conv878 = sext i8 %446 to i32
  %tobool879 = icmp ne i32 %conv878, 0
  br i1 %tobool879, label %if.then.880, label %if.else.906

if.then.880:                                      ; preds = %cond.false.873, %cond.end.866
  %447 = load i32, i32* %c614, align 4
  %idxprom881 = sext i32 %447 to i64
  %arrayidx882 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_offmemok, i32 0, i64 %idxprom881
  %448 = load i8, i8* %arrayidx882, align 1
  %conv883 = sext i8 %448 to i32
  %tobool884 = icmp ne i32 %conv883, 0
  br i1 %tobool884, label %land.lhs.true.885, label %if.end.902

land.lhs.true.885:                                ; preds = %if.then.880
  %449 = load i32, i32* %c614, align 4
  %idxprom886 = sext i32 %449 to i64
  %arrayidx887 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom886
  %450 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx887, align 8
  %451 = bitcast %struct.rtx_def* %450 to i32*
  %bf.load888 = load i32, i32* %451, align 8
  %bf.clear889 = and i32 %bf.load888, 65535
  %cmp890 = icmp eq i32 %bf.clear889, 66
  br i1 %cmp890, label %land.lhs.true.892, label %if.end.902

land.lhs.true.892:                                ; preds = %land.lhs.true.885
  %452 = load i32, i32* %c614, align 4
  %idxprom893 = sext i32 %452 to i64
  %arrayidx894 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom893
  %453 = load i32, i32* %arrayidx894, align 4
  %cmp895 = icmp eq i32 %453, 0
  br i1 %cmp895, label %land.lhs.true.897, label %if.end.902

land.lhs.true.897:                                ; preds = %land.lhs.true.892
  %454 = load i32, i32* %c614, align 4
  %idxprom898 = sext i32 %454 to i64
  %arrayidx899 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom898
  %455 = load i8, i8* %arrayidx899, align 1
  %tobool900 = icmp ne i8 %455, 0
  br i1 %tobool900, label %if.end.902, label %if.then.901

if.then.901:                                      ; preds = %land.lhs.true.897
  store i32 1, i32* %bad, align 4
  br label %if.end.902

if.end.902:                                       ; preds = %if.then.901, %land.lhs.true.897, %land.lhs.true.892, %land.lhs.true.885, %if.then.880
  %456 = load i32, i32* %c614, align 4
  %idxprom903 = sext i32 %456 to i64
  %arrayidx904 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom903
  %457 = load i8, i8* %arrayidx904, align 1
  %conv905 = sext i8 %457 to i32
  store i32 %conv905, i32* %did_match, align 4
  br label %if.end.943

if.else.906:                                      ; preds = %cond.false.873, %cond.end.866
  %458 = load i32, i32* %c614, align 4
  %idxprom907 = sext i32 %458 to i64
  %arrayidx908 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom907
  %459 = load i8, i8* %arrayidx908, align 1
  %tobool909 = icmp ne i8 %459, 0
  br i1 %tobool909, label %if.then.910, label %if.end.912

if.then.910:                                      ; preds = %if.else.906
  %460 = load i32, i32* %losers, align 4
  %inc911 = add nsw i32 %460, 1
  store i32 %inc911, i32* %losers, align 4
  br label %if.end.912

if.end.912:                                       ; preds = %if.then.910, %if.else.906
  %461 = load i32, i32* %c614, align 4
  %idxprom913 = sext i32 %461 to i64
  %arrayidx914 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom913
  store i8 0, i8* %arrayidx914, align 1
  %462 = load i32, i32* %c614, align 4
  %idxprom915 = sext i32 %462 to i64
  %arrayidx916 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom915
  %463 = load i32, i32* %arrayidx916, align 4
  %cmp917 = icmp eq i32 %463, 0
  br i1 %cmp917, label %if.then.919, label %if.end.920

if.then.919:                                      ; preds = %if.end.912
  store i32 1, i32* %bad, align 4
  br label %if.end.920

if.end.920:                                       ; preds = %if.then.919, %if.end.912
  %464 = load i32, i32* %i, align 4
  %idxprom921 = sext i32 %464 to i64
  %arrayidx922 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom921
  %465 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx922, align 8
  %466 = load i32, i32* %c614, align 4
  %idxprom923 = sext i32 %466 to i64
  %arrayidx924 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom923
  %467 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx924, align 8
  %468 = load i32, i32* %i, align 4
  %idxprom925 = sext i32 %468 to i64
  %arrayidx926 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom925
  %469 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx926, align 8
  %470 = load i32, i32* %c614, align 4
  %idxprom927 = sext i32 %470 to i64
  %arrayidx928 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom927
  %471 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx928, align 8
  %472 = load i32, i32* %i, align 4
  %idxprom929 = sext i32 %472 to i64
  %arrayidx930 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom929
  %473 = load i32, i32* %arrayidx930, align 4
  %474 = load i32, i32* %c614, align 4
  %idxprom931 = sext i32 %474 to i64
  %arrayidx932 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom931
  %475 = load i32, i32* %arrayidx932, align 4
  %476 = load i32, i32* %c614, align 4
  %idxprom933 = sext i32 %476 to i64
  %arrayidx934 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom933
  %477 = load i32, i32* %arrayidx934, align 4
  %478 = load i32, i32* %c614, align 4
  %idxprom935 = sext i32 %478 to i64
  %arrayidx936 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom935
  %479 = load i8, i8* %arrayidx936, align 1
  %conv937 = sext i8 %479 to i32
  %call938 = call %struct.rtx_def* @find_dummy_reload(%struct.rtx_def* %465, %struct.rtx_def* %467, %struct.rtx_def** %469, %struct.rtx_def** %471, i32 %473, i32 %475, i32 %477, i32 -1, i32 %conv937)
  store %struct.rtx_def* %call938, %struct.rtx_def** %value, align 8
  %480 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8
  %cmp939 = icmp ne %struct.rtx_def* %480, null
  br i1 %cmp939, label %if.then.941, label %if.end.942

if.then.941:                                      ; preds = %if.end.920
  %481 = load i32, i32* %losers, align 4
  %dec = add nsw i32 %481, -1
  store i32 %dec, i32* %losers, align 4
  br label %if.end.942

if.end.942:                                       ; preds = %if.then.941, %if.end.920
  br label %if.end.943

if.end.943:                                       ; preds = %if.end.942, %if.end.902
  store i32 0, i32* %badop, align 4
  %482 = load i32, i32* %c614, align 4
  %idxprom944 = sext i32 %482 to i64
  %arrayidx945 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom944
  %483 = load i32, i32* %arrayidx945, align 4
  %484 = load i32, i32* %i, align 4
  %idxprom946 = sext i32 %484 to i64
  %arrayidx947 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom946
  store i32 %483, i32* %arrayidx947, align 4
  %485 = load i32, i32* %did_match, align 4
  %tobool948 = icmp ne i32 %485, 0
  br i1 %tobool948, label %lor.lhs.false.949, label %if.then.951

lor.lhs.false.949:                                ; preds = %if.end.943
  %486 = load i32, i32* %force_reload, align 4
  %tobool950 = icmp ne i32 %486, 0
  br i1 %tobool950, label %if.then.951, label %if.end.967

if.then.951:                                      ; preds = %lor.lhs.false.949, %if.end.943
  store i32 0, i32* %j, align 4
  br label %for.cond.952

for.cond.952:                                     ; preds = %for.inc.964, %if.then.951
  %487 = load i32, i32* %j, align 4
  %488 = load i32, i32* %i, align 4
  %cmp953 = icmp slt i32 %487, %488
  br i1 %cmp953, label %for.body.955, label %for.end.966

for.body.955:                                     ; preds = %for.cond.952
  %489 = load i32, i32* %j, align 4
  %idxprom956 = sext i32 %489 to i64
  %arrayidx957 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom956
  %490 = load i32, i32* %arrayidx957, align 4
  %491 = load i32, i32* %i, align 4
  %idxprom958 = sext i32 %491 to i64
  %arrayidx959 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom958
  %492 = load i32, i32* %arrayidx959, align 4
  %cmp960 = icmp eq i32 %490, %492
  br i1 %cmp960, label %if.then.962, label %if.end.963

if.then.962:                                      ; preds = %for.body.955
  store i32 1, i32* %badop, align 4
  br label %if.end.963

if.end.963:                                       ; preds = %if.then.962, %for.body.955
  br label %for.inc.964

for.inc.964:                                      ; preds = %if.end.963
  %493 = load i32, i32* %j, align 4
  %inc965 = add nsw i32 %493, 1
  store i32 %inc965, i32* %j, align 4
  br label %for.cond.952

for.end.966:                                      ; preds = %for.cond.952
  br label %if.end.967

if.end.967:                                       ; preds = %for.end.966, %lor.lhs.false.949
  br label %sw.epilog

sw.bb.968:                                        ; preds = %while.body.803
  %494 = load i32, i32* %i, align 4
  %idxprom969 = sext i32 %494 to i64
  %arrayidx970 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom969
  store i32 12, i32* %arrayidx970, align 4
  store i32 1, i32* %win, align 4
  store i32 0, i32* %badop, align 4
  br label %sw.epilog

sw.bb.971:                                        ; preds = %while.body.803
  %495 = load i32, i32* %force_reload, align 4
  %tobool972 = icmp ne i32 %495, 0
  br i1 %tobool972, label %if.then.973, label %if.end.974

if.then.973:                                      ; preds = %sw.bb.971
  br label %sw.epilog

if.end.974:                                       ; preds = %sw.bb.971
  %496 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %497 = bitcast %struct.rtx_def* %496 to i32*
  %bf.load975 = load i32, i32* %497, align 8
  %bf.clear976 = and i32 %bf.load975, 65535
  %cmp977 = icmp eq i32 %bf.clear976, 66
  br i1 %cmp977, label %if.then.999, label %lor.lhs.false.979

lor.lhs.false.979:                                ; preds = %if.end.974
  %498 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %499 = bitcast %struct.rtx_def* %498 to i32*
  %bf.load980 = load i32, i32* %499, align 8
  %bf.clear981 = and i32 %bf.load980, 65535
  %cmp982 = icmp eq i32 %bf.clear981, 61
  br i1 %cmp982, label %land.lhs.true.984, label %if.end.1000

land.lhs.true.984:                                ; preds = %lor.lhs.false.979
  %500 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld985 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1
  %arrayidx986 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld985, i32 0, i64 0
  %rtuint987 = bitcast %union.rtunion_def* %arrayidx986 to i32*
  %501 = load i32, i32* %rtuint987, align 4
  %cmp988 = icmp uge i32 %501, 53
  br i1 %cmp988, label %land.lhs.true.990, label %if.end.1000

land.lhs.true.990:                                ; preds = %land.lhs.true.984
  %502 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld991 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1
  %arrayidx992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld991, i32 0, i64 0
  %rtuint993 = bitcast %union.rtunion_def* %arrayidx992 to i32*
  %503 = load i32, i32* %rtuint993, align 4
  %idxprom994 = zext i32 %503 to i64
  %504 = load i16*, i16** @reg_renumber, align 8
  %arrayidx995 = getelementptr inbounds i16, i16* %504, i64 %idxprom994
  %505 = load i16, i16* %arrayidx995, align 2
  %conv996 = sext i16 %505 to i32
  %cmp997 = icmp slt i32 %conv996, 0
  br i1 %cmp997, label %if.then.999, label %if.end.1000

if.then.999:                                      ; preds = %land.lhs.true.990, %if.end.974
  store i32 1, i32* %win, align 4
  br label %if.end.1000

if.end.1000:                                      ; preds = %if.then.999, %land.lhs.true.990, %land.lhs.true.984, %lor.lhs.false.979
  %506 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %507 = bitcast %struct.rtx_def* %506 to i32*
  %bf.load1001 = load i32, i32* %507, align 8
  %bf.clear1002 = and i32 %bf.load1001, 65535
  %cmp1003 = icmp eq i32 %bf.clear1002, 67
  br i1 %cmp1003, label %land.lhs.true.1040, label %lor.lhs.false.1005

lor.lhs.false.1005:                               ; preds = %if.end.1000
  %508 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %509 = bitcast %struct.rtx_def* %508 to i32*
  %bf.load1006 = load i32, i32* %509, align 8
  %bf.clear1007 = and i32 %bf.load1006, 65535
  %cmp1008 = icmp eq i32 %bf.clear1007, 68
  br i1 %cmp1008, label %land.lhs.true.1040, label %lor.lhs.false.1010

lor.lhs.false.1010:                               ; preds = %lor.lhs.false.1005
  %510 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %511 = bitcast %struct.rtx_def* %510 to i32*
  %bf.load1011 = load i32, i32* %511, align 8
  %bf.clear1012 = and i32 %bf.load1011, 65535
  %cmp1013 = icmp eq i32 %bf.clear1012, 54
  br i1 %cmp1013, label %land.lhs.true.1040, label %lor.lhs.false.1015

lor.lhs.false.1015:                               ; preds = %lor.lhs.false.1010
  %512 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %513 = bitcast %struct.rtx_def* %512 to i32*
  %bf.load1016 = load i32, i32* %513, align 8
  %bf.clear1017 = and i32 %bf.load1016, 65535
  %cmp1018 = icmp eq i32 %bf.clear1017, 55
  br i1 %cmp1018, label %land.lhs.true.1040, label %lor.lhs.false.1020

lor.lhs.false.1020:                               ; preds = %lor.lhs.false.1015
  %514 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %515 = bitcast %struct.rtx_def* %514 to i32*
  %bf.load1021 = load i32, i32* %515, align 8
  %bf.clear1022 = and i32 %bf.load1021, 65535
  %cmp1023 = icmp eq i32 %bf.clear1022, 58
  br i1 %cmp1023, label %land.lhs.true.1040, label %lor.lhs.false.1025

lor.lhs.false.1025:                               ; preds = %lor.lhs.false.1020
  %516 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %517 = bitcast %struct.rtx_def* %516 to i32*
  %bf.load1026 = load i32, i32* %517, align 8
  %bf.clear1027 = and i32 %bf.load1026, 65535
  %cmp1028 = icmp eq i32 %bf.clear1027, 134
  br i1 %cmp1028, label %land.lhs.true.1040, label %lor.lhs.false.1030

lor.lhs.false.1030:                               ; preds = %lor.lhs.false.1025
  %518 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %519 = bitcast %struct.rtx_def* %518 to i32*
  %bf.load1031 = load i32, i32* %519, align 8
  %bf.clear1032 = and i32 %bf.load1031, 65535
  %cmp1033 = icmp eq i32 %bf.clear1032, 56
  br i1 %cmp1033, label %land.lhs.true.1040, label %lor.lhs.false.1035

lor.lhs.false.1035:                               ; preds = %lor.lhs.false.1030
  %520 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %521 = bitcast %struct.rtx_def* %520 to i32*
  %bf.load1036 = load i32, i32* %521, align 8
  %bf.clear1037 = and i32 %bf.load1036, 65535
  %cmp1038 = icmp eq i32 %bf.clear1037, 140
  br i1 %cmp1038, label %land.lhs.true.1040, label %if.end.1046

land.lhs.true.1040:                               ; preds = %lor.lhs.false.1035, %lor.lhs.false.1030, %lor.lhs.false.1025, %lor.lhs.false.1020, %lor.lhs.false.1015, %lor.lhs.false.1010, %lor.lhs.false.1005, %if.end.1000
  %522 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %523 = bitcast %struct.rtx_def* %522 to i32*
  %bf.load1041 = load i32, i32* %523, align 8
  %bf.clear1042 = and i32 %bf.load1041, 65535
  %cmp1043 = icmp ne i32 %bf.clear1042, 134
  br i1 %cmp1043, label %if.then.1045, label %if.end.1046

if.then.1045:                                     ; preds = %land.lhs.true.1040
  store i32 0, i32* %badop, align 4
  br label %if.end.1046

if.end.1046:                                      ; preds = %if.then.1045, %land.lhs.true.1040, %lor.lhs.false.1035
  store i32 1, i32* %constmemok, align 4
  br label %sw.epilog

sw.bb.1047:                                       ; preds = %while.body.803
  %524 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %525 = bitcast %struct.rtx_def* %524 to i32*
  %bf.load1048 = load i32, i32* %525, align 8
  %bf.clear1049 = and i32 %bf.load1048, 65535
  %cmp1050 = icmp eq i32 %bf.clear1049, 66
  br i1 %cmp1050, label %land.lhs.true.1052, label %if.end.1073

land.lhs.true.1052:                               ; preds = %sw.bb.1047
  %526 = load i32, i32* %i, align 4
  %idxprom1053 = sext i32 %526 to i64
  %arrayidx1054 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom1053
  %527 = load i32, i32* %arrayidx1054, align 4
  %tobool1055 = icmp ne i32 %527, 0
  br i1 %tobool1055, label %if.end.1073, label %land.lhs.true.1056

land.lhs.true.1056:                               ; preds = %land.lhs.true.1052
  %528 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1057 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %528, i32 0, i32 1
  %arrayidx1058 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1057, i32 0, i64 0
  %rtx1059 = bitcast %union.rtunion_def* %arrayidx1058 to %struct.rtx_def**
  %529 = load %struct.rtx_def*, %struct.rtx_def** %rtx1059, align 8
  %530 = bitcast %struct.rtx_def* %529 to i32*
  %bf.load1060 = load i32, i32* %530, align 8
  %bf.clear1061 = and i32 %bf.load1060, 65535
  %cmp1062 = icmp eq i32 %bf.clear1061, 96
  br i1 %cmp1062, label %if.then.1072, label %lor.lhs.false.1064

lor.lhs.false.1064:                               ; preds = %land.lhs.true.1056
  %531 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1065 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1
  %arrayidx1066 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1065, i32 0, i64 0
  %rtx1067 = bitcast %union.rtunion_def* %arrayidx1066 to %struct.rtx_def**
  %532 = load %struct.rtx_def*, %struct.rtx_def** %rtx1067, align 8
  %533 = bitcast %struct.rtx_def* %532 to i32*
  %bf.load1068 = load i32, i32* %533, align 8
  %bf.clear1069 = and i32 %bf.load1068, 65535
  %cmp1070 = icmp eq i32 %bf.clear1069, 98
  br i1 %cmp1070, label %if.then.1072, label %if.end.1073

if.then.1072:                                     ; preds = %lor.lhs.false.1064, %land.lhs.true.1056
  store i32 1, i32* %win, align 4
  br label %if.end.1073

if.end.1073:                                      ; preds = %if.then.1072, %lor.lhs.false.1064, %land.lhs.true.1052, %sw.bb.1047
  br label %sw.epilog

sw.bb.1074:                                       ; preds = %while.body.803
  %534 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %535 = bitcast %struct.rtx_def* %534 to i32*
  %bf.load1075 = load i32, i32* %535, align 8
  %bf.clear1076 = and i32 %bf.load1075, 65535
  %cmp1077 = icmp eq i32 %bf.clear1076, 66
  br i1 %cmp1077, label %land.lhs.true.1079, label %if.end.1100

land.lhs.true.1079:                               ; preds = %sw.bb.1074
  %536 = load i32, i32* %i, align 4
  %idxprom1080 = sext i32 %536 to i64
  %arrayidx1081 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom1080
  %537 = load i32, i32* %arrayidx1081, align 4
  %tobool1082 = icmp ne i32 %537, 0
  br i1 %tobool1082, label %if.end.1100, label %land.lhs.true.1083

land.lhs.true.1083:                               ; preds = %land.lhs.true.1079
  %538 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1084 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %538, i32 0, i32 1
  %arrayidx1085 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1084, i32 0, i64 0
  %rtx1086 = bitcast %union.rtunion_def* %arrayidx1085 to %struct.rtx_def**
  %539 = load %struct.rtx_def*, %struct.rtx_def** %rtx1086, align 8
  %540 = bitcast %struct.rtx_def* %539 to i32*
  %bf.load1087 = load i32, i32* %540, align 8
  %bf.clear1088 = and i32 %bf.load1087, 65535
  %cmp1089 = icmp eq i32 %bf.clear1088, 97
  br i1 %cmp1089, label %if.then.1099, label %lor.lhs.false.1091

lor.lhs.false.1091:                               ; preds = %land.lhs.true.1083
  %541 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1092 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1
  %arrayidx1093 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1092, i32 0, i64 0
  %rtx1094 = bitcast %union.rtunion_def* %arrayidx1093 to %struct.rtx_def**
  %542 = load %struct.rtx_def*, %struct.rtx_def** %rtx1094, align 8
  %543 = bitcast %struct.rtx_def* %542 to i32*
  %bf.load1095 = load i32, i32* %543, align 8
  %bf.clear1096 = and i32 %bf.load1095, 65535
  %cmp1097 = icmp eq i32 %bf.clear1096, 99
  br i1 %cmp1097, label %if.then.1099, label %if.end.1100

if.then.1099:                                     ; preds = %lor.lhs.false.1091, %land.lhs.true.1083
  store i32 1, i32* %win, align 4
  br label %if.end.1100

if.end.1100:                                      ; preds = %if.then.1099, %lor.lhs.false.1091, %land.lhs.true.1079, %sw.bb.1074
  br label %sw.epilog

sw.bb.1101:                                       ; preds = %while.body.803
  %544 = load i32, i32* %force_reload, align 4
  %tobool1102 = icmp ne i32 %544, 0
  br i1 %tobool1102, label %if.then.1103, label %if.end.1104

if.then.1103:                                     ; preds = %sw.bb.1101
  br label %sw.epilog

if.end.1104:                                      ; preds = %sw.bb.1101
  %545 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %546 = bitcast %struct.rtx_def* %545 to i32*
  %bf.load1105 = load i32, i32* %546, align 8
  %bf.clear1106 = and i32 %bf.load1105, 65535
  %cmp1107 = icmp eq i32 %bf.clear1106, 66
  br i1 %cmp1107, label %land.lhs.true.1109, label %if.end.1140

land.lhs.true.1109:                               ; preds = %if.end.1104
  %547 = load i32, i32* %ind_levels.addr, align 4
  %tobool1110 = icmp ne i32 %547, 0
  br i1 %tobool1110, label %cond.true.1111, label %cond.false.1114

cond.true.1111:                                   ; preds = %land.lhs.true.1109
  %548 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1112 = call i32 @offsettable_memref_p(%struct.rtx_def* %548)
  %tobool1113 = icmp ne i32 %call1112, 0
  br i1 %tobool1113, label %if.end.1140, label %land.lhs.true.1117

cond.false.1114:                                  ; preds = %land.lhs.true.1109
  %549 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1115 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %549)
  %tobool1116 = icmp ne i32 %call1115, 0
  br i1 %tobool1116, label %if.end.1140, label %land.lhs.true.1117

land.lhs.true.1117:                               ; preds = %cond.false.1114, %cond.true.1111
  %550 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %550, i32 0, i32 1
  %arrayidx1119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1118, i32 0, i64 0
  %rtx1120 = bitcast %union.rtunion_def* %arrayidx1119 to %struct.rtx_def**
  %551 = load %struct.rtx_def*, %struct.rtx_def** %rtx1120, align 8
  %552 = bitcast %struct.rtx_def* %551 to i32*
  %bf.load1121 = load i32, i32* %552, align 8
  %bf.clear1122 = and i32 %bf.load1121, 65535
  %cmp1123 = icmp eq i32 %bf.clear1122, 61
  br i1 %cmp1123, label %land.lhs.true.1125, label %if.then.1139

land.lhs.true.1125:                               ; preds = %land.lhs.true.1117
  %553 = load i32, i32* %ind_levels.addr, align 4
  %cmp1126 = icmp eq i32 %553, 0
  br i1 %cmp1126, label %if.end.1140, label %lor.lhs.false.1128

lor.lhs.false.1128:                               ; preds = %land.lhs.true.1125
  %554 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %554, i32 0, i32 1
  %arrayidx1130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1129, i32 0, i64 0
  %rtx1131 = bitcast %union.rtunion_def* %arrayidx1130 to %struct.rtx_def**
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rtx1131, align 8
  %fld1132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %555, i32 0, i32 1
  %arrayidx1133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1132, i32 0, i64 0
  %rtuint1134 = bitcast %union.rtunion_def* %arrayidx1133 to i32*
  %556 = load i32, i32* %rtuint1134, align 4
  %idxprom1135 = zext i32 %556 to i64
  %557 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx1136 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %557, i64 %idxprom1135
  %558 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1136, align 8
  %cmp1137 = icmp ne %struct.rtx_def* %558, null
  br i1 %cmp1137, label %if.end.1140, label %if.then.1139

if.then.1139:                                     ; preds = %lor.lhs.false.1128, %land.lhs.true.1117
  store i32 1, i32* %win, align 4
  br label %if.end.1140

if.end.1140:                                      ; preds = %if.then.1139, %lor.lhs.false.1128, %land.lhs.true.1125, %cond.false.1114, %cond.true.1111, %if.end.1104
  br label %sw.epilog

sw.bb.1141:                                       ; preds = %while.body.803
  %559 = load i32, i32* %force_reload, align 4
  %tobool1142 = icmp ne i32 %559, 0
  br i1 %tobool1142, label %if.then.1143, label %if.end.1144

if.then.1143:                                     ; preds = %sw.bb.1141
  br label %sw.epilog

if.end.1144:                                      ; preds = %sw.bb.1141
  %560 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %561 = bitcast %struct.rtx_def* %560 to i32*
  %bf.load1145 = load i32, i32* %561, align 8
  %bf.clear1146 = and i32 %bf.load1145, 65535
  %cmp1147 = icmp eq i32 %bf.clear1146, 66
  br i1 %cmp1147, label %land.lhs.true.1149, label %lor.lhs.false.1161

land.lhs.true.1149:                               ; preds = %if.end.1144
  %562 = load i32, i32* %ind_levels.addr, align 4
  %tobool1150 = icmp ne i32 %562, 0
  br i1 %tobool1150, label %cond.true.1151, label %cond.false.1154

cond.true.1151:                                   ; preds = %land.lhs.true.1149
  %563 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1152 = call i32 @offsettable_memref_p(%struct.rtx_def* %563)
  %tobool1153 = icmp ne i32 %call1152, 0
  br i1 %tobool1153, label %if.then.1205, label %lor.lhs.false.1157

cond.false.1154:                                  ; preds = %land.lhs.true.1149
  %564 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1155 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %564)
  %tobool1156 = icmp ne i32 %call1155, 0
  br i1 %tobool1156, label %if.then.1205, label %lor.lhs.false.1157

lor.lhs.false.1157:                               ; preds = %cond.false.1154, %cond.true.1151
  %565 = load i32, i32* %i, align 4
  %idxprom1158 = sext i32 %565 to i64
  %arrayidx1159 = getelementptr inbounds [30 x i32], [30 x i32]* %address_reloaded, i32 0, i64 %idxprom1158
  %566 = load i32, i32* %arrayidx1159, align 4
  %tobool1160 = icmp ne i32 %566, 0
  br i1 %tobool1160, label %if.then.1205, label %lor.lhs.false.1161

lor.lhs.false.1161:                               ; preds = %lor.lhs.false.1157, %if.end.1144
  %567 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %568 = bitcast %struct.rtx_def* %567 to i32*
  %bf.load1162 = load i32, i32* %568, align 8
  %bf.clear1163 = and i32 %bf.load1162, 65535
  %cmp1164 = icmp eq i32 %bf.clear1163, 61
  br i1 %cmp1164, label %land.lhs.true.1166, label %if.end.1206

land.lhs.true.1166:                               ; preds = %lor.lhs.false.1161
  %569 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %569, i32 0, i32 1
  %arrayidx1168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1167, i32 0, i64 0
  %rtuint1169 = bitcast %union.rtunion_def* %arrayidx1168 to i32*
  %570 = load i32, i32* %rtuint1169, align 4
  %cmp1170 = icmp uge i32 %570, 53
  br i1 %cmp1170, label %land.lhs.true.1172, label %if.end.1206

land.lhs.true.1172:                               ; preds = %land.lhs.true.1166
  %571 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %571, i32 0, i32 1
  %arrayidx1174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1173, i32 0, i64 0
  %rtuint1175 = bitcast %union.rtunion_def* %arrayidx1174 to i32*
  %572 = load i32, i32* %rtuint1175, align 4
  %idxprom1176 = zext i32 %572 to i64
  %573 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1177 = getelementptr inbounds i16, i16* %573, i64 %idxprom1176
  %574 = load i16, i16* %arrayidx1177, align 2
  %conv1178 = sext i16 %574 to i32
  %cmp1179 = icmp slt i32 %conv1178, 0
  br i1 %cmp1179, label %land.lhs.true.1181, label %if.end.1206

land.lhs.true.1181:                               ; preds = %land.lhs.true.1172
  %575 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %575, i32 0, i32 1
  %arrayidx1183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1182, i32 0, i64 0
  %rtuint1184 = bitcast %union.rtunion_def* %arrayidx1183 to i32*
  %576 = load i32, i32* %rtuint1184, align 4
  %idxprom1185 = zext i32 %576 to i64
  %577 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1186 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %577, i64 %idxprom1185
  %578 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1186, align 8
  %cmp1187 = icmp ne %struct.rtx_def* %578, null
  br i1 %cmp1187, label %land.lhs.true.1189, label %lor.lhs.false.1197

land.lhs.true.1189:                               ; preds = %land.lhs.true.1181
  %579 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %579, i32 0, i32 1
  %arrayidx1191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1190, i32 0, i64 0
  %rtuint1192 = bitcast %union.rtunion_def* %arrayidx1191 to i32*
  %580 = load i32, i32* %rtuint1192, align 4
  %idxprom1193 = zext i32 %580 to i64
  %581 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1194 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %581, i64 %idxprom1193
  %582 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1194, align 8
  %call1195 = call i32 @offsettable_memref_p(%struct.rtx_def* %582)
  %tobool1196 = icmp ne i32 %call1195, 0
  br i1 %tobool1196, label %if.then.1205, label %lor.lhs.false.1197

lor.lhs.false.1197:                               ; preds = %land.lhs.true.1189, %land.lhs.true.1181
  %583 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1
  %arrayidx1199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1198, i32 0, i64 0
  %rtuint1200 = bitcast %union.rtunion_def* %arrayidx1199 to i32*
  %584 = load i32, i32* %rtuint1200, align 4
  %idxprom1201 = zext i32 %584 to i64
  %585 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx1202 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %585, i64 %idxprom1201
  %586 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1202, align 8
  %cmp1203 = icmp ne %struct.rtx_def* %586, null
  br i1 %cmp1203, label %if.then.1205, label %if.end.1206

if.then.1205:                                     ; preds = %lor.lhs.false.1197, %land.lhs.true.1189, %lor.lhs.false.1157, %cond.false.1154, %cond.true.1151
  store i32 1, i32* %win, align 4
  br label %if.end.1206

if.end.1206:                                      ; preds = %if.then.1205, %lor.lhs.false.1197, %land.lhs.true.1172, %land.lhs.true.1166, %lor.lhs.false.1161
  %587 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %588 = bitcast %struct.rtx_def* %587 to i32*
  %bf.load1207 = load i32, i32* %588, align 8
  %bf.clear1208 = and i32 %bf.load1207, 65535
  %cmp1209 = icmp eq i32 %bf.clear1208, 67
  br i1 %cmp1209, label %land.lhs.true.1246, label %lor.lhs.false.1211

lor.lhs.false.1211:                               ; preds = %if.end.1206
  %589 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %590 = bitcast %struct.rtx_def* %589 to i32*
  %bf.load1212 = load i32, i32* %590, align 8
  %bf.clear1213 = and i32 %bf.load1212, 65535
  %cmp1214 = icmp eq i32 %bf.clear1213, 68
  br i1 %cmp1214, label %land.lhs.true.1246, label %lor.lhs.false.1216

lor.lhs.false.1216:                               ; preds = %lor.lhs.false.1211
  %591 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %592 = bitcast %struct.rtx_def* %591 to i32*
  %bf.load1217 = load i32, i32* %592, align 8
  %bf.clear1218 = and i32 %bf.load1217, 65535
  %cmp1219 = icmp eq i32 %bf.clear1218, 54
  br i1 %cmp1219, label %land.lhs.true.1246, label %lor.lhs.false.1221

lor.lhs.false.1221:                               ; preds = %lor.lhs.false.1216
  %593 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %594 = bitcast %struct.rtx_def* %593 to i32*
  %bf.load1222 = load i32, i32* %594, align 8
  %bf.clear1223 = and i32 %bf.load1222, 65535
  %cmp1224 = icmp eq i32 %bf.clear1223, 55
  br i1 %cmp1224, label %land.lhs.true.1246, label %lor.lhs.false.1226

lor.lhs.false.1226:                               ; preds = %lor.lhs.false.1221
  %595 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %596 = bitcast %struct.rtx_def* %595 to i32*
  %bf.load1227 = load i32, i32* %596, align 8
  %bf.clear1228 = and i32 %bf.load1227, 65535
  %cmp1229 = icmp eq i32 %bf.clear1228, 58
  br i1 %cmp1229, label %land.lhs.true.1246, label %lor.lhs.false.1231

lor.lhs.false.1231:                               ; preds = %lor.lhs.false.1226
  %597 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %598 = bitcast %struct.rtx_def* %597 to i32*
  %bf.load1232 = load i32, i32* %598, align 8
  %bf.clear1233 = and i32 %bf.load1232, 65535
  %cmp1234 = icmp eq i32 %bf.clear1233, 134
  br i1 %cmp1234, label %land.lhs.true.1246, label %lor.lhs.false.1236

lor.lhs.false.1236:                               ; preds = %lor.lhs.false.1231
  %599 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %600 = bitcast %struct.rtx_def* %599 to i32*
  %bf.load1237 = load i32, i32* %600, align 8
  %bf.clear1238 = and i32 %bf.load1237, 65535
  %cmp1239 = icmp eq i32 %bf.clear1238, 56
  br i1 %cmp1239, label %land.lhs.true.1246, label %lor.lhs.false.1241

lor.lhs.false.1241:                               ; preds = %lor.lhs.false.1236
  %601 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %602 = bitcast %struct.rtx_def* %601 to i32*
  %bf.load1242 = load i32, i32* %602, align 8
  %bf.clear1243 = and i32 %bf.load1242, 65535
  %cmp1244 = icmp eq i32 %bf.clear1243, 140
  br i1 %cmp1244, label %land.lhs.true.1246, label %lor.lhs.false.1251

land.lhs.true.1246:                               ; preds = %lor.lhs.false.1241, %lor.lhs.false.1236, %lor.lhs.false.1231, %lor.lhs.false.1226, %lor.lhs.false.1221, %lor.lhs.false.1216, %lor.lhs.false.1211, %if.end.1206
  %603 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %604 = bitcast %struct.rtx_def* %603 to i32*
  %bf.load1247 = load i32, i32* %604, align 8
  %bf.clear1248 = and i32 %bf.load1247, 65535
  %cmp1249 = icmp ne i32 %bf.clear1248, 134
  br i1 %cmp1249, label %if.then.1256, label %lor.lhs.false.1251

lor.lhs.false.1251:                               ; preds = %land.lhs.true.1246, %lor.lhs.false.1241
  %605 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %606 = bitcast %struct.rtx_def* %605 to i32*
  %bf.load1252 = load i32, i32* %606, align 8
  %bf.clear1253 = and i32 %bf.load1252, 65535
  %cmp1254 = icmp eq i32 %bf.clear1253, 66
  br i1 %cmp1254, label %if.then.1256, label %if.end.1257

if.then.1256:                                     ; preds = %lor.lhs.false.1251, %land.lhs.true.1246
  store i32 0, i32* %badop, align 4
  br label %if.end.1257

if.end.1257:                                      ; preds = %if.then.1256, %lor.lhs.false.1251
  store i32 1, i32* %constmemok, align 4
  store i32 1, i32* %offmemok, align 4
  br label %sw.epilog

sw.bb.1258:                                       ; preds = %while.body.803
  store i32 1, i32* %earlyclobber, align 4
  store i32 1, i32* %this_earlyclobber, align 4
  br label %sw.epilog

sw.bb.1259:                                       ; preds = %while.body.803
  %607 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %608 = bitcast %struct.rtx_def* %607 to i32*
  %bf.load1260 = load i32, i32* %608, align 8
  %bf.clear1261 = and i32 %bf.load1260, 65535
  %cmp1262 = icmp eq i32 %bf.clear1261, 55
  br i1 %cmp1262, label %if.then.1264, label %if.end.1265

if.then.1264:                                     ; preds = %sw.bb.1259
  store i32 1, i32* %win, align 4
  br label %if.end.1265

if.end.1265:                                      ; preds = %if.then.1264, %sw.bb.1259
  br label %sw.epilog

sw.bb.1266:                                       ; preds = %while.body.803
  %609 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %610 = bitcast %struct.rtx_def* %609 to i32*
  %bf.load1267 = load i32, i32* %610, align 8
  %bf.clear1268 = and i32 %bf.load1267, 65535
  %cmp1269 = icmp eq i32 %bf.clear1268, 55
  br i1 %cmp1269, label %if.then.1271, label %if.end.1272

if.then.1271:                                     ; preds = %sw.bb.1266
  store i32 1, i32* %win, align 4
  br label %if.end.1272

if.end.1272:                                      ; preds = %if.then.1271, %sw.bb.1266
  br label %sw.epilog

sw.bb.1273:                                       ; preds = %while.body.803, %while.body.803
  %611 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %612 = bitcast %struct.rtx_def* %611 to i32*
  %bf.load1274 = load i32, i32* %612, align 8
  %bf.clear1275 = and i32 %bf.load1274, 65535
  %cmp1276 = icmp eq i32 %bf.clear1275, 55
  br i1 %cmp1276, label %land.lhs.true.1278, label %if.end.1292

land.lhs.true.1278:                               ; preds = %sw.bb.1273
  %613 = load i32, i32* %c614, align 4
  %cmp1279 = icmp eq i32 %613, 71
  br i1 %cmp1279, label %cond.true.1281, label %cond.false.1284

cond.true.1281:                                   ; preds = %land.lhs.true.1278
  %614 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1282 = call i32 @standard_80387_constant_p(%struct.rtx_def* %614)
  %tobool1283 = icmp ne i32 %call1282, 0
  br i1 %tobool1283, label %if.then.1291, label %if.end.1292

cond.false.1284:                                  ; preds = %land.lhs.true.1278
  %615 = load i32, i32* %c614, align 4
  %cmp1285 = icmp eq i32 %615, 72
  br i1 %cmp1285, label %cond.true.1287, label %cond.false.1290

cond.true.1287:                                   ; preds = %cond.false.1284
  %616 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1288 = call i32 @standard_sse_constant_p(%struct.rtx_def* %616)
  %tobool1289 = icmp ne i32 %call1288, 0
  br i1 %tobool1289, label %if.then.1291, label %if.end.1292

cond.false.1290:                                  ; preds = %cond.false.1284
  br i1 false, label %if.then.1291, label %if.end.1292

if.then.1291:                                     ; preds = %cond.false.1290, %cond.true.1287, %cond.true.1281
  store i32 1, i32* %win, align 4
  br label %if.end.1292

if.end.1292:                                      ; preds = %if.then.1291, %cond.false.1290, %cond.true.1287, %cond.true.1281, %sw.bb.1273
  br label %sw.epilog

sw.bb.1293:                                       ; preds = %while.body.803
  %617 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %618 = bitcast %struct.rtx_def* %617 to i32*
  %bf.load1294 = load i32, i32* %618, align 8
  %bf.clear1295 = and i32 %bf.load1294, 65535
  %cmp1296 = icmp eq i32 %bf.clear1295, 54
  br i1 %cmp1296, label %if.then.1309, label %lor.lhs.false.1298

lor.lhs.false.1298:                               ; preds = %sw.bb.1293
  %619 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %620 = bitcast %struct.rtx_def* %619 to i32*
  %bf.load1299 = load i32, i32* %620, align 8
  %bf.clear1300 = and i32 %bf.load1299, 65535
  %cmp1301 = icmp eq i32 %bf.clear1300, 55
  br i1 %cmp1301, label %land.lhs.true.1303, label %if.end.1310

land.lhs.true.1303:                               ; preds = %lor.lhs.false.1298
  %621 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %622 = bitcast %struct.rtx_def* %621 to i32*
  %bf.load1304 = load i32, i32* %622, align 8
  %bf.lshr1305 = lshr i32 %bf.load1304, 16
  %bf.clear1306 = and i32 %bf.lshr1305, 255
  %cmp1307 = icmp eq i32 %bf.clear1306, 0
  br i1 %cmp1307, label %if.then.1309, label %if.end.1310

if.then.1309:                                     ; preds = %land.lhs.true.1303, %sw.bb.1293
  br label %sw.epilog

if.end.1310:                                      ; preds = %land.lhs.true.1303, %lor.lhs.false.1298
  br label %sw.bb.1311

sw.bb.1311:                                       ; preds = %while.body.803, %if.end.1310
  %623 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %624 = bitcast %struct.rtx_def* %623 to i32*
  %bf.load1312 = load i32, i32* %624, align 8
  %bf.clear1313 = and i32 %bf.load1312, 65535
  %cmp1314 = icmp eq i32 %bf.clear1313, 67
  br i1 %cmp1314, label %land.lhs.true.1351, label %lor.lhs.false.1316

lor.lhs.false.1316:                               ; preds = %sw.bb.1311
  %625 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %626 = bitcast %struct.rtx_def* %625 to i32*
  %bf.load1317 = load i32, i32* %626, align 8
  %bf.clear1318 = and i32 %bf.load1317, 65535
  %cmp1319 = icmp eq i32 %bf.clear1318, 68
  br i1 %cmp1319, label %land.lhs.true.1351, label %lor.lhs.false.1321

lor.lhs.false.1321:                               ; preds = %lor.lhs.false.1316
  %627 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %628 = bitcast %struct.rtx_def* %627 to i32*
  %bf.load1322 = load i32, i32* %628, align 8
  %bf.clear1323 = and i32 %bf.load1322, 65535
  %cmp1324 = icmp eq i32 %bf.clear1323, 54
  br i1 %cmp1324, label %land.lhs.true.1351, label %lor.lhs.false.1326

lor.lhs.false.1326:                               ; preds = %lor.lhs.false.1321
  %629 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %630 = bitcast %struct.rtx_def* %629 to i32*
  %bf.load1327 = load i32, i32* %630, align 8
  %bf.clear1328 = and i32 %bf.load1327, 65535
  %cmp1329 = icmp eq i32 %bf.clear1328, 55
  br i1 %cmp1329, label %land.lhs.true.1351, label %lor.lhs.false.1331

lor.lhs.false.1331:                               ; preds = %lor.lhs.false.1326
  %631 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %632 = bitcast %struct.rtx_def* %631 to i32*
  %bf.load1332 = load i32, i32* %632, align 8
  %bf.clear1333 = and i32 %bf.load1332, 65535
  %cmp1334 = icmp eq i32 %bf.clear1333, 58
  br i1 %cmp1334, label %land.lhs.true.1351, label %lor.lhs.false.1336

lor.lhs.false.1336:                               ; preds = %lor.lhs.false.1331
  %633 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %634 = bitcast %struct.rtx_def* %633 to i32*
  %bf.load1337 = load i32, i32* %634, align 8
  %bf.clear1338 = and i32 %bf.load1337, 65535
  %cmp1339 = icmp eq i32 %bf.clear1338, 134
  br i1 %cmp1339, label %land.lhs.true.1351, label %lor.lhs.false.1341

lor.lhs.false.1341:                               ; preds = %lor.lhs.false.1336
  %635 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %636 = bitcast %struct.rtx_def* %635 to i32*
  %bf.load1342 = load i32, i32* %636, align 8
  %bf.clear1343 = and i32 %bf.load1342, 65535
  %cmp1344 = icmp eq i32 %bf.clear1343, 56
  br i1 %cmp1344, label %land.lhs.true.1351, label %lor.lhs.false.1346

lor.lhs.false.1346:                               ; preds = %lor.lhs.false.1341
  %637 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %638 = bitcast %struct.rtx_def* %637 to i32*
  %bf.load1347 = load i32, i32* %638, align 8
  %bf.clear1348 = and i32 %bf.load1347, 65535
  %cmp1349 = icmp eq i32 %bf.clear1348, 140
  br i1 %cmp1349, label %land.lhs.true.1351, label %if.end.1375

land.lhs.true.1351:                               ; preds = %lor.lhs.false.1346, %lor.lhs.false.1341, %lor.lhs.false.1336, %lor.lhs.false.1331, %lor.lhs.false.1326, %lor.lhs.false.1321, %lor.lhs.false.1316, %sw.bb.1311
  %639 = load i32, i32* @flag_pic, align 4
  %tobool1352 = icmp ne i32 %639, 0
  br i1 %tobool1352, label %lor.lhs.false.1353, label %if.then.1374

lor.lhs.false.1353:                               ; preds = %land.lhs.true.1351
  %640 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %641 = bitcast %struct.rtx_def* %640 to i32*
  %bf.load1354 = load i32, i32* %641, align 8
  %bf.clear1355 = and i32 %bf.load1354, 65535
  %cmp1356 = icmp eq i32 %bf.clear1355, 68
  br i1 %cmp1356, label %lor.lhs.false.1371, label %lor.lhs.false.1358

lor.lhs.false.1358:                               ; preds = %lor.lhs.false.1353
  %642 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %643 = bitcast %struct.rtx_def* %642 to i32*
  %bf.load1359 = load i32, i32* %643, align 8
  %bf.clear1360 = and i32 %bf.load1359, 65535
  %cmp1361 = icmp eq i32 %bf.clear1360, 67
  br i1 %cmp1361, label %lor.lhs.false.1371, label %lor.lhs.false.1363

lor.lhs.false.1363:                               ; preds = %lor.lhs.false.1358
  %644 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %645 = bitcast %struct.rtx_def* %644 to i32*
  %bf.load1364 = load i32, i32* %645, align 8
  %bf.clear1365 = and i32 %bf.load1364, 65535
  %cmp1366 = icmp eq i32 %bf.clear1365, 58
  br i1 %cmp1366, label %land.lhs.true.1368, label %if.then.1374

land.lhs.true.1368:                               ; preds = %lor.lhs.false.1363
  %646 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1369 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %646)
  %tobool1370 = icmp ne i32 %call1369, 0
  br i1 %tobool1370, label %lor.lhs.false.1371, label %if.then.1374

lor.lhs.false.1371:                               ; preds = %land.lhs.true.1368, %lor.lhs.false.1358, %lor.lhs.false.1353
  %647 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1372 = call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %647)
  %tobool1373 = icmp ne i32 %call1372, 0
  br i1 %tobool1373, label %if.then.1374, label %if.end.1375

if.then.1374:                                     ; preds = %lor.lhs.false.1371, %land.lhs.true.1368, %lor.lhs.false.1363, %land.lhs.true.1351
  store i32 1, i32* %win, align 4
  br label %if.end.1375

if.end.1375:                                      ; preds = %if.then.1374, %lor.lhs.false.1371, %lor.lhs.false.1346
  br label %sw.epilog

sw.bb.1376:                                       ; preds = %while.body.803
  %648 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %649 = bitcast %struct.rtx_def* %648 to i32*
  %bf.load1377 = load i32, i32* %649, align 8
  %bf.clear1378 = and i32 %bf.load1377, 65535
  %cmp1379 = icmp eq i32 %bf.clear1378, 54
  br i1 %cmp1379, label %if.then.1392, label %lor.lhs.false.1381

lor.lhs.false.1381:                               ; preds = %sw.bb.1376
  %650 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %651 = bitcast %struct.rtx_def* %650 to i32*
  %bf.load1382 = load i32, i32* %651, align 8
  %bf.clear1383 = and i32 %bf.load1382, 65535
  %cmp1384 = icmp eq i32 %bf.clear1383, 55
  br i1 %cmp1384, label %land.lhs.true.1386, label %if.end.1393

land.lhs.true.1386:                               ; preds = %lor.lhs.false.1381
  %652 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %653 = bitcast %struct.rtx_def* %652 to i32*
  %bf.load1387 = load i32, i32* %653, align 8
  %bf.lshr1388 = lshr i32 %bf.load1387, 16
  %bf.clear1389 = and i32 %bf.lshr1388, 255
  %cmp1390 = icmp eq i32 %bf.clear1389, 0
  br i1 %cmp1390, label %if.then.1392, label %if.end.1393

if.then.1392:                                     ; preds = %land.lhs.true.1386, %sw.bb.1376
  store i32 1, i32* %win, align 4
  br label %if.end.1393

if.end.1393:                                      ; preds = %if.then.1392, %land.lhs.true.1386, %lor.lhs.false.1381
  br label %sw.epilog

sw.bb.1394:                                       ; preds = %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803, %while.body.803
  %654 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %655 = bitcast %struct.rtx_def* %654 to i32*
  %bf.load1395 = load i32, i32* %655, align 8
  %bf.clear1396 = and i32 %bf.load1395, 65535
  %cmp1397 = icmp eq i32 %bf.clear1396, 54
  br i1 %cmp1397, label %land.lhs.true.1399, label %if.end.1490

land.lhs.true.1399:                               ; preds = %sw.bb.1394
  %656 = load i32, i32* %c614, align 4
  %cmp1400 = icmp eq i32 %656, 73
  br i1 %cmp1400, label %cond.true.1402, label %cond.false.1413

cond.true.1402:                                   ; preds = %land.lhs.true.1399
  %657 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %657, i32 0, i32 1
  %arrayidx1404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1403, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx1404 to i64*
  %658 = load i64, i64* %rtwint, align 8
  %cmp1405 = icmp sge i64 %658, 0
  br i1 %cmp1405, label %land.lhs.true.1407, label %if.end.1490

land.lhs.true.1407:                               ; preds = %cond.true.1402
  %659 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %659, i32 0, i32 1
  %arrayidx1409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1408, i32 0, i64 0
  %rtwint1410 = bitcast %union.rtunion_def* %arrayidx1409 to i64*
  %660 = load i64, i64* %rtwint1410, align 8
  %cmp1411 = icmp sle i64 %660, 31
  br i1 %cmp1411, label %if.then.1489, label %if.end.1490

cond.false.1413:                                  ; preds = %land.lhs.true.1399
  %661 = load i32, i32* %c614, align 4
  %cmp1414 = icmp eq i32 %661, 74
  br i1 %cmp1414, label %cond.true.1416, label %cond.false.1428

cond.true.1416:                                   ; preds = %cond.false.1413
  %662 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %662, i32 0, i32 1
  %arrayidx1418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1417, i32 0, i64 0
  %rtwint1419 = bitcast %union.rtunion_def* %arrayidx1418 to i64*
  %663 = load i64, i64* %rtwint1419, align 8
  %cmp1420 = icmp sge i64 %663, 0
  br i1 %cmp1420, label %land.lhs.true.1422, label %if.end.1490

land.lhs.true.1422:                               ; preds = %cond.true.1416
  %664 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1423 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %664, i32 0, i32 1
  %arrayidx1424 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1423, i32 0, i64 0
  %rtwint1425 = bitcast %union.rtunion_def* %arrayidx1424 to i64*
  %665 = load i64, i64* %rtwint1425, align 8
  %cmp1426 = icmp sle i64 %665, 63
  br i1 %cmp1426, label %if.then.1489, label %if.end.1490

cond.false.1428:                                  ; preds = %cond.false.1413
  %666 = load i32, i32* %c614, align 4
  %cmp1429 = icmp eq i32 %666, 75
  br i1 %cmp1429, label %cond.true.1431, label %cond.false.1443

cond.true.1431:                                   ; preds = %cond.false.1428
  %667 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %667, i32 0, i32 1
  %arrayidx1433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1432, i32 0, i64 0
  %rtwint1434 = bitcast %union.rtunion_def* %arrayidx1433 to i64*
  %668 = load i64, i64* %rtwint1434, align 8
  %cmp1435 = icmp sge i64 %668, -128
  br i1 %cmp1435, label %land.lhs.true.1437, label %if.end.1490

land.lhs.true.1437:                               ; preds = %cond.true.1431
  %669 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1438 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %669, i32 0, i32 1
  %arrayidx1439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1438, i32 0, i64 0
  %rtwint1440 = bitcast %union.rtunion_def* %arrayidx1439 to i64*
  %670 = load i64, i64* %rtwint1440, align 8
  %cmp1441 = icmp sle i64 %670, 127
  br i1 %cmp1441, label %if.then.1489, label %if.end.1490

cond.false.1443:                                  ; preds = %cond.false.1428
  %671 = load i32, i32* %c614, align 4
  %cmp1444 = icmp eq i32 %671, 76
  br i1 %cmp1444, label %cond.true.1446, label %cond.false.1458

cond.true.1446:                                   ; preds = %cond.false.1443
  %672 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %672, i32 0, i32 1
  %arrayidx1448 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1447, i32 0, i64 0
  %rtwint1449 = bitcast %union.rtunion_def* %arrayidx1448 to i64*
  %673 = load i64, i64* %rtwint1449, align 8
  %cmp1450 = icmp eq i64 %673, 255
  br i1 %cmp1450, label %if.then.1489, label %lor.lhs.false.1452

lor.lhs.false.1452:                               ; preds = %cond.true.1446
  %674 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1453 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %674, i32 0, i32 1
  %arrayidx1454 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1453, i32 0, i64 0
  %rtwint1455 = bitcast %union.rtunion_def* %arrayidx1454 to i64*
  %675 = load i64, i64* %rtwint1455, align 8
  %cmp1456 = icmp eq i64 %675, 65535
  br i1 %cmp1456, label %if.then.1489, label %if.end.1490

cond.false.1458:                                  ; preds = %cond.false.1443
  %676 = load i32, i32* %c614, align 4
  %cmp1459 = icmp eq i32 %676, 77
  br i1 %cmp1459, label %cond.true.1461, label %cond.false.1473

cond.true.1461:                                   ; preds = %cond.false.1458
  %677 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %677, i32 0, i32 1
  %arrayidx1463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1462, i32 0, i64 0
  %rtwint1464 = bitcast %union.rtunion_def* %arrayidx1463 to i64*
  %678 = load i64, i64* %rtwint1464, align 8
  %cmp1465 = icmp sge i64 %678, 0
  br i1 %cmp1465, label %land.lhs.true.1467, label %if.end.1490

land.lhs.true.1467:                               ; preds = %cond.true.1461
  %679 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %679, i32 0, i32 1
  %arrayidx1469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1468, i32 0, i64 0
  %rtwint1470 = bitcast %union.rtunion_def* %arrayidx1469 to i64*
  %680 = load i64, i64* %rtwint1470, align 8
  %cmp1471 = icmp sle i64 %680, 3
  br i1 %cmp1471, label %if.then.1489, label %if.end.1490

cond.false.1473:                                  ; preds = %cond.false.1458
  %681 = load i32, i32* %c614, align 4
  %cmp1474 = icmp eq i32 %681, 78
  br i1 %cmp1474, label %cond.true.1476, label %cond.false.1488

cond.true.1476:                                   ; preds = %cond.false.1473
  %682 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %682, i32 0, i32 1
  %arrayidx1478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1477, i32 0, i64 0
  %rtwint1479 = bitcast %union.rtunion_def* %arrayidx1478 to i64*
  %683 = load i64, i64* %rtwint1479, align 8
  %cmp1480 = icmp sge i64 %683, 0
  br i1 %cmp1480, label %land.lhs.true.1482, label %if.end.1490

land.lhs.true.1482:                               ; preds = %cond.true.1476
  %684 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1
  %arrayidx1484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1483, i32 0, i64 0
  %rtwint1485 = bitcast %union.rtunion_def* %arrayidx1484 to i64*
  %685 = load i64, i64* %rtwint1485, align 8
  %cmp1486 = icmp sle i64 %685, 255
  br i1 %cmp1486, label %if.then.1489, label %if.end.1490

cond.false.1488:                                  ; preds = %cond.false.1473
  br i1 false, label %if.then.1489, label %if.end.1490

if.then.1489:                                     ; preds = %cond.false.1488, %land.lhs.true.1482, %land.lhs.true.1467, %lor.lhs.false.1452, %cond.true.1446, %land.lhs.true.1437, %land.lhs.true.1422, %land.lhs.true.1407
  store i32 1, i32* %win, align 4
  br label %if.end.1490

if.end.1490:                                      ; preds = %if.then.1489, %cond.false.1488, %land.lhs.true.1482, %cond.true.1476, %land.lhs.true.1467, %cond.true.1461, %lor.lhs.false.1452, %land.lhs.true.1437, %cond.true.1431, %land.lhs.true.1422, %cond.true.1416, %land.lhs.true.1407, %cond.true.1402, %sw.bb.1394
  br label %sw.epilog

sw.bb.1491:                                       ; preds = %while.body.803
  store i32 1, i32* %win, align 4
  br label %sw.epilog

sw.bb.1492:                                       ; preds = %while.body.803
  %686 = load i32, i32* %force_reload, align 4
  %tobool1493 = icmp ne i32 %686, 0
  br i1 %tobool1493, label %if.end.1588, label %land.lhs.true.1494

land.lhs.true.1494:                               ; preds = %sw.bb.1492
  %687 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %688 = bitcast %struct.rtx_def* %687 to i32*
  %bf.load1495 = load i32, i32* %688, align 8
  %bf.clear1496 = and i32 %bf.load1495, 65535
  %cmp1497 = icmp ne i32 %bf.clear1496, 75
  br i1 %cmp1497, label %land.lhs.true.1499, label %if.end.1588

land.lhs.true.1499:                               ; preds = %land.lhs.true.1494
  %689 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %690 = bitcast %struct.rtx_def* %689 to i32*
  %bf.load1500 = load i32, i32* %690, align 8
  %bf.clear1501 = and i32 %bf.load1500, 65535
  %cmp1502 = icmp ne i32 %bf.clear1501, 62
  br i1 %cmp1502, label %land.lhs.true.1504, label %if.end.1588

land.lhs.true.1504:                               ; preds = %land.lhs.true.1499
  %691 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %692 = bitcast %struct.rtx_def* %691 to i32*
  %bf.load1505 = load i32, i32* %692, align 8
  %bf.clear1506 = and i32 %bf.load1505, 65535
  %cmp1507 = icmp eq i32 %bf.clear1506, 67
  br i1 %cmp1507, label %lor.lhs.false.1544, label %lor.lhs.false.1509

lor.lhs.false.1509:                               ; preds = %land.lhs.true.1504
  %693 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %694 = bitcast %struct.rtx_def* %693 to i32*
  %bf.load1510 = load i32, i32* %694, align 8
  %bf.clear1511 = and i32 %bf.load1510, 65535
  %cmp1512 = icmp eq i32 %bf.clear1511, 68
  br i1 %cmp1512, label %lor.lhs.false.1544, label %lor.lhs.false.1514

lor.lhs.false.1514:                               ; preds = %lor.lhs.false.1509
  %695 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %696 = bitcast %struct.rtx_def* %695 to i32*
  %bf.load1515 = load i32, i32* %696, align 8
  %bf.clear1516 = and i32 %bf.load1515, 65535
  %cmp1517 = icmp eq i32 %bf.clear1516, 54
  br i1 %cmp1517, label %lor.lhs.false.1544, label %lor.lhs.false.1519

lor.lhs.false.1519:                               ; preds = %lor.lhs.false.1514
  %697 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %698 = bitcast %struct.rtx_def* %697 to i32*
  %bf.load1520 = load i32, i32* %698, align 8
  %bf.clear1521 = and i32 %bf.load1520, 65535
  %cmp1522 = icmp eq i32 %bf.clear1521, 55
  br i1 %cmp1522, label %lor.lhs.false.1544, label %lor.lhs.false.1524

lor.lhs.false.1524:                               ; preds = %lor.lhs.false.1519
  %699 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %700 = bitcast %struct.rtx_def* %699 to i32*
  %bf.load1525 = load i32, i32* %700, align 8
  %bf.clear1526 = and i32 %bf.load1525, 65535
  %cmp1527 = icmp eq i32 %bf.clear1526, 58
  br i1 %cmp1527, label %lor.lhs.false.1544, label %lor.lhs.false.1529

lor.lhs.false.1529:                               ; preds = %lor.lhs.false.1524
  %701 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %702 = bitcast %struct.rtx_def* %701 to i32*
  %bf.load1530 = load i32, i32* %702, align 8
  %bf.clear1531 = and i32 %bf.load1530, 65535
  %cmp1532 = icmp eq i32 %bf.clear1531, 134
  br i1 %cmp1532, label %lor.lhs.false.1544, label %lor.lhs.false.1534

lor.lhs.false.1534:                               ; preds = %lor.lhs.false.1529
  %703 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %704 = bitcast %struct.rtx_def* %703 to i32*
  %bf.load1535 = load i32, i32* %704, align 8
  %bf.clear1536 = and i32 %bf.load1535, 65535
  %cmp1537 = icmp eq i32 %bf.clear1536, 56
  br i1 %cmp1537, label %lor.lhs.false.1544, label %lor.lhs.false.1539

lor.lhs.false.1539:                               ; preds = %lor.lhs.false.1534
  %705 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %706 = bitcast %struct.rtx_def* %705 to i32*
  %bf.load1540 = load i32, i32* %706, align 8
  %bf.clear1541 = and i32 %bf.load1540, 65535
  %cmp1542 = icmp eq i32 %bf.clear1541, 140
  br i1 %cmp1542, label %lor.lhs.false.1544, label %land.lhs.true.1567

lor.lhs.false.1544:                               ; preds = %lor.lhs.false.1539, %lor.lhs.false.1534, %lor.lhs.false.1529, %lor.lhs.false.1524, %lor.lhs.false.1519, %lor.lhs.false.1514, %lor.lhs.false.1509, %land.lhs.true.1504
  %707 = load i32, i32* @flag_pic, align 4
  %tobool1545 = icmp ne i32 %707, 0
  br i1 %tobool1545, label %lor.lhs.false.1546, label %land.lhs.true.1567

lor.lhs.false.1546:                               ; preds = %lor.lhs.false.1544
  %708 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %709 = bitcast %struct.rtx_def* %708 to i32*
  %bf.load1547 = load i32, i32* %709, align 8
  %bf.clear1548 = and i32 %bf.load1547, 65535
  %cmp1549 = icmp eq i32 %bf.clear1548, 68
  br i1 %cmp1549, label %lor.lhs.false.1564, label %lor.lhs.false.1551

lor.lhs.false.1551:                               ; preds = %lor.lhs.false.1546
  %710 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %711 = bitcast %struct.rtx_def* %710 to i32*
  %bf.load1552 = load i32, i32* %711, align 8
  %bf.clear1553 = and i32 %bf.load1552, 65535
  %cmp1554 = icmp eq i32 %bf.clear1553, 67
  br i1 %cmp1554, label %lor.lhs.false.1564, label %lor.lhs.false.1556

lor.lhs.false.1556:                               ; preds = %lor.lhs.false.1551
  %712 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %713 = bitcast %struct.rtx_def* %712 to i32*
  %bf.load1557 = load i32, i32* %713, align 8
  %bf.clear1558 = and i32 %bf.load1557, 65535
  %cmp1559 = icmp eq i32 %bf.clear1558, 58
  br i1 %cmp1559, label %land.lhs.true.1561, label %land.lhs.true.1567

land.lhs.true.1561:                               ; preds = %lor.lhs.false.1556
  %714 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1562 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %714)
  %tobool1563 = icmp ne i32 %call1562, 0
  br i1 %tobool1563, label %lor.lhs.false.1564, label %land.lhs.true.1567

lor.lhs.false.1564:                               ; preds = %land.lhs.true.1561, %lor.lhs.false.1551, %lor.lhs.false.1546
  %715 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1565 = call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %715)
  %tobool1566 = icmp ne i32 %call1565, 0
  br i1 %tobool1566, label %land.lhs.true.1567, label %if.end.1588

land.lhs.true.1567:                               ; preds = %lor.lhs.false.1564, %land.lhs.true.1561, %lor.lhs.false.1556, %lor.lhs.false.1544, %lor.lhs.false.1539
  %716 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %717 = bitcast %struct.rtx_def* %716 to i32*
  %bf.load1568 = load i32, i32* %717, align 8
  %bf.clear1569 = and i32 %bf.load1568, 65535
  %cmp1570 = icmp ne i32 %bf.clear1569, 61
  br i1 %cmp1570, label %if.then.1587, label %lor.lhs.false.1572

lor.lhs.false.1572:                               ; preds = %land.lhs.true.1567
  %718 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %718, i32 0, i32 1
  %arrayidx1574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1573, i32 0, i64 0
  %rtuint1575 = bitcast %union.rtunion_def* %arrayidx1574 to i32*
  %719 = load i32, i32* %rtuint1575, align 4
  %cmp1576 = icmp uge i32 %719, 53
  br i1 %cmp1576, label %land.lhs.true.1578, label %if.end.1588

land.lhs.true.1578:                               ; preds = %lor.lhs.false.1572
  %720 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld1579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %720, i32 0, i32 1
  %arrayidx1580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1579, i32 0, i64 0
  %rtuint1581 = bitcast %union.rtunion_def* %arrayidx1580 to i32*
  %721 = load i32, i32* %rtuint1581, align 4
  %idxprom1582 = zext i32 %721 to i64
  %722 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1583 = getelementptr inbounds i16, i16* %722, i64 %idxprom1582
  %723 = load i16, i16* %arrayidx1583, align 2
  %conv1584 = sext i16 %723 to i32
  %cmp1585 = icmp slt i32 %conv1584, 0
  br i1 %cmp1585, label %if.then.1587, label %if.end.1588

if.then.1587:                                     ; preds = %land.lhs.true.1578, %land.lhs.true.1567
  store i32 1, i32* %win, align 4
  br label %if.end.1588

if.end.1588:                                      ; preds = %if.then.1587, %land.lhs.true.1578, %lor.lhs.false.1572, %lor.lhs.false.1564, %land.lhs.true.1499, %land.lhs.true.1494, %sw.bb.1492
  br label %sw.bb.1589

sw.bb.1589:                                       ; preds = %while.body.803, %if.end.1588
  %724 = load i32, i32* %i, align 4
  %idxprom1590 = sext i32 %724 to i64
  %arrayidx1591 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1590
  %725 = load i32, i32* %arrayidx1591, align 4
  %idxprom1592 = sext i32 %725 to i64
  %arrayidx1593 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom1592
  %arrayidx1594 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx1593, i32 0, i64 12
  %726 = load i32, i32* %arrayidx1594, align 4
  %727 = load i32, i32* %i, align 4
  %idxprom1595 = sext i32 %727 to i64
  %arrayidx1596 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1595
  store i32 %726, i32* %arrayidx1596, align 4
  br label %reg.1891

sw.default:                                       ; preds = %while.body.803
  %728 = load i32, i32* %c614, align 4
  %cmp1597 = icmp eq i32 %728, 114
  br i1 %cmp1597, label %cond.true.1599, label %cond.false.1600

cond.true.1599:                                   ; preds = %sw.default
  br label %cond.end.1728

cond.false.1600:                                  ; preds = %sw.default
  %729 = load i32, i32* %c614, align 4
  %cmp1601 = icmp eq i32 %729, 82
  br i1 %cmp1601, label %cond.true.1603, label %cond.false.1604

cond.true.1603:                                   ; preds = %cond.false.1600
  br label %cond.end.1726

cond.false.1604:                                  ; preds = %cond.false.1600
  %730 = load i32, i32* %c614, align 4
  %cmp1605 = icmp eq i32 %730, 113
  br i1 %cmp1605, label %cond.true.1607, label %cond.false.1611

cond.true.1607:                                   ; preds = %cond.false.1604
  %731 = load i32, i32* @target_flags, align 4
  %and1608 = and i32 %731, 33554432
  %tobool1609 = icmp ne i32 %and1608, 0
  %cond1610 = select i1 %tobool1609, i32 12, i32 8
  br label %cond.end.1724

cond.false.1611:                                  ; preds = %cond.false.1604
  %732 = load i32, i32* %c614, align 4
  %cmp1612 = icmp eq i32 %732, 81
  br i1 %cmp1612, label %cond.true.1614, label %cond.false.1615

cond.true.1614:                                   ; preds = %cond.false.1611
  br label %cond.end.1722

cond.false.1615:                                  ; preds = %cond.false.1611
  %733 = load i32, i32* %c614, align 4
  %cmp1616 = icmp eq i32 %733, 102
  br i1 %cmp1616, label %cond.true.1618, label %cond.false.1624

cond.true.1618:                                   ; preds = %cond.false.1615
  %734 = load i32, i32* @target_flags, align 4
  %and1619 = and i32 %734, 1
  %tobool1620 = icmp ne i32 %and1619, 0
  br i1 %tobool1620, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.1618
  %735 = load i32, i32* @target_flags, align 4
  %and1621 = and i32 %735, 32
  %tobool1622 = icmp ne i32 %and1621, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.1618
  %736 = phi i1 [ true, %cond.true.1618 ], [ %tobool1622, %lor.rhs ]
  %cond1623 = select i1 %736, i32 15, i32 0
  br label %cond.end.1720

cond.false.1624:                                  ; preds = %cond.false.1615
  %737 = load i32, i32* %c614, align 4
  %cmp1625 = icmp eq i32 %737, 116
  br i1 %cmp1625, label %cond.true.1627, label %cond.false.1635

cond.true.1627:                                   ; preds = %cond.false.1624
  %738 = load i32, i32* @target_flags, align 4
  %and1628 = and i32 %738, 1
  %tobool1629 = icmp ne i32 %and1628, 0
  br i1 %tobool1629, label %lor.end.1633, label %lor.rhs.1630

lor.rhs.1630:                                     ; preds = %cond.true.1627
  %739 = load i32, i32* @target_flags, align 4
  %and1631 = and i32 %739, 32
  %tobool1632 = icmp ne i32 %and1631, 0
  br label %lor.end.1633

lor.end.1633:                                     ; preds = %lor.rhs.1630, %cond.true.1627
  %740 = phi i1 [ true, %cond.true.1627 ], [ %tobool1632, %lor.rhs.1630 ]
  %cond1634 = select i1 %740, i32 13, i32 0
  br label %cond.end.1718

cond.false.1635:                                  ; preds = %cond.false.1624
  %741 = load i32, i32* %c614, align 4
  %cmp1636 = icmp eq i32 %741, 117
  br i1 %cmp1636, label %cond.true.1638, label %cond.false.1646

cond.true.1638:                                   ; preds = %cond.false.1635
  %742 = load i32, i32* @target_flags, align 4
  %and1639 = and i32 %742, 1
  %tobool1640 = icmp ne i32 %and1639, 0
  br i1 %tobool1640, label %lor.end.1644, label %lor.rhs.1641

lor.rhs.1641:                                     ; preds = %cond.true.1638
  %743 = load i32, i32* @target_flags, align 4
  %and1642 = and i32 %743, 32
  %tobool1643 = icmp ne i32 %and1642, 0
  br label %lor.end.1644

lor.end.1644:                                     ; preds = %lor.rhs.1641, %cond.true.1638
  %744 = phi i1 [ true, %cond.true.1638 ], [ %tobool1643, %lor.rhs.1641 ]
  %cond1645 = select i1 %744, i32 14, i32 0
  br label %cond.end.1716

cond.false.1646:                                  ; preds = %cond.false.1635
  %745 = load i32, i32* %c614, align 4
  %cmp1647 = icmp eq i32 %745, 97
  br i1 %cmp1647, label %cond.true.1649, label %cond.false.1650

cond.true.1649:                                   ; preds = %cond.false.1646
  br label %cond.end.1714

cond.false.1650:                                  ; preds = %cond.false.1646
  %746 = load i32, i32* %c614, align 4
  %cmp1651 = icmp eq i32 %746, 98
  br i1 %cmp1651, label %cond.true.1653, label %cond.false.1654

cond.true.1653:                                   ; preds = %cond.false.1650
  br label %cond.end.1712

cond.false.1654:                                  ; preds = %cond.false.1650
  %747 = load i32, i32* %c614, align 4
  %cmp1655 = icmp eq i32 %747, 99
  br i1 %cmp1655, label %cond.true.1657, label %cond.false.1658

cond.true.1657:                                   ; preds = %cond.false.1654
  br label %cond.end.1710

cond.false.1658:                                  ; preds = %cond.false.1654
  %748 = load i32, i32* %c614, align 4
  %cmp1659 = icmp eq i32 %748, 100
  br i1 %cmp1659, label %cond.true.1661, label %cond.false.1662

cond.true.1661:                                   ; preds = %cond.false.1658
  br label %cond.end.1708

cond.false.1662:                                  ; preds = %cond.false.1658
  %749 = load i32, i32* %c614, align 4
  %cmp1663 = icmp eq i32 %749, 120
  br i1 %cmp1663, label %cond.true.1665, label %cond.false.1670

cond.true.1665:                                   ; preds = %cond.false.1662
  %750 = load i32, i32* @target_flags, align 4
  %and1666 = and i32 %750, 327680
  %cmp1667 = icmp ne i32 %and1666, 0
  %cond1669 = select i1 %cmp1667, i32 16, i32 0
  br label %cond.end.1706

cond.false.1670:                                  ; preds = %cond.false.1662
  %751 = load i32, i32* %c614, align 4
  %cmp1671 = icmp eq i32 %751, 89
  br i1 %cmp1671, label %cond.true.1673, label %cond.false.1678

cond.true.1673:                                   ; preds = %cond.false.1670
  %752 = load i32, i32* @target_flags, align 4
  %and1674 = and i32 %752, 262144
  %cmp1675 = icmp ne i32 %and1674, 0
  %cond1677 = select i1 %cmp1675, i32 16, i32 0
  br label %cond.end.1704

cond.false.1678:                                  ; preds = %cond.false.1670
  %753 = load i32, i32* %c614, align 4
  %cmp1679 = icmp eq i32 %753, 121
  br i1 %cmp1679, label %cond.true.1681, label %cond.false.1686

cond.true.1681:                                   ; preds = %cond.false.1678
  %754 = load i32, i32* @target_flags, align 4
  %and1682 = and i32 %754, 16384
  %cmp1683 = icmp ne i32 %and1682, 0
  %cond1685 = select i1 %cmp1683, i32 17, i32 0
  br label %cond.end.1702

cond.false.1686:                                  ; preds = %cond.false.1678
  %755 = load i32, i32* %c614, align 4
  %cmp1687 = icmp eq i32 %755, 65
  br i1 %cmp1687, label %cond.true.1689, label %cond.false.1690

cond.true.1689:                                   ; preds = %cond.false.1686
  br label %cond.end.1700

cond.false.1690:                                  ; preds = %cond.false.1686
  %756 = load i32, i32* %c614, align 4
  %cmp1691 = icmp eq i32 %756, 68
  br i1 %cmp1691, label %cond.true.1693, label %cond.false.1694

cond.true.1693:                                   ; preds = %cond.false.1690
  br label %cond.end.1698

cond.false.1694:                                  ; preds = %cond.false.1690
  %757 = load i32, i32* %c614, align 4
  %cmp1695 = icmp eq i32 %757, 83
  %cond1697 = select i1 %cmp1695, i32 5, i32 0
  br label %cond.end.1698

cond.end.1698:                                    ; preds = %cond.false.1694, %cond.true.1693
  %cond1699 = phi i32 [ 6, %cond.true.1693 ], [ %cond1697, %cond.false.1694 ]
  br label %cond.end.1700

cond.end.1700:                                    ; preds = %cond.end.1698, %cond.true.1689
  %cond1701 = phi i32 [ 7, %cond.true.1689 ], [ %cond1699, %cond.end.1698 ]
  br label %cond.end.1702

cond.end.1702:                                    ; preds = %cond.end.1700, %cond.true.1681
  %cond1703 = phi i32 [ %cond1685, %cond.true.1681 ], [ %cond1701, %cond.end.1700 ]
  br label %cond.end.1704

cond.end.1704:                                    ; preds = %cond.end.1702, %cond.true.1673
  %cond1705 = phi i32 [ %cond1677, %cond.true.1673 ], [ %cond1703, %cond.end.1702 ]
  br label %cond.end.1706

cond.end.1706:                                    ; preds = %cond.end.1704, %cond.true.1665
  %cond1707 = phi i32 [ %cond1669, %cond.true.1665 ], [ %cond1705, %cond.end.1704 ]
  br label %cond.end.1708

cond.end.1708:                                    ; preds = %cond.end.1706, %cond.true.1661
  %cond1709 = phi i32 [ 2, %cond.true.1661 ], [ %cond1707, %cond.end.1706 ]
  br label %cond.end.1710

cond.end.1710:                                    ; preds = %cond.end.1708, %cond.true.1657
  %cond1711 = phi i32 [ 3, %cond.true.1657 ], [ %cond1709, %cond.end.1708 ]
  br label %cond.end.1712

cond.end.1712:                                    ; preds = %cond.end.1710, %cond.true.1653
  %cond1713 = phi i32 [ 4, %cond.true.1653 ], [ %cond1711, %cond.end.1710 ]
  br label %cond.end.1714

cond.end.1714:                                    ; preds = %cond.end.1712, %cond.true.1649
  %cond1715 = phi i32 [ 1, %cond.true.1649 ], [ %cond1713, %cond.end.1712 ]
  br label %cond.end.1716

cond.end.1716:                                    ; preds = %cond.end.1714, %lor.end.1644
  %cond1717 = phi i32 [ %cond1645, %lor.end.1644 ], [ %cond1715, %cond.end.1714 ]
  br label %cond.end.1718

cond.end.1718:                                    ; preds = %cond.end.1716, %lor.end.1633
  %cond1719 = phi i32 [ %cond1634, %lor.end.1633 ], [ %cond1717, %cond.end.1716 ]
  br label %cond.end.1720

cond.end.1720:                                    ; preds = %cond.end.1718, %lor.end
  %cond1721 = phi i32 [ %cond1623, %lor.end ], [ %cond1719, %cond.end.1718 ]
  br label %cond.end.1722

cond.end.1722:                                    ; preds = %cond.end.1720, %cond.true.1614
  %cond1723 = phi i32 [ 8, %cond.true.1614 ], [ %cond1721, %cond.end.1720 ]
  br label %cond.end.1724

cond.end.1724:                                    ; preds = %cond.end.1722, %cond.true.1607
  %cond1725 = phi i32 [ %cond1610, %cond.true.1607 ], [ %cond1723, %cond.end.1722 ]
  br label %cond.end.1726

cond.end.1726:                                    ; preds = %cond.end.1724, %cond.true.1603
  %cond1727 = phi i32 [ 11, %cond.true.1603 ], [ %cond1725, %cond.end.1724 ]
  br label %cond.end.1728

cond.end.1728:                                    ; preds = %cond.end.1726, %cond.true.1599
  %cond1729 = phi i32 [ 12, %cond.true.1599 ], [ %cond1727, %cond.end.1726 ]
  %cmp1730 = icmp eq i32 %cond1729, 0
  br i1 %cmp1730, label %if.then.1732, label %if.end.1747

if.then.1732:                                     ; preds = %cond.end.1728
  %758 = load i32, i32* %c614, align 4
  %cmp1733 = icmp eq i32 %758, 101
  br i1 %cmp1733, label %cond.true.1735, label %cond.false.1738

cond.true.1735:                                   ; preds = %if.then.1732
  %759 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1736 = call i32 @x86_64_sign_extended_value(%struct.rtx_def* %759)
  %tobool1737 = icmp ne i32 %call1736, 0
  br i1 %tobool1737, label %if.then.1745, label %if.end.1746

cond.false.1738:                                  ; preds = %if.then.1732
  %760 = load i32, i32* %c614, align 4
  %cmp1739 = icmp eq i32 %760, 90
  br i1 %cmp1739, label %cond.true.1741, label %cond.false.1744

cond.true.1741:                                   ; preds = %cond.false.1738
  %761 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call1742 = call i32 @x86_64_zero_extended_value(%struct.rtx_def* %761)
  %tobool1743 = icmp ne i32 %call1742, 0
  br i1 %tobool1743, label %if.then.1745, label %if.end.1746

cond.false.1744:                                  ; preds = %cond.false.1738
  br i1 false, label %if.then.1745, label %if.end.1746

if.then.1745:                                     ; preds = %cond.false.1744, %cond.true.1741, %cond.true.1735
  store i32 1, i32* %win, align 4
  br label %if.end.1746

if.end.1746:                                      ; preds = %if.then.1745, %cond.false.1744, %cond.true.1741, %cond.true.1735
  br label %sw.epilog

if.end.1747:                                      ; preds = %cond.end.1728
  %762 = load i32, i32* %c614, align 4
  %cmp1748 = icmp eq i32 %762, 114
  br i1 %cmp1748, label %cond.true.1750, label %cond.false.1751

cond.true.1750:                                   ; preds = %if.end.1747
  br label %cond.end.1881

cond.false.1751:                                  ; preds = %if.end.1747
  %763 = load i32, i32* %c614, align 4
  %cmp1752 = icmp eq i32 %763, 82
  br i1 %cmp1752, label %cond.true.1754, label %cond.false.1755

cond.true.1754:                                   ; preds = %cond.false.1751
  br label %cond.end.1879

cond.false.1755:                                  ; preds = %cond.false.1751
  %764 = load i32, i32* %c614, align 4
  %cmp1756 = icmp eq i32 %764, 113
  br i1 %cmp1756, label %cond.true.1758, label %cond.false.1762

cond.true.1758:                                   ; preds = %cond.false.1755
  %765 = load i32, i32* @target_flags, align 4
  %and1759 = and i32 %765, 33554432
  %tobool1760 = icmp ne i32 %and1759, 0
  %cond1761 = select i1 %tobool1760, i32 12, i32 8
  br label %cond.end.1877

cond.false.1762:                                  ; preds = %cond.false.1755
  %766 = load i32, i32* %c614, align 4
  %cmp1763 = icmp eq i32 %766, 81
  br i1 %cmp1763, label %cond.true.1765, label %cond.false.1766

cond.true.1765:                                   ; preds = %cond.false.1762
  br label %cond.end.1875

cond.false.1766:                                  ; preds = %cond.false.1762
  %767 = load i32, i32* %c614, align 4
  %cmp1767 = icmp eq i32 %767, 102
  br i1 %cmp1767, label %cond.true.1769, label %cond.false.1777

cond.true.1769:                                   ; preds = %cond.false.1766
  %768 = load i32, i32* @target_flags, align 4
  %and1770 = and i32 %768, 1
  %tobool1771 = icmp ne i32 %and1770, 0
  br i1 %tobool1771, label %lor.end.1775, label %lor.rhs.1772

lor.rhs.1772:                                     ; preds = %cond.true.1769
  %769 = load i32, i32* @target_flags, align 4
  %and1773 = and i32 %769, 32
  %tobool1774 = icmp ne i32 %and1773, 0
  br label %lor.end.1775

lor.end.1775:                                     ; preds = %lor.rhs.1772, %cond.true.1769
  %770 = phi i1 [ true, %cond.true.1769 ], [ %tobool1774, %lor.rhs.1772 ]
  %cond1776 = select i1 %770, i32 15, i32 0
  br label %cond.end.1873

cond.false.1777:                                  ; preds = %cond.false.1766
  %771 = load i32, i32* %c614, align 4
  %cmp1778 = icmp eq i32 %771, 116
  br i1 %cmp1778, label %cond.true.1780, label %cond.false.1788

cond.true.1780:                                   ; preds = %cond.false.1777
  %772 = load i32, i32* @target_flags, align 4
  %and1781 = and i32 %772, 1
  %tobool1782 = icmp ne i32 %and1781, 0
  br i1 %tobool1782, label %lor.end.1786, label %lor.rhs.1783

lor.rhs.1783:                                     ; preds = %cond.true.1780
  %773 = load i32, i32* @target_flags, align 4
  %and1784 = and i32 %773, 32
  %tobool1785 = icmp ne i32 %and1784, 0
  br label %lor.end.1786

lor.end.1786:                                     ; preds = %lor.rhs.1783, %cond.true.1780
  %774 = phi i1 [ true, %cond.true.1780 ], [ %tobool1785, %lor.rhs.1783 ]
  %cond1787 = select i1 %774, i32 13, i32 0
  br label %cond.end.1871

cond.false.1788:                                  ; preds = %cond.false.1777
  %775 = load i32, i32* %c614, align 4
  %cmp1789 = icmp eq i32 %775, 117
  br i1 %cmp1789, label %cond.true.1791, label %cond.false.1799

cond.true.1791:                                   ; preds = %cond.false.1788
  %776 = load i32, i32* @target_flags, align 4
  %and1792 = and i32 %776, 1
  %tobool1793 = icmp ne i32 %and1792, 0
  br i1 %tobool1793, label %lor.end.1797, label %lor.rhs.1794

lor.rhs.1794:                                     ; preds = %cond.true.1791
  %777 = load i32, i32* @target_flags, align 4
  %and1795 = and i32 %777, 32
  %tobool1796 = icmp ne i32 %and1795, 0
  br label %lor.end.1797

lor.end.1797:                                     ; preds = %lor.rhs.1794, %cond.true.1791
  %778 = phi i1 [ true, %cond.true.1791 ], [ %tobool1796, %lor.rhs.1794 ]
  %cond1798 = select i1 %778, i32 14, i32 0
  br label %cond.end.1869

cond.false.1799:                                  ; preds = %cond.false.1788
  %779 = load i32, i32* %c614, align 4
  %cmp1800 = icmp eq i32 %779, 97
  br i1 %cmp1800, label %cond.true.1802, label %cond.false.1803

cond.true.1802:                                   ; preds = %cond.false.1799
  br label %cond.end.1867

cond.false.1803:                                  ; preds = %cond.false.1799
  %780 = load i32, i32* %c614, align 4
  %cmp1804 = icmp eq i32 %780, 98
  br i1 %cmp1804, label %cond.true.1806, label %cond.false.1807

cond.true.1806:                                   ; preds = %cond.false.1803
  br label %cond.end.1865

cond.false.1807:                                  ; preds = %cond.false.1803
  %781 = load i32, i32* %c614, align 4
  %cmp1808 = icmp eq i32 %781, 99
  br i1 %cmp1808, label %cond.true.1810, label %cond.false.1811

cond.true.1810:                                   ; preds = %cond.false.1807
  br label %cond.end.1863

cond.false.1811:                                  ; preds = %cond.false.1807
  %782 = load i32, i32* %c614, align 4
  %cmp1812 = icmp eq i32 %782, 100
  br i1 %cmp1812, label %cond.true.1814, label %cond.false.1815

cond.true.1814:                                   ; preds = %cond.false.1811
  br label %cond.end.1861

cond.false.1815:                                  ; preds = %cond.false.1811
  %783 = load i32, i32* %c614, align 4
  %cmp1816 = icmp eq i32 %783, 120
  br i1 %cmp1816, label %cond.true.1818, label %cond.false.1823

cond.true.1818:                                   ; preds = %cond.false.1815
  %784 = load i32, i32* @target_flags, align 4
  %and1819 = and i32 %784, 327680
  %cmp1820 = icmp ne i32 %and1819, 0
  %cond1822 = select i1 %cmp1820, i32 16, i32 0
  br label %cond.end.1859

cond.false.1823:                                  ; preds = %cond.false.1815
  %785 = load i32, i32* %c614, align 4
  %cmp1824 = icmp eq i32 %785, 89
  br i1 %cmp1824, label %cond.true.1826, label %cond.false.1831

cond.true.1826:                                   ; preds = %cond.false.1823
  %786 = load i32, i32* @target_flags, align 4
  %and1827 = and i32 %786, 262144
  %cmp1828 = icmp ne i32 %and1827, 0
  %cond1830 = select i1 %cmp1828, i32 16, i32 0
  br label %cond.end.1857

cond.false.1831:                                  ; preds = %cond.false.1823
  %787 = load i32, i32* %c614, align 4
  %cmp1832 = icmp eq i32 %787, 121
  br i1 %cmp1832, label %cond.true.1834, label %cond.false.1839

cond.true.1834:                                   ; preds = %cond.false.1831
  %788 = load i32, i32* @target_flags, align 4
  %and1835 = and i32 %788, 16384
  %cmp1836 = icmp ne i32 %and1835, 0
  %cond1838 = select i1 %cmp1836, i32 17, i32 0
  br label %cond.end.1855

cond.false.1839:                                  ; preds = %cond.false.1831
  %789 = load i32, i32* %c614, align 4
  %cmp1840 = icmp eq i32 %789, 65
  br i1 %cmp1840, label %cond.true.1842, label %cond.false.1843

cond.true.1842:                                   ; preds = %cond.false.1839
  br label %cond.end.1853

cond.false.1843:                                  ; preds = %cond.false.1839
  %790 = load i32, i32* %c614, align 4
  %cmp1844 = icmp eq i32 %790, 68
  br i1 %cmp1844, label %cond.true.1846, label %cond.false.1847

cond.true.1846:                                   ; preds = %cond.false.1843
  br label %cond.end.1851

cond.false.1847:                                  ; preds = %cond.false.1843
  %791 = load i32, i32* %c614, align 4
  %cmp1848 = icmp eq i32 %791, 83
  %cond1850 = select i1 %cmp1848, i32 5, i32 0
  br label %cond.end.1851

cond.end.1851:                                    ; preds = %cond.false.1847, %cond.true.1846
  %cond1852 = phi i32 [ 6, %cond.true.1846 ], [ %cond1850, %cond.false.1847 ]
  br label %cond.end.1853

cond.end.1853:                                    ; preds = %cond.end.1851, %cond.true.1842
  %cond1854 = phi i32 [ 7, %cond.true.1842 ], [ %cond1852, %cond.end.1851 ]
  br label %cond.end.1855

cond.end.1855:                                    ; preds = %cond.end.1853, %cond.true.1834
  %cond1856 = phi i32 [ %cond1838, %cond.true.1834 ], [ %cond1854, %cond.end.1853 ]
  br label %cond.end.1857

cond.end.1857:                                    ; preds = %cond.end.1855, %cond.true.1826
  %cond1858 = phi i32 [ %cond1830, %cond.true.1826 ], [ %cond1856, %cond.end.1855 ]
  br label %cond.end.1859

cond.end.1859:                                    ; preds = %cond.end.1857, %cond.true.1818
  %cond1860 = phi i32 [ %cond1822, %cond.true.1818 ], [ %cond1858, %cond.end.1857 ]
  br label %cond.end.1861

cond.end.1861:                                    ; preds = %cond.end.1859, %cond.true.1814
  %cond1862 = phi i32 [ 2, %cond.true.1814 ], [ %cond1860, %cond.end.1859 ]
  br label %cond.end.1863

cond.end.1863:                                    ; preds = %cond.end.1861, %cond.true.1810
  %cond1864 = phi i32 [ 3, %cond.true.1810 ], [ %cond1862, %cond.end.1861 ]
  br label %cond.end.1865

cond.end.1865:                                    ; preds = %cond.end.1863, %cond.true.1806
  %cond1866 = phi i32 [ 4, %cond.true.1806 ], [ %cond1864, %cond.end.1863 ]
  br label %cond.end.1867

cond.end.1867:                                    ; preds = %cond.end.1865, %cond.true.1802
  %cond1868 = phi i32 [ 1, %cond.true.1802 ], [ %cond1866, %cond.end.1865 ]
  br label %cond.end.1869

cond.end.1869:                                    ; preds = %cond.end.1867, %lor.end.1797
  %cond1870 = phi i32 [ %cond1798, %lor.end.1797 ], [ %cond1868, %cond.end.1867 ]
  br label %cond.end.1871

cond.end.1871:                                    ; preds = %cond.end.1869, %lor.end.1786
  %cond1872 = phi i32 [ %cond1787, %lor.end.1786 ], [ %cond1870, %cond.end.1869 ]
  br label %cond.end.1873

cond.end.1873:                                    ; preds = %cond.end.1871, %lor.end.1775
  %cond1874 = phi i32 [ %cond1776, %lor.end.1775 ], [ %cond1872, %cond.end.1871 ]
  br label %cond.end.1875

cond.end.1875:                                    ; preds = %cond.end.1873, %cond.true.1765
  %cond1876 = phi i32 [ 8, %cond.true.1765 ], [ %cond1874, %cond.end.1873 ]
  br label %cond.end.1877

cond.end.1877:                                    ; preds = %cond.end.1875, %cond.true.1758
  %cond1878 = phi i32 [ %cond1761, %cond.true.1758 ], [ %cond1876, %cond.end.1875 ]
  br label %cond.end.1879

cond.end.1879:                                    ; preds = %cond.end.1877, %cond.true.1754
  %cond1880 = phi i32 [ 11, %cond.true.1754 ], [ %cond1878, %cond.end.1877 ]
  br label %cond.end.1881

cond.end.1881:                                    ; preds = %cond.end.1879, %cond.true.1750
  %cond1882 = phi i32 [ 12, %cond.true.1750 ], [ %cond1880, %cond.end.1879 ]
  %idxprom1883 = sext i32 %cond1882 to i64
  %792 = load i32, i32* %i, align 4
  %idxprom1884 = sext i32 %792 to i64
  %arrayidx1885 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1884
  %793 = load i32, i32* %arrayidx1885, align 4
  %idxprom1886 = sext i32 %793 to i64
  %arrayidx1887 = getelementptr inbounds [25 x [25 x i32]], [25 x [25 x i32]]* @reg_class_subunion, i32 0, i64 %idxprom1886
  %arrayidx1888 = getelementptr inbounds [25 x i32], [25 x i32]* %arrayidx1887, i32 0, i64 %idxprom1883
  %794 = load i32, i32* %arrayidx1888, align 4
  %795 = load i32, i32* %i, align 4
  %idxprom1889 = sext i32 %795 to i64
  %arrayidx1890 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1889
  store i32 %794, i32* %arrayidx1890, align 4
  br label %reg.1891

reg.1891:                                         ; preds = %cond.end.1881, %sw.bb.1589
  %796 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %797 = bitcast %struct.rtx_def* %796 to i32*
  %bf.load1892 = load i32, i32* %797, align 8
  %bf.lshr1893 = lshr i32 %bf.load1892, 16
  %bf.clear1894 = and i32 %bf.lshr1893, 255
  %cmp1895 = icmp eq i32 %bf.clear1894, 51
  br i1 %cmp1895, label %if.then.1897, label %if.end.1898

if.then.1897:                                     ; preds = %reg.1891
  br label %sw.epilog

if.end.1898:                                      ; preds = %reg.1891
  store i32 1, i32* %winreg, align 4
  %798 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %799 = bitcast %struct.rtx_def* %798 to i32*
  %bf.load1899 = load i32, i32* %799, align 8
  %bf.clear1900 = and i32 %bf.load1899, 65535
  %cmp1901 = icmp eq i32 %bf.clear1900, 61
  br i1 %cmp1901, label %land.lhs.true.1903, label %if.end.1914

land.lhs.true.1903:                               ; preds = %if.end.1898
  %800 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %801 = load i32, i32* %i, align 4
  %idxprom1904 = sext i32 %801 to i64
  %arrayidx1905 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1904
  %802 = load i32, i32* %arrayidx1905, align 4
  %803 = load i32, i32* %offset, align 4
  %804 = load i32, i32* %i, align 4
  %idxprom1906 = sext i32 %804 to i64
  %arrayidx1907 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom1906
  %805 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1907, align 8
  %806 = bitcast %struct.rtx_def* %805 to i32*
  %bf.load1908 = load i32, i32* %806, align 8
  %bf.lshr1909 = lshr i32 %bf.load1908, 16
  %bf.clear1910 = and i32 %bf.lshr1909, 255
  %call1911 = call i32 @reg_fits_class_p(%struct.rtx_def* %800, i32 %802, i32 %803, i32 %bf.clear1910)
  %tobool1912 = icmp ne i32 %call1911, 0
  br i1 %tobool1912, label %if.then.1913, label %if.end.1914

if.then.1913:                                     ; preds = %land.lhs.true.1903
  store i32 1, i32* %win, align 4
  br label %if.end.1914

if.end.1914:                                      ; preds = %if.then.1913, %land.lhs.true.1903, %if.end.1898
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.1914, %if.then.1897, %if.end.1746, %sw.bb.1491, %if.end.1490, %if.end.1393, %if.end.1375, %if.then.1309, %if.end.1292, %if.end.1272, %if.end.1265, %sw.bb.1258, %if.end.1257, %if.then.1143, %if.end.1140, %if.then.1103, %if.end.1100, %if.end.1073, %if.end.1046, %if.then.973, %sw.bb.968, %if.end.967, %while.end.825, %sw.bb.812, %sw.bb.810, %if.end.809, %sw.bb
  br label %while.cond.793

while.end.1915:                                   ; preds = %land.end.801
  %807 = load i8*, i8** %p611, align 8
  %808 = load i32, i32* %i, align 4
  %idxprom1916 = sext i32 %808 to i64
  %arrayidx1917 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i32 0, i64 %idxprom1916
  store i8* %807, i8** %arrayidx1917, align 8
  %809 = load i32, i32* %winreg, align 4
  %tobool1918 = icmp ne i32 %809, 0
  br i1 %tobool1918, label %land.lhs.true.1919, label %if.end.1925

land.lhs.true.1919:                               ; preds = %while.end.1915
  %810 = load i32, i32* %i, align 4
  %idxprom1920 = sext i32 %810 to i64
  %arrayidx1921 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1920
  %811 = load i32, i32* %arrayidx1921, align 4
  %cmp1922 = icmp ne i32 %811, 0
  br i1 %cmp1922, label %if.then.1924, label %if.end.1925

if.then.1924:                                     ; preds = %land.lhs.true.1919
  store i32 0, i32* %badop, align 4
  br label %if.end.1925

if.end.1925:                                      ; preds = %if.then.1924, %land.lhs.true.1919, %while.end.1915
  %812 = load i32, i32* %earlyclobber, align 4
  %conv1926 = trunc i32 %812 to i8
  %813 = load i32, i32* %i, align 4
  %idxprom1927 = sext i32 %813 to i64
  %arrayidx1928 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom1927
  store i8 %conv1926, i8* %arrayidx1928, align 1
  %814 = load i32, i32* %win, align 4
  %tobool1929 = icmp ne i32 %814, 0
  br i1 %tobool1929, label %land.lhs.true.1930, label %if.else.1935

land.lhs.true.1930:                               ; preds = %if.end.1925
  %815 = load i32, i32* %force_reload, align 4
  %tobool1931 = icmp ne i32 %815, 0
  br i1 %tobool1931, label %if.else.1935, label %if.then.1932

if.then.1932:                                     ; preds = %land.lhs.true.1930
  %816 = load i32, i32* %i, align 4
  %idxprom1933 = sext i32 %816 to i64
  %arrayidx1934 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom1933
  store i8 1, i8* %arrayidx1934, align 1
  br label %if.end.2147

if.else.1935:                                     ; preds = %land.lhs.true.1930, %if.end.1925
  %817 = load i32, i32* %did_match, align 4
  %tobool1936 = icmp ne i32 %817, 0
  br i1 %tobool1936, label %land.lhs.true.1937, label %if.else.1942

land.lhs.true.1937:                               ; preds = %if.else.1935
  %818 = load i32, i32* %force_reload, align 4
  %tobool1938 = icmp ne i32 %818, 0
  br i1 %tobool1938, label %if.else.1942, label %if.then.1939

if.then.1939:                                     ; preds = %land.lhs.true.1937
  %819 = load i32, i32* %i, align 4
  %idxprom1940 = sext i32 %819 to i64
  %arrayidx1941 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom1940
  store i8 1, i8* %arrayidx1941, align 1
  br label %if.end.2146

if.else.1942:                                     ; preds = %land.lhs.true.1937, %if.else.1935
  store i32 0, i32* %const_to_mem, align 4
  %820 = load i32, i32* %offmemok, align 4
  %conv1943 = trunc i32 %820 to i8
  %821 = load i32, i32* %i, align 4
  %idxprom1944 = sext i32 %821 to i64
  %arrayidx1945 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_offmemok, i32 0, i64 %idxprom1944
  store i8 %conv1943, i8* %arrayidx1945, align 1
  %822 = load i32, i32* %losers, align 4
  %inc1946 = add nsw i32 %822, 1
  store i32 %inc1946, i32* %losers, align 4
  %823 = load i32, i32* %badop, align 4
  %tobool1947 = icmp ne i32 %823, 0
  br i1 %tobool1947, label %if.then.1948, label %if.end.1949

if.then.1948:                                     ; preds = %if.else.1942
  store i32 1, i32* %bad, align 4
  br label %if.end.1949

if.end.1949:                                      ; preds = %if.then.1948, %if.else.1942
  %824 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %825 = bitcast %struct.rtx_def* %824 to i32*
  %bf.load1950 = load i32, i32* %825, align 8
  %bf.clear1951 = and i32 %bf.load1950, 65535
  %cmp1952 = icmp eq i32 %bf.clear1951, 61
  br i1 %cmp1952, label %land.lhs.true.1954, label %if.end.1965

land.lhs.true.1954:                               ; preds = %if.end.1949
  %826 = load i32, i32* %i, align 4
  %idxprom1955 = sext i32 %826 to i64
  %arrayidx1956 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom1955
  %827 = load i32, i32* %arrayidx1956, align 4
  %cmp1957 = icmp eq i32 %827, 0
  br i1 %cmp1957, label %land.lhs.true.1959, label %if.end.1965

land.lhs.true.1959:                               ; preds = %land.lhs.true.1954
  %828 = load i32, i32* %i, align 4
  %idxprom1960 = sext i32 %828 to i64
  %arrayidx1961 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom1960
  %829 = load i32, i32* %arrayidx1961, align 4
  %cmp1962 = icmp slt i32 %829, 0
  br i1 %cmp1962, label %if.then.1964, label %if.end.1965

if.then.1964:                                     ; preds = %land.lhs.true.1959
  store i32 1, i32* %bad, align 4
  br label %if.end.1965

if.end.1965:                                      ; preds = %if.then.1964, %land.lhs.true.1959, %land.lhs.true.1954, %if.end.1949
  %830 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %831 = bitcast %struct.rtx_def* %830 to i32*
  %bf.load1966 = load i32, i32* %831, align 8
  %bf.clear1967 = and i32 %bf.load1966, 65535
  %cmp1968 = icmp eq i32 %bf.clear1967, 67
  br i1 %cmp1968, label %land.lhs.true.2005, label %lor.lhs.false.1970

lor.lhs.false.1970:                               ; preds = %if.end.1965
  %832 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %833 = bitcast %struct.rtx_def* %832 to i32*
  %bf.load1971 = load i32, i32* %833, align 8
  %bf.clear1972 = and i32 %bf.load1971, 65535
  %cmp1973 = icmp eq i32 %bf.clear1972, 68
  br i1 %cmp1973, label %land.lhs.true.2005, label %lor.lhs.false.1975

lor.lhs.false.1975:                               ; preds = %lor.lhs.false.1970
  %834 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %835 = bitcast %struct.rtx_def* %834 to i32*
  %bf.load1976 = load i32, i32* %835, align 8
  %bf.clear1977 = and i32 %bf.load1976, 65535
  %cmp1978 = icmp eq i32 %bf.clear1977, 54
  br i1 %cmp1978, label %land.lhs.true.2005, label %lor.lhs.false.1980

lor.lhs.false.1980:                               ; preds = %lor.lhs.false.1975
  %836 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %837 = bitcast %struct.rtx_def* %836 to i32*
  %bf.load1981 = load i32, i32* %837, align 8
  %bf.clear1982 = and i32 %bf.load1981, 65535
  %cmp1983 = icmp eq i32 %bf.clear1982, 55
  br i1 %cmp1983, label %land.lhs.true.2005, label %lor.lhs.false.1985

lor.lhs.false.1985:                               ; preds = %lor.lhs.false.1980
  %838 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %839 = bitcast %struct.rtx_def* %838 to i32*
  %bf.load1986 = load i32, i32* %839, align 8
  %bf.clear1987 = and i32 %bf.load1986, 65535
  %cmp1988 = icmp eq i32 %bf.clear1987, 58
  br i1 %cmp1988, label %land.lhs.true.2005, label %lor.lhs.false.1990

lor.lhs.false.1990:                               ; preds = %lor.lhs.false.1985
  %840 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %841 = bitcast %struct.rtx_def* %840 to i32*
  %bf.load1991 = load i32, i32* %841, align 8
  %bf.clear1992 = and i32 %bf.load1991, 65535
  %cmp1993 = icmp eq i32 %bf.clear1992, 134
  br i1 %cmp1993, label %land.lhs.true.2005, label %lor.lhs.false.1995

lor.lhs.false.1995:                               ; preds = %lor.lhs.false.1990
  %842 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %843 = bitcast %struct.rtx_def* %842 to i32*
  %bf.load1996 = load i32, i32* %843, align 8
  %bf.clear1997 = and i32 %bf.load1996, 65535
  %cmp1998 = icmp eq i32 %bf.clear1997, 56
  br i1 %cmp1998, label %land.lhs.true.2005, label %lor.lhs.false.2000

lor.lhs.false.2000:                               ; preds = %lor.lhs.false.1995
  %844 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %845 = bitcast %struct.rtx_def* %844 to i32*
  %bf.load2001 = load i32, i32* %845, align 8
  %bf.clear2002 = and i32 %bf.load2001, 65535
  %cmp2003 = icmp eq i32 %bf.clear2002, 140
  br i1 %cmp2003, label %land.lhs.true.2005, label %if.end.2031

land.lhs.true.2005:                               ; preds = %lor.lhs.false.2000, %lor.lhs.false.1995, %lor.lhs.false.1990, %lor.lhs.false.1985, %lor.lhs.false.1980, %lor.lhs.false.1975, %lor.lhs.false.1970, %if.end.1965
  %846 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %847 = bitcast %struct.rtx_def* %846 to i32*
  %bf.load2006 = load i32, i32* %847, align 8
  %bf.clear2007 = and i32 %bf.load2006, 65535
  %cmp2008 = icmp ne i32 %bf.clear2007, 134
  br i1 %cmp2008, label %land.lhs.true.2010, label %if.end.2031

land.lhs.true.2010:                               ; preds = %land.lhs.true.2005
  %848 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %849 = load i32, i32* %i, align 4
  %idxprom2011 = sext i32 %849 to i64
  %arrayidx2012 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2011
  %850 = load i32, i32* %arrayidx2012, align 4
  %call2013 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %848, i32 %850)
  %cmp2014 = icmp eq i32 %call2013, 0
  br i1 %cmp2014, label %land.lhs.true.2018, label %lor.lhs.false.2016

lor.lhs.false.2016:                               ; preds = %land.lhs.true.2010
  %851 = load i32, i32* %no_input_reloads, align 4
  %tobool2017 = icmp ne i32 %851, 0
  br i1 %tobool2017, label %land.lhs.true.2018, label %if.end.2031

land.lhs.true.2018:                               ; preds = %lor.lhs.false.2016, %land.lhs.true.2010
  %852 = load i32, i32* %i, align 4
  %idxprom2019 = sext i32 %852 to i64
  %arrayidx2020 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom2019
  %853 = load i32, i32* %arrayidx2020, align 4
  %cmp2021 = icmp ne i32 %853, 0
  br i1 %cmp2021, label %if.then.2023, label %if.end.2031

if.then.2023:                                     ; preds = %land.lhs.true.2018
  store i32 1, i32* %const_to_mem, align 4
  %854 = load i32, i32* %i, align 4
  %idxprom2024 = sext i32 %854 to i64
  %arrayidx2025 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2024
  %855 = load i32, i32* %arrayidx2025, align 4
  %cmp2026 = icmp ne i32 %855, 0
  br i1 %cmp2026, label %if.then.2028, label %if.end.2030

if.then.2028:                                     ; preds = %if.then.2023
  %856 = load i32, i32* %losers, align 4
  %inc2029 = add nsw i32 %856, 1
  store i32 %inc2029, i32* %losers, align 4
  br label %if.end.2030

if.end.2030:                                      ; preds = %if.then.2028, %if.then.2023
  br label %if.end.2031

if.end.2031:                                      ; preds = %if.end.2030, %land.lhs.true.2018, %lor.lhs.false.2016, %land.lhs.true.2005, %lor.lhs.false.2000
  %857 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %858 = bitcast %struct.rtx_def* %857 to i32*
  %bf.load2032 = load i32, i32* %858, align 8
  %bf.clear2033 = and i32 %bf.load2032, 65535
  %cmp2034 = icmp eq i32 %bf.clear2033, 67
  br i1 %cmp2034, label %if.else.2083, label %lor.lhs.false.2036

lor.lhs.false.2036:                               ; preds = %if.end.2031
  %859 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %860 = bitcast %struct.rtx_def* %859 to i32*
  %bf.load2037 = load i32, i32* %860, align 8
  %bf.clear2038 = and i32 %bf.load2037, 65535
  %cmp2039 = icmp eq i32 %bf.clear2038, 68
  br i1 %cmp2039, label %if.else.2083, label %lor.lhs.false.2041

lor.lhs.false.2041:                               ; preds = %lor.lhs.false.2036
  %861 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %862 = bitcast %struct.rtx_def* %861 to i32*
  %bf.load2042 = load i32, i32* %862, align 8
  %bf.clear2043 = and i32 %bf.load2042, 65535
  %cmp2044 = icmp eq i32 %bf.clear2043, 54
  br i1 %cmp2044, label %if.else.2083, label %lor.lhs.false.2046

lor.lhs.false.2046:                               ; preds = %lor.lhs.false.2041
  %863 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %864 = bitcast %struct.rtx_def* %863 to i32*
  %bf.load2047 = load i32, i32* %864, align 8
  %bf.clear2048 = and i32 %bf.load2047, 65535
  %cmp2049 = icmp eq i32 %bf.clear2048, 55
  br i1 %cmp2049, label %if.else.2083, label %lor.lhs.false.2051

lor.lhs.false.2051:                               ; preds = %lor.lhs.false.2046
  %865 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %866 = bitcast %struct.rtx_def* %865 to i32*
  %bf.load2052 = load i32, i32* %866, align 8
  %bf.clear2053 = and i32 %bf.load2052, 65535
  %cmp2054 = icmp eq i32 %bf.clear2053, 58
  br i1 %cmp2054, label %if.else.2083, label %lor.lhs.false.2056

lor.lhs.false.2056:                               ; preds = %lor.lhs.false.2051
  %867 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %868 = bitcast %struct.rtx_def* %867 to i32*
  %bf.load2057 = load i32, i32* %868, align 8
  %bf.clear2058 = and i32 %bf.load2057, 65535
  %cmp2059 = icmp eq i32 %bf.clear2058, 134
  br i1 %cmp2059, label %if.else.2083, label %lor.lhs.false.2061

lor.lhs.false.2061:                               ; preds = %lor.lhs.false.2056
  %869 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %870 = bitcast %struct.rtx_def* %869 to i32*
  %bf.load2062 = load i32, i32* %870, align 8
  %bf.clear2063 = and i32 %bf.load2062, 65535
  %cmp2064 = icmp eq i32 %bf.clear2063, 56
  br i1 %cmp2064, label %if.else.2083, label %lor.lhs.false.2066

lor.lhs.false.2066:                               ; preds = %lor.lhs.false.2061
  %871 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %872 = bitcast %struct.rtx_def* %871 to i32*
  %bf.load2067 = load i32, i32* %872, align 8
  %bf.clear2068 = and i32 %bf.load2067, 65535
  %cmp2069 = icmp eq i32 %bf.clear2068, 140
  br i1 %cmp2069, label %if.else.2083, label %land.lhs.true.2071

land.lhs.true.2071:                               ; preds = %lor.lhs.false.2066
  %873 = load i32, i32* %i, align 4
  %idxprom2072 = sext i32 %873 to i64
  %arrayidx2073 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2072
  %874 = load i32, i32* %arrayidx2073, align 4
  %cmp2074 = icmp ne i32 %874, 0
  br i1 %cmp2074, label %land.lhs.true.2076, label %if.else.2083

land.lhs.true.2076:                               ; preds = %land.lhs.true.2071
  %875 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %876 = load i32, i32* %i, align 4
  %idxprom2077 = sext i32 %876 to i64
  %arrayidx2078 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2077
  %877 = load i32, i32* %arrayidx2078, align 4
  %call2079 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %875, i32 %877)
  %cmp2080 = icmp eq i32 %call2079, 0
  br i1 %cmp2080, label %if.then.2082, label %if.else.2083

if.then.2082:                                     ; preds = %land.lhs.true.2076
  store i32 1, i32* %bad, align 4
  br label %if.end.2111

if.else.2083:                                     ; preds = %land.lhs.true.2076, %land.lhs.true.2071, %lor.lhs.false.2066, %lor.lhs.false.2061, %lor.lhs.false.2056, %lor.lhs.false.2051, %lor.lhs.false.2046, %lor.lhs.false.2041, %lor.lhs.false.2036, %if.end.2031
  %878 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %879 = bitcast %struct.rtx_def* %878 to i32*
  %bf.load2084 = load i32, i32* %879, align 8
  %bf.clear2085 = and i32 %bf.load2084, 65535
  %cmp2086 = icmp ne i32 %bf.clear2085, 62
  br i1 %cmp2086, label %land.lhs.true.2088, label %if.else.2099

land.lhs.true.2088:                               ; preds = %if.else.2083
  %880 = load i32, i32* %i, align 4
  %idxprom2089 = sext i32 %880 to i64
  %arrayidx2090 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2089
  %881 = load i32, i32* %arrayidx2090, align 4
  %cmp2091 = icmp ne i32 %881, 0
  br i1 %cmp2091, label %land.lhs.true.2093, label %if.else.2099

land.lhs.true.2093:                               ; preds = %land.lhs.true.2088
  %882 = load i32, i32* %no_output_reloads, align 4
  %tobool2094 = icmp ne i32 %882, 0
  br i1 %tobool2094, label %land.lhs.true.2095, label %if.else.2099

land.lhs.true.2095:                               ; preds = %land.lhs.true.2093
  %883 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %884 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %call2096 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %883, i32 10, %struct.rtx_def* %884)
  %tobool2097 = icmp ne %struct.rtx_def* %call2096, null
  br i1 %tobool2097, label %if.else.2099, label %if.then.2098

if.then.2098:                                     ; preds = %land.lhs.true.2095
  store i32 1, i32* %bad, align 4
  br label %if.end.2110

if.else.2099:                                     ; preds = %land.lhs.true.2095, %land.lhs.true.2093, %land.lhs.true.2088, %if.else.2083
  %885 = load i32, i32* %i, align 4
  %idxprom2100 = sext i32 %885 to i64
  %arrayidx2101 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2100
  %886 = load i32, i32* %arrayidx2101, align 4
  %cmp2102 = icmp ne i32 %886, 2
  br i1 %cmp2102, label %land.lhs.true.2104, label %if.end.2109

land.lhs.true.2104:                               ; preds = %if.else.2099
  %887 = load i32, i32* %no_input_reloads, align 4
  %tobool2105 = icmp ne i32 %887, 0
  br i1 %tobool2105, label %land.lhs.true.2106, label %if.end.2109

land.lhs.true.2106:                               ; preds = %land.lhs.true.2104
  %888 = load i32, i32* %const_to_mem, align 4
  %tobool2107 = icmp ne i32 %888, 0
  br i1 %tobool2107, label %if.end.2109, label %if.then.2108

if.then.2108:                                     ; preds = %land.lhs.true.2106
  store i32 1, i32* %bad, align 4
  br label %if.end.2109

if.end.2109:                                      ; preds = %if.then.2108, %land.lhs.true.2106, %land.lhs.true.2104, %if.else.2099
  br label %if.end.2110

if.end.2110:                                      ; preds = %if.end.2109, %if.then.2098
  br label %if.end.2111

if.end.2111:                                      ; preds = %if.end.2110, %if.then.2082
  %889 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %890 = bitcast %struct.rtx_def* %889 to i32*
  %bf.load2112 = load i32, i32* %890, align 8
  %bf.clear2113 = and i32 %bf.load2112, 65535
  %cmp2114 = icmp eq i32 %bf.clear2113, 61
  br i1 %cmp2114, label %land.lhs.true.2116, label %land.lhs.true.2122

land.lhs.true.2116:                               ; preds = %if.end.2111
  %891 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %fld2117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %891, i32 0, i32 1
  %arrayidx2118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2117, i32 0, i64 0
  %rtuint2119 = bitcast %union.rtunion_def* %arrayidx2118 to i32*
  %892 = load i32, i32* %rtuint2119, align 4
  %cmp2120 = icmp uge i32 %892, 53
  br i1 %cmp2120, label %if.end.2133, label %land.lhs.true.2122

land.lhs.true.2122:                               ; preds = %land.lhs.true.2116, %if.end.2111
  %893 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %894 = bitcast %struct.rtx_def* %893 to i32*
  %bf.load2123 = load i32, i32* %894, align 8
  %bf.clear2124 = and i32 %bf.load2123, 65535
  %cmp2125 = icmp ne i32 %bf.clear2124, 62
  br i1 %cmp2125, label %land.lhs.true.2127, label %if.end.2133

land.lhs.true.2127:                               ; preds = %land.lhs.true.2122
  %895 = load i32, i32* %const_to_mem, align 4
  %tobool2128 = icmp ne i32 %895, 0
  br i1 %tobool2128, label %land.lhs.true.2129, label %if.then.2131

land.lhs.true.2129:                               ; preds = %land.lhs.true.2127
  %896 = load i32, i32* %constmemok, align 4
  %tobool2130 = icmp ne i32 %896, 0
  br i1 %tobool2130, label %if.end.2133, label %if.then.2131

if.then.2131:                                     ; preds = %land.lhs.true.2129, %land.lhs.true.2127
  %897 = load i32, i32* %reject, align 4
  %add2132 = add nsw i32 %897, 2
  store i32 %add2132, i32* %reject, align 4
  br label %if.end.2133

if.end.2133:                                      ; preds = %if.then.2131, %land.lhs.true.2129, %land.lhs.true.2122, %land.lhs.true.2116
  %898 = load i32, i32* %i, align 4
  %idxprom2134 = sext i32 %898 to i64
  %arrayidx2135 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom2134
  %899 = load i32, i32* %arrayidx2135, align 4
  %cmp2136 = icmp ne i32 %899, 0
  br i1 %cmp2136, label %land.lhs.true.2138, label %if.end.2145

land.lhs.true.2138:                               ; preds = %if.end.2133
  %900 = load %struct.rtx_def*, %struct.rtx_def** %operand, align 8
  %901 = bitcast %struct.rtx_def* %900 to i32*
  %bf.load2139 = load i32, i32* %901, align 8
  %bf.clear2140 = and i32 %bf.load2139, 65535
  %cmp2141 = icmp ne i32 %bf.clear2140, 62
  br i1 %cmp2141, label %if.then.2143, label %if.end.2145

if.then.2143:                                     ; preds = %land.lhs.true.2138
  %902 = load i32, i32* %reject, align 4
  %inc2144 = add nsw i32 %902, 1
  store i32 %inc2144, i32* %reject, align 4
  br label %if.end.2145

if.end.2145:                                      ; preds = %if.then.2143, %land.lhs.true.2138, %if.end.2133
  br label %if.end.2146

if.end.2146:                                      ; preds = %if.end.2145, %if.then.1939
  br label %if.end.2147

if.end.2147:                                      ; preds = %if.end.2146, %if.then.1932
  %903 = load i32, i32* %win, align 4
  %tobool2148 = icmp ne i32 %903, 0
  br i1 %tobool2148, label %if.end.2202, label %land.lhs.true.2149

land.lhs.true.2149:                               ; preds = %if.end.2147
  %904 = load i32, i32* %did_match, align 4
  %tobool2150 = icmp ne i32 %904, 0
  br i1 %tobool2150, label %if.end.2202, label %land.lhs.true.2151

land.lhs.true.2151:                               ; preds = %land.lhs.true.2149
  %905 = load i32, i32* %i, align 4
  %idxprom2152 = sext i32 %905 to i64
  %arrayidx2153 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2152
  %906 = load i32, i32* %arrayidx2153, align 4
  %cmp2154 = icmp ne i32 %906, 0
  br i1 %cmp2154, label %land.lhs.true.2156, label %if.end.2202

land.lhs.true.2156:                               ; preds = %land.lhs.true.2151
  %907 = load i32, i32* %i, align 4
  %idxprom2157 = sext i32 %907 to i64
  %arrayidx2158 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom2157
  %908 = load i32, i32* %arrayidx2158, align 4
  %idxprom2159 = sext i32 %908 to i64
  %arrayidx2160 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2159
  %909 = load i8, i8* %arrayidx2160, align 1
  %conv2161 = zext i8 %909 to i32
  %910 = load i32, i32* @target_flags, align 4
  %and2162 = and i32 %910, 33554432
  %tobool2163 = icmp ne i32 %and2162, 0
  %cond2164 = select i1 %tobool2163, i32 8, i32 4
  %cmp2165 = icmp sle i32 %conv2161, %cond2164
  br i1 %cmp2165, label %land.lhs.true.2167, label %if.end.2202

land.lhs.true.2167:                               ; preds = %land.lhs.true.2156
  %911 = load i32, i32* %i, align 4
  %idxprom2168 = sext i32 %911 to i64
  %arrayidx2169 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2168
  %912 = load i32, i32* %arrayidx2169, align 4
  %idxprom2170 = sext i32 %912 to i64
  %arrayidx2171 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom2170
  %913 = load i32, i32* %arrayidx2171, align 4
  %cmp2172 = icmp ugt i32 %913, 1
  br i1 %cmp2172, label %if.then.2174, label %if.end.2202

if.then.2174:                                     ; preds = %land.lhs.true.2167
  %914 = load i32, i32* %i, align 4
  %idxprom2175 = sext i32 %914 to i64
  %arrayidx2176 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2175
  %915 = load i32, i32* %arrayidx2176, align 4
  %916 = load i32, i32* %i, align 4
  %idxprom2177 = sext i32 %916 to i64
  %arrayidx2178 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2177
  %917 = load i32, i32* %arrayidx2178, align 4
  %call2179 = call i32 @reg_class_subset_p(i32 %915, i32 %917)
  %tobool2180 = icmp ne i32 %call2179, 0
  br i1 %tobool2180, label %if.end.2201, label %if.then.2181

if.then.2181:                                     ; preds = %if.then.2174
  %918 = load i32, i32* %i, align 4
  %idxprom2182 = sext i32 %918 to i64
  %arrayidx2183 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2182
  %919 = load i32, i32* %arrayidx2183, align 4
  %920 = load i32, i32* %i, align 4
  %idxprom2184 = sext i32 %920 to i64
  %arrayidx2185 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2184
  %921 = load i32, i32* %arrayidx2185, align 4
  %call2186 = call i32 @reg_class_subset_p(i32 %919, i32 %921)
  %tobool2187 = icmp ne i32 %call2186, 0
  br i1 %tobool2187, label %if.then.2188, label %if.else.2193

if.then.2188:                                     ; preds = %if.then.2181
  %922 = load i32, i32* %i, align 4
  %idxprom2189 = sext i32 %922 to i64
  %arrayidx2190 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2189
  %923 = load i32, i32* %arrayidx2190, align 4
  %924 = load i32, i32* %i, align 4
  %idxprom2191 = sext i32 %924 to i64
  %arrayidx2192 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2191
  store i32 %923, i32* %arrayidx2192, align 4
  br label %if.end.2200

if.else.2193:                                     ; preds = %if.then.2181
  %925 = load i32, i32* %i, align 4
  %idxprom2194 = sext i32 %925 to i64
  %arrayidx2195 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom2194
  %926 = load i8, i8* %arrayidx2195, align 1
  %conv2196 = sext i8 %926 to i32
  %mul2197 = mul nsw i32 2, %conv2196
  %add2198 = add nsw i32 2, %mul2197
  %927 = load i32, i32* %reject, align 4
  %add2199 = add nsw i32 %927, %add2198
  store i32 %add2199, i32* %reject, align 4
  br label %if.end.2200

if.end.2200:                                      ; preds = %if.else.2193, %if.then.2188
  br label %if.end.2201

if.end.2201:                                      ; preds = %if.end.2200, %if.then.2174
  br label %if.end.2202

if.end.2202:                                      ; preds = %if.end.2201, %land.lhs.true.2167, %land.lhs.true.2156, %land.lhs.true.2151, %land.lhs.true.2149, %if.end.2147
  br label %for.inc.2203

for.inc.2203:                                     ; preds = %if.end.2202
  %928 = load i32, i32* %i, align 4
  %inc2204 = add nsw i32 %928, 1
  store i32 %inc2204, i32* %i, align 4
  br label %for.cond.607

for.end.2205:                                     ; preds = %for.cond.607
  store i32 0, i32* %i, align 4
  br label %for.cond.2206

for.cond.2206:                                    ; preds = %for.inc.2354, %for.end.2205
  %929 = load i32, i32* %i, align 4
  %930 = load i32, i32* %noperands, align 4
  %cmp2207 = icmp slt i32 %929, %930
  br i1 %cmp2207, label %for.body.2209, label %for.end.2356

for.body.2209:                                    ; preds = %for.cond.2206
  %931 = load i32, i32* %i, align 4
  %idxprom2210 = sext i32 %931 to i64
  %arrayidx2211 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom2210
  %932 = load i8, i8* %arrayidx2211, align 1
  %conv2212 = sext i8 %932 to i32
  %tobool2213 = icmp ne i32 %conv2212, 0
  br i1 %tobool2213, label %land.lhs.true.2214, label %if.end.2353

land.lhs.true.2214:                               ; preds = %for.body.2209
  %933 = load i32, i32* %i, align 4
  %idxprom2215 = sext i32 %933 to i64
  %arrayidx2216 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2215
  %934 = load i8, i8* %arrayidx2216, align 1
  %conv2217 = sext i8 %934 to i32
  %tobool2218 = icmp ne i32 %conv2217, 0
  br i1 %tobool2218, label %if.then.2224, label %lor.lhs.false.2219

lor.lhs.false.2219:                               ; preds = %land.lhs.true.2214
  %935 = load i32, i32* %i, align 4
  %idxprom2220 = sext i32 %935 to i64
  %arrayidx2221 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2220
  %936 = load i8, i8* %arrayidx2221, align 1
  %conv2222 = sext i8 %936 to i32
  %tobool2223 = icmp ne i32 %conv2222, 0
  br i1 %tobool2223, label %if.then.2224, label %if.end.2353

if.then.2224:                                     ; preds = %lor.lhs.false.2219, %land.lhs.true.2214
  %937 = load i32, i32* %i, align 4
  %idxprom2225 = sext i32 %937 to i64
  %arrayidx2226 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2225
  %938 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2226, align 8
  call void @decompose(%struct.decomposition* sret %tmp, %struct.rtx_def* %938)
  %939 = bitcast %struct.decomposition* %early_data to i8*
  %940 = bitcast %struct.decomposition* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %939, i8* %940, i64 32, i32 8, i1 false)
  %941 = load i32, i32* %i, align 4
  %idxprom2227 = sext i32 %941 to i64
  %arrayidx2228 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2227
  %942 = load i32, i32* %arrayidx2228, align 4
  %cmp2229 = icmp eq i32 %942, 0
  br i1 %cmp2229, label %if.then.2231, label %if.end.2232

if.then.2231:                                     ; preds = %if.then.2224
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 3403, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.end.2232:                                      ; preds = %if.then.2224
  %943 = load i32, i32* %i, align 4
  %idxprom2233 = sext i32 %943 to i64
  %arrayidx2234 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2233
  %944 = load i32, i32* %arrayidx2234, align 4
  %cmp2235 = icmp eq i32 %944, 0
  br i1 %cmp2235, label %if.then.2237, label %if.end.2244

if.then.2237:                                     ; preds = %if.end.2232
  %945 = load i32, i32* %i, align 4
  %idxprom2238 = sext i32 %945 to i64
  %arrayidx2239 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom2238
  store i8 0, i8* %arrayidx2239, align 1
  %946 = load i32, i32* @this_insn_is_asm, align 4
  %tobool2240 = icmp ne i32 %946, 0
  br i1 %tobool2240, label %if.then.2241, label %if.else.2242

if.then.2241:                                     ; preds = %if.then.2237
  %947 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %947, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end.2243

if.else.2242:                                     ; preds = %if.then.2237
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 3412, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.end.2243:                                      ; preds = %if.then.2241
  br label %if.end.2244

if.end.2244:                                      ; preds = %if.end.2243, %if.end.2232
  store i32 0, i32* %j, align 4
  br label %for.cond.2245

for.cond.2245:                                    ; preds = %for.inc.2318, %if.end.2244
  %948 = load i32, i32* %j, align 4
  %949 = load i32, i32* %noperands, align 4
  %cmp2246 = icmp slt i32 %948, %949
  br i1 %cmp2246, label %for.body.2248, label %for.end.2320

for.body.2248:                                    ; preds = %for.cond.2245
  %950 = load i32, i32* %j, align 4
  %idxprom2249 = sext i32 %950 to i64
  %arrayidx2250 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2249
  %951 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2250, align 8
  %952 = bitcast %struct.rtx_def* %951 to i32*
  %bf.load2251 = load i32, i32* %952, align 8
  %bf.clear2252 = and i32 %bf.load2251, 65535
  %cmp2253 = icmp eq i32 %bf.clear2252, 66
  br i1 %cmp2253, label %land.lhs.true.2260, label %lor.lhs.false.2255

lor.lhs.false.2255:                               ; preds = %for.body.2248
  %953 = load i32, i32* %j, align 4
  %idxprom2256 = sext i32 %953 to i64
  %arrayidx2257 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2256
  %954 = load i32, i32* %arrayidx2257, align 4
  %cmp2258 = icmp ne i32 %954, 2
  br i1 %cmp2258, label %land.lhs.true.2260, label %if.end.2317

land.lhs.true.2260:                               ; preds = %lor.lhs.false.2255, %for.body.2248
  %955 = load i32, i32* %j, align 4
  %956 = load i32, i32* %i, align 4
  %cmp2261 = icmp ne i32 %955, %956
  br i1 %cmp2261, label %land.lhs.true.2263, label %if.end.2317

land.lhs.true.2263:                               ; preds = %land.lhs.true.2260
  %957 = load i32, i32* %j, align 4
  %idxprom2264 = sext i32 %957 to i64
  %arrayidx2265 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i32 0, i64 %idxprom2264
  %958 = load i8*, i8** %arrayidx2265, align 8
  %959 = load i8, i8* %958, align 1
  %conv2266 = sext i8 %959 to i32
  %cmp2267 = icmp ne i32 %conv2266, 0
  br i1 %cmp2267, label %land.lhs.true.2269, label %if.end.2317

land.lhs.true.2269:                               ; preds = %land.lhs.true.2263
  %960 = load i32, i32* %j, align 4
  %idxprom2270 = sext i32 %960 to i64
  %arrayidx2271 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom2270
  %961 = load i32, i32* %arrayidx2271, align 4
  %962 = load i32, i32* %i, align 4
  %cmp2272 = icmp eq i32 %961, %962
  br i1 %cmp2272, label %land.lhs.true.2274, label %land.lhs.true.2281

land.lhs.true.2274:                               ; preds = %land.lhs.true.2269
  %963 = load i32, i32* %i, align 4
  %idxprom2275 = sext i32 %963 to i64
  %arrayidx2276 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2275
  %964 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2276, align 8
  %965 = load i32, i32* %j, align 4
  %idxprom2277 = sext i32 %965 to i64
  %arrayidx2278 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2277
  %966 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2278, align 8
  %call2279 = call i32 @rtx_equal_p(%struct.rtx_def* %964, %struct.rtx_def* %966)
  %tobool2280 = icmp ne i32 %call2279, 0
  br i1 %tobool2280, label %if.end.2317, label %land.lhs.true.2281

land.lhs.true.2281:                               ; preds = %land.lhs.true.2274, %land.lhs.true.2269
  %967 = load i32, i32* %j, align 4
  %idxprom2282 = sext i32 %967 to i64
  %arrayidx2283 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2282
  %968 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2283, align 8
  %969 = load i32, i32* %i, align 4
  %idxprom2284 = sext i32 %969 to i64
  %arrayidx2285 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2284
  %970 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2285, align 8
  %call2286 = call i32 @immune_p(%struct.rtx_def* %968, %struct.rtx_def* %970, %struct.decomposition* byval align 8 %early_data)
  %tobool2287 = icmp ne i32 %call2286, 0
  br i1 %tobool2287, label %if.end.2317, label %if.then.2288

if.then.2288:                                     ; preds = %land.lhs.true.2281
  %971 = load i32, i32* %i, align 4
  %idxprom2289 = sext i32 %971 to i64
  %arrayidx2290 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2289
  %972 = load i32, i32* %arrayidx2290, align 4
  %idxprom2291 = sext i32 %972 to i64
  %arrayidx2292 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom2291
  %973 = load i32, i32* %arrayidx2292, align 4
  %cmp2293 = icmp eq i32 %973, 1
  br i1 %cmp2293, label %land.lhs.true.2295, label %if.else.2315

land.lhs.true.2295:                               ; preds = %if.then.2288
  %974 = load i32, i32* %j, align 4
  %idxprom2296 = sext i32 %974 to i64
  %arrayidx2297 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2296
  %975 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2297, align 8
  %976 = bitcast %struct.rtx_def* %975 to i32*
  %bf.load2298 = load i32, i32* %976, align 8
  %bf.clear2299 = and i32 %bf.load2298, 65535
  %cmp2300 = icmp eq i32 %bf.clear2299, 61
  br i1 %cmp2300, label %if.then.2309, label %lor.lhs.false.2302

lor.lhs.false.2302:                               ; preds = %land.lhs.true.2295
  %977 = load i32, i32* %j, align 4
  %idxprom2303 = sext i32 %977 to i64
  %arrayidx2304 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2303
  %978 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2304, align 8
  %979 = bitcast %struct.rtx_def* %978 to i32*
  %bf.load2305 = load i32, i32* %979, align 8
  %bf.clear2306 = and i32 %bf.load2305, 65535
  %cmp2307 = icmp eq i32 %bf.clear2306, 63
  br i1 %cmp2307, label %if.then.2309, label %if.else.2315

if.then.2309:                                     ; preds = %lor.lhs.false.2302, %land.lhs.true.2295
  %980 = load i32, i32* %losers, align 4
  %inc2310 = add nsw i32 %980, 1
  store i32 %inc2310, i32* %losers, align 4
  %981 = load i32, i32* %j, align 4
  %idxprom2311 = sext i32 %981 to i64
  %arrayidx2312 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2311
  store i8 0, i8* %arrayidx2312, align 1
  %982 = load i32, i32* %j, align 4
  %idxprom2313 = sext i32 %982 to i64
  %arrayidx2314 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2313
  store i8 0, i8* %arrayidx2314, align 1
  br label %if.end.2316

if.else.2315:                                     ; preds = %lor.lhs.false.2302, %if.then.2288
  br label %for.end.2320

if.end.2316:                                      ; preds = %if.then.2309
  br label %if.end.2317

if.end.2317:                                      ; preds = %if.end.2316, %land.lhs.true.2281, %land.lhs.true.2274, %land.lhs.true.2263, %land.lhs.true.2260, %lor.lhs.false.2255
  br label %for.inc.2318

for.inc.2318:                                     ; preds = %if.end.2317
  %983 = load i32, i32* %j, align 4
  %inc2319 = add nsw i32 %983, 1
  store i32 %inc2319, i32* %j, align 4
  br label %for.cond.2245

for.end.2320:                                     ; preds = %if.else.2315, %for.cond.2245
  %984 = load i32, i32* %j, align 4
  %985 = load i32, i32* %noperands, align 4
  %cmp2321 = icmp ne i32 %984, %985
  br i1 %cmp2321, label %if.then.2323, label %if.end.2352

if.then.2323:                                     ; preds = %for.end.2320
  %986 = load i32, i32* %losers, align 4
  %inc2324 = add nsw i32 %986, 1
  store i32 %inc2324, i32* %losers, align 4
  %987 = load i32, i32* %i, align 4
  %idxprom2325 = sext i32 %987 to i64
  %arrayidx2326 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2325
  store i8 0, i8* %arrayidx2326, align 1
  %988 = load i32, i32* %j, align 4
  %idxprom2327 = sext i32 %988 to i64
  %arrayidx2328 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2327
  store i8 0, i8* %arrayidx2328, align 1
  store i32 0, i32* %j, align 4
  br label %for.cond.2329

for.cond.2329:                                    ; preds = %for.inc.2349, %if.then.2323
  %989 = load i32, i32* %j, align 4
  %990 = load i32, i32* %noperands, align 4
  %cmp2330 = icmp slt i32 %989, %990
  br i1 %cmp2330, label %for.body.2332, label %for.end.2351

for.body.2332:                                    ; preds = %for.cond.2329
  %991 = load i32, i32* %j, align 4
  %idxprom2333 = sext i32 %991 to i64
  %arrayidx2334 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom2333
  %992 = load i32, i32* %arrayidx2334, align 4
  %993 = load i32, i32* %i, align 4
  %cmp2335 = icmp eq i32 %992, %993
  br i1 %cmp2335, label %land.lhs.true.2337, label %if.end.2348

land.lhs.true.2337:                               ; preds = %for.body.2332
  %994 = load i32, i32* %j, align 4
  %idxprom2338 = sext i32 %994 to i64
  %arrayidx2339 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2338
  %995 = load i8, i8* %arrayidx2339, align 1
  %conv2340 = sext i8 %995 to i32
  %tobool2341 = icmp ne i32 %conv2340, 0
  br i1 %tobool2341, label %if.then.2342, label %if.end.2348

if.then.2342:                                     ; preds = %land.lhs.true.2337
  %996 = load i32, i32* %j, align 4
  %idxprom2343 = sext i32 %996 to i64
  %arrayidx2344 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2343
  store i8 0, i8* %arrayidx2344, align 1
  %997 = load i32, i32* %j, align 4
  %idxprom2345 = sext i32 %997 to i64
  %arrayidx2346 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2345
  store i8 0, i8* %arrayidx2346, align 1
  %998 = load i32, i32* %losers, align 4
  %inc2347 = add nsw i32 %998, 1
  store i32 %inc2347, i32* %losers, align 4
  br label %if.end.2348

if.end.2348:                                      ; preds = %if.then.2342, %land.lhs.true.2337, %for.body.2332
  br label %for.inc.2349

for.inc.2349:                                     ; preds = %if.end.2348
  %999 = load i32, i32* %j, align 4
  %inc2350 = add nsw i32 %999, 1
  store i32 %inc2350, i32* %j, align 4
  br label %for.cond.2329

for.end.2351:                                     ; preds = %for.cond.2329
  br label %if.end.2352

if.end.2352:                                      ; preds = %for.end.2351, %for.end.2320
  br label %if.end.2353

if.end.2353:                                      ; preds = %if.end.2352, %lor.lhs.false.2219, %for.body.2209
  br label %for.inc.2354

for.inc.2354:                                     ; preds = %if.end.2353
  %1000 = load i32, i32* %i, align 4
  %inc2355 = add nsw i32 %1000, 1
  store i32 %inc2355, i32* %i, align 4
  br label %for.cond.2206

for.end.2356:                                     ; preds = %for.cond.2206
  %1001 = load i32, i32* %losers, align 4
  %cmp2357 = icmp eq i32 %1001, 0
  br i1 %cmp2357, label %if.then.2359, label %if.end.2405

if.then.2359:                                     ; preds = %for.end.2356
  %1002 = load i32, i32* %commutative, align 4
  %cmp2360 = icmp sge i32 %1002, 0
  br i1 %cmp2360, label %if.then.2362, label %if.end.2373

if.then.2362:                                     ; preds = %if.then.2359
  %1003 = load i32, i32* %commutative, align 4
  %idxprom2363 = sext i32 %1003 to i64
  %arrayidx2364 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2363
  %1004 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2364, align 8
  %1005 = load i32, i32* %commutative, align 4
  %idxprom2365 = sext i32 %1005 to i64
  %arrayidx2366 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2365
  store %struct.rtx_def* %1004, %struct.rtx_def** %arrayidx2366, align 8
  %1006 = load i32, i32* %commutative, align 4
  %add2367 = add nsw i32 %1006, 1
  %idxprom2368 = sext i32 %add2367 to i64
  %arrayidx2369 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2368
  %1007 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2369, align 8
  %1008 = load i32, i32* %commutative, align 4
  %add2370 = add nsw i32 %1008, 1
  %idxprom2371 = sext i32 %add2370 to i64
  %arrayidx2372 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2371
  store %struct.rtx_def* %1007, %struct.rtx_def** %arrayidx2372, align 8
  br label %if.end.2373

if.end.2373:                                      ; preds = %if.then.2362, %if.then.2359
  store i32 0, i32* %i, align 4
  br label %for.cond.2374

for.cond.2374:                                    ; preds = %for.inc.2402, %if.end.2373
  %1009 = load i32, i32* %i, align 4
  %1010 = load i32, i32* %noperands, align 4
  %cmp2375 = icmp slt i32 %1009, %1010
  br i1 %cmp2375, label %for.body.2377, label %for.end.2404

for.body.2377:                                    ; preds = %for.cond.2374
  %1011 = load i32, i32* %i, align 4
  %idxprom2378 = sext i32 %1011 to i64
  %arrayidx2379 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2378
  %1012 = load i8, i8* %arrayidx2379, align 1
  %1013 = load i32, i32* %i, align 4
  %idxprom2380 = sext i32 %1013 to i64
  %arrayidx2381 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2380
  store i8 %1012, i8* %arrayidx2381, align 1
  %1014 = load i32, i32* %i, align 4
  %idxprom2382 = sext i32 %1014 to i64
  %arrayidx2383 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2382
  %1015 = load i8, i8* %arrayidx2383, align 1
  %1016 = load i32, i32* %i, align 4
  %idxprom2384 = sext i32 %1016 to i64
  %arrayidx2385 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_match_win, i32 0, i64 %idxprom2384
  store i8 %1015, i8* %arrayidx2385, align 1
  %1017 = load i32, i32* %i, align 4
  %idxprom2386 = sext i32 %1017 to i64
  %arrayidx2387 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2386
  %1018 = load i32, i32* %arrayidx2387, align 4
  %1019 = load i32, i32* %i, align 4
  %idxprom2388 = sext i32 %1019 to i64
  %arrayidx2389 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom2388
  store i32 %1018, i32* %arrayidx2389, align 4
  %1020 = load i32, i32* %i, align 4
  %idxprom2390 = sext i32 %1020 to i64
  %arrayidx2391 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_offmemok, i32 0, i64 %idxprom2390
  %1021 = load i8, i8* %arrayidx2391, align 1
  %1022 = load i32, i32* %i, align 4
  %idxprom2392 = sext i32 %1022 to i64
  %arrayidx2393 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_offmemok, i32 0, i64 %idxprom2392
  store i8 %1021, i8* %arrayidx2393, align 1
  %1023 = load i32, i32* %i, align 4
  %idxprom2394 = sext i32 %1023 to i64
  %arrayidx2395 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom2394
  %1024 = load i32, i32* %arrayidx2395, align 4
  %1025 = load i32, i32* %i, align 4
  %idxprom2396 = sext i32 %1025 to i64
  %arrayidx2397 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom2396
  store i32 %1024, i32* %arrayidx2397, align 4
  %1026 = load i32, i32* %i, align 4
  %idxprom2398 = sext i32 %1026 to i64
  %arrayidx2399 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom2398
  %1027 = load i8, i8* %arrayidx2399, align 1
  %1028 = load i32, i32* %i, align 4
  %idxprom2400 = sext i32 %1028 to i64
  %arrayidx2401 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_earlyclobber, i32 0, i64 %idxprom2400
  store i8 %1027, i8* %arrayidx2401, align 1
  br label %for.inc.2402

for.inc.2402:                                     ; preds = %for.body.2377
  %1029 = load i32, i32* %i, align 4
  %inc2403 = add nsw i32 %1029, 1
  store i32 %inc2403, i32* %i, align 4
  br label %for.cond.2374

for.end.2404:                                     ; preds = %for.cond.2374
  %1030 = load i32, i32* %this_alternative_number, align 4
  store i32 %1030, i32* %goal_alternative_number, align 4
  %1031 = load i32, i32* %swapped, align 4
  store i32 %1031, i32* %goal_alternative_swapped, align 4
  %1032 = load i32, i32* %this_earlyclobber, align 4
  store i32 %1032, i32* %goal_earlyclobber, align 4
  br label %finish

if.end.2405:                                      ; preds = %for.end.2356
  %1033 = load i32, i32* %losers, align 4
  %mul2406 = mul nsw i32 %1033, 6
  %1034 = load i32, i32* %reject, align 4
  %add2407 = add nsw i32 %mul2406, %1034
  store i32 %add2407, i32* %losers, align 4
  %1035 = load i32, i32* %bad, align 4
  %tobool2408 = icmp ne i32 %1035, 0
  br i1 %tobool2408, label %if.end.2444, label %land.lhs.true.2409

land.lhs.true.2409:                               ; preds = %if.end.2405
  %1036 = load i32, i32* %best, align 4
  %1037 = load i32, i32* %losers, align 4
  %cmp2410 = icmp sgt i32 %1036, %1037
  br i1 %cmp2410, label %if.then.2412, label %if.end.2444

if.then.2412:                                     ; preds = %land.lhs.true.2409
  store i32 0, i32* %i, align 4
  br label %for.cond.2413

for.cond.2413:                                    ; preds = %for.inc.2441, %if.then.2412
  %1038 = load i32, i32* %i, align 4
  %1039 = load i32, i32* %noperands, align 4
  %cmp2414 = icmp slt i32 %1038, %1039
  br i1 %cmp2414, label %for.body.2416, label %for.end.2443

for.body.2416:                                    ; preds = %for.cond.2413
  %1040 = load i32, i32* %i, align 4
  %idxprom2417 = sext i32 %1040 to i64
  %arrayidx2418 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative, i32 0, i64 %idxprom2417
  %1041 = load i32, i32* %arrayidx2418, align 4
  %1042 = load i32, i32* %i, align 4
  %idxprom2419 = sext i32 %1042 to i64
  %arrayidx2420 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom2419
  store i32 %1041, i32* %arrayidx2420, align 4
  %1043 = load i32, i32* %i, align 4
  %idxprom2421 = sext i32 %1043 to i64
  %arrayidx2422 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_win, i32 0, i64 %idxprom2421
  %1044 = load i8, i8* %arrayidx2422, align 1
  %1045 = load i32, i32* %i, align 4
  %idxprom2423 = sext i32 %1045 to i64
  %arrayidx2424 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2423
  store i8 %1044, i8* %arrayidx2424, align 1
  %1046 = load i32, i32* %i, align 4
  %idxprom2425 = sext i32 %1046 to i64
  %arrayidx2426 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_match_win, i32 0, i64 %idxprom2425
  %1047 = load i8, i8* %arrayidx2426, align 1
  %1048 = load i32, i32* %i, align 4
  %idxprom2427 = sext i32 %1048 to i64
  %arrayidx2428 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_match_win, i32 0, i64 %idxprom2427
  store i8 %1047, i8* %arrayidx2428, align 1
  %1049 = load i32, i32* %i, align 4
  %idxprom2429 = sext i32 %1049 to i64
  %arrayidx2430 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_offmemok, i32 0, i64 %idxprom2429
  %1050 = load i8, i8* %arrayidx2430, align 1
  %1051 = load i32, i32* %i, align 4
  %idxprom2431 = sext i32 %1051 to i64
  %arrayidx2432 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_offmemok, i32 0, i64 %idxprom2431
  store i8 %1050, i8* %arrayidx2432, align 1
  %1052 = load i32, i32* %i, align 4
  %idxprom2433 = sext i32 %1052 to i64
  %arrayidx2434 = getelementptr inbounds [30 x i32], [30 x i32]* %this_alternative_matches, i32 0, i64 %idxprom2433
  %1053 = load i32, i32* %arrayidx2434, align 4
  %1054 = load i32, i32* %i, align 4
  %idxprom2435 = sext i32 %1054 to i64
  %arrayidx2436 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom2435
  store i32 %1053, i32* %arrayidx2436, align 4
  %1055 = load i32, i32* %i, align 4
  %idxprom2437 = sext i32 %1055 to i64
  %arrayidx2438 = getelementptr inbounds [30 x i8], [30 x i8]* %this_alternative_earlyclobber, i32 0, i64 %idxprom2437
  %1056 = load i8, i8* %arrayidx2438, align 1
  %1057 = load i32, i32* %i, align 4
  %idxprom2439 = sext i32 %1057 to i64
  %arrayidx2440 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_earlyclobber, i32 0, i64 %idxprom2439
  store i8 %1056, i8* %arrayidx2440, align 1
  br label %for.inc.2441

for.inc.2441:                                     ; preds = %for.body.2416
  %1058 = load i32, i32* %i, align 4
  %inc2442 = add nsw i32 %1058, 1
  store i32 %inc2442, i32* %i, align 4
  br label %for.cond.2413

for.end.2443:                                     ; preds = %for.cond.2413
  %1059 = load i32, i32* %swapped, align 4
  store i32 %1059, i32* %goal_alternative_swapped, align 4
  %1060 = load i32, i32* %losers, align 4
  store i32 %1060, i32* %best, align 4
  %1061 = load i32, i32* %this_alternative_number, align 4
  store i32 %1061, i32* %goal_alternative_number, align 4
  %1062 = load i32, i32* %this_earlyclobber, align 4
  store i32 %1062, i32* %goal_earlyclobber, align 4
  br label %if.end.2444

if.end.2444:                                      ; preds = %for.end.2443, %land.lhs.true.2409, %if.end.2405
  br label %for.inc.2445

for.inc.2445:                                     ; preds = %if.end.2444
  %1063 = load i32, i32* %this_alternative_number, align 4
  %inc2446 = add nsw i32 %1063, 1
  store i32 %inc2446, i32* %this_alternative_number, align 4
  br label %for.cond.603

for.end.2447:                                     ; preds = %for.cond.603
  %1064 = load i32, i32* %commutative, align 4
  %cmp2448 = icmp sge i32 %1064, 0
  br i1 %cmp2448, label %if.then.2450, label %if.end.2560

if.then.2450:                                     ; preds = %for.end.2447
  %1065 = load i32, i32* %swapped, align 4
  %tobool2451 = icmp ne i32 %1065, 0
  %lnot = xor i1 %tobool2451, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %swapped, align 4
  %1066 = load i32, i32* %swapped, align 4
  %tobool2452 = icmp ne i32 %1066, 0
  br i1 %tobool2452, label %if.then.2453, label %if.else.2519

if.then.2453:                                     ; preds = %if.then.2450
  %1067 = load i32, i32* %commutative, align 4
  %add2456 = add nsw i32 %1067, 1
  %idxprom2457 = sext i32 %add2456 to i64
  %arrayidx2458 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2457
  %1068 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2458, align 8
  %1069 = load i32, i32* %commutative, align 4
  %idxprom2459 = sext i32 %1069 to i64
  %arrayidx2460 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2459
  store %struct.rtx_def* %1068, %struct.rtx_def** %arrayidx2460, align 8
  %1070 = load i32, i32* %commutative, align 4
  %idxprom2461 = sext i32 %1070 to i64
  %arrayidx2462 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2461
  %1071 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2462, align 8
  %1072 = load i32, i32* %commutative, align 4
  %add2463 = add nsw i32 %1072, 1
  %idxprom2464 = sext i32 %add2463 to i64
  %arrayidx2465 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2464
  store %struct.rtx_def* %1071, %struct.rtx_def** %arrayidx2465, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.2466

for.cond.2466:                                    ; preds = %for.inc.2492, %if.then.2453
  %1073 = load i32, i32* %i, align 4
  %1074 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv2467 = sext i8 %1074 to i32
  %cmp2468 = icmp slt i32 %1073, %conv2467
  br i1 %cmp2468, label %for.body.2470, label %for.end.2494

for.body.2470:                                    ; preds = %for.cond.2466
  %1075 = load i32, i32* %i, align 4
  %idxprom2471 = sext i32 %1075 to i64
  %arrayidx2472 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2471
  %1076 = load i8, i8* %arrayidx2472, align 1
  %conv2473 = sext i8 %1076 to i32
  %1077 = load i32, i32* %commutative, align 4
  %cmp2474 = icmp eq i32 %conv2473, %1077
  br i1 %cmp2474, label %if.then.2483, label %lor.lhs.false.2476

lor.lhs.false.2476:                               ; preds = %for.body.2470
  %1078 = load i32, i32* %i, align 4
  %idxprom2477 = sext i32 %1078 to i64
  %arrayidx2478 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2477
  %1079 = load i8, i8* %arrayidx2478, align 1
  %conv2479 = sext i8 %1079 to i32
  %1080 = load i32, i32* %commutative, align 4
  %add2480 = add nsw i32 %1080, 1
  %cmp2481 = icmp eq i32 %conv2479, %add2480
  br i1 %cmp2481, label %if.then.2483, label %if.end.2491

if.then.2483:                                     ; preds = %lor.lhs.false.2476, %for.body.2470
  %1081 = load i32, i32* %i, align 4
  %idxprom2484 = sext i32 %1081 to i64
  %arrayidx2485 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2484
  %1082 = load i8, i8* %arrayidx2485, align 1
  %conv2486 = sext i8 %1082 to i32
  %idxprom2487 = sext i32 %conv2486 to i64
  %arrayidx2488 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2487
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2488, align 8
  %1084 = load i32, i32* %i, align 4
  %idxprom2489 = sext i32 %1084 to i64
  %arrayidx2490 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom2489
  %1085 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2490, align 8
  store %struct.rtx_def* %1083, %struct.rtx_def** %1085, align 8
  br label %if.end.2491

if.end.2491:                                      ; preds = %if.then.2483, %lor.lhs.false.2476
  br label %for.inc.2492

for.inc.2492:                                     ; preds = %if.end.2491
  %1086 = load i32, i32* %i, align 4
  %inc2493 = add nsw i32 %1086, 1
  store i32 %inc2493, i32* %i, align 4
  br label %for.cond.2466

for.end.2494:                                     ; preds = %for.cond.2466
  %1087 = load i32, i32* %commutative, align 4
  %idxprom2495 = sext i32 %1087 to i64
  %arrayidx2496 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2495
  %1088 = load i32, i32* %arrayidx2496, align 4
  store i32 %1088, i32* %tclass, align 4
  %1089 = load i32, i32* %commutative, align 4
  %add2497 = add nsw i32 %1089, 1
  %idxprom2498 = sext i32 %add2497 to i64
  %arrayidx2499 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2498
  %1090 = load i32, i32* %arrayidx2499, align 4
  %1091 = load i32, i32* %commutative, align 4
  %idxprom2500 = sext i32 %1091 to i64
  %arrayidx2501 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2500
  store i32 %1090, i32* %arrayidx2501, align 4
  %1092 = load i32, i32* %tclass, align 4
  %1093 = load i32, i32* %commutative, align 4
  %add2502 = add nsw i32 %1093, 1
  %idxprom2503 = sext i32 %add2502 to i64
  %arrayidx2504 = getelementptr inbounds [30 x i32], [30 x i32]* %preferred_class, i32 0, i64 %idxprom2503
  store i32 %1092, i32* %arrayidx2504, align 4
  %1094 = load i32, i32* %commutative, align 4
  %idxprom2505 = sext i32 %1094 to i64
  %arrayidx2506 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom2505
  %1095 = load i8, i8* %arrayidx2506, align 1
  %conv2507 = sext i8 %1095 to i32
  store i32 %conv2507, i32* %t, align 4
  %1096 = load i32, i32* %commutative, align 4
  %add2508 = add nsw i32 %1096, 1
  %idxprom2509 = sext i32 %add2508 to i64
  %arrayidx2510 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom2509
  %1097 = load i8, i8* %arrayidx2510, align 1
  %1098 = load i32, i32* %commutative, align 4
  %idxprom2511 = sext i32 %1098 to i64
  %arrayidx2512 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom2511
  store i8 %1097, i8* %arrayidx2512, align 1
  %1099 = load i32, i32* %t, align 4
  %conv2513 = trunc i32 %1099 to i8
  %1100 = load i32, i32* %commutative, align 4
  %add2514 = add nsw i32 %1100, 1
  %idxprom2515 = sext i32 %add2514 to i64
  %arrayidx2516 = getelementptr inbounds [30 x i8], [30 x i8]* %pref_or_nothing, i32 0, i64 %idxprom2515
  store i8 %conv2513, i8* %arrayidx2516, align 1
  %1101 = bitcast [30 x i8*]* %constraints to i8*
  %1102 = load i32, i32* %noperands, align 4
  %conv2517 = sext i32 %1102 to i64
  %mul2518 = mul i64 %conv2517, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1101, i8* bitcast ([30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2) to i8*), i64 %mul2518, i32 8, i1 false)
  br label %try_swapped

if.else.2519:                                     ; preds = %if.then.2450
  %1103 = load i32, i32* %commutative, align 4
  %idxprom2520 = sext i32 %1103 to i64
  %arrayidx2521 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2520
  %1104 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2521, align 8
  %1105 = load i32, i32* %commutative, align 4
  %idxprom2522 = sext i32 %1105 to i64
  %arrayidx2523 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2522
  store %struct.rtx_def* %1104, %struct.rtx_def** %arrayidx2523, align 8
  %1106 = load i32, i32* %commutative, align 4
  %add2524 = add nsw i32 %1106, 1
  %idxprom2525 = sext i32 %add2524 to i64
  %arrayidx2526 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2525
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2526, align 8
  %1108 = load i32, i32* %commutative, align 4
  %add2527 = add nsw i32 %1108, 1
  %idxprom2528 = sext i32 %add2527 to i64
  %arrayidx2529 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2528
  store %struct.rtx_def* %1107, %struct.rtx_def** %arrayidx2529, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.2530

for.cond.2530:                                    ; preds = %for.inc.2556, %if.else.2519
  %1109 = load i32, i32* %i, align 4
  %1110 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1
  %conv2531 = sext i8 %1110 to i32
  %cmp2532 = icmp slt i32 %1109, %conv2531
  br i1 %cmp2532, label %for.body.2534, label %for.end.2558

for.body.2534:                                    ; preds = %for.cond.2530
  %1111 = load i32, i32* %i, align 4
  %idxprom2535 = sext i32 %1111 to i64
  %arrayidx2536 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2535
  %1112 = load i8, i8* %arrayidx2536, align 1
  %conv2537 = sext i8 %1112 to i32
  %1113 = load i32, i32* %commutative, align 4
  %cmp2538 = icmp eq i32 %conv2537, %1113
  br i1 %cmp2538, label %if.then.2547, label %lor.lhs.false.2540

lor.lhs.false.2540:                               ; preds = %for.body.2534
  %1114 = load i32, i32* %i, align 4
  %idxprom2541 = sext i32 %1114 to i64
  %arrayidx2542 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2541
  %1115 = load i8, i8* %arrayidx2542, align 1
  %conv2543 = sext i8 %1115 to i32
  %1116 = load i32, i32* %commutative, align 4
  %add2544 = add nsw i32 %1116, 1
  %cmp2545 = icmp eq i32 %conv2543, %add2544
  br i1 %cmp2545, label %if.then.2547, label %if.end.2555

if.then.2547:                                     ; preds = %lor.lhs.false.2540, %for.body.2534
  %1117 = load i32, i32* %i, align 4
  %idxprom2548 = sext i32 %1117 to i64
  %arrayidx2549 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom2548
  %1118 = load i8, i8* %arrayidx2549, align 1
  %conv2550 = sext i8 %1118 to i32
  %idxprom2551 = sext i32 %conv2550 to i64
  %arrayidx2552 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2551
  %1119 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2552, align 8
  %1120 = load i32, i32* %i, align 4
  %idxprom2553 = sext i32 %1120 to i64
  %arrayidx2554 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom2553
  %1121 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2554, align 8
  store %struct.rtx_def* %1119, %struct.rtx_def** %1121, align 8
  br label %if.end.2555

if.end.2555:                                      ; preds = %if.then.2547, %lor.lhs.false.2540
  br label %for.inc.2556

for.inc.2556:                                     ; preds = %if.end.2555
  %1122 = load i32, i32* %i, align 4
  %inc2557 = add nsw i32 %1122, 1
  store i32 %inc2557, i32* %i, align 4
  br label %for.cond.2530

for.end.2558:                                     ; preds = %for.cond.2530
  br label %if.end.2559

if.end.2559:                                      ; preds = %for.end.2558
  br label %if.end.2560

if.end.2560:                                      ; preds = %if.end.2559, %for.end.2447
  %1123 = load i32, i32* %best, align 4
  %cmp2561 = icmp eq i32 %1123, 660
  br i1 %cmp2561, label %if.then.2563, label %if.end.2572

if.then.2563:                                     ; preds = %if.end.2560
  %1124 = load i32, i32* %insn_code_number, align 4
  %cmp2564 = icmp sge i32 %1124, 0
  br i1 %cmp2564, label %if.then.2566, label %if.end.2567

if.then.2566:                                     ; preds = %if.then.2563
  %1125 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @_fatal_insn(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), %struct.rtx_def* %1125, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 3578, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.end.2567:                                      ; preds = %if.then.2563
  %1126 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %1126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i32 0, i32 0))
  %1127 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call2568 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %1127)
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1128, i32 0, i32 1
  %arrayidx2570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2569, i32 0, i64 3
  %rtx2571 = bitcast %union.rtunion_def* %arrayidx2570 to %struct.rtx_def**
  store %struct.rtx_def* %call2568, %struct.rtx_def** %rtx2571, align 8
  store i32 0, i32* @n_reloads, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2572:                                      ; preds = %if.end.2560
  br label %finish

finish:                                           ; preds = %if.end.2572, %for.end.2404
  store i32 0, i32* %i, align 4
  br label %for.cond.2573

for.cond.2573:                                    ; preds = %for.inc.2579, %finish
  %1129 = load i32, i32* %i, align 4
  %1130 = load i32, i32* %noperands, align 4
  %cmp2574 = icmp slt i32 %1129, %1130
  br i1 %cmp2574, label %for.body.2576, label %for.end.2581

for.body.2576:                                    ; preds = %for.cond.2573
  %1131 = load i32, i32* %i, align 4
  %idxprom2577 = sext i32 %1131 to i64
  %arrayidx2578 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom2577
  store i32 -1, i32* %arrayidx2578, align 4
  br label %for.inc.2579

for.inc.2579:                                     ; preds = %for.body.2576
  %1132 = load i32, i32* %i, align 4
  %inc2580 = add nsw i32 %1132, 1
  store i32 %inc2580, i32* %i, align 4
  br label %for.cond.2573

for.end.2581:                                     ; preds = %for.cond.2573
  store i32 0, i32* %i, align 4
  br label %for.cond.2582

for.cond.2582:                                    ; preds = %for.inc.2600, %for.end.2581
  %1133 = load i32, i32* %i, align 4
  %1134 = load i32, i32* %noperands, align 4
  %cmp2583 = icmp slt i32 %1133, %1134
  br i1 %cmp2583, label %for.body.2585, label %for.end.2602

for.body.2585:                                    ; preds = %for.cond.2582
  %1135 = load i32, i32* %i, align 4
  %idxprom2586 = sext i32 %1135 to i64
  %arrayidx2587 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2586
  %1136 = load i8, i8* %arrayidx2587, align 1
  %tobool2588 = icmp ne i8 %1136, 0
  br i1 %tobool2588, label %if.end.2599, label %land.lhs.true.2589

land.lhs.true.2589:                               ; preds = %for.body.2585
  %1137 = load i32, i32* %i, align 4
  %idxprom2590 = sext i32 %1137 to i64
  %arrayidx2591 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom2590
  %1138 = load i32, i32* %arrayidx2591, align 4
  %cmp2592 = icmp sge i32 %1138, 0
  br i1 %cmp2592, label %if.then.2594, label %if.end.2599

if.then.2594:                                     ; preds = %land.lhs.true.2589
  %1139 = load i32, i32* %i, align 4
  %1140 = load i32, i32* %i, align 4
  %idxprom2595 = sext i32 %1140 to i64
  %arrayidx2596 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom2595
  %1141 = load i32, i32* %arrayidx2596, align 4
  %idxprom2597 = sext i32 %1141 to i64
  %arrayidx2598 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom2597
  store i32 %1139, i32* %arrayidx2598, align 4
  br label %if.end.2599

if.end.2599:                                      ; preds = %if.then.2594, %land.lhs.true.2589, %for.body.2585
  br label %for.inc.2600

for.inc.2600:                                     ; preds = %if.end.2599
  %1142 = load i32, i32* %i, align 4
  %inc2601 = add nsw i32 %1142, 1
  store i32 %inc2601, i32* %i, align 4
  br label %for.cond.2582

for.end.2602:                                     ; preds = %for.cond.2582
  store i32 0, i32* %i, align 4
  br label %for.cond.2603

for.cond.2603:                                    ; preds = %for.inc.2615, %for.end.2602
  %1143 = load i32, i32* %i, align 4
  %1144 = load i32, i32* %noperands, align 4
  %cmp2604 = icmp slt i32 %1143, %1144
  br i1 %cmp2604, label %for.body.2606, label %for.end.2617

for.body.2606:                                    ; preds = %for.cond.2603
  %1145 = load i32, i32* %i, align 4
  %idxprom2607 = sext i32 %1145 to i64
  %arrayidx2608 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_match_win, i32 0, i64 %idxprom2607
  %1146 = load i8, i8* %arrayidx2608, align 1
  %conv2609 = sext i8 %1146 to i32
  %1147 = load i32, i32* %i, align 4
  %idxprom2610 = sext i32 %1147 to i64
  %arrayidx2611 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2610
  %1148 = load i8, i8* %arrayidx2611, align 1
  %conv2612 = sext i8 %1148 to i32
  %or2613 = or i32 %conv2612, %conv2609
  %conv2614 = trunc i32 %or2613 to i8
  store i8 %conv2614, i8* %arrayidx2611, align 1
  br label %for.inc.2615

for.inc.2615:                                     ; preds = %for.body.2606
  %1149 = load i32, i32* %i, align 4
  %inc2616 = add nsw i32 %1149, 1
  store i32 %inc2616, i32* %i, align 4
  br label %for.cond.2603

for.end.2617:                                     ; preds = %for.cond.2603
  %1150 = load i32, i32* %goal_alternative_swapped, align 4
  %tobool2618 = icmp ne i32 %1150, 0
  br i1 %tobool2618, label %if.then.2619, label %if.end.2680

if.then.2619:                                     ; preds = %for.end.2617
  %1151 = load i32, i32* %commutative, align 4
  %idxprom2621 = sext i32 %1151 to i64
  %arrayidx2622 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2621
  %1152 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2622, align 8
  store %struct.rtx_def* %1152, %struct.rtx_def** %tem, align 8
  %1153 = load i32, i32* %commutative, align 4
  %add2623 = add nsw i32 %1153, 1
  %idxprom2624 = sext i32 %add2623 to i64
  %arrayidx2625 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2624
  %1154 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2625, align 8
  %1155 = load i32, i32* %commutative, align 4
  %idxprom2626 = sext i32 %1155 to i64
  %arrayidx2627 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2626
  store %struct.rtx_def* %1154, %struct.rtx_def** %arrayidx2627, align 8
  %1156 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %1157 = load i32, i32* %commutative, align 4
  %add2628 = add nsw i32 %1157, 1
  %idxprom2629 = sext i32 %add2628 to i64
  %arrayidx2630 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2629
  store %struct.rtx_def* %1156, %struct.rtx_def** %arrayidx2630, align 8
  %1158 = load i32, i32* %commutative, align 4
  %idxprom2631 = sext i32 %1158 to i64
  %arrayidx2632 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2631
  %1159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2632, align 8
  store %struct.rtx_def* %1159, %struct.rtx_def** %tem, align 8
  %1160 = load i32, i32* %commutative, align 4
  %add2633 = add nsw i32 %1160, 1
  %idxprom2634 = sext i32 %add2633 to i64
  %arrayidx2635 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2634
  %1161 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2635, align 8
  %1162 = load i32, i32* %commutative, align 4
  %idxprom2636 = sext i32 %1162 to i64
  %arrayidx2637 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2636
  store %struct.rtx_def* %1161, %struct.rtx_def** %arrayidx2637, align 8
  %1163 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %1164 = load i32, i32* %commutative, align 4
  %add2638 = add nsw i32 %1164, 1
  %idxprom2639 = sext i32 %add2638 to i64
  %arrayidx2640 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2639
  store %struct.rtx_def* %1163, %struct.rtx_def** %arrayidx2640, align 8
  %1165 = load i32, i32* %commutative, align 4
  %idxprom2641 = sext i32 %1165 to i64
  %arrayidx2642 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2641
  %1166 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2642, align 8
  %1167 = load %struct.rtx_def*, %struct.rtx_def** %1166, align 8
  store %struct.rtx_def* %1167, %struct.rtx_def** %tem, align 8
  %1168 = load i32, i32* %commutative, align 4
  %add2643 = add nsw i32 %1168, 1
  %idxprom2644 = sext i32 %add2643 to i64
  %arrayidx2645 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2644
  %1169 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2645, align 8
  %1170 = load %struct.rtx_def*, %struct.rtx_def** %1169, align 8
  %1171 = load i32, i32* %commutative, align 4
  %idxprom2646 = sext i32 %1171 to i64
  %arrayidx2647 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2646
  %1172 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2647, align 8
  store %struct.rtx_def* %1170, %struct.rtx_def** %1172, align 8
  %1173 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %1174 = load i32, i32* %commutative, align 4
  %add2648 = add nsw i32 %1174, 1
  %idxprom2649 = sext i32 %add2648 to i64
  %arrayidx2650 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2649
  %1175 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2650, align 8
  store %struct.rtx_def* %1173, %struct.rtx_def** %1175, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.2651

for.cond.2651:                                    ; preds = %for.inc.2677, %if.then.2619
  %1176 = load i32, i32* %i, align 4
  %1177 = load i32, i32* @n_reloads, align 4
  %cmp2652 = icmp slt i32 %1176, %1177
  br i1 %cmp2652, label %for.body.2654, label %for.end.2679

for.body.2654:                                    ; preds = %for.cond.2651
  %1178 = load i32, i32* %i, align 4
  %idxprom2655 = sext i32 %1178 to i64
  %arrayidx2656 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2655
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2656, i32 0, i32 12
  %1179 = load i32, i32* %opnum, align 4
  %1180 = load i32, i32* %commutative, align 4
  %cmp2657 = icmp eq i32 %1179, %1180
  br i1 %cmp2657, label %if.then.2659, label %if.else.2664

if.then.2659:                                     ; preds = %for.body.2654
  %1181 = load i32, i32* %commutative, align 4
  %add2660 = add nsw i32 %1181, 1
  %1182 = load i32, i32* %i, align 4
  %idxprom2661 = sext i32 %1182 to i64
  %arrayidx2662 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2661
  %opnum2663 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2662, i32 0, i32 12
  store i32 %add2660, i32* %opnum2663, align 4
  br label %if.end.2676

if.else.2664:                                     ; preds = %for.body.2654
  %1183 = load i32, i32* %i, align 4
  %idxprom2665 = sext i32 %1183 to i64
  %arrayidx2666 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2665
  %opnum2667 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2666, i32 0, i32 12
  %1184 = load i32, i32* %opnum2667, align 4
  %1185 = load i32, i32* %commutative, align 4
  %add2668 = add nsw i32 %1185, 1
  %cmp2669 = icmp eq i32 %1184, %add2668
  br i1 %cmp2669, label %if.then.2671, label %if.end.2675

if.then.2671:                                     ; preds = %if.else.2664
  %1186 = load i32, i32* %commutative, align 4
  %1187 = load i32, i32* %i, align 4
  %idxprom2672 = sext i32 %1187 to i64
  %arrayidx2673 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2672
  %opnum2674 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2673, i32 0, i32 12
  store i32 %1186, i32* %opnum2674, align 4
  br label %if.end.2675

if.end.2675:                                      ; preds = %if.then.2671, %if.else.2664
  br label %if.end.2676

if.end.2676:                                      ; preds = %if.end.2675, %if.then.2659
  br label %for.inc.2677

for.inc.2677:                                     ; preds = %if.end.2676
  %1188 = load i32, i32* %i, align 4
  %inc2678 = add nsw i32 %1188, 1
  store i32 %inc2678, i32* %i, align 4
  br label %for.cond.2651

for.end.2679:                                     ; preds = %for.cond.2651
  br label %if.end.2680

if.end.2680:                                      ; preds = %for.end.2679, %for.end.2617
  store i32 0, i32* %i, align 4
  br label %for.cond.2681

for.cond.2681:                                    ; preds = %for.inc.2705, %if.end.2680
  %1189 = load i32, i32* %i, align 4
  %1190 = load i32, i32* %noperands, align 4
  %cmp2682 = icmp slt i32 %1189, %1190
  br i1 %cmp2682, label %for.body.2684, label %for.end.2707

for.body.2684:                                    ; preds = %for.cond.2681
  %1191 = load i32, i32* %i, align 4
  %idxprom2685 = sext i32 %1191 to i64
  %arrayidx2686 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom2685
  store i32 -1, i32* %arrayidx2686, align 4
  %1192 = load i32, i32* %i, align 4
  %idxprom2687 = sext i32 %1192 to i64
  %arrayidx2688 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_earlyclobber, i32 0, i64 %idxprom2687
  %1193 = load i8, i8* %arrayidx2688, align 1
  %conv2689 = sext i8 %1193 to i32
  %tobool2690 = icmp ne i32 %conv2689, 0
  br i1 %tobool2690, label %land.lhs.true.2691, label %if.end.2704

land.lhs.true.2691:                               ; preds = %for.body.2684
  %1194 = load i32, i32* %i, align 4
  %idxprom2692 = sext i32 %1194 to i64
  %arrayidx2693 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom2692
  %1195 = load i32, i32* %arrayidx2693, align 4
  %cmp2694 = icmp ne i32 %1195, 9
  br i1 %cmp2694, label %if.then.2696, label %if.end.2704

if.then.2696:                                     ; preds = %land.lhs.true.2691
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1197 = load i32, i32* %i, align 4
  %idxprom2697 = sext i32 %1197 to i64
  %arrayidx2698 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2697
  %1198 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2698, align 8
  %call2699 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1196, i32 10, %struct.rtx_def* %1198)
  %tobool2700 = icmp ne %struct.rtx_def* %call2699, null
  %cond2701 = select i1 %tobool2700, i32 2, i32 9
  %1199 = load i32, i32* %i, align 4
  %idxprom2702 = sext i32 %1199 to i64
  %arrayidx2703 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom2702
  store i32 %cond2701, i32* %arrayidx2703, align 4
  br label %if.end.2704

if.end.2704:                                      ; preds = %if.then.2696, %land.lhs.true.2691, %for.body.2684
  br label %for.inc.2705

for.inc.2705:                                     ; preds = %if.end.2704
  %1200 = load i32, i32* %i, align 4
  %inc2706 = add nsw i32 %1200, 1
  store i32 %inc2706, i32* %i, align 4
  br label %for.cond.2681

for.end.2707:                                     ; preds = %for.cond.2681
  store i32 0, i32* %i, align 4
  br label %for.cond.2708

for.cond.2708:                                    ; preds = %for.inc.2815, %for.end.2707
  %1201 = load i32, i32* %i, align 4
  %1202 = load i32, i32* %noperands, align 4
  %cmp2709 = icmp slt i32 %1201, %1202
  br i1 %cmp2709, label %for.body.2711, label %for.end.2817

for.body.2711:                                    ; preds = %for.cond.2708
  %1203 = load i32, i32* %i, align 4
  %idxprom2712 = sext i32 %1203 to i64
  %arrayidx2713 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2712
  %1204 = load i8, i8* %arrayidx2713, align 1
  %tobool2714 = icmp ne i8 %1204, 0
  br i1 %tobool2714, label %if.end.2814, label %land.lhs.true.2715

land.lhs.true.2715:                               ; preds = %for.body.2711
  %1205 = load i32, i32* %i, align 4
  %idxprom2716 = sext i32 %1205 to i64
  %arrayidx2717 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2716
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2717, align 8
  %1207 = bitcast %struct.rtx_def* %1206 to i32*
  %bf.load2718 = load i32, i32* %1207, align 8
  %bf.clear2719 = and i32 %bf.load2718, 65535
  %cmp2720 = icmp eq i32 %bf.clear2719, 67
  br i1 %cmp2720, label %land.lhs.true.2771, label %lor.lhs.false.2722

lor.lhs.false.2722:                               ; preds = %land.lhs.true.2715
  %1208 = load i32, i32* %i, align 4
  %idxprom2723 = sext i32 %1208 to i64
  %arrayidx2724 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2723
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2724, align 8
  %1210 = bitcast %struct.rtx_def* %1209 to i32*
  %bf.load2725 = load i32, i32* %1210, align 8
  %bf.clear2726 = and i32 %bf.load2725, 65535
  %cmp2727 = icmp eq i32 %bf.clear2726, 68
  br i1 %cmp2727, label %land.lhs.true.2771, label %lor.lhs.false.2729

lor.lhs.false.2729:                               ; preds = %lor.lhs.false.2722
  %1211 = load i32, i32* %i, align 4
  %idxprom2730 = sext i32 %1211 to i64
  %arrayidx2731 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2730
  %1212 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2731, align 8
  %1213 = bitcast %struct.rtx_def* %1212 to i32*
  %bf.load2732 = load i32, i32* %1213, align 8
  %bf.clear2733 = and i32 %bf.load2732, 65535
  %cmp2734 = icmp eq i32 %bf.clear2733, 54
  br i1 %cmp2734, label %land.lhs.true.2771, label %lor.lhs.false.2736

lor.lhs.false.2736:                               ; preds = %lor.lhs.false.2729
  %1214 = load i32, i32* %i, align 4
  %idxprom2737 = sext i32 %1214 to i64
  %arrayidx2738 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2737
  %1215 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2738, align 8
  %1216 = bitcast %struct.rtx_def* %1215 to i32*
  %bf.load2739 = load i32, i32* %1216, align 8
  %bf.clear2740 = and i32 %bf.load2739, 65535
  %cmp2741 = icmp eq i32 %bf.clear2740, 55
  br i1 %cmp2741, label %land.lhs.true.2771, label %lor.lhs.false.2743

lor.lhs.false.2743:                               ; preds = %lor.lhs.false.2736
  %1217 = load i32, i32* %i, align 4
  %idxprom2744 = sext i32 %1217 to i64
  %arrayidx2745 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2744
  %1218 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2745, align 8
  %1219 = bitcast %struct.rtx_def* %1218 to i32*
  %bf.load2746 = load i32, i32* %1219, align 8
  %bf.clear2747 = and i32 %bf.load2746, 65535
  %cmp2748 = icmp eq i32 %bf.clear2747, 58
  br i1 %cmp2748, label %land.lhs.true.2771, label %lor.lhs.false.2750

lor.lhs.false.2750:                               ; preds = %lor.lhs.false.2743
  %1220 = load i32, i32* %i, align 4
  %idxprom2751 = sext i32 %1220 to i64
  %arrayidx2752 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2751
  %1221 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2752, align 8
  %1222 = bitcast %struct.rtx_def* %1221 to i32*
  %bf.load2753 = load i32, i32* %1222, align 8
  %bf.clear2754 = and i32 %bf.load2753, 65535
  %cmp2755 = icmp eq i32 %bf.clear2754, 134
  br i1 %cmp2755, label %land.lhs.true.2771, label %lor.lhs.false.2757

lor.lhs.false.2757:                               ; preds = %lor.lhs.false.2750
  %1223 = load i32, i32* %i, align 4
  %idxprom2758 = sext i32 %1223 to i64
  %arrayidx2759 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2758
  %1224 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2759, align 8
  %1225 = bitcast %struct.rtx_def* %1224 to i32*
  %bf.load2760 = load i32, i32* %1225, align 8
  %bf.clear2761 = and i32 %bf.load2760, 65535
  %cmp2762 = icmp eq i32 %bf.clear2761, 56
  br i1 %cmp2762, label %land.lhs.true.2771, label %lor.lhs.false.2764

lor.lhs.false.2764:                               ; preds = %lor.lhs.false.2757
  %1226 = load i32, i32* %i, align 4
  %idxprom2765 = sext i32 %1226 to i64
  %arrayidx2766 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2765
  %1227 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2766, align 8
  %1228 = bitcast %struct.rtx_def* %1227 to i32*
  %bf.load2767 = load i32, i32* %1228, align 8
  %bf.clear2768 = and i32 %bf.load2767, 65535
  %cmp2769 = icmp eq i32 %bf.clear2768, 140
  br i1 %cmp2769, label %land.lhs.true.2771, label %if.end.2814

land.lhs.true.2771:                               ; preds = %lor.lhs.false.2764, %lor.lhs.false.2757, %lor.lhs.false.2750, %lor.lhs.false.2743, %lor.lhs.false.2736, %lor.lhs.false.2729, %lor.lhs.false.2722, %land.lhs.true.2715
  %1229 = load i32, i32* %i, align 4
  %idxprom2772 = sext i32 %1229 to i64
  %arrayidx2773 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2772
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2773, align 8
  %1231 = bitcast %struct.rtx_def* %1230 to i32*
  %bf.load2774 = load i32, i32* %1231, align 8
  %bf.clear2775 = and i32 %bf.load2774, 65535
  %cmp2776 = icmp ne i32 %bf.clear2775, 134
  br i1 %cmp2776, label %land.lhs.true.2778, label %if.end.2814

land.lhs.true.2778:                               ; preds = %land.lhs.true.2771
  %1232 = load i32, i32* %i, align 4
  %idxprom2779 = sext i32 %1232 to i64
  %arrayidx2780 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2779
  %1233 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2780, align 8
  %1234 = load i32, i32* %i, align 4
  %idxprom2781 = sext i32 %1234 to i64
  %arrayidx2782 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom2781
  %1235 = load i32, i32* %arrayidx2782, align 4
  %call2783 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %1233, i32 %1235)
  %cmp2784 = icmp eq i32 %call2783, 0
  br i1 %cmp2784, label %land.lhs.true.2788, label %lor.lhs.false.2786

lor.lhs.false.2786:                               ; preds = %land.lhs.true.2778
  %1236 = load i32, i32* %no_input_reloads, align 4
  %tobool2787 = icmp ne i32 %1236, 0
  br i1 %tobool2787, label %land.lhs.true.2788, label %if.end.2814

land.lhs.true.2788:                               ; preds = %lor.lhs.false.2786, %land.lhs.true.2778
  %1237 = load i32, i32* %i, align 4
  %idxprom2789 = sext i32 %1237 to i64
  %arrayidx2790 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom2789
  %1238 = load i32, i32* %arrayidx2790, align 4
  %cmp2791 = icmp ne i32 %1238, 0
  br i1 %cmp2791, label %if.then.2793, label %if.end.2814

if.then.2793:                                     ; preds = %land.lhs.true.2788
  %1239 = load i32, i32* %i, align 4
  %idxprom2794 = sext i32 %1239 to i64
  %arrayidx2795 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom2794
  %1240 = load i32, i32* %arrayidx2795, align 4
  %1241 = load i32, i32* %i, align 4
  %idxprom2796 = sext i32 %1241 to i64
  %arrayidx2797 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2796
  %1242 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2797, align 8
  %call2798 = call %struct.rtx_def* @force_const_mem(i32 %1240, %struct.rtx_def* %1242)
  %1243 = load i32, i32* %i, align 4
  %1244 = load i32, i32* %i, align 4
  %idxprom2799 = sext i32 %1244 to i64
  %arrayidx2800 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom2799
  %1245 = load i32, i32* %arrayidx2800, align 4
  %1246 = load i32, i32* %ind_levels.addr, align 4
  %1247 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2801 = call %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %call2798, i32 %1243, i32 %1245, i32 %1246, i32 0, %struct.rtx_def* %1247, i32* null)
  %1248 = load i32, i32* %i, align 4
  %idxprom2802 = sext i32 %1248 to i64
  %arrayidx2803 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2802
  store %struct.rtx_def* %call2801, %struct.rtx_def** %arrayidx2803, align 8
  %1249 = load i32, i32* %i, align 4
  %idxprom2804 = sext i32 %1249 to i64
  %arrayidx2805 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom2804
  store %struct.rtx_def* %call2801, %struct.rtx_def** %arrayidx2805, align 8
  %1250 = load i32, i32* %i, align 4
  %idxprom2806 = sext i32 %1250 to i64
  %arrayidx2807 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i32 0, i64 %idxprom2806
  %1251 = load i8*, i8** %arrayidx2807, align 8
  %1252 = load i32, i32* %goal_alternative_number, align 4
  %call2808 = call i32 @alternative_allows_memconst(i8* %1251, i32 %1252)
  %tobool2809 = icmp ne i32 %call2808, 0
  br i1 %tobool2809, label %if.then.2810, label %if.end.2813

if.then.2810:                                     ; preds = %if.then.2793
  %1253 = load i32, i32* %i, align 4
  %idxprom2811 = sext i32 %1253 to i64
  %arrayidx2812 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2811
  store i8 1, i8* %arrayidx2812, align 1
  br label %if.end.2813

if.end.2813:                                      ; preds = %if.then.2810, %if.then.2793
  br label %if.end.2814

if.end.2814:                                      ; preds = %if.end.2813, %land.lhs.true.2788, %lor.lhs.false.2786, %land.lhs.true.2771, %lor.lhs.false.2764, %for.body.2711
  br label %for.inc.2815

for.inc.2815:                                     ; preds = %if.end.2814
  %1254 = load i32, i32* %i, align 4
  %inc2816 = add nsw i32 %1254, 1
  store i32 %inc2816, i32* %i, align 4
  br label %for.cond.2708

for.end.2817:                                     ; preds = %for.cond.2708
  %1255 = load i32, i32* %goal_earlyclobber, align 4
  %tobool2818 = icmp ne i32 %1255, 0
  br i1 %tobool2818, label %if.then.2819, label %if.end.2837

if.then.2819:                                     ; preds = %for.end.2817
  store i32 0, i32* %i, align 4
  br label %for.cond.2820

for.cond.2820:                                    ; preds = %for.inc.2834, %if.then.2819
  %1256 = load i32, i32* %i, align 4
  %1257 = load i32, i32* %noperands, align 4
  %cmp2821 = icmp slt i32 %1256, %1257
  br i1 %cmp2821, label %for.body.2823, label %for.end.2836

for.body.2823:                                    ; preds = %for.cond.2820
  %1258 = load i32, i32* %i, align 4
  %idxprom2824 = sext i32 %1258 to i64
  %arrayidx2825 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_earlyclobber, i32 0, i64 %idxprom2824
  %1259 = load i8, i8* %arrayidx2825, align 1
  %tobool2826 = icmp ne i8 %1259, 0
  br i1 %tobool2826, label %if.then.2827, label %if.end.2833

if.then.2827:                                     ; preds = %for.body.2823
  %1260 = load i32, i32* %i, align 4
  %idxprom2828 = sext i32 %1260 to i64
  %arrayidx2829 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2828
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2829, align 8
  %1262 = load i32, i32* @n_earlyclobbers, align 4
  %inc2830 = add nsw i32 %1262, 1
  store i32 %inc2830, i32* @n_earlyclobbers, align 4
  %idxprom2831 = sext i32 %1262 to i64
  %arrayidx2832 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i32 0, i64 %idxprom2831
  store %struct.rtx_def* %1261, %struct.rtx_def** %arrayidx2832, align 8
  br label %if.end.2833

if.end.2833:                                      ; preds = %if.then.2827, %for.body.2823
  br label %for.inc.2834

for.inc.2834:                                     ; preds = %if.end.2833
  %1263 = load i32, i32* %i, align 4
  %inc2835 = add nsw i32 %1263, 1
  store i32 %inc2835, i32* %i, align 4
  br label %for.cond.2820

for.end.2836:                                     ; preds = %for.cond.2820
  br label %if.end.2837

if.end.2837:                                      ; preds = %for.end.2836, %for.end.2817
  store i32 0, i32* %i, align 4
  br label %for.cond.2838

for.cond.2838:                                    ; preds = %for.inc.3435, %if.end.2837
  %1264 = load i32, i32* %i, align 4
  %1265 = load i32, i32* %noperands, align 4
  %cmp2839 = icmp slt i32 %1264, %1265
  br i1 %cmp2839, label %for.body.2841, label %for.end.3437

for.body.2841:                                    ; preds = %for.cond.2838
  %1266 = load i32, i32* %i, align 4
  %idxprom2842 = sext i32 %1266 to i64
  %arrayidx2843 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom2842
  %1267 = load i8, i8* %arrayidx2843, align 1
  %tobool2844 = icmp ne i8 %1267, 0
  br i1 %tobool2844, label %if.else.3122, label %if.then.2845

if.then.2845:                                     ; preds = %for.body.2841
  %1268 = load i32, i32* %i, align 4
  %idxprom2846 = sext i32 %1268 to i64
  %arrayidx2847 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom2846
  %1269 = load i32, i32* %arrayidx2847, align 4
  %cmp2848 = icmp sge i32 %1269, 0
  br i1 %cmp2848, label %if.then.2850, label %if.else.2851

if.then.2850:                                     ; preds = %if.then.2845
  br label %if.end.3121

if.else.2851:                                     ; preds = %if.then.2845
  %1270 = load i32, i32* %i, align 4
  %idxprom2852 = sext i32 %1270 to i64
  %arrayidx2853 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom2852
  %1271 = load i32, i32* %arrayidx2853, align 4
  %cmp2854 = icmp eq i32 %1271, -1
  br i1 %cmp2854, label %land.lhs.true.2856, label %if.else.2943

land.lhs.true.2856:                               ; preds = %if.else.2851
  %1272 = load i32, i32* %i, align 4
  %idxprom2857 = sext i32 %1272 to i64
  %arrayidx2858 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_offmemok, i32 0, i64 %idxprom2857
  %1273 = load i8, i8* %arrayidx2858, align 1
  %conv2859 = sext i8 %1273 to i32
  %tobool2860 = icmp ne i32 %conv2859, 0
  br i1 %tobool2860, label %land.lhs.true.2861, label %if.else.2943

land.lhs.true.2861:                               ; preds = %land.lhs.true.2856
  %1274 = load i32, i32* %i, align 4
  %idxprom2862 = sext i32 %1274 to i64
  %arrayidx2863 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2862
  %1275 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2863, align 8
  %1276 = bitcast %struct.rtx_def* %1275 to i32*
  %bf.load2864 = load i32, i32* %1276, align 8
  %bf.clear2865 = and i32 %bf.load2864, 65535
  %cmp2866 = icmp eq i32 %bf.clear2865, 66
  br i1 %cmp2866, label %if.then.2868, label %if.else.2943

if.then.2868:                                     ; preds = %land.lhs.true.2861
  %1277 = load i32, i32* %i, align 4
  %idxprom2869 = sext i32 %1277 to i64
  %arrayidx2870 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2869
  %1278 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2870, align 8
  %fld2871 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1278, i32 0, i32 1
  %arrayidx2872 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2871, i32 0, i64 0
  %rtx2873 = bitcast %union.rtunion_def* %arrayidx2872 to %struct.rtx_def**
  %1279 = load %struct.rtx_def*, %struct.rtx_def** %rtx2873, align 8
  %1280 = load i32, i32* %i, align 4
  %idxprom2874 = sext i32 %1280 to i64
  %arrayidx2875 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2874
  %1281 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2875, align 8
  %fld2876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1281, i32 0, i32 1
  %arrayidx2877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2876, i32 0, i64 0
  %rtx2878 = bitcast %union.rtunion_def* %arrayidx2877 to %struct.rtx_def**
  %1282 = load i32, i32* %i, align 4
  %idxprom2879 = sext i32 %1282 to i64
  %arrayidx2880 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2879
  %1283 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2880, align 8
  %fld2881 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1283, i32 0, i32 1
  %arrayidx2882 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2881, i32 0, i64 0
  %rtx2883 = bitcast %union.rtunion_def* %arrayidx2882 to %struct.rtx_def**
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %rtx2883, align 8
  %1285 = bitcast %struct.rtx_def* %1284 to i32*
  %bf.load2884 = load i32, i32* %1285, align 8
  %bf.lshr2885 = lshr i32 %bf.load2884, 16
  %bf.clear2886 = and i32 %bf.lshr2885, 255
  %1286 = load i32, i32* %i, align 4
  %call2887 = call i32 @push_reload(%struct.rtx_def* %1279, %struct.rtx_def* null, %struct.rtx_def** %rtx2878, %struct.rtx_def** null, i32 12, i32 %bf.clear2886, i32 0, i32 0, i32 0, i32 %1286, i32 0)
  %1287 = load i32, i32* %i, align 4
  %idxprom2888 = sext i32 %1287 to i64
  %arrayidx2889 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom2888
  store i32 %call2887, i32* %arrayidx2889, align 4
  %1288 = load i32, i32* %i, align 4
  %idxprom2890 = sext i32 %1288 to i64
  %arrayidx2891 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2890
  %1289 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2891, align 8
  %1290 = bitcast %struct.rtx_def* %1289 to i32*
  %bf.load2892 = load i32, i32* %1290, align 8
  %bf.lshr2893 = lshr i32 %bf.load2892, 16
  %bf.clear2894 = and i32 %bf.lshr2893, 255
  %idxprom2895 = sext i32 %bf.clear2894 to i64
  %arrayidx2896 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom2895
  %1291 = load i8, i8* %arrayidx2896, align 1
  %conv2897 = zext i8 %1291 to i32
  %1292 = load i32, i32* %i, align 4
  %idxprom2898 = sext i32 %1292 to i64
  %arrayidx2899 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom2898
  %1293 = load i32, i32* %arrayidx2899, align 4
  %idxprom2900 = sext i32 %1293 to i64
  %arrayidx2901 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2900
  %inc2902 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2901, i32 0, i32 7
  store i32 %conv2897, i32* %inc2902, align 4
  %1294 = load i32, i32* %i, align 4
  %idxprom2903 = sext i32 %1294 to i64
  %arrayidx2904 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2903
  %1295 = load i32, i32* %arrayidx2904, align 4
  %cmp2905 = icmp eq i32 %1295, 2
  br i1 %cmp2905, label %if.then.2907, label %if.end.2942

if.then.2907:                                     ; preds = %if.then.2868
  store i32 0, i32* %j, align 4
  br label %for.cond.2908

for.cond.2908:                                    ; preds = %for.inc.2939, %if.then.2907
  %1296 = load i32, i32* %j, align 4
  %1297 = load i32, i32* @n_reloads, align 4
  %cmp2909 = icmp slt i32 %1296, %1297
  br i1 %cmp2909, label %for.body.2911, label %for.end.2941

for.body.2911:                                    ; preds = %for.cond.2908
  %1298 = load i32, i32* %j, align 4
  %idxprom2912 = sext i32 %1298 to i64
  %arrayidx2913 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2912
  %opnum2914 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2913, i32 0, i32 12
  %1299 = load i32, i32* %opnum2914, align 4
  %1300 = load i32, i32* %i, align 4
  %cmp2915 = icmp eq i32 %1299, %1300
  br i1 %cmp2915, label %if.then.2917, label %if.end.2938

if.then.2917:                                     ; preds = %for.body.2911
  %1301 = load i32, i32* %j, align 4
  %idxprom2918 = sext i32 %1301 to i64
  %arrayidx2919 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2918
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2919, i32 0, i32 17
  %1302 = load i32, i32* %when_needed, align 4
  %cmp2920 = icmp eq i32 %1302, 5
  br i1 %cmp2920, label %if.then.2922, label %if.else.2926

if.then.2922:                                     ; preds = %if.then.2917
  %1303 = load i32, i32* %j, align 4
  %idxprom2923 = sext i32 %1303 to i64
  %arrayidx2924 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2923
  %when_needed2925 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2924, i32 0, i32 17
  store i32 3, i32* %when_needed2925, align 4
  br label %if.end.2937

if.else.2926:                                     ; preds = %if.then.2917
  %1304 = load i32, i32* %j, align 4
  %idxprom2927 = sext i32 %1304 to i64
  %arrayidx2928 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2927
  %when_needed2929 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2928, i32 0, i32 17
  %1305 = load i32, i32* %when_needed2929, align 4
  %cmp2930 = icmp eq i32 %1305, 6
  br i1 %cmp2930, label %if.then.2932, label %if.end.2936

if.then.2932:                                     ; preds = %if.else.2926
  %1306 = load i32, i32* %j, align 4
  %idxprom2933 = sext i32 %1306 to i64
  %arrayidx2934 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom2933
  %when_needed2935 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2934, i32 0, i32 17
  store i32 4, i32* %when_needed2935, align 4
  br label %if.end.2936

if.end.2936:                                      ; preds = %if.then.2932, %if.else.2926
  br label %if.end.2937

if.end.2937:                                      ; preds = %if.end.2936, %if.then.2922
  br label %if.end.2938

if.end.2938:                                      ; preds = %if.end.2937, %for.body.2911
  br label %for.inc.2939

for.inc.2939:                                     ; preds = %if.end.2938
  %1307 = load i32, i32* %j, align 4
  %inc2940 = add nsw i32 %1307, 1
  store i32 %inc2940, i32* %j, align 4
  br label %for.cond.2908

for.end.2941:                                     ; preds = %for.cond.2908
  br label %if.end.2942

if.end.2942:                                      ; preds = %for.end.2941, %if.then.2868
  br label %if.end.3120

if.else.2943:                                     ; preds = %land.lhs.true.2861, %land.lhs.true.2856, %if.else.2851
  %1308 = load i32, i32* %i, align 4
  %idxprom2944 = sext i32 %1308 to i64
  %arrayidx2945 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom2944
  %1309 = load i32, i32* %arrayidx2945, align 4
  %cmp2946 = icmp eq i32 %1309, -1
  br i1 %cmp2946, label %if.then.2948, label %if.else.3028

if.then.2948:                                     ; preds = %if.else.2943
  %1310 = load i32, i32* %i, align 4
  %idxprom2949 = sext i32 %1310 to i64
  %arrayidx2950 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2949
  %1311 = load i32, i32* %arrayidx2950, align 4
  %cmp2951 = icmp ne i32 %1311, 2
  br i1 %cmp2951, label %cond.true.2953, label %cond.false.2956

cond.true.2953:                                   ; preds = %if.then.2948
  %1312 = load i32, i32* %i, align 4
  %idxprom2954 = sext i32 %1312 to i64
  %arrayidx2955 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2954
  %1313 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2955, align 8
  br label %cond.end.2957

cond.false.2956:                                  ; preds = %if.then.2948
  br label %cond.end.2957

cond.end.2957:                                    ; preds = %cond.false.2956, %cond.true.2953
  %cond2958 = phi %struct.rtx_def* [ %1313, %cond.true.2953 ], [ null, %cond.false.2956 ]
  %1314 = load i32, i32* %i, align 4
  %idxprom2959 = sext i32 %1314 to i64
  %arrayidx2960 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2959
  %1315 = load i32, i32* %arrayidx2960, align 4
  %cmp2961 = icmp ne i32 %1315, 0
  br i1 %cmp2961, label %cond.true.2963, label %cond.false.2966

cond.true.2963:                                   ; preds = %cond.end.2957
  %1316 = load i32, i32* %i, align 4
  %idxprom2964 = sext i32 %1316 to i64
  %arrayidx2965 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom2964
  %1317 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2965, align 8
  br label %cond.end.2967

cond.false.2966:                                  ; preds = %cond.end.2957
  br label %cond.end.2967

cond.end.2967:                                    ; preds = %cond.false.2966, %cond.true.2963
  %cond2968 = phi %struct.rtx_def* [ %1317, %cond.true.2963 ], [ null, %cond.false.2966 ]
  %1318 = load i32, i32* %i, align 4
  %idxprom2969 = sext i32 %1318 to i64
  %arrayidx2970 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2969
  %1319 = load i32, i32* %arrayidx2970, align 4
  %cmp2971 = icmp ne i32 %1319, 2
  br i1 %cmp2971, label %cond.true.2973, label %cond.false.2976

cond.true.2973:                                   ; preds = %cond.end.2967
  %1320 = load i32, i32* %i, align 4
  %idxprom2974 = sext i32 %1320 to i64
  %arrayidx2975 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2974
  %1321 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2975, align 8
  br label %cond.end.2977

cond.false.2976:                                  ; preds = %cond.end.2967
  br label %cond.end.2977

cond.end.2977:                                    ; preds = %cond.false.2976, %cond.true.2973
  %cond2978 = phi %struct.rtx_def** [ %1321, %cond.true.2973 ], [ null, %cond.false.2976 ]
  %1322 = load i32, i32* %i, align 4
  %idxprom2979 = sext i32 %1322 to i64
  %arrayidx2980 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2979
  %1323 = load i32, i32* %arrayidx2980, align 4
  %cmp2981 = icmp ne i32 %1323, 0
  br i1 %cmp2981, label %cond.true.2983, label %cond.false.2986

cond.true.2983:                                   ; preds = %cond.end.2977
  %1324 = load i32, i32* %i, align 4
  %idxprom2984 = sext i32 %1324 to i64
  %arrayidx2985 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom2984
  %1325 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx2985, align 8
  br label %cond.end.2987

cond.false.2986:                                  ; preds = %cond.end.2977
  br label %cond.end.2987

cond.end.2987:                                    ; preds = %cond.false.2986, %cond.true.2983
  %cond2988 = phi %struct.rtx_def** [ %1325, %cond.true.2983 ], [ null, %cond.false.2986 ]
  %1326 = load i32, i32* %i, align 4
  %idxprom2989 = sext i32 %1326 to i64
  %arrayidx2990 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom2989
  %1327 = load i32, i32* %arrayidx2990, align 4
  %1328 = load i32, i32* %i, align 4
  %idxprom2991 = sext i32 %1328 to i64
  %arrayidx2992 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom2991
  %1329 = load i32, i32* %arrayidx2992, align 4
  %cmp2993 = icmp eq i32 %1329, 2
  br i1 %cmp2993, label %cond.true.2995, label %cond.false.2996

cond.true.2995:                                   ; preds = %cond.end.2987
  br label %cond.end.2999

cond.false.2996:                                  ; preds = %cond.end.2987
  %1330 = load i32, i32* %i, align 4
  %idxprom2997 = sext i32 %1330 to i64
  %arrayidx2998 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom2997
  %1331 = load i32, i32* %arrayidx2998, align 4
  br label %cond.end.2999

cond.end.2999:                                    ; preds = %cond.false.2996, %cond.true.2995
  %cond3000 = phi i32 [ 0, %cond.true.2995 ], [ %1331, %cond.false.2996 ]
  %1332 = load i32, i32* %i, align 4
  %idxprom3001 = sext i32 %1332 to i64
  %arrayidx3002 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3001
  %1333 = load i32, i32* %arrayidx3002, align 4
  %cmp3003 = icmp eq i32 %1333, 0
  br i1 %cmp3003, label %cond.true.3005, label %cond.false.3006

cond.true.3005:                                   ; preds = %cond.end.2999
  br label %cond.end.3009

cond.false.3006:                                  ; preds = %cond.end.2999
  %1334 = load i32, i32* %i, align 4
  %idxprom3007 = sext i32 %1334 to i64
  %arrayidx3008 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3007
  %1335 = load i32, i32* %arrayidx3008, align 4
  br label %cond.end.3009

cond.end.3009:                                    ; preds = %cond.false.3006, %cond.true.3005
  %cond3010 = phi i32 [ 0, %cond.true.3005 ], [ %1335, %cond.false.3006 ]
  %1336 = load i32, i32* %insn_code_number, align 4
  %cmp3011 = icmp slt i32 %1336, 0
  br i1 %cmp3011, label %cond.true.3013, label %cond.false.3014

cond.true.3013:                                   ; preds = %cond.end.3009
  br label %cond.end.3021

cond.false.3014:                                  ; preds = %cond.end.3009
  %1337 = load i32, i32* %i, align 4
  %idxprom3015 = sext i32 %1337 to i64
  %1338 = load i32, i32* %insn_code_number, align 4
  %idxprom3016 = sext i32 %1338 to i64
  %arrayidx3017 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom3016
  %operand3018 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx3017, i32 0, i32 3
  %1339 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand3018, align 8
  %arrayidx3019 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1339, i64 %idxprom3015
  %strict_low = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx3019, i32 0, i32 3
  %1340 = load i8, i8* %strict_low, align 1
  %conv3020 = sext i8 %1340 to i32
  br label %cond.end.3021

cond.end.3021:                                    ; preds = %cond.false.3014, %cond.true.3013
  %cond3022 = phi i32 [ 0, %cond.true.3013 ], [ %conv3020, %cond.false.3014 ]
  %1341 = load i32, i32* %i, align 4
  %1342 = load i32, i32* %i, align 4
  %idxprom3023 = sext i32 %1342 to i64
  %arrayidx3024 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom3023
  %1343 = load i32, i32* %arrayidx3024, align 4
  %call3025 = call i32 @push_reload(%struct.rtx_def* %cond2958, %struct.rtx_def* %cond2968, %struct.rtx_def** %cond2978, %struct.rtx_def** %cond2988, i32 %1327, i32 %cond3000, i32 %cond3010, i32 %cond3022, i32 0, i32 %1341, i32 %1343)
  %1344 = load i32, i32* %i, align 4
  %idxprom3026 = sext i32 %1344 to i64
  %arrayidx3027 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3026
  store i32 %call3025, i32* %arrayidx3027, align 4
  br label %if.end.3119

if.else.3028:                                     ; preds = %if.else.2943
  %1345 = load i32, i32* %i, align 4
  %idxprom3029 = sext i32 %1345 to i64
  %arrayidx3030 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3029
  %1346 = load i32, i32* %arrayidx3030, align 4
  %cmp3031 = icmp eq i32 %1346, 0
  br i1 %cmp3031, label %land.lhs.true.3033, label %if.else.3068

land.lhs.true.3033:                               ; preds = %if.else.3028
  %1347 = load i32, i32* %i, align 4
  %idxprom3034 = sext i32 %1347 to i64
  %arrayidx3035 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3034
  %1348 = load i32, i32* %arrayidx3035, align 4
  %idxprom3036 = sext i32 %1348 to i64
  %arrayidx3037 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3036
  %1349 = load i32, i32* %arrayidx3037, align 4
  %cmp3038 = icmp eq i32 %1349, 2
  br i1 %cmp3038, label %if.then.3040, label %if.else.3068

if.then.3040:                                     ; preds = %land.lhs.true.3033
  %1350 = load i32, i32* %i, align 4
  %idxprom3041 = sext i32 %1350 to i64
  %arrayidx3042 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3041
  %1351 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3042, align 8
  %1352 = load i32, i32* %i, align 4
  %idxprom3043 = sext i32 %1352 to i64
  %arrayidx3044 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3043
  %1353 = load i32, i32* %arrayidx3044, align 4
  %idxprom3045 = sext i32 %1353 to i64
  %arrayidx3046 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3045
  %1354 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3046, align 8
  %1355 = load i32, i32* %i, align 4
  %idxprom3047 = sext i32 %1355 to i64
  %arrayidx3048 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3047
  %1356 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3048, align 8
  %1357 = load i32, i32* %i, align 4
  %idxprom3049 = sext i32 %1357 to i64
  %arrayidx3050 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3049
  %1358 = load i32, i32* %arrayidx3050, align 4
  %idxprom3051 = sext i32 %1358 to i64
  %arrayidx3052 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3051
  %1359 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3052, align 8
  %1360 = load i32, i32* %i, align 4
  %idxprom3053 = sext i32 %1360 to i64
  %arrayidx3054 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3053
  %1361 = load i32, i32* %arrayidx3054, align 4
  %1362 = load i32, i32* %i, align 4
  %idxprom3055 = sext i32 %1362 to i64
  %arrayidx3056 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3055
  %1363 = load i32, i32* %arrayidx3056, align 4
  %1364 = load i32, i32* %i, align 4
  %idxprom3057 = sext i32 %1364 to i64
  %arrayidx3058 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3057
  %1365 = load i32, i32* %arrayidx3058, align 4
  %idxprom3059 = sext i32 %1365 to i64
  %arrayidx3060 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3059
  %1366 = load i32, i32* %arrayidx3060, align 4
  %1367 = load i32, i32* %i, align 4
  %call3061 = call i32 @push_reload(%struct.rtx_def* %1351, %struct.rtx_def* %1354, %struct.rtx_def** %1356, %struct.rtx_def** %1359, i32 %1361, i32 %1363, i32 %1366, i32 0, i32 0, i32 %1367, i32 9)
  %1368 = load i32, i32* %i, align 4
  %idxprom3062 = sext i32 %1368 to i64
  %arrayidx3063 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3062
  store i32 %call3061, i32* %arrayidx3063, align 4
  %1369 = load i32, i32* @output_reloadnum, align 4
  %1370 = load i32, i32* %i, align 4
  %idxprom3064 = sext i32 %1370 to i64
  %arrayidx3065 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3064
  %1371 = load i32, i32* %arrayidx3065, align 4
  %idxprom3066 = sext i32 %1371 to i64
  %arrayidx3067 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3066
  store i32 %1369, i32* %arrayidx3067, align 4
  br label %if.end.3118

if.else.3068:                                     ; preds = %land.lhs.true.3033, %if.else.3028
  %1372 = load i32, i32* %i, align 4
  %idxprom3069 = sext i32 %1372 to i64
  %arrayidx3070 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3069
  %1373 = load i32, i32* %arrayidx3070, align 4
  %cmp3071 = icmp eq i32 %1373, 2
  br i1 %cmp3071, label %land.lhs.true.3073, label %if.else.3108

land.lhs.true.3073:                               ; preds = %if.else.3068
  %1374 = load i32, i32* %i, align 4
  %idxprom3074 = sext i32 %1374 to i64
  %arrayidx3075 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3074
  %1375 = load i32, i32* %arrayidx3075, align 4
  %idxprom3076 = sext i32 %1375 to i64
  %arrayidx3077 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3076
  %1376 = load i32, i32* %arrayidx3077, align 4
  %cmp3078 = icmp eq i32 %1376, 0
  br i1 %cmp3078, label %if.then.3080, label %if.else.3108

if.then.3080:                                     ; preds = %land.lhs.true.3073
  %1377 = load i32, i32* %i, align 4
  %idxprom3081 = sext i32 %1377 to i64
  %arrayidx3082 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3081
  %1378 = load i32, i32* %arrayidx3082, align 4
  %idxprom3083 = sext i32 %1378 to i64
  %arrayidx3084 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3083
  %1379 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3084, align 8
  %1380 = load i32, i32* %i, align 4
  %idxprom3085 = sext i32 %1380 to i64
  %arrayidx3086 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3085
  %1381 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3086, align 8
  %1382 = load i32, i32* %i, align 4
  %idxprom3087 = sext i32 %1382 to i64
  %arrayidx3088 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3087
  %1383 = load i32, i32* %arrayidx3088, align 4
  %idxprom3089 = sext i32 %1383 to i64
  %arrayidx3090 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3089
  %1384 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3090, align 8
  %1385 = load i32, i32* %i, align 4
  %idxprom3091 = sext i32 %1385 to i64
  %arrayidx3092 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3091
  %1386 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3092, align 8
  %1387 = load i32, i32* %i, align 4
  %idxprom3093 = sext i32 %1387 to i64
  %arrayidx3094 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3093
  %1388 = load i32, i32* %arrayidx3094, align 4
  %1389 = load i32, i32* %i, align 4
  %idxprom3095 = sext i32 %1389 to i64
  %arrayidx3096 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3095
  %1390 = load i32, i32* %arrayidx3096, align 4
  %idxprom3097 = sext i32 %1390 to i64
  %arrayidx3098 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3097
  %1391 = load i32, i32* %arrayidx3098, align 4
  %1392 = load i32, i32* %i, align 4
  %idxprom3099 = sext i32 %1392 to i64
  %arrayidx3100 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3099
  %1393 = load i32, i32* %arrayidx3100, align 4
  %1394 = load i32, i32* %i, align 4
  %call3101 = call i32 @push_reload(%struct.rtx_def* %1379, %struct.rtx_def* %1381, %struct.rtx_def** %1384, %struct.rtx_def** %1386, i32 %1388, i32 %1391, i32 %1393, i32 0, i32 0, i32 %1394, i32 9)
  %1395 = load i32, i32* %i, align 4
  %idxprom3102 = sext i32 %1395 to i64
  %arrayidx3103 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3102
  %1396 = load i32, i32* %arrayidx3103, align 4
  %idxprom3104 = sext i32 %1396 to i64
  %arrayidx3105 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3104
  store i32 %call3101, i32* %arrayidx3105, align 4
  %1397 = load i32, i32* @output_reloadnum, align 4
  %1398 = load i32, i32* %i, align 4
  %idxprom3106 = sext i32 %1398 to i64
  %arrayidx3107 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3106
  store i32 %1397, i32* %arrayidx3107, align 4
  br label %if.end.3117

if.else.3108:                                     ; preds = %land.lhs.true.3073, %if.else.3068
  %1399 = load i32, i32* %insn_code_number, align 4
  %cmp3109 = icmp sge i32 %1399, 0
  br i1 %cmp3109, label %if.then.3111, label %if.else.3112

if.then.3111:                                     ; preds = %if.else.3108
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 3790, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.find_reloads, i32 0, i32 0)) #5
  unreachable

if.else.3112:                                     ; preds = %if.else.3108
  %1400 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %1400, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i32 0, i32 0))
  %1401 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %call3113 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %1401)
  %1402 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld3114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1402, i32 0, i32 1
  %arrayidx3115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3114, i32 0, i64 3
  %rtx3116 = bitcast %union.rtunion_def* %arrayidx3115 to %struct.rtx_def**
  store %struct.rtx_def* %call3113, %struct.rtx_def** %rtx3116, align 8
  store i32 0, i32* @n_reloads, align 4
  store i32 0, i32* %retval
  br label %return

if.end.3117:                                      ; preds = %if.then.3080
  br label %if.end.3118

if.end.3118:                                      ; preds = %if.end.3117, %if.then.3040
  br label %if.end.3119

if.end.3119:                                      ; preds = %if.end.3118, %cond.end.3021
  br label %if.end.3120

if.end.3120:                                      ; preds = %if.end.3119, %if.end.2942
  br label %if.end.3121

if.end.3121:                                      ; preds = %if.end.3120, %if.then.2850
  br label %if.end.3434

if.else.3122:                                     ; preds = %for.body.2841
  %1403 = load i32, i32* %i, align 4
  %idxprom3123 = sext i32 %1403 to i64
  %arrayidx3124 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matched, i32 0, i64 %idxprom3123
  %1404 = load i32, i32* %arrayidx3124, align 4
  %cmp3125 = icmp slt i32 %1404, 0
  br i1 %cmp3125, label %land.lhs.true.3127, label %if.else.3332

land.lhs.true.3127:                               ; preds = %if.else.3122
  %1405 = load i32, i32* %i, align 4
  %idxprom3128 = sext i32 %1405 to i64
  %arrayidx3129 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3128
  %1406 = load i32, i32* %arrayidx3129, align 4
  %cmp3130 = icmp slt i32 %1406, 0
  br i1 %cmp3130, label %land.lhs.true.3132, label %if.else.3332

land.lhs.true.3132:                               ; preds = %land.lhs.true.3127
  %1407 = load i32, i32* @optimize, align 4
  %tobool3133 = icmp ne i32 %1407, 0
  br i1 %tobool3133, label %if.then.3134, label %if.else.3332

if.then.3134:                                     ; preds = %land.lhs.true.3132
  %1408 = load i32, i32* %i, align 4
  %idxprom3137 = sext i32 %1408 to i64
  %arrayidx3138 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3137
  %1409 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3138, align 8
  store %struct.rtx_def* %1409, %struct.rtx_def** %operand3136, align 8
  br label %while.cond.3139

while.cond.3139:                                  ; preds = %while.body.3144, %if.then.3134
  %1410 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1411 = bitcast %struct.rtx_def* %1410 to i32*
  %bf.load3140 = load i32, i32* %1411, align 8
  %bf.clear3141 = and i32 %bf.load3140, 65535
  %cmp3142 = icmp eq i32 %bf.clear3141, 63
  br i1 %cmp3142, label %while.body.3144, label %while.end.3148

while.body.3144:                                  ; preds = %while.cond.3139
  %1412 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %fld3145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1412, i32 0, i32 1
  %arrayidx3146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3145, i32 0, i64 0
  %rtx3147 = bitcast %union.rtunion_def* %arrayidx3146 to %struct.rtx_def**
  %1413 = load %struct.rtx_def*, %struct.rtx_def** %rtx3147, align 8
  store %struct.rtx_def* %1413, %struct.rtx_def** %operand3136, align 8
  br label %while.cond.3139

while.end.3148:                                   ; preds = %while.cond.3139
  %1414 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1415 = bitcast %struct.rtx_def* %1414 to i32*
  %bf.load3149 = load i32, i32* %1415, align 8
  %bf.clear3150 = and i32 %bf.load3149, 65535
  %cmp3151 = icmp eq i32 %bf.clear3150, 66
  br i1 %cmp3151, label %land.lhs.true.3164, label %lor.lhs.false.3153

lor.lhs.false.3153:                               ; preds = %while.end.3148
  %1416 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1417 = bitcast %struct.rtx_def* %1416 to i32*
  %bf.load3154 = load i32, i32* %1417, align 8
  %bf.clear3155 = and i32 %bf.load3154, 65535
  %cmp3156 = icmp eq i32 %bf.clear3155, 61
  br i1 %cmp3156, label %land.lhs.true.3158, label %if.else.3266

land.lhs.true.3158:                               ; preds = %lor.lhs.false.3153
  %1418 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %fld3159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1418, i32 0, i32 1
  %arrayidx3160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3159, i32 0, i64 0
  %rtuint3161 = bitcast %union.rtunion_def* %arrayidx3160 to i32*
  %1419 = load i32, i32* %rtuint3161, align 4
  %cmp3162 = icmp uge i32 %1419, 53
  br i1 %cmp3162, label %land.lhs.true.3164, label %if.else.3266

land.lhs.true.3164:                               ; preds = %land.lhs.true.3158, %while.end.3148
  %1420 = load i32, i32* %i, align 4
  %idxprom3165 = sext i32 %1420 to i64
  %arrayidx3166 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3165
  %1421 = load i32, i32* %arrayidx3166, align 4
  %cmp3167 = icmp ne i32 %1421, 0
  br i1 %cmp3167, label %land.lhs.true.3174, label %lor.lhs.false.3169

lor.lhs.false.3169:                               ; preds = %land.lhs.true.3164
  %1422 = load i32, i32* %i, align 4
  %idxprom3170 = sext i32 %1422 to i64
  %arrayidx3171 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3170
  %1423 = load i32, i32* %arrayidx3171, align 4
  %cmp3172 = icmp eq i32 %1423, 2
  br i1 %cmp3172, label %land.lhs.true.3174, label %if.else.3266

land.lhs.true.3174:                               ; preds = %lor.lhs.false.3169, %land.lhs.true.3164
  %1424 = load i32, i32* %no_input_reloads, align 4
  %tobool3175 = icmp ne i32 %1424, 0
  br i1 %tobool3175, label %if.else.3266, label %land.lhs.true.3176

land.lhs.true.3176:                               ; preds = %land.lhs.true.3174
  %1425 = load i32, i32* %i, align 4
  %idxprom3177 = sext i32 %1425 to i64
  %arrayidx3178 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3177
  %1426 = load i32, i32* %arrayidx3178, align 4
  %cmp3179 = icmp eq i32 %1426, 0
  br i1 %cmp3179, label %if.then.3185, label %lor.lhs.false.3181

lor.lhs.false.3181:                               ; preds = %land.lhs.true.3176
  %1427 = load i32, i32* %no_output_reloads, align 4
  %tobool3182 = icmp ne i32 %1427, 0
  br i1 %tobool3182, label %if.else.3266, label %land.lhs.true.3183

land.lhs.true.3183:                               ; preds = %lor.lhs.false.3181
  %1428 = load i32, i32* @this_insn_is_asm, align 4
  %tobool3184 = icmp ne i32 %1428, 0
  br i1 %tobool3184, label %if.else.3266, label %if.then.3185

if.then.3185:                                     ; preds = %land.lhs.true.3183, %land.lhs.true.3176
  %1429 = load i32, i32* %i, align 4
  %idxprom3186 = sext i32 %1429 to i64
  %arrayidx3187 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3186
  %1430 = load i32, i32* %arrayidx3187, align 4
  %cmp3188 = icmp ne i32 %1430, 2
  br i1 %cmp3188, label %cond.true.3190, label %cond.false.3193

cond.true.3190:                                   ; preds = %if.then.3185
  %1431 = load i32, i32* %i, align 4
  %idxprom3191 = sext i32 %1431 to i64
  %arrayidx3192 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3191
  %1432 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3192, align 8
  br label %cond.end.3194

cond.false.3193:                                  ; preds = %if.then.3185
  br label %cond.end.3194

cond.end.3194:                                    ; preds = %cond.false.3193, %cond.true.3190
  %cond3195 = phi %struct.rtx_def* [ %1432, %cond.true.3190 ], [ null, %cond.false.3193 ]
  %1433 = load i32, i32* %i, align 4
  %idxprom3196 = sext i32 %1433 to i64
  %arrayidx3197 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3196
  %1434 = load i32, i32* %arrayidx3197, align 4
  %cmp3198 = icmp ne i32 %1434, 0
  br i1 %cmp3198, label %cond.true.3200, label %cond.false.3203

cond.true.3200:                                   ; preds = %cond.end.3194
  %1435 = load i32, i32* %i, align 4
  %idxprom3201 = sext i32 %1435 to i64
  %arrayidx3202 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3201
  %1436 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3202, align 8
  br label %cond.end.3204

cond.false.3203:                                  ; preds = %cond.end.3194
  br label %cond.end.3204

cond.end.3204:                                    ; preds = %cond.false.3203, %cond.true.3200
  %cond3205 = phi %struct.rtx_def* [ %1436, %cond.true.3200 ], [ null, %cond.false.3203 ]
  %1437 = load i32, i32* %i, align 4
  %idxprom3206 = sext i32 %1437 to i64
  %arrayidx3207 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3206
  %1438 = load i32, i32* %arrayidx3207, align 4
  %cmp3208 = icmp ne i32 %1438, 2
  br i1 %cmp3208, label %cond.true.3210, label %cond.false.3213

cond.true.3210:                                   ; preds = %cond.end.3204
  %1439 = load i32, i32* %i, align 4
  %idxprom3211 = sext i32 %1439 to i64
  %arrayidx3212 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3211
  %1440 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3212, align 8
  br label %cond.end.3214

cond.false.3213:                                  ; preds = %cond.end.3204
  br label %cond.end.3214

cond.end.3214:                                    ; preds = %cond.false.3213, %cond.true.3210
  %cond3215 = phi %struct.rtx_def** [ %1440, %cond.true.3210 ], [ null, %cond.false.3213 ]
  %1441 = load i32, i32* %i, align 4
  %idxprom3216 = sext i32 %1441 to i64
  %arrayidx3217 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3216
  %1442 = load i32, i32* %arrayidx3217, align 4
  %cmp3218 = icmp ne i32 %1442, 0
  br i1 %cmp3218, label %cond.true.3220, label %cond.false.3223

cond.true.3220:                                   ; preds = %cond.end.3214
  %1443 = load i32, i32* %i, align 4
  %idxprom3221 = sext i32 %1443 to i64
  %arrayidx3222 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3221
  %1444 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3222, align 8
  br label %cond.end.3224

cond.false.3223:                                  ; preds = %cond.end.3214
  br label %cond.end.3224

cond.end.3224:                                    ; preds = %cond.false.3223, %cond.true.3220
  %cond3225 = phi %struct.rtx_def** [ %1444, %cond.true.3220 ], [ null, %cond.false.3223 ]
  %1445 = load i32, i32* %i, align 4
  %idxprom3226 = sext i32 %1445 to i64
  %arrayidx3227 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3226
  %1446 = load i32, i32* %arrayidx3227, align 4
  %1447 = load i32, i32* %i, align 4
  %idxprom3228 = sext i32 %1447 to i64
  %arrayidx3229 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3228
  %1448 = load i32, i32* %arrayidx3229, align 4
  %cmp3230 = icmp eq i32 %1448, 2
  br i1 %cmp3230, label %cond.true.3232, label %cond.false.3233

cond.true.3232:                                   ; preds = %cond.end.3224
  br label %cond.end.3236

cond.false.3233:                                  ; preds = %cond.end.3224
  %1449 = load i32, i32* %i, align 4
  %idxprom3234 = sext i32 %1449 to i64
  %arrayidx3235 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3234
  %1450 = load i32, i32* %arrayidx3235, align 4
  br label %cond.end.3236

cond.end.3236:                                    ; preds = %cond.false.3233, %cond.true.3232
  %cond3237 = phi i32 [ 0, %cond.true.3232 ], [ %1450, %cond.false.3233 ]
  %1451 = load i32, i32* %i, align 4
  %idxprom3238 = sext i32 %1451 to i64
  %arrayidx3239 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3238
  %1452 = load i32, i32* %arrayidx3239, align 4
  %cmp3240 = icmp eq i32 %1452, 0
  br i1 %cmp3240, label %cond.true.3242, label %cond.false.3243

cond.true.3242:                                   ; preds = %cond.end.3236
  br label %cond.end.3246

cond.false.3243:                                  ; preds = %cond.end.3236
  %1453 = load i32, i32* %i, align 4
  %idxprom3244 = sext i32 %1453 to i64
  %arrayidx3245 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3244
  %1454 = load i32, i32* %arrayidx3245, align 4
  br label %cond.end.3246

cond.end.3246:                                    ; preds = %cond.false.3243, %cond.true.3242
  %cond3247 = phi i32 [ 0, %cond.true.3242 ], [ %1454, %cond.false.3243 ]
  %1455 = load i32, i32* %insn_code_number, align 4
  %cmp3248 = icmp slt i32 %1455, 0
  br i1 %cmp3248, label %cond.true.3250, label %cond.false.3251

cond.true.3250:                                   ; preds = %cond.end.3246
  br label %cond.end.3259

cond.false.3251:                                  ; preds = %cond.end.3246
  %1456 = load i32, i32* %i, align 4
  %idxprom3252 = sext i32 %1456 to i64
  %1457 = load i32, i32* %insn_code_number, align 4
  %idxprom3253 = sext i32 %1457 to i64
  %arrayidx3254 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom3253
  %operand3255 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx3254, i32 0, i32 3
  %1458 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand3255, align 8
  %arrayidx3256 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1458, i64 %idxprom3252
  %strict_low3257 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx3256, i32 0, i32 3
  %1459 = load i8, i8* %strict_low3257, align 1
  %conv3258 = sext i8 %1459 to i32
  br label %cond.end.3259

cond.end.3259:                                    ; preds = %cond.false.3251, %cond.true.3250
  %cond3260 = phi i32 [ 0, %cond.true.3250 ], [ %conv3258, %cond.false.3251 ]
  %1460 = load i32, i32* %i, align 4
  %1461 = load i32, i32* %i, align 4
  %idxprom3261 = sext i32 %1461 to i64
  %arrayidx3262 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom3261
  %1462 = load i32, i32* %arrayidx3262, align 4
  %call3263 = call i32 @push_reload(%struct.rtx_def* %cond3195, %struct.rtx_def* %cond3205, %struct.rtx_def** %cond3215, %struct.rtx_def** %cond3225, i32 %1446, i32 %cond3237, i32 %cond3247, i32 %cond3260, i32 1, i32 %1460, i32 %1462)
  %1463 = load i32, i32* %i, align 4
  %idxprom3264 = sext i32 %1463 to i64
  %arrayidx3265 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3264
  store i32 %call3263, i32* %arrayidx3265, align 4
  br label %if.end.3331

if.else.3266:                                     ; preds = %land.lhs.true.3183, %lor.lhs.false.3181, %land.lhs.true.3174, %lor.lhs.false.3169, %land.lhs.true.3158, %lor.lhs.false.3153
  %1464 = load i32, i32* %replace.addr, align 4
  %tobool3267 = icmp ne i32 %1464, 0
  br i1 %tobool3267, label %land.lhs.true.3268, label %if.end.3330

land.lhs.true.3268:                               ; preds = %if.else.3266
  %1465 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1466 = bitcast %struct.rtx_def* %1465 to i32*
  %bf.load3269 = load i32, i32* %1466, align 8
  %bf.clear3270 = and i32 %bf.load3269, 65535
  %cmp3271 = icmp eq i32 %bf.clear3270, 66
  br i1 %cmp3271, label %if.then.3293, label %lor.lhs.false.3273

lor.lhs.false.3273:                               ; preds = %land.lhs.true.3268
  %1467 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1468 = bitcast %struct.rtx_def* %1467 to i32*
  %bf.load3274 = load i32, i32* %1468, align 8
  %bf.clear3275 = and i32 %bf.load3274, 65535
  %cmp3276 = icmp eq i32 %bf.clear3275, 61
  br i1 %cmp3276, label %land.lhs.true.3278, label %if.end.3330

land.lhs.true.3278:                               ; preds = %lor.lhs.false.3273
  %1469 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %fld3279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1469, i32 0, i32 1
  %arrayidx3280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3279, i32 0, i64 0
  %rtuint3281 = bitcast %union.rtunion_def* %arrayidx3280 to i32*
  %1470 = load i32, i32* %rtuint3281, align 4
  %cmp3282 = icmp uge i32 %1470, 53
  br i1 %cmp3282, label %land.lhs.true.3284, label %if.end.3330

land.lhs.true.3284:                               ; preds = %land.lhs.true.3278
  %1471 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %fld3285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1471, i32 0, i32 1
  %arrayidx3286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3285, i32 0, i64 0
  %rtuint3287 = bitcast %union.rtunion_def* %arrayidx3286 to i32*
  %1472 = load i32, i32* %rtuint3287, align 4
  %idxprom3288 = zext i32 %1472 to i64
  %1473 = load i16*, i16** @reg_renumber, align 8
  %arrayidx3289 = getelementptr inbounds i16, i16* %1473, i64 %idxprom3288
  %1474 = load i16, i16* %arrayidx3289, align 2
  %conv3290 = sext i16 %1474 to i32
  %cmp3291 = icmp slt i32 %conv3290, 0
  br i1 %cmp3291, label %if.then.3293, label %if.end.3330

if.then.3293:                                     ; preds = %land.lhs.true.3284, %land.lhs.true.3268
  %1475 = load i32, i32* %i, align 4
  %idxprom3294 = sext i32 %1475 to i64
  %arrayidx3295 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3294
  %1476 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3295, align 8
  %1477 = load %struct.rtx_def*, %struct.rtx_def** %1476, align 8
  store %struct.rtx_def* %1477, %struct.rtx_def** %operand3136, align 8
  br label %while.cond.3296

while.cond.3296:                                  ; preds = %while.body.3301, %if.then.3293
  %1478 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1479 = bitcast %struct.rtx_def* %1478 to i32*
  %bf.load3297 = load i32, i32* %1479, align 8
  %bf.clear3298 = and i32 %bf.load3297, 65535
  %cmp3299 = icmp eq i32 %bf.clear3298, 63
  br i1 %cmp3299, label %while.body.3301, label %while.end.3305

while.body.3301:                                  ; preds = %while.cond.3296
  %1480 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %fld3302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1480, i32 0, i32 1
  %arrayidx3303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3302, i32 0, i64 0
  %rtx3304 = bitcast %union.rtunion_def* %arrayidx3303 to %struct.rtx_def**
  %1481 = load %struct.rtx_def*, %struct.rtx_def** %rtx3304, align 8
  store %struct.rtx_def* %1481, %struct.rtx_def** %operand3136, align 8
  br label %while.cond.3296

while.end.3305:                                   ; preds = %while.cond.3296
  %1482 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %1483 = bitcast %struct.rtx_def* %1482 to i32*
  %bf.load3306 = load i32, i32* %1483, align 8
  %bf.clear3307 = and i32 %bf.load3306, 65535
  %cmp3308 = icmp eq i32 %bf.clear3307, 61
  br i1 %cmp3308, label %if.then.3310, label %if.end.3329

if.then.3310:                                     ; preds = %while.end.3305
  %1484 = load i32, i32* %i, align 4
  %idxprom3311 = sext i32 %1484 to i64
  %arrayidx3312 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3311
  %1485 = load i32, i32* %arrayidx3312, align 4
  %cmp3313 = icmp ne i32 %1485, 2
  br i1 %cmp3313, label %if.then.3315, label %if.end.3320

if.then.3315:                                     ; preds = %if.then.3310
  %1486 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %call3316 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %1486)
  %1487 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3317 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call3316, %struct.rtx_def* %1487)
  %1488 = bitcast %struct.rtx_def* %call3317 to i32*
  %bf.load3318 = load i32, i32* %1488, align 8
  %bf.clear3319 = and i32 %bf.load3318, -16711681
  %bf.set = or i32 %bf.clear3319, 131072
  store i32 %bf.set, i32* %1488, align 8
  br label %if.end.3320

if.end.3320:                                      ; preds = %if.then.3315, %if.then.3310
  %1489 = load i32, i32* %i, align 4
  %idxprom3321 = sext i32 %1489 to i64
  %arrayidx3322 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3321
  %1490 = load i32, i32* %arrayidx3322, align 4
  %cmp3323 = icmp ne i32 %1490, 0
  br i1 %cmp3323, label %if.then.3325, label %if.end.3328

if.then.3325:                                     ; preds = %if.end.3320
  %1491 = load %struct.rtx_def*, %struct.rtx_def** %operand3136, align 8
  %call3326 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %1491)
  %1492 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3327 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call3326, %struct.rtx_def* %1492)
  br label %if.end.3328

if.end.3328:                                      ; preds = %if.then.3325, %if.end.3320
  br label %if.end.3329

if.end.3329:                                      ; preds = %if.end.3328, %while.end.3305
  br label %if.end.3330

if.end.3330:                                      ; preds = %if.end.3329, %land.lhs.true.3284, %land.lhs.true.3278, %lor.lhs.false.3273, %if.else.3266
  br label %if.end.3331

if.end.3331:                                      ; preds = %if.end.3330, %cond.end.3259
  br label %if.end.3433

if.else.3332:                                     ; preds = %land.lhs.true.3132, %land.lhs.true.3127, %if.else.3122
  %1493 = load i32, i32* %i, align 4
  %idxprom3333 = sext i32 %1493 to i64
  %arrayidx3334 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3333
  %1494 = load i32, i32* %arrayidx3334, align 4
  %cmp3335 = icmp sge i32 %1494, 0
  br i1 %cmp3335, label %land.lhs.true.3337, label %if.end.3432

land.lhs.true.3337:                               ; preds = %if.else.3332
  %1495 = load i32, i32* %i, align 4
  %idxprom3338 = sext i32 %1495 to i64
  %arrayidx3339 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3338
  %1496 = load i32, i32* %arrayidx3339, align 4
  %idxprom3340 = sext i32 %1496 to i64
  %arrayidx3341 = getelementptr inbounds [30 x i8], [30 x i8]* %goal_alternative_win, i32 0, i64 %idxprom3340
  %1497 = load i8, i8* %arrayidx3341, align 1
  %conv3342 = sext i8 %1497 to i32
  %tobool3343 = icmp ne i32 %conv3342, 0
  br i1 %tobool3343, label %land.lhs.true.3344, label %if.end.3432

land.lhs.true.3344:                               ; preds = %land.lhs.true.3337
  %1498 = load i32, i32* %i, align 4
  %idxprom3345 = sext i32 %1498 to i64
  %arrayidx3346 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3345
  %1499 = load i32, i32* %arrayidx3346, align 4
  %cmp3347 = icmp eq i32 %1499, 0
  br i1 %cmp3347, label %land.lhs.true.3349, label %if.end.3432

land.lhs.true.3349:                               ; preds = %land.lhs.true.3344
  %1500 = load i32, i32* %i, align 4
  %idxprom3350 = sext i32 %1500 to i64
  %arrayidx3351 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3350
  %1501 = load i32, i32* %arrayidx3351, align 4
  %idxprom3352 = sext i32 %1501 to i64
  %arrayidx3353 = getelementptr inbounds [30 x i32], [30 x i32]* %modified, i32 0, i64 %idxprom3352
  %1502 = load i32, i32* %arrayidx3353, align 4
  %cmp3354 = icmp eq i32 %1502, 2
  br i1 %cmp3354, label %land.lhs.true.3356, label %if.end.3432

land.lhs.true.3356:                               ; preds = %land.lhs.true.3349
  %1503 = load i32, i32* %no_input_reloads, align 4
  %tobool3357 = icmp ne i32 %1503, 0
  br i1 %tobool3357, label %if.end.3432, label %land.lhs.true.3358

land.lhs.true.3358:                               ; preds = %land.lhs.true.3356
  %1504 = load i32, i32* %no_output_reloads, align 4
  %tobool3359 = icmp ne i32 %1504, 0
  br i1 %tobool3359, label %if.end.3432, label %land.lhs.true.3360

land.lhs.true.3360:                               ; preds = %land.lhs.true.3358
  %1505 = load i32, i32* @optimize, align 4
  %tobool3361 = icmp ne i32 %1505, 0
  br i1 %tobool3361, label %if.then.3362, label %if.end.3432

if.then.3362:                                     ; preds = %land.lhs.true.3360
  %1506 = load i32, i32* %i, align 4
  %idxprom3365 = sext i32 %1506 to i64
  %arrayidx3366 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3365
  %1507 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3366, align 8
  store %struct.rtx_def* %1507, %struct.rtx_def** %operand3364, align 8
  br label %while.cond.3367

while.cond.3367:                                  ; preds = %while.body.3372, %if.then.3362
  %1508 = load %struct.rtx_def*, %struct.rtx_def** %operand3364, align 8
  %1509 = bitcast %struct.rtx_def* %1508 to i32*
  %bf.load3368 = load i32, i32* %1509, align 8
  %bf.clear3369 = and i32 %bf.load3368, 65535
  %cmp3370 = icmp eq i32 %bf.clear3369, 63
  br i1 %cmp3370, label %while.body.3372, label %while.end.3376

while.body.3372:                                  ; preds = %while.cond.3367
  %1510 = load %struct.rtx_def*, %struct.rtx_def** %operand3364, align 8
  %fld3373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1510, i32 0, i32 1
  %arrayidx3374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3373, i32 0, i64 0
  %rtx3375 = bitcast %union.rtunion_def* %arrayidx3374 to %struct.rtx_def**
  %1511 = load %struct.rtx_def*, %struct.rtx_def** %rtx3375, align 8
  store %struct.rtx_def* %1511, %struct.rtx_def** %operand3364, align 8
  br label %while.cond.3367

while.end.3376:                                   ; preds = %while.cond.3367
  %1512 = load %struct.rtx_def*, %struct.rtx_def** %operand3364, align 8
  %1513 = bitcast %struct.rtx_def* %1512 to i32*
  %bf.load3377 = load i32, i32* %1513, align 8
  %bf.clear3378 = and i32 %bf.load3377, 65535
  %cmp3379 = icmp eq i32 %bf.clear3378, 66
  br i1 %cmp3379, label %land.lhs.true.3392, label %lor.lhs.false.3381

lor.lhs.false.3381:                               ; preds = %while.end.3376
  %1514 = load %struct.rtx_def*, %struct.rtx_def** %operand3364, align 8
  %1515 = bitcast %struct.rtx_def* %1514 to i32*
  %bf.load3382 = load i32, i32* %1515, align 8
  %bf.clear3383 = and i32 %bf.load3382, 65535
  %cmp3384 = icmp eq i32 %bf.clear3383, 61
  br i1 %cmp3384, label %land.lhs.true.3386, label %if.end.3431

land.lhs.true.3386:                               ; preds = %lor.lhs.false.3381
  %1516 = load %struct.rtx_def*, %struct.rtx_def** %operand3364, align 8
  %fld3387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1516, i32 0, i32 1
  %arrayidx3388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3387, i32 0, i64 0
  %rtuint3389 = bitcast %union.rtunion_def* %arrayidx3388 to i32*
  %1517 = load i32, i32* %rtuint3389, align 4
  %cmp3390 = icmp uge i32 %1517, 53
  br i1 %cmp3390, label %land.lhs.true.3392, label %if.end.3431

land.lhs.true.3392:                               ; preds = %land.lhs.true.3386, %while.end.3376
  %1518 = load i32, i32* %i, align 4
  %idxprom3393 = sext i32 %1518 to i64
  %arrayidx3394 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3393
  %1519 = load i32, i32* %arrayidx3394, align 4
  %idxprom3395 = sext i32 %1519 to i64
  %arrayidx3396 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3395
  %1520 = load i32, i32* %arrayidx3396, align 4
  %cmp3397 = icmp ne i32 %1520, 0
  br i1 %cmp3397, label %if.then.3399, label %if.end.3431

if.then.3399:                                     ; preds = %land.lhs.true.3392
  %1521 = load i32, i32* %i, align 4
  %idxprom3400 = sext i32 %1521 to i64
  %arrayidx3401 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3400
  %1522 = load i32, i32* %arrayidx3401, align 4
  %idxprom3402 = sext i32 %1522 to i64
  %arrayidx3403 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3402
  %1523 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3403, align 8
  %1524 = load i32, i32* %i, align 4
  %idxprom3404 = sext i32 %1524 to i64
  %arrayidx3405 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom3404
  %1525 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3405, align 8
  %1526 = load i32, i32* %i, align 4
  %idxprom3406 = sext i32 %1526 to i64
  %arrayidx3407 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3406
  %1527 = load i32, i32* %arrayidx3407, align 4
  %idxprom3408 = sext i32 %1527 to i64
  %arrayidx3409 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3408
  %1528 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3409, align 8
  %1529 = load i32, i32* %i, align 4
  %idxprom3410 = sext i32 %1529 to i64
  %arrayidx3411 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3410
  %1530 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3411, align 8
  %1531 = load i32, i32* %i, align 4
  %idxprom3412 = sext i32 %1531 to i64
  %arrayidx3413 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3412
  %1532 = load i32, i32* %arrayidx3413, align 4
  %idxprom3414 = sext i32 %1532 to i64
  %arrayidx3415 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative, i32 0, i64 %idxprom3414
  %1533 = load i32, i32* %arrayidx3415, align 4
  %1534 = load i32, i32* %i, align 4
  %idxprom3416 = sext i32 %1534 to i64
  %arrayidx3417 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3416
  %1535 = load i32, i32* %arrayidx3417, align 4
  %idxprom3418 = sext i32 %1535 to i64
  %arrayidx3419 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3418
  %1536 = load i32, i32* %arrayidx3419, align 4
  %1537 = load i32, i32* %i, align 4
  %idxprom3420 = sext i32 %1537 to i64
  %arrayidx3421 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i32 0, i64 %idxprom3420
  %1538 = load i32, i32* %arrayidx3421, align 4
  %1539 = load i32, i32* %i, align 4
  %idxprom3422 = sext i32 %1539 to i64
  %arrayidx3423 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3422
  %1540 = load i32, i32* %arrayidx3423, align 4
  %call3424 = call i32 @push_reload(%struct.rtx_def* %1523, %struct.rtx_def* %1525, %struct.rtx_def** %1528, %struct.rtx_def** %1530, i32 %1533, i32 %1536, i32 %1538, i32 0, i32 1, i32 %1540, i32 9)
  %1541 = load i32, i32* %i, align 4
  %idxprom3425 = sext i32 %1541 to i64
  %arrayidx3426 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3425
  %1542 = load i32, i32* %arrayidx3426, align 4
  %idxprom3427 = sext i32 %1542 to i64
  %arrayidx3428 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3427
  store i32 %call3424, i32* %arrayidx3428, align 4
  %1543 = load i32, i32* %i, align 4
  %idxprom3429 = sext i32 %1543 to i64
  %arrayidx3430 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3429
  store i32 %call3424, i32* %arrayidx3430, align 4
  br label %if.end.3431

if.end.3431:                                      ; preds = %if.then.3399, %land.lhs.true.3392, %land.lhs.true.3386, %lor.lhs.false.3381
  br label %if.end.3432

if.end.3432:                                      ; preds = %if.end.3431, %land.lhs.true.3360, %land.lhs.true.3358, %land.lhs.true.3356, %land.lhs.true.3349, %land.lhs.true.3344, %land.lhs.true.3337, %if.else.3332
  br label %if.end.3433

if.end.3433:                                      ; preds = %if.end.3432, %if.end.3331
  br label %if.end.3434

if.end.3434:                                      ; preds = %if.end.3433, %if.end.3121
  br label %for.inc.3435

for.inc.3435:                                     ; preds = %if.end.3434
  %1544 = load i32, i32* %i, align 4
  %inc3436 = add nsw i32 %1544, 1
  store i32 %inc3436, i32* %i, align 4
  br label %for.cond.2838

for.end.3437:                                     ; preds = %for.cond.2838
  store i32 0, i32* %i, align 4
  br label %for.cond.3438

for.cond.3438:                                    ; preds = %for.inc.3485, %for.end.3437
  %1545 = load i32, i32* %i, align 4
  %1546 = load i32, i32* %noperands, align 4
  %cmp3439 = icmp slt i32 %1545, %1546
  br i1 %cmp3439, label %for.body.3441, label %for.end.3487

for.body.3441:                                    ; preds = %for.cond.3438
  %1547 = load i32, i32* %replace.addr, align 4
  %tobool3442 = icmp ne i32 %1547, 0
  br i1 %tobool3442, label %if.then.3443, label %if.else.3476

if.then.3443:                                     ; preds = %for.body.3441
  %1548 = load i32, i32* %i, align 4
  %idxprom3445 = sext i32 %1548 to i64
  %arrayidx3446 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom3445
  %1549 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3446, align 8
  store %struct.rtx_def* %1549, %struct.rtx_def** %substitution, align 8
  %1550 = load %struct.rtx_def*, %struct.rtx_def** %substitution, align 8
  %1551 = load i32, i32* %i, align 4
  %idxprom3447 = sext i32 %1551 to i64
  %arrayidx3448 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3447
  %1552 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3448, align 8
  store %struct.rtx_def* %1550, %struct.rtx_def** %1552, align 8
  %1553 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1554 = bitcast %struct.rtx_def* %1553 to i32*
  %bf.load3449 = load i32, i32* %1554, align 8
  %bf.clear3450 = and i32 %bf.load3449, 65535
  %cmp3451 = icmp ne i32 %bf.clear3450, 33
  br i1 %cmp3451, label %land.lhs.true.3453, label %if.end.3475

land.lhs.true.3453:                               ; preds = %if.then.3443
  %1555 = load %struct.rtx_def*, %struct.rtx_def** %substitution, align 8
  %1556 = bitcast %struct.rtx_def* %1555 to i32*
  %bf.load3454 = load i32, i32* %1556, align 8
  %bf.clear3455 = and i32 %bf.load3454, 65535
  %cmp3456 = icmp eq i32 %bf.clear3455, 67
  br i1 %cmp3456, label %land.lhs.true.3458, label %if.end.3475

land.lhs.true.3458:                               ; preds = %land.lhs.true.3453
  %1557 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1558 = load %struct.rtx_def*, %struct.rtx_def** %substitution, align 8
  %fld3459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1558, i32 0, i32 1
  %arrayidx3460 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3459, i32 0, i64 0
  %rtx3461 = bitcast %union.rtunion_def* %arrayidx3460 to %struct.rtx_def**
  %1559 = load %struct.rtx_def*, %struct.rtx_def** %rtx3461, align 8
  %call3462 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1557, i32 13, %struct.rtx_def* %1559)
  %tobool3463 = icmp ne %struct.rtx_def* %call3462, null
  br i1 %tobool3463, label %if.end.3475, label %if.then.3464

if.then.3464:                                     ; preds = %land.lhs.true.3458
  %1560 = load %struct.rtx_def*, %struct.rtx_def** %substitution, align 8
  %fld3465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1560, i32 0, i32 1
  %arrayidx3466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3465, i32 0, i64 0
  %rtx3467 = bitcast %union.rtunion_def* %arrayidx3466 to %struct.rtx_def**
  %1561 = load %struct.rtx_def*, %struct.rtx_def** %rtx3467, align 8
  %1562 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld3468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1562, i32 0, i32 1
  %arrayidx3469 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3468, i32 0, i64 6
  %rtx3470 = bitcast %union.rtunion_def* %arrayidx3469 to %struct.rtx_def**
  %1563 = load %struct.rtx_def*, %struct.rtx_def** %rtx3470, align 8
  %call3471 = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 13, %struct.rtx_def* %1561, %struct.rtx_def* %1563)
  %1564 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld3472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1564, i32 0, i32 1
  %arrayidx3473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3472, i32 0, i64 6
  %rtx3474 = bitcast %union.rtunion_def* %arrayidx3473 to %struct.rtx_def**
  store %struct.rtx_def* %call3471, %struct.rtx_def** %rtx3474, align 8
  br label %if.end.3475

if.end.3475:                                      ; preds = %if.then.3464, %land.lhs.true.3458, %land.lhs.true.3453, %if.then.3443
  br label %if.end.3484

if.else.3476:                                     ; preds = %for.body.3441
  %1565 = load i32, i32* %i, align 4
  %idxprom3477 = sext i32 %1565 to i64
  %arrayidx3478 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i32 0, i64 %idxprom3477
  %1566 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3478, align 8
  %1567 = load i32, i32* %i, align 4
  %idxprom3479 = sext i32 %1567 to i64
  %arrayidx3480 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3479
  %1568 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3480, align 8
  %1569 = load %struct.rtx_def*, %struct.rtx_def** %1568, align 8
  %cmp3481 = icmp ne %struct.rtx_def* %1566, %1569
  %conv3482 = zext i1 %cmp3481 to i32
  %1570 = load i32, i32* %retval20, align 4
  %or3483 = or i32 %1570, %conv3482
  store i32 %or3483, i32* %retval20, align 4
  br label %if.end.3484

if.end.3484:                                      ; preds = %if.else.3476, %if.end.3475
  br label %for.inc.3485

for.inc.3485:                                     ; preds = %if.end.3484
  %1571 = load i32, i32* %i, align 4
  %inc3486 = add nsw i32 %1571, 1
  store i32 %inc3486, i32* %i, align 4
  br label %for.cond.3438

for.end.3487:                                     ; preds = %for.cond.3438
  %1572 = load i32, i32* %insn_code_number, align 4
  %cmp3488 = icmp sge i32 %1572, 0
  br i1 %cmp3488, label %land.lhs.true.3490, label %if.end.3528

land.lhs.true.3490:                               ; preds = %for.end.3487
  %1573 = load i32, i32* %replace.addr, align 4
  %tobool3491 = icmp ne i32 %1573, 0
  br i1 %tobool3491, label %if.then.3492, label %if.end.3528

if.then.3492:                                     ; preds = %land.lhs.true.3490
  %1574 = load i32, i32* %insn_code_number, align 4
  %idxprom3493 = sext i32 %1574 to i64
  %arrayidx3494 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom3493
  %n_dups = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx3494, i32 0, i32 5
  %1575 = load i8, i8* %n_dups, align 1
  %conv3495 = sext i8 %1575 to i32
  %sub3496 = sub nsw i32 %conv3495, 1
  store i32 %sub3496, i32* %i, align 4
  br label %for.cond.3497

for.cond.3497:                                    ; preds = %for.inc.3525, %if.then.3492
  %1576 = load i32, i32* %i, align 4
  %cmp3498 = icmp sge i32 %1576, 0
  br i1 %cmp3498, label %for.body.3500, label %for.end.3527

for.body.3500:                                    ; preds = %for.cond.3497
  %1577 = load i32, i32* %i, align 4
  %idxprom3502 = sext i32 %1577 to i64
  %arrayidx3503 = getelementptr inbounds [4 x i8], [4 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i32 0, i64 %idxprom3502
  %1578 = load i8, i8* %arrayidx3503, align 1
  %conv3504 = sext i8 %1578 to i32
  store i32 %conv3504, i32* %opno, align 4
  %1579 = load i32, i32* %opno, align 4
  %idxprom3505 = sext i32 %1579 to i64
  %arrayidx3506 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i32 0, i64 %idxprom3505
  %1580 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3506, align 8
  %1581 = load %struct.rtx_def*, %struct.rtx_def** %1580, align 8
  %1582 = load i32, i32* %i, align 4
  %idxprom3507 = sext i32 %1582 to i64
  %arrayidx3508 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom3507
  %1583 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3508, align 8
  store %struct.rtx_def* %1581, %struct.rtx_def** %1583, align 8
  %1584 = load i32, i32* %opno, align 4
  %idxprom3509 = sext i32 %1584 to i64
  %arrayidx3510 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3509
  %1585 = load i32, i32* %arrayidx3510, align 4
  %cmp3511 = icmp sge i32 %1585, 0
  br i1 %cmp3511, label %if.then.3513, label %if.end.3524

if.then.3513:                                     ; preds = %for.body.3500
  %1586 = load i32, i32* %i, align 4
  %idxprom3514 = sext i32 %1586 to i64
  %arrayidx3515 = getelementptr inbounds [4 x %struct.rtx_def**], [4 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i32 0, i64 %idxprom3514
  %1587 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx3515, align 8
  %1588 = load i32, i32* %opno, align 4
  %idxprom3516 = sext i32 %1588 to i64
  %arrayidx3517 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3516
  %1589 = load i32, i32* %arrayidx3517, align 4
  %1590 = load i32, i32* %opno, align 4
  %idxprom3518 = sext i32 %1590 to i64
  %1591 = load i32, i32* %insn_code_number, align 4
  %idxprom3519 = sext i32 %1591 to i64
  %arrayidx3520 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom3519
  %operand3521 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx3520, i32 0, i32 3
  %1592 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand3521, align 8
  %arrayidx3522 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %1592, i64 %idxprom3518
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx3522, i32 0, i32 2
  %bf.load3523 = load i16, i16* %mode, align 8
  %bf.cast = zext i16 %bf.load3523 to i32
  call void @push_replacement(%struct.rtx_def** %1587, i32 %1589, i32 %bf.cast)
  br label %if.end.3524

if.end.3524:                                      ; preds = %if.then.3513, %for.body.3500
  br label %for.inc.3525

for.inc.3525:                                     ; preds = %if.end.3524
  %1593 = load i32, i32* %i, align 4
  %dec3526 = add nsw i32 %1593, -1
  store i32 %dec3526, i32* %i, align 4
  br label %for.cond.3497

for.end.3527:                                     ; preds = %for.cond.3497
  br label %if.end.3528

if.end.3528:                                      ; preds = %for.end.3527, %land.lhs.true.3490, %for.end.3487
  %1594 = load i32, i32* %goal_earlyclobber, align 4
  %tobool3529 = icmp ne i32 %1594, 0
  br i1 %tobool3529, label %if.end.3531, label %if.then.3530

if.then.3530:                                     ; preds = %if.end.3528
  call void @combine_reloads()
  br label %if.end.3531

if.end.3531:                                      ; preds = %if.then.3530, %if.end.3528
  store i32 0, i32* %i, align 4
  br label %for.cond.3532

for.cond.3532:                                    ; preds = %for.inc.3704, %if.end.3531
  %1595 = load i32, i32* %i, align 4
  %1596 = load i32, i32* @n_reloads, align 4
  %cmp3533 = icmp slt i32 %1595, %1596
  br i1 %cmp3533, label %for.body.3535, label %for.end.3706

for.body.3535:                                    ; preds = %for.cond.3532
  %1597 = load i32, i32* %i, align 4
  %add3537 = add nsw i32 %1597, 1
  store i32 %add3537, i32* %j, align 4
  br label %for.cond.3538

for.cond.3538:                                    ; preds = %for.inc.3701, %for.body.3535
  %1598 = load i32, i32* %j, align 4
  %1599 = load i32, i32* @n_reloads, align 4
  %cmp3539 = icmp slt i32 %1598, %1599
  br i1 %cmp3539, label %for.body.3541, label %for.end.3703

for.body.3541:                                    ; preds = %for.cond.3538
  %1600 = load i32, i32* %i, align 4
  %idxprom3542 = sext i32 %1600 to i64
  %arrayidx3543 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3542
  %when_needed3544 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3543, i32 0, i32 17
  %1601 = load i32, i32* %when_needed3544, align 4
  %cmp3545 = icmp eq i32 %1601, 3
  br i1 %cmp3545, label %land.lhs.true.3565, label %lor.lhs.false.3547

lor.lhs.false.3547:                               ; preds = %for.body.3541
  %1602 = load i32, i32* %i, align 4
  %idxprom3548 = sext i32 %1602 to i64
  %arrayidx3549 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3548
  %when_needed3550 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3549, i32 0, i32 17
  %1603 = load i32, i32* %when_needed3550, align 4
  %cmp3551 = icmp eq i32 %1603, 5
  br i1 %cmp3551, label %land.lhs.true.3565, label %lor.lhs.false.3553

lor.lhs.false.3553:                               ; preds = %lor.lhs.false.3547
  %1604 = load i32, i32* %i, align 4
  %idxprom3554 = sext i32 %1604 to i64
  %arrayidx3555 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3554
  %when_needed3556 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3555, i32 0, i32 17
  %1605 = load i32, i32* %when_needed3556, align 4
  %cmp3557 = icmp eq i32 %1605, 4
  br i1 %cmp3557, label %land.lhs.true.3565, label %lor.lhs.false.3559

lor.lhs.false.3559:                               ; preds = %lor.lhs.false.3553
  %1606 = load i32, i32* %i, align 4
  %idxprom3560 = sext i32 %1606 to i64
  %arrayidx3561 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3560
  %when_needed3562 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3561, i32 0, i32 17
  %1607 = load i32, i32* %when_needed3562, align 4
  %cmp3563 = icmp eq i32 %1607, 6
  br i1 %cmp3563, label %land.lhs.true.3565, label %if.end.3700

land.lhs.true.3565:                               ; preds = %lor.lhs.false.3559, %lor.lhs.false.3553, %lor.lhs.false.3547, %for.body.3541
  %1608 = load i32, i32* %j, align 4
  %idxprom3566 = sext i32 %1608 to i64
  %arrayidx3567 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3566
  %when_needed3568 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3567, i32 0, i32 17
  %1609 = load i32, i32* %when_needed3568, align 4
  %cmp3569 = icmp eq i32 %1609, 3
  br i1 %cmp3569, label %land.lhs.true.3589, label %lor.lhs.false.3571

lor.lhs.false.3571:                               ; preds = %land.lhs.true.3565
  %1610 = load i32, i32* %j, align 4
  %idxprom3572 = sext i32 %1610 to i64
  %arrayidx3573 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3572
  %when_needed3574 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3573, i32 0, i32 17
  %1611 = load i32, i32* %when_needed3574, align 4
  %cmp3575 = icmp eq i32 %1611, 5
  br i1 %cmp3575, label %land.lhs.true.3589, label %lor.lhs.false.3577

lor.lhs.false.3577:                               ; preds = %lor.lhs.false.3571
  %1612 = load i32, i32* %j, align 4
  %idxprom3578 = sext i32 %1612 to i64
  %arrayidx3579 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3578
  %when_needed3580 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3579, i32 0, i32 17
  %1613 = load i32, i32* %when_needed3580, align 4
  %cmp3581 = icmp eq i32 %1613, 4
  br i1 %cmp3581, label %land.lhs.true.3589, label %lor.lhs.false.3583

lor.lhs.false.3583:                               ; preds = %lor.lhs.false.3577
  %1614 = load i32, i32* %j, align 4
  %idxprom3584 = sext i32 %1614 to i64
  %arrayidx3585 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3584
  %when_needed3586 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3585, i32 0, i32 17
  %1615 = load i32, i32* %when_needed3586, align 4
  %cmp3587 = icmp eq i32 %1615, 6
  br i1 %cmp3587, label %land.lhs.true.3589, label %if.end.3700

land.lhs.true.3589:                               ; preds = %lor.lhs.false.3583, %lor.lhs.false.3577, %lor.lhs.false.3571, %land.lhs.true.3565
  %1616 = load i32, i32* %i, align 4
  %idxprom3590 = sext i32 %1616 to i64
  %arrayidx3591 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3590
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3591, i32 0, i32 0
  %1617 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %1618 = load i32, i32* %j, align 4
  %idxprom3592 = sext i32 %1618 to i64
  %arrayidx3593 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3592
  %in3594 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3593, i32 0, i32 0
  %1619 = load %struct.rtx_def*, %struct.rtx_def** %in3594, align 8
  %call3595 = call i32 @rtx_equal_p(%struct.rtx_def* %1617, %struct.rtx_def* %1619)
  %tobool3596 = icmp ne i32 %call3595, 0
  br i1 %tobool3596, label %land.lhs.true.3597, label %if.end.3700

land.lhs.true.3597:                               ; preds = %land.lhs.true.3589
  %1620 = load i32, i32* %i, align 4
  %idxprom3598 = sext i32 %1620 to i64
  %arrayidx3599 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3598
  %opnum3600 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3599, i32 0, i32 12
  %1621 = load i32, i32* %opnum3600, align 4
  %idxprom3601 = sext i32 %1621 to i64
  %arrayidx3602 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3601
  %1622 = load i32, i32* %arrayidx3602, align 4
  %cmp3603 = icmp slt i32 %1622, 0
  br i1 %cmp3603, label %land.lhs.true.3617, label %lor.lhs.false.3605

lor.lhs.false.3605:                               ; preds = %land.lhs.true.3597
  %1623 = load i32, i32* %i, align 4
  %idxprom3606 = sext i32 %1623 to i64
  %arrayidx3607 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3606
  %opnum3608 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3607, i32 0, i32 12
  %1624 = load i32, i32* %opnum3608, align 4
  %idxprom3609 = sext i32 %1624 to i64
  %arrayidx3610 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3609
  %1625 = load i32, i32* %arrayidx3610, align 4
  %idxprom3611 = sext i32 %1625 to i64
  %arrayidx3612 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3611
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3612, i32 0, i32 18
  %bf.load3613 = load i8, i8* %optional, align 8
  %bf.clear3614 = and i8 %bf.load3613, 1
  %bf.cast3615 = zext i8 %bf.clear3614 to i32
  %tobool3616 = icmp ne i32 %bf.cast3615, 0
  br i1 %tobool3616, label %land.lhs.true.3617, label %if.end.3700

land.lhs.true.3617:                               ; preds = %lor.lhs.false.3605, %land.lhs.true.3597
  %1626 = load i32, i32* %j, align 4
  %idxprom3618 = sext i32 %1626 to i64
  %arrayidx3619 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3618
  %opnum3620 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3619, i32 0, i32 12
  %1627 = load i32, i32* %opnum3620, align 4
  %idxprom3621 = sext i32 %1627 to i64
  %arrayidx3622 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3621
  %1628 = load i32, i32* %arrayidx3622, align 4
  %cmp3623 = icmp slt i32 %1628, 0
  br i1 %cmp3623, label %land.lhs.true.3638, label %lor.lhs.false.3625

lor.lhs.false.3625:                               ; preds = %land.lhs.true.3617
  %1629 = load i32, i32* %j, align 4
  %idxprom3626 = sext i32 %1629 to i64
  %arrayidx3627 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3626
  %opnum3628 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3627, i32 0, i32 12
  %1630 = load i32, i32* %opnum3628, align 4
  %idxprom3629 = sext i32 %1630 to i64
  %arrayidx3630 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3629
  %1631 = load i32, i32* %arrayidx3630, align 4
  %idxprom3631 = sext i32 %1631 to i64
  %arrayidx3632 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3631
  %optional3633 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3632, i32 0, i32 18
  %bf.load3634 = load i8, i8* %optional3633, align 8
  %bf.clear3635 = and i8 %bf.load3634, 1
  %bf.cast3636 = zext i8 %bf.clear3635 to i32
  %tobool3637 = icmp ne i32 %bf.cast3636, 0
  br i1 %tobool3637, label %land.lhs.true.3638, label %if.end.3700

land.lhs.true.3638:                               ; preds = %lor.lhs.false.3625, %land.lhs.true.3617
  %1632 = load i32, i32* %i, align 4
  %idxprom3639 = sext i32 %1632 to i64
  %arrayidx3640 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3639
  %opnum3641 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3640, i32 0, i32 12
  %1633 = load i32, i32* %opnum3641, align 4
  %idxprom3642 = sext i32 %1633 to i64
  %arrayidx3643 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3642
  %1634 = load i32, i32* %arrayidx3643, align 4
  %1635 = load i32, i32* %j, align 4
  %idxprom3644 = sext i32 %1635 to i64
  %arrayidx3645 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3644
  %opnum3646 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3645, i32 0, i32 12
  %1636 = load i32, i32* %opnum3646, align 4
  %cmp3647 = icmp eq i32 %1634, %1636
  br i1 %cmp3647, label %if.then.3660, label %lor.lhs.false.3649

lor.lhs.false.3649:                               ; preds = %land.lhs.true.3638
  %1637 = load i32, i32* %j, align 4
  %idxprom3650 = sext i32 %1637 to i64
  %arrayidx3651 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3650
  %opnum3652 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3651, i32 0, i32 12
  %1638 = load i32, i32* %opnum3652, align 4
  %idxprom3653 = sext i32 %1638 to i64
  %arrayidx3654 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3653
  %1639 = load i32, i32* %arrayidx3654, align 4
  %1640 = load i32, i32* %i, align 4
  %idxprom3655 = sext i32 %1640 to i64
  %arrayidx3656 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3655
  %opnum3657 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3656, i32 0, i32 12
  %1641 = load i32, i32* %opnum3657, align 4
  %cmp3658 = icmp eq i32 %1639, %1641
  br i1 %cmp3658, label %if.then.3660, label %if.end.3700

if.then.3660:                                     ; preds = %lor.lhs.false.3649, %land.lhs.true.3638
  store i32 0, i32* %k, align 4
  br label %for.cond.3661

for.cond.3661:                                    ; preds = %for.inc.3674, %if.then.3660
  %1642 = load i32, i32* %k, align 4
  %1643 = load i32, i32* @n_replacements, align 4
  %cmp3662 = icmp slt i32 %1642, %1643
  br i1 %cmp3662, label %for.body.3664, label %for.end.3676

for.body.3664:                                    ; preds = %for.cond.3661
  %1644 = load i32, i32* %k, align 4
  %idxprom3665 = sext i32 %1644 to i64
  %arrayidx3666 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom3665
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx3666, i32 0, i32 2
  %1645 = load i32, i32* %what, align 4
  %1646 = load i32, i32* %j, align 4
  %cmp3667 = icmp eq i32 %1645, %1646
  br i1 %cmp3667, label %if.then.3669, label %if.end.3673

if.then.3669:                                     ; preds = %for.body.3664
  %1647 = load i32, i32* %i, align 4
  %1648 = load i32, i32* %k, align 4
  %idxprom3670 = sext i32 %1648 to i64
  %arrayidx3671 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom3670
  %what3672 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx3671, i32 0, i32 2
  store i32 %1647, i32* %what3672, align 4
  br label %if.end.3673

if.end.3673:                                      ; preds = %if.then.3669, %for.body.3664
  br label %for.inc.3674

for.inc.3674:                                     ; preds = %if.end.3673
  %1649 = load i32, i32* %k, align 4
  %inc3675 = add nsw i32 %1649, 1
  store i32 %inc3675, i32* %k, align 4
  br label %for.cond.3661

for.end.3676:                                     ; preds = %for.cond.3661
  %1650 = load i32, i32* %i, align 4
  %idxprom3677 = sext i32 %1650 to i64
  %arrayidx3678 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3677
  %when_needed3679 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3678, i32 0, i32 17
  %1651 = load i32, i32* %when_needed3679, align 4
  %cmp3680 = icmp eq i32 %1651, 4
  br i1 %cmp3680, label %if.then.3688, label %lor.lhs.false.3682

lor.lhs.false.3682:                               ; preds = %for.end.3676
  %1652 = load i32, i32* %i, align 4
  %idxprom3683 = sext i32 %1652 to i64
  %arrayidx3684 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3683
  %when_needed3685 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3684, i32 0, i32 17
  %1653 = load i32, i32* %when_needed3685, align 4
  %cmp3686 = icmp eq i32 %1653, 6
  br i1 %cmp3686, label %if.then.3688, label %if.else.3692

if.then.3688:                                     ; preds = %lor.lhs.false.3682, %for.end.3676
  %1654 = load i32, i32* %i, align 4
  %idxprom3689 = sext i32 %1654 to i64
  %arrayidx3690 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3689
  %when_needed3691 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3690, i32 0, i32 17
  store i32 8, i32* %when_needed3691, align 4
  br label %if.end.3696

if.else.3692:                                     ; preds = %lor.lhs.false.3682
  %1655 = load i32, i32* %i, align 4
  %idxprom3693 = sext i32 %1655 to i64
  %arrayidx3694 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3693
  %when_needed3695 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3694, i32 0, i32 17
  store i32 7, i32* %when_needed3695, align 4
  br label %if.end.3696

if.end.3696:                                      ; preds = %if.else.3692, %if.then.3688
  %1656 = load i32, i32* %j, align 4
  %idxprom3697 = sext i32 %1656 to i64
  %arrayidx3698 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3697
  %in3699 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3698, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in3699, align 8
  br label %if.end.3700

if.end.3700:                                      ; preds = %if.end.3696, %lor.lhs.false.3649, %lor.lhs.false.3625, %lor.lhs.false.3605, %land.lhs.true.3589, %lor.lhs.false.3583, %lor.lhs.false.3559
  br label %for.inc.3701

for.inc.3701:                                     ; preds = %if.end.3700
  %1657 = load i32, i32* %j, align 4
  %inc3702 = add nsw i32 %1657, 1
  store i32 %inc3702, i32* %j, align 4
  br label %for.cond.3538

for.end.3703:                                     ; preds = %for.cond.3538
  br label %for.inc.3704

for.inc.3704:                                     ; preds = %for.end.3703
  %1658 = load i32, i32* %i, align 4
  %inc3705 = add nsw i32 %1658, 1
  store i32 %inc3705, i32* %i, align 4
  br label %for.cond.3532

for.end.3706:                                     ; preds = %for.cond.3532
  store i32 0, i32* %i, align 4
  br label %for.cond.3707

for.cond.3707:                                    ; preds = %for.inc.3940, %for.end.3706
  %1659 = load i32, i32* %i, align 4
  %1660 = load i32, i32* @n_reloads, align 4
  %cmp3708 = icmp slt i32 %1659, %1660
  br i1 %cmp3708, label %for.body.3710, label %for.end.3942

for.body.3710:                                    ; preds = %for.cond.3707
  %1661 = load i32, i32* %i, align 4
  %idxprom3711 = sext i32 %1661 to i64
  %arrayidx3712 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3711
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3712, i32 0, i32 18
  %bf.load3713 = load i8, i8* %secondary_p, align 8
  %bf.lshr3714 = lshr i8 %bf.load3713, 2
  %bf.clear3715 = and i8 %bf.lshr3714, 1
  %bf.cast3716 = zext i8 %bf.clear3715 to i32
  %tobool3717 = icmp ne i32 %bf.cast3716, 0
  br i1 %tobool3717, label %land.lhs.true.3718, label %if.end.3738

land.lhs.true.3718:                               ; preds = %for.body.3710
  %1662 = load i32, i32* %i, align 4
  %idxprom3719 = sext i32 %1662 to i64
  %arrayidx3720 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3719
  %when_needed3721 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3720, i32 0, i32 17
  %1663 = load i32, i32* %when_needed3721, align 4
  %1664 = load i32, i32* %i, align 4
  %idxprom3722 = sext i32 %1664 to i64
  %arrayidx3723 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3722
  %opnum3724 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3723, i32 0, i32 12
  %1665 = load i32, i32* %opnum3724, align 4
  %idxprom3725 = sext i32 %1665 to i64
  %arrayidx3726 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_type, i32 0, i64 %idxprom3725
  %1666 = load i32, i32* %arrayidx3726, align 4
  %cmp3727 = icmp eq i32 %1663, %1666
  br i1 %cmp3727, label %if.then.3729, label %if.end.3738

if.then.3729:                                     ; preds = %land.lhs.true.3718
  %1667 = load i32, i32* %i, align 4
  %idxprom3730 = sext i32 %1667 to i64
  %arrayidx3731 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3730
  %opnum3732 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3731, i32 0, i32 12
  %1668 = load i32, i32* %opnum3732, align 4
  %idxprom3733 = sext i32 %1668 to i64
  %arrayidx3734 = getelementptr inbounds [30 x i32], [30 x i32]* %address_type, i32 0, i64 %idxprom3733
  %1669 = load i32, i32* %arrayidx3734, align 4
  %1670 = load i32, i32* %i, align 4
  %idxprom3735 = sext i32 %1670 to i64
  %arrayidx3736 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3735
  %when_needed3737 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3736, i32 0, i32 17
  store i32 %1669, i32* %when_needed3737, align 4
  br label %if.end.3738

if.end.3738:                                      ; preds = %if.then.3729, %land.lhs.true.3718, %for.body.3710
  %1671 = load i32, i32* %i, align 4
  %idxprom3739 = sext i32 %1671 to i64
  %arrayidx3740 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3739
  %when_needed3741 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3740, i32 0, i32 17
  %1672 = load i32, i32* %when_needed3741, align 4
  %cmp3742 = icmp eq i32 %1672, 3
  br i1 %cmp3742, label %land.lhs.true.3762, label %lor.lhs.false.3744

lor.lhs.false.3744:                               ; preds = %if.end.3738
  %1673 = load i32, i32* %i, align 4
  %idxprom3745 = sext i32 %1673 to i64
  %arrayidx3746 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3745
  %when_needed3747 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3746, i32 0, i32 17
  %1674 = load i32, i32* %when_needed3747, align 4
  %cmp3748 = icmp eq i32 %1674, 5
  br i1 %cmp3748, label %land.lhs.true.3762, label %lor.lhs.false.3750

lor.lhs.false.3750:                               ; preds = %lor.lhs.false.3744
  %1675 = load i32, i32* %i, align 4
  %idxprom3751 = sext i32 %1675 to i64
  %arrayidx3752 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3751
  %when_needed3753 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3752, i32 0, i32 17
  %1676 = load i32, i32* %when_needed3753, align 4
  %cmp3754 = icmp eq i32 %1676, 4
  br i1 %cmp3754, label %land.lhs.true.3762, label %lor.lhs.false.3756

lor.lhs.false.3756:                               ; preds = %lor.lhs.false.3750
  %1677 = load i32, i32* %i, align 4
  %idxprom3757 = sext i32 %1677 to i64
  %arrayidx3758 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3757
  %when_needed3759 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3758, i32 0, i32 17
  %1678 = load i32, i32* %when_needed3759, align 4
  %cmp3760 = icmp eq i32 %1678, 6
  br i1 %cmp3760, label %land.lhs.true.3762, label %if.end.3887

land.lhs.true.3762:                               ; preds = %lor.lhs.false.3756, %lor.lhs.false.3750, %lor.lhs.false.3744, %if.end.3738
  %1679 = load i32, i32* %i, align 4
  %idxprom3763 = sext i32 %1679 to i64
  %arrayidx3764 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3763
  %opnum3765 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3764, i32 0, i32 12
  %1680 = load i32, i32* %opnum3765, align 4
  %idxprom3766 = sext i32 %1680 to i64
  %arrayidx3767 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3766
  %1681 = load i32, i32* %arrayidx3767, align 4
  %cmp3768 = icmp slt i32 %1681, 0
  br i1 %cmp3768, label %if.then.3783, label %lor.lhs.false.3770

lor.lhs.false.3770:                               ; preds = %land.lhs.true.3762
  %1682 = load i32, i32* %i, align 4
  %idxprom3771 = sext i32 %1682 to i64
  %arrayidx3772 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3771
  %opnum3773 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3772, i32 0, i32 12
  %1683 = load i32, i32* %opnum3773, align 4
  %idxprom3774 = sext i32 %1683 to i64
  %arrayidx3775 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3774
  %1684 = load i32, i32* %arrayidx3775, align 4
  %idxprom3776 = sext i32 %1684 to i64
  %arrayidx3777 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3776
  %optional3778 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3777, i32 0, i32 18
  %bf.load3779 = load i8, i8* %optional3778, align 8
  %bf.clear3780 = and i8 %bf.load3779, 1
  %bf.cast3781 = zext i8 %bf.clear3780 to i32
  %tobool3782 = icmp ne i32 %bf.cast3781, 0
  br i1 %tobool3782, label %if.then.3783, label %if.end.3887

if.then.3783:                                     ; preds = %lor.lhs.false.3770, %land.lhs.true.3762
  %1685 = load i32, i32* %i, align 4
  %idxprom3784 = sext i32 %1685 to i64
  %arrayidx3785 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3784
  %when_needed3786 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3785, i32 0, i32 17
  %1686 = load i32, i32* %when_needed3786, align 4
  %cmp3787 = icmp eq i32 %1686, 3
  br i1 %cmp3787, label %land.lhs.true.3795, label %lor.lhs.false.3789

lor.lhs.false.3789:                               ; preds = %if.then.3783
  %1687 = load i32, i32* %i, align 4
  %idxprom3790 = sext i32 %1687 to i64
  %arrayidx3791 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3790
  %when_needed3792 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3791, i32 0, i32 17
  %1688 = load i32, i32* %when_needed3792, align 4
  %cmp3793 = icmp eq i32 %1688, 4
  br i1 %cmp3793, label %land.lhs.true.3795, label %if.end.3825

land.lhs.true.3795:                               ; preds = %lor.lhs.false.3789, %if.then.3783
  %1689 = load i32, i32* %i, align 4
  %idxprom3796 = sext i32 %1689 to i64
  %arrayidx3797 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3796
  %secondary_in_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3797, i32 0, i32 13
  %1690 = load i32, i32* %secondary_in_reload, align 4
  %cmp3798 = icmp ne i32 %1690, -1
  br i1 %cmp3798, label %if.then.3800, label %if.end.3825

if.then.3800:                                     ; preds = %land.lhs.true.3795
  %1691 = load i32, i32* %i, align 4
  %idxprom3803 = sext i32 %1691 to i64
  %arrayidx3804 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3803
  %secondary_in_reload3805 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3804, i32 0, i32 13
  %1692 = load i32, i32* %secondary_in_reload3805, align 4
  store i32 %1692, i32* %secondary_in_reload3802, align 4
  %1693 = load i32, i32* %secondary_in_reload3802, align 4
  %idxprom3806 = sext i32 %1693 to i64
  %arrayidx3807 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3806
  %when_needed3808 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3807, i32 0, i32 17
  store i32 8, i32* %when_needed3808, align 4
  %1694 = load i32, i32* %secondary_in_reload3802, align 4
  %cmp3809 = icmp sgt i32 %1694, 0
  br i1 %cmp3809, label %land.lhs.true.3811, label %if.end.3824

land.lhs.true.3811:                               ; preds = %if.then.3800
  %1695 = load i32, i32* %secondary_in_reload3802, align 4
  %idxprom3812 = sext i32 %1695 to i64
  %arrayidx3813 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3812
  %secondary_in_reload3814 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3813, i32 0, i32 13
  %1696 = load i32, i32* %secondary_in_reload3814, align 4
  %cmp3815 = icmp ne i32 %1696, -1
  br i1 %cmp3815, label %if.then.3817, label %if.end.3824

if.then.3817:                                     ; preds = %land.lhs.true.3811
  %1697 = load i32, i32* %secondary_in_reload3802, align 4
  %idxprom3818 = sext i32 %1697 to i64
  %arrayidx3819 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3818
  %secondary_in_reload3820 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3819, i32 0, i32 13
  %1698 = load i32, i32* %secondary_in_reload3820, align 4
  %idxprom3821 = sext i32 %1698 to i64
  %arrayidx3822 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3821
  %when_needed3823 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3822, i32 0, i32 17
  store i32 8, i32* %when_needed3823, align 4
  br label %if.end.3824

if.end.3824:                                      ; preds = %if.then.3817, %land.lhs.true.3811, %if.then.3800
  br label %if.end.3825

if.end.3825:                                      ; preds = %if.end.3824, %land.lhs.true.3795, %lor.lhs.false.3789
  %1699 = load i32, i32* %i, align 4
  %idxprom3826 = sext i32 %1699 to i64
  %arrayidx3827 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3826
  %when_needed3828 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3827, i32 0, i32 17
  %1700 = load i32, i32* %when_needed3828, align 4
  %cmp3829 = icmp eq i32 %1700, 5
  br i1 %cmp3829, label %land.lhs.true.3837, label %lor.lhs.false.3831

lor.lhs.false.3831:                               ; preds = %if.end.3825
  %1701 = load i32, i32* %i, align 4
  %idxprom3832 = sext i32 %1701 to i64
  %arrayidx3833 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3832
  %when_needed3834 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3833, i32 0, i32 17
  %1702 = load i32, i32* %when_needed3834, align 4
  %cmp3835 = icmp eq i32 %1702, 6
  br i1 %cmp3835, label %land.lhs.true.3837, label %if.end.3866

land.lhs.true.3837:                               ; preds = %lor.lhs.false.3831, %if.end.3825
  %1703 = load i32, i32* %i, align 4
  %idxprom3838 = sext i32 %1703 to i64
  %arrayidx3839 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3838
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3839, i32 0, i32 14
  %1704 = load i32, i32* %secondary_out_reload, align 4
  %cmp3840 = icmp ne i32 %1704, -1
  br i1 %cmp3840, label %if.then.3842, label %if.end.3866

if.then.3842:                                     ; preds = %land.lhs.true.3837
  %1705 = load i32, i32* %i, align 4
  %idxprom3845 = sext i32 %1705 to i64
  %arrayidx3846 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3845
  %secondary_out_reload3847 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3846, i32 0, i32 14
  %1706 = load i32, i32* %secondary_out_reload3847, align 4
  store i32 %1706, i32* %secondary_out_reload3844, align 4
  %1707 = load i32, i32* %secondary_out_reload3844, align 4
  %idxprom3848 = sext i32 %1707 to i64
  %arrayidx3849 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3848
  %when_needed3850 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3849, i32 0, i32 17
  store i32 8, i32* %when_needed3850, align 4
  %1708 = load i32, i32* %secondary_out_reload3844, align 4
  %tobool3851 = icmp ne i32 %1708, 0
  br i1 %tobool3851, label %land.lhs.true.3852, label %if.end.3865

land.lhs.true.3852:                               ; preds = %if.then.3842
  %1709 = load i32, i32* %secondary_out_reload3844, align 4
  %idxprom3853 = sext i32 %1709 to i64
  %arrayidx3854 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3853
  %secondary_out_reload3855 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3854, i32 0, i32 14
  %1710 = load i32, i32* %secondary_out_reload3855, align 4
  %cmp3856 = icmp ne i32 %1710, -1
  br i1 %cmp3856, label %if.then.3858, label %if.end.3865

if.then.3858:                                     ; preds = %land.lhs.true.3852
  %1711 = load i32, i32* %secondary_out_reload3844, align 4
  %idxprom3859 = sext i32 %1711 to i64
  %arrayidx3860 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3859
  %secondary_out_reload3861 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3860, i32 0, i32 14
  %1712 = load i32, i32* %secondary_out_reload3861, align 4
  %idxprom3862 = sext i32 %1712 to i64
  %arrayidx3863 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3862
  %when_needed3864 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3863, i32 0, i32 17
  store i32 8, i32* %when_needed3864, align 4
  br label %if.end.3865

if.end.3865:                                      ; preds = %if.then.3858, %land.lhs.true.3852, %if.then.3842
  br label %if.end.3866

if.end.3866:                                      ; preds = %if.end.3865, %land.lhs.true.3837, %lor.lhs.false.3831
  %1713 = load i32, i32* %i, align 4
  %idxprom3867 = sext i32 %1713 to i64
  %arrayidx3868 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3867
  %when_needed3869 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3868, i32 0, i32 17
  %1714 = load i32, i32* %when_needed3869, align 4
  %cmp3870 = icmp eq i32 %1714, 4
  br i1 %cmp3870, label %if.then.3878, label %lor.lhs.false.3872

lor.lhs.false.3872:                               ; preds = %if.end.3866
  %1715 = load i32, i32* %i, align 4
  %idxprom3873 = sext i32 %1715 to i64
  %arrayidx3874 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3873
  %when_needed3875 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3874, i32 0, i32 17
  %1716 = load i32, i32* %when_needed3875, align 4
  %cmp3876 = icmp eq i32 %1716, 6
  br i1 %cmp3876, label %if.then.3878, label %if.else.3882

if.then.3878:                                     ; preds = %lor.lhs.false.3872, %if.end.3866
  %1717 = load i32, i32* %i, align 4
  %idxprom3879 = sext i32 %1717 to i64
  %arrayidx3880 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3879
  %when_needed3881 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3880, i32 0, i32 17
  store i32 8, i32* %when_needed3881, align 4
  br label %if.end.3886

if.else.3882:                                     ; preds = %lor.lhs.false.3872
  %1718 = load i32, i32* %i, align 4
  %idxprom3883 = sext i32 %1718 to i64
  %arrayidx3884 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3883
  %when_needed3885 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3884, i32 0, i32 17
  store i32 7, i32* %when_needed3885, align 4
  br label %if.end.3886

if.end.3886:                                      ; preds = %if.else.3882, %if.then.3878
  br label %if.end.3887

if.end.3887:                                      ; preds = %if.end.3886, %lor.lhs.false.3770, %lor.lhs.false.3756
  %1719 = load i32, i32* %i, align 4
  %idxprom3888 = sext i32 %1719 to i64
  %arrayidx3889 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3888
  %when_needed3890 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3889, i32 0, i32 17
  %1720 = load i32, i32* %when_needed3890, align 4
  %cmp3891 = icmp eq i32 %1720, 3
  br i1 %cmp3891, label %land.lhs.true.3899, label %lor.lhs.false.3893

lor.lhs.false.3893:                               ; preds = %if.end.3887
  %1721 = load i32, i32* %i, align 4
  %idxprom3894 = sext i32 %1721 to i64
  %arrayidx3895 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3894
  %when_needed3896 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3895, i32 0, i32 17
  %1722 = load i32, i32* %when_needed3896, align 4
  %cmp3897 = icmp eq i32 %1722, 4
  br i1 %cmp3897, label %land.lhs.true.3899, label %if.end.3922

land.lhs.true.3899:                               ; preds = %lor.lhs.false.3893, %if.end.3887
  %1723 = load i32, i32* %i, align 4
  %idxprom3900 = sext i32 %1723 to i64
  %arrayidx3901 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3900
  %opnum3902 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3901, i32 0, i32 12
  %1724 = load i32, i32* %opnum3902, align 4
  %idxprom3903 = sext i32 %1724 to i64
  %arrayidx3904 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3903
  %1725 = load i32, i32* %arrayidx3904, align 4
  %cmp3905 = icmp sge i32 %1725, 0
  br i1 %cmp3905, label %land.lhs.true.3907, label %if.end.3922

land.lhs.true.3907:                               ; preds = %land.lhs.true.3899
  %1726 = load i32, i32* %i, align 4
  %idxprom3908 = sext i32 %1726 to i64
  %arrayidx3909 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3908
  %opnum3910 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3909, i32 0, i32 12
  %1727 = load i32, i32* %opnum3910, align 4
  %idxprom3911 = sext i32 %1727 to i64
  %arrayidx3912 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_reloadnum, i32 0, i64 %idxprom3911
  %1728 = load i32, i32* %arrayidx3912, align 4
  %idxprom3913 = sext i32 %1728 to i64
  %arrayidx3914 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3913
  %when_needed3915 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3914, i32 0, i32 17
  %1729 = load i32, i32* %when_needed3915, align 4
  %cmp3916 = icmp eq i32 %1729, 9
  br i1 %cmp3916, label %if.then.3918, label %if.end.3922

if.then.3918:                                     ; preds = %land.lhs.true.3907
  %1730 = load i32, i32* %i, align 4
  %idxprom3919 = sext i32 %1730 to i64
  %arrayidx3920 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3919
  %when_needed3921 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3920, i32 0, i32 17
  store i32 10, i32* %when_needed3921, align 4
  br label %if.end.3922

if.end.3922:                                      ; preds = %if.then.3918, %land.lhs.true.3907, %land.lhs.true.3899, %lor.lhs.false.3893
  %1731 = load i32, i32* %i, align 4
  %idxprom3923 = sext i32 %1731 to i64
  %arrayidx3924 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3923
  %opnum3925 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3924, i32 0, i32 12
  %1732 = load i32, i32* %opnum3925, align 4
  %idxprom3926 = sext i32 %1732 to i64
  %arrayidx3927 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3926
  %1733 = load i32, i32* %arrayidx3927, align 4
  %cmp3928 = icmp sge i32 %1733, 0
  br i1 %cmp3928, label %if.then.3930, label %if.end.3939

if.then.3930:                                     ; preds = %if.end.3922
  %1734 = load i32, i32* %i, align 4
  %idxprom3931 = sext i32 %1734 to i64
  %arrayidx3932 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3931
  %opnum3933 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3932, i32 0, i32 12
  %1735 = load i32, i32* %opnum3933, align 4
  %idxprom3934 = sext i32 %1735 to i64
  %arrayidx3935 = getelementptr inbounds [30 x i32], [30 x i32]* %goal_alternative_matches, i32 0, i64 %idxprom3934
  %1736 = load i32, i32* %arrayidx3935, align 4
  %1737 = load i32, i32* %i, align 4
  %idxprom3936 = sext i32 %1737 to i64
  %arrayidx3937 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3936
  %opnum3938 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3937, i32 0, i32 12
  store i32 %1736, i32* %opnum3938, align 4
  br label %if.end.3939

if.end.3939:                                      ; preds = %if.then.3930, %if.end.3922
  br label %for.inc.3940

for.inc.3940:                                     ; preds = %if.end.3939
  %1738 = load i32, i32* %i, align 4
  %inc3941 = add nsw i32 %1738, 1
  store i32 %inc3941, i32* %i, align 4
  br label %for.cond.3707

for.end.3942:                                     ; preds = %for.cond.3707
  store i32 -2, i32* %first_op_addr_num, align 4
  store i32 0, i32* %need_change, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.3947

for.cond.3947:                                    ; preds = %for.inc.3955, %for.end.3942
  %1739 = load i32, i32* %i, align 4
  %1740 = load i32, i32* %noperands, align 4
  %cmp3948 = icmp slt i32 %1739, %1740
  br i1 %cmp3948, label %for.body.3950, label %for.end.3957

for.body.3950:                                    ; preds = %for.cond.3947
  %1741 = load i32, i32* %i, align 4
  %idxprom3951 = sext i32 %1741 to i64
  %arrayidx3952 = getelementptr inbounds [30 x i32], [30 x i32]* %first_outpaddr_num, i32 0, i64 %idxprom3951
  store i32 -2, i32* %arrayidx3952, align 4
  %1742 = load i32, i32* %i, align 4
  %idxprom3953 = sext i32 %1742 to i64
  %arrayidx3954 = getelementptr inbounds [30 x i32], [30 x i32]* %first_inpaddr_num, i32 0, i64 %idxprom3953
  store i32 -2, i32* %arrayidx3954, align 4
  br label %for.inc.3955

for.inc.3955:                                     ; preds = %for.body.3950
  %1743 = load i32, i32* %i, align 4
  %inc3956 = add nsw i32 %1743, 1
  store i32 %inc3956, i32* %i, align 4
  br label %for.cond.3947

for.end.3957:                                     ; preds = %for.cond.3947
  %1744 = load i32, i32* @n_reloads, align 4
  %sub3958 = sub nsw i32 %1744, 1
  store i32 %sub3958, i32* %i, align 4
  br label %for.cond.3959

for.cond.3959:                                    ; preds = %for.inc.4006, %for.end.3957
  %1745 = load i32, i32* %i, align 4
  %cmp3960 = icmp sge i32 %1745, 0
  br i1 %cmp3960, label %for.body.3962, label %for.end.4008

for.body.3962:                                    ; preds = %for.cond.3959
  %1746 = load i32, i32* %i, align 4
  %idxprom3963 = sext i32 %1746 to i64
  %arrayidx3964 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3963
  %when_needed3965 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3964, i32 0, i32 17
  %1747 = load i32, i32* %when_needed3965, align 4
  switch i32 %1747, label %sw.default.4004 [
    i32 7, label %sw.bb.3966
    i32 3, label %sw.bb.3972
    i32 5, label %sw.bb.3988
  ]

sw.bb.3966:                                       ; preds = %for.body.3962
  %1748 = load i32, i32* %first_op_addr_num, align 4
  %inc3967 = add nsw i32 %1748, 1
  store i32 %inc3967, i32* %first_op_addr_num, align 4
  %cmp3968 = icmp sge i32 %inc3967, 0
  br i1 %cmp3968, label %if.then.3970, label %if.end.3971

if.then.3970:                                     ; preds = %sw.bb.3966
  %1749 = load i32, i32* %i, align 4
  store i32 %1749, i32* %first_op_addr_num, align 4
  store i32 1, i32* %need_change, align 4
  br label %if.end.3971

if.end.3971:                                      ; preds = %if.then.3970, %sw.bb.3966
  br label %sw.epilog.4005

sw.bb.3972:                                       ; preds = %for.body.3962
  %1750 = load i32, i32* %i, align 4
  %idxprom3973 = sext i32 %1750 to i64
  %arrayidx3974 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3973
  %opnum3975 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3974, i32 0, i32 12
  %1751 = load i32, i32* %opnum3975, align 4
  %idxprom3976 = sext i32 %1751 to i64
  %arrayidx3977 = getelementptr inbounds [30 x i32], [30 x i32]* %first_inpaddr_num, i32 0, i64 %idxprom3976
  %1752 = load i32, i32* %arrayidx3977, align 4
  %inc3978 = add nsw i32 %1752, 1
  store i32 %inc3978, i32* %arrayidx3977, align 4
  %cmp3979 = icmp sge i32 %inc3978, 0
  br i1 %cmp3979, label %if.then.3981, label %if.end.3987

if.then.3981:                                     ; preds = %sw.bb.3972
  %1753 = load i32, i32* %i, align 4
  %1754 = load i32, i32* %i, align 4
  %idxprom3982 = sext i32 %1754 to i64
  %arrayidx3983 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3982
  %opnum3984 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3983, i32 0, i32 12
  %1755 = load i32, i32* %opnum3984, align 4
  %idxprom3985 = sext i32 %1755 to i64
  %arrayidx3986 = getelementptr inbounds [30 x i32], [30 x i32]* %first_inpaddr_num, i32 0, i64 %idxprom3985
  store i32 %1753, i32* %arrayidx3986, align 4
  store i32 1, i32* %need_change, align 4
  br label %if.end.3987

if.end.3987:                                      ; preds = %if.then.3981, %sw.bb.3972
  br label %sw.epilog.4005

sw.bb.3988:                                       ; preds = %for.body.3962
  %1756 = load i32, i32* %i, align 4
  %idxprom3989 = sext i32 %1756 to i64
  %arrayidx3990 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3989
  %opnum3991 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3990, i32 0, i32 12
  %1757 = load i32, i32* %opnum3991, align 4
  %idxprom3992 = sext i32 %1757 to i64
  %arrayidx3993 = getelementptr inbounds [30 x i32], [30 x i32]* %first_outpaddr_num, i32 0, i64 %idxprom3992
  %1758 = load i32, i32* %arrayidx3993, align 4
  %inc3994 = add nsw i32 %1758, 1
  store i32 %inc3994, i32* %arrayidx3993, align 4
  %cmp3995 = icmp sge i32 %inc3994, 0
  br i1 %cmp3995, label %if.then.3997, label %if.end.4003

if.then.3997:                                     ; preds = %sw.bb.3988
  %1759 = load i32, i32* %i, align 4
  %1760 = load i32, i32* %i, align 4
  %idxprom3998 = sext i32 %1760 to i64
  %arrayidx3999 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3998
  %opnum4000 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3999, i32 0, i32 12
  %1761 = load i32, i32* %opnum4000, align 4
  %idxprom4001 = sext i32 %1761 to i64
  %arrayidx4002 = getelementptr inbounds [30 x i32], [30 x i32]* %first_outpaddr_num, i32 0, i64 %idxprom4001
  store i32 %1759, i32* %arrayidx4002, align 4
  store i32 1, i32* %need_change, align 4
  br label %if.end.4003

if.end.4003:                                      ; preds = %if.then.3997, %sw.bb.3988
  br label %sw.epilog.4005

sw.default.4004:                                  ; preds = %for.body.3962
  br label %sw.epilog.4005

sw.epilog.4005:                                   ; preds = %sw.default.4004, %if.end.4003, %if.end.3987, %if.end.3971
  br label %for.inc.4006

for.inc.4006:                                     ; preds = %sw.epilog.4005
  %1762 = load i32, i32* %i, align 4
  %dec4007 = add nsw i32 %1762, -1
  store i32 %dec4007, i32* %i, align 4
  br label %for.cond.3959

for.end.4008:                                     ; preds = %for.cond.3959
  %1763 = load i32, i32* %need_change, align 4
  %tobool4009 = icmp ne i32 %1763, 0
  br i1 %tobool4009, label %if.then.4010, label %if.end.4093

if.then.4010:                                     ; preds = %for.end.4008
  store i32 0, i32* %i, align 4
  br label %for.cond.4011

for.cond.4011:                                    ; preds = %for.inc.4090, %if.then.4010
  %1764 = load i32, i32* %i, align 4
  %1765 = load i32, i32* @n_reloads, align 4
  %cmp4012 = icmp slt i32 %1764, %1765
  br i1 %cmp4012, label %for.body.4014, label %for.end.4092

for.body.4014:                                    ; preds = %for.cond.4011
  %1766 = load i32, i32* %i, align 4
  %idxprom4017 = sext i32 %1766 to i64
  %arrayidx4018 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4017
  %when_needed4019 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4018, i32 0, i32 17
  %1767 = load i32, i32* %when_needed4019, align 4
  switch i32 %1767, label %sw.default.4033 [
    i32 8, label %sw.bb.4020
    i32 4, label %sw.bb.4021
    i32 6, label %sw.bb.4027
  ]

sw.bb.4020:                                       ; preds = %for.body.4014
  %1768 = load i32, i32* %first_op_addr_num, align 4
  store i32 %1768, i32* %first_num, align 4
  store i32 7, i32* %type, align 4
  br label %sw.epilog.4034

sw.bb.4021:                                       ; preds = %for.body.4014
  %1769 = load i32, i32* %i, align 4
  %idxprom4022 = sext i32 %1769 to i64
  %arrayidx4023 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4022
  %opnum4024 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4023, i32 0, i32 12
  %1770 = load i32, i32* %opnum4024, align 4
  %idxprom4025 = sext i32 %1770 to i64
  %arrayidx4026 = getelementptr inbounds [30 x i32], [30 x i32]* %first_inpaddr_num, i32 0, i64 %idxprom4025
  %1771 = load i32, i32* %arrayidx4026, align 4
  store i32 %1771, i32* %first_num, align 4
  store i32 3, i32* %type, align 4
  br label %sw.epilog.4034

sw.bb.4027:                                       ; preds = %for.body.4014
  %1772 = load i32, i32* %i, align 4
  %idxprom4028 = sext i32 %1772 to i64
  %arrayidx4029 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4028
  %opnum4030 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4029, i32 0, i32 12
  %1773 = load i32, i32* %opnum4030, align 4
  %idxprom4031 = sext i32 %1773 to i64
  %arrayidx4032 = getelementptr inbounds [30 x i32], [30 x i32]* %first_outpaddr_num, i32 0, i64 %idxprom4031
  %1774 = load i32, i32* %arrayidx4032, align 4
  store i32 %1774, i32* %first_num, align 4
  store i32 5, i32* %type, align 4
  br label %sw.epilog.4034

sw.default.4033:                                  ; preds = %for.body.4014
  br label %for.inc.4090

sw.epilog.4034:                                   ; preds = %sw.bb.4027, %sw.bb.4021, %sw.bb.4020
  %1775 = load i32, i32* %first_num, align 4
  %cmp4035 = icmp slt i32 %1775, 0
  br i1 %cmp4035, label %if.then.4037, label %if.else.4038

if.then.4037:                                     ; preds = %sw.epilog.4034
  br label %for.inc.4090

if.else.4038:                                     ; preds = %sw.epilog.4034
  %1776 = load i32, i32* %i, align 4
  %1777 = load i32, i32* %first_num, align 4
  %cmp4039 = icmp sgt i32 %1776, %1777
  br i1 %cmp4039, label %if.then.4041, label %if.else.4045

if.then.4041:                                     ; preds = %if.else.4038
  %1778 = load i32, i32* %type, align 4
  %1779 = load i32, i32* %i, align 4
  %idxprom4042 = sext i32 %1779 to i64
  %arrayidx4043 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4042
  %when_needed4044 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4043, i32 0, i32 17
  store i32 %1778, i32* %when_needed4044, align 4
  br label %if.end.4088

if.else.4045:                                     ; preds = %if.else.4038
  %1780 = load i32, i32* @n_reloads, align 4
  %sub4046 = sub nsw i32 %1780, 1
  store i32 %sub4046, i32* %j, align 4
  br label %for.cond.4047

for.cond.4047:                                    ; preds = %for.inc.4085, %if.else.4045
  %1781 = load i32, i32* %j, align 4
  %1782 = load i32, i32* %first_num, align 4
  %cmp4048 = icmp sgt i32 %1781, %1782
  br i1 %cmp4048, label %for.body.4050, label %for.end.4087

for.body.4050:                                    ; preds = %for.cond.4047
  %1783 = load i32, i32* %j, align 4
  %idxprom4051 = sext i32 %1783 to i64
  %arrayidx4052 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4051
  %when_needed4053 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4052, i32 0, i32 17
  %1784 = load i32, i32* %when_needed4053, align 4
  %1785 = load i32, i32* %type, align 4
  %cmp4054 = icmp eq i32 %1784, %1785
  br i1 %cmp4054, label %land.lhs.true.4056, label %if.end.4084

land.lhs.true.4056:                               ; preds = %for.body.4050
  %1786 = load i32, i32* %i, align 4
  %idxprom4057 = sext i32 %1786 to i64
  %arrayidx4058 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4057
  %secondary_p4059 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4058, i32 0, i32 18
  %bf.load4060 = load i8, i8* %secondary_p4059, align 8
  %bf.lshr4061 = lshr i8 %bf.load4060, 2
  %bf.clear4062 = and i8 %bf.lshr4061, 1
  %bf.cast4063 = zext i8 %bf.clear4062 to i32
  %tobool4064 = icmp ne i32 %bf.cast4063, 0
  br i1 %tobool4064, label %cond.true.4065, label %cond.false.4071

cond.true.4065:                                   ; preds = %land.lhs.true.4056
  %1787 = load i32, i32* %j, align 4
  %idxprom4066 = sext i32 %1787 to i64
  %arrayidx4067 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4066
  %secondary_in_reload4068 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4067, i32 0, i32 13
  %1788 = load i32, i32* %secondary_in_reload4068, align 4
  %1789 = load i32, i32* %i, align 4
  %cmp4069 = icmp eq i32 %1788, %1789
  br i1 %cmp4069, label %if.then.4080, label %if.end.4084

cond.false.4071:                                  ; preds = %land.lhs.true.4056
  %1790 = load i32, i32* %i, align 4
  %idxprom4072 = sext i32 %1790 to i64
  %arrayidx4073 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4072
  %in4074 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4073, i32 0, i32 0
  %1791 = load %struct.rtx_def*, %struct.rtx_def** %in4074, align 8
  %1792 = load i32, i32* %j, align 4
  %idxprom4075 = sext i32 %1792 to i64
  %arrayidx4076 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4075
  %in4077 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4076, i32 0, i32 0
  %1793 = load %struct.rtx_def*, %struct.rtx_def** %in4077, align 8
  %call4078 = call i32 @reg_mentioned_p(%struct.rtx_def* %1791, %struct.rtx_def* %1793)
  %tobool4079 = icmp ne i32 %call4078, 0
  br i1 %tobool4079, label %if.then.4080, label %if.end.4084

if.then.4080:                                     ; preds = %cond.false.4071, %cond.true.4065
  %1794 = load i32, i32* %type, align 4
  %1795 = load i32, i32* %i, align 4
  %idxprom4081 = sext i32 %1795 to i64
  %arrayidx4082 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4081
  %when_needed4083 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4082, i32 0, i32 17
  store i32 %1794, i32* %when_needed4083, align 4
  br label %for.end.4087

if.end.4084:                                      ; preds = %cond.false.4071, %cond.true.4065, %for.body.4050
  br label %for.inc.4085

for.inc.4085:                                     ; preds = %if.end.4084
  %1796 = load i32, i32* %j, align 4
  %dec4086 = add nsw i32 %1796, -1
  store i32 %dec4086, i32* %j, align 4
  br label %for.cond.4047

for.end.4087:                                     ; preds = %if.then.4080, %for.cond.4047
  br label %if.end.4088

if.end.4088:                                      ; preds = %for.end.4087, %if.then.4041
  br label %if.end.4089

if.end.4089:                                      ; preds = %if.end.4088
  br label %for.inc.4090

for.inc.4090:                                     ; preds = %if.end.4089, %if.then.4037, %sw.default.4033
  %1797 = load i32, i32* %i, align 4
  %inc4091 = add nsw i32 %1797, 1
  store i32 %inc4091, i32* %i, align 4
  br label %for.cond.4011

for.end.4092:                                     ; preds = %for.cond.4011
  br label %if.end.4093

if.end.4093:                                      ; preds = %for.end.4092, %for.end.4008
  store i32 0, i32* %i, align 4
  br label %for.cond.4094

for.cond.4094:                                    ; preds = %for.inc.4278, %if.end.4093
  %1798 = load i32, i32* %i, align 4
  %1799 = load i32, i32* @n_reloads, align 4
  %cmp4095 = icmp slt i32 %1798, %1799
  br i1 %cmp4095, label %for.body.4097, label %for.end.4280

for.body.4097:                                    ; preds = %for.cond.4094
  %1800 = load i32, i32* %i, align 4
  %idxprom4098 = sext i32 %1800 to i64
  %arrayidx4099 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4098
  %in4100 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4099, i32 0, i32 0
  %1801 = load %struct.rtx_def*, %struct.rtx_def** %in4100, align 8
  %cmp4101 = icmp ne %struct.rtx_def* %1801, null
  br i1 %cmp4101, label %land.lhs.true.4103, label %if.end.4277

land.lhs.true.4103:                               ; preds = %for.body.4097
  %1802 = load i32, i32* %i, align 4
  %idxprom4104 = sext i32 %1802 to i64
  %arrayidx4105 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4104
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4105, i32 0, i32 1
  %1803 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp4106 = icmp eq %struct.rtx_def* %1803, null
  br i1 %cmp4106, label %land.lhs.true.4108, label %if.end.4277

land.lhs.true.4108:                               ; preds = %land.lhs.true.4103
  %1804 = load i32, i32* %i, align 4
  %idxprom4109 = sext i32 %1804 to i64
  %arrayidx4110 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4109
  %when_needed4111 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4110, i32 0, i32 17
  %1805 = load i32, i32* %when_needed4111, align 4
  %cmp4112 = icmp eq i32 %1805, 7
  br i1 %cmp4112, label %if.then.4126, label %lor.lhs.false.4114

lor.lhs.false.4114:                               ; preds = %land.lhs.true.4108
  %1806 = load i32, i32* %i, align 4
  %idxprom4115 = sext i32 %1806 to i64
  %arrayidx4116 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4115
  %when_needed4117 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4116, i32 0, i32 17
  %1807 = load i32, i32* %when_needed4117, align 4
  %cmp4118 = icmp eq i32 %1807, 8
  br i1 %cmp4118, label %if.then.4126, label %lor.lhs.false.4120

lor.lhs.false.4120:                               ; preds = %lor.lhs.false.4114
  %1808 = load i32, i32* %i, align 4
  %idxprom4121 = sext i32 %1808 to i64
  %arrayidx4122 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4121
  %when_needed4123 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4122, i32 0, i32 17
  %1809 = load i32, i32* %when_needed4123, align 4
  %cmp4124 = icmp eq i32 %1809, 10
  br i1 %cmp4124, label %if.then.4126, label %if.end.4277

if.then.4126:                                     ; preds = %lor.lhs.false.4120, %lor.lhs.false.4114, %land.lhs.true.4108
  store i32 0, i32* %j, align 4
  br label %for.cond.4127

for.cond.4127:                                    ; preds = %for.inc.4274, %if.then.4126
  %1810 = load i32, i32* %j, align 4
  %1811 = load i32, i32* @n_reloads, align 4
  %cmp4128 = icmp slt i32 %1810, %1811
  br i1 %cmp4128, label %for.body.4130, label %for.end.4276

for.body.4130:                                    ; preds = %for.cond.4127
  %1812 = load i32, i32* %i, align 4
  %1813 = load i32, i32* %j, align 4
  %cmp4131 = icmp ne i32 %1812, %1813
  br i1 %cmp4131, label %land.lhs.true.4133, label %if.end.4273

land.lhs.true.4133:                               ; preds = %for.body.4130
  %1814 = load i32, i32* %j, align 4
  %idxprom4134 = sext i32 %1814 to i64
  %arrayidx4135 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4134
  %in4136 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4135, i32 0, i32 0
  %1815 = load %struct.rtx_def*, %struct.rtx_def** %in4136, align 8
  %cmp4137 = icmp ne %struct.rtx_def* %1815, null
  br i1 %cmp4137, label %land.lhs.true.4139, label %if.end.4273

land.lhs.true.4139:                               ; preds = %land.lhs.true.4133
  %1816 = load i32, i32* %j, align 4
  %idxprom4140 = sext i32 %1816 to i64
  %arrayidx4141 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4140
  %out4142 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4141, i32 0, i32 1
  %1817 = load %struct.rtx_def*, %struct.rtx_def** %out4142, align 8
  %cmp4143 = icmp eq %struct.rtx_def* %1817, null
  br i1 %cmp4143, label %land.lhs.true.4145, label %if.end.4273

land.lhs.true.4145:                               ; preds = %land.lhs.true.4139
  %1818 = load i32, i32* %j, align 4
  %idxprom4146 = sext i32 %1818 to i64
  %arrayidx4147 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4146
  %when_needed4148 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4147, i32 0, i32 17
  %1819 = load i32, i32* %when_needed4148, align 4
  %1820 = load i32, i32* %i, align 4
  %idxprom4149 = sext i32 %1820 to i64
  %arrayidx4150 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4149
  %when_needed4151 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4150, i32 0, i32 17
  %1821 = load i32, i32* %when_needed4151, align 4
  %cmp4152 = icmp eq i32 %1819, %1821
  br i1 %cmp4152, label %land.lhs.true.4154, label %if.end.4273

land.lhs.true.4154:                               ; preds = %land.lhs.true.4145
  %1822 = load i32, i32* %i, align 4
  %idxprom4155 = sext i32 %1822 to i64
  %arrayidx4156 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4155
  %in4157 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4156, i32 0, i32 0
  %1823 = load %struct.rtx_def*, %struct.rtx_def** %in4157, align 8
  %1824 = load i32, i32* %j, align 4
  %idxprom4158 = sext i32 %1824 to i64
  %arrayidx4159 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4158
  %in4160 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4159, i32 0, i32 0
  %1825 = load %struct.rtx_def*, %struct.rtx_def** %in4160, align 8
  %cmp4161 = icmp eq %struct.rtx_def* %1823, %1825
  br i1 %cmp4161, label %land.lhs.true.4215, label %lor.lhs.false.4163

lor.lhs.false.4163:                               ; preds = %land.lhs.true.4154
  %1826 = load i32, i32* %i, align 4
  %idxprom4164 = sext i32 %1826 to i64
  %arrayidx4165 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4164
  %in4166 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4165, i32 0, i32 0
  %1827 = load %struct.rtx_def*, %struct.rtx_def** %in4166, align 8
  %cmp4167 = icmp ne %struct.rtx_def* %1827, null
  br i1 %cmp4167, label %land.lhs.true.4169, label %if.end.4273

land.lhs.true.4169:                               ; preds = %lor.lhs.false.4163
  %1828 = load i32, i32* %i, align 4
  %idxprom4170 = sext i32 %1828 to i64
  %arrayidx4171 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4170
  %in4172 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4171, i32 0, i32 0
  %1829 = load %struct.rtx_def*, %struct.rtx_def** %in4172, align 8
  %1830 = bitcast %struct.rtx_def* %1829 to i32*
  %bf.load4173 = load i32, i32* %1830, align 8
  %bf.clear4174 = and i32 %bf.load4173, 65535
  %cmp4175 = icmp eq i32 %bf.clear4174, 61
  br i1 %cmp4175, label %cond.true.4177, label %cond.false.4200

cond.true.4177:                                   ; preds = %land.lhs.true.4169
  %1831 = load i32, i32* %j, align 4
  %idxprom4178 = sext i32 %1831 to i64
  %arrayidx4179 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4178
  %in4180 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4179, i32 0, i32 0
  %1832 = load %struct.rtx_def*, %struct.rtx_def** %in4180, align 8
  %1833 = bitcast %struct.rtx_def* %1832 to i32*
  %bf.load4181 = load i32, i32* %1833, align 8
  %bf.clear4182 = and i32 %bf.load4181, 65535
  %cmp4183 = icmp eq i32 %bf.clear4182, 61
  br i1 %cmp4183, label %land.lhs.true.4185, label %if.end.4273

land.lhs.true.4185:                               ; preds = %cond.true.4177
  %1834 = load i32, i32* %i, align 4
  %idxprom4186 = sext i32 %1834 to i64
  %arrayidx4187 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4186
  %in4188 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4187, i32 0, i32 0
  %1835 = load %struct.rtx_def*, %struct.rtx_def** %in4188, align 8
  %fld4189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1835, i32 0, i32 1
  %arrayidx4190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4189, i32 0, i64 0
  %rtuint4191 = bitcast %union.rtunion_def* %arrayidx4190 to i32*
  %1836 = load i32, i32* %rtuint4191, align 4
  %1837 = load i32, i32* %j, align 4
  %idxprom4192 = sext i32 %1837 to i64
  %arrayidx4193 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4192
  %in4194 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4193, i32 0, i32 0
  %1838 = load %struct.rtx_def*, %struct.rtx_def** %in4194, align 8
  %fld4195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1838, i32 0, i32 1
  %arrayidx4196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4195, i32 0, i64 0
  %rtuint4197 = bitcast %union.rtunion_def* %arrayidx4196 to i32*
  %1839 = load i32, i32* %rtuint4197, align 4
  %cmp4198 = icmp eq i32 %1836, %1839
  br i1 %cmp4198, label %land.lhs.true.4215, label %if.end.4273

cond.false.4200:                                  ; preds = %land.lhs.true.4169
  %1840 = load i32, i32* %i, align 4
  %idxprom4201 = sext i32 %1840 to i64
  %arrayidx4202 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4201
  %in4203 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4202, i32 0, i32 0
  %1841 = load %struct.rtx_def*, %struct.rtx_def** %in4203, align 8
  %1842 = load i32, i32* %j, align 4
  %idxprom4204 = sext i32 %1842 to i64
  %arrayidx4205 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4204
  %in4206 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4205, i32 0, i32 0
  %1843 = load %struct.rtx_def*, %struct.rtx_def** %in4206, align 8
  %call4207 = call i32 @rtx_equal_p(%struct.rtx_def* %1841, %struct.rtx_def* %1843)
  %tobool4208 = icmp ne i32 %call4207, 0
  br i1 %tobool4208, label %land.lhs.true.4209, label %if.end.4273

land.lhs.true.4209:                               ; preds = %cond.false.4200
  %1844 = load i32, i32* %i, align 4
  %idxprom4210 = sext i32 %1844 to i64
  %arrayidx4211 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4210
  %in4212 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4211, i32 0, i32 0
  %1845 = load %struct.rtx_def*, %struct.rtx_def** %in4212, align 8
  %call4213 = call i32 @side_effects_p(%struct.rtx_def* %1845)
  %tobool4214 = icmp ne i32 %call4213, 0
  br i1 %tobool4214, label %if.end.4273, label %land.lhs.true.4215

land.lhs.true.4215:                               ; preds = %land.lhs.true.4209, %land.lhs.true.4185, %land.lhs.true.4154
  %1846 = load i32, i32* %i, align 4
  %idxprom4216 = sext i32 %1846 to i64
  %arrayidx4217 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4216
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4217, i32 0, i32 2
  %1847 = load i32, i32* %class, align 4
  %1848 = load i32, i32* %j, align 4
  %idxprom4218 = sext i32 %1848 to i64
  %arrayidx4219 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4218
  %class4220 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4219, i32 0, i32 2
  %1849 = load i32, i32* %class4220, align 4
  %cmp4221 = icmp eq i32 %1847, %1849
  br i1 %cmp4221, label %land.lhs.true.4223, label %if.end.4273

land.lhs.true.4223:                               ; preds = %land.lhs.true.4215
  %1850 = load i32, i32* %i, align 4
  %idxprom4224 = sext i32 %1850 to i64
  %arrayidx4225 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4224
  %nocombine = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4225, i32 0, i32 18
  %bf.load4226 = load i8, i8* %nocombine, align 8
  %bf.lshr4227 = lshr i8 %bf.load4226, 1
  %bf.clear4228 = and i8 %bf.lshr4227, 1
  %bf.cast4229 = zext i8 %bf.clear4228 to i32
  %tobool4230 = icmp ne i32 %bf.cast4229, 0
  br i1 %tobool4230, label %if.end.4273, label %land.lhs.true.4231

land.lhs.true.4231:                               ; preds = %land.lhs.true.4223
  %1851 = load i32, i32* %j, align 4
  %idxprom4232 = sext i32 %1851 to i64
  %arrayidx4233 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4232
  %nocombine4234 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4233, i32 0, i32 18
  %bf.load4235 = load i8, i8* %nocombine4234, align 8
  %bf.lshr4236 = lshr i8 %bf.load4235, 1
  %bf.clear4237 = and i8 %bf.lshr4236, 1
  %bf.cast4238 = zext i8 %bf.clear4237 to i32
  %tobool4239 = icmp ne i32 %bf.cast4238, 0
  br i1 %tobool4239, label %if.end.4273, label %land.lhs.true.4240

land.lhs.true.4240:                               ; preds = %land.lhs.true.4231
  %1852 = load i32, i32* %i, align 4
  %idxprom4241 = sext i32 %1852 to i64
  %arrayidx4242 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4241
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4242, i32 0, i32 11
  %1853 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %1854 = load i32, i32* %j, align 4
  %idxprom4243 = sext i32 %1854 to i64
  %arrayidx4244 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4243
  %reg_rtx4245 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4244, i32 0, i32 11
  %1855 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx4245, align 8
  %cmp4246 = icmp eq %struct.rtx_def* %1853, %1855
  br i1 %cmp4246, label %if.then.4248, label %if.end.4273

if.then.4248:                                     ; preds = %land.lhs.true.4240
  %1856 = load i32, i32* %i, align 4
  %idxprom4249 = sext i32 %1856 to i64
  %arrayidx4250 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4249
  %opnum4251 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4250, i32 0, i32 12
  %1857 = load i32, i32* %opnum4251, align 4
  %1858 = load i32, i32* %j, align 4
  %idxprom4252 = sext i32 %1858 to i64
  %arrayidx4253 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4252
  %opnum4254 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4253, i32 0, i32 12
  %1859 = load i32, i32* %opnum4254, align 4
  %cmp4255 = icmp slt i32 %1857, %1859
  br i1 %cmp4255, label %cond.true.4257, label %cond.false.4261

cond.true.4257:                                   ; preds = %if.then.4248
  %1860 = load i32, i32* %i, align 4
  %idxprom4258 = sext i32 %1860 to i64
  %arrayidx4259 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4258
  %opnum4260 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4259, i32 0, i32 12
  %1861 = load i32, i32* %opnum4260, align 4
  br label %cond.end.4265

cond.false.4261:                                  ; preds = %if.then.4248
  %1862 = load i32, i32* %j, align 4
  %idxprom4262 = sext i32 %1862 to i64
  %arrayidx4263 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4262
  %opnum4264 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4263, i32 0, i32 12
  %1863 = load i32, i32* %opnum4264, align 4
  br label %cond.end.4265

cond.end.4265:                                    ; preds = %cond.false.4261, %cond.true.4257
  %cond4266 = phi i32 [ %1861, %cond.true.4257 ], [ %1863, %cond.false.4261 ]
  %1864 = load i32, i32* %i, align 4
  %idxprom4267 = sext i32 %1864 to i64
  %arrayidx4268 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4267
  %opnum4269 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4268, i32 0, i32 12
  store i32 %cond4266, i32* %opnum4269, align 4
  %1865 = load i32, i32* %i, align 4
  %1866 = load i32, i32* %j, align 4
  call void @transfer_replacements(i32 %1865, i32 %1866)
  %1867 = load i32, i32* %j, align 4
  %idxprom4270 = sext i32 %1867 to i64
  %arrayidx4271 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4270
  %in4272 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4271, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %in4272, align 8
  br label %if.end.4273

if.end.4273:                                      ; preds = %cond.end.4265, %land.lhs.true.4240, %land.lhs.true.4231, %land.lhs.true.4223, %land.lhs.true.4215, %land.lhs.true.4209, %cond.false.4200, %land.lhs.true.4185, %cond.true.4177, %lor.lhs.false.4163, %land.lhs.true.4145, %land.lhs.true.4139, %land.lhs.true.4133, %for.body.4130
  br label %for.inc.4274

for.inc.4274:                                     ; preds = %if.end.4273
  %1868 = load i32, i32* %j, align 4
  %inc4275 = add nsw i32 %1868, 1
  store i32 %inc4275, i32* %j, align 4
  br label %for.cond.4127

for.end.4276:                                     ; preds = %for.cond.4127
  br label %if.end.4277

if.end.4277:                                      ; preds = %for.end.4276, %lor.lhs.false.4120, %land.lhs.true.4103, %for.body.4097
  br label %for.inc.4278

for.inc.4278:                                     ; preds = %if.end.4277
  %1869 = load i32, i32* %i, align 4
  %inc4279 = add nsw i32 %1869, 1
  store i32 %inc4279, i32* %i, align 4
  br label %for.cond.4094

for.end.4280:                                     ; preds = %for.cond.4094
  store i32 0, i32* %i, align 4
  br label %for.cond.4281

for.cond.4281:                                    ; preds = %for.inc.4367, %for.end.4280
  %1870 = load i32, i32* %i, align 4
  %1871 = load i32, i32* @n_reloads, align 4
  %cmp4282 = icmp slt i32 %1870, %1871
  br i1 %cmp4282, label %for.body.4284, label %for.end.4369

for.body.4284:                                    ; preds = %for.cond.4281
  %1872 = load i32, i32* %i, align 4
  %idxprom4285 = sext i32 %1872 to i64
  %arrayidx4286 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4285
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4286, i32 0, i32 3
  %1873 = load i32, i32* %inmode, align 4
  %cmp4287 = icmp eq i32 %1873, 0
  br i1 %cmp4287, label %cond.true.4303, label %lor.lhs.false.4289

lor.lhs.false.4289:                               ; preds = %for.body.4284
  %1874 = load i32, i32* %i, align 4
  %idxprom4290 = sext i32 %1874 to i64
  %arrayidx4291 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4290
  %outmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4291, i32 0, i32 4
  %1875 = load i32, i32* %outmode, align 4
  %idxprom4292 = sext i32 %1875 to i64
  %arrayidx4293 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom4292
  %1876 = load i8, i8* %arrayidx4293, align 1
  %conv4294 = zext i8 %1876 to i32
  %1877 = load i32, i32* %i, align 4
  %idxprom4295 = sext i32 %1877 to i64
  %arrayidx4296 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4295
  %inmode4297 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4296, i32 0, i32 3
  %1878 = load i32, i32* %inmode4297, align 4
  %idxprom4298 = sext i32 %1878 to i64
  %arrayidx4299 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom4298
  %1879 = load i8, i8* %arrayidx4299, align 1
  %conv4300 = zext i8 %1879 to i32
  %cmp4301 = icmp sgt i32 %conv4294, %conv4300
  br i1 %cmp4301, label %cond.true.4303, label %cond.false.4307

cond.true.4303:                                   ; preds = %lor.lhs.false.4289, %for.body.4284
  %1880 = load i32, i32* %i, align 4
  %idxprom4304 = sext i32 %1880 to i64
  %arrayidx4305 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4304
  %outmode4306 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4305, i32 0, i32 4
  %1881 = load i32, i32* %outmode4306, align 4
  br label %cond.end.4311

cond.false.4307:                                  ; preds = %lor.lhs.false.4289
  %1882 = load i32, i32* %i, align 4
  %idxprom4308 = sext i32 %1882 to i64
  %arrayidx4309 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4308
  %inmode4310 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4309, i32 0, i32 3
  %1883 = load i32, i32* %inmode4310, align 4
  br label %cond.end.4311

cond.end.4311:                                    ; preds = %cond.false.4307, %cond.true.4303
  %cond4312 = phi i32 [ %1881, %cond.true.4303 ], [ %1883, %cond.false.4307 ]
  %1884 = load i32, i32* %i, align 4
  %idxprom4313 = sext i32 %1884 to i64
  %arrayidx4314 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4313
  %mode4315 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4314, i32 0, i32 5
  store i32 %cond4312, i32* %mode4315, align 4
  %1885 = load i32, i32* %i, align 4
  %idxprom4316 = sext i32 %1885 to i64
  %arrayidx4317 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4316
  %class4318 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4317, i32 0, i32 2
  %1886 = load i32, i32* %class4318, align 4
  %call4319 = call i32 @reg_classes_intersect_p(i32 %1886, i32 12)
  %tobool4320 = icmp ne i32 %call4319, 0
  br i1 %tobool4320, label %cond.false.4339, label %cond.true.4321

cond.true.4321:                                   ; preds = %cond.end.4311
  %1887 = load i32, i32* %i, align 4
  %idxprom4322 = sext i32 %1887 to i64
  %arrayidx4323 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4322
  %mode4324 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4323, i32 0, i32 5
  %1888 = load i32, i32* %mode4324, align 4
  %idxprom4325 = sext i32 %1888 to i64
  %arrayidx4326 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom4325
  %1889 = load i32, i32* %arrayidx4326, align 4
  %cmp4327 = icmp eq i32 %1889, 5
  br i1 %cmp4327, label %lor.end.4337, label %lor.rhs.4329

lor.rhs.4329:                                     ; preds = %cond.true.4321
  %1890 = load i32, i32* %i, align 4
  %idxprom4330 = sext i32 %1890 to i64
  %arrayidx4331 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4330
  %mode4332 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4331, i32 0, i32 5
  %1891 = load i32, i32* %mode4332, align 4
  %idxprom4333 = sext i32 %1891 to i64
  %arrayidx4334 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom4333
  %1892 = load i32, i32* %arrayidx4334, align 4
  %cmp4335 = icmp eq i32 %1892, 6
  br label %lor.end.4337

lor.end.4337:                                     ; preds = %lor.rhs.4329, %cond.true.4321
  %1893 = phi i1 [ true, %cond.true.4321 ], [ %cmp4335, %lor.rhs.4329 ]
  %cond4338 = select i1 %1893, i32 2, i32 1
  br label %cond.end.4363

cond.false.4339:                                  ; preds = %cond.end.4311
  %1894 = load i32, i32* %i, align 4
  %idxprom4340 = sext i32 %1894 to i64
  %arrayidx4341 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4340
  %mode4342 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4341, i32 0, i32 5
  %1895 = load i32, i32* %mode4342, align 4
  %cmp4343 = icmp eq i32 %1895, 18
  br i1 %cmp4343, label %cond.true.4345, label %cond.false.4346

cond.true.4345:                                   ; preds = %cond.false.4339
  br label %cond.end.4350

cond.false.4346:                                  ; preds = %cond.false.4339
  %1896 = load i32, i32* %i, align 4
  %idxprom4347 = sext i32 %1896 to i64
  %arrayidx4348 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4347
  %mode4349 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4348, i32 0, i32 5
  %1897 = load i32, i32* %mode4349, align 4
  br label %cond.end.4350

cond.end.4350:                                    ; preds = %cond.false.4346, %cond.true.4345
  %cond4351 = phi i32 [ 17, %cond.true.4345 ], [ %1897, %cond.false.4346 ]
  %idxprom4352 = sext i32 %cond4351 to i64
  %arrayidx4353 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom4352
  %1898 = load i8, i8* %arrayidx4353, align 1
  %conv4354 = zext i8 %1898 to i32
  %1899 = load i32, i32* @target_flags, align 4
  %and4355 = and i32 %1899, 33554432
  %tobool4356 = icmp ne i32 %and4355, 0
  %cond4357 = select i1 %tobool4356, i32 8, i32 4
  %add4358 = add nsw i32 %conv4354, %cond4357
  %sub4359 = sub nsw i32 %add4358, 1
  %1900 = load i32, i32* @target_flags, align 4
  %and4360 = and i32 %1900, 33554432
  %tobool4361 = icmp ne i32 %and4360, 0
  %cond4362 = select i1 %tobool4361, i32 8, i32 4
  %div = sdiv i32 %sub4359, %cond4362
  br label %cond.end.4363

cond.end.4363:                                    ; preds = %cond.end.4350, %lor.end.4337
  %cond4364 = phi i32 [ %cond4338, %lor.end.4337 ], [ %div, %cond.end.4350 ]
  %1901 = load i32, i32* %i, align 4
  %idxprom4365 = sext i32 %1901 to i64
  %arrayidx4366 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4365
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4366, i32 0, i32 6
  store i32 %cond4364, i32* %nregs, align 4
  br label %for.inc.4367

for.inc.4367:                                     ; preds = %cond.end.4363
  %1902 = load i32, i32* %i, align 4
  %inc4368 = add nsw i32 %1902, 1
  store i32 %inc4368, i32* %i, align 4
  br label %for.cond.4281

for.end.4369:                                     ; preds = %for.cond.4281
  store i32 0, i32* %i, align 4
  br label %for.cond.4370

for.cond.4370:                                    ; preds = %for.inc.4445, %for.end.4369
  %1903 = load i32, i32* %i, align 4
  %1904 = load i32, i32* @n_reloads, align 4
  %cmp4371 = icmp slt i32 %1903, %1904
  br i1 %cmp4371, label %for.body.4373, label %for.end.4447

for.body.4373:                                    ; preds = %for.cond.4370
  %1905 = load i32, i32* %i, align 4
  %idxprom4374 = sext i32 %1905 to i64
  %arrayidx4375 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4374
  %when_needed4376 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4375, i32 0, i32 17
  %1906 = load i32, i32* %when_needed4376, align 4
  %cmp4377 = icmp eq i32 %1906, 0
  br i1 %cmp4377, label %land.lhs.true.4379, label %if.end.4444

land.lhs.true.4379:                               ; preds = %for.body.4373
  %1907 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1907, i32 0, i32 1
  %arrayidx4381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4380, i32 0, i64 3
  %rtx4382 = bitcast %union.rtunion_def* %arrayidx4381 to %struct.rtx_def**
  %1908 = load %struct.rtx_def*, %struct.rtx_def** %rtx4382, align 8
  %1909 = bitcast %struct.rtx_def* %1908 to i32*
  %bf.load4383 = load i32, i32* %1909, align 8
  %bf.clear4384 = and i32 %bf.load4383, 65535
  %cmp4385 = icmp eq i32 %bf.clear4384, 47
  br i1 %cmp4385, label %land.lhs.true.4387, label %if.end.4444

land.lhs.true.4387:                               ; preds = %land.lhs.true.4379
  %1910 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1910, i32 0, i32 1
  %arrayidx4389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4388, i32 0, i64 3
  %rtx4390 = bitcast %union.rtunion_def* %arrayidx4389 to %struct.rtx_def**
  %1911 = load %struct.rtx_def*, %struct.rtx_def** %rtx4390, align 8
  %fld4391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1911, i32 0, i32 1
  %arrayidx4392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4391, i32 0, i64 0
  %rtx4393 = bitcast %union.rtunion_def* %arrayidx4392 to %struct.rtx_def**
  %1912 = load %struct.rtx_def*, %struct.rtx_def** %rtx4393, align 8
  %1913 = bitcast %struct.rtx_def* %1912 to i32*
  %bf.load4394 = load i32, i32* %1913, align 8
  %bf.clear4395 = and i32 %bf.load4394, 65535
  %cmp4396 = icmp eq i32 %bf.clear4395, 61
  br i1 %cmp4396, label %land.lhs.true.4398, label %if.end.4444

land.lhs.true.4398:                               ; preds = %land.lhs.true.4387
  %1914 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1914, i32 0, i32 1
  %arrayidx4400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4399, i32 0, i64 3
  %rtx4401 = bitcast %union.rtunion_def* %arrayidx4400 to %struct.rtx_def**
  %1915 = load %struct.rtx_def*, %struct.rtx_def** %rtx4401, align 8
  %fld4402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1915, i32 0, i32 1
  %arrayidx4403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4402, i32 0, i64 1
  %rtx4404 = bitcast %union.rtunion_def* %arrayidx4403 to %struct.rtx_def**
  %1916 = load %struct.rtx_def*, %struct.rtx_def** %rtx4404, align 8
  %1917 = load i32, i32* %i, align 4
  %idxprom4405 = sext i32 %1917 to i64
  %arrayidx4406 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4405
  %in4407 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4406, i32 0, i32 0
  %1918 = load %struct.rtx_def*, %struct.rtx_def** %in4407, align 8
  %cmp4408 = icmp eq %struct.rtx_def* %1916, %1918
  br i1 %cmp4408, label %if.then.4410, label %if.end.4444

if.then.4410:                                     ; preds = %land.lhs.true.4398
  %1919 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1919, i32 0, i32 1
  %arrayidx4413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4412, i32 0, i64 3
  %rtx4414 = bitcast %union.rtunion_def* %arrayidx4413 to %struct.rtx_def**
  %1920 = load %struct.rtx_def*, %struct.rtx_def** %rtx4414, align 8
  %fld4415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1920, i32 0, i32 1
  %arrayidx4416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4415, i32 0, i64 0
  %rtx4417 = bitcast %union.rtunion_def* %arrayidx4416 to %struct.rtx_def**
  %1921 = load %struct.rtx_def*, %struct.rtx_def** %rtx4417, align 8
  store %struct.rtx_def* %1921, %struct.rtx_def** %dest, align 8
  %1922 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld4420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1922, i32 0, i32 1
  %arrayidx4421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4420, i32 0, i64 0
  %rtuint4422 = bitcast %union.rtunion_def* %arrayidx4421 to i32*
  %1923 = load i32, i32* %rtuint4422, align 4
  store i32 %1923, i32* %regno4419, align 4
  %1924 = load i32, i32* %regno4419, align 4
  %cmp4423 = icmp ult i32 %1924, 53
  br i1 %cmp4423, label %land.lhs.true.4425, label %if.end.4443

land.lhs.true.4425:                               ; preds = %if.then.4410
  %1925 = load i32, i32* %i, align 4
  %idxprom4426 = sext i32 %1925 to i64
  %arrayidx4427 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4426
  %class4428 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4427, i32 0, i32 2
  %1926 = load i32, i32* %class4428, align 4
  %idxprom4429 = zext i32 %1926 to i64
  %arrayidx4430 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom4429
  %1927 = load i64, i64* %arrayidx4430, align 8
  %1928 = load i32, i32* %regno4419, align 4
  %sh_prom = zext i32 %1928 to i64
  %shl = shl i64 1, %sh_prom
  %and4431 = and i64 %1927, %shl
  %tobool4432 = icmp ne i64 %and4431, 0
  br i1 %tobool4432, label %land.lhs.true.4433, label %if.end.4443

land.lhs.true.4433:                               ; preds = %land.lhs.true.4425
  %1929 = load i32, i32* %regno4419, align 4
  %1930 = load i32, i32* %i, align 4
  %idxprom4434 = sext i32 %1930 to i64
  %arrayidx4435 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4434
  %mode4436 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4435, i32 0, i32 5
  %1931 = load i32, i32* %mode4436, align 4
  %call4437 = call i32 @ix86_hard_regno_mode_ok(i32 %1929, i32 %1931)
  %tobool4438 = icmp ne i32 %call4437, 0
  br i1 %tobool4438, label %if.then.4439, label %if.end.4443

if.then.4439:                                     ; preds = %land.lhs.true.4433
  %1932 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %1933 = load i32, i32* %i, align 4
  %idxprom4440 = sext i32 %1933 to i64
  %arrayidx4441 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom4440
  %reg_rtx4442 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4441, i32 0, i32 11
  store %struct.rtx_def* %1932, %struct.rtx_def** %reg_rtx4442, align 8
  br label %if.end.4443

if.end.4443:                                      ; preds = %if.then.4439, %land.lhs.true.4433, %land.lhs.true.4425, %if.then.4410
  br label %if.end.4444

if.end.4444:                                      ; preds = %if.end.4443, %land.lhs.true.4398, %land.lhs.true.4387, %land.lhs.true.4379, %for.body.4373
  br label %for.inc.4445

for.inc.4445:                                     ; preds = %if.end.4444
  %1934 = load i32, i32* %i, align 4
  %inc4446 = add nsw i32 %1934, 1
  store i32 %inc4446, i32* %i, align 4
  br label %for.cond.4370

for.end.4447:                                     ; preds = %for.cond.4370
  %1935 = load i32, i32* %retval20, align 4
  store i32 %1935, i32* %retval
  br label %return

return:                                           ; preds = %for.end.4447, %if.else.3112, %if.end.2567, %if.then.303, %if.then.99, %if.then.90
  %1936 = load i32, i32* %retval
  ret i32 %1936
}

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @ix86_register_move_cost(i32, i32, i32) #1

declare void @extract_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %x, i32 %opnum, i32 %type, i32 %ind_levels, i32 %is_set_dest, %struct.rtx_def* %insn, i32* %address_reloaded) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %is_set_dest.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %address_reloaded.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %copied = alloca i32, align 4
  %regno = alloca i32, align 4
  %mem = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %regno76 = alloca i32, align 4
  %tem83 = alloca %struct.rtx_def*, align 8
  %shift = alloca i32, align 4
  %new_part = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  store i32 %is_set_dest, i32* %is_set_dest.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32* %address_reloaded, i32** %address_reloaded.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8
  store i8* %3, i8** %fmt, align 8
  %4 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %4, 61
  br i1 %cmp, label %if.then, label %if.end.50

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx1 to i32*
  %6 = load i32, i32* %rtuint, align 4
  store i32 %6, i32* %regno, align 4
  %7 = load i32, i32* %regno, align 4
  %idxprom2 = sext i32 %7 to i64
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3, align 8
  %cmp4 = icmp ne %struct.rtx_def* %9, null
  br i1 %cmp4, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %10 = load i32, i32* %is_set_dest.addr, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %11 = load i32, i32* %regno, align 4
  %idxprom6 = sext i32 %11 to i64
  %12 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %12, i64 %idxprom6
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8
  store %struct.rtx_def* %13, %struct.rtx_def** %x.addr, align 8
  br label %if.end.49

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load i32, i32* %regno, align 4
  %idxprom8 = sext i32 %14 to i64
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %idxprom8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8
  %tobool10 = icmp ne %struct.rtx_def* %16, null
  br i1 %tobool10, label %land.lhs.true.11, label %if.end.48

land.lhs.true.11:                                 ; preds = %if.else
  %17 = load i32, i32* %regno, align 4
  %idxprom12 = sext i32 %17 to i64
  %18 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx13 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %18, i64 %idxprom12
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx13, align 8
  %cmp14 = icmp ne %struct.rtx_def* %19, null
  br i1 %cmp14, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.11
  %20 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool15 = icmp ne i32 %20, 0
  br i1 %tobool15, label %if.then.16, label %if.end.48

if.then.16:                                       ; preds = %lor.lhs.false, %land.lhs.true.11
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = load i32, i32* %regno, align 4
  %call = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %21, i32 %22)
  store %struct.rtx_def* %call, %struct.rtx_def** %mem, align 8
  %23 = load i32, i32* %regno, align 4
  %idxprom17 = sext i32 %23 to i64
  %24 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %24, i64 %idxprom17
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8
  %tobool19 = icmp ne %struct.rtx_def* %25, null
  br i1 %tobool19, label %if.then.25, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %if.then.16
  %26 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8
  %27 = load i32, i32* %regno, align 4
  %idxprom21 = sext i32 %27 to i64
  %28 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx22 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %idxprom21
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8
  %call23 = call i32 @rtx_equal_p(%struct.rtx_def* %26, %struct.rtx_def* %29)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end.47, label %if.then.25

if.then.25:                                       ; preds = %lor.lhs.false.20, %if.then.16
  %30 = load i32, i32* @replace_reloads, align 4
  %tobool26 = icmp ne i32 %30, 0
  br i1 %tobool26, label %land.lhs.true.27, label %if.end

land.lhs.true.27:                                 ; preds = %if.then.25
  %31 = load i32, i32* %opnum.addr, align 4
  %idxprom28 = sext i32 %31 to i64
  %arrayidx29 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom28
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx29, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp30 = icmp ne %struct.rtx_def* %32, %33
  br i1 %cmp30, label %if.then.31, label %if.end

if.then.31:                                       ; preds = %land.lhs.true.27
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call32 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %34)
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call33 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call32, %struct.rtx_def* %35)
  %36 = bitcast %struct.rtx_def* %call33 to i32*
  %bf.load34 = load i32, i32* %36, align 8
  %bf.clear35 = and i32 %bf.load34, -16711681
  %bf.set = or i32 %bf.clear35, 131072
  store i32 %bf.set, i32* %36, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.31, %land.lhs.true.27, %if.then.25
  %37 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %x.addr, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load36 = load i32, i32* %39, align 8
  %bf.lshr = lshr i32 %bf.load36, 16
  %bf.clear37 = and i32 %bf.lshr, 255
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %43 = load i32, i32* %opnum.addr, align 4
  %44 = load i32, i32* %type.addr, align 4
  %45 = load i32, i32* %ind_levels.addr, align 4
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call43 = call i32 @find_reloads_address(i32 %bf.clear37, %struct.rtx_def** %x.addr, %struct.rtx_def* %41, %struct.rtx_def** %rtx42, i32 %43, i32 %44, i32 %45, %struct.rtx_def* %46)
  store i32 %call43, i32* %i, align 4
  %47 = load i32*, i32** %address_reloaded.addr, align 8
  %tobool44 = icmp ne i32* %47, null
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end
  %48 = load i32, i32* %i, align 4
  %49 = load i32*, i32** %address_reloaded.addr, align 8
  store i32 %48, i32* %49, align 4
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.45, %if.end
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %lor.lhs.false.20
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %lor.lhs.false, %if.else
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.then.5
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %retval
  br label %return

if.end.50:                                        ; preds = %entry
  %51 = load i32, i32* %code, align 4
  %cmp51 = icmp eq i32 %51, 66
  br i1 %cmp51, label %if.then.52, label %if.end.66

if.then.52:                                       ; preds = %if.end.50
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %tem, align 8
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load53 = load i32, i32* %54, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 16
  %bf.clear55 = and i32 %bf.lshr54, 255
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %58 = load i32, i32* %opnum.addr, align 4
  %59 = load i32, i32* %type.addr, align 4
  %60 = load i32, i32* %ind_levels.addr, align 4
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call62 = call i32 @find_reloads_address(i32 %bf.clear55, %struct.rtx_def** %tem, %struct.rtx_def* %56, %struct.rtx_def** %rtx61, i32 %58, i32 %59, i32 %60, %struct.rtx_def* %61)
  store i32 %call62, i32* %i, align 4
  %62 = load i32*, i32** %address_reloaded.addr, align 8
  %tobool63 = icmp ne i32* %62, null
  br i1 %tobool63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.then.52
  %63 = load i32, i32* %i, align 4
  %64 = load i32*, i32** %address_reloaded.addr, align 8
  store i32 %63, i32* %64, align 4
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.64, %if.then.52
  %65 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %retval
  br label %return

if.end.66:                                        ; preds = %if.end.50
  %66 = load i32, i32* %code, align 4
  %cmp67 = icmp eq i32 %66, 63
  br i1 %cmp67, label %land.lhs.true.68, label %if.end.268

land.lhs.true.68:                                 ; preds = %if.end.66
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx71, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load72 = load i32, i32* %69, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 61
  br i1 %cmp74, label %if.then.75, label %if.end.268

if.then.75:                                       ; preds = %land.lhs.true.68
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtuint82 = bitcast %union.rtunion_def* %arrayidx81 to i32*
  %72 = load i32, i32* %rtuint82, align 4
  store i32 %72, i32* %regno76, align 4
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call84 = call i32 @subreg_lowpart_p(%struct.rtx_def* %73)
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %land.lhs.true.86, label %if.end.108

land.lhs.true.86:                                 ; preds = %if.then.75
  %74 = load i32, i32* %regno76, align 4
  %cmp87 = icmp sge i32 %74, 53
  br i1 %cmp87, label %land.lhs.true.88, label %if.end.108

land.lhs.true.88:                                 ; preds = %land.lhs.true.86
  %75 = load i32, i32* %regno76, align 4
  %idxprom89 = sext i32 %75 to i64
  %76 = load i16*, i16** @reg_renumber, align 8
  %arrayidx90 = getelementptr inbounds i16, i16* %76, i64 %idxprom89
  %77 = load i16, i16* %arrayidx90, align 2
  %conv = sext i16 %77 to i32
  %cmp91 = icmp slt i32 %conv, 0
  br i1 %cmp91, label %land.lhs.true.93, label %if.end.108

land.lhs.true.93:                                 ; preds = %land.lhs.true.88
  %78 = load i32, i32* %regno76, align 4
  %idxprom94 = sext i32 %78 to i64
  %79 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx95 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %79, i64 %idxprom94
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx95, align 8
  %cmp96 = icmp ne %struct.rtx_def* %80, null
  br i1 %cmp96, label %land.lhs.true.98, label %if.end.108

land.lhs.true.98:                                 ; preds = %land.lhs.true.93
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load99 = load i32, i32* %82, align 8
  %bf.lshr100 = lshr i32 %bf.load99, 16
  %bf.clear101 = and i32 %bf.lshr100, 255
  %83 = load i32, i32* %regno76, align 4
  %idxprom102 = sext i32 %83 to i64
  %84 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx103 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %84, i64 %idxprom102
  %85 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx103, align 8
  %call104 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear101, %struct.rtx_def* %85)
  store %struct.rtx_def* %call104, %struct.rtx_def** %tem83, align 8
  %cmp105 = icmp ne %struct.rtx_def* %call104, null
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %land.lhs.true.98
  %86 = load %struct.rtx_def*, %struct.rtx_def** %tem83, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %retval
  br label %return

if.end.108:                                       ; preds = %land.lhs.true.98, %land.lhs.true.93, %land.lhs.true.88, %land.lhs.true.86, %if.then.75
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load109 = load i32, i32* %88, align 8
  %bf.lshr110 = lshr i32 %bf.load109, 16
  %bf.clear111 = and i32 %bf.lshr110, 255
  %idxprom112 = sext i32 %bf.clear111 to i64
  %arrayidx113 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom112
  %89 = load i16, i16* %arrayidx113, align 2
  %conv114 = zext i16 %89 to i32
  %90 = load i32, i32* @target_flags, align 4
  %and = and i32 %90, 33554432
  %tobool115 = icmp ne i32 %and, 0
  %cond = select i1 %tobool115, i32 64, i32 32
  %cmp116 = icmp eq i32 %conv114, %cond
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.158

land.lhs.true.118:                                ; preds = %if.end.108
  %91 = load i32, i32* %regno76, align 4
  %cmp119 = icmp sge i32 %91, 53
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.158

land.lhs.true.121:                                ; preds = %land.lhs.true.118
  %92 = load i32, i32* %regno76, align 4
  %idxprom122 = sext i32 %92 to i64
  %93 = load i16*, i16** @reg_renumber, align 8
  %arrayidx123 = getelementptr inbounds i16, i16* %93, i64 %idxprom122
  %94 = load i16, i16* %arrayidx123, align 2
  %conv124 = sext i16 %94 to i32
  %cmp125 = icmp slt i32 %conv124, 0
  br i1 %cmp125, label %land.lhs.true.127, label %if.end.158

land.lhs.true.127:                                ; preds = %land.lhs.true.121
  %95 = load i32, i32* %regno76, align 4
  %idxprom128 = sext i32 %95 to i64
  %96 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx129 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %96, i64 %idxprom128
  %97 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx129, align 8
  %cmp130 = icmp ne %struct.rtx_def* %97, null
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.158

land.lhs.true.132:                                ; preds = %land.lhs.true.127
  %98 = load i32, i32* %regno76, align 4
  %idxprom133 = sext i32 %98 to i64
  %99 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx134 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %99, i64 %idxprom133
  %100 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 1
  %rtuint137 = bitcast %union.rtunion_def* %arrayidx136 to i32*
  %102 = load i32, i32* %rtuint137, align 4
  %103 = load i32, i32* @target_flags, align 4
  %and138 = and i32 %103, 33554432
  %tobool139 = icmp ne i32 %and138, 0
  %cond140 = select i1 %tobool139, i32 8, i32 4
  %div = udiv i32 %102, %cond140
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i32 0, i64 0
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx143, align 8
  %106 = bitcast %struct.rtx_def* %105 to i32*
  %bf.load144 = load i32, i32* %106, align 8
  %bf.lshr145 = lshr i32 %bf.load144, 16
  %bf.clear146 = and i32 %bf.lshr145, 255
  %call147 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %100, i32 %div, i32 0, i32 %bf.clear146)
  store %struct.rtx_def* %call147, %struct.rtx_def** %tem83, align 8
  %cmp148 = icmp ne %struct.rtx_def* %call147, null
  br i1 %cmp148, label %if.then.150, label %if.end.158

if.then.150:                                      ; preds = %land.lhs.true.132
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load151 = load i32, i32* %108, align 8
  %bf.lshr152 = lshr i32 %bf.load151, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  %109 = load %struct.rtx_def*, %struct.rtx_def** %tem83, align 8
  %call154 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear153, %struct.rtx_def* %109)
  store %struct.rtx_def* %call154, %struct.rtx_def** %tem83, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** %tem83, align 8
  %tobool155 = icmp ne %struct.rtx_def* %110, null
  br i1 %tobool155, label %if.end.157, label %if.then.156

if.then.156:                                      ; preds = %if.then.150
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 4434, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.find_reloads_toplev, i32 0, i32 0)) #5
  unreachable

if.end.157:                                       ; preds = %if.then.150
  %111 = load %struct.rtx_def*, %struct.rtx_def** %tem83, align 8
  store %struct.rtx_def* %111, %struct.rtx_def** %retval
  br label %return

if.end.158:                                       ; preds = %land.lhs.true.132, %land.lhs.true.127, %land.lhs.true.121, %land.lhs.true.118, %if.end.108
  %112 = load i32, i32* %regno76, align 4
  %cmp159 = icmp sge i32 %112, 53
  br i1 %cmp159, label %land.lhs.true.161, label %if.end.210

land.lhs.true.161:                                ; preds = %if.end.158
  %113 = load i32, i32* %regno76, align 4
  %idxprom162 = sext i32 %113 to i64
  %114 = load i16*, i16** @reg_renumber, align 8
  %arrayidx163 = getelementptr inbounds i16, i16* %114, i64 %idxprom162
  %115 = load i16, i16* %arrayidx163, align 2
  %conv164 = sext i16 %115 to i32
  %cmp165 = icmp slt i32 %conv164, 0
  br i1 %cmp165, label %land.lhs.true.167, label %if.end.210

land.lhs.true.167:                                ; preds = %land.lhs.true.161
  %116 = load i32, i32* %regno76, align 4
  %idxprom168 = sext i32 %116 to i64
  %117 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx169 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %117, i64 %idxprom168
  %118 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx169, align 8
  %cmp170 = icmp ne %struct.rtx_def* %118, null
  br i1 %cmp170, label %land.lhs.true.172, label %if.end.210

land.lhs.true.172:                                ; preds = %land.lhs.true.167
  %119 = load i32, i32* %regno76, align 4
  %idxprom173 = sext i32 %119 to i64
  %120 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx174 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %120, i64 %idxprom173
  %121 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx174, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load175 = load i32, i32* %122, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %cmp177 = icmp eq i32 %bf.clear176, 54
  br i1 %cmp177, label %land.lhs.true.179, label %if.end.210

land.lhs.true.179:                                ; preds = %land.lhs.true.172
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load180 = load i32, i32* %124, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 16
  %bf.clear182 = and i32 %bf.lshr181, 255
  %idxprom183 = sext i32 %bf.clear182 to i64
  %arrayidx184 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom183
  %125 = load i8, i8* %arrayidx184, align 1
  %conv185 = zext i8 %125 to i32
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 0
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx188, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %bf.load189 = load i32, i32* %128, align 8
  %bf.lshr190 = lshr i32 %bf.load189, 16
  %bf.clear191 = and i32 %bf.lshr190, 255
  %idxprom192 = sext i32 %bf.clear191 to i64
  %arrayidx193 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom192
  %129 = load i8, i8* %arrayidx193, align 1
  %conv194 = zext i8 %129 to i32
  %cmp195 = icmp slt i32 %conv185, %conv194
  br i1 %cmp195, label %if.then.197, label %if.end.210

if.then.197:                                      ; preds = %land.lhs.true.179
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 1
  %rtuint200 = bitcast %union.rtunion_def* %arrayidx199 to i32*
  %131 = load i32, i32* %rtuint200, align 4
  %mul = mul i32 %131, 8
  store i32 %mul, i32* %shift, align 4
  %132 = load i32, i32* %shift, align 4
  %cmp201 = icmp sge i32 %132, 64
  br i1 %cmp201, label %if.then.203, label %if.end.204

if.then.203:                                      ; preds = %if.then.197
  store i32 63, i32* %shift, align 4
  br label %if.end.204

if.end.204:                                       ; preds = %if.then.203, %if.then.197
  %133 = load i32, i32* %regno76, align 4
  %idxprom205 = sext i32 %133 to i64
  %134 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx206 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %134, i64 %idxprom205
  %135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx206, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx208 to i64*
  %136 = load i64, i64* %rtwint, align 8
  %137 = load i32, i32* %shift, align 4
  %sh_prom = zext i32 %137 to i64
  %shr = ashr i64 %136, %sh_prom
  %call209 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shr)
  store %struct.rtx_def* %call209, %struct.rtx_def** %retval
  br label %return

if.end.210:                                       ; preds = %land.lhs.true.179, %land.lhs.true.172, %land.lhs.true.167, %land.lhs.true.161, %if.end.158
  %138 = load i32, i32* %regno76, align 4
  %cmp211 = icmp sge i32 %138, 53
  br i1 %cmp211, label %land.lhs.true.213, label %if.else.233

land.lhs.true.213:                                ; preds = %if.end.210
  %139 = load i32, i32* %regno76, align 4
  %idxprom214 = sext i32 %139 to i64
  %140 = load i16*, i16** @reg_renumber, align 8
  %arrayidx215 = getelementptr inbounds i16, i16* %140, i64 %idxprom214
  %141 = load i16, i16* %arrayidx215, align 2
  %conv216 = sext i16 %141 to i32
  %cmp217 = icmp slt i32 %conv216, 0
  br i1 %cmp217, label %land.lhs.true.219, label %if.else.233

land.lhs.true.219:                                ; preds = %land.lhs.true.213
  %142 = load i32, i32* %regno76, align 4
  %idxprom220 = sext i32 %142 to i64
  %143 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx221 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %143, i64 %idxprom220
  %144 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx221, align 8
  %cmp222 = icmp ne %struct.rtx_def* %144, null
  br i1 %cmp222, label %land.lhs.true.224, label %if.else.233

land.lhs.true.224:                                ; preds = %land.lhs.true.219
  %145 = load i32, i32* %regno76, align 4
  %idxprom225 = sext i32 %145 to i64
  %146 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx226 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %146, i64 %idxprom225
  %147 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx226, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load227 = load i32, i32* %148, align 8
  %bf.lshr228 = lshr i32 %bf.load227, 16
  %bf.clear229 = and i32 %bf.lshr228, 255
  %cmp230 = icmp eq i32 %bf.clear229, 0
  br i1 %cmp230, label %if.then.232, label %if.else.233

if.then.232:                                      ; preds = %land.lhs.true.224
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 4464, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.find_reloads_toplev, i32 0, i32 0)) #5
  unreachable

if.else.233:                                      ; preds = %land.lhs.true.224, %land.lhs.true.219, %land.lhs.true.213, %if.end.210
  %149 = load i32, i32* %regno76, align 4
  %cmp234 = icmp sge i32 %149, 53
  br i1 %cmp234, label %land.lhs.true.236, label %if.end.266

land.lhs.true.236:                                ; preds = %if.else.233
  %150 = load i32, i32* %regno76, align 4
  %idxprom237 = sext i32 %150 to i64
  %151 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx238 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %151, i64 %idxprom237
  %152 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx238, align 8
  %cmp239 = icmp ne %struct.rtx_def* %152, null
  br i1 %cmp239, label %if.then.264, label %lor.lhs.false.241

lor.lhs.false.241:                                ; preds = %land.lhs.true.236
  %153 = load i32, i32* %regno76, align 4
  %idxprom242 = sext i32 %153 to i64
  %154 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx243 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %154, i64 %idxprom242
  %155 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx243, align 8
  %cmp244 = icmp ne %struct.rtx_def* %155, null
  br i1 %cmp244, label %land.lhs.true.246, label %if.end.266

land.lhs.true.246:                                ; preds = %lor.lhs.false.241
  %156 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load247 = load i32, i32* %157, align 8
  %bf.lshr248 = lshr i32 %bf.load247, 16
  %bf.clear249 = and i32 %bf.lshr248, 255
  %158 = load i32, i32* %regno76, align 4
  %idxprom250 = sext i32 %158 to i64
  %159 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx251 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %159, i64 %idxprom250
  %160 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx251, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  %call255 = call i32 @strict_memory_address_p(i32 %bf.clear249, %struct.rtx_def* %161)
  %tobool256 = icmp ne i32 %call255, 0
  br i1 %tobool256, label %lor.lhs.false.257, label %if.then.264

lor.lhs.false.257:                                ; preds = %land.lhs.true.246
  %162 = load i32, i32* %regno76, align 4
  %idxprom258 = sext i32 %162 to i64
  %163 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx259 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %163, i64 %idxprom258
  %164 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx259, align 8
  %call260 = call i32 @offsettable_memref_p(%struct.rtx_def* %164)
  %tobool261 = icmp ne i32 %call260, 0
  br i1 %tobool261, label %lor.lhs.false.262, label %if.then.264

lor.lhs.false.262:                                ; preds = %lor.lhs.false.257
  %165 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool263 = icmp ne i32 %165, 0
  br i1 %tobool263, label %if.then.264, label %if.end.266

if.then.264:                                      ; preds = %lor.lhs.false.262, %lor.lhs.false.257, %land.lhs.true.246, %land.lhs.true.236
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %167 = load i32, i32* %opnum.addr, align 4
  %168 = load i32, i32* %type.addr, align 4
  %169 = load i32, i32* %ind_levels.addr, align 4
  %170 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call265 = call %struct.rtx_def* @find_reloads_subreg_address(%struct.rtx_def* %166, i32 1, i32 %167, i32 %168, i32 %169, %struct.rtx_def* %170)
  store %struct.rtx_def* %call265, %struct.rtx_def** %x.addr, align 8
  br label %if.end.266

if.end.266:                                       ; preds = %if.then.264, %lor.lhs.false.262, %lor.lhs.false.241, %if.else.233
  br label %if.end.267

if.end.267:                                       ; preds = %if.end.266
  br label %if.end.268

if.end.268:                                       ; preds = %if.end.267, %land.lhs.true.68, %if.end.66
  store i32 0, i32* %copied, align 4
  %171 = load i32, i32* %code, align 4
  %idxprom269 = sext i32 %171 to i64
  %arrayidx270 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom269
  %172 = load i8, i8* %arrayidx270, align 1
  %conv271 = zext i8 %172 to i32
  %sub = sub nsw i32 %conv271, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.268
  %173 = load i32, i32* %i, align 4
  %cmp272 = icmp sge i32 %173, 0
  br i1 %cmp272, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %174 = load i32, i32* %i, align 4
  %idxprom274 = sext i32 %174 to i64
  %175 = load i8*, i8** %fmt, align 8
  %arrayidx275 = getelementptr inbounds i8, i8* %175, i64 %idxprom274
  %176 = load i8, i8* %arrayidx275, align 1
  %conv276 = sext i8 %176 to i32
  %cmp277 = icmp eq i32 %conv276, 101
  br i1 %cmp277, label %if.then.279, label %if.end.340

if.then.279:                                      ; preds = %for.body
  %177 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %177 to i64
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld281 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i32 0, i64 %idxprom280
  %rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx283, align 8
  %180 = load i32, i32* %opnum.addr, align 4
  %181 = load i32, i32* %type.addr, align 4
  %182 = load i32, i32* %ind_levels.addr, align 4
  %183 = load i32, i32* %is_set_dest.addr, align 4
  %184 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %185 = load i32*, i32** %address_reloaded.addr, align 8
  %call284 = call %struct.rtx_def* @find_reloads_toplev(%struct.rtx_def* %179, i32 %180, i32 %181, i32 %182, i32 %183, %struct.rtx_def* %184, i32* %185)
  store %struct.rtx_def* %call284, %struct.rtx_def** %new_part, align 8
  %186 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %187 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %187 to i64
  %188 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 %idxprom285
  %rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx288, align 8
  %cmp289 = icmp ne %struct.rtx_def* %186, %189
  br i1 %cmp289, label %land.lhs.true.291, label %if.end.335

land.lhs.true.291:                                ; preds = %if.then.279
  %190 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load292 = load i32, i32* %191, align 8
  %bf.clear293 = and i32 %bf.load292, 65535
  %cmp294 = icmp eq i32 %bf.clear293, 67
  br i1 %cmp294, label %if.end.335, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %land.lhs.true.291
  %192 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %193 = bitcast %struct.rtx_def* %192 to i32*
  %bf.load297 = load i32, i32* %193, align 8
  %bf.clear298 = and i32 %bf.load297, 65535
  %cmp299 = icmp eq i32 %bf.clear298, 68
  br i1 %cmp299, label %if.end.335, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %lor.lhs.false.296
  %194 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load302 = load i32, i32* %195, align 8
  %bf.clear303 = and i32 %bf.load302, 65535
  %cmp304 = icmp eq i32 %bf.clear303, 54
  br i1 %cmp304, label %if.end.335, label %lor.lhs.false.306

lor.lhs.false.306:                                ; preds = %lor.lhs.false.301
  %196 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load307 = load i32, i32* %197, align 8
  %bf.clear308 = and i32 %bf.load307, 65535
  %cmp309 = icmp eq i32 %bf.clear308, 55
  br i1 %cmp309, label %if.end.335, label %lor.lhs.false.311

lor.lhs.false.311:                                ; preds = %lor.lhs.false.306
  %198 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load312 = load i32, i32* %199, align 8
  %bf.clear313 = and i32 %bf.load312, 65535
  %cmp314 = icmp eq i32 %bf.clear313, 58
  br i1 %cmp314, label %if.end.335, label %lor.lhs.false.316

lor.lhs.false.316:                                ; preds = %lor.lhs.false.311
  %200 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load317 = load i32, i32* %201, align 8
  %bf.clear318 = and i32 %bf.load317, 65535
  %cmp319 = icmp eq i32 %bf.clear318, 134
  br i1 %cmp319, label %if.end.335, label %lor.lhs.false.321

lor.lhs.false.321:                                ; preds = %lor.lhs.false.316
  %202 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load322 = load i32, i32* %203, align 8
  %bf.clear323 = and i32 %bf.load322, 65535
  %cmp324 = icmp eq i32 %bf.clear323, 56
  br i1 %cmp324, label %if.end.335, label %lor.lhs.false.326

lor.lhs.false.326:                                ; preds = %lor.lhs.false.321
  %204 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load327 = load i32, i32* %205, align 8
  %bf.clear328 = and i32 %bf.load327, 65535
  %cmp329 = icmp eq i32 %bf.clear328, 140
  br i1 %cmp329, label %if.end.335, label %land.lhs.true.331

land.lhs.true.331:                                ; preds = %lor.lhs.false.326
  %206 = load i32, i32* %copied, align 4
  %tobool332 = icmp ne i32 %206, 0
  br i1 %tobool332, label %if.end.335, label %if.then.333

if.then.333:                                      ; preds = %land.lhs.true.331
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call334 = call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %207)
  store %struct.rtx_def* %call334, %struct.rtx_def** %x.addr, align 8
  store i32 1, i32* %copied, align 4
  br label %if.end.335

if.end.335:                                       ; preds = %if.then.333, %land.lhs.true.331, %lor.lhs.false.326, %lor.lhs.false.321, %lor.lhs.false.316, %lor.lhs.false.311, %lor.lhs.false.306, %lor.lhs.false.301, %lor.lhs.false.296, %land.lhs.true.291, %if.then.279
  %208 = load %struct.rtx_def*, %struct.rtx_def** %new_part, align 8
  %209 = load i32, i32* %i, align 4
  %idxprom336 = sext i32 %209 to i64
  %210 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 %idxprom336
  %rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**
  store %struct.rtx_def* %208, %struct.rtx_def** %rtx339, align 8
  br label %if.end.340

if.end.340:                                       ; preds = %if.end.335, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.340
  %211 = load i32, i32* %i, align 4
  %dec = add nsw i32 %211, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %212, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end, %if.end.204, %if.end.157, %if.then.107, %if.end.65, %if.end.49
  %213 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %213
}

declare %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare i32 @reg_preferred_class(i32) #1

declare i32 @reg_alternate_class(i32) #1

declare i32 @offsettable_memref_p(%struct.rtx_def*) #1

declare i32 @offsettable_nonstrict_memref_p(%struct.rtx_def*) #1

declare i32 @standard_80387_constant_p(%struct.rtx_def*) #1

declare i32 @standard_sse_constant_p(%struct.rtx_def*) #1

declare i32 @symbolic_reference_mentioned_p(%struct.rtx_def*) #1

declare i32 @legitimate_pic_address_disp_p(%struct.rtx_def*) #1

declare i32 @x86_64_sign_extended_value(%struct.rtx_def*) #1

declare i32 @x86_64_zero_extended_value(%struct.rtx_def*) #1

declare i32 @reg_fits_class_p(%struct.rtx_def*, i32, i32, i32) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) #3

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @alternative_allows_memconst(i8* %constraint, i32 %altnum) #0 {
entry:
  %retval = alloca i32, align 4
  %constraint.addr = alloca i8*, align 8
  %altnum.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i8* %constraint, i8** %constraint.addr, align 8
  store i32 %altnum, i32* %altnum.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.end, %entry
  %0 = load i32, i32* %altnum.addr, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %while.body, label %while.end.5

while.body:                                       ; preds = %while.cond
  br label %while.cond.1

while.cond.1:                                     ; preds = %while.body.4, %while.body
  %1 = load i8*, i8** %constraint.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** %constraint.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp2 = icmp ne i32 %conv, 44
  br i1 %cmp2, label %while.body.4, label %while.end

while.body.4:                                     ; preds = %while.cond.1
  br label %while.cond.1

while.end:                                        ; preds = %while.cond.1
  %3 = load i32, i32* %altnum.addr, align 4
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %altnum.addr, align 4
  br label %while.cond

while.end.5:                                      ; preds = %while.cond
  br label %while.cond.6

while.cond.6:                                     ; preds = %if.end, %while.end.5
  %4 = load i8*, i8** %constraint.addr, align 8
  %incdec.ptr7 = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr7, i8** %constraint.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv8 = sext i8 %5 to i32
  store i32 %conv8, i32* %c, align 4
  %tobool = icmp ne i32 %conv8, 0
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond.6
  %6 = load i32, i32* %c, align 4
  %cmp9 = icmp ne i32 %6, 44
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %c, align 4
  %cmp11 = icmp ne i32 %7, 35
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond.6
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond.6 ], [ %cmp11, %land.rhs ]
  br i1 %8, label %while.body.13, label %while.end.18

while.body.13:                                    ; preds = %land.end
  %9 = load i32, i32* %c, align 4
  %cmp14 = icmp eq i32 %9, 109
  br i1 %cmp14, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body.13
  %10 = load i32, i32* %c, align 4
  %cmp16 = icmp eq i32 %10, 111
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %while.body.13
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond.6

while.end.18:                                     ; preds = %land.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end.18, %if.then
  %11 = load i32, i32* %retval
  ret i32 %11
}

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @push_replacement(%struct.rtx_def** %loc, i32 %reloadnum, i32 %mode) #0 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %reloadnum.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %r = alloca %struct.replacement*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* @replace_reloads, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @n_replacements, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @n_replacements, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  store %struct.replacement* %arrayidx, %struct.replacement** %r, align 8
  %2 = load i32, i32* %reloadnum.addr, align 4
  %3 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %3, i32 0, i32 2
  store i32 %2, i32* %what, align 4
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %5 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %5, i32 0, i32 0
  store %struct.rtx_def** %4, %struct.rtx_def*** %where, align 8
  %6 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %6, i32 0, i32 1
  store %struct.rtx_def** null, %struct.rtx_def*** %subreg_loc, align 8
  %7 = load i32, i32* %mode.addr, align 4
  %8 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode1 = getelementptr inbounds %struct.replacement, %struct.replacement* %8, i32 0, i32 3
  store i32 %7, i32* %mode1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @combine_reloads() #0 {
entry:
  %i = alloca i32, align 4
  %output_reload = alloca i32, align 4
  %secondary_out = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  store i32 -1, i32* %output_reload, align 4
  store i32 -1, i32* %secondary_out, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 1
  %3 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp1 = icmp ne %struct.rtx_def* %3, null
  br i1 %cmp1, label %if.then, label %if.end.4

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %output_reload, align 4
  %cmp2 = icmp sge i32 %4, 0
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  br label %for.end.940

if.end:                                           ; preds = %if.then
  %5 = load i32, i32* %i, align 4
  store i32 %5, i32* %output_reload, align 4
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.4
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %output_reload, align 4
  %cmp5 = icmp slt i32 %7, 0
  br i1 %cmp5, label %if.then.8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %8 = load i32, i32* %output_reload, align 4
  %idxprom6 = sext i32 %8 to i64
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom6
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 18
  %bf.load = load i8, i8* %optional, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %lor.lhs.false, %for.end
  br label %for.end.940

if.end.9:                                         ; preds = %lor.lhs.false
  %9 = load i32, i32* %output_reload, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom10
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx11, i32 0, i32 0
  %10 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp12 = icmp ne %struct.rtx_def* %10, null
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.9
  br label %for.end.940

if.end.14:                                        ; preds = %if.end.9
  %11 = load i32, i32* %output_reload, align 4
  %idxprom15 = sext i32 %11 to i64
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom15
  %out17 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 1
  %12 = load %struct.rtx_def*, %struct.rtx_def** %out17, align 8
  %call = call i32 @earlyclobber_operand_p(%struct.rtx_def* %12)
  %tobool18 = icmp ne i32 %call, 0
  br i1 %tobool18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.14
  br label %for.end.940

if.end.20:                                        ; preds = %if.end.14
  store i32 0, i32* %i, align 4
  br label %for.cond.21

for.cond.21:                                      ; preds = %for.inc.40, %if.end.20
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* @n_reloads, align 4
  %cmp22 = icmp slt i32 %13, %14
  br i1 %cmp22, label %for.body.23, label %for.end.42

for.body.23:                                      ; preds = %for.cond.21
  %15 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom24
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx25, i32 0, i32 17
  %16 = load i32, i32* %when_needed, align 4
  %cmp26 = icmp eq i32 %16, 5
  br i1 %cmp26, label %land.lhs.true, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %for.body.23
  %17 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %17 to i64
  %arrayidx29 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom28
  %when_needed30 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx29, i32 0, i32 17
  %18 = load i32, i32* %when_needed30, align 4
  %cmp31 = icmp eq i32 %18, 6
  br i1 %cmp31, label %land.lhs.true, label %if.end.39

land.lhs.true:                                    ; preds = %lor.lhs.false.27, %for.body.23
  %19 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %19 to i64
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom32
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 12
  %20 = load i32, i32* %opnum, align 4
  %21 = load i32, i32* %output_reload, align 4
  %idxprom34 = sext i32 %21 to i64
  %arrayidx35 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom34
  %opnum36 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx35, i32 0, i32 12
  %22 = load i32, i32* %opnum36, align 4
  %cmp37 = icmp eq i32 %20, %22
  br i1 %cmp37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.lhs.true
  br label %for.end.940

if.end.39:                                        ; preds = %land.lhs.true, %lor.lhs.false.27
  br label %for.inc.40

for.inc.40:                                       ; preds = %if.end.39
  %23 = load i32, i32* %i, align 4
  %inc41 = add nsw i32 %23, 1
  store i32 %inc41, i32* %i, align 4
  br label %for.cond.21

for.end.42:                                       ; preds = %for.cond.21
  store i32 0, i32* %i, align 4
  br label %for.cond.43

for.cond.43:                                      ; preds = %for.inc.476, %for.end.42
  %24 = load i32, i32* %i, align 4
  %25 = load i32, i32* @n_reloads, align 4
  %cmp44 = icmp slt i32 %24, %25
  br i1 %cmp44, label %for.body.45, label %for.end.478

for.body.45:                                      ; preds = %for.cond.43
  %26 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %26 to i64
  %arrayidx47 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom46
  %in48 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx47, i32 0, i32 0
  %27 = load %struct.rtx_def*, %struct.rtx_def** %in48, align 8
  %tobool49 = icmp ne %struct.rtx_def* %27, null
  br i1 %tobool49, label %land.lhs.true.50, label %if.end.475

land.lhs.true.50:                                 ; preds = %for.body.45
  %28 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %28 to i64
  %arrayidx52 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom51
  %optional53 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx52, i32 0, i32 18
  %bf.load54 = load i8, i8* %optional53, align 8
  %bf.clear55 = and i8 %bf.load54, 1
  %bf.cast56 = zext i8 %bf.clear55 to i32
  %tobool57 = icmp ne i32 %bf.cast56, 0
  br i1 %tobool57, label %if.end.475, label %land.lhs.true.58

land.lhs.true.58:                                 ; preds = %land.lhs.true.50
  %29 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %29 to i64
  %arrayidx60 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom59
  %nocombine = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx60, i32 0, i32 18
  %bf.load61 = load i8, i8* %nocombine, align 8
  %bf.lshr = lshr i8 %bf.load61, 1
  %bf.clear62 = and i8 %bf.lshr, 1
  %bf.cast63 = zext i8 %bf.clear62 to i32
  %tobool64 = icmp ne i32 %bf.cast63, 0
  br i1 %tobool64, label %if.end.475, label %land.lhs.true.65

land.lhs.true.65:                                 ; preds = %land.lhs.true.58
  %30 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %30 to i64
  %arrayidx67 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom66
  %when_needed68 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx67, i32 0, i32 17
  %31 = load i32, i32* %when_needed68, align 4
  %cmp69 = icmp ne i32 %31, 5
  br i1 %cmp69, label %land.lhs.true.70, label %if.end.475

land.lhs.true.70:                                 ; preds = %land.lhs.true.65
  %32 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %32 to i64
  %arrayidx72 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom71
  %when_needed73 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx72, i32 0, i32 17
  %33 = load i32, i32* %when_needed73, align 4
  %cmp74 = icmp ne i32 %33, 6
  br i1 %cmp74, label %land.lhs.true.75, label %if.end.475

land.lhs.true.75:                                 ; preds = %land.lhs.true.70
  %34 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %34 to i64
  %arrayidx77 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom76
  %when_needed78 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx77, i32 0, i32 17
  %35 = load i32, i32* %when_needed78, align 4
  %cmp79 = icmp ne i32 %35, 9
  br i1 %cmp79, label %land.lhs.true.80, label %if.end.475

land.lhs.true.80:                                 ; preds = %land.lhs.true.75
  %36 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %36 to i64
  %arrayidx82 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom81
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx82, i32 0, i32 2
  %37 = load i32, i32* %class, align 4
  %call83 = call i32 @reg_classes_intersect_p(i32 %37, i32 12)
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.80
  %38 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %38 to i64
  %arrayidx86 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom85
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx86, i32 0, i32 3
  %39 = load i32, i32* %inmode, align 4
  %idxprom87 = sext i32 %39 to i64
  %arrayidx88 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom87
  %40 = load i32, i32* %arrayidx88, align 4
  %cmp89 = icmp eq i32 %40, 5
  br i1 %cmp89, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %41 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %41 to i64
  %arrayidx91 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom90
  %inmode92 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx91, i32 0, i32 3
  %42 = load i32, i32* %inmode92, align 4
  %idxprom93 = sext i32 %42 to i64
  %arrayidx94 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom93
  %43 = load i32, i32* %arrayidx94, align 4
  %cmp95 = icmp eq i32 %43, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %44 = phi i1 [ true, %cond.true ], [ %cmp95, %lor.rhs ]
  %cond = select i1 %44, i32 2, i32 1
  br label %cond.end.113

cond.false:                                       ; preds = %land.lhs.true.80
  %45 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %45 to i64
  %arrayidx97 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom96
  %inmode98 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx97, i32 0, i32 3
  %46 = load i32, i32* %inmode98, align 4
  %cmp99 = icmp eq i32 %46, 18
  br i1 %cmp99, label %cond.true.100, label %cond.false.101

cond.true.100:                                    ; preds = %cond.false
  br label %cond.end

cond.false.101:                                   ; preds = %cond.false
  %47 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %47 to i64
  %arrayidx103 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom102
  %inmode104 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx103, i32 0, i32 3
  %48 = load i32, i32* %inmode104, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.101, %cond.true.100
  %cond105 = phi i32 [ 17, %cond.true.100 ], [ %48, %cond.false.101 ]
  %idxprom106 = sext i32 %cond105 to i64
  %arrayidx107 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom106
  %49 = load i8, i8* %arrayidx107, align 1
  %conv = zext i8 %49 to i32
  %50 = load i32, i32* @target_flags, align 4
  %and = and i32 %50, 33554432
  %tobool108 = icmp ne i32 %and, 0
  %cond109 = select i1 %tobool108, i32 8, i32 4
  %add = add nsw i32 %conv, %cond109
  %sub = sub nsw i32 %add, 1
  %51 = load i32, i32* @target_flags, align 4
  %and110 = and i32 %51, 33554432
  %tobool111 = icmp ne i32 %and110, 0
  %cond112 = select i1 %tobool111, i32 8, i32 4
  %div = sdiv i32 %sub, %cond112
  br label %cond.end.113

cond.end.113:                                     ; preds = %cond.end, %lor.end
  %cond114 = phi i32 [ %cond, %lor.end ], [ %div, %cond.end ]
  %52 = load i32, i32* %output_reload, align 4
  %idxprom115 = sext i32 %52 to i64
  %arrayidx116 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom115
  %class117 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx116, i32 0, i32 2
  %53 = load i32, i32* %class117, align 4
  %call118 = call i32 @reg_classes_intersect_p(i32 %53, i32 12)
  %tobool119 = icmp ne i32 %call118, 0
  br i1 %tobool119, label %cond.false.137, label %cond.true.120

cond.true.120:                                    ; preds = %cond.end.113
  %54 = load i32, i32* %output_reload, align 4
  %idxprom121 = sext i32 %54 to i64
  %arrayidx122 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom121
  %outmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx122, i32 0, i32 4
  %55 = load i32, i32* %outmode, align 4
  %idxprom123 = sext i32 %55 to i64
  %arrayidx124 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom123
  %56 = load i32, i32* %arrayidx124, align 4
  %cmp125 = icmp eq i32 %56, 5
  br i1 %cmp125, label %lor.end.135, label %lor.rhs.127

lor.rhs.127:                                      ; preds = %cond.true.120
  %57 = load i32, i32* %output_reload, align 4
  %idxprom128 = sext i32 %57 to i64
  %arrayidx129 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom128
  %outmode130 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx129, i32 0, i32 4
  %58 = load i32, i32* %outmode130, align 4
  %idxprom131 = sext i32 %58 to i64
  %arrayidx132 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom131
  %59 = load i32, i32* %arrayidx132, align 4
  %cmp133 = icmp eq i32 %59, 6
  br label %lor.end.135

lor.end.135:                                      ; preds = %lor.rhs.127, %cond.true.120
  %60 = phi i1 [ true, %cond.true.120 ], [ %cmp133, %lor.rhs.127 ]
  %cond136 = select i1 %60, i32 2, i32 1
  br label %cond.end.162

cond.false.137:                                   ; preds = %cond.end.113
  %61 = load i32, i32* %output_reload, align 4
  %idxprom138 = sext i32 %61 to i64
  %arrayidx139 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom138
  %outmode140 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx139, i32 0, i32 4
  %62 = load i32, i32* %outmode140, align 4
  %cmp141 = icmp eq i32 %62, 18
  br i1 %cmp141, label %cond.true.143, label %cond.false.144

cond.true.143:                                    ; preds = %cond.false.137
  br label %cond.end.148

cond.false.144:                                   ; preds = %cond.false.137
  %63 = load i32, i32* %output_reload, align 4
  %idxprom145 = sext i32 %63 to i64
  %arrayidx146 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom145
  %outmode147 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx146, i32 0, i32 4
  %64 = load i32, i32* %outmode147, align 4
  br label %cond.end.148

cond.end.148:                                     ; preds = %cond.false.144, %cond.true.143
  %cond149 = phi i32 [ 17, %cond.true.143 ], [ %64, %cond.false.144 ]
  %idxprom150 = sext i32 %cond149 to i64
  %arrayidx151 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom150
  %65 = load i8, i8* %arrayidx151, align 1
  %conv152 = zext i8 %65 to i32
  %66 = load i32, i32* @target_flags, align 4
  %and153 = and i32 %66, 33554432
  %tobool154 = icmp ne i32 %and153, 0
  %cond155 = select i1 %tobool154, i32 8, i32 4
  %add156 = add nsw i32 %conv152, %cond155
  %sub157 = sub nsw i32 %add156, 1
  %67 = load i32, i32* @target_flags, align 4
  %and158 = and i32 %67, 33554432
  %tobool159 = icmp ne i32 %and158, 0
  %cond160 = select i1 %tobool159, i32 8, i32 4
  %div161 = sdiv i32 %sub157, %cond160
  br label %cond.end.162

cond.end.162:                                     ; preds = %cond.end.148, %lor.end.135
  %cond163 = phi i32 [ %cond136, %lor.end.135 ], [ %div161, %cond.end.148 ]
  %cmp164 = icmp eq i32 %cond114, %cond163
  br i1 %cmp164, label %land.lhs.true.166, label %if.end.475

land.lhs.true.166:                                ; preds = %cond.end.162
  %68 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %68 to i64
  %arrayidx168 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom167
  %inc169 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx168, i32 0, i32 7
  %69 = load i32, i32* %inc169, align 4
  %cmp170 = icmp eq i32 %69, 0
  br i1 %cmp170, label %land.lhs.true.172, label %if.end.475

land.lhs.true.172:                                ; preds = %land.lhs.true.166
  %70 = load i32, i32* %i, align 4
  %idxprom173 = sext i32 %70 to i64
  %arrayidx174 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom173
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx174, i32 0, i32 11
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %cmp175 = icmp eq %struct.rtx_def* %71, null
  br i1 %cmp175, label %land.lhs.true.177, label %if.end.475

land.lhs.true.177:                                ; preds = %land.lhs.true.172
  %72 = load i32, i32* %i, align 4
  %idxprom178 = sext i32 %72 to i64
  %arrayidx179 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom178
  %opnum180 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx179, i32 0, i32 12
  %73 = load i32, i32* %opnum180, align 4
  %idxprom181 = sext i32 %73 to i64
  %74 = load i32, i32* %output_reload, align 4
  %idxprom182 = sext i32 %74 to i64
  %arrayidx183 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom182
  %outmode184 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx183, i32 0, i32 4
  %75 = load i32, i32* %outmode184, align 4
  %idxprom185 = sext i32 %75 to i64
  %arrayidx186 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom185
  %arrayidx187 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx186, i32 0, i64 %idxprom181
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx187, align 8
  %cmp188 = icmp eq %struct.rtx_def* %76, null
  br i1 %cmp188, label %land.lhs.true.226, label %lor.lhs.false.190

lor.lhs.false.190:                                ; preds = %land.lhs.true.177
  %77 = load i32, i32* %output_reload, align 4
  %idxprom191 = sext i32 %77 to i64
  %arrayidx192 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom191
  %opnum193 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx192, i32 0, i32 12
  %78 = load i32, i32* %opnum193, align 4
  %idxprom194 = sext i32 %78 to i64
  %79 = load i32, i32* %output_reload, align 4
  %idxprom195 = sext i32 %79 to i64
  %arrayidx196 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom195
  %outmode197 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx196, i32 0, i32 4
  %80 = load i32, i32* %outmode197, align 4
  %idxprom198 = sext i32 %80 to i64
  %arrayidx199 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom198
  %arrayidx200 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx199, i32 0, i64 %idxprom194
  %81 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx200, align 8
  %cmp201 = icmp eq %struct.rtx_def* %81, null
  br i1 %cmp201, label %land.lhs.true.226, label %lor.lhs.false.203

lor.lhs.false.203:                                ; preds = %lor.lhs.false.190
  %82 = load i32, i32* %i, align 4
  %idxprom204 = sext i32 %82 to i64
  %arrayidx205 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom204
  %opnum206 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx205, i32 0, i32 12
  %83 = load i32, i32* %opnum206, align 4
  %idxprom207 = sext i32 %83 to i64
  %84 = load i32, i32* %output_reload, align 4
  %idxprom208 = sext i32 %84 to i64
  %arrayidx209 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom208
  %outmode210 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx209, i32 0, i32 4
  %85 = load i32, i32* %outmode210, align 4
  %idxprom211 = sext i32 %85 to i64
  %arrayidx212 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom211
  %arrayidx213 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx212, i32 0, i64 %idxprom207
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx213, align 8
  %87 = load i32, i32* %output_reload, align 4
  %idxprom214 = sext i32 %87 to i64
  %arrayidx215 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom214
  %opnum216 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx215, i32 0, i32 12
  %88 = load i32, i32* %opnum216, align 4
  %idxprom217 = sext i32 %88 to i64
  %89 = load i32, i32* %output_reload, align 4
  %idxprom218 = sext i32 %89 to i64
  %arrayidx219 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom218
  %outmode220 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx219, i32 0, i32 4
  %90 = load i32, i32* %outmode220, align 4
  %idxprom221 = sext i32 %90 to i64
  %arrayidx222 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom221
  %arrayidx223 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx222, i32 0, i64 %idxprom217
  %91 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx223, align 8
  %call224 = call i32 @rtx_equal_p(%struct.rtx_def* %86, %struct.rtx_def* %91)
  %tobool225 = icmp ne i32 %call224, 0
  br i1 %tobool225, label %land.lhs.true.226, label %if.end.475

land.lhs.true.226:                                ; preds = %lor.lhs.false.203, %lor.lhs.false.190, %land.lhs.true.177
  br i1 true, label %cond.true.227, label %cond.false.236

cond.true.227:                                    ; preds = %land.lhs.true.226
  %92 = load i32, i32* %i, align 4
  %idxprom228 = sext i32 %92 to i64
  %arrayidx229 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom228
  %class230 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx229, i32 0, i32 2
  %93 = load i32, i32* %class230, align 4
  %94 = load i32, i32* %output_reload, align 4
  %idxprom231 = sext i32 %94 to i64
  %arrayidx232 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom231
  %class233 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx232, i32 0, i32 2
  %95 = load i32, i32* %class233, align 4
  %cmp234 = icmp eq i32 %93, %95
  br i1 %cmp234, label %land.lhs.true.254, label %if.end.475

cond.false.236:                                   ; preds = %land.lhs.true.226
  %96 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %96 to i64
  %arrayidx238 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom237
  %class239 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx238, i32 0, i32 2
  %97 = load i32, i32* %class239, align 4
  %98 = load i32, i32* %output_reload, align 4
  %idxprom240 = sext i32 %98 to i64
  %arrayidx241 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom240
  %class242 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx241, i32 0, i32 2
  %99 = load i32, i32* %class242, align 4
  %call243 = call i32 @reg_class_subset_p(i32 %97, i32 %99)
  %tobool244 = icmp ne i32 %call243, 0
  br i1 %tobool244, label %land.lhs.true.254, label %lor.lhs.false.245

lor.lhs.false.245:                                ; preds = %cond.false.236
  %100 = load i32, i32* %output_reload, align 4
  %idxprom246 = sext i32 %100 to i64
  %arrayidx247 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom246
  %class248 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx247, i32 0, i32 2
  %101 = load i32, i32* %class248, align 4
  %102 = load i32, i32* %i, align 4
  %idxprom249 = sext i32 %102 to i64
  %arrayidx250 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom249
  %class251 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx250, i32 0, i32 2
  %103 = load i32, i32* %class251, align 4
  %call252 = call i32 @reg_class_subset_p(i32 %101, i32 %103)
  %tobool253 = icmp ne i32 %call252, 0
  br i1 %tobool253, label %land.lhs.true.254, label %if.end.475

land.lhs.true.254:                                ; preds = %lor.lhs.false.245, %cond.false.236, %cond.true.227
  %104 = load i32, i32* %i, align 4
  %idxprom255 = sext i32 %104 to i64
  %arrayidx256 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom255
  %in257 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx256, i32 0, i32 0
  %105 = load %struct.rtx_def*, %struct.rtx_def** %in257, align 8
  %106 = load i32, i32* %output_reload, align 4
  %idxprom258 = sext i32 %106 to i64
  %arrayidx259 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom258
  %out260 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx259, i32 0, i32 1
  %107 = load %struct.rtx_def*, %struct.rtx_def** %out260, align 8
  %cmp261 = icmp eq %struct.rtx_def* %105, %107
  br i1 %cmp261, label %land.lhs.true.339, label %lor.lhs.false.263

lor.lhs.false.263:                                ; preds = %land.lhs.true.254
  %108 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %108 to i64
  %arrayidx265 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom264
  %in266 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx265, i32 0, i32 0
  %109 = load %struct.rtx_def*, %struct.rtx_def** %in266, align 8
  %cmp267 = icmp ne %struct.rtx_def* %109, null
  br i1 %cmp267, label %land.lhs.true.269, label %lor.lhs.false.313

land.lhs.true.269:                                ; preds = %lor.lhs.false.263
  %110 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %110 to i64
  %arrayidx271 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom270
  %in272 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx271, i32 0, i32 0
  %111 = load %struct.rtx_def*, %struct.rtx_def** %in272, align 8
  %112 = bitcast %struct.rtx_def* %111 to i32*
  %bf.load273 = load i32, i32* %112, align 8
  %bf.clear274 = and i32 %bf.load273, 65535
  %cmp275 = icmp eq i32 %bf.clear274, 61
  br i1 %cmp275, label %cond.true.277, label %cond.false.298

cond.true.277:                                    ; preds = %land.lhs.true.269
  %113 = load i32, i32* %output_reload, align 4
  %idxprom278 = sext i32 %113 to i64
  %arrayidx279 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom278
  %out280 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx279, i32 0, i32 1
  %114 = load %struct.rtx_def*, %struct.rtx_def** %out280, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load281 = load i32, i32* %115, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 61
  br i1 %cmp283, label %land.lhs.true.285, label %lor.lhs.false.313

land.lhs.true.285:                                ; preds = %cond.true.277
  %116 = load i32, i32* %i, align 4
  %idxprom286 = sext i32 %116 to i64
  %arrayidx287 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom286
  %in288 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx287, i32 0, i32 0
  %117 = load %struct.rtx_def*, %struct.rtx_def** %in288, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx289 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx289 to i32*
  %118 = load i32, i32* %rtuint, align 4
  %119 = load i32, i32* %output_reload, align 4
  %idxprom290 = sext i32 %119 to i64
  %arrayidx291 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom290
  %out292 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx291, i32 0, i32 1
  %120 = load %struct.rtx_def*, %struct.rtx_def** %out292, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtuint295 = bitcast %union.rtunion_def* %arrayidx294 to i32*
  %121 = load i32, i32* %rtuint295, align 4
  %cmp296 = icmp eq i32 %118, %121
  br i1 %cmp296, label %land.lhs.true.339, label %lor.lhs.false.313

cond.false.298:                                   ; preds = %land.lhs.true.269
  %122 = load i32, i32* %i, align 4
  %idxprom299 = sext i32 %122 to i64
  %arrayidx300 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom299
  %in301 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx300, i32 0, i32 0
  %123 = load %struct.rtx_def*, %struct.rtx_def** %in301, align 8
  %124 = load i32, i32* %output_reload, align 4
  %idxprom302 = sext i32 %124 to i64
  %arrayidx303 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom302
  %out304 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx303, i32 0, i32 1
  %125 = load %struct.rtx_def*, %struct.rtx_def** %out304, align 8
  %call305 = call i32 @rtx_equal_p(%struct.rtx_def* %123, %struct.rtx_def* %125)
  %tobool306 = icmp ne i32 %call305, 0
  br i1 %tobool306, label %land.lhs.true.307, label %lor.lhs.false.313

land.lhs.true.307:                                ; preds = %cond.false.298
  %126 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %126 to i64
  %arrayidx309 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom308
  %in310 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx309, i32 0, i32 0
  %127 = load %struct.rtx_def*, %struct.rtx_def** %in310, align 8
  %call311 = call i32 @side_effects_p(%struct.rtx_def* %127)
  %tobool312 = icmp ne i32 %call311, 0
  br i1 %tobool312, label %lor.lhs.false.313, label %land.lhs.true.339

lor.lhs.false.313:                                ; preds = %land.lhs.true.307, %cond.false.298, %land.lhs.true.285, %cond.true.277, %lor.lhs.false.263
  %128 = load i32, i32* %output_reload, align 4
  %idxprom314 = sext i32 %128 to i64
  %arrayidx315 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom314
  %out316 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx315, i32 0, i32 1
  %129 = load %struct.rtx_def*, %struct.rtx_def** %out316, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %130 to i64
  %arrayidx318 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom317
  %in319 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx318, i32 0, i32 0
  %131 = load %struct.rtx_def*, %struct.rtx_def** %in319, align 8
  %call320 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %129, %struct.rtx_def* %131)
  %tobool321 = icmp ne i32 %call320, 0
  br i1 %tobool321, label %if.end.475, label %land.lhs.true.322

land.lhs.true.322:                                ; preds = %lor.lhs.false.313
  %132 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %132 to i64
  %arrayidx324 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom323
  %in325 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx324, i32 0, i32 0
  %133 = load %struct.rtx_def*, %struct.rtx_def** %in325, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load326 = load i32, i32* %134, align 8
  %bf.clear327 = and i32 %bf.load326, 65535
  %cmp328 = icmp eq i32 %bf.clear327, 61
  br i1 %cmp328, label %land.lhs.true.330, label %land.lhs.true.339

land.lhs.true.330:                                ; preds = %land.lhs.true.322
  %135 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %135 to i64
  %arrayidx332 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom331
  %in333 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx332, i32 0, i32 0
  %136 = load %struct.rtx_def*, %struct.rtx_def** %in333, align 8
  %137 = load i32, i32* %output_reload, align 4
  %idxprom334 = sext i32 %137 to i64
  %arrayidx335 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom334
  %out336 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx335, i32 0, i32 1
  %138 = load %struct.rtx_def*, %struct.rtx_def** %out336, align 8
  %call337 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %136, %struct.rtx_def* %138)
  %tobool338 = icmp ne i32 %call337, 0
  br i1 %tobool338, label %if.end.475, label %land.lhs.true.339

land.lhs.true.339:                                ; preds = %land.lhs.true.330, %land.lhs.true.322, %land.lhs.true.307, %land.lhs.true.285, %land.lhs.true.254
  %139 = load i32, i32* %i, align 4
  %idxprom340 = sext i32 %139 to i64
  %arrayidx341 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom340
  %in342 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx341, i32 0, i32 0
  %140 = load %struct.rtx_def*, %struct.rtx_def** %in342, align 8
  %141 = load i32, i32* %i, align 4
  %idxprom343 = sext i32 %141 to i64
  %arrayidx344 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom343
  %inmode345 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx344, i32 0, i32 3
  %142 = load i32, i32* %inmode345, align 4
  %call346 = call i32 @reload_inner_reg_of_subreg(%struct.rtx_def* %140, i32 %142)
  %tobool347 = icmp ne i32 %call346, 0
  br i1 %tobool347, label %if.end.475, label %land.lhs.true.348

land.lhs.true.348:                                ; preds = %land.lhs.true.339
  %143 = load i32, i32* %i, align 4
  %idxprom349 = sext i32 %143 to i64
  %arrayidx350 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom349
  %class351 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx350, i32 0, i32 2
  %144 = load i32, i32* %class351, align 4
  %idxprom352 = sext i32 %144 to i64
  %arrayidx353 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom352
  %145 = load i32, i32* %arrayidx353, align 4
  %tobool354 = icmp ne i32 %145, 0
  br i1 %tobool354, label %land.lhs.true.356, label %lor.lhs.false.355

lor.lhs.false.355:                                ; preds = %land.lhs.true.348
  br i1 true, label %land.lhs.true.356, label %if.end.475

land.lhs.true.356:                                ; preds = %lor.lhs.false.355, %land.lhs.true.348
  %146 = load i32, i32* %i, align 4
  %idxprom357 = sext i32 %146 to i64
  %arrayidx358 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom357
  %when_needed359 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx358, i32 0, i32 17
  %147 = load i32, i32* %when_needed359, align 4
  %cmp360 = icmp eq i32 %147, 0
  br i1 %cmp360, label %if.then.368, label %lor.lhs.false.362

lor.lhs.false.362:                                ; preds = %land.lhs.true.356
  %148 = load i32, i32* %i, align 4
  %idxprom363 = sext i32 %148 to i64
  %arrayidx364 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom363
  %when_needed365 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx364, i32 0, i32 17
  %149 = load i32, i32* %when_needed365, align 4
  %cmp366 = icmp eq i32 %149, 1
  br i1 %cmp366, label %if.then.368, label %if.end.475

if.then.368:                                      ; preds = %lor.lhs.false.362, %land.lhs.true.356
  %150 = load i32, i32* %output_reload, align 4
  %idxprom369 = sext i32 %150 to i64
  %arrayidx370 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom369
  %out371 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx370, i32 0, i32 1
  %151 = load %struct.rtx_def*, %struct.rtx_def** %out371, align 8
  %152 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %152 to i64
  %arrayidx373 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom372
  %out374 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx373, i32 0, i32 1
  store %struct.rtx_def* %151, %struct.rtx_def** %out374, align 8
  %153 = load i32, i32* %output_reload, align 4
  %idxprom375 = sext i32 %153 to i64
  %arrayidx376 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom375
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx376, i32 0, i32 9
  %154 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %155 = load i32, i32* %i, align 4
  %idxprom377 = sext i32 %155 to i64
  %arrayidx378 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom377
  %out_reg379 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx378, i32 0, i32 9
  store %struct.rtx_def* %154, %struct.rtx_def** %out_reg379, align 8
  %156 = load i32, i32* %output_reload, align 4
  %idxprom380 = sext i32 %156 to i64
  %arrayidx381 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom380
  %outmode382 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx381, i32 0, i32 4
  %157 = load i32, i32* %outmode382, align 4
  %158 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %158 to i64
  %arrayidx384 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom383
  %outmode385 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx384, i32 0, i32 4
  store i32 %157, i32* %outmode385, align 4
  %159 = load i32, i32* %output_reload, align 4
  %idxprom386 = sext i32 %159 to i64
  %arrayidx387 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom386
  %out388 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx387, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %out388, align 8
  %160 = load i32, i32* %i, align 4
  %idxprom389 = sext i32 %160 to i64
  %arrayidx390 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom389
  %when_needed391 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx390, i32 0, i32 17
  store i32 9, i32* %when_needed391, align 4
  %161 = load i32, i32* %output_reload, align 4
  %idxprom392 = sext i32 %161 to i64
  %arrayidx393 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom392
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx393, i32 0, i32 14
  %162 = load i32, i32* %secondary_out_reload, align 4
  %cmp394 = icmp ne i32 %162, -1
  br i1 %cmp394, label %if.then.396, label %if.end.408

if.then.396:                                      ; preds = %if.then.368
  %163 = load i32, i32* %output_reload, align 4
  %idxprom397 = sext i32 %163 to i64
  %arrayidx398 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom397
  %secondary_out_reload399 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx398, i32 0, i32 14
  %164 = load i32, i32* %secondary_out_reload399, align 4
  %165 = load i32, i32* %i, align 4
  %idxprom400 = sext i32 %165 to i64
  %arrayidx401 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom400
  %secondary_out_reload402 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx401, i32 0, i32 14
  store i32 %164, i32* %secondary_out_reload402, align 4
  %166 = load i32, i32* %output_reload, align 4
  %idxprom403 = sext i32 %166 to i64
  %arrayidx404 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom403
  %secondary_out_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx404, i32 0, i32 16
  %167 = load i32, i32* %secondary_out_icode, align 4
  %168 = load i32, i32* %i, align 4
  %idxprom405 = sext i32 %168 to i64
  %arrayidx406 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom405
  %secondary_out_icode407 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx406, i32 0, i32 16
  store i32 %167, i32* %secondary_out_icode407, align 4
  br label %if.end.408

if.end.408:                                       ; preds = %if.then.396, %if.then.368
  %169 = load i32, i32* %output_reload, align 4
  %idxprom409 = sext i32 %169 to i64
  %arrayidx410 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom409
  %opnum411 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx410, i32 0, i32 12
  %170 = load i32, i32* %opnum411, align 4
  %idxprom412 = sext i32 %170 to i64
  %171 = load i32, i32* %output_reload, align 4
  %idxprom413 = sext i32 %171 to i64
  %arrayidx414 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom413
  %outmode415 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx414, i32 0, i32 4
  %172 = load i32, i32* %outmode415, align 4
  %idxprom416 = sext i32 %172 to i64
  %arrayidx417 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom416
  %arrayidx418 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx417, i32 0, i64 %idxprom412
  %173 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx418, align 8
  %cmp419 = icmp ne %struct.rtx_def* %173, null
  br i1 %cmp419, label %if.then.421, label %if.end.442

if.then.421:                                      ; preds = %if.end.408
  %174 = load i32, i32* %output_reload, align 4
  %idxprom422 = sext i32 %174 to i64
  %arrayidx423 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom422
  %opnum424 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx423, i32 0, i32 12
  %175 = load i32, i32* %opnum424, align 4
  %idxprom425 = sext i32 %175 to i64
  %176 = load i32, i32* %output_reload, align 4
  %idxprom426 = sext i32 %176 to i64
  %arrayidx427 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom426
  %outmode428 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx427, i32 0, i32 4
  %177 = load i32, i32* %outmode428, align 4
  %idxprom429 = sext i32 %177 to i64
  %arrayidx430 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom429
  %arrayidx431 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx430, i32 0, i64 %idxprom425
  %178 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx431, align 8
  %179 = load i32, i32* %i, align 4
  %idxprom432 = sext i32 %179 to i64
  %arrayidx433 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom432
  %opnum434 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx433, i32 0, i32 12
  %180 = load i32, i32* %opnum434, align 4
  %idxprom435 = sext i32 %180 to i64
  %181 = load i32, i32* %output_reload, align 4
  %idxprom436 = sext i32 %181 to i64
  %arrayidx437 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom436
  %outmode438 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx437, i32 0, i32 4
  %182 = load i32, i32* %outmode438, align 4
  %idxprom439 = sext i32 %182 to i64
  %arrayidx440 = getelementptr inbounds [59 x [30 x %struct.rtx_def*]], [59 x [30 x %struct.rtx_def*]]* @secondary_memlocs_elim, i32 0, i64 %idxprom439
  %arrayidx441 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %arrayidx440, i32 0, i64 %idxprom435
  store %struct.rtx_def* %178, %struct.rtx_def** %arrayidx441, align 8
  br label %if.end.442

if.end.442:                                       ; preds = %if.then.421, %if.end.408
  %183 = load i32, i32* %output_reload, align 4
  %idxprom443 = sext i32 %183 to i64
  %arrayidx444 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom443
  %class445 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx444, i32 0, i32 2
  %184 = load i32, i32* %class445, align 4
  %185 = load i32, i32* %i, align 4
  %idxprom446 = sext i32 %185 to i64
  %arrayidx447 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom446
  %class448 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx447, i32 0, i32 2
  %186 = load i32, i32* %class448, align 4
  %call449 = call i32 @reg_class_subset_p(i32 %184, i32 %186)
  %tobool450 = icmp ne i32 %call449, 0
  br i1 %tobool450, label %if.then.451, label %if.end.458

if.then.451:                                      ; preds = %if.end.442
  %187 = load i32, i32* %output_reload, align 4
  %idxprom452 = sext i32 %187 to i64
  %arrayidx453 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom452
  %class454 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx453, i32 0, i32 2
  %188 = load i32, i32* %class454, align 4
  %189 = load i32, i32* %i, align 4
  %idxprom455 = sext i32 %189 to i64
  %arrayidx456 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom455
  %class457 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx456, i32 0, i32 2
  store i32 %188, i32* %class457, align 4
  br label %if.end.458

if.end.458:                                       ; preds = %if.then.451, %if.end.442
  store i32 0, i32* %j, align 4
  br label %for.cond.459

for.cond.459:                                     ; preds = %for.inc.472, %if.end.458
  %190 = load i32, i32* %j, align 4
  %191 = load i32, i32* @n_replacements, align 4
  %cmp460 = icmp slt i32 %190, %191
  br i1 %cmp460, label %for.body.462, label %for.end.474

for.body.462:                                     ; preds = %for.cond.459
  %192 = load i32, i32* %j, align 4
  %idxprom463 = sext i32 %192 to i64
  %arrayidx464 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom463
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx464, i32 0, i32 2
  %193 = load i32, i32* %what, align 4
  %194 = load i32, i32* %output_reload, align 4
  %cmp465 = icmp eq i32 %193, %194
  br i1 %cmp465, label %if.then.467, label %if.end.471

if.then.467:                                      ; preds = %for.body.462
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %j, align 4
  %idxprom468 = sext i32 %196 to i64
  %arrayidx469 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom468
  %what470 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx469, i32 0, i32 2
  store i32 %195, i32* %what470, align 4
  br label %if.end.471

if.end.471:                                       ; preds = %if.then.467, %for.body.462
  br label %for.inc.472

for.inc.472:                                      ; preds = %if.end.471
  %197 = load i32, i32* %j, align 4
  %inc473 = add nsw i32 %197, 1
  store i32 %inc473, i32* %j, align 4
  br label %for.cond.459

for.end.474:                                      ; preds = %for.cond.459
  br label %for.end.940

if.end.475:                                       ; preds = %lor.lhs.false.362, %lor.lhs.false.355, %land.lhs.true.339, %land.lhs.true.330, %lor.lhs.false.313, %lor.lhs.false.245, %cond.true.227, %lor.lhs.false.203, %land.lhs.true.172, %land.lhs.true.166, %cond.end.162, %land.lhs.true.75, %land.lhs.true.70, %land.lhs.true.65, %land.lhs.true.58, %land.lhs.true.50, %for.body.45
  br label %for.inc.476

for.inc.476:                                      ; preds = %if.end.475
  %198 = load i32, i32* %i, align 4
  %inc477 = add nsw i32 %198, 1
  store i32 %inc477, i32* %i, align 4
  br label %for.cond.43

for.end.478:                                      ; preds = %for.cond.43
  %199 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx480 to i32*
  %200 = load i32, i32* %rtint, align 4
  %cmp481 = icmp eq i32 %200, -1
  br i1 %cmp481, label %if.then.483, label %if.end.484

if.then.483:                                      ; preds = %for.end.478
  br label %for.end.940

if.end.484:                                       ; preds = %for.end.478
  store i32 1, i32* %i, align 4
  br label %for.cond.485

for.cond.485:                                     ; preds = %for.inc.522, %if.end.484
  %201 = load i32, i32* %i, align 4
  %202 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i32 0, i64 4
  %rtint488 = bitcast %union.rtunion_def* %arrayidx487 to i32*
  %203 = load i32, i32* %rtint488, align 4
  %idxprom489 = sext i32 %203 to i64
  %arrayidx490 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom489
  %n_operands = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx490, i32 0, i32 4
  %204 = load i8, i8* %n_operands, align 1
  %conv491 = sext i8 %204 to i32
  %cmp492 = icmp slt i32 %201, %conv491
  br i1 %cmp492, label %for.body.494, label %for.end.524

for.body.494:                                     ; preds = %for.cond.485
  %205 = load i32, i32* %i, align 4
  %idxprom495 = sext i32 %205 to i64
  %206 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 4
  %rtint498 = bitcast %union.rtunion_def* %arrayidx497 to i32*
  %207 = load i32, i32* %rtint498, align 4
  %idxprom499 = sext i32 %207 to i64
  %arrayidx500 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom499
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx500, i32 0, i32 3
  %208 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx501 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %208, i64 %idxprom495
  %constraint = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx501, i32 0, i32 1
  %209 = load i8*, i8** %constraint, align 8
  %arrayidx502 = getelementptr inbounds i8, i8* %209, i64 0
  %210 = load i8, i8* %arrayidx502, align 1
  %conv503 = sext i8 %210 to i32
  %cmp504 = icmp eq i32 %conv503, 61
  br i1 %cmp504, label %if.then.520, label %lor.lhs.false.506

lor.lhs.false.506:                                ; preds = %for.body.494
  %211 = load i32, i32* %i, align 4
  %idxprom507 = sext i32 %211 to i64
  %212 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld508 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx509 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld508, i32 0, i64 4
  %rtint510 = bitcast %union.rtunion_def* %arrayidx509 to i32*
  %213 = load i32, i32* %rtint510, align 4
  %idxprom511 = sext i32 %213 to i64
  %arrayidx512 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom511
  %operand513 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx512, i32 0, i32 3
  %214 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand513, align 8
  %arrayidx514 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %214, i64 %idxprom507
  %constraint515 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx514, i32 0, i32 1
  %215 = load i8*, i8** %constraint515, align 8
  %arrayidx516 = getelementptr inbounds i8, i8* %215, i64 0
  %216 = load i8, i8* %arrayidx516, align 1
  %conv517 = sext i8 %216 to i32
  %cmp518 = icmp eq i32 %conv517, 43
  br i1 %cmp518, label %if.then.520, label %if.end.521

if.then.520:                                      ; preds = %lor.lhs.false.506, %for.body.494
  br label %for.end.940

if.end.521:                                       ; preds = %lor.lhs.false.506
  br label %for.inc.522

for.inc.522:                                      ; preds = %if.end.521
  %217 = load i32, i32* %i, align 4
  %inc523 = add nsw i32 %217, 1
  store i32 %inc523, i32* %i, align 4
  br label %for.cond.485

for.end.524:                                      ; preds = %for.cond.485
  %218 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld525, i32 0, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx526 to %struct.rtx_def**
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %219, %struct.rtx_def** %note, align 8
  br label %for.cond.527

for.cond.527:                                     ; preds = %for.inc.936, %for.end.524
  %220 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool528 = icmp ne %struct.rtx_def* %220, null
  br i1 %tobool528, label %for.body.529, label %for.end.940

for.body.529:                                     ; preds = %for.cond.527
  %221 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load530 = load i32, i32* %222, align 8
  %bf.lshr531 = lshr i32 %bf.load530, 16
  %bf.clear532 = and i32 %bf.lshr531, 255
  %cmp533 = icmp eq i32 %bf.clear532, 1
  br i1 %cmp533, label %land.lhs.true.535, label %if.end.935

land.lhs.true.535:                                ; preds = %for.body.529
  %223 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld536, i32 0, i64 0
  %rtx538 = bitcast %union.rtunion_def* %arrayidx537 to %struct.rtx_def**
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rtx538, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load539 = load i32, i32* %225, align 8
  %bf.clear540 = and i32 %bf.load539, 65535
  %cmp541 = icmp eq i32 %bf.clear540, 61
  br i1 %cmp541, label %land.lhs.true.543, label %if.end.935

land.lhs.true.543:                                ; preds = %land.lhs.true.535
  %226 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld544, i32 0, i64 0
  %rtx546 = bitcast %union.rtunion_def* %arrayidx545 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx546, align 8
  %228 = load i32, i32* %output_reload, align 4
  %idxprom547 = sext i32 %228 to i64
  %arrayidx548 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom547
  %out549 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx548, i32 0, i32 1
  %229 = load %struct.rtx_def*, %struct.rtx_def** %out549, align 8
  %call550 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %227, %struct.rtx_def* %229)
  %tobool551 = icmp ne i32 %call550, 0
  br i1 %tobool551, label %if.end.935, label %land.lhs.true.552

land.lhs.true.552:                                ; preds = %land.lhs.true.543
  %230 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1
  %arrayidx554 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld553, i32 0, i64 0
  %rtx555 = bitcast %union.rtunion_def* %arrayidx554 to %struct.rtx_def**
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rtx555, align 8
  %fld556 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx557 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld556, i32 0, i64 0
  %rtuint558 = bitcast %union.rtunion_def* %arrayidx557 to i32*
  %232 = load i32, i32* %rtuint558, align 4
  %cmp559 = icmp ult i32 %232, 53
  br i1 %cmp559, label %land.lhs.true.561, label %if.end.935

land.lhs.true.561:                                ; preds = %land.lhs.true.552
  %233 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld562 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx563 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld562, i32 0, i64 0
  %rtx564 = bitcast %union.rtunion_def* %arrayidx563 to %struct.rtx_def**
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rtx564, align 8
  %fld565 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1
  %arrayidx566 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld565, i32 0, i64 0
  %rtuint567 = bitcast %union.rtunion_def* %arrayidx566 to i32*
  %235 = load i32, i32* %rtuint567, align 4
  %236 = load i32, i32* %output_reload, align 4
  %idxprom568 = sext i32 %236 to i64
  %arrayidx569 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom568
  %outmode570 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx569, i32 0, i32 4
  %237 = load i32, i32* %outmode570, align 4
  %call571 = call i32 @ix86_hard_regno_mode_ok(i32 %235, i32 %237)
  %tobool572 = icmp ne i32 %call571, 0
  br i1 %tobool572, label %land.lhs.true.573, label %if.end.935

land.lhs.true.573:                                ; preds = %land.lhs.true.561
  %238 = load i32, i32* %output_reload, align 4
  %idxprom574 = sext i32 %238 to i64
  %arrayidx575 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom574
  %class576 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx575, i32 0, i32 2
  %239 = load i32, i32* %class576, align 4
  %idxprom577 = sext i32 %239 to i64
  %arrayidx578 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom577
  %240 = load i64, i64* %arrayidx578, align 8
  %241 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx580 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld579, i32 0, i64 0
  %rtx581 = bitcast %union.rtunion_def* %arrayidx580 to %struct.rtx_def**
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rtx581, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 0
  %rtuint584 = bitcast %union.rtunion_def* %arrayidx583 to i32*
  %243 = load i32, i32* %rtuint584, align 4
  %sh_prom = zext i32 %243 to i64
  %shl = shl i64 1, %sh_prom
  %and585 = and i64 %240, %shl
  %tobool586 = icmp ne i64 %and585, 0
  br i1 %tobool586, label %land.lhs.true.587, label %if.end.935

land.lhs.true.587:                                ; preds = %land.lhs.true.573
  %244 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i32 0, i64 0
  %rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx590, align 8
  %fld591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld591, i32 0, i64 0
  %rtuint593 = bitcast %union.rtunion_def* %arrayidx592 to i32*
  %246 = load i32, i32* %rtuint593, align 4
  %cmp594 = icmp uge i32 %246, 8
  br i1 %cmp594, label %land.lhs.true.596, label %lor.lhs.false.605

land.lhs.true.596:                                ; preds = %land.lhs.true.587
  %247 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld597, i32 0, i64 0
  %rtx599 = bitcast %union.rtunion_def* %arrayidx598 to %struct.rtx_def**
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rtx599, align 8
  %fld600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i32 0, i64 0
  %rtuint602 = bitcast %union.rtunion_def* %arrayidx601 to i32*
  %249 = load i32, i32* %rtuint602, align 4
  %cmp603 = icmp ule i32 %249, 15
  br i1 %cmp603, label %cond.true.659, label %lor.lhs.false.605

lor.lhs.false.605:                                ; preds = %land.lhs.true.596, %land.lhs.true.587
  %250 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 0
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx608, align 8
  %fld609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i32 0, i64 0
  %rtuint611 = bitcast %union.rtunion_def* %arrayidx610 to i32*
  %252 = load i32, i32* %rtuint611, align 4
  %cmp612 = icmp uge i32 %252, 21
  br i1 %cmp612, label %land.lhs.true.614, label %lor.lhs.false.623

land.lhs.true.614:                                ; preds = %lor.lhs.false.605
  %253 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld615, i32 0, i64 0
  %rtx617 = bitcast %union.rtunion_def* %arrayidx616 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx617, align 8
  %fld618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i32 0, i64 0
  %rtuint620 = bitcast %union.rtunion_def* %arrayidx619 to i32*
  %255 = load i32, i32* %rtuint620, align 4
  %cmp621 = icmp ule i32 %255, 28
  br i1 %cmp621, label %cond.true.659, label %lor.lhs.false.623

lor.lhs.false.623:                                ; preds = %land.lhs.true.614, %lor.lhs.false.605
  %256 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtx626 = bitcast %union.rtunion_def* %arrayidx625 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx626, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %257, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 0
  %rtuint629 = bitcast %union.rtunion_def* %arrayidx628 to i32*
  %258 = load i32, i32* %rtuint629, align 4
  %cmp630 = icmp uge i32 %258, 45
  br i1 %cmp630, label %land.lhs.true.632, label %lor.lhs.false.641

land.lhs.true.632:                                ; preds = %lor.lhs.false.623
  %259 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i32 0, i64 0
  %rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx635, align 8
  %fld636 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld636, i32 0, i64 0
  %rtuint638 = bitcast %union.rtunion_def* %arrayidx637 to i32*
  %261 = load i32, i32* %rtuint638, align 4
  %cmp639 = icmp ule i32 %261, 52
  br i1 %cmp639, label %cond.true.659, label %lor.lhs.false.641

lor.lhs.false.641:                                ; preds = %land.lhs.true.632, %lor.lhs.false.623
  %262 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx643 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld642, i32 0, i64 0
  %rtx644 = bitcast %union.rtunion_def* %arrayidx643 to %struct.rtx_def**
  %263 = load %struct.rtx_def*, %struct.rtx_def** %rtx644, align 8
  %fld645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i32 0, i64 0
  %rtuint647 = bitcast %union.rtunion_def* %arrayidx646 to i32*
  %264 = load i32, i32* %rtuint647, align 4
  %cmp648 = icmp uge i32 %264, 29
  br i1 %cmp648, label %land.lhs.true.650, label %cond.false.677

land.lhs.true.650:                                ; preds = %lor.lhs.false.641
  %265 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld651, i32 0, i64 0
  %rtx653 = bitcast %union.rtunion_def* %arrayidx652 to %struct.rtx_def**
  %266 = load %struct.rtx_def*, %struct.rtx_def** %rtx653, align 8
  %fld654 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx655 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld654, i32 0, i64 0
  %rtuint656 = bitcast %union.rtunion_def* %arrayidx655 to i32*
  %267 = load i32, i32* %rtuint656, align 4
  %cmp657 = icmp ule i32 %267, 36
  br i1 %cmp657, label %cond.true.659, label %cond.false.677

cond.true.659:                                    ; preds = %land.lhs.true.650, %land.lhs.true.632, %land.lhs.true.614, %land.lhs.true.596
  %268 = load i32, i32* %output_reload, align 4
  %idxprom660 = sext i32 %268 to i64
  %arrayidx661 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom660
  %outmode662 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx661, i32 0, i32 4
  %269 = load i32, i32* %outmode662, align 4
  %idxprom663 = sext i32 %269 to i64
  %arrayidx664 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom663
  %270 = load i32, i32* %arrayidx664, align 4
  %cmp665 = icmp eq i32 %270, 5
  br i1 %cmp665, label %lor.end.675, label %lor.rhs.667

lor.rhs.667:                                      ; preds = %cond.true.659
  %271 = load i32, i32* %output_reload, align 4
  %idxprom668 = sext i32 %271 to i64
  %arrayidx669 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom668
  %outmode670 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx669, i32 0, i32 4
  %272 = load i32, i32* %outmode670, align 4
  %idxprom671 = sext i32 %272 to i64
  %arrayidx672 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom671
  %273 = load i32, i32* %arrayidx672, align 4
  %cmp673 = icmp eq i32 %273, 6
  br label %lor.end.675

lor.end.675:                                      ; preds = %lor.rhs.667, %cond.true.659
  %274 = phi i1 [ true, %cond.true.659 ], [ %cmp673, %lor.rhs.667 ]
  %cond676 = select i1 %274, i32 2, i32 1
  br label %cond.end.717

cond.false.677:                                   ; preds = %land.lhs.true.650, %lor.lhs.false.641
  %275 = load i32, i32* %output_reload, align 4
  %idxprom678 = sext i32 %275 to i64
  %arrayidx679 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom678
  %outmode680 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx679, i32 0, i32 4
  %276 = load i32, i32* %outmode680, align 4
  %cmp681 = icmp eq i32 %276, 18
  br i1 %cmp681, label %cond.true.683, label %cond.false.687

cond.true.683:                                    ; preds = %cond.false.677
  %277 = load i32, i32* @target_flags, align 4
  %and684 = and i32 %277, 33554432
  %tobool685 = icmp ne i32 %and684, 0
  %cond686 = select i1 %tobool685, i32 2, i32 3
  br label %cond.end.715

cond.false.687:                                   ; preds = %cond.false.677
  %278 = load i32, i32* %output_reload, align 4
  %idxprom688 = sext i32 %278 to i64
  %arrayidx689 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom688
  %outmode690 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx689, i32 0, i32 4
  %279 = load i32, i32* %outmode690, align 4
  %cmp691 = icmp eq i32 %279, 24
  br i1 %cmp691, label %cond.true.693, label %cond.false.697

cond.true.693:                                    ; preds = %cond.false.687
  %280 = load i32, i32* @target_flags, align 4
  %and694 = and i32 %280, 33554432
  %tobool695 = icmp ne i32 %and694, 0
  %cond696 = select i1 %tobool695, i32 4, i32 6
  br label %cond.end.713

cond.false.697:                                   ; preds = %cond.false.687
  %281 = load i32, i32* %output_reload, align 4
  %idxprom698 = sext i32 %281 to i64
  %arrayidx699 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom698
  %outmode700 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx699, i32 0, i32 4
  %282 = load i32, i32* %outmode700, align 4
  %idxprom701 = sext i32 %282 to i64
  %arrayidx702 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom701
  %283 = load i8, i8* %arrayidx702, align 1
  %conv703 = zext i8 %283 to i32
  %284 = load i32, i32* @target_flags, align 4
  %and704 = and i32 %284, 33554432
  %tobool705 = icmp ne i32 %and704, 0
  %cond706 = select i1 %tobool705, i32 8, i32 4
  %add707 = add nsw i32 %conv703, %cond706
  %sub708 = sub nsw i32 %add707, 1
  %285 = load i32, i32* @target_flags, align 4
  %and709 = and i32 %285, 33554432
  %tobool710 = icmp ne i32 %and709, 0
  %cond711 = select i1 %tobool710, i32 8, i32 4
  %div712 = sdiv i32 %sub708, %cond711
  br label %cond.end.713

cond.end.713:                                     ; preds = %cond.false.697, %cond.true.693
  %cond714 = phi i32 [ %cond696, %cond.true.693 ], [ %div712, %cond.false.697 ]
  br label %cond.end.715

cond.end.715:                                     ; preds = %cond.end.713, %cond.true.683
  %cond716 = phi i32 [ %cond686, %cond.true.683 ], [ %cond714, %cond.end.713 ]
  br label %cond.end.717

cond.end.717:                                     ; preds = %cond.end.715, %lor.end.675
  %cond718 = phi i32 [ %cond676, %lor.end.675 ], [ %cond716, %cond.end.715 ]
  %286 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld719 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx720 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld719, i32 0, i64 0
  %rtx721 = bitcast %union.rtunion_def* %arrayidx720 to %struct.rtx_def**
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rtx721, align 8
  %fld722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld722, i32 0, i64 0
  %rtuint724 = bitcast %union.rtunion_def* %arrayidx723 to i32*
  %288 = load i32, i32* %rtuint724, align 4
  %cmp725 = icmp uge i32 %288, 8
  br i1 %cmp725, label %land.lhs.true.727, label %lor.lhs.false.736

land.lhs.true.727:                                ; preds = %cond.end.717
  %289 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld728 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx729 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld728, i32 0, i64 0
  %rtx730 = bitcast %union.rtunion_def* %arrayidx729 to %struct.rtx_def**
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rtx730, align 8
  %fld731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1
  %arrayidx732 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld731, i32 0, i64 0
  %rtuint733 = bitcast %union.rtunion_def* %arrayidx732 to i32*
  %291 = load i32, i32* %rtuint733, align 4
  %cmp734 = icmp ule i32 %291, 15
  br i1 %cmp734, label %cond.true.790, label %lor.lhs.false.736

lor.lhs.false.736:                                ; preds = %land.lhs.true.727, %cond.end.717
  %292 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld737 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx738 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld737, i32 0, i64 0
  %rtx739 = bitcast %union.rtunion_def* %arrayidx738 to %struct.rtx_def**
  %293 = load %struct.rtx_def*, %struct.rtx_def** %rtx739, align 8
  %fld740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld740, i32 0, i64 0
  %rtuint742 = bitcast %union.rtunion_def* %arrayidx741 to i32*
  %294 = load i32, i32* %rtuint742, align 4
  %cmp743 = icmp uge i32 %294, 21
  br i1 %cmp743, label %land.lhs.true.745, label %lor.lhs.false.754

land.lhs.true.745:                                ; preds = %lor.lhs.false.736
  %295 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld746 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx747 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld746, i32 0, i64 0
  %rtx748 = bitcast %union.rtunion_def* %arrayidx747 to %struct.rtx_def**
  %296 = load %struct.rtx_def*, %struct.rtx_def** %rtx748, align 8
  %fld749 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx750 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld749, i32 0, i64 0
  %rtuint751 = bitcast %union.rtunion_def* %arrayidx750 to i32*
  %297 = load i32, i32* %rtuint751, align 4
  %cmp752 = icmp ule i32 %297, 28
  br i1 %cmp752, label %cond.true.790, label %lor.lhs.false.754

lor.lhs.false.754:                                ; preds = %land.lhs.true.745, %lor.lhs.false.736
  %298 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld755 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx756 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld755, i32 0, i64 0
  %rtx757 = bitcast %union.rtunion_def* %arrayidx756 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx757, align 8
  %fld758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1
  %arrayidx759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld758, i32 0, i64 0
  %rtuint760 = bitcast %union.rtunion_def* %arrayidx759 to i32*
  %300 = load i32, i32* %rtuint760, align 4
  %cmp761 = icmp uge i32 %300, 45
  br i1 %cmp761, label %land.lhs.true.763, label %lor.lhs.false.772

land.lhs.true.763:                                ; preds = %lor.lhs.false.754
  %301 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld764 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld764, i32 0, i64 0
  %rtx766 = bitcast %union.rtunion_def* %arrayidx765 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx766, align 8
  %fld767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx768 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld767, i32 0, i64 0
  %rtuint769 = bitcast %union.rtunion_def* %arrayidx768 to i32*
  %303 = load i32, i32* %rtuint769, align 4
  %cmp770 = icmp ule i32 %303, 52
  br i1 %cmp770, label %cond.true.790, label %lor.lhs.false.772

lor.lhs.false.772:                                ; preds = %land.lhs.true.763, %lor.lhs.false.754
  %304 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1
  %arrayidx774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld773, i32 0, i64 0
  %rtx775 = bitcast %union.rtunion_def* %arrayidx774 to %struct.rtx_def**
  %305 = load %struct.rtx_def*, %struct.rtx_def** %rtx775, align 8
  %fld776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1
  %arrayidx777 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld776, i32 0, i64 0
  %rtuint778 = bitcast %union.rtunion_def* %arrayidx777 to i32*
  %306 = load i32, i32* %rtuint778, align 4
  %cmp779 = icmp uge i32 %306, 29
  br i1 %cmp779, label %land.lhs.true.781, label %cond.false.814

land.lhs.true.781:                                ; preds = %lor.lhs.false.772
  %307 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx783 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld782, i32 0, i64 0
  %rtx784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtx_def**
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rtx784, align 8
  %fld785 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1
  %arrayidx786 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld785, i32 0, i64 0
  %rtuint787 = bitcast %union.rtunion_def* %arrayidx786 to i32*
  %309 = load i32, i32* %rtuint787, align 4
  %cmp788 = icmp ule i32 %309, 36
  br i1 %cmp788, label %cond.true.790, label %cond.false.814

cond.true.790:                                    ; preds = %land.lhs.true.781, %land.lhs.true.763, %land.lhs.true.745, %land.lhs.true.727
  %310 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx792 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld791, i32 0, i64 0
  %rtx793 = bitcast %union.rtunion_def* %arrayidx792 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx793, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load794 = load i32, i32* %312, align 8
  %bf.lshr795 = lshr i32 %bf.load794, 16
  %bf.clear796 = and i32 %bf.lshr795, 255
  %idxprom797 = sext i32 %bf.clear796 to i64
  %arrayidx798 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom797
  %313 = load i32, i32* %arrayidx798, align 4
  %cmp799 = icmp eq i32 %313, 5
  br i1 %cmp799, label %lor.end.812, label %lor.rhs.801

lor.rhs.801:                                      ; preds = %cond.true.790
  %314 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1
  %arrayidx803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld802, i32 0, i64 0
  %rtx804 = bitcast %union.rtunion_def* %arrayidx803 to %struct.rtx_def**
  %315 = load %struct.rtx_def*, %struct.rtx_def** %rtx804, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load805 = load i32, i32* %316, align 8
  %bf.lshr806 = lshr i32 %bf.load805, 16
  %bf.clear807 = and i32 %bf.lshr806, 255
  %idxprom808 = sext i32 %bf.clear807 to i64
  %arrayidx809 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom808
  %317 = load i32, i32* %arrayidx809, align 4
  %cmp810 = icmp eq i32 %317, 6
  br label %lor.end.812

lor.end.812:                                      ; preds = %lor.rhs.801, %cond.true.790
  %318 = phi i1 [ true, %cond.true.790 ], [ %cmp810, %lor.rhs.801 ]
  %cond813 = select i1 %318, i32 2, i32 1
  br label %cond.end.863

cond.false.814:                                   ; preds = %land.lhs.true.781, %lor.lhs.false.772
  %319 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld815 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1
  %arrayidx816 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld815, i32 0, i64 0
  %rtx817 = bitcast %union.rtunion_def* %arrayidx816 to %struct.rtx_def**
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rtx817, align 8
  %321 = bitcast %struct.rtx_def* %320 to i32*
  %bf.load818 = load i32, i32* %321, align 8
  %bf.lshr819 = lshr i32 %bf.load818, 16
  %bf.clear820 = and i32 %bf.lshr819, 255
  %cmp821 = icmp eq i32 %bf.clear820, 18
  br i1 %cmp821, label %cond.true.823, label %cond.false.827

cond.true.823:                                    ; preds = %cond.false.814
  %322 = load i32, i32* @target_flags, align 4
  %and824 = and i32 %322, 33554432
  %tobool825 = icmp ne i32 %and824, 0
  %cond826 = select i1 %tobool825, i32 2, i32 3
  br label %cond.end.861

cond.false.827:                                   ; preds = %cond.false.814
  %323 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld828 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1
  %arrayidx829 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld828, i32 0, i64 0
  %rtx830 = bitcast %union.rtunion_def* %arrayidx829 to %struct.rtx_def**
  %324 = load %struct.rtx_def*, %struct.rtx_def** %rtx830, align 8
  %325 = bitcast %struct.rtx_def* %324 to i32*
  %bf.load831 = load i32, i32* %325, align 8
  %bf.lshr832 = lshr i32 %bf.load831, 16
  %bf.clear833 = and i32 %bf.lshr832, 255
  %cmp834 = icmp eq i32 %bf.clear833, 24
  br i1 %cmp834, label %cond.true.836, label %cond.false.840

cond.true.836:                                    ; preds = %cond.false.827
  %326 = load i32, i32* @target_flags, align 4
  %and837 = and i32 %326, 33554432
  %tobool838 = icmp ne i32 %and837, 0
  %cond839 = select i1 %tobool838, i32 4, i32 6
  br label %cond.end.859

cond.false.840:                                   ; preds = %cond.false.827
  %327 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1
  %arrayidx842 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld841, i32 0, i64 0
  %rtx843 = bitcast %union.rtunion_def* %arrayidx842 to %struct.rtx_def**
  %328 = load %struct.rtx_def*, %struct.rtx_def** %rtx843, align 8
  %329 = bitcast %struct.rtx_def* %328 to i32*
  %bf.load844 = load i32, i32* %329, align 8
  %bf.lshr845 = lshr i32 %bf.load844, 16
  %bf.clear846 = and i32 %bf.lshr845, 255
  %idxprom847 = sext i32 %bf.clear846 to i64
  %arrayidx848 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom847
  %330 = load i8, i8* %arrayidx848, align 1
  %conv849 = zext i8 %330 to i32
  %331 = load i32, i32* @target_flags, align 4
  %and850 = and i32 %331, 33554432
  %tobool851 = icmp ne i32 %and850, 0
  %cond852 = select i1 %tobool851, i32 8, i32 4
  %add853 = add nsw i32 %conv849, %cond852
  %sub854 = sub nsw i32 %add853, 1
  %332 = load i32, i32* @target_flags, align 4
  %and855 = and i32 %332, 33554432
  %tobool856 = icmp ne i32 %and855, 0
  %cond857 = select i1 %tobool856, i32 8, i32 4
  %div858 = sdiv i32 %sub854, %cond857
  br label %cond.end.859

cond.end.859:                                     ; preds = %cond.false.840, %cond.true.836
  %cond860 = phi i32 [ %cond839, %cond.true.836 ], [ %div858, %cond.false.840 ]
  br label %cond.end.861

cond.end.861:                                     ; preds = %cond.end.859, %cond.true.823
  %cond862 = phi i32 [ %cond826, %cond.true.823 ], [ %cond860, %cond.end.859 ]
  br label %cond.end.863

cond.end.863:                                     ; preds = %cond.end.861, %lor.end.812
  %cond864 = phi i32 [ %cond813, %lor.end.812 ], [ %cond862, %cond.end.861 ]
  %cmp865 = icmp sle i32 %cond718, %cond864
  br i1 %cmp865, label %land.lhs.true.867, label %if.end.935

land.lhs.true.867:                                ; preds = %cond.end.863
  %333 = load i32, i32* %output_reload, align 4
  %idxprom868 = sext i32 %333 to i64
  %arrayidx869 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom868
  %secondary_out_reload870 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx869, i32 0, i32 14
  %334 = load i32, i32* %secondary_out_reload870, align 4
  store i32 %334, i32* %secondary_out, align 4
  %cmp871 = icmp eq i32 %334, -1
  br i1 %cmp871, label %land.lhs.true.911, label %lor.lhs.false.873

lor.lhs.false.873:                                ; preds = %land.lhs.true.867
  %335 = load i32, i32* %secondary_out, align 4
  %idxprom874 = sext i32 %335 to i64
  %arrayidx875 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom874
  %class876 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx875, i32 0, i32 2
  %336 = load i32, i32* %class876, align 4
  %idxprom877 = sext i32 %336 to i64
  %arrayidx878 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom877
  %337 = load i64, i64* %arrayidx878, align 8
  %338 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld879 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1
  %arrayidx880 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld879, i32 0, i64 0
  %rtx881 = bitcast %union.rtunion_def* %arrayidx880 to %struct.rtx_def**
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rtx881, align 8
  %fld882 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1
  %arrayidx883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld882, i32 0, i64 0
  %rtuint884 = bitcast %union.rtunion_def* %arrayidx883 to i32*
  %340 = load i32, i32* %rtuint884, align 4
  %sh_prom885 = zext i32 %340 to i64
  %shl886 = shl i64 1, %sh_prom885
  %and887 = and i64 %337, %shl886
  %tobool888 = icmp ne i64 %and887, 0
  br i1 %tobool888, label %if.end.935, label %land.lhs.true.889

land.lhs.true.889:                                ; preds = %lor.lhs.false.873
  %341 = load i32, i32* %secondary_out, align 4
  %idxprom890 = sext i32 %341 to i64
  %arrayidx891 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom890
  %secondary_out_reload892 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx891, i32 0, i32 14
  %342 = load i32, i32* %secondary_out_reload892, align 4
  store i32 %342, i32* %secondary_out, align 4
  %cmp893 = icmp eq i32 %342, -1
  br i1 %cmp893, label %land.lhs.true.911, label %lor.lhs.false.895

lor.lhs.false.895:                                ; preds = %land.lhs.true.889
  %343 = load i32, i32* %secondary_out, align 4
  %idxprom896 = sext i32 %343 to i64
  %arrayidx897 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom896
  %class898 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx897, i32 0, i32 2
  %344 = load i32, i32* %class898, align 4
  %idxprom899 = sext i32 %344 to i64
  %arrayidx900 = getelementptr inbounds [25 x i64], [25 x i64]* @reg_class_contents, i32 0, i64 %idxprom899
  %345 = load i64, i64* %arrayidx900, align 8
  %346 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld901 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx902 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld901, i32 0, i64 0
  %rtx903 = bitcast %union.rtunion_def* %arrayidx902 to %struct.rtx_def**
  %347 = load %struct.rtx_def*, %struct.rtx_def** %rtx903, align 8
  %fld904 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx905 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld904, i32 0, i64 0
  %rtuint906 = bitcast %union.rtunion_def* %arrayidx905 to i32*
  %348 = load i32, i32* %rtuint906, align 4
  %sh_prom907 = zext i32 %348 to i64
  %shl908 = shl i64 1, %sh_prom907
  %and909 = and i64 %345, %shl908
  %tobool910 = icmp ne i64 %and909, 0
  br i1 %tobool910, label %if.end.935, label %land.lhs.true.911

land.lhs.true.911:                                ; preds = %lor.lhs.false.895, %land.lhs.true.889, %land.lhs.true.867
  %349 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld912 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1
  %arrayidx913 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld912, i32 0, i64 0
  %rtx914 = bitcast %union.rtunion_def* %arrayidx913 to %struct.rtx_def**
  %350 = load %struct.rtx_def*, %struct.rtx_def** %rtx914, align 8
  %fld915 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1
  %arrayidx916 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld915, i32 0, i64 0
  %rtuint917 = bitcast %union.rtunion_def* %arrayidx916 to i32*
  %351 = load i32, i32* %rtuint917, align 4
  %idxprom918 = zext i32 %351 to i64
  %arrayidx919 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom918
  %352 = load i8, i8* %arrayidx919, align 1
  %tobool920 = icmp ne i8 %352, 0
  br i1 %tobool920, label %if.end.935, label %if.then.921

if.then.921:                                      ; preds = %land.lhs.true.911
  %353 = load i32, i32* %output_reload, align 4
  %idxprom922 = sext i32 %353 to i64
  %arrayidx923 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom922
  %outmode924 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx923, i32 0, i32 4
  %354 = load i32, i32* %outmode924, align 4
  %355 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1
  %arrayidx926 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld925, i32 0, i64 0
  %rtx927 = bitcast %union.rtunion_def* %arrayidx926 to %struct.rtx_def**
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rtx927, align 8
  %fld928 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1
  %arrayidx929 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld928, i32 0, i64 0
  %rtuint930 = bitcast %union.rtunion_def* %arrayidx929 to i32*
  %357 = load i32, i32* %rtuint930, align 4
  %call931 = call %struct.rtx_def* @gen_rtx_REG(i32 %354, i32 %357)
  %358 = load i32, i32* %output_reload, align 4
  %idxprom932 = sext i32 %358 to i64
  %arrayidx933 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom932
  %reg_rtx934 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx933, i32 0, i32 11
  store %struct.rtx_def* %call931, %struct.rtx_def** %reg_rtx934, align 8
  br label %for.end.940

if.end.935:                                       ; preds = %land.lhs.true.911, %lor.lhs.false.895, %lor.lhs.false.873, %cond.end.863, %land.lhs.true.573, %land.lhs.true.561, %land.lhs.true.552, %land.lhs.true.543, %land.lhs.true.535, %for.body.529
  br label %for.inc.936

for.inc.936:                                      ; preds = %if.end.935
  %359 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1
  %arrayidx938 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld937, i32 0, i64 1
  %rtx939 = bitcast %union.rtunion_def* %arrayidx938 to %struct.rtx_def**
  %360 = load %struct.rtx_def*, %struct.rtx_def** %rtx939, align 8
  store %struct.rtx_def* %360, %struct.rtx_def** %note, align 8
  br label %for.cond.527

for.end.940:                                      ; preds = %if.then.3, %if.then.8, %if.then.13, %if.then.19, %if.then.38, %for.end.474, %if.then.483, %if.then.520, %if.then.921, %for.cond.527
  ret void
}

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare i32 @reg_classes_intersect_p(i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @form_sum(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %2 = load i32, i32* %mode, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.lshr2 = lshr i32 %bf.load1, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  store i32 %bf.clear3, i32* %mode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %mode, align 4
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %6 = load i32, i32* @target_flags, align 4
  %and = and i32 %6, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 5, i32 4
  store i32 %cond, i32* %mode, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load7 = load i32, i32* %8, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 54
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end.6
  %9 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx to i64*
  %11 = load i64, i64* %rtwint, align 8
  %call = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %9, i64 %11)
  store %struct.rtx_def* %call, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %if.end.6
  %12 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load11 = load i32, i32* %13, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 54
  br i1 %cmp13, label %if.then.14, label %if.else.19

if.then.14:                                       ; preds = %if.else
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtwint17 = bitcast %union.rtunion_def* %arrayidx16 to i64*
  %16 = load i64, i64* %rtwint17, align 8
  %call18 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %14, i64 %16)
  store %struct.rtx_def* %call18, %struct.rtx_def** %retval
  br label %return

if.else.19:                                       ; preds = %if.else
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load20 = load i32, i32* %18, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 67
  br i1 %cmp22, label %if.then.50, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.19
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load23 = load i32, i32* %20, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 68
  br i1 %cmp25, label %if.then.50, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load27 = load i32, i32* %22, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 54
  br i1 %cmp29, label %if.then.50, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.26
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load31 = load i32, i32* %24, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 55
  br i1 %cmp33, label %if.then.50, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.30
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load35 = load i32, i32* %26, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 58
  br i1 %cmp37, label %if.then.50, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.34
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load39 = load i32, i32* %28, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 134
  br i1 %cmp41, label %if.then.50, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.38
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load43 = load i32, i32* %30, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 56
  br i1 %cmp45, label %if.then.50, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.42
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load47 = load i32, i32* %32, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 140
  br i1 %cmp49, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %lor.lhs.false.46, %lor.lhs.false.42, %lor.lhs.false.38, %lor.lhs.false.34, %lor.lhs.false.30, %lor.lhs.false.26, %lor.lhs.false, %if.else.19
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %tem, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  store %struct.rtx_def* %34, %struct.rtx_def** %x.addr, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %35, %struct.rtx_def** %y.addr, align 8
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.50, %lor.lhs.false.46
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load54 = load i32, i32* %37, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 75
  br i1 %cmp56, label %land.lhs.true, label %if.end.120

land.lhs.true:                                    ; preds = %if.end.53
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load59 = load i32, i32* %40, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 67
  br i1 %cmp61, label %if.then.111, label %lor.lhs.false.62

lor.lhs.false.62:                                 ; preds = %land.lhs.true
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 1
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx65, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load66 = load i32, i32* %43, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 68
  br i1 %cmp68, label %if.then.111, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %lor.lhs.false.62
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 1
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load73 = load i32, i32* %46, align 8
  %bf.clear74 = and i32 %bf.load73, 65535
  %cmp75 = icmp eq i32 %bf.clear74, 54
  br i1 %cmp75, label %if.then.111, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %lor.lhs.false.69
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 1
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load80 = load i32, i32* %49, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 55
  br i1 %cmp82, label %if.then.111, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.76
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i32 0, i64 1
  %rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx86, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load87 = load i32, i32* %52, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp eq i32 %bf.clear88, 58
  br i1 %cmp89, label %if.then.111, label %lor.lhs.false.90

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.83
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 1
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx93, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load94 = load i32, i32* %55, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 134
  br i1 %cmp96, label %if.then.111, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %lor.lhs.false.90
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 1
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load101 = load i32, i32* %58, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 56
  br i1 %cmp103, label %if.then.111, label %lor.lhs.false.104

lor.lhs.false.104:                                ; preds = %lor.lhs.false.97
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 1
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx107, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load108 = load i32, i32* %61, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 140
  br i1 %cmp110, label %if.then.111, label %if.end.120

if.then.111:                                      ; preds = %lor.lhs.false.104, %lor.lhs.false.97, %lor.lhs.false.90, %lor.lhs.false.83, %lor.lhs.false.76, %lor.lhs.false.69, %lor.lhs.false.62, %land.lhs.true
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx114, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 1
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  %66 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call118 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %65, %struct.rtx_def* %66)
  %call119 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %63, %struct.rtx_def* %call118)
  store %struct.rtx_def* %call119, %struct.rtx_def** %retval
  br label %return

if.end.120:                                       ; preds = %lor.lhs.false.104, %if.end.53
  %67 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load121 = load i32, i32* %68, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 75
  br i1 %cmp123, label %land.lhs.true.124, label %if.end.189

land.lhs.true.124:                                ; preds = %if.end.120
  %69 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 1
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load128 = load i32, i32* %71, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 67
  br i1 %cmp130, label %if.then.180, label %lor.lhs.false.131

lor.lhs.false.131:                                ; preds = %land.lhs.true.124
  %72 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i32 0, i64 1
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx134, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load135 = load i32, i32* %74, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  %cmp137 = icmp eq i32 %bf.clear136, 68
  br i1 %cmp137, label %if.then.180, label %lor.lhs.false.138

lor.lhs.false.138:                                ; preds = %lor.lhs.false.131
  %75 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 1
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load142 = load i32, i32* %77, align 8
  %bf.clear143 = and i32 %bf.load142, 65535
  %cmp144 = icmp eq i32 %bf.clear143, 54
  br i1 %cmp144, label %if.then.180, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %lor.lhs.false.138
  %78 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i32 0, i64 1
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx148, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load149 = load i32, i32* %80, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 55
  br i1 %cmp151, label %if.then.180, label %lor.lhs.false.152

lor.lhs.false.152:                                ; preds = %lor.lhs.false.145
  %81 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 1
  %rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx155, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load156 = load i32, i32* %83, align 8
  %bf.clear157 = and i32 %bf.load156, 65535
  %cmp158 = icmp eq i32 %bf.clear157, 58
  br i1 %cmp158, label %if.then.180, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %lor.lhs.false.152
  %84 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 1
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load163 = load i32, i32* %86, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 134
  br i1 %cmp165, label %if.then.180, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %lor.lhs.false.159
  %87 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i32 0, i64 1
  %rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx169, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load170 = load i32, i32* %89, align 8
  %bf.clear171 = and i32 %bf.load170, 65535
  %cmp172 = icmp eq i32 %bf.clear171, 56
  br i1 %cmp172, label %if.then.180, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %lor.lhs.false.166
  %90 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 1
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load177 = load i32, i32* %92, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 140
  br i1 %cmp179, label %if.then.180, label %if.end.189

if.then.180:                                      ; preds = %lor.lhs.false.173, %lor.lhs.false.166, %lor.lhs.false.159, %lor.lhs.false.152, %lor.lhs.false.145, %lor.lhs.false.138, %lor.lhs.false.131, %land.lhs.true.124
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %94 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 0
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  %call184 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %93, %struct.rtx_def* %95)
  %96 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i32 0, i64 1
  %rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx187, align 8
  %call188 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %call184, %struct.rtx_def* %97)
  store %struct.rtx_def* %call188, %struct.rtx_def** %retval
  br label %return

if.end.189:                                       ; preds = %lor.lhs.false.173, %if.end.120
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load190 = load i32, i32* %99, align 8
  %bf.clear191 = and i32 %bf.load190, 65535
  %cmp192 = icmp eq i32 %bf.clear191, 67
  br i1 %cmp192, label %land.lhs.true.221, label %lor.lhs.false.193

lor.lhs.false.193:                                ; preds = %if.end.189
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load194 = load i32, i32* %101, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 68
  br i1 %cmp196, label %land.lhs.true.221, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %lor.lhs.false.193
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load198 = load i32, i32* %103, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 54
  br i1 %cmp200, label %land.lhs.true.221, label %lor.lhs.false.201

lor.lhs.false.201:                                ; preds = %lor.lhs.false.197
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %105 = bitcast %struct.rtx_def* %104 to i32*
  %bf.load202 = load i32, i32* %105, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %cmp204 = icmp eq i32 %bf.clear203, 55
  br i1 %cmp204, label %land.lhs.true.221, label %lor.lhs.false.205

lor.lhs.false.205:                                ; preds = %lor.lhs.false.201
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load206 = load i32, i32* %107, align 8
  %bf.clear207 = and i32 %bf.load206, 65535
  %cmp208 = icmp eq i32 %bf.clear207, 58
  br i1 %cmp208, label %land.lhs.true.221, label %lor.lhs.false.209

lor.lhs.false.209:                                ; preds = %lor.lhs.false.205
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %109 = bitcast %struct.rtx_def* %108 to i32*
  %bf.load210 = load i32, i32* %109, align 8
  %bf.clear211 = and i32 %bf.load210, 65535
  %cmp212 = icmp eq i32 %bf.clear211, 134
  br i1 %cmp212, label %land.lhs.true.221, label %lor.lhs.false.213

lor.lhs.false.213:                                ; preds = %lor.lhs.false.209
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load214 = load i32, i32* %111, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 56
  br i1 %cmp216, label %land.lhs.true.221, label %lor.lhs.false.217

lor.lhs.false.217:                                ; preds = %lor.lhs.false.213
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load218 = load i32, i32* %113, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 140
  br i1 %cmp220, label %land.lhs.true.221, label %if.end.272

land.lhs.true.221:                                ; preds = %lor.lhs.false.217, %lor.lhs.false.213, %lor.lhs.false.209, %lor.lhs.false.205, %lor.lhs.false.201, %lor.lhs.false.197, %lor.lhs.false.193, %if.end.189
  %114 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load222 = load i32, i32* %115, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 67
  br i1 %cmp224, label %if.then.253, label %lor.lhs.false.225

lor.lhs.false.225:                                ; preds = %land.lhs.true.221
  %116 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %117 = bitcast %struct.rtx_def* %116 to i32*
  %bf.load226 = load i32, i32* %117, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 68
  br i1 %cmp228, label %if.then.253, label %lor.lhs.false.229

lor.lhs.false.229:                                ; preds = %lor.lhs.false.225
  %118 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %119 = bitcast %struct.rtx_def* %118 to i32*
  %bf.load230 = load i32, i32* %119, align 8
  %bf.clear231 = and i32 %bf.load230, 65535
  %cmp232 = icmp eq i32 %bf.clear231, 54
  br i1 %cmp232, label %if.then.253, label %lor.lhs.false.233

lor.lhs.false.233:                                ; preds = %lor.lhs.false.229
  %120 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %121 = bitcast %struct.rtx_def* %120 to i32*
  %bf.load234 = load i32, i32* %121, align 8
  %bf.clear235 = and i32 %bf.load234, 65535
  %cmp236 = icmp eq i32 %bf.clear235, 55
  br i1 %cmp236, label %if.then.253, label %lor.lhs.false.237

lor.lhs.false.237:                                ; preds = %lor.lhs.false.233
  %122 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load238 = load i32, i32* %123, align 8
  %bf.clear239 = and i32 %bf.load238, 65535
  %cmp240 = icmp eq i32 %bf.clear239, 58
  br i1 %cmp240, label %if.then.253, label %lor.lhs.false.241

lor.lhs.false.241:                                ; preds = %lor.lhs.false.237
  %124 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %125 = bitcast %struct.rtx_def* %124 to i32*
  %bf.load242 = load i32, i32* %125, align 8
  %bf.clear243 = and i32 %bf.load242, 65535
  %cmp244 = icmp eq i32 %bf.clear243, 134
  br i1 %cmp244, label %if.then.253, label %lor.lhs.false.245

lor.lhs.false.245:                                ; preds = %lor.lhs.false.241
  %126 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load246 = load i32, i32* %127, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 56
  br i1 %cmp248, label %if.then.253, label %lor.lhs.false.249

lor.lhs.false.249:                                ; preds = %lor.lhs.false.245
  %128 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load250 = load i32, i32* %129, align 8
  %bf.clear251 = and i32 %bf.load250, 65535
  %cmp252 = icmp eq i32 %bf.clear251, 140
  br i1 %cmp252, label %if.then.253, label %if.end.272

if.then.253:                                      ; preds = %lor.lhs.false.249, %lor.lhs.false.245, %lor.lhs.false.241, %lor.lhs.false.237, %lor.lhs.false.233, %lor.lhs.false.229, %lor.lhs.false.225, %land.lhs.true.221
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %131 = bitcast %struct.rtx_def* %130 to i32*
  %bf.load254 = load i32, i32* %131, align 8
  %bf.clear255 = and i32 %bf.load254, 65535
  %cmp256 = icmp eq i32 %bf.clear255, 58
  br i1 %cmp256, label %if.then.257, label %if.end.261

if.then.257:                                      ; preds = %if.then.253
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i32 0, i64 0
  %rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx260, align 8
  store %struct.rtx_def* %133, %struct.rtx_def** %x.addr, align 8
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.257, %if.then.253
  %134 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load262 = load i32, i32* %135, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 58
  br i1 %cmp264, label %if.then.265, label %if.end.269

if.then.265:                                      ; preds = %if.end.261
  %136 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld266, i32 0, i64 0
  %rtx268 = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx268, align 8
  store %struct.rtx_def* %137, %struct.rtx_def** %y.addr, align 8
  br label %if.end.269

if.end.269:                                       ; preds = %if.then.265, %if.end.261
  %138 = load i32, i32* %mode, align 4
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call270 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %138, %struct.rtx_def* %139, %struct.rtx_def* %140)
  %call271 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 0, %struct.rtx_def* %call270)
  store %struct.rtx_def* %call271, %struct.rtx_def** %retval
  br label %return

if.end.272:                                       ; preds = %lor.lhs.false.249, %lor.lhs.false.217
  %141 = load i32, i32* %mode, align 4
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %call273 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %141, %struct.rtx_def* %142, %struct.rtx_def* %143)
  store %struct.rtx_def* %call273, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.272, %if.end.269, %if.then.180, %if.then.111, %if.then.14, %if.then.10
  %144 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %144
}

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @subst_reloads(%struct.rtx_def* %insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.replacement*, align 8
  %reloadreg = alloca %struct.rtx_def*, align 8
  %final_offset = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_replacements, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  store %struct.replacement* %arrayidx, %struct.replacement** %r, align 8
  %3 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %3, i32 0, i32 2
  %4 = load i32, i32* %what, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %reloadreg, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %tobool = icmp ne %struct.rtx_def* %6, null
  br i1 %tobool, label %if.then, label %if.else.82

if.then:                                          ; preds = %for.body
  %7 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %7, i32 0, i32 0
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 67
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load4 = load i32, i32* %12, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 33
  br i1 %cmp6, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %land.lhs.true
  %13 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where8 = getelementptr inbounds %struct.replacement, %struct.replacement* %13, i32 0, i32 0
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %where8, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 6
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %call = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 13, %struct.rtx_def* %16, %struct.rtx_def* %18)
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 6
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  store %struct.rtx_def* %call, %struct.rtx_def** %rtx15, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.7, %land.lhs.true, %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load16 = load i32, i32* %21, align 8
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %22 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode = getelementptr inbounds %struct.replacement, %struct.replacement* %22, i32 0, i32 3
  %23 = load i32, i32* %mode, align 4
  %cmp18 = icmp ne i32 %bf.clear17, %23
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.27

land.lhs.true.19:                                 ; preds = %if.end
  %24 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode20 = getelementptr inbounds %struct.replacement, %struct.replacement* %24, i32 0, i32 3
  %25 = load i32, i32* %mode20, align 4
  %cmp21 = icmp ne i32 %25, 0
  br i1 %cmp21, label %if.then.22, label %if.end.27

if.then.22:                                       ; preds = %land.lhs.true.19
  %26 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode23 = getelementptr inbounds %struct.replacement, %struct.replacement* %26, i32 0, i32 3
  %27 = load i32, i32* %mode23, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx25 to i32*
  %29 = load i32, i32* %rtuint, align 4
  %call26 = call %struct.rtx_def* @gen_rtx_REG(i32 %27, i32 %29)
  store %struct.rtx_def* %call26, %struct.rtx_def** %reloadreg, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.22, %land.lhs.true.19, %if.end
  %30 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %30, i32 0, i32 1
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc, align 8
  %cmp28 = icmp ne %struct.rtx_def** %31, null
  br i1 %cmp28, label %land.lhs.true.29, label %if.else.79

land.lhs.true.29:                                 ; preds = %if.end.27
  %32 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load30 = load i32, i32* %33, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 63
  br i1 %cmp32, label %if.then.33, label %if.else.79

if.then.33:                                       ; preds = %land.lhs.true.29
  %34 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc34 = getelementptr inbounds %struct.replacement, %struct.replacement* %34, i32 0, i32 1
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc34, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load35 = load i32, i32* %37, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %38 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load41 = load i32, i32* %40, align 8
  %bf.lshr42 = lshr i32 %bf.load41, 16
  %bf.clear43 = and i32 %bf.lshr42, 255
  %cmp44 = icmp eq i32 %bf.clear37, %bf.clear43
  br i1 %cmp44, label %if.then.45, label %if.else

if.then.45:                                       ; preds = %if.then.33
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %43 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc49 = getelementptr inbounds %struct.replacement, %struct.replacement* %43, i32 0, i32 1
  %44 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc49, align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %44, align 8
  br label %if.end.78

if.else:                                          ; preds = %if.then.33
  %45 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc50 = getelementptr inbounds %struct.replacement, %struct.replacement* %45, i32 0, i32 1
  %46 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc50, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %46, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 1
  %rtuint53 = bitcast %union.rtunion_def* %arrayidx52 to i32*
  %48 = load i32, i32* %rtuint53, align 4
  %49 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 1
  %rtuint56 = bitcast %union.rtunion_def* %arrayidx55 to i32*
  %50 = load i32, i32* %rtuint56, align 4
  %add = add i32 %48, %50
  store i32 %add, i32* %final_offset, align 4
  %51 = load i32, i32* %final_offset, align 4
  %52 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc57 = getelementptr inbounds %struct.replacement, %struct.replacement* %52, i32 0, i32 1
  %53 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc57, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %53, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load58 = load i32, i32* %55, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %idxprom61 = sext i32 %bf.clear60 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom61
  %56 = load i8, i8* %arrayidx62, align 1
  %conv = zext i8 %56 to i32
  %div = sdiv i32 %51, %conv
  store i32 %div, i32* %final_offset, align 4
  %57 = load i32, i32* %final_offset, align 4
  %58 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc63 = getelementptr inbounds %struct.replacement, %struct.replacement* %58, i32 0, i32 1
  %59 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc63, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %59, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load64 = load i32, i32* %61, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %idxprom67 = sext i32 %bf.clear66 to i64
  %arrayidx68 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom67
  %62 = load i8, i8* %arrayidx68, align 1
  %conv69 = zext i8 %62 to i32
  %mul = mul nsw i32 %57, %conv69
  store i32 %mul, i32* %final_offset, align 4
  %63 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %65 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where73 = getelementptr inbounds %struct.replacement, %struct.replacement* %65, i32 0, i32 0
  %66 = load %struct.rtx_def**, %struct.rtx_def*** %where73, align 8
  store %struct.rtx_def* %64, %struct.rtx_def** %66, align 8
  %67 = load i32, i32* %final_offset, align 4
  %68 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc74 = getelementptr inbounds %struct.replacement, %struct.replacement* %68, i32 0, i32 1
  %69 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc74, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %69, align 8
  %fld75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i32 0, i64 1
  %rtuint77 = bitcast %union.rtunion_def* %arrayidx76 to i32*
  store i32 %67, i32* %rtuint77, align 4
  br label %if.end.78

if.end.78:                                        ; preds = %if.else, %if.then.45
  br label %if.end.81

if.else.79:                                       ; preds = %land.lhs.true.29, %if.end.27
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %72 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where80 = getelementptr inbounds %struct.replacement, %struct.replacement* %72, i32 0, i32 0
  %73 = load %struct.rtx_def**, %struct.rtx_def*** %where80, align 8
  store %struct.rtx_def* %71, %struct.rtx_def** %73, align 8
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.79, %if.end.78
  br label %if.end.91

if.else.82:                                       ; preds = %for.body
  %74 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what83 = getelementptr inbounds %struct.replacement, %struct.replacement* %74, i32 0, i32 2
  %75 = load i32, i32* %what83, align 4
  %idxprom84 = sext i32 %75 to i64
  %arrayidx85 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom84
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx85, i32 0, i32 18
  %bf.load86 = load i8, i8* %optional, align 8
  %bf.clear87 = and i8 %bf.load86, 1
  %bf.cast = zext i8 %bf.clear87 to i32
  %tobool88 = icmp ne i32 %bf.cast, 0
  br i1 %tobool88, label %if.end.90, label %if.then.89

if.then.89:                                       ; preds = %if.else.82
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5921, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.subst_reloads, i32 0, i32 0)) #5
  unreachable

if.end.90:                                        ; preds = %if.else.82
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90, %if.end.81
  br label %for.inc

for.inc:                                          ; preds = %if.end.91
  %76 = load i32, i32* %i, align 4
  %inc = add nsw i32 %76, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @copy_replacements(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5935, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.copy_replacements, i32 0, i32 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @n_replacements, align 4
  call void @copy_replacements_1(%struct.rtx_def** %x.addr, %struct.rtx_def** %y.addr, i32 %2)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @copy_replacements_1(%struct.rtx_def** %px, %struct.rtx_def** %py, i32 %orig_replacements) #0 {
entry:
  %px.addr = alloca %struct.rtx_def**, align 8
  %py.addr = alloca %struct.rtx_def**, align 8
  %orig_replacements.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %y = alloca %struct.rtx_def*, align 8
  %r = alloca %struct.replacement*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.rtx_def** %px, %struct.rtx_def*** %px.addr, align 8
  store %struct.rtx_def** %py, %struct.rtx_def*** %py.addr, align 8
  store i32 %orig_replacements, i32* %orig_replacements.addr, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4
  %1 = load i32, i32* %orig_replacements.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx, i32 0, i32 1
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc, align 8
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %px.addr, align 8
  %cmp1 = icmp eq %struct.rtx_def** %3, %4
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* @n_replacements, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* @n_replacements, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom2
  store %struct.replacement* %arrayidx3, %struct.replacement** %r, align 8
  %6 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom4
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx5, i32 0, i32 0
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %8 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where6 = getelementptr inbounds %struct.replacement, %struct.replacement* %8, i32 0, i32 0
  store %struct.rtx_def** %7, %struct.rtx_def*** %where6, align 8
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %py.addr, align 8
  %10 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc7 = getelementptr inbounds %struct.replacement, %struct.replacement* %10, i32 0, i32 1
  store %struct.rtx_def** %9, %struct.rtx_def*** %subreg_loc7, align 8
  %11 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom8
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx9, i32 0, i32 2
  %12 = load i32, i32* %what, align 4
  %13 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what10 = getelementptr inbounds %struct.replacement, %struct.replacement* %13, i32 0, i32 2
  store i32 %12, i32* %what10, align 4
  %14 = load i32, i32* %j, align 4
  %idxprom11 = sext i32 %14 to i64
  %arrayidx12 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom11
  %mode = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx12, i32 0, i32 3
  %15 = load i32, i32* %mode, align 4
  %16 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode13 = getelementptr inbounds %struct.replacement, %struct.replacement* %16, i32 0, i32 3
  store i32 %15, i32* %mode13, align 4
  br label %if.end.32

if.else:                                          ; preds = %for.body
  %17 = load i32, i32* %j, align 4
  %idxprom14 = sext i32 %17 to i64
  %arrayidx15 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom14
  %where16 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx15, i32 0, i32 0
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %where16, align 8
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %px.addr, align 8
  %cmp17 = icmp eq %struct.rtx_def** %18, %19
  br i1 %cmp17, label %if.then.18, label %if.end

if.then.18:                                       ; preds = %if.else
  %20 = load i32, i32* @n_replacements, align 4
  %inc19 = add nsw i32 %20, 1
  store i32 %inc19, i32* @n_replacements, align 4
  %idxprom20 = sext i32 %20 to i64
  %arrayidx21 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom20
  store %struct.replacement* %arrayidx21, %struct.replacement** %r, align 8
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %py.addr, align 8
  %22 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where22 = getelementptr inbounds %struct.replacement, %struct.replacement* %22, i32 0, i32 0
  store %struct.rtx_def** %21, %struct.rtx_def*** %where22, align 8
  %23 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc23 = getelementptr inbounds %struct.replacement, %struct.replacement* %23, i32 0, i32 1
  store %struct.rtx_def** null, %struct.rtx_def*** %subreg_loc23, align 8
  %24 = load i32, i32* %j, align 4
  %idxprom24 = sext i32 %24 to i64
  %arrayidx25 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom24
  %what26 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx25, i32 0, i32 2
  %25 = load i32, i32* %what26, align 4
  %26 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what27 = getelementptr inbounds %struct.replacement, %struct.replacement* %26, i32 0, i32 2
  store i32 %25, i32* %what27, align 4
  %27 = load i32, i32* %j, align 4
  %idxprom28 = sext i32 %27 to i64
  %arrayidx29 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom28
  %mode30 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx29, i32 0, i32 3
  %28 = load i32, i32* %mode30, align 4
  %29 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode31 = getelementptr inbounds %struct.replacement, %struct.replacement* %29, i32 0, i32 3
  store i32 %28, i32* %mode31, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.18, %if.else
  br label %if.end.32

if.end.32:                                        ; preds = %if.end, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end.32
  %30 = load i32, i32* %j, align 4
  %inc33 = add nsw i32 %30, 1
  store i32 %inc33, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %px.addr, align 8
  %32 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %x, align 8
  %33 = load %struct.rtx_def**, %struct.rtx_def*** %py.addr, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %33, align 8
  store %struct.rtx_def* %34, %struct.rtx_def** %y, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load = load i32, i32* %36, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %37 = load i32, i32* %code, align 4
  %idxprom34 = sext i32 %37 to i64
  %arrayidx35 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom34
  %38 = load i8*, i8** %arrayidx35, align 8
  store i8* %38, i8** %fmt, align 8
  %39 = load i32, i32* %code, align 4
  %idxprom36 = sext i32 %39 to i64
  %arrayidx37 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom36
  %40 = load i8, i8* %arrayidx37, align 1
  %conv = zext i8 %40 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc.84, %for.end
  %41 = load i32, i32* %i, align 4
  %cmp39 = icmp sge i32 %41, 0
  br i1 %cmp39, label %for.body.41, label %for.end.86

for.body.41:                                      ; preds = %for.cond.38
  %42 = load i32, i32* %i, align 4
  %idxprom42 = sext i32 %42 to i64
  %43 = load i8*, i8** %fmt, align 8
  %arrayidx43 = getelementptr inbounds i8, i8* %43, i64 %idxprom42
  %44 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %44 to i32
  %cmp45 = icmp eq i32 %conv44, 101
  br i1 %cmp45, label %if.then.47, label %if.else.54

if.then.47:                                       ; preds = %for.body.41
  %45 = load i32, i32* %i, align 4
  %idxprom48 = sext i32 %45 to i64
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 %idxprom48
  %rtx = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %47 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %47 to i64
  %48 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 %idxprom50
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %49 = load i32, i32* %orig_replacements.addr, align 4
  call void @copy_replacements_1(%struct.rtx_def** %rtx, %struct.rtx_def** %rtx53, i32 %49)
  br label %if.end.83

if.else.54:                                       ; preds = %for.body.41
  %50 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %50 to i64
  %51 = load i8*, i8** %fmt, align 8
  %arrayidx56 = getelementptr inbounds i8, i8* %51, i64 %idxprom55
  %52 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %52 to i32
  %cmp58 = icmp eq i32 %conv57, 69
  br i1 %cmp58, label %if.then.60, label %if.end.82

if.then.60:                                       ; preds = %if.else.54
  %53 = load i32, i32* %i, align 4
  %idxprom61 = sext i32 %53 to i64
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 %idxprom61
  %rtvec = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtvec_def**
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 0
  %56 = load i32, i32* %num_elem, align 4
  store i32 %56, i32* %j, align 4
  br label %for.cond.64

for.cond.64:                                      ; preds = %for.body.67, %if.then.60
  %57 = load i32, i32* %j, align 4
  %dec = add nsw i32 %57, -1
  store i32 %dec, i32* %j, align 4
  %cmp65 = icmp sge i32 %dec, 0
  br i1 %cmp65, label %for.body.67, label %for.end.81

for.body.67:                                      ; preds = %for.cond.64
  %58 = load i32, i32* %j, align 4
  %idxprom68 = sext i32 %58 to i64
  %59 = load i32, i32* %i, align 4
  %idxprom69 = sext i32 %59 to i64
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 %idxprom69
  %rtvec72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtvec_def**
  %61 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec72, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %61, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom68
  %62 = load i32, i32* %j, align 4
  %idxprom74 = sext i32 %62 to i64
  %63 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %63 to i64
  %64 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 %idxprom75
  %rtvec78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtvec_def**
  %65 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec78, align 8
  %elem79 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %65, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem79, i32 0, i64 %idxprom74
  %66 = load i32, i32* %orig_replacements.addr, align 4
  call void @copy_replacements_1(%struct.rtx_def** %arrayidx73, %struct.rtx_def** %arrayidx80, i32 %66)
  br label %for.cond.64

for.end.81:                                       ; preds = %for.cond.64
  br label %if.end.82

if.end.82:                                        ; preds = %for.end.81, %if.else.54
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82, %if.then.47
  br label %for.inc.84

for.inc.84:                                       ; preds = %if.end.83
  %67 = load i32, i32* %i, align 4
  %dec85 = add nsw i32 %67, -1
  store i32 %dec85, i32* %i, align 4
  br label %for.cond.38

for.end.86:                                       ; preds = %for.cond.38
  ret void
}

; Function Attrs: nounwind uwtable
define void @move_replacements(%struct.rtx_def** %x, %struct.rtx_def** %y) #0 {
entry:
  %x.addr = alloca %struct.rtx_def**, align 8
  %y.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  store %struct.rtx_def** %y, %struct.rtx_def*** %y.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @n_replacements, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx, i32 0, i32 1
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc, align 8
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8
  %cmp1 = icmp eq %struct.rtx_def** %3, %4
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %y.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom2
  %subreg_loc4 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx3, i32 0, i32 1
  store %struct.rtx_def** %5, %struct.rtx_def*** %subreg_loc4, align 8
  br label %if.end.15

if.else:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom5
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx6, i32 0, i32 0
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8
  %cmp7 = icmp eq %struct.rtx_def** %8, %9
  br i1 %cmp7, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %if.else
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %y.addr, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom9
  %where11 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx10, i32 0, i32 0
  store %struct.rtx_def** %10, %struct.rtx_def*** %where11, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %12 to i64
  %arrayidx13 = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom12
  %subreg_loc14 = getelementptr inbounds %struct.replacement, %struct.replacement* %arrayidx13, i32 0, i32 1
  store %struct.rtx_def** null, %struct.rtx_def*** %subreg_loc14, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.8, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end.15
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @find_replacement(%struct.rtx_def** %loc) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %r = alloca %struct.replacement*, align 8
  %reloadreg = alloca %struct.rtx_def*, align 8
  %final_offset = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %y = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store %struct.replacement* getelementptr inbounds ([150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 0), %struct.replacement** %r, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.replacement*, %struct.replacement** %r, align 8
  %1 = load i32, i32* @n_replacements, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [150 x %struct.replacement], [150 x %struct.replacement]* @replacements, i32 0, i64 %idxprom
  %cmp = icmp ult %struct.replacement* %0, %arrayidx
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.replacement*, %struct.replacement** %r, align 8
  %what = getelementptr inbounds %struct.replacement, %struct.replacement* %2, i32 0, i32 2
  %3 = load i32, i32* %what, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %reloadreg, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %tobool = icmp ne %struct.rtx_def* %5, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.replacement*, %struct.replacement** %r, align 8
  %where = getelementptr inbounds %struct.replacement, %struct.replacement* %6, i32 0, i32 0
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %cmp3 = icmp eq %struct.rtx_def** %7, %8
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode = getelementptr inbounds %struct.replacement, %struct.replacement* %9, i32 0, i32 3
  %10 = load i32, i32* %mode, align 4
  %cmp4 = icmp ne i32 %10, 0
  br i1 %cmp4, label %land.lhs.true.5, label %if.end

land.lhs.true.5:                                  ; preds = %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load = load i32, i32* %12, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %13 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode6 = getelementptr inbounds %struct.replacement, %struct.replacement* %13, i32 0, i32 3
  %14 = load i32, i32* %mode6, align 4
  %cmp7 = icmp ne i32 %bf.clear, %14
  br i1 %cmp7, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %land.lhs.true.5
  %15 = load %struct.replacement*, %struct.replacement** %r, align 8
  %mode9 = getelementptr inbounds %struct.replacement, %struct.replacement* %15, i32 0, i32 3
  %16 = load i32, i32* %mode9, align 4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %18 = load i32, i32* %rtuint, align 4
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 %16, i32 %18)
  store %struct.rtx_def* %call, %struct.rtx_def** %reloadreg, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.8, %land.lhs.true.5, %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %for.body
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %tobool11 = icmp ne %struct.rtx_def* %20, null
  br i1 %tobool11, label %land.lhs.true.12, label %if.end.79

land.lhs.true.12:                                 ; preds = %if.else
  %21 = load %struct.replacement*, %struct.replacement** %r, align 8
  %subreg_loc = getelementptr inbounds %struct.replacement, %struct.replacement* %21, i32 0, i32 1
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %subreg_loc, align 8
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %cmp13 = icmp eq %struct.rtx_def** %22, %23
  br i1 %cmp13, label %if.then.14, label %if.end.79

if.then.14:                                       ; preds = %land.lhs.true.12
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load15 = load i32, i32* %25, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 61
  br i1 %cmp17, label %if.then.18, label %if.else.44

if.then.18:                                       ; preds = %if.then.14
  %26 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %27 = load %struct.rtx_def*, %struct.rtx_def** %26, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load19 = load i32, i32* %28, align 8
  %bf.lshr20 = lshr i32 %bf.load19, 16
  %bf.clear21 = and i32 %bf.lshr20, 255
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtuint24 = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %30 = load i32, i32* %rtuint24, align 4
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %32 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %34 = load i32, i32* %rtuint29, align 4
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load33 = load i32, i32* %38, align 8
  %bf.lshr34 = lshr i32 %bf.load33, 16
  %bf.clear35 = and i32 %bf.lshr34, 255
  %39 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 1
  %rtuint38 = bitcast %union.rtunion_def* %arrayidx37 to i32*
  %41 = load i32, i32* %rtuint38, align 4
  %42 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %42, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load39 = load i32, i32* %44, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %call42 = call i32 @subreg_regno_offset(i32 %34, i32 %bf.clear35, i32 %41, i32 %bf.clear41)
  %add = add i32 %30, %call42
  %call43 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear21, i32 %add)
  store %struct.rtx_def* %call43, %struct.rtx_def** %retval
  br label %return

if.else.44:                                       ; preds = %if.then.14
  %45 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load45 = load i32, i32* %46, align 8
  %bf.lshr46 = lshr i32 %bf.load45, 16
  %bf.clear47 = and i32 %bf.lshr46, 255
  %47 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %47, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load48 = load i32, i32* %49, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %cmp51 = icmp eq i32 %bf.clear47, %bf.clear50
  br i1 %cmp51, label %if.then.52, label %if.else.53

if.then.52:                                       ; preds = %if.else.44
  %50 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %retval
  br label %return

if.else.53:                                       ; preds = %if.else.44
  %51 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 1
  %rtuint56 = bitcast %union.rtunion_def* %arrayidx55 to i32*
  %52 = load i32, i32* %rtuint56, align 4
  %53 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %53, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 1
  %rtuint59 = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %55 = load i32, i32* %rtuint59, align 4
  %add60 = add i32 %52, %55
  store i32 %add60, i32* %final_offset, align 4
  %56 = load i32, i32* %final_offset, align 4
  %57 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %57, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load61 = load i32, i32* %59, align 8
  %bf.lshr62 = lshr i32 %bf.load61, 16
  %bf.clear63 = and i32 %bf.lshr62, 255
  %idxprom64 = sext i32 %bf.clear63 to i64
  %arrayidx65 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom64
  %60 = load i8, i8* %arrayidx65, align 1
  %conv = zext i8 %60 to i32
  %div = sdiv i32 %56, %conv
  store i32 %div, i32* %final_offset, align 4
  %61 = load i32, i32* %final_offset, align 4
  %62 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %63 = load %struct.rtx_def*, %struct.rtx_def** %62, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load66 = load i32, i32* %64, align 8
  %bf.lshr67 = lshr i32 %bf.load66, 16
  %bf.clear68 = and i32 %bf.lshr67, 255
  %idxprom69 = sext i32 %bf.clear68 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom69
  %65 = load i8, i8* %arrayidx70, align 1
  %conv71 = zext i8 %65 to i32
  %mul = mul nsw i32 %61, %conv71
  store i32 %mul, i32* %final_offset, align 4
  %66 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %66, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load72 = load i32, i32* %68, align 8
  %bf.lshr73 = lshr i32 %bf.load72, 16
  %bf.clear74 = and i32 %bf.lshr73, 255
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8
  %fld75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i32 0, i64 0
  %rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx77, align 8
  %71 = load i32, i32* %final_offset, align 4
  %call78 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %bf.clear74, %struct.rtx_def* %70, i32 %71)
  store %struct.rtx_def* %call78, %struct.rtx_def** %retval
  br label %return

if.end.79:                                        ; preds = %land.lhs.true.12, %if.else
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79
  br label %for.inc

for.inc:                                          ; preds = %if.end.80
  %72 = load %struct.replacement*, %struct.replacement** %r, align 8
  %incdec.ptr = getelementptr inbounds %struct.replacement, %struct.replacement* %72, i32 1
  store %struct.replacement* %incdec.ptr, %struct.replacement** %r, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %73 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %74 = load %struct.rtx_def*, %struct.rtx_def** %73, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load81 = load i32, i32* %75, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 75
  br i1 %cmp83, label %if.then.94, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %76 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %77 = load %struct.rtx_def*, %struct.rtx_def** %76, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load85 = load i32, i32* %78, align 8
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 76
  br i1 %cmp87, label %if.then.94, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false
  %79 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %79, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load90 = load i32, i32* %81, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 78
  br i1 %cmp92, label %if.then.94, label %if.end.122

if.then.94:                                       ; preds = %lor.lhs.false.89, %lor.lhs.false, %for.end
  %82 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %82, align 8
  %fld95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i32 0, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %call98 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx97)
  store %struct.rtx_def* %call98, %struct.rtx_def** %x, align 8
  %84 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %84, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 1
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %call102 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rtx101)
  store %struct.rtx_def* %call102, %struct.rtx_def** %y, align 8
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %87 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %cmp106 = icmp ne %struct.rtx_def* %86, %89
  br i1 %cmp106, label %if.then.114, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %if.then.94
  %90 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %91 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %92 = load %struct.rtx_def*, %struct.rtx_def** %91, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 1
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx111, align 8
  %cmp112 = icmp ne %struct.rtx_def* %90, %93
  br i1 %cmp112, label %if.then.114, label %if.end.121

if.then.114:                                      ; preds = %lor.lhs.false.108, %if.then.94
  %94 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %95 = load %struct.rtx_def*, %struct.rtx_def** %94, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load115 = load i32, i32* %96, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %97 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %98 = load %struct.rtx_def*, %struct.rtx_def** %97, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load117 = load i32, i32* %99, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %call120 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear116, i32 %bf.clear119, %struct.rtx_def* %100, %struct.rtx_def* %101)
  store %struct.rtx_def* %call120, %struct.rtx_def** %retval
  br label %return

if.end.121:                                       ; preds = %lor.lhs.false.108
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %lor.lhs.false.89
  %102 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** %102, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.122, %if.then.114, %if.else.53, %if.then.52, %if.then.18, %if.end
  %104 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %104
}

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @refers_to_mem_for_reload_p(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then.4, label %if.end.10

if.then.4:                                        ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32, i32* %rtuint, align 4
  %cmp5 = icmp uge i32 %5, 53
  br i1 %cmp5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtuint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %7 = load i32, i32* %rtuint8, align 4
  %idxprom = zext i32 %7 to i64
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8
  %tobool = icmp ne %struct.rtx_def* %9, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.4
  %10 = phi i1 [ false, %if.then.4 ], [ %tobool, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  store i32 %land.ext, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load11 = load i32, i32* %12, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %idxprom13 = sext i32 %bf.clear12 to i64
  %arrayidx14 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom13
  %13 = load i8*, i8** %arrayidx14, align 8
  store i8* %13, i8** %fmt, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load15 = load i32, i32* %15, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %idxprom17 = sext i32 %bf.clear16 to i64
  %arrayidx18 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom17
  %16 = load i8, i8* %arrayidx18, align 1
  %conv = zext i8 %16 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %17 = load i32, i32* %i, align 4
  %cmp19 = icmp sge i32 %17, 0
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %18 to i64
  %19 = load i8*, i8** %fmt, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21
  %20 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %20 to i32
  %cmp24 = icmp eq i32 %conv23, 101
  br i1 %cmp24, label %land.lhs.true, label %if.end.39

land.lhs.true:                                    ; preds = %for.body
  %21 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %21 to i64
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 %idxprom26
  %rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load29 = load i32, i32* %24, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 66
  br i1 %cmp31, label %if.then.38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %25 to i64
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 %idxprom33
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %call = call i32 @refers_to_mem_for_reload_p(%struct.rtx_def* %27)
  %tobool37 = icmp ne i32 %call, 0
  br i1 %tobool37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end.39:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.39
  %28 = load i32, i32* %i, align 4
  %dec = add nsw i32 %28, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.38, %land.end, %if.then
  %29 = load i32, i32* %retval
  ret i32 %29
}

declare i32 @true_regnum(%struct.rtx_def*) #1

declare i32 @rtx_renumbered_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) #1

declare i32 @volatile_insn_p(%struct.rtx_def*) #1

declare i32 @push_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @regno_clobbered_p(i32 %regno, %struct.rtx_def* %insn, i32 %mode, i32 %sets) #0 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %sets.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  %endregno = alloca i32, align 4
  %test = alloca i32, align 4
  %i = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  %test124 = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %sets, i32* %sets.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %cmp = icmp uge i32 %0, 8
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4
  %cmp1 = icmp ule i32 %1, 15
  br i1 %cmp1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %regno.addr, align 4
  %cmp2 = icmp uge i32 %2, 21
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false.5

land.lhs.true.3:                                  ; preds = %lor.lhs.false
  %3 = load i32, i32* %regno.addr, align 4
  %cmp4 = icmp ule i32 %3, 28
  br i1 %cmp4, label %cond.true, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %land.lhs.true.3, %lor.lhs.false
  %4 = load i32, i32* %regno.addr, align 4
  %cmp6 = icmp uge i32 %4, 45
  br i1 %cmp6, label %land.lhs.true.7, label %lor.lhs.false.9

land.lhs.true.7:                                  ; preds = %lor.lhs.false.5
  %5 = load i32, i32* %regno.addr, align 4
  %cmp8 = icmp ule i32 %5, 52
  br i1 %cmp8, label %cond.true, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.7, %lor.lhs.false.5
  %6 = load i32, i32* %regno.addr, align 4
  %cmp10 = icmp uge i32 %6, 29
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %lor.lhs.false.9
  %7 = load i32, i32* %regno.addr, align 4
  %cmp12 = icmp ule i32 %7, 36
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true.3, %land.lhs.true
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %cmp13 = icmp eq i32 %9, 5
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %10 = load i32, i32* %mode.addr, align 4
  %idxprom14 = sext i32 %10 to i64
  %arrayidx15 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom14
  %11 = load i32, i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %11, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %12 = phi i1 [ true, %cond.true ], [ %cmp16, %lor.rhs ]
  %cond = select i1 %12, i32 2, i32 1
  br label %cond.end.38

cond.false:                                       ; preds = %land.lhs.true.11, %lor.lhs.false.9
  %13 = load i32, i32* %mode.addr, align 4
  %cmp17 = icmp eq i32 %13, 18
  br i1 %cmp17, label %cond.true.18, label %cond.false.20

cond.true.18:                                     ; preds = %cond.false
  %14 = load i32, i32* @target_flags, align 4
  %and = and i32 %14, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond19 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.36

cond.false.20:                                    ; preds = %cond.false
  %15 = load i32, i32* %mode.addr, align 4
  %cmp21 = icmp eq i32 %15, 24
  br i1 %cmp21, label %cond.true.22, label %cond.false.26

cond.true.22:                                     ; preds = %cond.false.20
  %16 = load i32, i32* @target_flags, align 4
  %and23 = and i32 %16, 33554432
  %tobool24 = icmp ne i32 %and23, 0
  %cond25 = select i1 %tobool24, i32 4, i32 6
  br label %cond.end

cond.false.26:                                    ; preds = %cond.false.20
  %17 = load i32, i32* %mode.addr, align 4
  %idxprom27 = sext i32 %17 to i64
  %arrayidx28 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv = zext i8 %18 to i32
  %19 = load i32, i32* @target_flags, align 4
  %and29 = and i32 %19, 33554432
  %tobool30 = icmp ne i32 %and29, 0
  %cond31 = select i1 %tobool30, i32 8, i32 4
  %add = add nsw i32 %conv, %cond31
  %sub = sub nsw i32 %add, 1
  %20 = load i32, i32* @target_flags, align 4
  %and32 = and i32 %20, 33554432
  %tobool33 = icmp ne i32 %and32, 0
  %cond34 = select i1 %tobool33, i32 8, i32 4
  %div = sdiv i32 %sub, %cond34
  br label %cond.end

cond.end:                                         ; preds = %cond.false.26, %cond.true.22
  %cond35 = phi i32 [ %cond25, %cond.true.22 ], [ %div, %cond.false.26 ]
  br label %cond.end.36

cond.end.36:                                      ; preds = %cond.end, %cond.true.18
  %cond37 = phi i32 [ %cond19, %cond.true.18 ], [ %cond35, %cond.end ]
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.end.36, %lor.end
  %cond39 = phi i32 [ %cond, %lor.end ], [ %cond37, %cond.end.36 ]
  store i32 %cond39, i32* %nregs, align 4
  %21 = load i32, i32* %regno.addr, align 4
  %22 = load i32, i32* %nregs, align 4
  %add40 = add i32 %21, %22
  store i32 %add40, i32* %endregno, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load = load i32, i32* %25, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp42 = icmp eq i32 %bf.clear, 49
  br i1 %cmp42, label %land.lhs.true.54, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %cond.end.38
  %26 = load i32, i32* %sets.addr, align 4
  %tobool45 = icmp ne i32 %26, 0
  br i1 %tobool45, label %land.lhs.true.46, label %if.end

land.lhs.true.46:                                 ; preds = %lor.lhs.false.44
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 3
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load50 = load i32, i32* %29, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 47
  br i1 %cmp52, label %land.lhs.true.54, label %if.end

land.lhs.true.54:                                 ; preds = %land.lhs.true.46, %cond.end.38
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 3
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %fld58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i32 0, i64 0
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx60, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load61 = load i32, i32* %33, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 61
  br i1 %cmp63, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.54
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 3
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx67, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 0
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx70, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx72 to i32*
  %37 = load i32, i32* %rtuint, align 4
  store i32 %37, i32* %test, align 4
  %38 = load i32, i32* %test, align 4
  %39 = load i32, i32* %regno.addr, align 4
  %cmp73 = icmp uge i32 %38, %39
  br i1 %cmp73, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then
  %40 = load i32, i32* %test, align 4
  %41 = load i32, i32* %endregno, align 4
  %cmp75 = icmp ult i32 %40, %41
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %42 = phi i1 [ false, %if.then ], [ %cmp75, %land.rhs ]
  %land.ext = zext i1 %42 to i32
  store i32 %land.ext, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.54, %land.lhs.true.46, %lor.lhs.false.44
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 3
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load80 = load i32, i32* %45, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 39
  br i1 %cmp82, label %if.then.84, label %if.end.139

if.then.84:                                       ; preds = %if.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 3
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx87, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtvec_def**
  %48 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %48, i32 0, i32 0
  %49 = load i32, i32* %num_elem, align 4
  %sub90 = sub nsw i32 %49, 1
  store i32 %sub90, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.84
  %50 = load i32, i32* %i, align 4
  %cmp91 = icmp sge i32 %50, 0
  br i1 %cmp91, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %51 = load i32, i32* %i, align 4
  %idxprom93 = sext i32 %51 to i64
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 3
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 0
  %rtvec99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtvec_def**
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec99, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom93
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx100, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %elt, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load101 = load i32, i32* %57, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 49
  br i1 %cmp103, label %land.lhs.true.115, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %for.body
  %58 = load i32, i32* %sets.addr, align 4
  %tobool106 = icmp ne i32 %58, 0
  br i1 %tobool106, label %land.lhs.true.107, label %if.end.138

land.lhs.true.107:                                ; preds = %lor.lhs.false.105
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 3
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load111 = load i32, i32* %61, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 47
  br i1 %cmp113, label %land.lhs.true.115, label %if.end.138

land.lhs.true.115:                                ; preds = %land.lhs.true.107, %for.body
  %62 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 0
  %rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx118, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load119 = load i32, i32* %64, align 8
  %bf.clear120 = and i32 %bf.load119, 65535
  %cmp121 = icmp eq i32 %bf.clear120, 61
  br i1 %cmp121, label %if.then.123, label %if.end.138

if.then.123:                                      ; preds = %land.lhs.true.115
  %65 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtuint130 = bitcast %union.rtunion_def* %arrayidx129 to i32*
  %67 = load i32, i32* %rtuint130, align 4
  store i32 %67, i32* %test124, align 4
  %68 = load i32, i32* %test124, align 4
  %69 = load i32, i32* %regno.addr, align 4
  %cmp131 = icmp uge i32 %68, %69
  br i1 %cmp131, label %land.lhs.true.133, label %if.end.137

land.lhs.true.133:                                ; preds = %if.then.123
  %70 = load i32, i32* %test124, align 4
  %71 = load i32, i32* %endregno, align 4
  %cmp134 = icmp ult i32 %70, %71
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %land.lhs.true.133
  store i32 1, i32* %retval
  br label %return

if.end.137:                                       ; preds = %land.lhs.true.133, %if.then.123
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %land.lhs.true.115, %land.lhs.true.107, %lor.lhs.false.105
  br label %for.inc

for.inc:                                          ; preds = %if.end.138
  %72 = load i32, i32* %i, align 4
  %dec = add nsw i32 %72, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.139

if.end.139:                                       ; preds = %for.end, %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.139, %if.then.136, %land.end
  %73 = load i32, i32* %retval
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define void @debug_reload_to_stream(%struct._IO_FILE* %f) #0 {
entry:
  %f.addr = alloca %struct._IO_FILE*, align 8
  %r = alloca i32, align 4
  %prefix = alloca i8*, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %tobool = icmp ne %struct._IO_FILE* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %f.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %r, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %r, align 4
  %3 = load i32, i32* @n_reloads, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %5 = load i32, i32* %r, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i32 %5)
  %6 = load i32, i32* %r, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 0
  %7 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8
  %cmp1 = icmp ne %struct.rtx_def* %7, null
  br i1 %cmp1, label %if.then.2, label %if.end.12

if.then.2:                                        ; preds = %for.body
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %9 = load i32, i32* %r, align 4
  %idxprom3 = sext i32 %9 to i64
  %arrayidx4 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom3
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx4, i32 0, i32 3
  %10 = load i32, i32* %inmode, align 4
  %idxprom5 = sext i32 %10 to i64
  %arrayidx6 = getelementptr inbounds [59 x i8*], [59 x i8*]* @mode_name, i32 0, i64 %idxprom5
  %11 = load i8*, i8** %arrayidx6, align 8
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i8* %11)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %13 = load i32, i32* %r, align 4
  %idxprom8 = sext i32 %13 to i64
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom8
  %in10 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 0
  %14 = load %struct.rtx_def*, %struct.rtx_def** %in10, align 8
  call void @print_inline_rtx(%struct._IO_FILE* %12, %struct.rtx_def* %14, i32 24)
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.2, %for.body
  %16 = load i32, i32* %r, align 4
  %idxprom13 = sext i32 %16 to i64
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom13
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 1
  %17 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8
  %cmp15 = icmp ne %struct.rtx_def* %17, null
  br i1 %cmp15, label %if.then.16, label %if.end.26

if.then.16:                                       ; preds = %if.end.12
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %19 = load i32, i32* %r, align 4
  %idxprom17 = sext i32 %19 to i64
  %arrayidx18 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom17
  %outmode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx18, i32 0, i32 4
  %20 = load i32, i32* %outmode, align 4
  %idxprom19 = sext i32 %20 to i64
  %arrayidx20 = getelementptr inbounds [59 x i8*], [59 x i8*]* @mode_name, i32 0, i64 %idxprom19
  %21 = load i8*, i8** %arrayidx20, align 8
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0), i8* %21)
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %23 = load i32, i32* %r, align 4
  %idxprom22 = sext i32 %23 to i64
  %arrayidx23 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom22
  %out24 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx23, i32 0, i32 1
  %24 = load %struct.rtx_def*, %struct.rtx_def** %out24, align 8
  call void @print_inline_rtx(%struct._IO_FILE* %22, %struct.rtx_def* %24, i32 24)
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.16, %if.end.12
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %27 = load i32, i32* %r, align 4
  %idxprom27 = sext i32 %27 to i64
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom27
  %class = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 2
  %28 = load i32, i32* %class, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [25 x i8*], [25 x i8*]* @reg_class_names, i32 0, i64 %idxprom29
  %29 = load i8*, i8** %arrayidx30, align 8
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* %29)
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %31 = load i32, i32* %r, align 4
  %idxprom32 = sext i32 %31 to i64
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom32
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 17
  %32 = load i32, i32* %when_needed, align 4
  %idxprom34 = sext i32 %32 to i64
  %arrayidx35 = getelementptr inbounds [11 x i8*], [11 x i8*]* @reload_when_needed_name, i32 0, i64 %idxprom34
  %33 = load i8*, i8** %arrayidx35, align 8
  %34 = load i32, i32* %r, align 4
  %idxprom36 = sext i32 %34 to i64
  %arrayidx37 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom36
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx37, i32 0, i32 12
  %35 = load i32, i32* %opnum, align 4
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i8* %33, i32 %35)
  %36 = load i32, i32* %r, align 4
  %idxprom39 = sext i32 %36 to i64
  %arrayidx40 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom39
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx40, i32 0, i32 18
  %bf.load = load i8, i8* %optional, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool41 = icmp ne i32 %bf.cast, 0
  br i1 %tobool41, label %if.then.42, label %if.end.44

if.then.42:                                       ; preds = %if.end.26
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0))
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.42, %if.end.26
  %38 = load i32, i32* %r, align 4
  %idxprom45 = sext i32 %38 to i64
  %arrayidx46 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom45
  %nongroup = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx46, i32 0, i32 18
  %bf.load47 = load i8, i8* %nongroup, align 8
  %bf.lshr = lshr i8 %bf.load47, 3
  %bf.clear48 = and i8 %bf.lshr, 1
  %bf.cast49 = zext i8 %bf.clear48 to i32
  %tobool50 = icmp ne i32 %bf.cast49, 0
  br i1 %tobool50, label %if.then.51, label %if.end.53

if.then.51:                                       ; preds = %if.end.44
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0))
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.51, %if.end.44
  %40 = load i32, i32* %r, align 4
  %idxprom54 = sext i32 %40 to i64
  %arrayidx55 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom54
  %inc = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx55, i32 0, i32 7
  %41 = load i32, i32* %inc, align 4
  %cmp56 = icmp ne i32 %41, 0
  br i1 %cmp56, label %if.then.57, label %if.end.62

if.then.57:                                       ; preds = %if.end.53
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %43 = load i32, i32* %r, align 4
  %idxprom58 = sext i32 %43 to i64
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom58
  %inc60 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 7
  %44 = load i32, i32* %inc60, align 4
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i32 %44)
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.57, %if.end.53
  %45 = load i32, i32* %r, align 4
  %idxprom63 = sext i32 %45 to i64
  %arrayidx64 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom63
  %nocombine = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx64, i32 0, i32 18
  %bf.load65 = load i8, i8* %nocombine, align 8
  %bf.lshr66 = lshr i8 %bf.load65, 1
  %bf.clear67 = and i8 %bf.lshr66, 1
  %bf.cast68 = zext i8 %bf.clear67 to i32
  %tobool69 = icmp ne i32 %bf.cast68, 0
  br i1 %tobool69, label %if.then.70, label %if.end.72

if.then.70:                                       ; preds = %if.end.62
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0))
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.70, %if.end.62
  %47 = load i32, i32* %r, align 4
  %idxprom73 = sext i32 %47 to i64
  %arrayidx74 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom73
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx74, i32 0, i32 18
  %bf.load75 = load i8, i8* %secondary_p, align 8
  %bf.lshr76 = lshr i8 %bf.load75, 2
  %bf.clear77 = and i8 %bf.lshr76, 1
  %bf.cast78 = zext i8 %bf.clear77 to i32
  %tobool79 = icmp ne i32 %bf.cast78, 0
  br i1 %tobool79, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %if.end.72
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i32 0, i32 0))
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %if.end.72
  %49 = load i32, i32* %r, align 4
  %idxprom83 = sext i32 %49 to i64
  %arrayidx84 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom83
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx84, i32 0, i32 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8
  %cmp85 = icmp ne %struct.rtx_def* %50, null
  br i1 %cmp85, label %if.then.86, label %if.end.91

if.then.86:                                       ; preds = %if.end.82
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0))
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %53 = load i32, i32* %r, align 4
  %idxprom88 = sext i32 %53 to i64
  %arrayidx89 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom88
  %in_reg90 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx89, i32 0, i32 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %in_reg90, align 8
  call void @print_inline_rtx(%struct._IO_FILE* %52, %struct.rtx_def* %54, i32 24)
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.86, %if.end.82
  %55 = load i32, i32* %r, align 4
  %idxprom92 = sext i32 %55 to i64
  %arrayidx93 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom92
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx93, i32 0, i32 9
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8
  %cmp94 = icmp ne %struct.rtx_def* %56, null
  br i1 %cmp94, label %if.then.95, label %if.end.100

if.then.95:                                       ; preds = %if.end.91
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0))
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %59 = load i32, i32* %r, align 4
  %idxprom97 = sext i32 %59 to i64
  %arrayidx98 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom97
  %out_reg99 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx98, i32 0, i32 9
  %60 = load %struct.rtx_def*, %struct.rtx_def** %out_reg99, align 8
  call void @print_inline_rtx(%struct._IO_FILE* %58, %struct.rtx_def* %60, i32 24)
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.95, %if.end.91
  %61 = load i32, i32* %r, align 4
  %idxprom101 = sext i32 %61 to i64
  %arrayidx102 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom101
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx102, i32 0, i32 11
  %62 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8
  %cmp103 = icmp ne %struct.rtx_def* %62, null
  br i1 %cmp103, label %if.then.104, label %if.end.109

if.then.104:                                      ; preds = %if.end.100
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0))
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %65 = load i32, i32* %r, align 4
  %idxprom106 = sext i32 %65 to i64
  %arrayidx107 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom106
  %reg_rtx108 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx107, i32 0, i32 11
  %66 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx108, align 8
  call void @print_inline_rtx(%struct._IO_FILE* %64, %struct.rtx_def* %66, i32 24)
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.104, %if.end.100
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8** %prefix, align 8
  %67 = load i32, i32* %r, align 4
  %idxprom110 = sext i32 %67 to i64
  %arrayidx111 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom110
  %secondary_in_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx111, i32 0, i32 13
  %68 = load i32, i32* %secondary_in_reload, align 4
  %cmp112 = icmp ne i32 %68, -1
  br i1 %cmp112, label %if.then.113, label %if.end.118

if.then.113:                                      ; preds = %if.end.109
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %70 = load i8*, i8** %prefix, align 8
  %71 = load i32, i32* %r, align 4
  %idxprom114 = sext i32 %71 to i64
  %arrayidx115 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom114
  %secondary_in_reload116 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx115, i32 0, i32 13
  %72 = load i32, i32* %secondary_in_reload116, align 4
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i32 0, i32 0), i8* %70, i32 %72)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8** %prefix, align 8
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.113, %if.end.109
  %73 = load i32, i32* %r, align 4
  %idxprom119 = sext i32 %73 to i64
  %arrayidx120 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom119
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx120, i32 0, i32 14
  %74 = load i32, i32* %secondary_out_reload, align 4
  %cmp121 = icmp ne i32 %74, -1
  br i1 %cmp121, label %if.then.122, label %if.end.127

if.then.122:                                      ; preds = %if.end.118
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %76 = load i8*, i8** %prefix, align 8
  %77 = load i32, i32* %r, align 4
  %idxprom123 = sext i32 %77 to i64
  %arrayidx124 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom123
  %secondary_out_reload125 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx124, i32 0, i32 14
  %78 = load i32, i32* %secondary_out_reload125, align 4
  %call126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i32 0, i32 0), i8* %76, i32 %78)
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.122, %if.end.118
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8** %prefix, align 8
  %79 = load i32, i32* %r, align 4
  %idxprom128 = sext i32 %79 to i64
  %arrayidx129 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom128
  %secondary_in_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx129, i32 0, i32 15
  %80 = load i32, i32* %secondary_in_icode, align 4
  %cmp130 = icmp ne i32 %80, 1317
  br i1 %cmp130, label %if.then.131, label %if.end.138

if.then.131:                                      ; preds = %if.end.127
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %82 = load i8*, i8** %prefix, align 8
  %83 = load i32, i32* %r, align 4
  %idxprom132 = sext i32 %83 to i64
  %arrayidx133 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom132
  %secondary_in_icode134 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx133, i32 0, i32 15
  %84 = load i32, i32* %secondary_in_icode134, align 4
  %idxprom135 = zext i32 %84 to i64
  %arrayidx136 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom135
  %name = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx136, i32 0, i32 0
  %85 = load i8*, i8** %name, align 8
  %call137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i32 0, i32 0), i8* %82, i8* %85)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8** %prefix, align 8
  br label %if.end.138

if.end.138:                                       ; preds = %if.then.131, %if.end.127
  %86 = load i32, i32* %r, align 4
  %idxprom139 = sext i32 %86 to i64
  %arrayidx140 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom139
  %secondary_out_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx140, i32 0, i32 16
  %87 = load i32, i32* %secondary_out_icode, align 4
  %cmp141 = icmp ne i32 %87, 1317
  br i1 %cmp141, label %if.then.142, label %if.end.150

if.then.142:                                      ; preds = %if.end.138
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %89 = load i8*, i8** %prefix, align 8
  %90 = load i32, i32* %r, align 4
  %idxprom143 = sext i32 %90 to i64
  %arrayidx144 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom143
  %secondary_out_icode145 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx144, i32 0, i32 16
  %91 = load i32, i32* %secondary_out_icode145, align 4
  %idxprom146 = zext i32 %91 to i64
  %arrayidx147 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom146
  %name148 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx147, i32 0, i32 0
  %92 = load i8*, i8** %name148, align 8
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), i8* %89, i8* %92)
  br label %if.end.150

if.end.150:                                       ; preds = %if.then.142, %if.end.138
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0))
  br label %for.inc

for.inc:                                          ; preds = %if.end.150
  %94 = load i32, i32* %r, align 4
  %inc152 = add nsw i32 %94, 1
  store i32 %inc152, i32* %r, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare void @print_inline_rtx(%struct._IO_FILE*, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define void @debug_reload() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  call void @debug_reload_to_stream(%struct._IO_FILE* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @make_memloc(%struct.rtx_def* %ad, i32 %regno) #0 {
entry:
  %ad.addr = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %ad, %struct.rtx_def** %ad.addr, align 8
  store i32 %regno, i32* %regno.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %call = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %2, i32 0, %struct.rtx_def* null)
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i32 0, i32 1
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %tem, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call2 = call i32 @rtx_varies_p(%struct.rtx_def* %4, i32 0)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call3 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %5)
  store %struct.rtx_def* %call3, %struct.rtx_def** %tem, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %regno.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call6 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %8, %struct.rtx_def* %9)
  store %struct.rtx_def* %call6, %struct.rtx_def** %tem, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load = load i32, i32* %12, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call7 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %10, i32 %bf.clear, i64 0, i32 0, i32 1)
  store %struct.rtx_def* %call7, %struct.rtx_def** %tem, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %14 = load i32, i32* %regno.addr, align 4
  %idxprom8 = sext i32 %14 to i64
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %idxprom8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8
  %cmp = icmp eq %struct.rtx_def* %13, %16
  br i1 %cmp, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %call11 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %17)
  store %struct.rtx_def* %call11, %struct.rtx_def** %tem, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  ret %struct.rtx_def* %18
}

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @find_reloads_subreg_address(%struct.rtx_def* %x, i32 %force_replace, i32 %opnum, i32 %type, i32 %ind_levels, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %force_replace.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %outer_size = alloca i32, align 4
  %inner_size = alloca i32, align 4
  %base = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %force_replace, i32* %force_replace.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32, i32* %rtuint, align 4
  store i32 %2, i32* %regno, align 4
  %3 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3, align 8
  %tobool = icmp ne %struct.rtx_def* %5, null
  br i1 %tobool, label %if.then, label %if.end.139

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %force_replace.addr, align 4
  %tobool4 = icmp ne i32 %6, 0
  br i1 %tobool4, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %regno, align 4
  %idxprom5 = sext i32 %7 to i64
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8
  %tobool7 = icmp ne %struct.rtx_def* %9, null
  br i1 %tobool7, label %if.then.11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i32, i32* %regno, align 4
  %idxprom8 = sext i32 %10 to i64
  %11 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx9 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idxprom8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx9, align 8
  %call = call i32 @offsettable_memref_p(%struct.rtx_def* %12)
  %tobool10 = icmp ne i32 %call, 0
  br i1 %tobool10, label %if.end, label %if.then.11

if.then.11:                                       ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %force_replace.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.11, %lor.lhs.false, %if.then
  %13 = load i32, i32* %force_replace.addr, align 4
  %tobool12 = icmp ne i32 %13, 0
  br i1 %tobool12, label %if.then.15, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %if.end
  %14 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool14 = icmp ne i32 %14, 0
  br i1 %tobool14, label %if.then.15, label %if.end.138

if.then.15:                                       ; preds = %lor.lhs.false.13, %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %17 = load i32, i32* %regno, align 4
  %call19 = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %16, i32 %17)
  store %struct.rtx_def* %call19, %struct.rtx_def** %tem, align 8
  %18 = load i32, i32* %force_replace.addr, align 4
  %tobool20 = icmp ne i32 %18, 0
  br i1 %tobool20, label %if.then.26, label %lor.lhs.false.21

lor.lhs.false.21:                                 ; preds = %if.then.15
  %19 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %20 = load i32, i32* %regno, align 4
  %idxprom22 = sext i32 %20 to i64
  %21 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx23 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom22
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8
  %call24 = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %22)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.end.137, label %if.then.26

if.then.26:                                       ; preds = %lor.lhs.false.21, %if.then.15
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 1
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %24 = load i32, i32* %rtuint29, align 4
  store i32 %24, i32* %offset, align 4
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load = load i32, i32* %26, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom30 = sext i32 %bf.clear to i64
  %arrayidx31 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom30
  %27 = load i8, i8* %arrayidx31, align 1
  %conv = zext i8 %27 to i32
  store i32 %conv, i32* %outer_size, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load35 = load i32, i32* %30, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %idxprom38 = sext i32 %bf.clear37 to i64
  %arrayidx39 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom38
  %31 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %31 to i32
  store i32 %conv40, i32* %inner_size, align 4
  %32 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %34 = load i32, i32* %offset, align 4
  %conv44 = sext i32 %34 to i64
  %call45 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %33, i64 %conv44)
  %35 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  store %struct.rtx_def* %call45, %struct.rtx_def** %rtx48, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load49 = load i32, i32* %37, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %38 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load52 = load i32, i32* %39, align 8
  %bf.value = and i32 %bf.clear51, 255
  %bf.shl = shl i32 %bf.value, 16
  %bf.clear53 = and i32 %bf.load52, -16711681
  %bf.set = or i32 %bf.clear53, %bf.shl
  store i32 %bf.set, i32* %39, align 8
  %40 = load i32, i32* %outer_size, align 4
  %41 = load i32, i32* %inner_size, align 4
  %cmp = icmp ugt i32 %40, %41
  br i1 %cmp, label %land.lhs.true.55, label %if.end.102

land.lhs.true.55:                                 ; preds = %if.then.26
  br i1 false, label %if.then.56, label %if.end.102

if.then.56:                                       ; preds = %land.lhs.true.55
  %42 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i32 0, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx59, align 8
  store %struct.rtx_def* %43, %struct.rtx_def** %base, align 8
  %44 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load60 = load i32, i32* %45, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 75
  br i1 %cmp62, label %if.then.64, label %if.end.86

if.then.64:                                       ; preds = %if.then.56
  %46 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i32 0, i64 1
  %rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx67, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load68 = load i32, i32* %48, align 8
  %bf.clear69 = and i32 %bf.load68, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 54
  br i1 %cmp70, label %land.lhs.true.72, label %if.end.82

land.lhs.true.72:                                 ; preds = %if.then.64
  %49 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 1
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx77 to i64*
  %51 = load i64, i64* %rtwint, align 8
  %52 = load i32, i32* %outer_size, align 4
  %conv78 = zext i32 %52 to i64
  %rem = srem i64 %51, %conv78
  %cmp79 = icmp ne i64 %rem, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %land.lhs.true.72
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %53, %struct.rtx_def** %retval
  br label %return

if.end.82:                                        ; preds = %land.lhs.true.72, %if.then.64
  %54 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 0
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx85, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %base, align 8
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.82, %if.then.56
  %56 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load87 = load i32, i32* %57, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp ne i32 %bf.clear88, 61
  br i1 %cmp89, label %if.then.100, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %if.end.86
  %58 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 0
  %rtuint94 = bitcast %union.rtunion_def* %arrayidx93 to i32*
  %59 = load i32, i32* %rtuint94, align 4
  %idxprom95 = zext i32 %59 to i64
  %60 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %60, i32 0, i32 3
  %61 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %regno_pointer_align = getelementptr inbounds %struct.emit_status, %struct.emit_status* %61, i32 0, i32 10
  %62 = load i8*, i8** %regno_pointer_align, align 8
  %arrayidx96 = getelementptr inbounds i8, i8* %62, i64 %idxprom95
  %63 = load i8, i8* %arrayidx96, align 1
  %conv97 = zext i8 %63 to i32
  %64 = load i32, i32* %outer_size, align 4
  %mul = mul i32 %64, 8
  %cmp98 = icmp ult i32 %conv97, %mul
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %lor.lhs.false.91, %if.end.86
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %retval
  br label %return

if.end.101:                                       ; preds = %lor.lhs.false.91
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101, %land.lhs.true.55, %if.then.26
  %66 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load103 = load i32, i32* %67, align 8
  %bf.lshr104 = lshr i32 %bf.load103, 16
  %bf.clear105 = and i32 %bf.lshr104, 255
  %68 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 0
  %rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx108, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 0
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %71 = load i32, i32* %opnum.addr, align 4
  %72 = load i32, i32* %type.addr, align 4
  %cmp112 = icmp eq i32 %72, 3
  br i1 %cmp112, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.102
  br label %cond.end.118

cond.false:                                       ; preds = %if.end.102
  %73 = load i32, i32* %type.addr, align 4
  %cmp114 = icmp eq i32 %73, 5
  br i1 %cmp114, label %cond.true.116, label %cond.false.117

cond.true.116:                                    ; preds = %cond.false
  br label %cond.end

cond.false.117:                                   ; preds = %cond.false
  %74 = load i32, i32* %type.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.117, %cond.true.116
  %cond = phi i32 [ 6, %cond.true.116 ], [ %74, %cond.false.117 ]
  br label %cond.end.118

cond.end.118:                                     ; preds = %cond.end, %cond.true
  %cond119 = phi i32 [ 4, %cond.true ], [ %cond, %cond.end ]
  %75 = load i32, i32* %ind_levels.addr, align 4
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call120 = call i32 @find_reloads_address(i32 %bf.clear105, %struct.rtx_def** %tem, %struct.rtx_def* %69, %struct.rtx_def** %rtx111, i32 %71, i32 %cond119, i32 %75, %struct.rtx_def* %76)
  %77 = load i32, i32* @replace_reloads, align 4
  %tobool121 = icmp ne i32 %77, 0
  br i1 %tobool121, label %land.lhs.true.122, label %if.end.136

land.lhs.true.122:                                ; preds = %cond.end.118
  %78 = load i32, i32* %opnum.addr, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i32 0, i64 %idxprom123
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp125 = icmp ne %struct.rtx_def* %79, %80
  br i1 %cmp125, label %if.then.127, label %if.end.136

if.then.127:                                      ; preds = %land.lhs.true.122
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rtx130, align 8
  %call131 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %82)
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call132 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call131, %struct.rtx_def* %83)
  %84 = bitcast %struct.rtx_def* %call132 to i32*
  %bf.load133 = load i32, i32* %84, align 8
  %bf.clear134 = and i32 %bf.load133, -16711681
  %bf.set135 = or i32 %bf.clear134, 131072
  store i32 %bf.set135, i32* %84, align 8
  br label %if.end.136

if.end.136:                                       ; preds = %if.then.127, %land.lhs.true.122, %cond.end.118
  %85 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %85, %struct.rtx_def** %x.addr, align 8
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %lor.lhs.false.21
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %lor.lhs.false.13
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.138, %entry
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.139, %if.then.100, %if.then.81
  %87 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %87
}

declare %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def*) #1

declare i32 @rtx_varies_p(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @subst_reg_equivs(%struct.rtx_def* %ad, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %ad.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %regno = alloca i32, align 4
  %mem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %ad, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default [
    i32 134, label %sw.bb
    i32 54, label %sw.bb
    i32 58, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 61, label %sw.bb.1
    i32 75, label %sw.bb.20
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32, i32* %rtuint, align 4
  store i32 %5, i32* %regno, align 4
  %6 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx2 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8
  %cmp = icmp ne %struct.rtx_def* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  store i32 1, i32* @subst_reg_equivs_changed, align 4
  %9 = load i32, i32* %regno, align 4
  %idxprom3 = sext i32 %9 to i64
  %10 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx4 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom3
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %sw.bb.1
  %12 = load i32, i32* %regno, align 4
  %idxprom5 = sext i32 %12 to i64
  %13 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %13, i64 %idxprom5
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8
  %tobool = icmp ne %struct.rtx_def* %14, null
  br i1 %tobool, label %land.lhs.true, label %if.end.19

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool7 = icmp ne i32 %15, 0
  br i1 %tobool7, label %if.then.8, label %if.end.19

if.then.8:                                        ; preds = %land.lhs.true
  %16 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %17 = load i32, i32* %regno, align 4
  %call = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %16, i32 %17)
  store %struct.rtx_def* %call, %struct.rtx_def** %mem, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8
  %19 = load i32, i32* %regno, align 4
  %idxprom9 = sext i32 %19 to i64
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx10 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom9
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8
  %call11 = call i32 @rtx_equal_p(%struct.rtx_def* %18, %struct.rtx_def* %21)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.18, label %if.then.13

if.then.13:                                       ; preds = %if.then.8
  store i32 1, i32* @subst_reg_equivs_changed, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %22)
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call15 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call14, %struct.rtx_def* %23)
  %24 = bitcast %struct.rtx_def* %call15 to i32*
  %bf.load16 = load i32, i32* %24, align 8
  %bf.clear17 = and i32 %bf.load16, -16711681
  %bf.set = or i32 %bf.clear17, 131072
  store i32 %bf.set, i32* %24, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8
  store %struct.rtx_def* %25, %struct.rtx_def** %retval
  br label %return

if.end.18:                                        ; preds = %if.then.8
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %land.lhs.true, %if.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %26, %struct.rtx_def** %retval
  br label %return

sw.bb.20:                                         ; preds = %entry
  %27 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp23 = icmp eq %struct.rtx_def* %28, %29
  br i1 %cmp23, label %land.lhs.true.24, label %if.end.32

land.lhs.true.24:                                 ; preds = %sw.bb.20
  %30 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load28 = load i32, i32* %32, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 54
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.24
  %33 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %retval
  br label %return

if.end.32:                                        ; preds = %land.lhs.true.24, %sw.bb.20
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.32
  %34 = load i32, i32* %code, align 4
  %idxprom33 = sext i32 %34 to i64
  %arrayidx34 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom33
  %35 = load i8*, i8** %arrayidx34, align 8
  store i8* %35, i8** %fmt, align 8
  %36 = load i32, i32* %code, align 4
  %idxprom35 = sext i32 %36 to i64
  %arrayidx36 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom35
  %37 = load i8, i8* %arrayidx36, align 1
  %conv = zext i8 %37 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %38 = load i32, i32* %i, align 4
  %cmp37 = icmp sge i32 %38, 0
  br i1 %cmp37, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom39 = sext i32 %39 to i64
  %40 = load i8*, i8** %fmt, align 8
  %arrayidx40 = getelementptr inbounds i8, i8* %40, i64 %idxprom39
  %41 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %41 to i32
  %cmp42 = icmp eq i32 %conv41, 101
  br i1 %cmp42, label %if.then.44, label %if.end.54

if.then.44:                                       ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %idxprom45 = sext i32 %42 to i64
  %43 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 %idxprom45
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call49 = call %struct.rtx_def* @subst_reg_equivs(%struct.rtx_def* %44, %struct.rtx_def* %45)
  %46 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %46 to i64
  %47 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 %idxprom50
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  store %struct.rtx_def* %call49, %struct.rtx_def** %rtx53, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.44, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.54
  %48 = load i32, i32* %i, align 4
  %dec = add nsw i32 %48, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %49 = load %struct.rtx_def*, %struct.rtx_def** %ad.addr, align 8
  store %struct.rtx_def* %49, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.31, %if.end.19, %if.then.13, %if.then, %sw.bb
  %50 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %50
}

; Function Attrs: nounwind uwtable
define internal void @find_reloads_address_part(%struct.rtx_def* %x, %struct.rtx_def** %loc, i32 %class, i32 %mode, i32 %opnum, i32 %type, i32 %ind_levels) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %class.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %tem100 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %class, i32* %class.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 67
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1 = load i32, i32* %3, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 68
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load5 = load i32, i32* %5, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 54
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false.4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load9 = load i32, i32* %7, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 55
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load13 = load i32, i32* %9, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 58
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false.12
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load17 = load i32, i32* %11, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 134
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false.16
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load21 = load i32, i32* %13, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 56
  br i1 %cmp23, label %land.lhs.true, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %lor.lhs.false.20
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load25 = load i32, i32* %15, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 140
  br i1 %cmp27, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false.24, %lor.lhs.false.20, %lor.lhs.false.16, %lor.lhs.false.12, %lor.lhs.false.8, %lor.lhs.false.4, %lor.lhs.false, %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = load i32, i32* %class.addr, align 4
  %call = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %16, i32 %17)
  %cmp28 = icmp eq i32 %call, 0
  br i1 %cmp28, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %18 = load i32, i32* %mode.addr, align 4
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call29 = call %struct.rtx_def* @force_const_mem(i32 %18, %struct.rtx_def* %19)
  store %struct.rtx_def* %call29, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %call29, %struct.rtx_def** %tem, align 8
  %20 = load i32, i32* %mode.addr, align 4
  %21 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %24 = load i32, i32* %opnum.addr, align 4
  %25 = load i32, i32* %type.addr, align 4
  %26 = load i32, i32* %ind_levels.addr, align 4
  %call33 = call i32 @find_reloads_address(i32 %20, %struct.rtx_def** %tem, %struct.rtx_def* %22, %struct.rtx_def** %rtx32, i32 %24, i32 %25, i32 %26, %struct.rtx_def* null)
  br label %if.end.121

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.24
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load34 = load i32, i32* %28, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 75
  br i1 %cmp36, label %land.lhs.true.37, label %if.end

land.lhs.true.37:                                 ; preds = %if.else
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load41 = load i32, i32* %31, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 67
  br i1 %cmp43, label %land.lhs.true.93, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %land.lhs.true.37
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 1
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load48 = load i32, i32* %34, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 68
  br i1 %cmp50, label %land.lhs.true.93, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %lor.lhs.false.44
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 1
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load55 = load i32, i32* %37, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 54
  br i1 %cmp57, label %land.lhs.true.93, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %lor.lhs.false.51
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load62 = load i32, i32* %40, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 55
  br i1 %cmp64, label %land.lhs.true.93, label %lor.lhs.false.65

lor.lhs.false.65:                                 ; preds = %lor.lhs.false.58
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx68, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load69 = load i32, i32* %43, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 58
  br i1 %cmp71, label %land.lhs.true.93, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %lor.lhs.false.65
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 1
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load76 = load i32, i32* %46, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 134
  br i1 %cmp78, label %land.lhs.true.93, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %lor.lhs.false.72
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 1
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load83 = load i32, i32* %49, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 56
  br i1 %cmp85, label %land.lhs.true.93, label %lor.lhs.false.86

lor.lhs.false.86:                                 ; preds = %lor.lhs.false.79
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 1
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx89, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load90 = load i32, i32* %52, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 140
  br i1 %cmp92, label %land.lhs.true.93, label %if.end

land.lhs.true.93:                                 ; preds = %lor.lhs.false.86, %lor.lhs.false.79, %lor.lhs.false.72, %lor.lhs.false.65, %lor.lhs.false.58, %lor.lhs.false.51, %lor.lhs.false.44, %land.lhs.true.37
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 1
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  %55 = load i32, i32* %class.addr, align 4
  %call97 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %54, i32 %55)
  %cmp98 = icmp eq i32 %call97, 0
  br i1 %cmp98, label %if.then.99, label %if.end

if.then.99:                                       ; preds = %land.lhs.true.93
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load101 = load i32, i32* %57, align 8
  %bf.lshr = lshr i32 %bf.load101, 16
  %bf.clear102 = and i32 %bf.lshr, 255
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i32 0, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rtx105, align 8
  %call106 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear102, %struct.rtx_def* %59)
  store %struct.rtx_def* %call106, %struct.rtx_def** %tem100, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load107 = load i32, i32* %61, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 16
  %bf.clear109 = and i32 %bf.lshr108, 255
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx112, align 8
  %64 = load %struct.rtx_def*, %struct.rtx_def** %tem100, align 8
  %call113 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear109, %struct.rtx_def* %63, %struct.rtx_def* %64)
  store %struct.rtx_def* %call113, %struct.rtx_def** %x.addr, align 8
  %65 = load i32, i32* %mode.addr, align 4
  %66 = load %struct.rtx_def*, %struct.rtx_def** %tem100, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 0
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx116, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %tem100, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 0
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %69 = load i32, i32* %opnum.addr, align 4
  %70 = load i32, i32* %type.addr, align 4
  %71 = load i32, i32* %ind_levels.addr, align 4
  %call120 = call i32 @find_reloads_address(i32 %65, %struct.rtx_def** %tem100, %struct.rtx_def* %67, %struct.rtx_def** %rtx119, i32 %69, i32 %70, i32 %71, %struct.rtx_def* null)
  br label %if.end

if.end:                                           ; preds = %if.then.99, %land.lhs.true.93, %lor.lhs.false.86, %if.else
  br label %if.end.121

if.end.121:                                       ; preds = %if.end, %if.then
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %73 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %74 = load i32, i32* %class.addr, align 4
  %75 = load i32, i32* %mode.addr, align 4
  %76 = load i32, i32* %opnum.addr, align 4
  %77 = load i32, i32* %type.addr, align 4
  %call122 = call i32 @push_reload(%struct.rtx_def* %72, %struct.rtx_def* null, %struct.rtx_def** %73, %struct.rtx_def** null, i32 %74, i32 %75, i32 0, i32 0, i32 0, i32 %76, i32 %77)
  ret void
}

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @find_reloads_address_1(i32 %mode, %struct.rtx_def* %x, i32 %context, %struct.rtx_def** %loc, i32 %opnum, i32 %type, i32 %ind_levels, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %context.addr = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %ind_levels.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %orig_op0 = alloca %struct.rtx_def*, align 8
  %orig_op1 = alloca %struct.rtx_def*, align 8
  %code0 = alloca i32, align 4
  %code1 = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %op0624 = alloca %struct.rtx_def*, align 8
  %op1628 = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %reloadnum = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %regno876 = alloca i32, align 4
  %value = alloca i32, align 4
  %x_orig = alloca %struct.rtx_def*, align 8
  %tem904 = alloca %struct.rtx_def*, align 8
  %reloadnum1009 = alloca i32, align 4
  %equiv = alloca %struct.rtx_def*, align 8
  %icode = alloca i32, align 4
  %tem1117 = alloca %struct.rtx_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %reloadnum1121 = alloca i32, align 4
  %regno1196 = alloca i32, align 4
  %tem1224 = alloca %struct.rtx_def*, align 8
  %regno1373 = alloca i32, align 4
  %class = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %context, i32* %context.addr, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %opnum, i32* %opnum.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %ind_levels, i32* %ind_levels.addr, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  switch i32 %2, label %sw.default [
    i32 75, label %sw.bb
    i32 101, label %sw.bb.623
    i32 100, label %sw.bb.623
    i32 99, label %sw.bb.867
    i32 98, label %sw.bb.867
    i32 97, label %sw.bb.867
    i32 96, label %sw.bb.867
    i32 66, label %sw.bb.1166
    i32 61, label %sw.bb.1195
    i32 63, label %sw.bb.1355
  ]

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %orig_op0, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %orig_op1, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load4 = load i32, i32* %8, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  store i32 %bf.clear5, i32* %code0, align 4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load6 = load i32, i32* %10, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  store i32 %bf.clear7, i32* %code1, align 4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %op0, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %op1, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load8 = load i32, i32* %14, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp = icmp eq i32 %bf.clear9, 63
  br i1 %cmp, label %if.then, label %if.end.41

if.then:                                          ; preds = %sw.bb
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  store %struct.rtx_def* %16, %struct.rtx_def** %op0, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load13 = load i32, i32* %18, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  store i32 %bf.clear14, i32* %code0, align 4
  %19 = load i32, i32* %code0, align 4
  %cmp15 = icmp eq i32 %19, 61
  br i1 %cmp15, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %21 = load i32, i32* %rtuint, align 4
  %cmp18 = icmp ult i32 %21, 53
  br i1 %cmp18, label %if.then.19, label %if.end

if.then.19:                                       ; preds = %land.lhs.true
  %22 = load i32, i32* @word_mode, align 4
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtuint22 = bitcast %union.rtunion_def* %arrayidx21 to i32*
  %24 = load i32, i32* %rtuint22, align 4
  %25 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 0
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 0
  %rtuint28 = bitcast %union.rtunion_def* %arrayidx27 to i32*
  %27 = load i32, i32* %rtuint28, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load32 = load i32, i32* %30, align 8
  %bf.lshr = lshr i32 %bf.load32, 16
  %bf.clear33 = and i32 %bf.lshr, 255
  %31 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 1
  %rtuint36 = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %32 = load i32, i32* %rtuint36, align 4
  %33 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load37 = load i32, i32* %34, align 8
  %bf.lshr38 = lshr i32 %bf.load37, 16
  %bf.clear39 = and i32 %bf.lshr38, 255
  %call = call i32 @subreg_regno_offset(i32 %27, i32 %bf.clear33, i32 %32, i32 %bf.clear39)
  %add = add i32 %24, %call
  %call40 = call %struct.rtx_def* @gen_rtx_REG(i32 %22, i32 %add)
  store %struct.rtx_def* %call40, %struct.rtx_def** %op0, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.19, %land.lhs.true, %if.then
  br label %if.end.41

if.end.41:                                        ; preds = %if.end, %sw.bb
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load42 = load i32, i32* %36, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 63
  br i1 %cmp44, label %if.then.45, label %if.end.86

if.then.45:                                       ; preds = %if.end.41
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  store %struct.rtx_def* %38, %struct.rtx_def** %op1, align 8
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load49 = load i32, i32* %40, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  store i32 %bf.clear50, i32* %code1, align 4
  %41 = load i32, i32* %code1, align 4
  %cmp51 = icmp eq i32 %41, 61
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.85

land.lhs.true.52:                                 ; preds = %if.then.45
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtuint55 = bitcast %union.rtunion_def* %arrayidx54 to i32*
  %43 = load i32, i32* %rtuint55, align 4
  %cmp56 = icmp ult i32 %43, 53
  br i1 %cmp56, label %if.then.57, label %if.end.85

if.then.57:                                       ; preds = %land.lhs.true.52
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load58 = load i32, i32* %45, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtuint63 = bitcast %union.rtunion_def* %arrayidx62 to i32*
  %47 = load i32, i32* %rtuint63, align 4
  %48 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx66, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtuint69 = bitcast %union.rtunion_def* %arrayidx68 to i32*
  %50 = load i32, i32* %rtuint69, align 4
  %51 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load73 = load i32, i32* %53, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %54 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 1
  %rtuint78 = bitcast %union.rtunion_def* %arrayidx77 to i32*
  %55 = load i32, i32* %rtuint78, align 4
  %56 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load79 = load i32, i32* %57, align 8
  %bf.lshr80 = lshr i32 %bf.load79, 16
  %bf.clear81 = and i32 %bf.lshr80, 255
  %call82 = call i32 @subreg_regno_offset(i32 %50, i32 %bf.clear75, i32 %55, i32 %bf.clear81)
  %add83 = add i32 %47, %call82
  %call84 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear60, i32 %add83)
  store %struct.rtx_def* %call84, %struct.rtx_def** %op1, align 8
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.57, %land.lhs.true.52, %if.then.45
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.end.41
  %58 = load i32, i32* %code0, align 4
  %cmp87 = icmp eq i32 %58, 78
  br i1 %cmp87, label %if.then.95, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.86
  %59 = load i32, i32* %code0, align 4
  %cmp88 = icmp eq i32 %59, 120
  br i1 %cmp88, label %if.then.95, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false
  %60 = load i32, i32* %code0, align 4
  %cmp90 = icmp eq i32 %60, 122
  br i1 %cmp90, label %if.then.95, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %lor.lhs.false.89
  %61 = load i32, i32* %code0, align 4
  %cmp92 = icmp eq i32 %61, 121
  br i1 %cmp92, label %if.then.95, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %lor.lhs.false.91
  %62 = load i32, i32* %code1, align 4
  %cmp94 = icmp eq i32 %62, 66
  br i1 %cmp94, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %lor.lhs.false.93, %lor.lhs.false.91, %lor.lhs.false.89, %lor.lhs.false, %if.end.86
  %63 = load i32, i32* %mode.addr, align 4
  %64 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %66 = load i32, i32* %opnum.addr, align 4
  %67 = load i32, i32* %type.addr, align 4
  %68 = load i32, i32* %ind_levels.addr, align 4
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call99 = call i32 @find_reloads_address_1(i32 %63, %struct.rtx_def* %64, i32 1, %struct.rtx_def** %rtx98, i32 %66, i32 %67, i32 %68, %struct.rtx_def* %69)
  %70 = load i32, i32* %mode.addr, align 4
  %71 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 1
  %rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**
  %73 = load i32, i32* %opnum.addr, align 4
  %74 = load i32, i32* %type.addr, align 4
  %75 = load i32, i32* %ind_levels.addr, align 4
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call103 = call i32 @find_reloads_address_1(i32 %70, %struct.rtx_def* %71, i32 0, %struct.rtx_def** %rtx102, i32 %73, i32 %74, i32 %75, %struct.rtx_def* %76)
  br label %if.end.622

if.else:                                          ; preds = %lor.lhs.false.93
  %77 = load i32, i32* %code1, align 4
  %cmp104 = icmp eq i32 %77, 78
  br i1 %cmp104, label %if.then.113, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %if.else
  %78 = load i32, i32* %code1, align 4
  %cmp106 = icmp eq i32 %78, 120
  br i1 %cmp106, label %if.then.113, label %lor.lhs.false.107

lor.lhs.false.107:                                ; preds = %lor.lhs.false.105
  %79 = load i32, i32* %code1, align 4
  %cmp108 = icmp eq i32 %79, 122
  br i1 %cmp108, label %if.then.113, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %lor.lhs.false.107
  %80 = load i32, i32* %code1, align 4
  %cmp110 = icmp eq i32 %80, 121
  br i1 %cmp110, label %if.then.113, label %lor.lhs.false.111

lor.lhs.false.111:                                ; preds = %lor.lhs.false.109
  %81 = load i32, i32* %code0, align 4
  %cmp112 = icmp eq i32 %81, 66
  br i1 %cmp112, label %if.then.113, label %if.else.122

if.then.113:                                      ; preds = %lor.lhs.false.111, %lor.lhs.false.109, %lor.lhs.false.107, %lor.lhs.false.105, %if.else
  %82 = load i32, i32* %mode.addr, align 4
  %83 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 0
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %85 = load i32, i32* %opnum.addr, align 4
  %86 = load i32, i32* %type.addr, align 4
  %87 = load i32, i32* %ind_levels.addr, align 4
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call117 = call i32 @find_reloads_address_1(i32 %82, %struct.rtx_def* %83, i32 0, %struct.rtx_def** %rtx116, i32 %85, i32 %86, i32 %87, %struct.rtx_def* %88)
  %89 = load i32, i32* %mode.addr, align 4
  %90 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i32 0, i64 1
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %92 = load i32, i32* %opnum.addr, align 4
  %93 = load i32, i32* %type.addr, align 4
  %94 = load i32, i32* %ind_levels.addr, align 4
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call121 = call i32 @find_reloads_address_1(i32 %89, %struct.rtx_def* %90, i32 1, %struct.rtx_def** %rtx120, i32 %92, i32 %93, i32 %94, %struct.rtx_def* %95)
  br label %if.end.621

if.else.122:                                      ; preds = %lor.lhs.false.111
  %96 = load i32, i32* %code0, align 4
  %cmp123 = icmp eq i32 %96, 54
  br i1 %cmp123, label %if.then.130, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %if.else.122
  %97 = load i32, i32* %code0, align 4
  %cmp125 = icmp eq i32 %97, 58
  br i1 %cmp125, label %if.then.130, label %lor.lhs.false.126

lor.lhs.false.126:                                ; preds = %lor.lhs.false.124
  %98 = load i32, i32* %code0, align 4
  %cmp127 = icmp eq i32 %98, 68
  br i1 %cmp127, label %if.then.130, label %lor.lhs.false.128

lor.lhs.false.128:                                ; preds = %lor.lhs.false.126
  %99 = load i32, i32* %code0, align 4
  %cmp129 = icmp eq i32 %99, 67
  br i1 %cmp129, label %if.then.130, label %if.else.135

if.then.130:                                      ; preds = %lor.lhs.false.128, %lor.lhs.false.126, %lor.lhs.false.124, %if.else.122
  %100 = load i32, i32* %mode.addr, align 4
  %101 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i32 0, i64 1
  %rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**
  %103 = load i32, i32* %opnum.addr, align 4
  %104 = load i32, i32* %type.addr, align 4
  %105 = load i32, i32* %ind_levels.addr, align 4
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call134 = call i32 @find_reloads_address_1(i32 %100, %struct.rtx_def* %101, i32 0, %struct.rtx_def** %rtx133, i32 %103, i32 %104, i32 %105, %struct.rtx_def* %106)
  br label %if.end.620

if.else.135:                                      ; preds = %lor.lhs.false.128
  %107 = load i32, i32* %code1, align 4
  %cmp136 = icmp eq i32 %107, 54
  br i1 %cmp136, label %if.then.143, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %if.else.135
  %108 = load i32, i32* %code1, align 4
  %cmp138 = icmp eq i32 %108, 58
  br i1 %cmp138, label %if.then.143, label %lor.lhs.false.139

lor.lhs.false.139:                                ; preds = %lor.lhs.false.137
  %109 = load i32, i32* %code1, align 4
  %cmp140 = icmp eq i32 %109, 68
  br i1 %cmp140, label %if.then.143, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %lor.lhs.false.139
  %110 = load i32, i32* %code1, align 4
  %cmp142 = icmp eq i32 %110, 67
  br i1 %cmp142, label %if.then.143, label %if.else.148

if.then.143:                                      ; preds = %lor.lhs.false.141, %lor.lhs.false.139, %lor.lhs.false.137, %if.else.135
  %111 = load i32, i32* %mode.addr, align 4
  %112 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 0
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %114 = load i32, i32* %opnum.addr, align 4
  %115 = load i32, i32* %type.addr, align 4
  %116 = load i32, i32* %ind_levels.addr, align 4
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call147 = call i32 @find_reloads_address_1(i32 %111, %struct.rtx_def* %112, i32 0, %struct.rtx_def** %rtx146, i32 %114, i32 %115, i32 %116, %struct.rtx_def* %117)
  br label %if.end.619

if.else.148:                                      ; preds = %lor.lhs.false.141
  %118 = load i32, i32* %code0, align 4
  %cmp149 = icmp eq i32 %118, 61
  br i1 %cmp149, label %land.lhs.true.150, label %if.else.592

land.lhs.true.150:                                ; preds = %if.else.148
  %119 = load i32, i32* %code1, align 4
  %cmp151 = icmp eq i32 %119, 61
  br i1 %cmp151, label %if.then.152, label %if.else.592

if.then.152:                                      ; preds = %land.lhs.true.150
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtuint155 = bitcast %union.rtunion_def* %arrayidx154 to i32*
  %121 = load i32, i32* %rtuint155, align 4
  %cmp156 = icmp ult i32 %121, 7
  br i1 %cmp156, label %land.lhs.true.192, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %if.then.152
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtuint160 = bitcast %union.rtunion_def* %arrayidx159 to i32*
  %123 = load i32, i32* %rtuint160, align 4
  %cmp161 = icmp uge i32 %123, 37
  br i1 %cmp161, label %land.lhs.true.162, label %lor.lhs.false.167

land.lhs.true.162:                                ; preds = %lor.lhs.false.157
  %124 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtuint165 = bitcast %union.rtunion_def* %arrayidx164 to i32*
  %125 = load i32, i32* %rtuint165, align 4
  %cmp166 = icmp ule i32 %125, 44
  br i1 %cmp166, label %land.lhs.true.192, label %lor.lhs.false.167

lor.lhs.false.167:                                ; preds = %land.lhs.true.162, %lor.lhs.false.157
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 0
  %rtuint170 = bitcast %union.rtunion_def* %arrayidx169 to i32*
  %127 = load i32, i32* %rtuint170, align 4
  %idxprom = zext i32 %127 to i64
  %128 = load i16*, i16** @reg_renumber, align 8
  %arrayidx171 = getelementptr inbounds i16, i16* %128, i64 %idxprom
  %129 = load i16, i16* %arrayidx171, align 2
  %conv = sext i16 %129 to i32
  %cmp172 = icmp uge i32 %conv, 37
  br i1 %cmp172, label %land.lhs.true.174, label %lor.lhs.false.183

land.lhs.true.174:                                ; preds = %lor.lhs.false.167
  %130 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 0
  %rtuint177 = bitcast %union.rtunion_def* %arrayidx176 to i32*
  %131 = load i32, i32* %rtuint177, align 4
  %idxprom178 = zext i32 %131 to i64
  %132 = load i16*, i16** @reg_renumber, align 8
  %arrayidx179 = getelementptr inbounds i16, i16* %132, i64 %idxprom178
  %133 = load i16, i16* %arrayidx179, align 2
  %conv180 = sext i16 %133 to i32
  %cmp181 = icmp ule i32 %conv180, 44
  br i1 %cmp181, label %land.lhs.true.192, label %lor.lhs.false.183

lor.lhs.false.183:                                ; preds = %land.lhs.true.174, %lor.lhs.false.167
  %134 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtuint186 = bitcast %union.rtunion_def* %arrayidx185 to i32*
  %135 = load i32, i32* %rtuint186, align 4
  %idxprom187 = zext i32 %135 to i64
  %136 = load i16*, i16** @reg_renumber, align 8
  %arrayidx188 = getelementptr inbounds i16, i16* %136, i64 %idxprom187
  %137 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %137 to i32
  %cmp190 = icmp ult i32 %conv189, 7
  br i1 %cmp190, label %land.lhs.true.192, label %if.else.250

land.lhs.true.192:                                ; preds = %lor.lhs.false.183, %land.lhs.true.174, %land.lhs.true.162, %if.then.152
  %138 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtuint195 = bitcast %union.rtunion_def* %arrayidx194 to i32*
  %139 = load i32, i32* %rtuint195, align 4
  %cmp196 = icmp ule i32 %139, 7
  br i1 %cmp196, label %if.then.249, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %land.lhs.true.192
  %140 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtuint201 = bitcast %union.rtunion_def* %arrayidx200 to i32*
  %141 = load i32, i32* %rtuint201, align 4
  %cmp202 = icmp eq i32 %141, 16
  br i1 %cmp202, label %if.then.249, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.198
  %142 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 0
  %rtuint207 = bitcast %union.rtunion_def* %arrayidx206 to i32*
  %143 = load i32, i32* %rtuint207, align 4
  %cmp208 = icmp eq i32 %143, 20
  br i1 %cmp208, label %if.then.249, label %lor.lhs.false.210

lor.lhs.false.210:                                ; preds = %lor.lhs.false.204
  %144 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 0
  %rtuint213 = bitcast %union.rtunion_def* %arrayidx212 to i32*
  %145 = load i32, i32* %rtuint213, align 4
  %cmp214 = icmp uge i32 %145, 37
  br i1 %cmp214, label %land.lhs.true.216, label %lor.lhs.false.222

land.lhs.true.216:                                ; preds = %lor.lhs.false.210
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 0
  %rtuint219 = bitcast %union.rtunion_def* %arrayidx218 to i32*
  %147 = load i32, i32* %rtuint219, align 4
  %cmp220 = icmp ule i32 %147, 44
  br i1 %cmp220, label %if.then.249, label %lor.lhs.false.222

lor.lhs.false.222:                                ; preds = %land.lhs.true.216, %lor.lhs.false.210
  %148 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 0
  %rtuint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  %149 = load i32, i32* %rtuint225, align 4
  %idxprom226 = zext i32 %149 to i64
  %150 = load i16*, i16** @reg_renumber, align 8
  %arrayidx227 = getelementptr inbounds i16, i16* %150, i64 %idxprom226
  %151 = load i16, i16* %arrayidx227, align 2
  %conv228 = sext i16 %151 to i32
  %cmp229 = icmp uge i32 %conv228, 37
  br i1 %cmp229, label %land.lhs.true.231, label %lor.lhs.false.240

land.lhs.true.231:                                ; preds = %lor.lhs.false.222
  %152 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i32 0, i64 0
  %rtuint234 = bitcast %union.rtunion_def* %arrayidx233 to i32*
  %153 = load i32, i32* %rtuint234, align 4
  %idxprom235 = zext i32 %153 to i64
  %154 = load i16*, i16** @reg_renumber, align 8
  %arrayidx236 = getelementptr inbounds i16, i16* %154, i64 %idxprom235
  %155 = load i16, i16* %arrayidx236, align 2
  %conv237 = sext i16 %155 to i32
  %cmp238 = icmp ule i32 %conv237, 44
  br i1 %cmp238, label %if.then.249, label %lor.lhs.false.240

lor.lhs.false.240:                                ; preds = %land.lhs.true.231, %lor.lhs.false.222
  %156 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i32 0, i64 0
  %rtuint243 = bitcast %union.rtunion_def* %arrayidx242 to i32*
  %157 = load i32, i32* %rtuint243, align 4
  %idxprom244 = zext i32 %157 to i64
  %158 = load i16*, i16** @reg_renumber, align 8
  %arrayidx245 = getelementptr inbounds i16, i16* %158, i64 %idxprom244
  %159 = load i16, i16* %arrayidx245, align 2
  %conv246 = sext i16 %159 to i32
  %cmp247 = icmp ule i32 %conv246, 7
  br i1 %cmp247, label %if.then.249, label %if.else.250

if.then.249:                                      ; preds = %lor.lhs.false.240, %land.lhs.true.231, %land.lhs.true.216, %lor.lhs.false.204, %lor.lhs.false.198, %land.lhs.true.192
  store i32 0, i32* %retval
  br label %return

if.else.250:                                      ; preds = %lor.lhs.false.240, %lor.lhs.false.183
  %160 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i32 0, i64 0
  %rtuint253 = bitcast %union.rtunion_def* %arrayidx252 to i32*
  %161 = load i32, i32* %rtuint253, align 4
  %cmp254 = icmp ult i32 %161, 7
  br i1 %cmp254, label %land.lhs.true.295, label %lor.lhs.false.256

lor.lhs.false.256:                                ; preds = %if.else.250
  %162 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 0
  %rtuint259 = bitcast %union.rtunion_def* %arrayidx258 to i32*
  %163 = load i32, i32* %rtuint259, align 4
  %cmp260 = icmp uge i32 %163, 37
  br i1 %cmp260, label %land.lhs.true.262, label %lor.lhs.false.268

land.lhs.true.262:                                ; preds = %lor.lhs.false.256
  %164 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i32 0, i64 0
  %rtuint265 = bitcast %union.rtunion_def* %arrayidx264 to i32*
  %165 = load i32, i32* %rtuint265, align 4
  %cmp266 = icmp ule i32 %165, 44
  br i1 %cmp266, label %land.lhs.true.295, label %lor.lhs.false.268

lor.lhs.false.268:                                ; preds = %land.lhs.true.262, %lor.lhs.false.256
  %166 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 0
  %rtuint271 = bitcast %union.rtunion_def* %arrayidx270 to i32*
  %167 = load i32, i32* %rtuint271, align 4
  %idxprom272 = zext i32 %167 to i64
  %168 = load i16*, i16** @reg_renumber, align 8
  %arrayidx273 = getelementptr inbounds i16, i16* %168, i64 %idxprom272
  %169 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %169 to i32
  %cmp275 = icmp uge i32 %conv274, 37
  br i1 %cmp275, label %land.lhs.true.277, label %lor.lhs.false.286

land.lhs.true.277:                                ; preds = %lor.lhs.false.268
  %170 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 0
  %rtuint280 = bitcast %union.rtunion_def* %arrayidx279 to i32*
  %171 = load i32, i32* %rtuint280, align 4
  %idxprom281 = zext i32 %171 to i64
  %172 = load i16*, i16** @reg_renumber, align 8
  %arrayidx282 = getelementptr inbounds i16, i16* %172, i64 %idxprom281
  %173 = load i16, i16* %arrayidx282, align 2
  %conv283 = sext i16 %173 to i32
  %cmp284 = icmp ule i32 %conv283, 44
  br i1 %cmp284, label %land.lhs.true.295, label %lor.lhs.false.286

lor.lhs.false.286:                                ; preds = %land.lhs.true.277, %lor.lhs.false.268
  %174 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i32 0, i64 0
  %rtuint289 = bitcast %union.rtunion_def* %arrayidx288 to i32*
  %175 = load i32, i32* %rtuint289, align 4
  %idxprom290 = zext i32 %175 to i64
  %176 = load i16*, i16** @reg_renumber, align 8
  %arrayidx291 = getelementptr inbounds i16, i16* %176, i64 %idxprom290
  %177 = load i16, i16* %arrayidx291, align 2
  %conv292 = sext i16 %177 to i32
  %cmp293 = icmp ult i32 %conv292, 7
  br i1 %cmp293, label %land.lhs.true.295, label %if.else.353

land.lhs.true.295:                                ; preds = %lor.lhs.false.286, %land.lhs.true.277, %land.lhs.true.262, %if.else.250
  %178 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i32 0, i64 0
  %rtuint298 = bitcast %union.rtunion_def* %arrayidx297 to i32*
  %179 = load i32, i32* %rtuint298, align 4
  %cmp299 = icmp ule i32 %179, 7
  br i1 %cmp299, label %if.then.352, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %land.lhs.true.295
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i32 0, i64 0
  %rtuint304 = bitcast %union.rtunion_def* %arrayidx303 to i32*
  %181 = load i32, i32* %rtuint304, align 4
  %cmp305 = icmp eq i32 %181, 16
  br i1 %cmp305, label %if.then.352, label %lor.lhs.false.307

lor.lhs.false.307:                                ; preds = %lor.lhs.false.301
  %182 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx309 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld308, i32 0, i64 0
  %rtuint310 = bitcast %union.rtunion_def* %arrayidx309 to i32*
  %183 = load i32, i32* %rtuint310, align 4
  %cmp311 = icmp eq i32 %183, 20
  br i1 %cmp311, label %if.then.352, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %lor.lhs.false.307
  %184 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 0
  %rtuint316 = bitcast %union.rtunion_def* %arrayidx315 to i32*
  %185 = load i32, i32* %rtuint316, align 4
  %cmp317 = icmp uge i32 %185, 37
  br i1 %cmp317, label %land.lhs.true.319, label %lor.lhs.false.325

land.lhs.true.319:                                ; preds = %lor.lhs.false.313
  %186 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld320, i32 0, i64 0
  %rtuint322 = bitcast %union.rtunion_def* %arrayidx321 to i32*
  %187 = load i32, i32* %rtuint322, align 4
  %cmp323 = icmp ule i32 %187, 44
  br i1 %cmp323, label %if.then.352, label %lor.lhs.false.325

lor.lhs.false.325:                                ; preds = %land.lhs.true.319, %lor.lhs.false.313
  %188 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i32 0, i64 0
  %rtuint328 = bitcast %union.rtunion_def* %arrayidx327 to i32*
  %189 = load i32, i32* %rtuint328, align 4
  %idxprom329 = zext i32 %189 to i64
  %190 = load i16*, i16** @reg_renumber, align 8
  %arrayidx330 = getelementptr inbounds i16, i16* %190, i64 %idxprom329
  %191 = load i16, i16* %arrayidx330, align 2
  %conv331 = sext i16 %191 to i32
  %cmp332 = icmp uge i32 %conv331, 37
  br i1 %cmp332, label %land.lhs.true.334, label %lor.lhs.false.343

land.lhs.true.334:                                ; preds = %lor.lhs.false.325
  %192 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx336 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld335, i32 0, i64 0
  %rtuint337 = bitcast %union.rtunion_def* %arrayidx336 to i32*
  %193 = load i32, i32* %rtuint337, align 4
  %idxprom338 = zext i32 %193 to i64
  %194 = load i16*, i16** @reg_renumber, align 8
  %arrayidx339 = getelementptr inbounds i16, i16* %194, i64 %idxprom338
  %195 = load i16, i16* %arrayidx339, align 2
  %conv340 = sext i16 %195 to i32
  %cmp341 = icmp ule i32 %conv340, 44
  br i1 %cmp341, label %if.then.352, label %lor.lhs.false.343

lor.lhs.false.343:                                ; preds = %land.lhs.true.334, %lor.lhs.false.325
  %196 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 0
  %rtuint346 = bitcast %union.rtunion_def* %arrayidx345 to i32*
  %197 = load i32, i32* %rtuint346, align 4
  %idxprom347 = zext i32 %197 to i64
  %198 = load i16*, i16** @reg_renumber, align 8
  %arrayidx348 = getelementptr inbounds i16, i16* %198, i64 %idxprom347
  %199 = load i16, i16* %arrayidx348, align 2
  %conv349 = sext i16 %199 to i32
  %cmp350 = icmp ule i32 %conv349, 7
  br i1 %cmp350, label %if.then.352, label %if.else.353

if.then.352:                                      ; preds = %lor.lhs.false.343, %land.lhs.true.334, %land.lhs.true.319, %lor.lhs.false.307, %lor.lhs.false.301, %land.lhs.true.295
  store i32 0, i32* %retval
  br label %return

if.else.353:                                      ; preds = %lor.lhs.false.343, %lor.lhs.false.286
  %200 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld354, i32 0, i64 0
  %rtuint356 = bitcast %union.rtunion_def* %arrayidx355 to i32*
  %201 = load i32, i32* %rtuint356, align 4
  %cmp357 = icmp ule i32 %201, 7
  br i1 %cmp357, label %if.then.410, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %if.else.353
  %202 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i32 0, i64 0
  %rtuint362 = bitcast %union.rtunion_def* %arrayidx361 to i32*
  %203 = load i32, i32* %rtuint362, align 4
  %cmp363 = icmp eq i32 %203, 16
  br i1 %cmp363, label %if.then.410, label %lor.lhs.false.365

lor.lhs.false.365:                                ; preds = %lor.lhs.false.359
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtuint368 = bitcast %union.rtunion_def* %arrayidx367 to i32*
  %205 = load i32, i32* %rtuint368, align 4
  %cmp369 = icmp eq i32 %205, 20
  br i1 %cmp369, label %if.then.410, label %lor.lhs.false.371

lor.lhs.false.371:                                ; preds = %lor.lhs.false.365
  %206 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 0
  %rtuint374 = bitcast %union.rtunion_def* %arrayidx373 to i32*
  %207 = load i32, i32* %rtuint374, align 4
  %cmp375 = icmp uge i32 %207, 37
  br i1 %cmp375, label %land.lhs.true.377, label %lor.lhs.false.383

land.lhs.true.377:                                ; preds = %lor.lhs.false.371
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i32 0, i64 0
  %rtuint380 = bitcast %union.rtunion_def* %arrayidx379 to i32*
  %209 = load i32, i32* %rtuint380, align 4
  %cmp381 = icmp ule i32 %209, 44
  br i1 %cmp381, label %if.then.410, label %lor.lhs.false.383

lor.lhs.false.383:                                ; preds = %land.lhs.true.377, %lor.lhs.false.371
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtuint386 = bitcast %union.rtunion_def* %arrayidx385 to i32*
  %211 = load i32, i32* %rtuint386, align 4
  %idxprom387 = zext i32 %211 to i64
  %212 = load i16*, i16** @reg_renumber, align 8
  %arrayidx388 = getelementptr inbounds i16, i16* %212, i64 %idxprom387
  %213 = load i16, i16* %arrayidx388, align 2
  %conv389 = sext i16 %213 to i32
  %cmp390 = icmp uge i32 %conv389, 37
  br i1 %cmp390, label %land.lhs.true.392, label %lor.lhs.false.401

land.lhs.true.392:                                ; preds = %lor.lhs.false.383
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i32 0, i64 0
  %rtuint395 = bitcast %union.rtunion_def* %arrayidx394 to i32*
  %215 = load i32, i32* %rtuint395, align 4
  %idxprom396 = zext i32 %215 to i64
  %216 = load i16*, i16** @reg_renumber, align 8
  %arrayidx397 = getelementptr inbounds i16, i16* %216, i64 %idxprom396
  %217 = load i16, i16* %arrayidx397, align 2
  %conv398 = sext i16 %217 to i32
  %cmp399 = icmp ule i32 %conv398, 44
  br i1 %cmp399, label %if.then.410, label %lor.lhs.false.401

lor.lhs.false.401:                                ; preds = %land.lhs.true.392, %lor.lhs.false.383
  %218 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 0
  %rtuint404 = bitcast %union.rtunion_def* %arrayidx403 to i32*
  %219 = load i32, i32* %rtuint404, align 4
  %idxprom405 = zext i32 %219 to i64
  %220 = load i16*, i16** @reg_renumber, align 8
  %arrayidx406 = getelementptr inbounds i16, i16* %220, i64 %idxprom405
  %221 = load i16, i16* %arrayidx406, align 2
  %conv407 = sext i16 %221 to i32
  %cmp408 = icmp ule i32 %conv407, 7
  br i1 %cmp408, label %if.then.410, label %if.else.415

if.then.410:                                      ; preds = %lor.lhs.false.401, %land.lhs.true.392, %land.lhs.true.377, %lor.lhs.false.365, %lor.lhs.false.359, %if.else.353
  %222 = load i32, i32* %mode.addr, align 4
  %223 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %224 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 0
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %225 = load i32, i32* %opnum.addr, align 4
  %226 = load i32, i32* %type.addr, align 4
  %227 = load i32, i32* %ind_levels.addr, align 4
  %228 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call414 = call i32 @find_reloads_address_1(i32 %222, %struct.rtx_def* %223, i32 1, %struct.rtx_def** %rtx413, i32 %225, i32 %226, i32 %227, %struct.rtx_def* %228)
  br label %if.end.589

if.else.415:                                      ; preds = %lor.lhs.false.401
  %229 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtuint418 = bitcast %union.rtunion_def* %arrayidx417 to i32*
  %230 = load i32, i32* %rtuint418, align 4
  %cmp419 = icmp ule i32 %230, 7
  br i1 %cmp419, label %if.then.472, label %lor.lhs.false.421

lor.lhs.false.421:                                ; preds = %if.else.415
  %231 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i32 0, i64 0
  %rtuint424 = bitcast %union.rtunion_def* %arrayidx423 to i32*
  %232 = load i32, i32* %rtuint424, align 4
  %cmp425 = icmp eq i32 %232, 16
  br i1 %cmp425, label %if.then.472, label %lor.lhs.false.427

lor.lhs.false.427:                                ; preds = %lor.lhs.false.421
  %233 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i32 0, i64 0
  %rtuint430 = bitcast %union.rtunion_def* %arrayidx429 to i32*
  %234 = load i32, i32* %rtuint430, align 4
  %cmp431 = icmp eq i32 %234, 20
  br i1 %cmp431, label %if.then.472, label %lor.lhs.false.433

lor.lhs.false.433:                                ; preds = %lor.lhs.false.427
  %235 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 0
  %rtuint436 = bitcast %union.rtunion_def* %arrayidx435 to i32*
  %236 = load i32, i32* %rtuint436, align 4
  %cmp437 = icmp uge i32 %236, 37
  br i1 %cmp437, label %land.lhs.true.439, label %lor.lhs.false.445

land.lhs.true.439:                                ; preds = %lor.lhs.false.433
  %237 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i32 0, i64 0
  %rtuint442 = bitcast %union.rtunion_def* %arrayidx441 to i32*
  %238 = load i32, i32* %rtuint442, align 4
  %cmp443 = icmp ule i32 %238, 44
  br i1 %cmp443, label %if.then.472, label %lor.lhs.false.445

lor.lhs.false.445:                                ; preds = %land.lhs.true.439, %lor.lhs.false.433
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld446, i32 0, i64 0
  %rtuint448 = bitcast %union.rtunion_def* %arrayidx447 to i32*
  %240 = load i32, i32* %rtuint448, align 4
  %idxprom449 = zext i32 %240 to i64
  %241 = load i16*, i16** @reg_renumber, align 8
  %arrayidx450 = getelementptr inbounds i16, i16* %241, i64 %idxprom449
  %242 = load i16, i16* %arrayidx450, align 2
  %conv451 = sext i16 %242 to i32
  %cmp452 = icmp uge i32 %conv451, 37
  br i1 %cmp452, label %land.lhs.true.454, label %lor.lhs.false.463

land.lhs.true.454:                                ; preds = %lor.lhs.false.445
  %243 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %arrayidx456 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld455, i32 0, i64 0
  %rtuint457 = bitcast %union.rtunion_def* %arrayidx456 to i32*
  %244 = load i32, i32* %rtuint457, align 4
  %idxprom458 = zext i32 %244 to i64
  %245 = load i16*, i16** @reg_renumber, align 8
  %arrayidx459 = getelementptr inbounds i16, i16* %245, i64 %idxprom458
  %246 = load i16, i16* %arrayidx459, align 2
  %conv460 = sext i16 %246 to i32
  %cmp461 = icmp ule i32 %conv460, 44
  br i1 %cmp461, label %if.then.472, label %lor.lhs.false.463

lor.lhs.false.463:                                ; preds = %land.lhs.true.454, %lor.lhs.false.445
  %247 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 0
  %rtuint466 = bitcast %union.rtunion_def* %arrayidx465 to i32*
  %248 = load i32, i32* %rtuint466, align 4
  %idxprom467 = zext i32 %248 to i64
  %249 = load i16*, i16** @reg_renumber, align 8
  %arrayidx468 = getelementptr inbounds i16, i16* %249, i64 %idxprom467
  %250 = load i16, i16* %arrayidx468, align 2
  %conv469 = sext i16 %250 to i32
  %cmp470 = icmp ule i32 %conv469, 7
  br i1 %cmp470, label %if.then.472, label %if.else.477

if.then.472:                                      ; preds = %lor.lhs.false.463, %land.lhs.true.454, %land.lhs.true.439, %lor.lhs.false.427, %lor.lhs.false.421, %if.else.415
  %251 = load i32, i32* %mode.addr, align 4
  %252 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %253 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 1
  %rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**
  %254 = load i32, i32* %opnum.addr, align 4
  %255 = load i32, i32* %type.addr, align 4
  %256 = load i32, i32* %ind_levels.addr, align 4
  %257 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call476 = call i32 @find_reloads_address_1(i32 %251, %struct.rtx_def* %252, i32 1, %struct.rtx_def** %rtx475, i32 %254, i32 %255, i32 %256, %struct.rtx_def* %257)
  br label %if.end.588

if.else.477:                                      ; preds = %lor.lhs.false.463
  %258 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1
  %arrayidx479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld478, i32 0, i64 0
  %rtuint480 = bitcast %union.rtunion_def* %arrayidx479 to i32*
  %259 = load i32, i32* %rtuint480, align 4
  %cmp481 = icmp ult i32 %259, 7
  br i1 %cmp481, label %if.then.522, label %lor.lhs.false.483

lor.lhs.false.483:                                ; preds = %if.else.477
  %260 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i32 0, i64 0
  %rtuint486 = bitcast %union.rtunion_def* %arrayidx485 to i32*
  %261 = load i32, i32* %rtuint486, align 4
  %cmp487 = icmp uge i32 %261, 37
  br i1 %cmp487, label %land.lhs.true.489, label %lor.lhs.false.495

land.lhs.true.489:                                ; preds = %lor.lhs.false.483
  %262 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld490 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx491 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld490, i32 0, i64 0
  %rtuint492 = bitcast %union.rtunion_def* %arrayidx491 to i32*
  %263 = load i32, i32* %rtuint492, align 4
  %cmp493 = icmp ule i32 %263, 44
  br i1 %cmp493, label %if.then.522, label %lor.lhs.false.495

lor.lhs.false.495:                                ; preds = %land.lhs.true.489, %lor.lhs.false.483
  %264 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 0
  %rtuint498 = bitcast %union.rtunion_def* %arrayidx497 to i32*
  %265 = load i32, i32* %rtuint498, align 4
  %idxprom499 = zext i32 %265 to i64
  %266 = load i16*, i16** @reg_renumber, align 8
  %arrayidx500 = getelementptr inbounds i16, i16* %266, i64 %idxprom499
  %267 = load i16, i16* %arrayidx500, align 2
  %conv501 = sext i16 %267 to i32
  %cmp502 = icmp uge i32 %conv501, 37
  br i1 %cmp502, label %land.lhs.true.504, label %lor.lhs.false.513

land.lhs.true.504:                                ; preds = %lor.lhs.false.495
  %268 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld505 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld505, i32 0, i64 0
  %rtuint507 = bitcast %union.rtunion_def* %arrayidx506 to i32*
  %269 = load i32, i32* %rtuint507, align 4
  %idxprom508 = zext i32 %269 to i64
  %270 = load i16*, i16** @reg_renumber, align 8
  %arrayidx509 = getelementptr inbounds i16, i16* %270, i64 %idxprom508
  %271 = load i16, i16* %arrayidx509, align 2
  %conv510 = sext i16 %271 to i32
  %cmp511 = icmp ule i32 %conv510, 44
  br i1 %cmp511, label %if.then.522, label %lor.lhs.false.513

lor.lhs.false.513:                                ; preds = %land.lhs.true.504, %lor.lhs.false.495
  %272 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld514 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld514, i32 0, i64 0
  %rtuint516 = bitcast %union.rtunion_def* %arrayidx515 to i32*
  %273 = load i32, i32* %rtuint516, align 4
  %idxprom517 = zext i32 %273 to i64
  %274 = load i16*, i16** @reg_renumber, align 8
  %arrayidx518 = getelementptr inbounds i16, i16* %274, i64 %idxprom517
  %275 = load i16, i16* %arrayidx518, align 2
  %conv519 = sext i16 %275 to i32
  %cmp520 = icmp ult i32 %conv519, 7
  br i1 %cmp520, label %if.then.522, label %if.else.527

if.then.522:                                      ; preds = %lor.lhs.false.513, %land.lhs.true.504, %land.lhs.true.489, %if.else.477
  %276 = load i32, i32* %mode.addr, align 4
  %277 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld523, i32 0, i64 0
  %rtx525 = bitcast %union.rtunion_def* %arrayidx524 to %struct.rtx_def**
  %279 = load i32, i32* %opnum.addr, align 4
  %280 = load i32, i32* %type.addr, align 4
  %281 = load i32, i32* %ind_levels.addr, align 4
  %282 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call526 = call i32 @find_reloads_address_1(i32 %276, %struct.rtx_def* %277, i32 0, %struct.rtx_def** %rtx525, i32 %279, i32 %280, i32 %281, %struct.rtx_def* %282)
  br label %if.end.587

if.else.527:                                      ; preds = %lor.lhs.false.513
  %283 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1
  %arrayidx529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld528, i32 0, i64 0
  %rtuint530 = bitcast %union.rtunion_def* %arrayidx529 to i32*
  %284 = load i32, i32* %rtuint530, align 4
  %cmp531 = icmp ult i32 %284, 7
  br i1 %cmp531, label %if.then.572, label %lor.lhs.false.533

lor.lhs.false.533:                                ; preds = %if.else.527
  %285 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %285, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtuint536 = bitcast %union.rtunion_def* %arrayidx535 to i32*
  %286 = load i32, i32* %rtuint536, align 4
  %cmp537 = icmp uge i32 %286, 37
  br i1 %cmp537, label %land.lhs.true.539, label %lor.lhs.false.545

land.lhs.true.539:                                ; preds = %lor.lhs.false.533
  %287 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld540, i32 0, i64 0
  %rtuint542 = bitcast %union.rtunion_def* %arrayidx541 to i32*
  %288 = load i32, i32* %rtuint542, align 4
  %cmp543 = icmp ule i32 %288, 44
  br i1 %cmp543, label %if.then.572, label %lor.lhs.false.545

lor.lhs.false.545:                                ; preds = %land.lhs.true.539, %lor.lhs.false.533
  %289 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld546 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1
  %arrayidx547 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld546, i32 0, i64 0
  %rtuint548 = bitcast %union.rtunion_def* %arrayidx547 to i32*
  %290 = load i32, i32* %rtuint548, align 4
  %idxprom549 = zext i32 %290 to i64
  %291 = load i16*, i16** @reg_renumber, align 8
  %arrayidx550 = getelementptr inbounds i16, i16* %291, i64 %idxprom549
  %292 = load i16, i16* %arrayidx550, align 2
  %conv551 = sext i16 %292 to i32
  %cmp552 = icmp uge i32 %conv551, 37
  br i1 %cmp552, label %land.lhs.true.554, label %lor.lhs.false.563

land.lhs.true.554:                                ; preds = %lor.lhs.false.545
  %293 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx556 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld555, i32 0, i64 0
  %rtuint557 = bitcast %union.rtunion_def* %arrayidx556 to i32*
  %294 = load i32, i32* %rtuint557, align 4
  %idxprom558 = zext i32 %294 to i64
  %295 = load i16*, i16** @reg_renumber, align 8
  %arrayidx559 = getelementptr inbounds i16, i16* %295, i64 %idxprom558
  %296 = load i16, i16* %arrayidx559, align 2
  %conv560 = sext i16 %296 to i32
  %cmp561 = icmp ule i32 %conv560, 44
  br i1 %cmp561, label %if.then.572, label %lor.lhs.false.563

lor.lhs.false.563:                                ; preds = %land.lhs.true.554, %lor.lhs.false.545
  %297 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld564 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1
  %arrayidx565 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld564, i32 0, i64 0
  %rtuint566 = bitcast %union.rtunion_def* %arrayidx565 to i32*
  %298 = load i32, i32* %rtuint566, align 4
  %idxprom567 = zext i32 %298 to i64
  %299 = load i16*, i16** @reg_renumber, align 8
  %arrayidx568 = getelementptr inbounds i16, i16* %299, i64 %idxprom567
  %300 = load i16, i16* %arrayidx568, align 2
  %conv569 = sext i16 %300 to i32
  %cmp570 = icmp ult i32 %conv569, 7
  br i1 %cmp570, label %if.then.572, label %if.else.577

if.then.572:                                      ; preds = %lor.lhs.false.563, %land.lhs.true.554, %land.lhs.true.539, %if.else.527
  %301 = load i32, i32* %mode.addr, align 4
  %302 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %303 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1
  %arrayidx574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld573, i32 0, i64 1
  %rtx575 = bitcast %union.rtunion_def* %arrayidx574 to %struct.rtx_def**
  %304 = load i32, i32* %opnum.addr, align 4
  %305 = load i32, i32* %type.addr, align 4
  %306 = load i32, i32* %ind_levels.addr, align 4
  %307 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call576 = call i32 @find_reloads_address_1(i32 %301, %struct.rtx_def* %302, i32 0, %struct.rtx_def** %rtx575, i32 %304, i32 %305, i32 %306, %struct.rtx_def* %307)
  br label %if.end.586

if.else.577:                                      ; preds = %lor.lhs.false.563
  %308 = load i32, i32* %mode.addr, align 4
  %309 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %310 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld578 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx579 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld578, i32 0, i64 0
  %rtx580 = bitcast %union.rtunion_def* %arrayidx579 to %struct.rtx_def**
  %311 = load i32, i32* %opnum.addr, align 4
  %312 = load i32, i32* %type.addr, align 4
  %313 = load i32, i32* %ind_levels.addr, align 4
  %314 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call581 = call i32 @find_reloads_address_1(i32 %308, %struct.rtx_def* %309, i32 1, %struct.rtx_def** %rtx580, i32 %311, i32 %312, i32 %313, %struct.rtx_def* %314)
  %315 = load i32, i32* %mode.addr, align 4
  %316 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %317 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 1
  %rtx584 = bitcast %union.rtunion_def* %arrayidx583 to %struct.rtx_def**
  %318 = load i32, i32* %opnum.addr, align 4
  %319 = load i32, i32* %type.addr, align 4
  %320 = load i32, i32* %ind_levels.addr, align 4
  %321 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call585 = call i32 @find_reloads_address_1(i32 %315, %struct.rtx_def* %316, i32 0, %struct.rtx_def** %rtx584, i32 %318, i32 %319, i32 %320, %struct.rtx_def* %321)
  br label %if.end.586

if.end.586:                                       ; preds = %if.else.577, %if.then.572
  br label %if.end.587

if.end.587:                                       ; preds = %if.end.586, %if.then.522
  br label %if.end.588

if.end.588:                                       ; preds = %if.end.587, %if.then.472
  br label %if.end.589

if.end.589:                                       ; preds = %if.end.588, %if.then.410
  br label %if.end.590

if.end.590:                                       ; preds = %if.end.589
  br label %if.end.591

if.end.591:                                       ; preds = %if.end.590
  br label %if.end.618

if.else.592:                                      ; preds = %land.lhs.true.150, %if.else.148
  %322 = load i32, i32* %code0, align 4
  %cmp593 = icmp eq i32 %322, 61
  br i1 %cmp593, label %if.then.595, label %if.else.604

if.then.595:                                      ; preds = %if.else.592
  %323 = load i32, i32* %mode.addr, align 4
  %324 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %325 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld596 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1
  %arrayidx597 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld596, i32 0, i64 0
  %rtx598 = bitcast %union.rtunion_def* %arrayidx597 to %struct.rtx_def**
  %326 = load i32, i32* %opnum.addr, align 4
  %327 = load i32, i32* %type.addr, align 4
  %328 = load i32, i32* %ind_levels.addr, align 4
  %329 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call599 = call i32 @find_reloads_address_1(i32 %323, %struct.rtx_def* %324, i32 1, %struct.rtx_def** %rtx598, i32 %326, i32 %327, i32 %328, %struct.rtx_def* %329)
  %330 = load i32, i32* %mode.addr, align 4
  %331 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %332 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld600 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %332, i32 0, i32 1
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i32 0, i64 1
  %rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**
  %333 = load i32, i32* %opnum.addr, align 4
  %334 = load i32, i32* %type.addr, align 4
  %335 = load i32, i32* %ind_levels.addr, align 4
  %336 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call603 = call i32 @find_reloads_address_1(i32 %330, %struct.rtx_def* %331, i32 0, %struct.rtx_def** %rtx602, i32 %333, i32 %334, i32 %335, %struct.rtx_def* %336)
  br label %if.end.617

if.else.604:                                      ; preds = %if.else.592
  %337 = load i32, i32* %code1, align 4
  %cmp605 = icmp eq i32 %337, 61
  br i1 %cmp605, label %if.then.607, label %if.end.616

if.then.607:                                      ; preds = %if.else.604
  %338 = load i32, i32* %mode.addr, align 4
  %339 = load %struct.rtx_def*, %struct.rtx_def** %orig_op1, align 8
  %340 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1
  %arrayidx609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld608, i32 0, i64 1
  %rtx610 = bitcast %union.rtunion_def* %arrayidx609 to %struct.rtx_def**
  %341 = load i32, i32* %opnum.addr, align 4
  %342 = load i32, i32* %type.addr, align 4
  %343 = load i32, i32* %ind_levels.addr, align 4
  %344 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call611 = call i32 @find_reloads_address_1(i32 %338, %struct.rtx_def* %339, i32 1, %struct.rtx_def** %rtx610, i32 %341, i32 %342, i32 %343, %struct.rtx_def* %344)
  %345 = load i32, i32* %mode.addr, align 4
  %346 = load %struct.rtx_def*, %struct.rtx_def** %orig_op0, align 8
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 0
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %348 = load i32, i32* %opnum.addr, align 4
  %349 = load i32, i32* %type.addr, align 4
  %350 = load i32, i32* %ind_levels.addr, align 4
  %351 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call615 = call i32 @find_reloads_address_1(i32 %345, %struct.rtx_def* %346, i32 0, %struct.rtx_def** %rtx614, i32 %348, i32 %349, i32 %350, %struct.rtx_def* %351)
  br label %if.end.616

if.end.616:                                       ; preds = %if.then.607, %if.else.604
  br label %if.end.617

if.end.617:                                       ; preds = %if.end.616, %if.then.595
  br label %if.end.618

if.end.618:                                       ; preds = %if.end.617, %if.end.591
  br label %if.end.619

if.end.619:                                       ; preds = %if.end.618, %if.then.143
  br label %if.end.620

if.end.620:                                       ; preds = %if.end.619, %if.then.130
  br label %if.end.621

if.end.621:                                       ; preds = %if.end.620, %if.then.113
  br label %if.end.622

if.end.622:                                       ; preds = %if.end.621, %if.then.95
  store i32 0, i32* %retval
  br label %return

sw.bb.623:                                        ; preds = %entry, %entry
  %352 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1
  %arrayidx626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld625, i32 0, i64 0
  %rtx627 = bitcast %union.rtunion_def* %arrayidx626 to %struct.rtx_def**
  %353 = load %struct.rtx_def*, %struct.rtx_def** %rtx627, align 8
  store %struct.rtx_def* %353, %struct.rtx_def** %op0624, align 8
  %354 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1
  %arrayidx630 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld629, i32 0, i64 1
  %rtx631 = bitcast %union.rtunion_def* %arrayidx630 to %struct.rtx_def**
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rtx631, align 8
  store %struct.rtx_def* %355, %struct.rtx_def** %op1628, align 8
  %356 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %357 = bitcast %struct.rtx_def* %356 to i32*
  %bf.load632 = load i32, i32* %357, align 8
  %bf.clear633 = and i32 %bf.load632, 65535
  %cmp634 = icmp ne i32 %bf.clear633, 75
  br i1 %cmp634, label %land.lhs.true.636, label %if.end.642

land.lhs.true.636:                                ; preds = %sw.bb.623
  %358 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %359 = bitcast %struct.rtx_def* %358 to i32*
  %bf.load637 = load i32, i32* %359, align 8
  %bf.clear638 = and i32 %bf.load637, 65535
  %cmp639 = icmp ne i32 %bf.clear638, 76
  br i1 %cmp639, label %if.then.641, label %if.end.642

if.then.641:                                      ; preds = %land.lhs.true.636
  store i32 0, i32* %retval
  br label %return

if.end.642:                                       ; preds = %land.lhs.true.636, %sw.bb.623
  %360 = load %struct.rtx_def*, %struct.rtx_def** %op0624, align 8
  %361 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld643 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %361, i32 0, i32 1
  %arrayidx644 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld643, i32 0, i64 0
  %rtx645 = bitcast %union.rtunion_def* %arrayidx644 to %struct.rtx_def**
  %362 = load %struct.rtx_def*, %struct.rtx_def** %rtx645, align 8
  %cmp646 = icmp ne %struct.rtx_def* %360, %362
  br i1 %cmp646, label %if.then.648, label %if.end.649

if.then.648:                                      ; preds = %if.end.642
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5305, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.find_reloads_address_1, i32 0, i32 0)) #5
  unreachable

if.end.649:                                       ; preds = %if.end.642
  %363 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1
  %arrayidx651 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld650, i32 0, i64 1
  %rtx652 = bitcast %union.rtunion_def* %arrayidx651 to %struct.rtx_def**
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rtx652, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %bf.load653 = load i32, i32* %365, align 8
  %bf.clear654 = and i32 %bf.load653, 65535
  %cmp655 = icmp eq i32 %bf.clear654, 61
  br i1 %cmp655, label %if.then.657, label %if.end.729

if.then.657:                                      ; preds = %if.end.649
  %366 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1
  %arrayidx659 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld658, i32 0, i64 1
  %rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rtx660, align 8
  %fld661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %367, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld661, i32 0, i64 0
  %rtuint663 = bitcast %union.rtunion_def* %arrayidx662 to i32*
  %368 = load i32, i32* %rtuint663, align 4
  %cmp664 = icmp ult i32 %368, 7
  br i1 %cmp664, label %if.end.728, label %lor.lhs.false.666

lor.lhs.false.666:                                ; preds = %if.then.657
  %369 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %369, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 1
  %rtx669 = bitcast %union.rtunion_def* %arrayidx668 to %struct.rtx_def**
  %370 = load %struct.rtx_def*, %struct.rtx_def** %rtx669, align 8
  %fld670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1
  %arrayidx671 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld670, i32 0, i64 0
  %rtuint672 = bitcast %union.rtunion_def* %arrayidx671 to i32*
  %371 = load i32, i32* %rtuint672, align 4
  %cmp673 = icmp uge i32 %371, 37
  br i1 %cmp673, label %land.lhs.true.675, label %lor.lhs.false.684

land.lhs.true.675:                                ; preds = %lor.lhs.false.666
  %372 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %372, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 1
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %373 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %fld679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1
  %arrayidx680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld679, i32 0, i64 0
  %rtuint681 = bitcast %union.rtunion_def* %arrayidx680 to i32*
  %374 = load i32, i32* %rtuint681, align 4
  %cmp682 = icmp ule i32 %374, 44
  br i1 %cmp682, label %if.end.728, label %lor.lhs.false.684

lor.lhs.false.684:                                ; preds = %land.lhs.true.675, %lor.lhs.false.666
  %375 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld685 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %375, i32 0, i32 1
  %arrayidx686 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld685, i32 0, i64 1
  %rtx687 = bitcast %union.rtunion_def* %arrayidx686 to %struct.rtx_def**
  %376 = load %struct.rtx_def*, %struct.rtx_def** %rtx687, align 8
  %fld688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1
  %arrayidx689 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i32 0, i64 0
  %rtuint690 = bitcast %union.rtunion_def* %arrayidx689 to i32*
  %377 = load i32, i32* %rtuint690, align 4
  %idxprom691 = zext i32 %377 to i64
  %378 = load i16*, i16** @reg_renumber, align 8
  %arrayidx692 = getelementptr inbounds i16, i16* %378, i64 %idxprom691
  %379 = load i16, i16* %arrayidx692, align 2
  %conv693 = sext i16 %379 to i32
  %cmp694 = icmp uge i32 %conv693, 37
  br i1 %cmp694, label %land.lhs.true.696, label %lor.lhs.false.708

land.lhs.true.696:                                ; preds = %lor.lhs.false.684
  %380 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i32 0, i64 1
  %rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rtx699, align 8
  %fld700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %381, i32 0, i32 1
  %arrayidx701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld700, i32 0, i64 0
  %rtuint702 = bitcast %union.rtunion_def* %arrayidx701 to i32*
  %382 = load i32, i32* %rtuint702, align 4
  %idxprom703 = zext i32 %382 to i64
  %383 = load i16*, i16** @reg_renumber, align 8
  %arrayidx704 = getelementptr inbounds i16, i16* %383, i64 %idxprom703
  %384 = load i16, i16* %arrayidx704, align 2
  %conv705 = sext i16 %384 to i32
  %cmp706 = icmp ule i32 %conv705, 44
  br i1 %cmp706, label %if.end.728, label %lor.lhs.false.708

lor.lhs.false.708:                                ; preds = %land.lhs.true.696, %lor.lhs.false.684
  %385 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld709 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i32 0, i64 1
  %rtx711 = bitcast %union.rtunion_def* %arrayidx710 to %struct.rtx_def**
  %386 = load %struct.rtx_def*, %struct.rtx_def** %rtx711, align 8
  %fld712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i32 0, i64 0
  %rtuint714 = bitcast %union.rtunion_def* %arrayidx713 to i32*
  %387 = load i32, i32* %rtuint714, align 4
  %idxprom715 = zext i32 %387 to i64
  %388 = load i16*, i16** @reg_renumber, align 8
  %arrayidx716 = getelementptr inbounds i16, i16* %388, i64 %idxprom715
  %389 = load i16, i16* %arrayidx716, align 2
  %conv717 = sext i16 %389 to i32
  %cmp718 = icmp ult i32 %conv717, 7
  br i1 %cmp718, label %if.end.728, label %if.then.720

if.then.720:                                      ; preds = %lor.lhs.false.708
  %390 = load i32, i32* %mode.addr, align 4
  %391 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %391, i32 0, i32 1
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i32 0, i64 1
  %rtx723 = bitcast %union.rtunion_def* %arrayidx722 to %struct.rtx_def**
  %392 = load %struct.rtx_def*, %struct.rtx_def** %rtx723, align 8
  %393 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %393, i32 0, i32 1
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i32 0, i64 1
  %rtx726 = bitcast %union.rtunion_def* %arrayidx725 to %struct.rtx_def**
  %394 = load i32, i32* %opnum.addr, align 4
  %395 = load i32, i32* %type.addr, align 4
  %396 = load i32, i32* %ind_levels.addr, align 4
  %397 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call727 = call i32 @find_reloads_address_1(i32 %390, %struct.rtx_def* %392, i32 1, %struct.rtx_def** %rtx726, i32 %394, i32 %395, i32 %396, %struct.rtx_def* %397)
  br label %if.end.728

if.end.728:                                       ; preds = %if.then.720, %lor.lhs.false.708, %land.lhs.true.696, %land.lhs.true.675, %if.then.657
  br label %if.end.729

if.end.729:                                       ; preds = %if.end.728, %if.end.649
  %398 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %398, i32 0, i32 1
  %arrayidx731 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld730, i32 0, i64 0
  %rtx732 = bitcast %union.rtunion_def* %arrayidx731 to %struct.rtx_def**
  %399 = load %struct.rtx_def*, %struct.rtx_def** %rtx732, align 8
  %400 = bitcast %struct.rtx_def* %399 to i32*
  %bf.load733 = load i32, i32* %400, align 8
  %bf.clear734 = and i32 %bf.load733, 65535
  %cmp735 = icmp eq i32 %bf.clear734, 61
  br i1 %cmp735, label %if.then.737, label %if.else.865

if.then.737:                                      ; preds = %if.end.729
  %401 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld738 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1
  %arrayidx739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld738, i32 0, i64 0
  %rtx740 = bitcast %union.rtunion_def* %arrayidx739 to %struct.rtx_def**
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rtx740, align 8
  %fld741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %402, i32 0, i32 1
  %arrayidx742 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld741, i32 0, i64 0
  %rtuint743 = bitcast %union.rtunion_def* %arrayidx742 to i32*
  %403 = load i32, i32* %rtuint743, align 4
  store i32 %403, i32* %regno, align 4
  %404 = load i32, i32* %regno, align 4
  %cmp744 = icmp sge i32 %404, 53
  br i1 %cmp744, label %land.lhs.true.746, label %if.end.752

land.lhs.true.746:                                ; preds = %if.then.737
  %405 = load i32, i32* %regno, align 4
  %idxprom747 = sext i32 %405 to i64
  %406 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx748 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %406, i64 %idxprom747
  %407 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx748, align 8
  %cmp749 = icmp ne %struct.rtx_def* %407, null
  br i1 %cmp749, label %if.then.751, label %if.end.752

if.then.751:                                      ; preds = %land.lhs.true.746
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5324, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.find_reloads_address_1, i32 0, i32 0)) #5
  unreachable

if.end.752:                                       ; preds = %land.lhs.true.746, %if.then.737
  %408 = load i32, i32* %regno, align 4
  %idxprom753 = sext i32 %408 to i64
  %409 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx754 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %409, i64 %idxprom753
  %410 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx754, align 8
  %cmp755 = icmp ne %struct.rtx_def* %410, null
  br i1 %cmp755, label %land.lhs.true.757, label %if.end.801

land.lhs.true.757:                                ; preds = %if.end.752
  %411 = load i32, i32* %regno, align 4
  %idxprom758 = sext i32 %411 to i64
  %412 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx759 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %412, i64 %idxprom758
  %413 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx759, align 8
  %cmp760 = icmp ne %struct.rtx_def* %413, null
  br i1 %cmp760, label %if.then.763, label %lor.lhs.false.762

lor.lhs.false.762:                                ; preds = %land.lhs.true.757
  %414 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool = icmp ne i32 %414, 0
  br i1 %tobool, label %if.then.763, label %if.end.801

if.then.763:                                      ; preds = %lor.lhs.false.762, %land.lhs.true.757
  %415 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld764 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %415, i32 0, i32 1
  %arrayidx765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld764, i32 0, i64 0
  %rtx766 = bitcast %union.rtunion_def* %arrayidx765 to %struct.rtx_def**
  %416 = load %struct.rtx_def*, %struct.rtx_def** %rtx766, align 8
  %417 = load i32, i32* %regno, align 4
  %call767 = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %416, i32 %417)
  store %struct.rtx_def* %call767, %struct.rtx_def** %tem, align 8
  %418 = load i32, i32* %regno, align 4
  %idxprom768 = sext i32 %418 to i64
  %419 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx769 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %419, i64 %idxprom768
  %420 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx769, align 8
  %tobool770 = icmp ne %struct.rtx_def* %420, null
  br i1 %tobool770, label %if.then.776, label %lor.lhs.false.771

lor.lhs.false.771:                                ; preds = %if.then.763
  %421 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %422 = load i32, i32* %regno, align 4
  %idxprom772 = sext i32 %422 to i64
  %423 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx773 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %423, i64 %idxprom772
  %424 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx773, align 8
  %call774 = call i32 @rtx_equal_p(%struct.rtx_def* %421, %struct.rtx_def* %424)
  %tobool775 = icmp ne i32 %call774, 0
  br i1 %tobool775, label %if.end.800, label %if.then.776

if.then.776:                                      ; preds = %lor.lhs.false.771, %if.then.763
  %425 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %426 = bitcast %struct.rtx_def* %425 to i32*
  %bf.load777 = load i32, i32* %426, align 8
  %bf.lshr778 = lshr i32 %bf.load777, 16
  %bf.clear779 = and i32 %bf.lshr778, 255
  %427 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld780 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %arrayidx781 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld780, i32 0, i64 0
  %rtx782 = bitcast %union.rtunion_def* %arrayidx781 to %struct.rtx_def**
  %428 = load %struct.rtx_def*, %struct.rtx_def** %rtx782, align 8
  %429 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld783 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %429, i32 0, i32 1
  %arrayidx784 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld783, i32 0, i64 0
  %rtx785 = bitcast %union.rtunion_def* %arrayidx784 to %struct.rtx_def**
  %430 = load i32, i32* %opnum.addr, align 4
  %431 = load i32, i32* %ind_levels.addr, align 4
  %432 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call786 = call i32 @find_reloads_address(i32 %bf.clear779, %struct.rtx_def** null, %struct.rtx_def* %428, %struct.rtx_def** %rtx785, i32 %430, i32 9, i32 %431, %struct.rtx_def* %432)
  %433 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %434 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %435 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %435, i32 0, i32 1
  %arrayidx788 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld787, i32 0, i64 0
  %rtx789 = bitcast %union.rtunion_def* %arrayidx788 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %436, i32 0, i32 1
  %arrayidx791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld790, i32 0, i64 0
  %rtx792 = bitcast %union.rtunion_def* %arrayidx791 to %struct.rtx_def**
  %437 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %438 = bitcast %struct.rtx_def* %437 to i32*
  %bf.load793 = load i32, i32* %438, align 8
  %bf.lshr794 = lshr i32 %bf.load793, 16
  %bf.clear795 = and i32 %bf.lshr794, 255
  %439 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %440 = bitcast %struct.rtx_def* %439 to i32*
  %bf.load796 = load i32, i32* %440, align 8
  %bf.lshr797 = lshr i32 %bf.load796, 16
  %bf.clear798 = and i32 %bf.lshr797, 255
  %441 = load i32, i32* %opnum.addr, align 4
  %call799 = call i32 @push_reload(%struct.rtx_def* %433, %struct.rtx_def* %434, %struct.rtx_def** %rtx789, %struct.rtx_def** %rtx792, i32 12, i32 %bf.clear795, i32 %bf.clear798, i32 0, i32 0, i32 %441, i32 9)
  store i32 %call799, i32* %reloadnum, align 4
  %442 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %443 = load i32, i32* %regno, align 4
  %444 = load i32, i32* %reloadnum, align 4
  call void @update_auto_inc_notes(%struct.rtx_def* %442, i32 %443, i32 %444)
  store i32 0, i32* %retval
  br label %return

if.end.800:                                       ; preds = %lor.lhs.false.771
  br label %if.end.801

if.end.801:                                       ; preds = %if.end.800, %lor.lhs.false.762, %if.end.752
  %445 = load i32, i32* %regno, align 4
  %idxprom802 = sext i32 %445 to i64
  %446 = load i16*, i16** @reg_renumber, align 8
  %arrayidx803 = getelementptr inbounds i16, i16* %446, i64 %idxprom802
  %447 = load i16, i16* %arrayidx803, align 2
  %conv804 = sext i16 %447 to i32
  %cmp805 = icmp sge i32 %conv804, 0
  br i1 %cmp805, label %if.then.807, label %if.end.811

if.then.807:                                      ; preds = %if.end.801
  %448 = load i32, i32* %regno, align 4
  %idxprom808 = sext i32 %448 to i64
  %449 = load i16*, i16** @reg_renumber, align 8
  %arrayidx809 = getelementptr inbounds i16, i16* %449, i64 %idxprom808
  %450 = load i16, i16* %arrayidx809, align 2
  %conv810 = sext i16 %450 to i32
  store i32 %conv810, i32* %regno, align 4
  br label %if.end.811

if.end.811:                                       ; preds = %if.then.807, %if.end.801
  %451 = load i32, i32* %regno, align 4
  %cmp812 = icmp sle i32 %451, 7
  br i1 %cmp812, label %if.end.864, label %lor.lhs.false.814

lor.lhs.false.814:                                ; preds = %if.end.811
  %452 = load i32, i32* %regno, align 4
  %cmp815 = icmp eq i32 %452, 16
  br i1 %cmp815, label %if.end.864, label %lor.lhs.false.817

lor.lhs.false.817:                                ; preds = %lor.lhs.false.814
  %453 = load i32, i32* %regno, align 4
  %cmp818 = icmp eq i32 %453, 20
  br i1 %cmp818, label %if.end.864, label %lor.lhs.false.820

lor.lhs.false.820:                                ; preds = %lor.lhs.false.817
  %454 = load i32, i32* %regno, align 4
  %cmp821 = icmp sge i32 %454, 37
  br i1 %cmp821, label %land.lhs.true.823, label %lor.lhs.false.826

land.lhs.true.823:                                ; preds = %lor.lhs.false.820
  %455 = load i32, i32* %regno, align 4
  %cmp824 = icmp sle i32 %455, 44
  br i1 %cmp824, label %if.end.864, label %lor.lhs.false.826

lor.lhs.false.826:                                ; preds = %land.lhs.true.823, %lor.lhs.false.820
  %456 = load i32, i32* %regno, align 4
  %idxprom827 = sext i32 %456 to i64
  %457 = load i16*, i16** @reg_renumber, align 8
  %arrayidx828 = getelementptr inbounds i16, i16* %457, i64 %idxprom827
  %458 = load i16, i16* %arrayidx828, align 2
  %conv829 = sext i16 %458 to i32
  %cmp830 = icmp uge i32 %conv829, 37
  br i1 %cmp830, label %land.lhs.true.832, label %lor.lhs.false.838

land.lhs.true.832:                                ; preds = %lor.lhs.false.826
  %459 = load i32, i32* %regno, align 4
  %idxprom833 = sext i32 %459 to i64
  %460 = load i16*, i16** @reg_renumber, align 8
  %arrayidx834 = getelementptr inbounds i16, i16* %460, i64 %idxprom833
  %461 = load i16, i16* %arrayidx834, align 2
  %conv835 = sext i16 %461 to i32
  %cmp836 = icmp ule i32 %conv835, 44
  br i1 %cmp836, label %if.end.864, label %lor.lhs.false.838

lor.lhs.false.838:                                ; preds = %land.lhs.true.832, %lor.lhs.false.826
  %462 = load i32, i32* %regno, align 4
  %idxprom839 = sext i32 %462 to i64
  %463 = load i16*, i16** @reg_renumber, align 8
  %arrayidx840 = getelementptr inbounds i16, i16* %463, i64 %idxprom839
  %464 = load i16, i16* %arrayidx840, align 2
  %conv841 = sext i16 %464 to i32
  %cmp842 = icmp ule i32 %conv841, 7
  br i1 %cmp842, label %if.end.864, label %if.then.844

if.then.844:                                      ; preds = %lor.lhs.false.838
  %465 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %465, i32 0, i32 1
  %arrayidx846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld845, i32 0, i64 0
  %rtx847 = bitcast %union.rtunion_def* %arrayidx846 to %struct.rtx_def**
  %466 = load %struct.rtx_def*, %struct.rtx_def** %rtx847, align 8
  %467 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1
  %arrayidx849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld848, i32 0, i64 0
  %rtx850 = bitcast %union.rtunion_def* %arrayidx849 to %struct.rtx_def**
  %468 = load %struct.rtx_def*, %struct.rtx_def** %rtx850, align 8
  %469 = load %struct.rtx_def*, %struct.rtx_def** %op1628, align 8
  %fld851 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %469, i32 0, i32 1
  %arrayidx852 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld851, i32 0, i64 0
  %rtx853 = bitcast %union.rtunion_def* %arrayidx852 to %struct.rtx_def**
  %470 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld854 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %470, i32 0, i32 1
  %arrayidx855 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld854, i32 0, i64 0
  %rtx856 = bitcast %union.rtunion_def* %arrayidx855 to %struct.rtx_def**
  %471 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %472 = bitcast %struct.rtx_def* %471 to i32*
  %bf.load857 = load i32, i32* %472, align 8
  %bf.lshr858 = lshr i32 %bf.load857, 16
  %bf.clear859 = and i32 %bf.lshr858, 255
  %473 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %474 = bitcast %struct.rtx_def* %473 to i32*
  %bf.load860 = load i32, i32* %474, align 8
  %bf.lshr861 = lshr i32 %bf.load860, 16
  %bf.clear862 = and i32 %bf.lshr861, 255
  %475 = load i32, i32* %opnum.addr, align 4
  %call863 = call i32 @push_reload(%struct.rtx_def* %466, %struct.rtx_def* %468, %struct.rtx_def** %rtx853, %struct.rtx_def** %rtx856, i32 12, i32 %bf.clear859, i32 %bf.clear862, i32 0, i32 0, i32 %475, i32 9)
  store i32 %call863, i32* %reloadnum, align 4
  %476 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %477 = load i32, i32* %regno, align 4
  %478 = load i32, i32* %reloadnum, align 4
  call void @update_auto_inc_notes(%struct.rtx_def* %476, i32 %477, i32 %478)
  store i32 0, i32* %retval
  br label %return

if.end.864:                                       ; preds = %lor.lhs.false.838, %land.lhs.true.832, %land.lhs.true.823, %lor.lhs.false.817, %lor.lhs.false.814, %if.end.811
  br label %if.end.866

if.else.865:                                      ; preds = %if.end.729
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5376, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.find_reloads_address_1, i32 0, i32 0)) #5
  unreachable

if.end.866:                                       ; preds = %if.end.864
  store i32 0, i32* %retval
  br label %return

sw.bb.867:                                        ; preds = %entry, %entry, %entry, %entry
  %479 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld868 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %479, i32 0, i32 1
  %arrayidx869 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld868, i32 0, i64 0
  %rtx870 = bitcast %union.rtunion_def* %arrayidx869 to %struct.rtx_def**
  %480 = load %struct.rtx_def*, %struct.rtx_def** %rtx870, align 8
  %481 = bitcast %struct.rtx_def* %480 to i32*
  %bf.load871 = load i32, i32* %481, align 8
  %bf.clear872 = and i32 %bf.load871, 65535
  %cmp873 = icmp eq i32 %bf.clear872, 61
  br i1 %cmp873, label %if.then.875, label %if.else.1108

if.then.875:                                      ; preds = %sw.bb.867
  %482 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld877 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1
  %arrayidx878 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld877, i32 0, i64 0
  %rtx879 = bitcast %union.rtunion_def* %arrayidx878 to %struct.rtx_def**
  %483 = load %struct.rtx_def*, %struct.rtx_def** %rtx879, align 8
  %fld880 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %483, i32 0, i32 1
  %arrayidx881 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld880, i32 0, i64 0
  %rtuint882 = bitcast %union.rtunion_def* %arrayidx881 to i32*
  %484 = load i32, i32* %rtuint882, align 4
  store i32 %484, i32* %regno876, align 4
  store i32 0, i32* %value, align 4
  %485 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %485, %struct.rtx_def** %x_orig, align 8
  %486 = load i32, i32* %regno876, align 4
  %cmp883 = icmp sge i32 %486, 53
  br i1 %cmp883, label %land.lhs.true.885, label %if.end.891

land.lhs.true.885:                                ; preds = %if.then.875
  %487 = load i32, i32* %regno876, align 4
  %idxprom886 = sext i32 %487 to i64
  %488 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx887 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %488, i64 %idxprom886
  %489 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx887, align 8
  %cmp888 = icmp ne %struct.rtx_def* %489, null
  br i1 %cmp888, label %if.then.890, label %if.end.891

if.then.890:                                      ; preds = %land.lhs.true.885
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 5393, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.find_reloads_address_1, i32 0, i32 0)) #5
  unreachable

if.end.891:                                       ; preds = %land.lhs.true.885, %if.then.875
  %490 = load i32, i32* %regno876, align 4
  %idxprom892 = sext i32 %490 to i64
  %491 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx893 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %491, i64 %idxprom892
  %492 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx893, align 8
  %cmp894 = icmp ne %struct.rtx_def* %492, null
  br i1 %cmp894, label %land.lhs.true.896, label %if.end.935

land.lhs.true.896:                                ; preds = %if.end.891
  %493 = load i32, i32* %regno876, align 4
  %idxprom897 = sext i32 %493 to i64
  %494 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx898 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %494, i64 %idxprom897
  %495 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx898, align 8
  %cmp899 = icmp ne %struct.rtx_def* %495, null
  br i1 %cmp899, label %if.then.903, label %lor.lhs.false.901

lor.lhs.false.901:                                ; preds = %land.lhs.true.896
  %496 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool902 = icmp ne i32 %496, 0
  br i1 %tobool902, label %if.then.903, label %if.end.935

if.then.903:                                      ; preds = %lor.lhs.false.901, %land.lhs.true.896
  %497 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %497, i32 0, i32 1
  %arrayidx906 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld905, i32 0, i64 0
  %rtx907 = bitcast %union.rtunion_def* %arrayidx906 to %struct.rtx_def**
  %498 = load %struct.rtx_def*, %struct.rtx_def** %rtx907, align 8
  %499 = load i32, i32* %regno876, align 4
  %call908 = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %498, i32 %499)
  store %struct.rtx_def* %call908, %struct.rtx_def** %tem904, align 8
  %500 = load i32, i32* %regno876, align 4
  %idxprom909 = sext i32 %500 to i64
  %501 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx910 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %501, i64 %idxprom909
  %502 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx910, align 8
  %tobool911 = icmp ne %struct.rtx_def* %502, null
  br i1 %tobool911, label %if.then.917, label %lor.lhs.false.912

lor.lhs.false.912:                                ; preds = %if.then.903
  %503 = load %struct.rtx_def*, %struct.rtx_def** %tem904, align 8
  %504 = load i32, i32* %regno876, align 4
  %idxprom913 = sext i32 %504 to i64
  %505 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx914 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %505, i64 %idxprom913
  %506 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx914, align 8
  %call915 = call i32 @rtx_equal_p(%struct.rtx_def* %503, %struct.rtx_def* %506)
  %tobool916 = icmp ne i32 %call915, 0
  br i1 %tobool916, label %if.end.934, label %if.then.917

if.then.917:                                      ; preds = %lor.lhs.false.912, %if.then.903
  %507 = load %struct.rtx_def*, %struct.rtx_def** %tem904, align 8
  %508 = bitcast %struct.rtx_def* %507 to i32*
  %bf.load918 = load i32, i32* %508, align 8
  %bf.lshr919 = lshr i32 %bf.load918, 16
  %bf.clear920 = and i32 %bf.lshr919, 255
  %509 = load %struct.rtx_def*, %struct.rtx_def** %tem904, align 8
  %fld921 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %509, i32 0, i32 1
  %arrayidx922 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld921, i32 0, i64 0
  %rtx923 = bitcast %union.rtunion_def* %arrayidx922 to %struct.rtx_def**
  %510 = load %struct.rtx_def*, %struct.rtx_def** %rtx923, align 8
  %511 = load %struct.rtx_def*, %struct.rtx_def** %tem904, align 8
  %fld924 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1
  %arrayidx925 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld924, i32 0, i64 0
  %rtx926 = bitcast %union.rtunion_def* %arrayidx925 to %struct.rtx_def**
  %512 = load i32, i32* %opnum.addr, align 4
  %513 = load i32, i32* %type.addr, align 4
  %514 = load i32, i32* %ind_levels.addr, align 4
  %515 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call927 = call i32 @find_reloads_address(i32 %bf.clear920, %struct.rtx_def** %tem904, %struct.rtx_def* %510, %struct.rtx_def** %rtx926, i32 %512, i32 %513, i32 %514, %struct.rtx_def* %515)
  %516 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %517 = bitcast %struct.rtx_def* %516 to i32*
  %bf.load928 = load i32, i32* %517, align 8
  %bf.clear929 = and i32 %bf.load928, 65535
  %518 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %519 = bitcast %struct.rtx_def* %518 to i32*
  %bf.load930 = load i32, i32* %519, align 8
  %bf.lshr931 = lshr i32 %bf.load930, 16
  %bf.clear932 = and i32 %bf.lshr931, 255
  %520 = load %struct.rtx_def*, %struct.rtx_def** %tem904, align 8
  %call933 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %bf.clear929, i32 %bf.clear932, %struct.rtx_def* %520)
  store %struct.rtx_def* %call933, %struct.rtx_def** %x.addr, align 8
  br label %if.end.934

if.end.934:                                       ; preds = %if.then.917, %lor.lhs.false.912
  br label %if.end.935

if.end.935:                                       ; preds = %if.end.934, %lor.lhs.false.901, %if.end.891
  %521 = load i32, i32* %regno876, align 4
  %idxprom936 = sext i32 %521 to i64
  %522 = load i16*, i16** @reg_renumber, align 8
  %arrayidx937 = getelementptr inbounds i16, i16* %522, i64 %idxprom936
  %523 = load i16, i16* %arrayidx937, align 2
  %conv938 = sext i16 %523 to i32
  %cmp939 = icmp sge i32 %conv938, 0
  br i1 %cmp939, label %if.then.941, label %if.end.945

if.then.941:                                      ; preds = %if.end.935
  %524 = load i32, i32* %regno876, align 4
  %idxprom942 = sext i32 %524 to i64
  %525 = load i16*, i16** @reg_renumber, align 8
  %arrayidx943 = getelementptr inbounds i16, i16* %525, i64 %idxprom942
  %526 = load i16, i16* %arrayidx943, align 2
  %conv944 = sext i16 %526 to i32
  store i32 %conv944, i32* %regno876, align 4
  br label %if.end.945

if.end.945:                                       ; preds = %if.then.941, %if.end.935
  %527 = load i32, i32* %regno876, align 4
  %cmp946 = icmp sge i32 %527, 53
  br i1 %cmp946, label %if.then.1008, label %lor.lhs.false.948

lor.lhs.false.948:                                ; preds = %if.end.945
  %528 = load i32, i32* %context.addr, align 4
  %tobool949 = icmp ne i32 %528, 0
  br i1 %tobool949, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.948
  %529 = load i32, i32* %regno876, align 4
  %cmp950 = icmp slt i32 %529, 7
  br i1 %cmp950, label %if.end.1107, label %lor.lhs.false.952

lor.lhs.false.952:                                ; preds = %cond.true
  %530 = load i32, i32* %regno876, align 4
  %cmp953 = icmp sge i32 %530, 37
  br i1 %cmp953, label %land.lhs.true.955, label %lor.lhs.false.958

land.lhs.true.955:                                ; preds = %lor.lhs.false.952
  %531 = load i32, i32* %regno876, align 4
  %cmp956 = icmp sle i32 %531, 44
  br i1 %cmp956, label %if.end.1107, label %lor.lhs.false.958

lor.lhs.false.958:                                ; preds = %land.lhs.true.955, %lor.lhs.false.952
  %532 = load i32, i32* %regno876, align 4
  %idxprom959 = sext i32 %532 to i64
  %533 = load i16*, i16** @reg_renumber, align 8
  %arrayidx960 = getelementptr inbounds i16, i16* %533, i64 %idxprom959
  %534 = load i16, i16* %arrayidx960, align 2
  %conv961 = sext i16 %534 to i32
  %cmp962 = icmp uge i32 %conv961, 37
  br i1 %cmp962, label %land.lhs.true.964, label %lor.lhs.false.970

land.lhs.true.964:                                ; preds = %lor.lhs.false.958
  %535 = load i32, i32* %regno876, align 4
  %idxprom965 = sext i32 %535 to i64
  %536 = load i16*, i16** @reg_renumber, align 8
  %arrayidx966 = getelementptr inbounds i16, i16* %536, i64 %idxprom965
  %537 = load i16, i16* %arrayidx966, align 2
  %conv967 = sext i16 %537 to i32
  %cmp968 = icmp ule i32 %conv967, 44
  br i1 %cmp968, label %if.end.1107, label %lor.lhs.false.970

lor.lhs.false.970:                                ; preds = %land.lhs.true.964, %lor.lhs.false.958
  %538 = load i32, i32* %regno876, align 4
  %idxprom971 = sext i32 %538 to i64
  %539 = load i16*, i16** @reg_renumber, align 8
  %arrayidx972 = getelementptr inbounds i16, i16* %539, i64 %idxprom971
  %540 = load i16, i16* %arrayidx972, align 2
  %conv973 = sext i16 %540 to i32
  %cmp974 = icmp ult i32 %conv973, 7
  br i1 %cmp974, label %if.end.1107, label %if.then.1008

cond.false:                                       ; preds = %lor.lhs.false.948
  %541 = load i32, i32* %regno876, align 4
  %cmp976 = icmp sle i32 %541, 7
  br i1 %cmp976, label %if.end.1107, label %lor.lhs.false.978

lor.lhs.false.978:                                ; preds = %cond.false
  %542 = load i32, i32* %regno876, align 4
  %cmp979 = icmp eq i32 %542, 16
  br i1 %cmp979, label %if.end.1107, label %lor.lhs.false.981

lor.lhs.false.981:                                ; preds = %lor.lhs.false.978
  %543 = load i32, i32* %regno876, align 4
  %cmp982 = icmp eq i32 %543, 20
  br i1 %cmp982, label %if.end.1107, label %lor.lhs.false.984

lor.lhs.false.984:                                ; preds = %lor.lhs.false.981
  %544 = load i32, i32* %regno876, align 4
  %cmp985 = icmp sge i32 %544, 37
  br i1 %cmp985, label %land.lhs.true.987, label %lor.lhs.false.990

land.lhs.true.987:                                ; preds = %lor.lhs.false.984
  %545 = load i32, i32* %regno876, align 4
  %cmp988 = icmp sle i32 %545, 44
  br i1 %cmp988, label %if.end.1107, label %lor.lhs.false.990

lor.lhs.false.990:                                ; preds = %land.lhs.true.987, %lor.lhs.false.984
  %546 = load i32, i32* %regno876, align 4
  %idxprom991 = sext i32 %546 to i64
  %547 = load i16*, i16** @reg_renumber, align 8
  %arrayidx992 = getelementptr inbounds i16, i16* %547, i64 %idxprom991
  %548 = load i16, i16* %arrayidx992, align 2
  %conv993 = sext i16 %548 to i32
  %cmp994 = icmp uge i32 %conv993, 37
  br i1 %cmp994, label %land.lhs.true.996, label %lor.lhs.false.1002

land.lhs.true.996:                                ; preds = %lor.lhs.false.990
  %549 = load i32, i32* %regno876, align 4
  %idxprom997 = sext i32 %549 to i64
  %550 = load i16*, i16** @reg_renumber, align 8
  %arrayidx998 = getelementptr inbounds i16, i16* %550, i64 %idxprom997
  %551 = load i16, i16* %arrayidx998, align 2
  %conv999 = sext i16 %551 to i32
  %cmp1000 = icmp ule i32 %conv999, 44
  br i1 %cmp1000, label %if.end.1107, label %lor.lhs.false.1002

lor.lhs.false.1002:                               ; preds = %land.lhs.true.996, %lor.lhs.false.990
  %552 = load i32, i32* %regno876, align 4
  %idxprom1003 = sext i32 %552 to i64
  %553 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1004 = getelementptr inbounds i16, i16* %553, i64 %idxprom1003
  %554 = load i16, i16* %arrayidx1004, align 2
  %conv1005 = sext i16 %554 to i32
  %cmp1006 = icmp ule i32 %conv1005, 7
  br i1 %cmp1006, label %if.end.1107, label %if.then.1008

if.then.1008:                                     ; preds = %lor.lhs.false.1002, %lor.lhs.false.970, %if.end.945
  %555 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %555, i32 0, i32 1
  %arrayidx1011 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1010, i32 0, i64 0
  %rtx1012 = bitcast %union.rtunion_def* %arrayidx1011 to %struct.rtx_def**
  %556 = load %struct.rtx_def*, %struct.rtx_def** %rtx1012, align 8
  %557 = bitcast %struct.rtx_def* %556 to i32*
  %bf.load1013 = load i32, i32* %557, align 8
  %bf.clear1014 = and i32 %bf.load1013, 65535
  %cmp1015 = icmp eq i32 %bf.clear1014, 66
  br i1 %cmp1015, label %cond.true.1017, label %cond.false.1021

cond.true.1017:                                   ; preds = %if.then.1008
  %558 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %558, i32 0, i32 1
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i32 0, i64 0
  %rtx1020 = bitcast %union.rtunion_def* %arrayidx1019 to %struct.rtx_def**
  %559 = load %struct.rtx_def*, %struct.rtx_def** %rtx1020, align 8
  br label %cond.end

cond.false.1021:                                  ; preds = %if.then.1008
  %560 = load i32, i32* %regno876, align 4
  %idxprom1022 = sext i32 %560 to i64
  %561 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1023 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %561, i64 %idxprom1022
  %562 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1023, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false.1021, %cond.true.1017
  %cond = phi %struct.rtx_def* [ %559, %cond.true.1017 ], [ %562, %cond.false.1021 ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %equiv, align 8
  %563 = load i32, i32* @target_flags, align 4
  %and = and i32 %563, 33554432
  %tobool1024 = icmp ne i32 %and, 0
  %cond1025 = select i1 %tobool1024, i32 5, i32 4
  %idxprom1026 = sext i32 %cond1025 to i64
  %564 = load %struct.optab*, %struct.optab** getelementptr inbounds ([49 x %struct.optab*], [49 x %struct.optab*]* @optab_table, i32 0, i64 0), align 8
  %handlers = getelementptr inbounds %struct.optab, %struct.optab* %564, i32 0, i32 1
  %arrayidx1027 = getelementptr inbounds [59 x %struct.anon], [59 x %struct.anon]* %handlers, i32 0, i64 %idxprom1026
  %insn_code = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1027, i32 0, i32 0
  %565 = load i32, i32* %insn_code, align 4
  store i32 %565, i32* %icode, align 4
  %566 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %tobool1028 = icmp ne %struct.rtx_def* %566, null
  br i1 %tobool1028, label %land.lhs.true.1029, label %if.else.1081

land.lhs.true.1029:                               ; preds = %cond.end
  %567 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %568 = bitcast %struct.rtx_def* %567 to i32*
  %bf.load1030 = load i32, i32* %568, align 8
  %bf.clear1031 = and i32 %bf.load1030, 65535
  %cmp1032 = icmp eq i32 %bf.clear1031, 32
  br i1 %cmp1032, label %land.lhs.true.1034, label %if.else.1081

land.lhs.true.1034:                               ; preds = %land.lhs.true.1029
  %569 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %tobool1035 = icmp ne %struct.rtx_def* %569, null
  br i1 %tobool1035, label %land.lhs.true.1036, label %if.else.1081

land.lhs.true.1036:                               ; preds = %land.lhs.true.1034
  %570 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %571 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %572 = bitcast %struct.rtx_def* %571 to i32*
  %bf.load1037 = load i32, i32* %572, align 8
  %bf.lshr1038 = lshr i32 %bf.load1037, 16
  %bf.clear1039 = and i32 %bf.lshr1038, 255
  %call1040 = call i32 @memory_operand(%struct.rtx_def* %570, i32 %bf.clear1039)
  %tobool1041 = icmp ne i32 %call1040, 0
  br i1 %tobool1041, label %land.lhs.true.1042, label %if.else.1081

land.lhs.true.1042:                               ; preds = %land.lhs.true.1036
  %573 = load i32, i32* %icode, align 4
  %cmp1043 = icmp ne i32 %573, 1317
  br i1 %cmp1043, label %land.lhs.true.1045, label %if.then.1065

land.lhs.true.1045:                               ; preds = %land.lhs.true.1042
  %574 = load i32, i32* %icode, align 4
  %idxprom1046 = sext i32 %574 to i64
  %arrayidx1047 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom1046
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx1047, i32 0, i32 3
  %575 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8
  %arrayidx1048 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %575, i64 0
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx1048, i32 0, i32 0
  %576 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8
  %577 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %578 = load i32, i32* @target_flags, align 4
  %and1049 = and i32 %578, 33554432
  %tobool1050 = icmp ne i32 %and1049, 0
  %cond1051 = select i1 %tobool1050, i32 5, i32 4
  %call1052 = call i32 %576(%struct.rtx_def* %577, i32 %cond1051)
  %tobool1053 = icmp ne i32 %call1052, 0
  br i1 %tobool1053, label %land.lhs.true.1054, label %if.then.1065

land.lhs.true.1054:                               ; preds = %land.lhs.true.1045
  %579 = load i32, i32* %icode, align 4
  %idxprom1055 = sext i32 %579 to i64
  %arrayidx1056 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom1055
  %operand1057 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx1056, i32 0, i32 3
  %580 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand1057, align 8
  %arrayidx1058 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %580, i64 1
  %predicate1059 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx1058, i32 0, i32 0
  %581 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate1059, align 8
  %582 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8
  %583 = load i32, i32* @target_flags, align 4
  %and1060 = and i32 %583, 33554432
  %tobool1061 = icmp ne i32 %and1060, 0
  %cond1062 = select i1 %tobool1061, i32 5, i32 4
  %call1063 = call i32 %581(%struct.rtx_def* %582, i32 %cond1062)
  %tobool1064 = icmp ne i32 %call1063, 0
  br i1 %tobool1064, label %if.else.1081, label %if.then.1065

if.then.1065:                                     ; preds = %land.lhs.true.1054, %land.lhs.true.1045, %land.lhs.true.1042
  %584 = load %struct.rtx_def*, %struct.rtx_def** %x_orig, align 8
  %fld1066 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %584, i32 0, i32 1
  %arrayidx1067 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1066, i32 0, i64 0
  %rtx1068 = bitcast %union.rtunion_def* %arrayidx1067 to %struct.rtx_def**
  store %struct.rtx_def** %rtx1068, %struct.rtx_def*** %loc.addr, align 8
  %585 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1069 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %585, i32 0, i32 1
  %arrayidx1070 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1069, i32 0, i64 0
  %rtx1071 = bitcast %union.rtunion_def* %arrayidx1070 to %struct.rtx_def**
  %586 = load %struct.rtx_def*, %struct.rtx_def** %rtx1071, align 8
  store %struct.rtx_def* %586, %struct.rtx_def** %x.addr, align 8
  %587 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %588 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %589 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %590 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %591 = load i32, i32* %context.addr, align 4
  %tobool1072 = icmp ne i32 %591, 0
  %cond1073 = select i1 %tobool1072, i32 10, i32 12
  %592 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %593 = bitcast %struct.rtx_def* %592 to i32*
  %bf.load1074 = load i32, i32* %593, align 8
  %bf.lshr1075 = lshr i32 %bf.load1074, 16
  %bf.clear1076 = and i32 %bf.lshr1075, 255
  %594 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %595 = bitcast %struct.rtx_def* %594 to i32*
  %bf.load1077 = load i32, i32* %595, align 8
  %bf.lshr1078 = lshr i32 %bf.load1077, 16
  %bf.clear1079 = and i32 %bf.lshr1078, 255
  %596 = load i32, i32* %opnum.addr, align 4
  %call1080 = call i32 @push_reload(%struct.rtx_def* %587, %struct.rtx_def* %588, %struct.rtx_def** %589, %struct.rtx_def** %590, i32 %cond1073, i32 %bf.clear1076, i32 %bf.clear1079, i32 0, i32 0, i32 %596, i32 9)
  store i32 %call1080, i32* %reloadnum1009, align 4
  br label %if.end.1100

if.else.1081:                                     ; preds = %land.lhs.true.1054, %land.lhs.true.1036, %land.lhs.true.1034, %land.lhs.true.1029, %cond.end
  %597 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %598 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %599 = load i32, i32* %context.addr, align 4
  %tobool1082 = icmp ne i32 %599, 0
  %cond1083 = select i1 %tobool1082, i32 10, i32 12
  %600 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %601 = bitcast %struct.rtx_def* %600 to i32*
  %bf.load1084 = load i32, i32* %601, align 8
  %bf.lshr1085 = lshr i32 %bf.load1084, 16
  %bf.clear1086 = and i32 %bf.lshr1085, 255
  %602 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %603 = bitcast %struct.rtx_def* %602 to i32*
  %bf.load1087 = load i32, i32* %603, align 8
  %bf.lshr1088 = lshr i32 %bf.load1087, 16
  %bf.clear1089 = and i32 %bf.lshr1088, 255
  %604 = load i32, i32* %opnum.addr, align 4
  %605 = load i32, i32* %type.addr, align 4
  %call1090 = call i32 @push_reload(%struct.rtx_def* %597, %struct.rtx_def* null, %struct.rtx_def** %598, %struct.rtx_def** null, i32 %cond1083, i32 %bf.clear1086, i32 %bf.clear1089, i32 0, i32 0, i32 %604, i32 %605)
  store i32 %call1090, i32* %reloadnum1009, align 4
  %606 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld1091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %606, i32 0, i32 1
  %arrayidx1092 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1091, i32 0, i64 3
  %rtx1093 = bitcast %union.rtunion_def* %arrayidx1092 to %struct.rtx_def**
  %607 = load %struct.rtx_def*, %struct.rtx_def** %rtx1093, align 8
  %608 = load %struct.rtx_def*, %struct.rtx_def** %x_orig, align 8
  %fld1094 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %608, i32 0, i32 1
  %arrayidx1095 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1094, i32 0, i64 0
  %rtx1096 = bitcast %union.rtunion_def* %arrayidx1095 to %struct.rtx_def**
  %609 = load %struct.rtx_def*, %struct.rtx_def** %rtx1096, align 8
  %call1097 = call i32 @find_inc_amount(%struct.rtx_def* %607, %struct.rtx_def* %609)
  %610 = load i32, i32* %reloadnum1009, align 4
  %idxprom1098 = sext i32 %610 to i64
  %arrayidx1099 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1098
  %inc = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1099, i32 0, i32 7
  store i32 %call1097, i32* %inc, align 4
  store i32 1, i32* %value, align 4
  br label %if.end.1100

if.end.1100:                                      ; preds = %if.else.1081, %if.then.1065
  %611 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %612 = load %struct.rtx_def*, %struct.rtx_def** %x_orig, align 8
  %fld1101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %612, i32 0, i32 1
  %arrayidx1102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1101, i32 0, i64 0
  %rtx1103 = bitcast %union.rtunion_def* %arrayidx1102 to %struct.rtx_def**
  %613 = load %struct.rtx_def*, %struct.rtx_def** %rtx1103, align 8
  %fld1104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1
  %arrayidx1105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1104, i32 0, i64 0
  %rtuint1106 = bitcast %union.rtunion_def* %arrayidx1105 to i32*
  %614 = load i32, i32* %rtuint1106, align 4
  %615 = load i32, i32* %reloadnum1009, align 4
  call void @update_auto_inc_notes(%struct.rtx_def* %611, i32 %614, i32 %615)
  br label %if.end.1107

if.end.1107:                                      ; preds = %if.end.1100, %lor.lhs.false.1002, %land.lhs.true.996, %land.lhs.true.987, %lor.lhs.false.981, %lor.lhs.false.978, %cond.false, %lor.lhs.false.970, %land.lhs.true.964, %land.lhs.true.955, %cond.true
  %616 = load i32, i32* %value, align 4
  store i32 %616, i32* %retval
  br label %return

if.else.1108:                                     ; preds = %sw.bb.867
  %617 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1
  %arrayidx1110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1109, i32 0, i64 0
  %rtx1111 = bitcast %union.rtunion_def* %arrayidx1110 to %struct.rtx_def**
  %618 = load %struct.rtx_def*, %struct.rtx_def** %rtx1111, align 8
  %619 = bitcast %struct.rtx_def* %618 to i32*
  %bf.load1112 = load i32, i32* %619, align 8
  %bf.clear1113 = and i32 %bf.load1112, 65535
  %cmp1114 = icmp eq i32 %bf.clear1113, 66
  br i1 %cmp1114, label %if.then.1116, label %if.end.1164

if.then.1116:                                     ; preds = %if.else.1108
  %620 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %620, i32 0, i32 1
  %arrayidx1119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1118, i32 0, i64 0
  %rtx1120 = bitcast %union.rtunion_def* %arrayidx1119 to %struct.rtx_def**
  %621 = load %struct.rtx_def*, %struct.rtx_def** %rtx1120, align 8
  store %struct.rtx_def* %621, %struct.rtx_def** %tem1117, align 8
  %622 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %623 = bitcast %struct.rtx_def* %622 to i32*
  %bf.load1122 = load i32, i32* %623, align 8
  %bf.lshr1123 = lshr i32 %bf.load1122, 16
  %bf.clear1124 = and i32 %bf.lshr1123, 255
  %624 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %624, i32 0, i32 1
  %arrayidx1126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1125, i32 0, i64 0
  %rtx1127 = bitcast %union.rtunion_def* %arrayidx1126 to %struct.rtx_def**
  %625 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %625, i32 0, i32 1
  %arrayidx1129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1128, i32 0, i64 0
  %rtx1130 = bitcast %union.rtunion_def* %arrayidx1129 to %struct.rtx_def**
  %626 = load %struct.rtx_def*, %struct.rtx_def** %rtx1130, align 8
  %fld1131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %626, i32 0, i32 1
  %arrayidx1132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1131, i32 0, i64 0
  %rtx1133 = bitcast %union.rtunion_def* %arrayidx1132 to %struct.rtx_def**
  %627 = load %struct.rtx_def*, %struct.rtx_def** %rtx1133, align 8
  %628 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %628, i32 0, i32 1
  %arrayidx1135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1134, i32 0, i64 0
  %rtx1136 = bitcast %union.rtunion_def* %arrayidx1135 to %struct.rtx_def**
  %629 = load %struct.rtx_def*, %struct.rtx_def** %rtx1136, align 8
  %fld1137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %629, i32 0, i32 1
  %arrayidx1138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1137, i32 0, i64 0
  %rtx1139 = bitcast %union.rtunion_def* %arrayidx1138 to %struct.rtx_def**
  %630 = load i32, i32* %opnum.addr, align 4
  %631 = load i32, i32* %type.addr, align 4
  %632 = load i32, i32* %ind_levels.addr, align 4
  %633 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1140 = call i32 @find_reloads_address(i32 %bf.clear1124, %struct.rtx_def** %rtx1127, %struct.rtx_def* %627, %struct.rtx_def** %rtx1139, i32 %630, i32 %631, i32 %632, %struct.rtx_def* %633)
  %634 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %635 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %636 = load i32, i32* %context.addr, align 4
  %tobool1141 = icmp ne i32 %636, 0
  %cond1142 = select i1 %tobool1141, i32 10, i32 12
  %637 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %638 = bitcast %struct.rtx_def* %637 to i32*
  %bf.load1143 = load i32, i32* %638, align 8
  %bf.lshr1144 = lshr i32 %bf.load1143, 16
  %bf.clear1145 = and i32 %bf.lshr1144, 255
  %639 = load i32, i32* %opnum.addr, align 4
  %640 = load i32, i32* %type.addr, align 4
  %call1146 = call i32 @push_reload(%struct.rtx_def* %634, %struct.rtx_def* null, %struct.rtx_def** %635, %struct.rtx_def** null, i32 %cond1142, i32 %bf.clear1145, i32 0, i32 0, i32 0, i32 %639, i32 %640)
  store i32 %call1146, i32* %reloadnum1121, align 4
  %641 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %fld1147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %641, i32 0, i32 1
  %arrayidx1148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1147, i32 0, i64 3
  %rtx1149 = bitcast %union.rtunion_def* %arrayidx1148 to %struct.rtx_def**
  %642 = load %struct.rtx_def*, %struct.rtx_def** %rtx1149, align 8
  %643 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %643, i32 0, i32 1
  %arrayidx1151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1150, i32 0, i64 0
  %rtx1152 = bitcast %union.rtunion_def* %arrayidx1151 to %struct.rtx_def**
  %644 = load %struct.rtx_def*, %struct.rtx_def** %rtx1152, align 8
  %call1153 = call i32 @find_inc_amount(%struct.rtx_def* %642, %struct.rtx_def* %644)
  %645 = load i32, i32* %reloadnum1121, align 4
  %idxprom1154 = sext i32 %645 to i64
  %arrayidx1155 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i32 0, i64 %idxprom1154
  %inc1156 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1155, i32 0, i32 7
  store i32 %call1153, i32* %inc1156, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %link, align 8
  %646 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %cmp1157 = icmp ne %struct.rtx_def* %646, null
  br i1 %cmp1157, label %if.then.1159, label %if.end.1163

if.then.1159:                                     ; preds = %if.then.1116
  %647 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8
  %fld1160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %647, i32 0, i32 1
  %arrayidx1161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1160, i32 0, i64 0
  %rtx1162 = bitcast %union.rtunion_def* %arrayidx1161 to %struct.rtx_def**
  %648 = load i32, i32* %reloadnum1121, align 4
  call void @push_replacement(%struct.rtx_def** %rtx1162, i32 %648, i32 0)
  br label %if.end.1163

if.end.1163:                                      ; preds = %if.then.1159, %if.then.1116
  store i32 1, i32* %retval
  br label %return

if.end.1164:                                      ; preds = %if.else.1108
  br label %if.end.1165

if.end.1165:                                      ; preds = %if.end.1164
  store i32 0, i32* %retval
  br label %return

sw.bb.1166:                                       ; preds = %entry
  %649 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %650 = bitcast %struct.rtx_def* %649 to i32*
  %bf.load1167 = load i32, i32* %650, align 8
  %bf.lshr1168 = lshr i32 %bf.load1167, 16
  %bf.clear1169 = and i32 %bf.lshr1168, 255
  %651 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %652 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %652, i32 0, i32 1
  %arrayidx1171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1170, i32 0, i64 0
  %rtx1172 = bitcast %union.rtunion_def* %arrayidx1171 to %struct.rtx_def**
  %653 = load %struct.rtx_def*, %struct.rtx_def** %rtx1172, align 8
  %654 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1
  %arrayidx1174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1173, i32 0, i64 0
  %rtx1175 = bitcast %union.rtunion_def* %arrayidx1174 to %struct.rtx_def**
  %655 = load i32, i32* %opnum.addr, align 4
  %656 = load i32, i32* %type.addr, align 4
  %cmp1176 = icmp eq i32 %656, 3
  br i1 %cmp1176, label %cond.true.1178, label %cond.false.1179

cond.true.1178:                                   ; preds = %sw.bb.1166
  br label %cond.end.1186

cond.false.1179:                                  ; preds = %sw.bb.1166
  %657 = load i32, i32* %type.addr, align 4
  %cmp1180 = icmp eq i32 %657, 5
  br i1 %cmp1180, label %cond.true.1182, label %cond.false.1183

cond.true.1182:                                   ; preds = %cond.false.1179
  br label %cond.end.1184

cond.false.1183:                                  ; preds = %cond.false.1179
  %658 = load i32, i32* %type.addr, align 4
  br label %cond.end.1184

cond.end.1184:                                    ; preds = %cond.false.1183, %cond.true.1182
  %cond1185 = phi i32 [ 6, %cond.true.1182 ], [ %658, %cond.false.1183 ]
  br label %cond.end.1186

cond.end.1186:                                    ; preds = %cond.end.1184, %cond.true.1178
  %cond1187 = phi i32 [ 4, %cond.true.1178 ], [ %cond1185, %cond.end.1184 ]
  %659 = load i32, i32* %ind_levels.addr, align 4
  %660 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1188 = call i32 @find_reloads_address(i32 %bf.clear1169, %struct.rtx_def** %651, %struct.rtx_def* %653, %struct.rtx_def** %rtx1175, i32 %655, i32 %cond1187, i32 %659, %struct.rtx_def* %660)
  %661 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %662 = load %struct.rtx_def*, %struct.rtx_def** %661, align 8
  %663 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %664 = load i32, i32* %context.addr, align 4
  %tobool1189 = icmp ne i32 %664, 0
  %cond1190 = select i1 %tobool1189, i32 10, i32 12
  %665 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %666 = bitcast %struct.rtx_def* %665 to i32*
  %bf.load1191 = load i32, i32* %666, align 8
  %bf.lshr1192 = lshr i32 %bf.load1191, 16
  %bf.clear1193 = and i32 %bf.lshr1192, 255
  %667 = load i32, i32* %opnum.addr, align 4
  %668 = load i32, i32* %type.addr, align 4
  %call1194 = call i32 @push_reload(%struct.rtx_def* %662, %struct.rtx_def* null, %struct.rtx_def** %663, %struct.rtx_def** null, i32 %cond1190, i32 %bf.clear1193, i32 0, i32 0, i32 0, i32 %667, i32 %668)
  store i32 1, i32* %retval
  br label %return

sw.bb.1195:                                       ; preds = %entry
  %669 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %669, i32 0, i32 1
  %arrayidx1198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1197, i32 0, i64 0
  %rtuint1199 = bitcast %union.rtunion_def* %arrayidx1198 to i32*
  %670 = load i32, i32* %rtuint1199, align 4
  store i32 %670, i32* %regno1196, align 4
  %671 = load i32, i32* %regno1196, align 4
  %idxprom1200 = sext i32 %671 to i64
  %672 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx1201 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %672, i64 %idxprom1200
  %673 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1201, align 8
  %cmp1202 = icmp ne %struct.rtx_def* %673, null
  br i1 %cmp1202, label %if.then.1204, label %if.end.1212

if.then.1204:                                     ; preds = %sw.bb.1195
  %674 = load i32, i32* %regno1196, align 4
  %idxprom1205 = sext i32 %674 to i64
  %675 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx1206 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %675, i64 %idxprom1205
  %676 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1206, align 8
  %677 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %678 = load i32, i32* %context.addr, align 4
  %tobool1207 = icmp ne i32 %678, 0
  %cond1208 = select i1 %tobool1207, i32 10, i32 12
  %679 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %680 = bitcast %struct.rtx_def* %679 to i32*
  %bf.load1209 = load i32, i32* %680, align 8
  %bf.lshr1210 = lshr i32 %bf.load1209, 16
  %bf.clear1211 = and i32 %bf.lshr1210, 255
  %681 = load i32, i32* %opnum.addr, align 4
  %682 = load i32, i32* %type.addr, align 4
  %683 = load i32, i32* %ind_levels.addr, align 4
  call void @find_reloads_address_part(%struct.rtx_def* %676, %struct.rtx_def** %677, i32 %cond1208, i32 %bf.clear1211, i32 %681, i32 %682, i32 %683)
  store i32 1, i32* %retval
  br label %return

if.end.1212:                                      ; preds = %sw.bb.1195
  %684 = load i32, i32* %regno1196, align 4
  %idxprom1213 = sext i32 %684 to i64
  %685 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8
  %arrayidx1214 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %685, i64 %idxprom1213
  %686 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1214, align 8
  %tobool1215 = icmp ne %struct.rtx_def* %686, null
  br i1 %tobool1215, label %land.lhs.true.1216, label %if.end.1259

land.lhs.true.1216:                               ; preds = %if.end.1212
  %687 = load i32, i32* %regno1196, align 4
  %idxprom1217 = sext i32 %687 to i64
  %688 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx1218 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %688, i64 %idxprom1217
  %689 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1218, align 8
  %cmp1219 = icmp ne %struct.rtx_def* %689, null
  br i1 %cmp1219, label %if.then.1223, label %lor.lhs.false.1221

lor.lhs.false.1221:                               ; preds = %land.lhs.true.1216
  %690 = load i32, i32* @num_not_at_initial_offset, align 4
  %tobool1222 = icmp ne i32 %690, 0
  br i1 %tobool1222, label %if.then.1223, label %if.end.1259

if.then.1223:                                     ; preds = %lor.lhs.false.1221, %land.lhs.true.1216
  %691 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %692 = load i32, i32* %regno1196, align 4
  %call1225 = call %struct.rtx_def* @make_memloc(%struct.rtx_def* %691, i32 %692)
  store %struct.rtx_def* %call1225, %struct.rtx_def** %tem1224, align 8
  %693 = load i32, i32* %regno1196, align 4
  %idxprom1226 = sext i32 %693 to i64
  %694 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8
  %arrayidx1227 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %694, i64 %idxprom1226
  %695 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1227, align 8
  %cmp1228 = icmp ne %struct.rtx_def* %695, null
  br i1 %cmp1228, label %if.then.1235, label %lor.lhs.false.1230

lor.lhs.false.1230:                               ; preds = %if.then.1223
  %696 = load %struct.rtx_def*, %struct.rtx_def** %tem1224, align 8
  %697 = load i32, i32* %regno1196, align 4
  %idxprom1231 = sext i32 %697 to i64
  %698 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8
  %arrayidx1232 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %698, i64 %idxprom1231
  %699 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1232, align 8
  %call1233 = call i32 @rtx_equal_p(%struct.rtx_def* %696, %struct.rtx_def* %699)
  %tobool1234 = icmp ne i32 %call1233, 0
  br i1 %tobool1234, label %if.end.1258, label %if.then.1235

if.then.1235:                                     ; preds = %lor.lhs.false.1230, %if.then.1223
  %700 = load %struct.rtx_def*, %struct.rtx_def** %tem1224, align 8
  store %struct.rtx_def* %700, %struct.rtx_def** %x.addr, align 8
  %701 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %702 = bitcast %struct.rtx_def* %701 to i32*
  %bf.load1236 = load i32, i32* %702, align 8
  %bf.lshr1237 = lshr i32 %bf.load1236, 16
  %bf.clear1238 = and i32 %bf.lshr1237, 255
  %703 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %703, i32 0, i32 1
  %arrayidx1240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1239, i32 0, i64 0
  %rtx1241 = bitcast %union.rtunion_def* %arrayidx1240 to %struct.rtx_def**
  %704 = load %struct.rtx_def*, %struct.rtx_def** %rtx1241, align 8
  %705 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %705, i32 0, i32 1
  %arrayidx1243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1242, i32 0, i64 0
  %rtx1244 = bitcast %union.rtunion_def* %arrayidx1243 to %struct.rtx_def**
  %706 = load i32, i32* %opnum.addr, align 4
  %707 = load i32, i32* %type.addr, align 4
  %cmp1245 = icmp eq i32 %707, 3
  br i1 %cmp1245, label %cond.true.1247, label %cond.false.1248

cond.true.1247:                                   ; preds = %if.then.1235
  br label %cond.end.1255

cond.false.1248:                                  ; preds = %if.then.1235
  %708 = load i32, i32* %type.addr, align 4
  %cmp1249 = icmp eq i32 %708, 5
  br i1 %cmp1249, label %cond.true.1251, label %cond.false.1252

cond.true.1251:                                   ; preds = %cond.false.1248
  br label %cond.end.1253

cond.false.1252:                                  ; preds = %cond.false.1248
  %709 = load i32, i32* %type.addr, align 4
  br label %cond.end.1253

cond.end.1253:                                    ; preds = %cond.false.1252, %cond.true.1251
  %cond1254 = phi i32 [ 6, %cond.true.1251 ], [ %709, %cond.false.1252 ]
  br label %cond.end.1255

cond.end.1255:                                    ; preds = %cond.end.1253, %cond.true.1247
  %cond1256 = phi i32 [ 4, %cond.true.1247 ], [ %cond1254, %cond.end.1253 ]
  %710 = load i32, i32* %ind_levels.addr, align 4
  %711 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1257 = call i32 @find_reloads_address(i32 %bf.clear1238, %struct.rtx_def** %x.addr, %struct.rtx_def* %704, %struct.rtx_def** %rtx1244, i32 %706, i32 %cond1256, i32 %710, %struct.rtx_def* %711)
  br label %if.end.1258

if.end.1258:                                      ; preds = %cond.end.1255, %lor.lhs.false.1230
  br label %if.end.1259

if.end.1259:                                      ; preds = %if.end.1258, %lor.lhs.false.1221, %if.end.1212
  %712 = load i32, i32* %regno1196, align 4
  %idxprom1260 = sext i32 %712 to i64
  %713 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1261 = getelementptr inbounds i16, i16* %713, i64 %idxprom1260
  %714 = load i16, i16* %arrayidx1261, align 2
  %conv1262 = sext i16 %714 to i32
  %cmp1263 = icmp sge i32 %conv1262, 0
  br i1 %cmp1263, label %if.then.1265, label %if.end.1269

if.then.1265:                                     ; preds = %if.end.1259
  %715 = load i32, i32* %regno1196, align 4
  %idxprom1266 = sext i32 %715 to i64
  %716 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1267 = getelementptr inbounds i16, i16* %716, i64 %idxprom1266
  %717 = load i16, i16* %arrayidx1267, align 2
  %conv1268 = sext i16 %717 to i32
  store i32 %conv1268, i32* %regno1196, align 4
  br label %if.end.1269

if.end.1269:                                      ; preds = %if.then.1265, %if.end.1259
  %718 = load i32, i32* %regno1196, align 4
  %cmp1270 = icmp sge i32 %718, 53
  br i1 %cmp1270, label %if.then.1334, label %lor.lhs.false.1272

lor.lhs.false.1272:                               ; preds = %if.end.1269
  %719 = load i32, i32* %context.addr, align 4
  %tobool1273 = icmp ne i32 %719, 0
  br i1 %tobool1273, label %cond.true.1274, label %cond.false.1301

cond.true.1274:                                   ; preds = %lor.lhs.false.1272
  %720 = load i32, i32* %regno1196, align 4
  %cmp1275 = icmp slt i32 %720, 7
  br i1 %cmp1275, label %if.end.1341, label %lor.lhs.false.1277

lor.lhs.false.1277:                               ; preds = %cond.true.1274
  %721 = load i32, i32* %regno1196, align 4
  %cmp1278 = icmp sge i32 %721, 37
  br i1 %cmp1278, label %land.lhs.true.1280, label %lor.lhs.false.1283

land.lhs.true.1280:                               ; preds = %lor.lhs.false.1277
  %722 = load i32, i32* %regno1196, align 4
  %cmp1281 = icmp sle i32 %722, 44
  br i1 %cmp1281, label %if.end.1341, label %lor.lhs.false.1283

lor.lhs.false.1283:                               ; preds = %land.lhs.true.1280, %lor.lhs.false.1277
  %723 = load i32, i32* %regno1196, align 4
  %idxprom1284 = sext i32 %723 to i64
  %724 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1285 = getelementptr inbounds i16, i16* %724, i64 %idxprom1284
  %725 = load i16, i16* %arrayidx1285, align 2
  %conv1286 = sext i16 %725 to i32
  %cmp1287 = icmp uge i32 %conv1286, 37
  br i1 %cmp1287, label %land.lhs.true.1289, label %lor.lhs.false.1295

land.lhs.true.1289:                               ; preds = %lor.lhs.false.1283
  %726 = load i32, i32* %regno1196, align 4
  %idxprom1290 = sext i32 %726 to i64
  %727 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1291 = getelementptr inbounds i16, i16* %727, i64 %idxprom1290
  %728 = load i16, i16* %arrayidx1291, align 2
  %conv1292 = sext i16 %728 to i32
  %cmp1293 = icmp ule i32 %conv1292, 44
  br i1 %cmp1293, label %if.end.1341, label %lor.lhs.false.1295

lor.lhs.false.1295:                               ; preds = %land.lhs.true.1289, %lor.lhs.false.1283
  %729 = load i32, i32* %regno1196, align 4
  %idxprom1296 = sext i32 %729 to i64
  %730 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1297 = getelementptr inbounds i16, i16* %730, i64 %idxprom1296
  %731 = load i16, i16* %arrayidx1297, align 2
  %conv1298 = sext i16 %731 to i32
  %cmp1299 = icmp ult i32 %conv1298, 7
  br i1 %cmp1299, label %if.end.1341, label %if.then.1334

cond.false.1301:                                  ; preds = %lor.lhs.false.1272
  %732 = load i32, i32* %regno1196, align 4
  %cmp1302 = icmp sle i32 %732, 7
  br i1 %cmp1302, label %if.end.1341, label %lor.lhs.false.1304

lor.lhs.false.1304:                               ; preds = %cond.false.1301
  %733 = load i32, i32* %regno1196, align 4
  %cmp1305 = icmp eq i32 %733, 16
  br i1 %cmp1305, label %if.end.1341, label %lor.lhs.false.1307

lor.lhs.false.1307:                               ; preds = %lor.lhs.false.1304
  %734 = load i32, i32* %regno1196, align 4
  %cmp1308 = icmp eq i32 %734, 20
  br i1 %cmp1308, label %if.end.1341, label %lor.lhs.false.1310

lor.lhs.false.1310:                               ; preds = %lor.lhs.false.1307
  %735 = load i32, i32* %regno1196, align 4
  %cmp1311 = icmp sge i32 %735, 37
  br i1 %cmp1311, label %land.lhs.true.1313, label %lor.lhs.false.1316

land.lhs.true.1313:                               ; preds = %lor.lhs.false.1310
  %736 = load i32, i32* %regno1196, align 4
  %cmp1314 = icmp sle i32 %736, 44
  br i1 %cmp1314, label %if.end.1341, label %lor.lhs.false.1316

lor.lhs.false.1316:                               ; preds = %land.lhs.true.1313, %lor.lhs.false.1310
  %737 = load i32, i32* %regno1196, align 4
  %idxprom1317 = sext i32 %737 to i64
  %738 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1318 = getelementptr inbounds i16, i16* %738, i64 %idxprom1317
  %739 = load i16, i16* %arrayidx1318, align 2
  %conv1319 = sext i16 %739 to i32
  %cmp1320 = icmp uge i32 %conv1319, 37
  br i1 %cmp1320, label %land.lhs.true.1322, label %lor.lhs.false.1328

land.lhs.true.1322:                               ; preds = %lor.lhs.false.1316
  %740 = load i32, i32* %regno1196, align 4
  %idxprom1323 = sext i32 %740 to i64
  %741 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1324 = getelementptr inbounds i16, i16* %741, i64 %idxprom1323
  %742 = load i16, i16* %arrayidx1324, align 2
  %conv1325 = sext i16 %742 to i32
  %cmp1326 = icmp ule i32 %conv1325, 44
  br i1 %cmp1326, label %if.end.1341, label %lor.lhs.false.1328

lor.lhs.false.1328:                               ; preds = %land.lhs.true.1322, %lor.lhs.false.1316
  %743 = load i32, i32* %regno1196, align 4
  %idxprom1329 = sext i32 %743 to i64
  %744 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1330 = getelementptr inbounds i16, i16* %744, i64 %idxprom1329
  %745 = load i16, i16* %arrayidx1330, align 2
  %conv1331 = sext i16 %745 to i32
  %cmp1332 = icmp ule i32 %conv1331, 7
  br i1 %cmp1332, label %if.end.1341, label %if.then.1334

if.then.1334:                                     ; preds = %lor.lhs.false.1328, %lor.lhs.false.1295, %if.end.1269
  %746 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %747 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %748 = load i32, i32* %context.addr, align 4
  %tobool1335 = icmp ne i32 %748, 0
  %cond1336 = select i1 %tobool1335, i32 10, i32 12
  %749 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %750 = bitcast %struct.rtx_def* %749 to i32*
  %bf.load1337 = load i32, i32* %750, align 8
  %bf.lshr1338 = lshr i32 %bf.load1337, 16
  %bf.clear1339 = and i32 %bf.lshr1338, 255
  %751 = load i32, i32* %opnum.addr, align 4
  %752 = load i32, i32* %type.addr, align 4
  %call1340 = call i32 @push_reload(%struct.rtx_def* %746, %struct.rtx_def* null, %struct.rtx_def** %747, %struct.rtx_def** null, i32 %cond1336, i32 %bf.clear1339, i32 0, i32 0, i32 0, i32 %751, i32 %752)
  store i32 1, i32* %retval
  br label %return

if.end.1341:                                      ; preds = %lor.lhs.false.1328, %land.lhs.true.1322, %land.lhs.true.1313, %lor.lhs.false.1307, %lor.lhs.false.1304, %cond.false.1301, %lor.lhs.false.1295, %land.lhs.true.1289, %land.lhs.true.1280, %cond.true.1274
  %753 = load i32, i32* %regno1196, align 4
  %754 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %755 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %756 = bitcast %struct.rtx_def* %755 to i32*
  %bf.load1342 = load i32, i32* %756, align 8
  %bf.lshr1343 = lshr i32 %bf.load1342, 16
  %bf.clear1344 = and i32 %bf.lshr1343, 255
  %call1345 = call i32 @regno_clobbered_p(i32 %753, %struct.rtx_def* %754, i32 %bf.clear1344, i32 0)
  %tobool1346 = icmp ne i32 %call1345, 0
  br i1 %tobool1346, label %if.then.1347, label %if.end.1354

if.then.1347:                                     ; preds = %if.end.1341
  %757 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %758 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %759 = load i32, i32* %context.addr, align 4
  %tobool1348 = icmp ne i32 %759, 0
  %cond1349 = select i1 %tobool1348, i32 10, i32 12
  %760 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %761 = bitcast %struct.rtx_def* %760 to i32*
  %bf.load1350 = load i32, i32* %761, align 8
  %bf.lshr1351 = lshr i32 %bf.load1350, 16
  %bf.clear1352 = and i32 %bf.lshr1351, 255
  %762 = load i32, i32* %opnum.addr, align 4
  %763 = load i32, i32* %type.addr, align 4
  %call1353 = call i32 @push_reload(%struct.rtx_def* %757, %struct.rtx_def* null, %struct.rtx_def** %758, %struct.rtx_def** null, i32 %cond1349, i32 %bf.clear1352, i32 0, i32 0, i32 0, i32 %762, i32 %763)
  store i32 1, i32* %retval
  br label %return

if.end.1354:                                      ; preds = %if.end.1341
  store i32 0, i32* %retval
  br label %return

sw.bb.1355:                                       ; preds = %entry
  %764 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %764, i32 0, i32 1
  %arrayidx1357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1356, i32 0, i64 0
  %rtx1358 = bitcast %union.rtunion_def* %arrayidx1357 to %struct.rtx_def**
  %765 = load %struct.rtx_def*, %struct.rtx_def** %rtx1358, align 8
  %766 = bitcast %struct.rtx_def* %765 to i32*
  %bf.load1359 = load i32, i32* %766, align 8
  %bf.clear1360 = and i32 %bf.load1359, 65535
  %cmp1361 = icmp eq i32 %bf.clear1360, 61
  br i1 %cmp1361, label %if.then.1363, label %if.end.1514

if.then.1363:                                     ; preds = %sw.bb.1355
  %767 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1364 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %767, i32 0, i32 1
  %arrayidx1365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1364, i32 0, i64 0
  %rtx1366 = bitcast %union.rtunion_def* %arrayidx1365 to %struct.rtx_def**
  %768 = load %struct.rtx_def*, %struct.rtx_def** %rtx1366, align 8
  %fld1367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %768, i32 0, i32 1
  %arrayidx1368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1367, i32 0, i64 0
  %rtuint1369 = bitcast %union.rtunion_def* %arrayidx1368 to i32*
  %769 = load i32, i32* %rtuint1369, align 4
  %cmp1370 = icmp ult i32 %769, 53
  br i1 %cmp1370, label %if.then.1372, label %if.else.1444

if.then.1372:                                     ; preds = %if.then.1363
  %770 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1374 = call i32 @subreg_regno(%struct.rtx_def* %770)
  store i32 %call1374, i32* %regno1373, align 4
  %771 = load i32, i32* %context.addr, align 4
  %tobool1375 = icmp ne i32 %771, 0
  br i1 %tobool1375, label %cond.true.1376, label %cond.false.1403

cond.true.1376:                                   ; preds = %if.then.1372
  %772 = load i32, i32* %regno1373, align 4
  %cmp1377 = icmp slt i32 %772, 7
  br i1 %cmp1377, label %if.end.1443, label %lor.lhs.false.1379

lor.lhs.false.1379:                               ; preds = %cond.true.1376
  %773 = load i32, i32* %regno1373, align 4
  %cmp1380 = icmp sge i32 %773, 37
  br i1 %cmp1380, label %land.lhs.true.1382, label %lor.lhs.false.1385

land.lhs.true.1382:                               ; preds = %lor.lhs.false.1379
  %774 = load i32, i32* %regno1373, align 4
  %cmp1383 = icmp sle i32 %774, 44
  br i1 %cmp1383, label %if.end.1443, label %lor.lhs.false.1385

lor.lhs.false.1385:                               ; preds = %land.lhs.true.1382, %lor.lhs.false.1379
  %775 = load i32, i32* %regno1373, align 4
  %idxprom1386 = sext i32 %775 to i64
  %776 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1387 = getelementptr inbounds i16, i16* %776, i64 %idxprom1386
  %777 = load i16, i16* %arrayidx1387, align 2
  %conv1388 = sext i16 %777 to i32
  %cmp1389 = icmp uge i32 %conv1388, 37
  br i1 %cmp1389, label %land.lhs.true.1391, label %lor.lhs.false.1397

land.lhs.true.1391:                               ; preds = %lor.lhs.false.1385
  %778 = load i32, i32* %regno1373, align 4
  %idxprom1392 = sext i32 %778 to i64
  %779 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1393 = getelementptr inbounds i16, i16* %779, i64 %idxprom1392
  %780 = load i16, i16* %arrayidx1393, align 2
  %conv1394 = sext i16 %780 to i32
  %cmp1395 = icmp ule i32 %conv1394, 44
  br i1 %cmp1395, label %if.end.1443, label %lor.lhs.false.1397

lor.lhs.false.1397:                               ; preds = %land.lhs.true.1391, %lor.lhs.false.1385
  %781 = load i32, i32* %regno1373, align 4
  %idxprom1398 = sext i32 %781 to i64
  %782 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1399 = getelementptr inbounds i16, i16* %782, i64 %idxprom1398
  %783 = load i16, i16* %arrayidx1399, align 2
  %conv1400 = sext i16 %783 to i32
  %cmp1401 = icmp ult i32 %conv1400, 7
  br i1 %cmp1401, label %if.end.1443, label %if.then.1436

cond.false.1403:                                  ; preds = %if.then.1372
  %784 = load i32, i32* %regno1373, align 4
  %cmp1404 = icmp sle i32 %784, 7
  br i1 %cmp1404, label %if.end.1443, label %lor.lhs.false.1406

lor.lhs.false.1406:                               ; preds = %cond.false.1403
  %785 = load i32, i32* %regno1373, align 4
  %cmp1407 = icmp eq i32 %785, 16
  br i1 %cmp1407, label %if.end.1443, label %lor.lhs.false.1409

lor.lhs.false.1409:                               ; preds = %lor.lhs.false.1406
  %786 = load i32, i32* %regno1373, align 4
  %cmp1410 = icmp eq i32 %786, 20
  br i1 %cmp1410, label %if.end.1443, label %lor.lhs.false.1412

lor.lhs.false.1412:                               ; preds = %lor.lhs.false.1409
  %787 = load i32, i32* %regno1373, align 4
  %cmp1413 = icmp sge i32 %787, 37
  br i1 %cmp1413, label %land.lhs.true.1415, label %lor.lhs.false.1418

land.lhs.true.1415:                               ; preds = %lor.lhs.false.1412
  %788 = load i32, i32* %regno1373, align 4
  %cmp1416 = icmp sle i32 %788, 44
  br i1 %cmp1416, label %if.end.1443, label %lor.lhs.false.1418

lor.lhs.false.1418:                               ; preds = %land.lhs.true.1415, %lor.lhs.false.1412
  %789 = load i32, i32* %regno1373, align 4
  %idxprom1419 = sext i32 %789 to i64
  %790 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1420 = getelementptr inbounds i16, i16* %790, i64 %idxprom1419
  %791 = load i16, i16* %arrayidx1420, align 2
  %conv1421 = sext i16 %791 to i32
  %cmp1422 = icmp uge i32 %conv1421, 37
  br i1 %cmp1422, label %land.lhs.true.1424, label %lor.lhs.false.1430

land.lhs.true.1424:                               ; preds = %lor.lhs.false.1418
  %792 = load i32, i32* %regno1373, align 4
  %idxprom1425 = sext i32 %792 to i64
  %793 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1426 = getelementptr inbounds i16, i16* %793, i64 %idxprom1425
  %794 = load i16, i16* %arrayidx1426, align 2
  %conv1427 = sext i16 %794 to i32
  %cmp1428 = icmp ule i32 %conv1427, 44
  br i1 %cmp1428, label %if.end.1443, label %lor.lhs.false.1430

lor.lhs.false.1430:                               ; preds = %land.lhs.true.1424, %lor.lhs.false.1418
  %795 = load i32, i32* %regno1373, align 4
  %idxprom1431 = sext i32 %795 to i64
  %796 = load i16*, i16** @reg_renumber, align 8
  %arrayidx1432 = getelementptr inbounds i16, i16* %796, i64 %idxprom1431
  %797 = load i16, i16* %arrayidx1432, align 2
  %conv1433 = sext i16 %797 to i32
  %cmp1434 = icmp ule i32 %conv1433, 7
  br i1 %cmp1434, label %if.end.1443, label %if.then.1436

if.then.1436:                                     ; preds = %lor.lhs.false.1430, %lor.lhs.false.1397
  %798 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %799 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %800 = load i32, i32* %context.addr, align 4
  %tobool1437 = icmp ne i32 %800, 0
  %cond1438 = select i1 %tobool1437, i32 10, i32 12
  %801 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %802 = bitcast %struct.rtx_def* %801 to i32*
  %bf.load1439 = load i32, i32* %802, align 8
  %bf.lshr1440 = lshr i32 %bf.load1439, 16
  %bf.clear1441 = and i32 %bf.lshr1440, 255
  %803 = load i32, i32* %opnum.addr, align 4
  %804 = load i32, i32* %type.addr, align 4
  %call1442 = call i32 @push_reload(%struct.rtx_def* %798, %struct.rtx_def* null, %struct.rtx_def** %799, %struct.rtx_def** null, i32 %cond1438, i32 %bf.clear1441, i32 0, i32 0, i32 0, i32 %803, i32 %804)
  store i32 1, i32* %retval
  br label %return

if.end.1443:                                      ; preds = %lor.lhs.false.1430, %land.lhs.true.1424, %land.lhs.true.1415, %lor.lhs.false.1409, %lor.lhs.false.1406, %cond.false.1403, %lor.lhs.false.1397, %land.lhs.true.1391, %land.lhs.true.1382, %cond.true.1376
  br label %if.end.1513

if.else.1444:                                     ; preds = %if.then.1363
  %805 = load i32, i32* %context.addr, align 4
  %tobool1445 = icmp ne i32 %805, 0
  %cond1446 = select i1 %tobool1445, i32 10, i32 12
  store i32 %cond1446, i32* %class, align 4
  %806 = load i32, i32* %class, align 4
  %call1447 = call i32 @reg_classes_intersect_p(i32 %806, i32 12)
  %tobool1448 = icmp ne i32 %call1447, 0
  br i1 %tobool1448, label %cond.false.1471, label %cond.true.1449

cond.true.1449:                                   ; preds = %if.else.1444
  %807 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %807, i32 0, i32 1
  %arrayidx1451 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1450, i32 0, i64 0
  %rtx1452 = bitcast %union.rtunion_def* %arrayidx1451 to %struct.rtx_def**
  %808 = load %struct.rtx_def*, %struct.rtx_def** %rtx1452, align 8
  %809 = bitcast %struct.rtx_def* %808 to i32*
  %bf.load1453 = load i32, i32* %809, align 8
  %bf.lshr1454 = lshr i32 %bf.load1453, 16
  %bf.clear1455 = and i32 %bf.lshr1454, 255
  %idxprom1456 = sext i32 %bf.clear1455 to i64
  %arrayidx1457 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1456
  %810 = load i32, i32* %arrayidx1457, align 4
  %cmp1458 = icmp eq i32 %810, 5
  br i1 %cmp1458, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.1449
  %811 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %811, i32 0, i32 1
  %arrayidx1461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1460, i32 0, i64 0
  %rtx1462 = bitcast %union.rtunion_def* %arrayidx1461 to %struct.rtx_def**
  %812 = load %struct.rtx_def*, %struct.rtx_def** %rtx1462, align 8
  %813 = bitcast %struct.rtx_def* %812 to i32*
  %bf.load1463 = load i32, i32* %813, align 8
  %bf.lshr1464 = lshr i32 %bf.load1463, 16
  %bf.clear1465 = and i32 %bf.lshr1464, 255
  %idxprom1466 = sext i32 %bf.clear1465 to i64
  %arrayidx1467 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1466
  %814 = load i32, i32* %arrayidx1467, align 4
  %cmp1468 = icmp eq i32 %814, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.1449
  %815 = phi i1 [ true, %cond.true.1449 ], [ %cmp1468, %lor.rhs ]
  %cond1470 = select i1 %815, i32 2, i32 1
  br label %cond.end.1500

cond.false.1471:                                  ; preds = %if.else.1444
  %816 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %816, i32 0, i32 1
  %arrayidx1473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1472, i32 0, i64 0
  %rtx1474 = bitcast %union.rtunion_def* %arrayidx1473 to %struct.rtx_def**
  %817 = load %struct.rtx_def*, %struct.rtx_def** %rtx1474, align 8
  %818 = bitcast %struct.rtx_def* %817 to i32*
  %bf.load1475 = load i32, i32* %818, align 8
  %bf.lshr1476 = lshr i32 %bf.load1475, 16
  %bf.clear1477 = and i32 %bf.lshr1476, 255
  %cmp1478 = icmp eq i32 %bf.clear1477, 18
  br i1 %cmp1478, label %cond.true.1480, label %cond.false.1481

cond.true.1480:                                   ; preds = %cond.false.1471
  br label %cond.end.1488

cond.false.1481:                                  ; preds = %cond.false.1471
  %819 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %819, i32 0, i32 1
  %arrayidx1483 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1482, i32 0, i64 0
  %rtx1484 = bitcast %union.rtunion_def* %arrayidx1483 to %struct.rtx_def**
  %820 = load %struct.rtx_def*, %struct.rtx_def** %rtx1484, align 8
  %821 = bitcast %struct.rtx_def* %820 to i32*
  %bf.load1485 = load i32, i32* %821, align 8
  %bf.lshr1486 = lshr i32 %bf.load1485, 16
  %bf.clear1487 = and i32 %bf.lshr1486, 255
  br label %cond.end.1488

cond.end.1488:                                    ; preds = %cond.false.1481, %cond.true.1480
  %cond1489 = phi i32 [ 17, %cond.true.1480 ], [ %bf.clear1487, %cond.false.1481 ]
  %idxprom1490 = sext i32 %cond1489 to i64
  %arrayidx1491 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1490
  %822 = load i8, i8* %arrayidx1491, align 1
  %conv1492 = zext i8 %822 to i32
  %823 = load i32, i32* @target_flags, align 4
  %and1493 = and i32 %823, 33554432
  %tobool1494 = icmp ne i32 %and1493, 0
  %cond1495 = select i1 %tobool1494, i32 8, i32 4
  %add1496 = add nsw i32 %conv1492, %cond1495
  %sub = sub nsw i32 %add1496, 1
  %824 = load i32, i32* @target_flags, align 4
  %and1497 = and i32 %824, 33554432
  %tobool1498 = icmp ne i32 %and1497, 0
  %cond1499 = select i1 %tobool1498, i32 8, i32 4
  %div = sdiv i32 %sub, %cond1499
  br label %cond.end.1500

cond.end.1500:                                    ; preds = %cond.end.1488, %lor.end
  %cond1501 = phi i32 [ %cond1470, %lor.end ], [ %div, %cond.end.1488 ]
  %825 = load i32, i32* %class, align 4
  %idxprom1502 = zext i32 %825 to i64
  %arrayidx1503 = getelementptr inbounds [25 x i32], [25 x i32]* @reg_class_size, i32 0, i64 %idxprom1502
  %826 = load i32, i32* %arrayidx1503, align 4
  %cmp1504 = icmp ugt i32 %cond1501, %826
  br i1 %cmp1504, label %if.then.1506, label %if.end.1512

if.then.1506:                                     ; preds = %cond.end.1500
  %827 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %828 = load i32, i32* %opnum.addr, align 4
  %829 = load i32, i32* %type.addr, align 4
  %830 = load i32, i32* %ind_levels.addr, align 4
  %831 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1507 = call %struct.rtx_def* @find_reloads_subreg_address(%struct.rtx_def* %827, i32 0, i32 %828, i32 %829, i32 %830, %struct.rtx_def* %831)
  store %struct.rtx_def* %call1507, %struct.rtx_def** %x.addr, align 8
  %832 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %833 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %834 = load i32, i32* %class, align 4
  %835 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %836 = bitcast %struct.rtx_def* %835 to i32*
  %bf.load1508 = load i32, i32* %836, align 8
  %bf.lshr1509 = lshr i32 %bf.load1508, 16
  %bf.clear1510 = and i32 %bf.lshr1509, 255
  %837 = load i32, i32* %opnum.addr, align 4
  %838 = load i32, i32* %type.addr, align 4
  %call1511 = call i32 @push_reload(%struct.rtx_def* %832, %struct.rtx_def* null, %struct.rtx_def** %833, %struct.rtx_def** null, i32 %834, i32 %bf.clear1510, i32 0, i32 0, i32 0, i32 %837, i32 %838)
  store i32 1, i32* %retval
  br label %return

if.end.1512:                                      ; preds = %cond.end.1500
  br label %if.end.1513

if.end.1513:                                      ; preds = %if.end.1512, %if.end.1443
  br label %if.end.1514

if.end.1514:                                      ; preds = %if.end.1513, %sw.bb.1355
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.1514
  %839 = load i32, i32* %code, align 4
  %idxprom1515 = sext i32 %839 to i64
  %arrayidx1516 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom1515
  %840 = load i8*, i8** %arrayidx1516, align 8
  store i8* %840, i8** %fmt, align 8
  %841 = load i32, i32* %code, align 4
  %idxprom1517 = sext i32 %841 to i64
  %arrayidx1518 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom1517
  %842 = load i8, i8* %arrayidx1518, align 1
  %conv1519 = zext i8 %842 to i32
  %sub1520 = sub nsw i32 %conv1519, 1
  store i32 %sub1520, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %843 = load i32, i32* %i, align 4
  %cmp1521 = icmp sge i32 %843, 0
  br i1 %cmp1521, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %844 = load i32, i32* %i, align 4
  %idxprom1523 = sext i32 %844 to i64
  %845 = load i8*, i8** %fmt, align 8
  %arrayidx1524 = getelementptr inbounds i8, i8* %845, i64 %idxprom1523
  %846 = load i8, i8* %arrayidx1524, align 1
  %conv1525 = sext i8 %846 to i32
  %cmp1526 = icmp eq i32 %conv1525, 101
  br i1 %cmp1526, label %if.then.1528, label %if.end.1538

if.then.1528:                                     ; preds = %for.body
  %847 = load i32, i32* %mode.addr, align 4
  %848 = load i32, i32* %i, align 4
  %idxprom1529 = sext i32 %848 to i64
  %849 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %849, i32 0, i32 1
  %arrayidx1531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1530, i32 0, i64 %idxprom1529
  %rtx1532 = bitcast %union.rtunion_def* %arrayidx1531 to %struct.rtx_def**
  %850 = load %struct.rtx_def*, %struct.rtx_def** %rtx1532, align 8
  %851 = load i32, i32* %context.addr, align 4
  %852 = load i32, i32* %i, align 4
  %idxprom1533 = sext i32 %852 to i64
  %853 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %853, i32 0, i32 1
  %arrayidx1535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1534, i32 0, i64 %idxprom1533
  %rtx1536 = bitcast %union.rtunion_def* %arrayidx1535 to %struct.rtx_def**
  %854 = load i32, i32* %opnum.addr, align 4
  %855 = load i32, i32* %type.addr, align 4
  %856 = load i32, i32* %ind_levels.addr, align 4
  %857 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1537 = call i32 @find_reloads_address_1(i32 %847, %struct.rtx_def* %850, i32 %851, %struct.rtx_def** %rtx1536, i32 %854, i32 %855, i32 %856, %struct.rtx_def* %857)
  br label %if.end.1538

if.end.1538:                                      ; preds = %if.then.1528, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.1538
  %858 = load i32, i32* %i, align 4
  %dec = add nsw i32 %858, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.1506, %if.then.1436, %if.end.1354, %if.then.1347, %if.then.1334, %if.then.1204, %cond.end.1186, %if.end.1165, %if.end.1163, %if.end.1107, %if.end.866, %if.then.844, %if.then.776, %if.then.641, %if.end.622, %if.then.352, %if.then.249
  %859 = load i32, i32* %retval
  ret i32 %859
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @subst_indexed_address(%struct.rtx_def* %addr) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %addr.addr = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %op2 = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def* %addr, %struct.rtx_def** %addr.addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %op2, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 75
  br i1 %cmp, label %if.then, label %if.end.104

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %op0, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %op2, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %9 = load i32, i32* %rtuint, align 4
  store i32 %9, i32* %regno, align 4
  %cmp9 = icmp sge i32 %9, 53
  br i1 %cmp9, label %land.lhs.true.10, label %if.else

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %10 = load i32, i32* %regno, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load i16*, i16** @reg_renumber, align 8
  %arrayidx11 = getelementptr inbounds i16, i16* %11, i64 %idxprom
  %12 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %12 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %land.lhs.true.14, label %if.else

land.lhs.true.14:                                 ; preds = %land.lhs.true.10
  %13 = load i32, i32* %regno, align 4
  %idxprom15 = sext i32 %13 to i64
  %14 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx16 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %14, i64 %idxprom15
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx16, align 8
  %cmp17 = icmp ne %struct.rtx_def* %15, null
  br i1 %cmp17, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %land.lhs.true.14
  %16 = load i32, i32* %regno, align 4
  %idxprom20 = sext i32 %16 to i64
  %17 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %17, i64 %idxprom20
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %op0, align 8
  br label %if.end.68

if.else:                                          ; preds = %land.lhs.true.14, %land.lhs.true.10, %land.lhs.true, %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load22 = load i32, i32* %20, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 61
  br i1 %cmp24, label %land.lhs.true.26, label %if.else.46

land.lhs.true.26:                                 ; preds = %if.else
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %22 = load i32, i32* %rtuint29, align 4
  store i32 %22, i32* %regno, align 4
  %cmp30 = icmp sge i32 %22, 53
  br i1 %cmp30, label %land.lhs.true.32, label %if.else.46

land.lhs.true.32:                                 ; preds = %land.lhs.true.26
  %23 = load i32, i32* %regno, align 4
  %idxprom33 = sext i32 %23 to i64
  %24 = load i16*, i16** @reg_renumber, align 8
  %arrayidx34 = getelementptr inbounds i16, i16* %24, i64 %idxprom33
  %25 = load i16, i16* %arrayidx34, align 2
  %conv35 = sext i16 %25 to i32
  %cmp36 = icmp slt i32 %conv35, 0
  br i1 %cmp36, label %land.lhs.true.38, label %if.else.46

land.lhs.true.38:                                 ; preds = %land.lhs.true.32
  %26 = load i32, i32* %regno, align 4
  %idxprom39 = sext i32 %26 to i64
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx40 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom39
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8
  %cmp41 = icmp ne %struct.rtx_def* %28, null
  br i1 %cmp41, label %if.then.43, label %if.else.46

if.then.43:                                       ; preds = %land.lhs.true.38
  %29 = load i32, i32* %regno, align 4
  %idxprom44 = sext i32 %29 to i64
  %30 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8
  %arrayidx45 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %30, i64 %idxprom44
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx45, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %op1, align 8
  br label %if.end.67

if.else.46:                                       ; preds = %land.lhs.true.38, %land.lhs.true.32, %land.lhs.true.26, %if.else
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load47 = load i32, i32* %33, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 75
  br i1 %cmp49, label %land.lhs.true.51, label %if.else.55

land.lhs.true.51:                                 ; preds = %if.else.46
  %34 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call = call %struct.rtx_def* @subst_indexed_address(%struct.rtx_def* %34)
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %cmp52 = icmp ne %struct.rtx_def* %call, %35
  br i1 %cmp52, label %if.then.54, label %if.else.55

if.then.54:                                       ; preds = %land.lhs.true.51
  %36 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %36, %struct.rtx_def** %op0, align 8
  br label %if.end.66

if.else.55:                                       ; preds = %land.lhs.true.51, %if.else.46
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load56 = load i32, i32* %38, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 75
  br i1 %cmp58, label %land.lhs.true.60, label %if.else.65

land.lhs.true.60:                                 ; preds = %if.else.55
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call61 = call %struct.rtx_def* @subst_indexed_address(%struct.rtx_def* %39)
  store %struct.rtx_def* %call61, %struct.rtx_def** %tem, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %cmp62 = icmp ne %struct.rtx_def* %call61, %40
  br i1 %cmp62, label %if.then.64, label %if.else.65

if.then.64:                                       ; preds = %land.lhs.true.60
  %41 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  store %struct.rtx_def* %41, %struct.rtx_def** %op1, align 8
  br label %if.end

if.else.65:                                       ; preds = %land.lhs.true.60, %if.else.55
  %42 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  store %struct.rtx_def* %42, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %if.then.64
  br label %if.end.66

if.end.66:                                        ; preds = %if.end, %if.then.54
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %if.then.43
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.then.19
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load69 = load i32, i32* %44, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 75
  br i1 %cmp71, label %if.then.73, label %if.else.80

if.then.73:                                       ; preds = %if.end.68
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 1
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx76, align 8
  store %struct.rtx_def* %46, %struct.rtx_def** %op2, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i32 0, i64 0
  %rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx79, align 8
  store %struct.rtx_def* %48, %struct.rtx_def** %op1, align 8
  br label %if.end.93

if.else.80:                                       ; preds = %if.end.68
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load81 = load i32, i32* %50, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 75
  br i1 %cmp83, label %if.then.85, label %if.end.92

if.then.85:                                       ; preds = %if.else.80
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  store %struct.rtx_def* %51, %struct.rtx_def** %op2, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 1
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  store %struct.rtx_def* %53, %struct.rtx_def** %op1, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %op0, align 8
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.85, %if.else.80
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.then.73
  %56 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8
  %cmp94 = icmp ne %struct.rtx_def* %56, null
  br i1 %cmp94, label %if.then.96, label %if.end.98

if.then.96:                                       ; preds = %if.end.93
  %57 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8
  %call97 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %57, %struct.rtx_def* %58)
  store %struct.rtx_def* %call97, %struct.rtx_def** %op1, align 8
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.96, %if.end.93
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %cmp99 = icmp ne %struct.rtx_def* %59, null
  br i1 %cmp99, label %if.then.101, label %if.end.103

if.then.101:                                      ; preds = %if.end.98
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call102 = call %struct.rtx_def* @form_sum(%struct.rtx_def* %60, %struct.rtx_def* %61)
  store %struct.rtx_def* %call102, %struct.rtx_def** %op0, align 8
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.101, %if.end.98
  %62 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  store %struct.rtx_def* %62, %struct.rtx_def** %retval
  br label %return

if.end.104:                                       ; preds = %entry
  %63 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  store %struct.rtx_def* %63, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.104, %if.end.103, %if.else.65
  %64 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %64
}

; Function Attrs: nounwind uwtable
define internal void @update_auto_inc_notes(%struct.rtx_def* %insn, i32 %regno, i32 %reloadnum) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %reloadnum.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  ret void
}

declare i32 @memory_operand(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @find_inc_amount(%struct.rtx_def* %x, %struct.rtx_def* %inced) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %inced.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %addr = alloca %struct.rtx_def*, align 8
  %tem = alloca i32, align 4
  %j = alloca i32, align 4
  %tem120 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %inced, %struct.rtx_def** %inced.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %2, 66
  br i1 %cmp, label %if.then, label %if.end.82

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %4, %struct.rtx_def** %addr, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load1 = load i32, i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 96
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load4 = load i32, i32* %8, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 98
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load8 = load i32, i32* %10, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 97
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %lor.lhs.false.7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load12 = load i32, i32* %12, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 99
  br i1 %cmp14, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false.11, %lor.lhs.false.7, %lor.lhs.false, %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx17, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %inced.addr, align 8
  %cmp18 = icmp eq %struct.rtx_def* %14, %15
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %land.lhs.true
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load20 = load i32, i32* %17, align 8
  %bf.lshr = lshr i32 %bf.load20, 16
  %bf.clear21 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear21 to i64
  %arrayidx22 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %18 = load i8, i8* %arrayidx22, align 1
  %conv = zext i8 %18 to i32
  store i32 %conv, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.11
  %19 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load23 = load i32, i32* %20, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 100
  br i1 %cmp25, label %land.lhs.true.32, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %if.else
  %21 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load28 = load i32, i32* %22, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 101
  br i1 %cmp30, label %land.lhs.true.32, label %if.end

land.lhs.true.32:                                 ; preds = %lor.lhs.false.27, %if.else
  %23 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 1
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx35, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load36 = load i32, i32* %25, align 8
  %bf.clear37 = and i32 %bf.load36, 65535
  %cmp38 = icmp eq i32 %bf.clear37, 75
  br i1 %cmp38, label %land.lhs.true.40, label %if.end

land.lhs.true.40:                                 ; preds = %land.lhs.true.32
  %26 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx43, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i32 0, i64 1
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx46, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 0
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %cmp50 = icmp eq %struct.rtx_def* %27, %30
  br i1 %cmp50, label %land.lhs.true.52, label %if.end

land.lhs.true.52:                                 ; preds = %land.lhs.true.40
  %31 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %inced.addr, align 8
  %cmp56 = icmp eq %struct.rtx_def* %32, %33
  br i1 %cmp56, label %land.lhs.true.58, label %if.end

land.lhs.true.58:                                 ; preds = %land.lhs.true.52
  %34 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 1
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx64, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load65 = load i32, i32* %37, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 54
  br i1 %cmp67, label %if.then.69, label %if.end

if.then.69:                                       ; preds = %land.lhs.true.58
  %38 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 1
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx72, align 8
  %fld73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i32 0, i64 1
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx75, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx77 to i64*
  %41 = load i64, i64* %rtwint, align 8
  %conv78 = trunc i64 %41 to i32
  store i32 %conv78, i32* %i, align 4
  %42 = load i32, i32* %i, align 4
  %cmp79 = icmp slt i32 %42, 0
  br i1 %cmp79, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.69
  %43 = load i32, i32* %i, align 4
  %sub = sub nsw i32 0, %43
  br label %cond.end

cond.false:                                       ; preds = %if.then.69
  %44 = load i32, i32* %i, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %44, %cond.false ]
  store i32 %cond, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.58, %land.lhs.true.52, %land.lhs.true.40, %land.lhs.true.32, %lor.lhs.false.27
  br label %if.end.81

if.end.81:                                        ; preds = %if.end
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %entry
  %45 = load i32, i32* %code, align 4
  %idxprom83 = sext i32 %45 to i64
  %arrayidx84 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom83
  %46 = load i8*, i8** %arrayidx84, align 8
  store i8* %46, i8** %fmt, align 8
  %47 = load i32, i32* %code, align 4
  %idxprom85 = sext i32 %47 to i64
  %arrayidx86 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom85
  %48 = load i8, i8* %arrayidx86, align 1
  %conv87 = zext i8 %48 to i32
  %sub88 = sub nsw i32 %conv87, 1
  store i32 %sub88, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.133, %if.end.82
  %49 = load i32, i32* %i, align 4
  %cmp89 = icmp sge i32 %49, 0
  br i1 %cmp89, label %for.body, label %for.end.135

for.body:                                         ; preds = %for.cond
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %51 = load i8*, i8** %fmt, align 8
  %arrayidx92 = getelementptr inbounds i8, i8* %51, i64 %idxprom91
  %52 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %52 to i32
  %cmp94 = icmp eq i32 %conv93, 101
  br i1 %cmp94, label %if.then.96, label %if.end.105

if.then.96:                                       ; preds = %for.body
  %53 = load i32, i32* %i, align 4
  %idxprom97 = sext i32 %53 to i64
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i32 0, i64 %idxprom97
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rtx100, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %inced.addr, align 8
  %call = call i32 @find_inc_amount(%struct.rtx_def* %55, %struct.rtx_def* %56)
  store i32 %call, i32* %tem, align 4
  %57 = load i32, i32* %tem, align 4
  %cmp101 = icmp ne i32 %57, 0
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.then.96
  %58 = load i32, i32* %tem, align 4
  store i32 %58, i32* %retval
  br label %return

if.end.104:                                       ; preds = %if.then.96
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %for.body
  %59 = load i32, i32* %i, align 4
  %idxprom106 = sext i32 %59 to i64
  %60 = load i8*, i8** %fmt, align 8
  %arrayidx107 = getelementptr inbounds i8, i8* %60, i64 %idxprom106
  %61 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %61 to i32
  %cmp109 = icmp eq i32 %conv108, 69
  br i1 %cmp109, label %if.then.111, label %if.end.132

if.then.111:                                      ; preds = %if.end.105
  %62 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %62 to i64
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 %idxprom112
  %rtvec = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtvec_def**
  %64 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %64, i32 0, i32 0
  %65 = load i32, i32* %num_elem, align 4
  %sub115 = sub nsw i32 %65, 1
  store i32 %sub115, i32* %j, align 4
  br label %for.cond.116

for.cond.116:                                     ; preds = %for.inc, %if.then.111
  %66 = load i32, i32* %j, align 4
  %cmp117 = icmp sge i32 %66, 0
  br i1 %cmp117, label %for.body.119, label %for.end

for.body.119:                                     ; preds = %for.cond.116
  %67 = load i32, i32* %j, align 4
  %idxprom121 = sext i32 %67 to i64
  %68 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %68 to i64
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 %idxprom122
  %rtvec125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtvec_def**
  %70 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec125, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %70, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom121
  %71 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx126, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %inced.addr, align 8
  %call127 = call i32 @find_inc_amount(%struct.rtx_def* %71, %struct.rtx_def* %72)
  store i32 %call127, i32* %tem120, align 4
  %73 = load i32, i32* %tem120, align 4
  %cmp128 = icmp ne i32 %73, 0
  br i1 %cmp128, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %for.body.119
  %74 = load i32, i32* %tem120, align 4
  store i32 %74, i32* %retval
  br label %return

if.end.131:                                       ; preds = %for.body.119
  br label %for.inc

for.inc:                                          ; preds = %if.end.131
  %75 = load i32, i32* %j, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.116

for.end:                                          ; preds = %for.cond.116
  br label %if.end.132

if.end.132:                                       ; preds = %for.end, %if.end.105
  br label %for.inc.133

for.inc.133:                                      ; preds = %if.end.132
  %76 = load i32, i32* %i, align 4
  %dec134 = add nsw i32 %76, -1
  store i32 %dec134, i32* %i, align 4
  br label %for.cond

for.end.135:                                      ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end.135, %if.then.130, %if.then.103, %cond.end, %if.then.19
  %77 = load i32, i32* %retval
  ret i32 %77
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
