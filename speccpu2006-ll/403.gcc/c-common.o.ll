; ModuleID = 'c-common.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.fname_var_t = type { %union.tree_node**, i32, i32 }
%struct.if_elt = type { i32, i32, i8*, i32, %union.tree_node* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.disabled_builtin = type { i8*, %struct.disabled_builtin* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.cpp_reader = type opaque
%struct.diagnostic_context = type { %struct.output_buffer, i8*, [1 x %struct.__va_list_tag]*, i8*, i32, i32, void (%struct.output_buffer*, %struct.diagnostic_context*)*, void (%struct.output_buffer*, %struct.diagnostic_context*)*, i8* }
%struct.output_buffer = type { %struct.output_state, %struct._IO_FILE*, %struct.obstack, i32, [128 x i8], i32 (%struct.output_buffer*)* }
%struct.output_state = type { i8*, i32, i32, i32, i8, i8, i32, i8*, [1 x %struct.__va_list_tag]*, [7 x i32] }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tlist = type { %struct.tlist*, %union.tree_node*, %union.tree_node* }
%struct.tlist_cache = type { %struct.tlist_cache*, %struct.tlist*, %struct.tlist*, %union.tree_node* }
%struct.tree_exp = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.stmt_tree_s = type { %union.tree_node*, %union.tree_node*, i8*, i32 }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.rtx_def*, %struct.anon }
%struct.anon = type { i64, i64 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i32, i8* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.tree_string = type { %struct.tree_common, %struct.rtx_def*, i32, i8* }
%struct.tree_complex = type { %struct.tree_common, %struct.rtx_def*, %union.tree_node*, %union.tree_node* }
%struct.anon.0 = type { i32 }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.c_lang_decl = type { i8, [3 x i8] }
%struct.language_function = type { %struct.stmt_tree_s, %union.tree_node* }

@warn_div_by_zero = global i32 1, align 4
@c_global_trees = common global [32 x %union.tree_node*] zeroinitializer, align 16
@fname_vars = constant [4 x %struct.fname_var_t] [%struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 232) to %union.tree_node**), i32 64, i32 0 }, %struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 216) to %union.tree_node**), i32 62, i32 0 }, %struct.fname_var_t { %union.tree_node** bitcast (i8* getelementptr (i8, i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 224) to %union.tree_node**), i32 63, i32 1 }, %struct.fname_var_t zeroinitializer], align 16
@if_stack_space = internal global i32 0, align 4
@if_stack = internal global %struct.if_elt* null, align 8
@if_stack_pointer = internal global i32 0, align 4
@input_filename = external global i8*, align 8
@lineno = external global i32, align 4
@.str = private unnamed_addr constant [50 x i8] c"suggest explicit braces to avoid ambiguous `else'\00", align 1
@warn_parentheses = external global i32, align 4
@current_function_decl = external global %union.tree_node*, align 8
@decl_printable_name = external global i8* (%union.tree_node*, i32)*, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"top level\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@make_fname_decl = common global %union.tree_node* (%union.tree_node*, i32)* null, align 8
@.str.3 = private unnamed_addr constant [46 x i8] c"`%s' is not defined outside of function scope\00", align 1
@flag_isoc99 = external global i32, align 4
@in_system_header = external global i32, align 4
@.str.4 = private unnamed_addr constant [65 x i8] c"concatenation of string literals with __FUNCTION__ is deprecated\00", align 1
@pedantic = external global i32, align 4
@c_language = common global i32 0, align 4
@.str.5 = private unnamed_addr constant [93 x i8] c"string length `%d' is greater than the length `%d' ISO C%d compilers are required to support\00", align 1
@flag_const_strings = external global i32, align 4
@flag_traditional = external global i32, align 4
@flag_writable_strings = external global i32, align 4
@integer_types = external global [11 x %union.tree_node*], align 16
@.str.6 = private unnamed_addr constant [32 x i8] c"overflow in constant expression\00", align 1
@skip_evaluation = common global i32 0, align 4
@.str.7 = private unnamed_addr constant [31 x i8] c"integer overflow in expression\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"floating point overflow in expression\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"vector overflow in expression\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"large integer implicitly truncated to unsigned type\00", align 1
@warn_conversion = external global i32, align 4
@.str.11 = private unnamed_addr constant [55 x i8] c"negative integer implicitly converted to unsigned type\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"overflow in implicit constant conversion\00", align 1
@warn_sequence_point = common global i32 0, align 4
@global_trees = external global [51 x %union.tree_node*], align 16
@.str.13 = private unnamed_addr constant [41 x i8] c"expression statement has incomplete type\00", align 1
@.str.14 = private unnamed_addr constant [50 x i8] c"case label does not reduce to an integer constant\00", align 1
@target_flags = external global i32, align 4
@.str.15 = private unnamed_addr constant [31 x i8] c"invalid truth-value expression\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"invalid operands to binary %s\00", align 1
@.str.39 = private unnamed_addr constant [61 x i8] c"comparison is always false due to limited range of data type\00", align 1
@.str.40 = private unnamed_addr constant [60 x i8] c"comparison is always true due to limited range of data type\00", align 1
@extra_warnings = external global i32, align 4
@.str.41 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression >= 0 is always true\00", align 1
@.str.42 = private unnamed_addr constant [54 x i8] c"comparison of unsigned expression < 0 is always false\00", align 1
@warn_pointer_arith = external global i32, align 4
@.str.43 = private unnamed_addr constant [44 x i8] c"pointer of type `void *' used in arithmetic\00", align 1
@.str.44 = private unnamed_addr constant [41 x i8] c"pointer to a function used in arithmetic\00", align 1
@.str.45 = private unnamed_addr constant [46 x i8] c"pointer to member function used in arithmetic\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"pointer to a member used in arithmetic\00", align 1
@sizetype_tab = external global [6 x %union.tree_node*], align 16
@tree_code_type = external global [256 x i8], align 16
@.str.47 = private unnamed_addr constant [58 x i8] c"suggest parentheses around assignment used as truth value\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"invalid use of `restrict'\00", align 1
@flag_strict_aliasing = external global i32, align 4
@.str.49 = private unnamed_addr constant [42 x i8] c"__alignof__ applied to an incomplete type\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"`__alignof' applied to a bit-field\00", align 1
@c_format_attribute_table = internal constant [3 x %struct.attribute_spec] [%struct.attribute_spec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i32 3, i32 3, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_format_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.203, i32 0, i32 0), i32 1, i32 1, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @handle_format_arg_attribute }, %struct.attribute_spec zeroinitializer], align 16
@format_attribute_table = external global %struct.attribute_spec*, align 8
@.str.51 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"long int\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"long unsigned int\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"long long int\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"long long unsigned int\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"long long unsigned\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"short int\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"short unsigned int\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"signed char\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"unsigned char\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"__int128_t\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"__uint128_t\00", align 1
@flag_short_double = common global i32 0, align 4
@.str.66 = private unnamed_addr constant [12 x i8] c"long double\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"complex int\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"complex float\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"complex double\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"complex long double\00", align 1
@targetm = external global %struct.gcc_target, align 8
@flag_short_wchar = common global i32 0, align 4
@.str.71 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"__builtin_va_list\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"__builtin_ptrdiff_t\00", align 1
@.str.75 = private unnamed_addr constant [17 x i8] c"__builtin_size_t\00", align 1
@ptr_mode = external global i32, align 4
@.str.76 = private unnamed_addr constant [17 x i8] c"__builtin_alloca\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"./builtins.def\00", align 1
@__FUNCTION__.c_common_nodes_and_builtins = private unnamed_addr constant [28 x i8] c"c_common_nodes_and_builtins\00", align 1
@built_in_decls = external global [95 x %union.tree_node*], align 16
@.str.79 = private unnamed_addr constant [14 x i8] c"__builtin_abs\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"__builtin_labs\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"__builtin_fabs\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c"__builtin_fabsf\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"__builtin_fabsl\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"__builtin_llabs\00", align 1
@.str.85 = private unnamed_addr constant [18 x i8] c"__builtin_imaxabs\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"__builtin_conj\00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"__builtin_conjf\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"__builtin_conjl\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"__builtin_creal\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"__builtin_crealf\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"__builtin_creall\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"__builtin_cimag\00", align 1
@.str.93 = private unnamed_addr constant [17 x i8] c"__builtin_cimagf\00", align 1
@.str.94 = private unnamed_addr constant [17 x i8] c"__builtin_cimagl\00", align 1
@.str.95 = private unnamed_addr constant [16 x i8] c"__builtin_bzero\00", align 1
@.str.96 = private unnamed_addr constant [15 x i8] c"__builtin_bcmp\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"__builtin_ffs\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"__builtin_index\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"__builtin_rindex\00", align 1
@.str.100 = private unnamed_addr constant [17 x i8] c"__builtin_memcpy\00", align 1
@.str.101 = private unnamed_addr constant [17 x i8] c"__builtin_memcmp\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"__builtin_memset\00", align 1
@.str.103 = private unnamed_addr constant [17 x i8] c"__builtin_strcat\00", align 1
@.str.104 = private unnamed_addr constant [18 x i8] c"__builtin_strncat\00", align 1
@.str.105 = private unnamed_addr constant [17 x i8] c"__builtin_strcpy\00", align 1
@.str.106 = private unnamed_addr constant [18 x i8] c"__builtin_strncpy\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"__builtin_strcmp\00", align 1
@.str.108 = private unnamed_addr constant [18 x i8] c"__builtin_strncmp\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"__builtin_strlen\00", align 1
@.str.110 = private unnamed_addr constant [17 x i8] c"__builtin_strstr\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"__builtin_strpbrk\00", align 1
@.str.112 = private unnamed_addr constant [17 x i8] c"__builtin_strspn\00", align 1
@.str.113 = private unnamed_addr constant [18 x i8] c"__builtin_strcspn\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"__builtin_strchr\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"__builtin_strrchr\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"__builtin_sqrt\00", align 1
@.str.117 = private unnamed_addr constant [14 x i8] c"__builtin_sin\00", align 1
@.str.118 = private unnamed_addr constant [14 x i8] c"__builtin_cos\00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtf\00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"__builtin_sinf\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"__builtin_cosf\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"__builtin_sqrtl\00", align 1
@.str.123 = private unnamed_addr constant [15 x i8] c"__builtin_sinl\00", align 1
@.str.124 = private unnamed_addr constant [15 x i8] c"__builtin_cosl\00", align 1
@.str.125 = private unnamed_addr constant [19 x i8] c"__builtin_saveregs\00", align 1
@.str.126 = private unnamed_addr constant [24 x i8] c"__builtin_classify_type\00", align 1
@.str.127 = private unnamed_addr constant [19 x i8] c"__builtin_next_arg\00", align 1
@.str.128 = private unnamed_addr constant [20 x i8] c"__builtin_args_info\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"__builtin_constant_p\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"__builtin_frame_address\00", align 1
@.str.131 = private unnamed_addr constant [25 x i8] c"__builtin_return_address\00", align 1
@.str.132 = private unnamed_addr constant [37 x i8] c"__builtin_aggregate_incoming_address\00", align 1
@.str.133 = private unnamed_addr constant [21 x i8] c"__builtin_apply_args\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c"__builtin_apply\00", align 1
@.str.135 = private unnamed_addr constant [17 x i8] c"__builtin_return\00", align 1
@.str.136 = private unnamed_addr constant [17 x i8] c"__builtin_setjmp\00", align 1
@.str.137 = private unnamed_addr constant [18 x i8] c"__builtin_longjmp\00", align 1
@.str.138 = private unnamed_addr constant [15 x i8] c"__builtin_trap\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"__builtin_prefetch\00", align 1
@.str.140 = private unnamed_addr constant [18 x i8] c"__builtin_putchar\00", align 1
@.str.141 = private unnamed_addr constant [15 x i8] c"__builtin_puts\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"__builtin_printf\00", align 1
@.str.143 = private unnamed_addr constant [16 x i8] c"__builtin_fputc\00", align 1
@.str.144 = private unnamed_addr constant [16 x i8] c"__builtin_fputs\00", align 1
@.str.145 = private unnamed_addr constant [17 x i8] c"__builtin_fwrite\00", align 1
@.str.146 = private unnamed_addr constant [18 x i8] c"__builtin_fprintf\00", align 1
@.str.147 = private unnamed_addr constant [27 x i8] c"__builtin_putchar_unlocked\00", align 1
@.str.148 = private unnamed_addr constant [24 x i8] c"__builtin_puts_unlocked\00", align 1
@.str.149 = private unnamed_addr constant [26 x i8] c"__builtin_printf_unlocked\00", align 1
@.str.150 = private unnamed_addr constant [25 x i8] c"__builtin_fputc_unlocked\00", align 1
@.str.151 = private unnamed_addr constant [25 x i8] c"__builtin_fputs_unlocked\00", align 1
@.str.152 = private unnamed_addr constant [26 x i8] c"__builtin_fwrite_unlocked\00", align 1
@.str.153 = private unnamed_addr constant [27 x i8] c"__builtin_fprintf_unlocked\00", align 1
@.str.154 = private unnamed_addr constant [20 x i8] c"__builtin_isgreater\00", align 1
@.str.155 = private unnamed_addr constant [25 x i8] c"__builtin_isgreaterequal\00", align 1
@.str.156 = private unnamed_addr constant [17 x i8] c"__builtin_isless\00", align 1
@.str.157 = private unnamed_addr constant [22 x i8] c"__builtin_islessequal\00", align 1
@.str.158 = private unnamed_addr constant [24 x i8] c"__builtin_islessgreater\00", align 1
@.str.159 = private unnamed_addr constant [22 x i8] c"__builtin_isunordered\00", align 1
@.str.160 = private unnamed_addr constant [22 x i8] c"__builtin_unwind_init\00", align 1
@.str.161 = private unnamed_addr constant [20 x i8] c"__builtin_dwarf_cfa\00", align 1
@.str.162 = private unnamed_addr constant [26 x i8] c"__builtin_dwarf_fp_regnum\00", align 1
@.str.163 = private unnamed_addr constant [36 x i8] c"__builtin_init_dwarf_reg_size_table\00", align 1
@.str.164 = private unnamed_addr constant [27 x i8] c"__builtin_frob_return_addr\00", align 1
@.str.165 = private unnamed_addr constant [30 x i8] c"__builtin_extract_return_addr\00", align 1
@.str.166 = private unnamed_addr constant [20 x i8] c"__builtin_eh_return\00", align 1
@.str.167 = private unnamed_addr constant [31 x i8] c"__builtin_eh_return_data_regno\00", align 1
@.str.168 = private unnamed_addr constant [24 x i8] c"__builtin_varargs_start\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"__builtin_stdarg_start\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"__builtin_va_end\00", align 1
@.str.171 = private unnamed_addr constant [18 x i8] c"__builtin_va_copy\00", align 1
@.str.172 = private unnamed_addr constant [17 x i8] c"__builtin_expect\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"_exit\00", align 1
@.str.174 = private unnamed_addr constant [6 x i8] c"_Exit\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@lang_type_promotes_to = external global %union.tree_node* (%union.tree_node*)*, align 8
@.str.178 = private unnamed_addr constant [38 x i8] c"cannot disable built-in function `%s'\00", align 1
@disabled_builtins = internal global %struct.disabled_builtin* null, align 8
@.str.179 = private unnamed_addr constant [35 x i8] c"too few arguments to function `%s'\00", align 1
@.str.180 = private unnamed_addr constant [36 x i8] c"too many arguments to function `%s'\00", align 1
@lang_statement_code_p = common global i32 (i32)* null, align 8
@tree_code_length = external global [256 x i32], align 16
@.str.181 = private unnamed_addr constant [42 x i8] c"pointers are not permitted as case values\00", align 1
@.str.182 = private unnamed_addr constant [55 x i8] c"ISO C++ forbids range expressions in switch statements\00", align 1
@.str.183 = private unnamed_addr constant [53 x i8] c"ISO C forbids range expressions in switch statements\00", align 1
@.str.184 = private unnamed_addr constant [22 x i8] c"empty range specified\00", align 1
@.str.185 = private unnamed_addr constant [38 x i8] c"duplicate (or overlapping) case value\00", align 1
@.str.186 = private unnamed_addr constant [47 x i8] c"this is the first entry overlapping that value\00", align 1
@.str.187 = private unnamed_addr constant [21 x i8] c"duplicate case value\00", align 1
@.str.188 = private unnamed_addr constant [21 x i8] c"previously used here\00", align 1
@.str.189 = private unnamed_addr constant [38 x i8] c"multiple default labels in one switch\00", align 1
@.str.190 = private unnamed_addr constant [32 x i8] c"this is the first default label\00", align 1
@.str.191 = private unnamed_addr constant [46 x i8] c"ISO C++ forbids taking the address of a label\00", align 1
@.str.192 = private unnamed_addr constant [44 x i8] c"ISO C forbids taking the address of a label\00", align 1
@ggc_pending_trees = external global %struct.varray_head_tag*, align 8
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@.str.193 = private unnamed_addr constant [11 x i8] c"c-common.c\00", align 1
@__FUNCTION__.c_expand_expr = private unnamed_addr constant [14 x i8] c"c_expand_expr\00", align 1
@c_tree_code_type = internal constant [25 x i8] c"xx1e1eeeeeeeeeeeeeeeeeeee", align 16
@c_tree_code_length = internal constant [25 x i32] [i32 0, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 4, i32 2, i32 2, i32 1, i32 0, i32 0, i32 3, i32 1, i32 1, i32 5, i32 1, i32 1, i32 3, i32 1, i32 1, i32 2], align 16
@tree_code_name = external global [256 x i8*], align 16
@c_tree_code_name = internal constant [25 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.228, i32 0, i32 0)], align 16
@lang_unsafe_for_reeval = external global i32 (%union.tree_node*)*, align 8
@__FUNCTION__.boolean_increment = private unnamed_addr constant [18 x i8] c"boolean_increment\00", align 1
@parse_in = common global %struct.cpp_reader* null, align 8
@flag_bounds_check = external global i32, align 4
@flag_inline_trees = external global i32, align 4
@flag_instrument_function_entry_exit = external global i32, align 4
@flag_no_inline = external global i32, align 4
@flag_inline_functions = external global i32, align 4
@flag_bounded_pointers = external global i32, align 4
@warn_format_y2k = external global i32, align 4
@warn_format = external global i32, align 4
@.str.194 = private unnamed_addr constant [38 x i8] c"-Wformat-y2k ignored without -Wformat\00", align 1
@warn_format_extra_args = external global i32, align 4
@.str.195 = private unnamed_addr constant [45 x i8] c"-Wformat-extra-args ignored without -Wformat\00", align 1
@warn_format_nonliteral = external global i32, align 4
@.str.196 = private unnamed_addr constant [45 x i8] c"-Wformat-nonliteral ignored without -Wformat\00", align 1
@warn_format_security = external global i32, align 4
@.str.197 = private unnamed_addr constant [43 x i8] c"-Wformat-security ignored without -Wformat\00", align 1
@warn_missing_format_attribute = external global i32, align 4
@.str.198 = private unnamed_addr constant [52 x i8] c"-Wmissing-format-attribute ignored without -Wformat\00", align 1
@global_dc = external global %struct.diagnostic_context*, align 8
@c_attrs_initialized = internal global i8 0, align 1
@built_in_attributes = internal global [74 x %union.tree_node*] zeroinitializer, align 16
@flag_hosted = external global i32, align 4
@flag_noniso_default_format_attributes = external global i32, align 4
@.str.199 = private unnamed_addr constant [31 x i8] c"declaration of `%s' shadows %s\00", align 1
@.str.200 = private unnamed_addr constant [29 x i8] c"shadowed declaration is here\00", align 1
@flag_no_builtin = common global i32 0, align 4
@flag_no_nonansi_builtin = common global i32 0, align 4
@ridpointers = common global %union.tree_node** null, align 8
@lang_expand_function_end = common global void ()* null, align 8
@warned_ids = internal global %struct.tlist* null, align 8
@save_expr_cache = internal global %struct.tlist_cache* null, align 8
@tlist_firstobj = internal global i8* null, align 8
@tlist_obstack = internal global %struct.obstack zeroinitializer, align 8
@.str.201 = private unnamed_addr constant [35 x i8] c"operation on `%s' may be undefined\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.203 = private unnamed_addr constant [11 x i8] c"format_arg\00", align 1
@.str.204 = private unnamed_addr constant [8 x i8] c"@@dummy\00", align 1
@.str.205 = private unnamed_addr constant [7 x i8] c"srcloc\00", align 1
@.str.206 = private unnamed_addr constant [12 x i8] c"sizeof_expr\00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c"arrow_expr\00", align 1
@.str.208 = private unnamed_addr constant [13 x i8] c"alignof_expr\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"expr_stmt\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"compound_stmt\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"decl_stmt\00", align 1
@.str.212 = private unnamed_addr constant [8 x i8] c"if_stmt\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"for_stmt\00", align 1
@.str.214 = private unnamed_addr constant [11 x i8] c"while_stmt\00", align 1
@.str.215 = private unnamed_addr constant [8 x i8] c"do_stmt\00", align 1
@.str.216 = private unnamed_addr constant [12 x i8] c"return_stmt\00", align 1
@.str.217 = private unnamed_addr constant [11 x i8] c"break_stmt\00", align 1
@.str.218 = private unnamed_addr constant [14 x i8] c"continue_stmt\00", align 1
@.str.219 = private unnamed_addr constant [12 x i8] c"switch_stmt\00", align 1
@.str.220 = private unnamed_addr constant [10 x i8] c"goto_stmt\00", align 1
@.str.221 = private unnamed_addr constant [11 x i8] c"label_stmt\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"asm_stmt\00", align 1
@.str.223 = private unnamed_addr constant [11 x i8] c"scope_stmt\00", align 1
@.str.224 = private unnamed_addr constant [10 x i8] c"file_stmt\00", align 1
@.str.225 = private unnamed_addr constant [11 x i8] c"case_label\00", align 1
@.str.226 = private unnamed_addr constant [10 x i8] c"stmt_expr\00", align 1
@.str.227 = private unnamed_addr constant [22 x i8] c"compound_literal_expr\00", align 1
@.str.228 = private unnamed_addr constant [13 x i8] c"cleanup_stmt\00", align 1
@optimize = external global i32, align 4
@.str.229 = private unnamed_addr constant [47 x i8] c"built-in function `%s' not currently supported\00", align 1
@.str.230 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.231 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.232 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.233 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.234 = private unnamed_addr constant [6 x i8] c"scanf\00", align 1
@.str.235 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.236 = private unnamed_addr constant [8 x i8] c"strfmon\00", align 1
@.str.237 = private unnamed_addr constant [8 x i8] c"fprintf\00", align 1
@.str.238 = private unnamed_addr constant [8 x i8] c"sprintf\00", align 1
@.str.239 = private unnamed_addr constant [7 x i8] c"fscanf\00", align 1
@.str.240 = private unnamed_addr constant [7 x i8] c"sscanf\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c"vprintf\00", align 1
@.str.242 = private unnamed_addr constant [9 x i8] c"vfprintf\00", align 1
@.str.243 = private unnamed_addr constant [9 x i8] c"vsprintf\00", align 1
@.str.244 = private unnamed_addr constant [9 x i8] c"snprintf\00", align 1
@.str.245 = private unnamed_addr constant [10 x i8] c"vsnprintf\00", align 1
@.str.246 = private unnamed_addr constant [7 x i8] c"vscanf\00", align 1
@.str.247 = private unnamed_addr constant [8 x i8] c"vfscanf\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"vsscanf\00", align 1
@.str.249 = private unnamed_addr constant [8 x i8] c"gettext\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"dgettext\00", align 1
@.str.251 = private unnamed_addr constant [10 x i8] c"dcgettext\00", align 1
@.str.252 = private unnamed_addr constant [16 x i8] c"printf_unlocked\00", align 1
@.str.253 = private unnamed_addr constant [17 x i8] c"fprintf_unlocked\00", align 1

; Function Attrs: nounwind uwtable
define void @c_expand_start_cond(%union.tree_node* %cond, i32 %compstmt_count, %union.tree_node* %if_stmt) #0 {
entry:
  %cond.addr = alloca %union.tree_node*, align 8
  %compstmt_count.addr = alloca i32, align 4
  %if_stmt.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %cond, %union.tree_node** %cond.addr, align 8
  store i32 %compstmt_count, i32* %compstmt_count.addr, align 4
  store %union.tree_node* %if_stmt, %union.tree_node** %if_stmt.addr, align 8
  %0 = load i32, i32* @if_stack_space, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 10, i32* @if_stack_space, align 4
  %call = call noalias i8* @xmalloc(i64 320)
  %1 = bitcast i8* %call to %struct.if_elt*
  store %struct.if_elt* %1, %struct.if_elt** @if_stack, align 8
  br label %if.end.4

if.else:                                          ; preds = %entry
  %2 = load i32, i32* @if_stack_space, align 4
  %3 = load i32, i32* @if_stack_pointer, align 4
  %cmp1 = icmp eq i32 %2, %3
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.else
  %4 = load i32, i32* @if_stack_space, align 4
  %add = add nsw i32 %4, 10
  store i32 %add, i32* @if_stack_space, align 4
  %5 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %6 = bitcast %struct.if_elt* %5 to i8*
  %7 = load i32, i32* @if_stack_space, align 4
  %conv = sext i32 %7 to i64
  %mul = mul i64 %conv, 32
  %call3 = call i8* @xrealloc(i8* %6, i64 %mul)
  %8 = bitcast i8* %call3 to %struct.if_elt*
  store %struct.if_elt* %8, %struct.if_elt** @if_stack, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %9 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %if_stmt.addr, align 8
  %exp = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  store %union.tree_node* %9, %union.tree_node** %arrayidx, align 8
  %11 = load %union.tree_node*, %union.tree_node** %if_stmt.addr, align 8
  %call5 = call %union.tree_node* @add_stmt(%union.tree_node* %11)
  %12 = load i32, i32* %compstmt_count.addr, align 4
  %13 = load i32, i32* @if_stack_pointer, align 4
  %idxprom = sext i32 %13 to i64
  %14 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx6 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %14, i64 %idxprom
  %compstmt_count7 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx6, i32 0, i32 0
  store i32 %12, i32* %compstmt_count7, align 4
  %15 = load i8*, i8** @input_filename, align 8
  %16 = load i32, i32* @if_stack_pointer, align 4
  %idxprom8 = sext i32 %16 to i64
  %17 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx9 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %17, i64 %idxprom8
  %file = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx9, i32 0, i32 2
  store i8* %15, i8** %file, align 8
  %18 = load i32, i32* @lineno, align 4
  %19 = load i32, i32* @if_stack_pointer, align 4
  %idxprom10 = sext i32 %19 to i64
  %20 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx11 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %20, i64 %idxprom10
  %line = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx11, i32 0, i32 1
  store i32 %18, i32* %line, align 4
  %21 = load i32, i32* @if_stack_pointer, align 4
  %idxprom12 = sext i32 %21 to i64
  %22 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx13 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %22, i64 %idxprom12
  %needs_warning = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx13, i32 0, i32 3
  store i32 0, i32* %needs_warning, align 4
  %23 = load %union.tree_node*, %union.tree_node** %if_stmt.addr, align 8
  %24 = load i32, i32* @if_stack_pointer, align 4
  %idxprom14 = sext i32 %24 to i64
  %25 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx15 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %25, i64 %idxprom14
  %if_stmt16 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx15, i32 0, i32 4
  store %union.tree_node* %23, %union.tree_node** %if_stmt16, align 8
  %26 = load i32, i32* @if_stack_pointer, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* @if_stack_pointer, align 4
  ret void
}

declare noalias i8* @xmalloc(i64) #1

declare i8* @xrealloc(i8*, i64) #1

declare %union.tree_node* @add_stmt(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_finish_then() #0 {
entry:
  %if_stmt = alloca %union.tree_node*, align 8
  %0 = load i32, i32* @if_stack_pointer, align 4
  %sub = sub nsw i32 %0, 1
  %idxprom = sext i32 %sub to i64
  %1 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx = getelementptr inbounds %struct.if_elt, %struct.if_elt* %1, i64 %idxprom
  %if_stmt1 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx, i32 0, i32 4
  %2 = load %union.tree_node*, %union.tree_node** %if_stmt1, align 8
  store %union.tree_node* %2, %union.tree_node** %if_stmt, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %5 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx2 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  store %union.tree_node* %4, %union.tree_node** %arrayidx2, align 8
  %6 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %common3 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %chain4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain4, align 8
  %7 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %call = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i32 0, i32 0
  store %union.tree_node* %7, %union.tree_node** %x_last_stmt, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

declare %struct.stmt_tree_s* @current_stmt_tree() #1

; Function Attrs: nounwind uwtable
define void @c_expand_end_cond() #0 {
entry:
  %0 = load i32, i32* @if_stack_pointer, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @if_stack_pointer, align 4
  %1 = load i32, i32* @if_stack_pointer, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx = getelementptr inbounds %struct.if_elt, %struct.if_elt* %2, i64 %idxprom
  %needs_warning = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx, i32 0, i32 3
  %3 = load i32, i32* %needs_warning, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @if_stack_pointer, align 4
  %idxprom1 = sext i32 %4 to i64
  %5 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx2 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %5, i64 %idxprom1
  %file = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx2, i32 0, i32 2
  %6 = load i8*, i8** %file, align 8
  %7 = load i32, i32* @if_stack_pointer, align 4
  %idxprom3 = sext i32 %7 to i64
  %8 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx4 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %8, i64 %idxprom3
  %line = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx4, i32 0, i32 1
  %9 = load i32, i32* %line, align 4
  call void (i8*, i32, i8*, ...) @warning_with_file_and_line(i8* %6, i32 %9, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_expr_type = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i32 0, i32 1
  store %union.tree_node* null, %union.tree_node** %x_last_expr_type, align 8
  ret void
}

declare void @warning_with_file_and_line(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @c_expand_start_else() #0 {
entry:
  %0 = load i32, i32* @warn_parentheses, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @if_stack_pointer, align 4
  %cmp = icmp sgt i32 %1, 1
  br i1 %cmp, label %land.lhs.true.1, label %if.end

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %2 = load i32, i32* @if_stack_pointer, align 4
  %sub = sub nsw i32 %2, 1
  %idxprom = sext i32 %sub to i64
  %3 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx = getelementptr inbounds %struct.if_elt, %struct.if_elt* %3, i64 %idxprom
  %compstmt_count = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx, i32 0, i32 0
  %4 = load i32, i32* %compstmt_count, align 4
  %5 = load i32, i32* @if_stack_pointer, align 4
  %sub2 = sub nsw i32 %5, 2
  %idxprom3 = sext i32 %sub2 to i64
  %6 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx4 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %6, i64 %idxprom3
  %compstmt_count5 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx4, i32 0, i32 0
  %7 = load i32, i32* %compstmt_count5, align 4
  %cmp6 = icmp eq i32 %4, %7
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.1
  %8 = load i32, i32* @if_stack_pointer, align 4
  %sub7 = sub nsw i32 %8, 2
  %idxprom8 = sext i32 %sub7 to i64
  %9 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx9 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %9, i64 %idxprom8
  %needs_warning = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx9, i32 0, i32 3
  store i32 1, i32* %needs_warning, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.1, %land.lhs.true, %entry
  %10 = load i32, i32* @if_stack_pointer, align 4
  %sub10 = sub nsw i32 %10, 1
  %idxprom11 = sext i32 %sub10 to i64
  %11 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx12 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %11, i64 %idxprom11
  %needs_warning13 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx12, i32 0, i32 3
  store i32 0, i32* %needs_warning13, align 4
  %12 = load i32, i32* @if_stack_pointer, align 4
  %sub14 = sub nsw i32 %12, 1
  %idxprom15 = sext i32 %sub14 to i64
  %13 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx16 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %13, i64 %idxprom15
  %compstmt_count17 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx16, i32 0, i32 0
  %14 = load i32, i32* %compstmt_count17, align 4
  %dec = add nsw i32 %14, -1
  store i32 %dec, i32* %compstmt_count17, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_finish_else() #0 {
entry:
  %if_stmt = alloca %union.tree_node*, align 8
  %0 = load i32, i32* @if_stack_pointer, align 4
  %sub = sub nsw i32 %0, 1
  %idxprom = sext i32 %sub to i64
  %1 = load %struct.if_elt*, %struct.if_elt** @if_stack, align 8
  %arrayidx = getelementptr inbounds %struct.if_elt, %struct.if_elt* %1, i64 %idxprom
  %if_stmt1 = getelementptr inbounds %struct.if_elt, %struct.if_elt* %arrayidx, i32 0, i32 4
  %2 = load %union.tree_node*, %union.tree_node** %if_stmt1, align 8
  store %union.tree_node* %2, %union.tree_node** %if_stmt, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %5 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx2 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 2
  store %union.tree_node* %4, %union.tree_node** %arrayidx2, align 8
  %6 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %common3 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %chain4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain4, align 8
  %7 = load %union.tree_node*, %union.tree_node** %if_stmt, align 8
  %call = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i32 0, i32 0
  store %union.tree_node* %7, %union.tree_node** %x_last_stmt, align 8
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_begin_if_stmt() #0 {
entry:
  %r = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* (i32, ...) @build_stmt(i32 155, %union.tree_node* null, %union.tree_node* null, %union.tree_node* null)
  store %union.tree_node* %call, %union.tree_node** %r, align 8
  %0 = load %union.tree_node*, %union.tree_node** %r, align 8
  ret %union.tree_node* %0
}

declare %union.tree_node* @build_stmt(i32, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_begin_while_stmt() #0 {
entry:
  %r = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* (i32, ...) @build_stmt(i32 157, %union.tree_node* null, %union.tree_node* null)
  store %union.tree_node* %call, %union.tree_node** %r, align 8
  %0 = load %union.tree_node*, %union.tree_node** %r, align 8
  ret %union.tree_node* %0
}

; Function Attrs: nounwind uwtable
define void @c_finish_while_stmt_cond(%union.tree_node* %cond, %union.tree_node* %while_stmt) #0 {
entry:
  %cond.addr = alloca %union.tree_node*, align 8
  %while_stmt.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %cond, %union.tree_node** %cond.addr, align 8
  store %union.tree_node* %while_stmt, %union.tree_node** %while_stmt.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %while_stmt.addr, align 8
  %exp = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  store %union.tree_node* %0, %union.tree_node** %arrayidx, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @start_fname_decls() #0 {
entry:
  %ix = alloca i32, align 4
  %saved = alloca %union.tree_node*, align 8
  %decl1 = alloca %union.tree_node*, align 8
  store %union.tree_node* null, %union.tree_node** %saved, align 8
  store i32 0, i32* %ix, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ix, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom
  %decl = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx, i32 0, i32 0
  %1 = load %union.tree_node**, %union.tree_node*** %decl, align 8
  %tobool = icmp ne %union.tree_node** %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ix, align 4
  %idxprom2 = zext i32 %2 to i64
  %arrayidx3 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom2
  %decl4 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx3, i32 0, i32 0
  %3 = load %union.tree_node**, %union.tree_node*** %decl4, align 8
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8
  store %union.tree_node* %4, %union.tree_node** %decl1, align 8
  %5 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %tobool5 = icmp ne %union.tree_node* %5, null
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %6 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %7 = load i32, i32* %ix, align 4
  %conv = zext i32 %7 to i64
  %call = call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0)
  %8 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %call6 = call %union.tree_node* @tree_cons(%union.tree_node* %6, %union.tree_node* %call, %union.tree_node* %8)
  store %union.tree_node* %call6, %union.tree_node** %saved, align 8
  %9 = load i32, i32* %ix, align 4
  %idxprom7 = zext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom7
  %decl9 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx8, i32 0, i32 0
  %10 = load %union.tree_node**, %union.tree_node*** %decl9, align 8
  store %union.tree_node* null, %union.tree_node** %10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %ix, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* %ix, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %tobool10 = icmp ne %union.tree_node* %12, null
  br i1 %tobool10, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  %tobool11 = icmp ne %union.tree_node* %13, null
  br i1 %tobool11, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %lor.lhs.false, %for.end
  %14 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  %call13 = call %union.tree_node* @tree_cons(%union.tree_node* %14, %union.tree_node* null, %union.tree_node* %15)
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.12, %lor.lhs.false
  ret void
}

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

; Function Attrs: nounwind uwtable
define void @finish_fname_decls() #0 {
entry:
  %ix = alloca i32, align 4
  %body = alloca %union.tree_node*, align 8
  %stack = alloca %union.tree_node*, align 8
  %saved = alloca %union.tree_node*, align 8
  %decl29 = alloca %union.tree_node*, align 8
  %ix32 = alloca i32, align 4
  store %union.tree_node* null, %union.tree_node** %body, align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  store %union.tree_node* %0, %union.tree_node** %stack, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8
  %tobool1 = icmp ne %union.tree_node* %3, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %5 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %list2 = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value3 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %value3, align 8
  %7 = load %union.tree_node*, %union.tree_node** %body, align 8
  %call = call %union.tree_node* @chainon(%union.tree_node* %6, %union.tree_node* %7)
  store %union.tree_node* %call, %union.tree_node** %body, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %9, %union.tree_node** %stack, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  %10 = load %union.tree_node*, %union.tree_node** %body, align 8
  %tobool4 = icmp ne %union.tree_node* %10, null
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %11 = load %union.tree_node*, %union.tree_node** %body, align 8
  %12 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 20
  %13 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8
  %common5 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %chain6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 0
  %14 = load %union.tree_node*, %union.tree_node** %chain6, align 8
  %call7 = call %union.tree_node* @chainon(%union.tree_node* %11, %union.tree_node* %14)
  store %union.tree_node* %call7, %union.tree_node** %body, align 8
  %15 = load %union.tree_node*, %union.tree_node** %body, align 8
  %call8 = call %union.tree_node* (i32, ...) @build_stmt(i32 153, %union.tree_node* %15)
  store %union.tree_node* %call8, %union.tree_node** %body, align 8
  %16 = load %union.tree_node*, %union.tree_node** %body, align 8
  %common9 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load = load i32, i32* %lang_flag_0, align 8
  %bf.clear = and i32 %bf.load, -16777217
  %bf.set = or i32 %bf.clear, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 8
  %17 = load %union.tree_node*, %union.tree_node** %body, align 8
  %18 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl10 = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %saved_tree11 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl10, i32 0, i32 20
  %19 = load %union.tree_node*, %union.tree_node** %saved_tree11, align 8
  %common12 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 0
  store %union.tree_node* %17, %union.tree_node** %chain13, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  store i32 0, i32* %ix, align 4
  br label %for.cond.14

for.cond.14:                                      ; preds = %for.inc.21, %if.end
  %20 = load i32, i32* %ix, align 4
  %idxprom = zext i32 %20 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom
  %decl15 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx, i32 0, i32 0
  %21 = load %union.tree_node**, %union.tree_node*** %decl15, align 8
  %tobool16 = icmp ne %union.tree_node** %21, null
  br i1 %tobool16, label %for.body.17, label %for.end.22

for.body.17:                                      ; preds = %for.cond.14
  %22 = load i32, i32* %ix, align 4
  %idxprom18 = zext i32 %22 to i64
  %arrayidx19 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom18
  %decl20 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx19, i32 0, i32 0
  %23 = load %union.tree_node**, %union.tree_node*** %decl20, align 8
  store %union.tree_node* null, %union.tree_node** %23, align 8
  br label %for.inc.21

for.inc.21:                                       ; preds = %for.body.17
  %24 = load i32, i32* %ix, align 4
  %inc = add i32 %24, 1
  store i32 %inc, i32* %ix, align 4
  br label %for.cond.14

for.end.22:                                       ; preds = %for.cond.14
  %25 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %tobool23 = icmp ne %union.tree_node* %25, null
  br i1 %tobool23, label %if.then.24, label %if.end.45

if.then.24:                                       ; preds = %for.end.22
  %26 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %list25 = bitcast %union.tree_node* %26 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list25, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  store %union.tree_node* %27, %union.tree_node** %saved, align 8
  br label %for.cond.26

for.cond.26:                                      ; preds = %for.inc.39, %if.then.24
  %28 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %tobool27 = icmp ne %union.tree_node* %28, null
  br i1 %tobool27, label %for.body.28, label %for.end.42

for.body.28:                                      ; preds = %for.cond.26
  %29 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %list30 = bitcast %union.tree_node* %29 to %struct.tree_list*
  %purpose31 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list30, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %purpose31, align 8
  store %union.tree_node* %30, %union.tree_node** %decl29, align 8
  %31 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %list33 = bitcast %union.tree_node* %31 to %struct.tree_list*
  %value34 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list33, i32 0, i32 2
  %32 = load %union.tree_node*, %union.tree_node** %value34, align 8
  %int_cst = bitcast %union.tree_node* %32 to %struct.tree_int_cst*
  %int_cst35 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst35, i32 0, i32 0
  %33 = load i64, i64* %low, align 8
  %conv = trunc i64 %33 to i32
  store i32 %conv, i32* %ix32, align 4
  %34 = load %union.tree_node*, %union.tree_node** %decl29, align 8
  %35 = load i32, i32* %ix32, align 4
  %idxprom36 = zext i32 %35 to i64
  %arrayidx37 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom36
  %decl38 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx37, i32 0, i32 0
  %36 = load %union.tree_node**, %union.tree_node*** %decl38, align 8
  store %union.tree_node* %34, %union.tree_node** %36, align 8
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.body.28
  %37 = load %union.tree_node*, %union.tree_node** %saved, align 8
  %common40 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %chain41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 0
  %38 = load %union.tree_node*, %union.tree_node** %chain41, align 8
  store %union.tree_node* %38, %union.tree_node** %saved, align 8
  br label %for.cond.26

for.end.42:                                       ; preds = %for.cond.26
  %39 = load %union.tree_node*, %union.tree_node** %stack, align 8
  %common43 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %chain44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 0
  %40 = load %union.tree_node*, %union.tree_node** %chain44, align 8
  store %union.tree_node* %40, %union.tree_node** %stack, align 8
  br label %if.end.45

if.end.45:                                        ; preds = %for.end.42, %for.end.22
  %41 = load %union.tree_node*, %union.tree_node** %stack, align 8
  store %union.tree_node* %41, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  ret void
}

declare %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define i8* @fname_as_string(i32 %pretty_p) #0 {
entry:
  %pretty_p.addr = alloca i32, align 4
  %name = alloca i8*, align 8
  store i32 %pretty_p, i32* %pretty_p.addr, align 4
  store i8* null, i8** %name, align 8
  %0 = load i32, i32* %pretty_p.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %tobool1 = icmp ne %union.tree_node* %1, null
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %2 = load i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)** @decl_printable_name, align 8
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %call = call i8* %2(%union.tree_node* %3, i32 2)
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), %cond.false ]
  store i8* %cond, i8** %name, align 8
  br label %if.end.9

if.else:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %tobool2 = icmp ne %union.tree_node* %4, null
  br i1 %tobool2, label %land.lhs.true, label %if.else.8

land.lhs.true:                                    ; preds = %if.else
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %name3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %6 = load %union.tree_node*, %union.tree_node** %name3, align 8
  %tobool4 = icmp ne %union.tree_node* %6, null
  br i1 %tobool4, label %if.then.5, label %if.else.8

if.then.5:                                        ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl6 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %name7 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl6, i32 0, i32 8
  %8 = load %union.tree_node*, %union.tree_node** %name7, align 8
  %identifier = bitcast %union.tree_node* %8 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %9 = load i8*, i8** %str, align 8
  store i8* %9, i8** %name, align 8
  br label %if.end

if.else.8:                                        ; preds = %land.lhs.true, %if.else
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8** %name, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.8, %if.then.5
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %cond.end
  %10 = load i8*, i8** %name, align 8
  ret i8* %10
}

; Function Attrs: nounwind uwtable
define i8* @fname_string(i32 %rid) #0 {
entry:
  %rid.addr = alloca i32, align 4
  %ix = alloca i32, align 4
  store i32 %rid, i32* %rid.addr, align 4
  store i32 0, i32* %ix, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ix, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom
  %decl = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx, i32 0, i32 0
  %1 = load %union.tree_node**, %union.tree_node*** %decl, align 8
  %tobool = icmp ne %union.tree_node** %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ix, align 4
  %idxprom1 = zext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom1
  %rid3 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx2, i32 0, i32 1
  %3 = load i32, i32* %rid3, align 4
  %4 = load i32, i32* %rid.addr, align 4
  %cmp = icmp eq i32 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %ix, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* %ix, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %ix, align 4
  %idxprom4 = zext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom4
  %pretty = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx5, i32 0, i32 2
  %7 = load i32, i32* %pretty, align 4
  %call = call i8* @fname_as_string(i32 %7)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @fname_decl(i32 %rid, %union.tree_node* %id) #0 {
entry:
  %rid.addr = alloca i32, align 4
  %id.addr = alloca %union.tree_node*, align 8
  %ix = alloca i32, align 4
  %decl = alloca %union.tree_node*, align 8
  %saved_last_tree = alloca %union.tree_node*, align 8
  %stmts = alloca %union.tree_node*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %union.tree_node* %id, %union.tree_node** %id.addr, align 8
  store %union.tree_node* null, %union.tree_node** %decl, align 8
  store i32 0, i32* %ix, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ix, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom
  %decl1 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx, i32 0, i32 0
  %1 = load %union.tree_node**, %union.tree_node*** %decl1, align 8
  %tobool = icmp ne %union.tree_node** %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ix, align 4
  %idxprom2 = zext i32 %2 to i64
  %arrayidx3 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom2
  %rid4 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx3, i32 0, i32 1
  %3 = load i32, i32* %rid4, align 4
  %4 = load i32, i32* %rid.addr, align 4
  %cmp = icmp eq i32 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %ix, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* %ix, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %ix, align 4
  %idxprom5 = zext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom5
  %decl7 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx6, i32 0, i32 0
  %7 = load %union.tree_node**, %union.tree_node*** %decl7, align 8
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8
  store %union.tree_node* %8, %union.tree_node** %decl, align 8
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool8 = icmp ne %union.tree_node* %9, null
  br i1 %tobool8, label %if.end.26, label %if.then.9

if.then.9:                                        ; preds = %for.end
  %call = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i32 0, i32 0
  %10 = load %union.tree_node*, %union.tree_node** %x_last_stmt, align 8
  store %union.tree_node* %10, %union.tree_node** %saved_last_tree, align 8
  %11 = load %union.tree_node* (%union.tree_node*, i32)*, %union.tree_node* (%union.tree_node*, i32)** @make_fname_decl, align 8
  %12 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %13 = load i32, i32* %ix, align 4
  %idxprom10 = zext i32 %13 to i64
  %arrayidx11 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom10
  %pretty = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx11, i32 0, i32 2
  %14 = load i32, i32* %pretty, align 4
  %call12 = call %union.tree_node* %11(%union.tree_node* %12, i32 %14)
  store %union.tree_node* %call12, %union.tree_node** %decl, align 8
  %call13 = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt14 = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call13, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %x_last_stmt14, align 8
  %16 = load %union.tree_node*, %union.tree_node** %saved_last_tree, align 8
  %cmp15 = icmp ne %union.tree_node* %15, %16
  br i1 %cmp15, label %if.then.16, label %if.end.22

if.then.16:                                       ; preds = %if.then.9
  %17 = load %union.tree_node*, %union.tree_node** %saved_last_tree, align 8
  %common = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %18, %union.tree_node** %stmts, align 8
  %19 = load %union.tree_node*, %union.tree_node** %saved_last_tree, align 8
  %common17 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain18, align 8
  %20 = load %union.tree_node*, %union.tree_node** %saved_last_tree, align 8
  %call19 = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_stmt20 = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call19, i32 0, i32 0
  store %union.tree_node* %20, %union.tree_node** %x_last_stmt20, align 8
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %22 = load %union.tree_node*, %union.tree_node** %stmts, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  %call21 = call %union.tree_node* @tree_cons(%union.tree_node* %21, %union.tree_node* %22, %union.tree_node* %23)
  store %union.tree_node* %call21, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 30), align 8
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.16, %if.then.9
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %25 = load i32, i32* %ix, align 4
  %idxprom23 = zext i32 %25 to i64
  %arrayidx24 = getelementptr inbounds [4 x %struct.fname_var_t], [4 x %struct.fname_var_t]* @fname_vars, i32 0, i64 %idxprom23
  %decl25 = getelementptr inbounds %struct.fname_var_t, %struct.fname_var_t* %arrayidx24, i32 0, i32 0
  %26 = load %union.tree_node**, %union.tree_node*** %decl25, align 8
  store %union.tree_node* %24, %union.tree_node** %26, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.22, %for.end
  %27 = load i32, i32* %ix, align 4
  %tobool27 = icmp ne i32 %27, 0
  br i1 %tobool27, label %if.end.30, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.26
  %28 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %tobool28 = icmp ne %union.tree_node* %28, null
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %land.lhs.true
  %29 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %29, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.29, %land.lhs.true, %if.end.26
  %30 = load %union.tree_node*, %union.tree_node** %decl, align 8
  ret %union.tree_node* %30
}

declare void @pedwarn_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @combine_strings(%union.tree_node* %strings) #0 {
entry:
  %strings.addr = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %length = alloca i32, align 4
  %wide_length = alloca i32, align 4
  %wide_flag = alloca i32, align 4
  %wchar_bytes = alloca i32, align 4
  %nchars = alloca i32, align 4
  %nchars_max = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i74 = alloca i32, align 4
  %elements = alloca %union.tree_node*, align 8
  store %union.tree_node* %strings, %union.tree_node** %strings.addr, align 8
  store i32 1, i32* %length, align 4
  store i32 0, i32* %wide_length, align 4
  store i32 0, i32* %wide_flag, align 4
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load = load i32, i32* %precision, align 4
  %bf.clear = and i32 %bf.load, 511
  %div = sdiv i32 %bf.clear, 8
  store i32 %div, i32* %wchar_bytes, align 4
  %1 = load i32, i32* @flag_isoc99, align 4
  %tobool = icmp ne i32 %1, 0
  %cond = select i1 %tobool, i32 4095, i32 509
  store i32 %cond, i32* %nchars_max, align 4
  %2 = load %union.tree_node*, %union.tree_node** %strings.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool1 = icmp ne %union.tree_node* %3, null
  br i1 %tobool1, label %if.then, label %if.else.86

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %strings.addr, align 8
  store %union.tree_node* %4, %union.tree_node** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool2 = icmp ne %union.tree_node* %5, null
  br i1 %tobool2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common3 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type4, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 12), align 8
  %cmp = icmp eq %union.tree_node* %7, %8
  br i1 %cmp, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %for.body
  %9 = load %union.tree_node*, %union.tree_node** %t, align 8
  %string = bitcast %union.tree_node* %9 to %struct.tree_string*
  %length6 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 2
  %10 = load i32, i32* %length6, align 4
  %11 = load i32, i32* %wchar_bytes, align 4
  %sub = sub nsw i32 %10, %11
  %12 = load i32, i32* %wide_length, align 4
  %add = add nsw i32 %12, %sub
  store i32 %add, i32* %wide_length, align 4
  store i32 1, i32* %wide_flag, align 4
  br label %if.end.17

if.else:                                          ; preds = %for.body
  %13 = load %union.tree_node*, %union.tree_node** %t, align 8
  %string7 = bitcast %union.tree_node* %13 to %struct.tree_string*
  %length8 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string7, i32 0, i32 2
  %14 = load i32, i32* %length8, align 4
  %sub9 = sub nsw i32 %14, 1
  %15 = load i32, i32* %length, align 4
  %add10 = add nsw i32 %15, %sub9
  store i32 %add10, i32* %length, align 4
  %16 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common11 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load12 = load i32, i32* %lang_flag_0, align 8
  %bf.lshr = lshr i32 %bf.load12, 24
  %bf.clear13 = and i32 %bf.lshr, 1
  %tobool14 = icmp ne i32 %bf.clear13, 0
  br i1 %tobool14, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %17 = load i32, i32* @in_system_header, align 4
  %tobool15 = icmp ne i32 %17, 0
  br i1 %tobool15, label %if.end, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.4, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.16, %land.lhs.true, %if.else
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %if.then.5
  br label %for.inc

for.inc:                                          ; preds = %if.end.17
  %18 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common18 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %chain19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 0
  %19 = load %union.tree_node*, %union.tree_node** %chain19, align 8
  store %union.tree_node* %19, %union.tree_node** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %wide_flag, align 4
  %tobool20 = icmp ne i32 %20, 0
  br i1 %tobool20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %for.end
  %21 = load i32, i32* %length, align 4
  %22 = load i32, i32* %wchar_bytes, align 4
  %mul = mul nsw i32 %21, %22
  %23 = load i32, i32* %wide_length, align 4
  %add22 = add nsw i32 %mul, %23
  store i32 %add22, i32* %length, align 4
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %for.end
  %24 = load i32, i32* %length, align 4
  %conv = sext i32 %24 to i64
  %call = call noalias i8* @xmalloc(i64 %conv)
  store i8* %call, i8** %p, align 8
  %25 = load i8*, i8** %p, align 8
  store i8* %25, i8** %q, align 8
  %26 = load %union.tree_node*, %union.tree_node** %strings.addr, align 8
  store %union.tree_node* %26, %union.tree_node** %t, align 8
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc.68, %if.end.23
  %27 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool25 = icmp ne %union.tree_node* %27, null
  br i1 %tobool25, label %for.body.26, label %for.end.71

for.body.26:                                      ; preds = %for.cond.24
  %28 = load %union.tree_node*, %union.tree_node** %t, align 8
  %string27 = bitcast %union.tree_node* %28 to %struct.tree_string*
  %length28 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string27, i32 0, i32 2
  %29 = load i32, i32* %length28, align 4
  %30 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common29 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type30, align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 12), align 8
  %cmp31 = icmp eq %union.tree_node* %31, %32
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.26
  %33 = load i32, i32* %wchar_bytes, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body.26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond33 = phi i32 [ %33, %cond.true ], [ 1, %cond.false ]
  %sub34 = sub nsw i32 %29, %cond33
  store i32 %sub34, i32* %len, align 4
  %34 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common35 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type36, align 8
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 12), align 8
  %cmp37 = icmp eq %union.tree_node* %35, %36
  %conv38 = zext i1 %cmp37 to i32
  %37 = load i32, i32* %wide_flag, align 4
  %cmp39 = icmp eq i32 %conv38, %37
  br i1 %cmp39, label %if.then.41, label %if.else.44

if.then.41:                                       ; preds = %cond.end
  %38 = load i8*, i8** %q, align 8
  %39 = load %union.tree_node*, %union.tree_node** %t, align 8
  %string42 = bitcast %union.tree_node* %39 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string42, i32 0, i32 3
  %40 = load i8*, i8** %pointer, align 8
  %41 = load i32, i32* %len, align 4
  %conv43 = sext i32 %41 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %40, i64 %conv43, i32 1, i1 false)
  %42 = load i32, i32* %len, align 4
  %43 = load i8*, i8** %q, align 8
  %idx.ext = sext i32 %42 to i64
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %idx.ext
  store i8* %add.ptr, i8** %q, align 8
  br label %if.end.67

if.else.44:                                       ; preds = %cond.end
  store i32 0, i32* %i, align 4
  br label %for.cond.45

for.cond.45:                                      ; preds = %for.inc.64, %if.else.44
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %len, align 4
  %cmp46 = icmp slt i32 %44, %45
  br i1 %cmp46, label %for.body.48, label %for.end.66

for.body.48:                                      ; preds = %for.cond.45
  %46 = load i32, i32* %i, align 4
  %idxprom = sext i32 %46 to i64
  %47 = load %union.tree_node*, %union.tree_node** %t, align 8
  %string49 = bitcast %union.tree_node* %47 to %struct.tree_string*
  %pointer50 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string49, i32 0, i32 3
  %48 = load i8*, i8** %pointer50, align 8
  %arrayidx = getelementptr inbounds i8, i8* %48, i64 %idxprom
  %49 = load i8, i8* %arrayidx, align 1
  %50 = load i8*, i8** %q, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr, i8** %q, align 8
  store i8 %49, i8* %50, align 1
  store i32 0, i32* %j, align 4
  br label %for.cond.51

for.cond.51:                                      ; preds = %for.inc.62, %for.body.48
  %51 = load i32, i32* %j, align 4
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type52 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %precision53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i32 0, i32 6
  %bf.load54 = load i32, i32* %precision53, align 4
  %bf.clear55 = and i32 %bf.load54, 511
  %div56 = sdiv i32 %bf.clear55, 8
  %sub57 = sub nsw i32 %div56, 1
  %cmp58 = icmp slt i32 %51, %sub57
  br i1 %cmp58, label %for.body.60, label %for.end.63

for.body.60:                                      ; preds = %for.cond.51
  %53 = load i8*, i8** %q, align 8
  %incdec.ptr61 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr61, i8** %q, align 8
  store i8 0, i8* %53, align 1
  br label %for.inc.62

for.inc.62:                                       ; preds = %for.body.60
  %54 = load i32, i32* %j, align 4
  %inc = add nsw i32 %54, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.51

for.end.63:                                       ; preds = %for.cond.51
  br label %for.inc.64

for.inc.64:                                       ; preds = %for.end.63
  %55 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %55, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond.45

for.end.66:                                       ; preds = %for.cond.45
  br label %if.end.67

if.end.67:                                        ; preds = %for.end.66, %if.then.41
  br label %for.inc.68

for.inc.68:                                       ; preds = %if.end.67
  %56 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common69 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %chain70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 0
  %57 = load %union.tree_node*, %union.tree_node** %chain70, align 8
  store %union.tree_node* %57, %union.tree_node** %t, align 8
  br label %for.cond.24

for.end.71:                                       ; preds = %for.cond.24
  %58 = load i32, i32* %wide_flag, align 4
  %tobool72 = icmp ne i32 %58, 0
  br i1 %tobool72, label %if.then.73, label %if.else.83

if.then.73:                                       ; preds = %for.end.71
  store i32 0, i32* %i74, align 4
  br label %for.cond.75

for.cond.75:                                      ; preds = %for.inc.80, %if.then.73
  %59 = load i32, i32* %i74, align 4
  %60 = load i32, i32* %wchar_bytes, align 4
  %cmp76 = icmp slt i32 %59, %60
  br i1 %cmp76, label %for.body.78, label %for.end.82

for.body.78:                                      ; preds = %for.cond.75
  %61 = load i8*, i8** %q, align 8
  %incdec.ptr79 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %incdec.ptr79, i8** %q, align 8
  store i8 0, i8* %61, align 1
  br label %for.inc.80

for.inc.80:                                       ; preds = %for.body.78
  %62 = load i32, i32* %i74, align 4
  %inc81 = add nsw i32 %62, 1
  store i32 %inc81, i32* %i74, align 4
  br label %for.cond.75

for.end.82:                                       ; preds = %for.cond.75
  br label %if.end.84

if.else.83:                                       ; preds = %for.end.71
  %63 = load i8*, i8** %q, align 8
  store i8 0, i8* %63, align 1
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.83, %for.end.82
  %64 = load i32, i32* %length, align 4
  %65 = load i8*, i8** %p, align 8
  %call85 = call %union.tree_node* @build_string(i32 %64, i8* %65)
  store %union.tree_node* %call85, %union.tree_node** %value, align 8
  %66 = load i8*, i8** %p, align 8
  call void @free(i8* %66) #2
  br label %if.end.95

if.else.86:                                       ; preds = %entry
  %67 = load %union.tree_node*, %union.tree_node** %strings.addr, align 8
  store %union.tree_node* %67, %union.tree_node** %value, align 8
  %68 = load %union.tree_node*, %union.tree_node** %value, align 8
  %string87 = bitcast %union.tree_node* %68 to %struct.tree_string*
  %length88 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string87, i32 0, i32 2
  %69 = load i32, i32* %length88, align 4
  store i32 %69, i32* %length, align 4
  %70 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common89 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common89, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type90, align 8
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 12), align 8
  %cmp91 = icmp eq %union.tree_node* %71, %72
  br i1 %cmp91, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %if.else.86
  store i32 1, i32* %wide_flag, align 4
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.93, %if.else.86
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.end.84
  %73 = load i32, i32* %wide_flag, align 4
  %tobool96 = icmp ne i32 %73, 0
  br i1 %tobool96, label %cond.true.97, label %cond.false.99

cond.true.97:                                     ; preds = %if.end.95
  %74 = load i32, i32* %length, align 4
  %75 = load i32, i32* %wchar_bytes, align 4
  %div98 = sdiv i32 %74, %75
  br label %cond.end.100

cond.false.99:                                    ; preds = %if.end.95
  %76 = load i32, i32* %length, align 4
  br label %cond.end.100

cond.end.100:                                     ; preds = %cond.false.99, %cond.true.97
  %cond101 = phi i32 [ %div98, %cond.true.97 ], [ %76, %cond.false.99 ]
  store i32 %cond101, i32* %nchars, align 4
  %77 = load i32, i32* @pedantic, align 4
  %tobool102 = icmp ne i32 %77, 0
  br i1 %tobool102, label %land.lhs.true.103, label %if.end.114

land.lhs.true.103:                                ; preds = %cond.end.100
  %78 = load i32, i32* %nchars, align 4
  %sub104 = sub nsw i32 %78, 1
  %79 = load i32, i32* %nchars_max, align 4
  %cmp105 = icmp sgt i32 %sub104, %79
  br i1 %cmp105, label %land.lhs.true.107, label %if.end.114

land.lhs.true.107:                                ; preds = %land.lhs.true.103
  %80 = load i32, i32* @c_language, align 4
  %cmp108 = icmp eq i32 %80, 0
  br i1 %cmp108, label %if.then.110, label %if.end.114

if.then.110:                                      ; preds = %land.lhs.true.107
  %81 = load i32, i32* %nchars, align 4
  %sub111 = sub nsw i32 %81, 1
  %82 = load i32, i32* %nchars_max, align 4
  %83 = load i32, i32* @flag_isoc99, align 4
  %tobool112 = icmp ne i32 %83, 0
  %cond113 = select i1 %tobool112, i32 99, i32 89
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i32 0, i32 0), i32 %sub111, i32 %82, i32 %cond113)
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.110, %land.lhs.true.107, %land.lhs.true.103, %cond.end.100
  %84 = load i32, i32* @flag_const_strings, align 4
  %tobool115 = icmp ne i32 %84, 0
  br i1 %tobool115, label %land.lhs.true.116, label %if.else.134

land.lhs.true.116:                                ; preds = %if.end.114
  %85 = load i32, i32* @flag_traditional, align 4
  %tobool117 = icmp ne i32 %85, 0
  br i1 %tobool117, label %if.else.134, label %land.lhs.true.118

land.lhs.true.118:                                ; preds = %land.lhs.true.116
  %86 = load i32, i32* @flag_writable_strings, align 4
  %tobool119 = icmp ne i32 %86, 0
  br i1 %tobool119, label %if.else.134, label %if.then.120

if.then.120:                                      ; preds = %land.lhs.true.118
  %87 = load i32, i32* %wide_flag, align 4
  %tobool121 = icmp ne i32 %87, 0
  br i1 %tobool121, label %cond.true.122, label %cond.false.123

cond.true.122:                                    ; preds = %if.then.120
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  br label %cond.end.124

cond.false.123:                                   ; preds = %if.then.120
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  br label %cond.end.124

cond.end.124:                                     ; preds = %cond.false.123, %cond.true.122
  %cond125 = phi %union.tree_node* [ %88, %cond.true.122 ], [ %89, %cond.false.123 ]
  %call126 = call %union.tree_node* @build_qualified_type(%union.tree_node* %cond125, i32 1)
  store %union.tree_node* %call126, %union.tree_node** %elements, align 8
  %90 = load %union.tree_node*, %union.tree_node** %elements, align 8
  %91 = load i32, i32* %nchars, align 4
  %sub127 = sub nsw i32 %91, 1
  %conv128 = sext i32 %sub127 to i64
  %call129 = call %union.tree_node* @build_int_2_wide(i64 %conv128, i64 0)
  %call130 = call %union.tree_node* @build_index_type(%union.tree_node* %call129)
  %call131 = call %union.tree_node* @build_array_type(%union.tree_node* %90, %union.tree_node* %call130)
  %92 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common132 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %type133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 1
  store %union.tree_node* %call131, %union.tree_node** %type133, align 8
  br label %if.end.147

if.else.134:                                      ; preds = %land.lhs.true.118, %land.lhs.true.116, %if.end.114
  %93 = load i32, i32* %wide_flag, align 4
  %tobool135 = icmp ne i32 %93, 0
  br i1 %tobool135, label %cond.true.136, label %cond.false.137

cond.true.136:                                    ; preds = %if.else.134
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  br label %cond.end.138

cond.false.137:                                   ; preds = %if.else.134
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  br label %cond.end.138

cond.end.138:                                     ; preds = %cond.false.137, %cond.true.136
  %cond139 = phi %union.tree_node* [ %94, %cond.true.136 ], [ %95, %cond.false.137 ]
  %96 = load i32, i32* %nchars, align 4
  %sub140 = sub nsw i32 %96, 1
  %conv141 = sext i32 %sub140 to i64
  %call142 = call %union.tree_node* @build_int_2_wide(i64 %conv141, i64 0)
  %call143 = call %union.tree_node* @build_index_type(%union.tree_node* %call142)
  %call144 = call %union.tree_node* @build_array_type(%union.tree_node* %cond139, %union.tree_node* %call143)
  %97 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common145 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %type146 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 1
  store %union.tree_node* %call144, %union.tree_node** %type146, align 8
  br label %if.end.147

if.end.147:                                       ; preds = %cond.end.138, %cond.end.124
  %98 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common148 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 2
  %bf.load149 = load i32, i32* %constant_flag, align 8
  %bf.clear150 = and i32 %bf.load149, -513
  %bf.set = or i32 %bf.clear150, 512
  store i32 %bf.set, i32* %constant_flag, align 8
  %99 = load i32, i32* @flag_writable_strings, align 4
  %tobool151 = icmp ne i32 %99, 0
  %lnot = xor i1 %tobool151, true
  %lnot.ext = zext i1 %lnot to i32
  %100 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common152 = bitcast %union.tree_node* %100 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 2
  %bf.load153 = load i32, i32* %readonly_flag, align 8
  %bf.value = and i32 %lnot.ext, 1
  %bf.shl = shl i32 %bf.value, 12
  %bf.clear154 = and i32 %bf.load153, -4097
  %bf.set155 = or i32 %bf.clear154, %bf.shl
  store i32 %bf.set155, i32* %readonly_flag, align 8
  %101 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common156 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 2
  %bf.load157 = load i32, i32* %static_flag, align 8
  %bf.clear158 = and i32 %bf.load157, -262145
  %bf.set159 = or i32 %bf.clear158, 262144
  store i32 %bf.set159, i32* %static_flag, align 8
  %102 = load %union.tree_node*, %union.tree_node** %value, align 8
  ret %union.tree_node* %102
}

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare %union.tree_node* @build_string(i32, i8*) #1

; Function Attrs: nounwind
declare void @free(i8*) #3

declare void @pedwarn(i8*, ...) #1

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

declare %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_index_type(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @constant_expression_warning(%union.tree_node* %value) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 26
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 28
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.6
  %3 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common13 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 27
  br i1 %cmp17, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false.12, %lor.lhs.false.6, %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common18 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 2
  %bf.load19 = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load19, 18
  %bf.clear20 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear20, 0
  br i1 %tobool, label %land.lhs.true.21, label %if.end

land.lhs.true.21:                                 ; preds = %land.lhs.true
  %5 = load i32, i32* @pedantic, align 4
  %tobool22 = icmp ne i32 %5, 0
  br i1 %tobool22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.21
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.21, %land.lhs.true, %lor.lhs.false.12
  ret void
}

; Function Attrs: nounwind uwtable
define void @overflow_warning(%union.tree_node* %value) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %land.lhs.true.11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 27
  br i1 %cmp5, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %complex = bitcast %union.tree_node* %2 to %struct.tree_complex*
  %real = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %real, align 8
  %common6 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 25
  br i1 %cmp10, label %land.lhs.true.11, label %if.else

land.lhs.true.11:                                 ; preds = %land.lhs.true, %entry
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common12 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load13 = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load13, 19
  %bf.clear14 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear14, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.11
  %5 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common15 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %public_flag16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %public_flag16, align 8
  %bf.clear18 = and i32 %bf.load17, -524289
  store i32 %bf.clear18, i32* %public_flag16, align 8
  %6 = load i32, i32* @skip_evaluation, align 4
  %cmp19 = icmp eq i32 %6, 0
  br i1 %cmp19, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %if.then
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.20, %if.then
  br label %if.end.78

if.else:                                          ; preds = %land.lhs.true.11, %land.lhs.true, %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common21 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 26
  br i1 %cmp25, label %land.lhs.true.40, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %if.else
  %8 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common27 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp eq i32 %bf.clear30, 27
  br i1 %cmp31, label %land.lhs.true.32, label %if.else.55

land.lhs.true.32:                                 ; preds = %lor.lhs.false.26
  %9 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %complex33 = bitcast %union.tree_node* %9 to %struct.tree_complex*
  %real34 = getelementptr inbounds %struct.tree_complex, %struct.tree_complex* %complex33, i32 0, i32 2
  %10 = load %union.tree_node*, %union.tree_node** %real34, align 8
  %common35 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 2
  %bf.load37 = load i32, i32* %code36, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 26
  br i1 %cmp39, label %land.lhs.true.40, label %if.else.55

land.lhs.true.40:                                 ; preds = %land.lhs.true.32, %if.else
  %11 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common41 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %public_flag42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 2
  %bf.load43 = load i32, i32* %public_flag42, align 8
  %bf.lshr44 = lshr i32 %bf.load43, 19
  %bf.clear45 = and i32 %bf.lshr44, 1
  %tobool46 = icmp ne i32 %bf.clear45, 0
  br i1 %tobool46, label %if.then.47, label %if.else.55

if.then.47:                                       ; preds = %land.lhs.true.40
  %12 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common48 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %public_flag49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 2
  %bf.load50 = load i32, i32* %public_flag49, align 8
  %bf.clear51 = and i32 %bf.load50, -524289
  store i32 %bf.clear51, i32* %public_flag49, align 8
  %13 = load i32, i32* @skip_evaluation, align 4
  %cmp52 = icmp eq i32 %13, 0
  br i1 %cmp52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.then.47
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i32 0, i32 0))
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.then.47
  br label %if.end.77

if.else.55:                                       ; preds = %land.lhs.true.40, %land.lhs.true.32, %lor.lhs.false.26
  %14 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common56 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 2
  %bf.load58 = load i32, i32* %code57, align 8
  %bf.clear59 = and i32 %bf.load58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 28
  br i1 %cmp60, label %land.lhs.true.61, label %if.end.76

land.lhs.true.61:                                 ; preds = %if.else.55
  %15 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common62 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %public_flag63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 2
  %bf.load64 = load i32, i32* %public_flag63, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 19
  %bf.clear66 = and i32 %bf.lshr65, 1
  %tobool67 = icmp ne i32 %bf.clear66, 0
  br i1 %tobool67, label %if.then.68, label %if.end.76

if.then.68:                                       ; preds = %land.lhs.true.61
  %16 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common69 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %public_flag70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load71 = load i32, i32* %public_flag70, align 8
  %bf.clear72 = and i32 %bf.load71, -524289
  store i32 %bf.clear72, i32* %public_flag70, align 8
  %17 = load i32, i32* @skip_evaluation, align 4
  %cmp73 = icmp eq i32 %17, 0
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.then.68
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i32 0, i32 0))
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %if.then.68
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %land.lhs.true.61, %if.else.55
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %if.end.54
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @unsigned_conversion_warning(%union.tree_node* %result, %union.tree_node* %operand) #0 {
entry:
  %result.addr = alloca %union.tree_node*, align 8
  %operand.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %result, %union.tree_node** %result.addr, align 8
  store %union.tree_node* %operand, %union.tree_node** %operand.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %operand.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %land.lhs.true, label %if.end.28

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 6
  br i1 %cmp6, label %land.lhs.true.7, label %if.end.28

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %common8 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type9, align 8
  %common10 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load11 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load11, 13
  %bf.clear12 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear12, 0
  br i1 %tobool, label %land.lhs.true.13, label %if.end.28

land.lhs.true.13:                                 ; preds = %land.lhs.true.7
  %5 = load i32, i32* @skip_evaluation, align 4
  %cmp14 = icmp eq i32 %5, 0
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.28

land.lhs.true.15:                                 ; preds = %land.lhs.true.13
  %6 = load %union.tree_node*, %union.tree_node** %operand.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %common16 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type17, align 8
  %call = call i32 @int_fits_type_p(%union.tree_node* %6, %union.tree_node* %8)
  %tobool18 = icmp ne i32 %call, 0
  br i1 %tobool18, label %if.end.28, label %if.then

if.then:                                          ; preds = %land.lhs.true.15
  %9 = load %union.tree_node*, %union.tree_node** %operand.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %result.addr, align 8
  %common19 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %call21 = call %union.tree_node* @signed_type(%union.tree_node* %11)
  %call22 = call i32 @int_fits_type_p(%union.tree_node* %9, %union.tree_node* %call21)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.else, label %if.then.24

if.then.24:                                       ; preds = %if.then
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i32 0, i32 0))
  br label %if.end.27

if.else:                                          ; preds = %if.then
  %12 = load i32, i32* @warn_conversion, align 4
  %tobool25 = icmp ne i32 %12, 0
  br i1 %tobool25, label %if.then.26, label %if.end

if.then.26:                                       ; preds = %if.else
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.26, %if.else
  br label %if.end.27

if.end.27:                                        ; preds = %if.end, %if.then.24
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %land.lhs.true.15, %land.lhs.true.13, %land.lhs.true.7, %land.lhs.true, %entry
  ret void
}

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @signed_type(%union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %type1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 15
  %1 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %1, %union.tree_node** %type1, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp3 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %cmp4 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  %cmp7 = icmp eq %union.tree_node* %10, %11
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %13 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  %cmp10 = icmp eq %union.tree_node* %13, %14
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.9
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  store %union.tree_node* %15, %union.tree_node** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.9
  %16 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  %cmp13 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.12
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  store %union.tree_node* %18, %union.tree_node** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.12
  %19 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  %cmp16 = icmp eq %union.tree_node* %19, %20
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  store %union.tree_node* %21, %union.tree_node** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  %22 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 10), align 8
  %cmp19 = icmp eq %union.tree_node* %22, %23
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.18
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

if.end.21:                                        ; preds = %if.end.18
  %25 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  %cmp22 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.21
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  store %union.tree_node* %27, %union.tree_node** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.21
  %28 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  %cmp25 = icmp eq %union.tree_node* %28, %29
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.24
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  store %union.tree_node* %30, %union.tree_node** %retval
  br label %return

if.end.27:                                        ; preds = %if.end.24
  %31 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  %cmp28 = icmp eq %union.tree_node* %31, %32
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  store %union.tree_node* %33, %union.tree_node** %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %34 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  %cmp31 = icmp eq %union.tree_node* %34, %35
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.30
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  store %union.tree_node* %36, %union.tree_node** %retval
  br label %return

if.end.33:                                        ; preds = %if.end.30
  %37 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call %union.tree_node* @signed_or_unsigned_type(i32 0, %union.tree_node* %37)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.33, %if.then.32, %if.then.29, %if.then.26, %if.then.23, %if.then.20, %if.then.17, %if.then.14, %if.then.11, %if.then.8, %if.then.5, %if.then
  %38 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %38
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @convert_and_check(%union.tree_node* %type, %union.tree_node* %expr) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %1)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %if.then, label %if.end.64

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common1 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load2 = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load2, 19
  %bf.clear3 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear3, 0
  br i1 %tobool, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common5 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %public_flag6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %public_flag6, align 8
  %bf.clear8 = and i32 %bf.load7, -524289
  store i32 %bf.clear8, i32* %public_flag6, align 8
  %5 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common9 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load10 = load i32, i32* %static_flag, align 8
  %bf.lshr11 = lshr i32 %bf.load10, 18
  %bf.clear12 = and i32 %bf.lshr11, 1
  %6 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common13 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %static_flag14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %static_flag14, align 8
  %bf.value = and i32 %bf.clear12, 1
  %bf.shl = shl i32 %bf.value, 18
  %bf.clear16 = and i32 %bf.load15, -262145
  %bf.set = or i32 %bf.clear16, %bf.shl
  store i32 %bf.set, i32* %static_flag14, align 8
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common17 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load18 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr19 = lshr i32 %bf.load18, 13
  %bf.clear20 = and i32 %bf.lshr19, 1
  %8 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common21 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %common23 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %unsigned_flag24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %unsigned_flag24, align 8
  %bf.lshr26 = lshr i32 %bf.load25, 13
  %bf.clear27 = and i32 %bf.lshr26, 1
  %cmp28 = icmp slt i32 %bf.clear20, %bf.clear27
  br i1 %cmp28, label %land.lhs.true, label %if.then.47

land.lhs.true:                                    ; preds = %if.then.4
  %10 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common29 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type30, align 8
  %common31 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 6
  br i1 %cmp35, label %land.lhs.true.36, label %if.then.47

land.lhs.true.36:                                 ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type37 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i32 0, i32 6
  %bf.load38 = load i32, i32* %precision, align 4
  %bf.clear39 = and i32 %bf.load38, 511
  %13 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common40 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %type41, align 8
  %type42 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %precision43 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type42, i32 0, i32 6
  %bf.load44 = load i32, i32* %precision43, align 4
  %bf.clear45 = and i32 %bf.load44, 511
  %cmp46 = icmp eq i32 %bf.clear39, %bf.clear45
  br i1 %cmp46, label %if.end.62, label %if.then.47

if.then.47:                                       ; preds = %land.lhs.true.36, %land.lhs.true, %if.then.4
  %15 = load i32, i32* @pedantic, align 4
  %tobool48 = icmp ne i32 %15, 0
  br i1 %tobool48, label %land.lhs.true.59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.47
  %16 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common49 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %unsigned_flag50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 2
  %bf.load51 = load i32, i32* %unsigned_flag50, align 8
  %bf.lshr52 = lshr i32 %bf.load51, 13
  %bf.clear53 = and i32 %bf.lshr52, 1
  %tobool54 = icmp ne i32 %bf.clear53, 0
  br i1 %tobool54, label %land.lhs.true.59, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false
  %17 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call56 = call %union.tree_node* @unsigned_type(%union.tree_node* %18)
  %call57 = call i32 @constant_fits_type_p(%union.tree_node* %17, %union.tree_node* %call56)
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.end, label %land.lhs.true.59

land.lhs.true.59:                                 ; preds = %lor.lhs.false.55, %lor.lhs.false, %if.then.47
  %19 = load i32, i32* @skip_evaluation, align 4
  %cmp60 = icmp eq i32 %19, 0
  br i1 %cmp60, label %if.then.61, label %if.end

if.then.61:                                       ; preds = %land.lhs.true.59
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.61, %land.lhs.true.59, %lor.lhs.false.55
  br label %if.end.62

if.end.62:                                        ; preds = %if.end, %land.lhs.true.36
  br label %if.end.63

if.else:                                          ; preds = %if.then
  %20 = load %union.tree_node*, %union.tree_node** %t, align 8
  %21 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  call void @unsigned_conversion_warning(%union.tree_node* %20, %union.tree_node* %21)
  br label %if.end.63

if.end.63:                                        ; preds = %if.else, %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %entry
  %22 = load %union.tree_node*, %union.tree_node** %t, align 8
  ret %union.tree_node* %22
}

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal i32 @constant_fits_type_p(%union.tree_node* %c, %union.tree_node* %type) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %c, %union.tree_node** %c.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 25
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call i32 @int_fits_type_p(%union.tree_node* %1, %union.tree_node* %2)
  store i32 %call, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %call1 = call %union.tree_node* @convert(%union.tree_node* %3, %union.tree_node* %4)
  store %union.tree_node* %call1, %union.tree_node** %c.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %c.addr, align 8
  %common2 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load3 = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load3, 19
  %bf.clear4 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear4, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @unsigned_type(%union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %type1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 15
  %1 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %1, %union.tree_node** %type1, align 8
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp3 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp4 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  %cmp7 = icmp eq %union.tree_node* %10, %11
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %13 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %cmp10 = icmp eq %union.tree_node* %13, %14
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.9
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  store %union.tree_node* %15, %union.tree_node** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.9
  %16 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %cmp13 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.12
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  store %union.tree_node* %18, %union.tree_node** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.12
  %19 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %cmp16 = icmp eq %union.tree_node* %19, %20
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  store %union.tree_node* %21, %union.tree_node** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  %22 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  %cmp19 = icmp eq %union.tree_node* %22, %23
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.18
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 10), align 8
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

if.end.21:                                        ; preds = %if.end.18
  %25 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  %cmp22 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.21
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  store %union.tree_node* %27, %union.tree_node** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.21
  %28 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  %cmp25 = icmp eq %union.tree_node* %28, %29
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.24
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  store %union.tree_node* %30, %union.tree_node** %retval
  br label %return

if.end.27:                                        ; preds = %if.end.24
  %31 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  %cmp28 = icmp eq %union.tree_node* %31, %32
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  store %union.tree_node* %33, %union.tree_node** %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %34 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  %cmp31 = icmp eq %union.tree_node* %34, %35
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.30
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  store %union.tree_node* %36, %union.tree_node** %retval
  br label %return

if.end.33:                                        ; preds = %if.end.30
  %37 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call %union.tree_node* @signed_or_unsigned_type(i32 1, %union.tree_node* %37)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.33, %if.then.32, %if.then.29, %if.then.26, %if.then.23, %if.then.20, %if.then.17, %if.then.14, %if.then.11, %if.then.8, %if.then.5, %if.then
  %38 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %38
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_expand_expr_stmt(%union.tree_node* %expr) #0 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false.3

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @flag_isoc99, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call i32 @lvalue_p(%union.tree_node* %3)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3

lor.lhs.false.3:                                  ; preds = %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %common6 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 23
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call11 = call %union.tree_node* @default_conversion(%union.tree_node* %6)
  store %union.tree_node* %call11, %union.tree_node** %expr.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.3
  %7 = load i32, i32* @warn_sequence_point, align 4
  %tobool12 = icmp ne i32 %7, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  call void @verify_sequence_points(%union.tree_node* %8)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.end
  %9 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common15 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type16, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp17 = icmp ne %union.tree_node* %10, %11
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.40

land.lhs.true.18:                                 ; preds = %if.end.14
  %12 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common19 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %type21 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i32 0, i32 2
  %14 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp22 = icmp ne %union.tree_node* %14, null
  br i1 %cmp22, label %if.end.40, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %land.lhs.true.18
  %15 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common24 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 1
  %16 = load %union.tree_node*, %union.tree_node** %type25, align 8
  %common26 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 5
  br i1 %cmp30, label %if.end.40, label %land.lhs.true.31

land.lhs.true.31:                                 ; preds = %lor.lhs.false.23
  %17 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common32 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type33, align 8
  %common34 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp ne i32 %bf.clear37, 18
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %land.lhs.true.31
  call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i32 0, i32 0))
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.39, %land.lhs.true.31, %lor.lhs.false.23, %land.lhs.true.18, %if.end.14
  %19 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common41 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type42, align 8
  %call43 = call %struct.stmt_tree_s* @current_stmt_tree()
  %x_last_expr_type = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call43, i32 0, i32 1
  store %union.tree_node* %20, %union.tree_node** %x_last_expr_type, align 8
  %21 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call44 = call %union.tree_node* (i32, ...) @build_stmt(i32 152, %union.tree_node* %21)
  %call45 = call %union.tree_node* @add_stmt(%union.tree_node* %call44)
  ret %union.tree_node* %call45
}

declare i32 @lvalue_p(%union.tree_node*) #1

declare %union.tree_node* @default_conversion(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal void @verify_sequence_points(%union.tree_node* %expr) #0 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %before_sp = alloca %struct.tlist*, align 8
  %after_sp = alloca %struct.tlist*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp37 = alloca i8*, align 8
  %__o40 = alloca %struct.obstack*, align 8
  %__obj = alloca i8*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  store %struct.tlist* null, %struct.tlist** %before_sp, align 8
  store %struct.tlist* null, %struct.tlist** %after_sp, align 8
  store %struct.tlist* null, %struct.tlist** @warned_ids, align 8
  store %struct.tlist_cache* null, %struct.tlist_cache** @save_expr_cache, align 8
  %0 = load i8*, i8** @tlist_firstobj, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end.38

if.then:                                          ; preds = %entry
  call void @gcc_obstack_init(%struct.obstack* @tlist_obstack)
  store %struct.obstack* @tlist_obstack, %struct.obstack** %__h, align 8
  %1 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %1, %struct.obstack** %__o, align 8
  store i32 0, i32* %__len, align 4
  %2 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %2, i32 0, i32 4
  %3 = load i8*, i8** %chunk_limit, align 8
  %4 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %4, i32 0, i32 3
  %5 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %6 = load i32, i32* %__len, align 4
  %conv = sext i32 %6 to i64
  %cmp1 = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp1, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %8 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %7, i32 %8)
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.then
  %9 = load i32, i32* %__len, align 4
  %10 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free4 = getelementptr inbounds %struct.obstack, %struct.obstack* %10, i32 0, i32 3
  %11 = load i8*, i8** %next_free4, align 8
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free4, align 8
  %12 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %12, %struct.obstack** %__o1, align 8
  %13 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %13, i32 0, i32 2
  %14 = load i8*, i8** %object_base, align 8
  store i8* %14, i8** %value, align 8
  %15 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free7 = getelementptr inbounds %struct.obstack, %struct.obstack* %15, i32 0, i32 3
  %16 = load i8*, i8** %next_free7, align 8
  %17 = load i8*, i8** %value, align 8
  %cmp8 = icmp eq i8* %16, %17
  br i1 %cmp8, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end
  %19 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free12 = getelementptr inbounds %struct.obstack, %struct.obstack* %19, i32 0, i32 3
  %20 = load i8*, i8** %next_free12, align 8
  %sub.ptr.lhs.cast13 = ptrtoint i8* %20 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast13, 0
  %21 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %21, i32 0, i32 6
  %22 = load i32, i32* %alignment_mask, align 4
  %conv15 = sext i32 %22 to i64
  %add = add nsw i64 %sub.ptr.sub14, %conv15
  %23 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask16 = getelementptr inbounds %struct.obstack, %struct.obstack* %23, i32 0, i32 6
  %24 = load i32, i32* %alignment_mask16, align 4
  %neg = xor i32 %24, -1
  %conv17 = sext i32 %neg to i64
  %and = and i64 %add, %conv17
  %add.ptr18 = getelementptr inbounds i8, i8* null, i64 %and
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free19 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 3
  store i8* %add.ptr18, i8** %next_free19, align 8
  %26 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free20 = getelementptr inbounds %struct.obstack, %struct.obstack* %26, i32 0, i32 3
  %27 = load i8*, i8** %next_free20, align 8
  %28 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %28, i32 0, i32 1
  %29 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %30 = bitcast %struct._obstack_chunk* %29 to i8*
  %sub.ptr.lhs.cast21 = ptrtoint i8* %27 to i64
  %sub.ptr.rhs.cast22 = ptrtoint i8* %30 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %31 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit24 = getelementptr inbounds %struct.obstack, %struct.obstack* %31, i32 0, i32 4
  %32 = load i8*, i8** %chunk_limit24, align 8
  %33 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk25 = getelementptr inbounds %struct.obstack, %struct.obstack* %33, i32 0, i32 1
  %34 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk25, align 8
  %35 = bitcast %struct._obstack_chunk* %34 to i8*
  %sub.ptr.lhs.cast26 = ptrtoint i8* %32 to i64
  %sub.ptr.rhs.cast27 = ptrtoint i8* %35 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast27
  %cmp29 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub28
  br i1 %cmp29, label %if.then.31, label %if.end.34

if.then.31:                                       ; preds = %if.end.11
  %36 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit32 = getelementptr inbounds %struct.obstack, %struct.obstack* %36, i32 0, i32 4
  %37 = load i8*, i8** %chunk_limit32, align 8
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 3
  store i8* %37, i8** %next_free33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.31, %if.end.11
  %39 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free35 = getelementptr inbounds %struct.obstack, %struct.obstack* %39, i32 0, i32 3
  %40 = load i8*, i8** %next_free35, align 8
  %41 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base36 = getelementptr inbounds %struct.obstack, %struct.obstack* %41, i32 0, i32 2
  store i8* %40, i8** %object_base36, align 8
  %42 = load i8*, i8** %value, align 8
  store i8* %42, i8** %tmp37
  %43 = load i8*, i8** %tmp37
  store i8* %43, i8** %tmp
  %44 = load i8*, i8** %tmp
  store i8* %44, i8** @tlist_firstobj, align 8
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.34, %entry
  %45 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  call void @verify_tree(%union.tree_node* %45, %struct.tlist** %before_sp, %struct.tlist** %after_sp, %union.tree_node* null)
  %46 = load %struct.tlist*, %struct.tlist** %after_sp, align 8
  call void @warn_for_collisions(%struct.tlist* %46)
  store %struct.obstack* @tlist_obstack, %struct.obstack** %__o40, align 8
  %47 = load i8*, i8** @tlist_firstobj, align 8
  store i8* %47, i8** %__obj, align 8
  %48 = load i8*, i8** %__obj, align 8
  %49 = load %struct.obstack*, %struct.obstack** %__o40, align 8
  %chunk42 = getelementptr inbounds %struct.obstack, %struct.obstack* %49, i32 0, i32 1
  %50 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk42, align 8
  %51 = bitcast %struct._obstack_chunk* %50 to i8*
  %cmp43 = icmp ugt i8* %48, %51
  br i1 %cmp43, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end.38
  %52 = load i8*, i8** %__obj, align 8
  %53 = load %struct.obstack*, %struct.obstack** %__o40, align 8
  %chunk_limit45 = getelementptr inbounds %struct.obstack, %struct.obstack* %53, i32 0, i32 4
  %54 = load i8*, i8** %chunk_limit45, align 8
  %cmp46 = icmp ult i8* %52, %54
  br i1 %cmp46, label %if.then.48, label %if.else

if.then.48:                                       ; preds = %land.lhs.true
  %55 = load i8*, i8** %__obj, align 8
  %56 = load %struct.obstack*, %struct.obstack** %__o40, align 8
  %object_base49 = getelementptr inbounds %struct.obstack, %struct.obstack* %56, i32 0, i32 2
  store i8* %55, i8** %object_base49, align 8
  %57 = load %struct.obstack*, %struct.obstack** %__o40, align 8
  %next_free50 = getelementptr inbounds %struct.obstack, %struct.obstack* %57, i32 0, i32 3
  store i8* %55, i8** %next_free50, align 8
  br label %if.end.51

if.else:                                          ; preds = %land.lhs.true, %if.end.38
  %58 = load %struct.obstack*, %struct.obstack** %__o40, align 8
  %59 = load i8*, i8** %__obj, align 8
  call void @obstack_free(%struct.obstack* %58, i8* %59)
  br label %if.end.51

if.end.51:                                        ; preds = %if.else, %if.then.48
  ret void
}

declare void @error(i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @check_case_value(%union.tree_node* %value) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 115
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 114
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common8 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 116
  br i1 %cmp12, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.7, %lor.lhs.false, %while.cond
  %5 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp13 = icmp ne %union.tree_node* %6, %7
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common14 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %10 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp15 = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  %common18 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %type19, align 8
  %cmp20 = icmp eq %union.tree_node* %9, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.7
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.7 ], [ %cmp20, %land.rhs ]
  br i1 %13, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %14 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp21 = bitcast %union.tree_node* %14 to %struct.tree_exp*
  %operands22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands22, i32 0, i64 0
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  store %union.tree_node* %15, %union.tree_node** %value.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %16 = load i32, i32* @c_language, align 4
  %cmp24 = icmp eq i32 %16, 1
  br i1 %cmp24, label %if.then.25, label %if.end.65

if.then.25:                                       ; preds = %while.end
  %17 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call = call %union.tree_node* @decl_constant_value(%union.tree_node* %17)
  store %union.tree_node* %call, %union.tree_node** %value.addr, align 8
  br label %while.cond.26

while.cond.26:                                    ; preds = %while.body.59, %if.then.25
  %18 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common27 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %code28, align 8
  %bf.clear30 = and i32 %bf.load29, 255
  %cmp31 = icmp eq i32 %bf.clear30, 115
  br i1 %cmp31, label %land.lhs.true.44, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %while.cond.26
  %19 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common33 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 114
  br i1 %cmp37, label %land.lhs.true.44, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.32
  %20 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common39 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 116
  br i1 %cmp43, label %land.lhs.true.44, label %land.end.58

land.lhs.true.44:                                 ; preds = %lor.lhs.false.38, %lor.lhs.false.32, %while.cond.26
  %21 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp45 = bitcast %union.tree_node* %21 to %struct.tree_exp*
  %operands46 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp45, i32 0, i32 2
  %arrayidx47 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands46, i32 0, i64 0
  %22 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp48 = icmp ne %union.tree_node* %22, %23
  br i1 %cmp48, label %land.rhs.49, label %land.end.58

land.rhs.49:                                      ; preds = %land.lhs.true.44
  %24 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common50 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %type51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %type51, align 8
  %26 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp52 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands53 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp52, i32 0, i32 2
  %arrayidx54 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands53, i32 0, i64 0
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8
  %common55 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type56, align 8
  %cmp57 = icmp eq %union.tree_node* %25, %28
  br label %land.end.58

land.end.58:                                      ; preds = %land.rhs.49, %land.lhs.true.44, %lor.lhs.false.38
  %29 = phi i1 [ false, %land.lhs.true.44 ], [ false, %lor.lhs.false.38 ], [ %cmp57, %land.rhs.49 ]
  br i1 %29, label %while.body.59, label %while.end.63

while.body.59:                                    ; preds = %land.end.58
  %30 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp60 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands61 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp60, i32 0, i32 2
  %arrayidx62 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands61, i32 0, i64 0
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx62, align 8
  store %union.tree_node* %31, %union.tree_node** %value.addr, align 8
  br label %while.cond.26

while.end.63:                                     ; preds = %land.end.58
  %32 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call64 = call %union.tree_node* @fold(%union.tree_node* %32)
  store %union.tree_node* %call64, %union.tree_node** %value.addr, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %while.end.63, %while.end
  %33 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common66 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load68 = load i32, i32* %code67, align 8
  %bf.clear69 = and i32 %bf.load68, 255
  %cmp70 = icmp ne i32 %bf.clear69, 25
  br i1 %cmp70, label %land.lhs.true.71, label %if.else

land.lhs.true.71:                                 ; preds = %if.end.65
  %34 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp72 = icmp ne %union.tree_node* %34, %35
  br i1 %cmp72, label %if.then.73, label %if.else

if.then.73:                                       ; preds = %land.lhs.true.71
  call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14, i32 0, i32 0))
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %36, %union.tree_node** %value.addr, align 8
  br label %if.end.75

if.else:                                          ; preds = %land.lhs.true.71, %if.end.65
  %37 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call74 = call %union.tree_node* @default_conversion(%union.tree_node* %37)
  store %union.tree_node* %call74, %union.tree_node** %value.addr, align 8
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.73
  %38 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  call void @constant_expression_warning(%union.tree_node* %38)
  %39 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  store %union.tree_node* %39, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.75, %if.then
  %40 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %40
}

declare %union.tree_node* @decl_constant_value(%union.tree_node*) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @type_for_size(i32 %bits, i32 %unsignedp) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %bits.addr = alloca i32, align 4
  %unsignedp.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  %0 = load i32, i32* %bits.addr, align 4
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type = bitcast %union.tree_node* %1 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load = load i32, i32* %precision, align 4
  %bf.clear = and i32 %bf.load, 511
  %cmp = icmp eq i32 %0, %bf.clear
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %unsignedp.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %3, %cond.true ], [ %4, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %bits.addr, align 4
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %type1 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i32 0, i32 6
  %bf.load3 = load i32, i32* %precision2, align 4
  %bf.clear4 = and i32 %bf.load3, 511
  %cmp5 = icmp eq i32 %5, %bf.clear4
  br i1 %cmp5, label %if.then.6, label %if.end.12

if.then.6:                                        ; preds = %if.end
  %7 = load i32, i32* %unsignedp.addr, align 4
  %tobool7 = icmp ne i32 %7, 0
  br i1 %tobool7, label %cond.true.8, label %cond.false.9

cond.true.8:                                      ; preds = %if.then.6
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  br label %cond.end.10

cond.false.9:                                     ; preds = %if.then.6
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.9, %cond.true.8
  %cond11 = phi %union.tree_node* [ %8, %cond.true.8 ], [ %9, %cond.false.9 ]
  store %union.tree_node* %cond11, %union.tree_node** %retval
  br label %return

if.end.12:                                        ; preds = %if.end
  %10 = load i32, i32* %bits.addr, align 4
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  %type13 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %precision14 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 6
  %bf.load15 = load i32, i32* %precision14, align 4
  %bf.clear16 = and i32 %bf.load15, 511
  %cmp17 = icmp eq i32 %10, %bf.clear16
  br i1 %cmp17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %if.end.12
  %12 = load i32, i32* %unsignedp.addr, align 4
  %tobool19 = icmp ne i32 %12, 0
  br i1 %tobool19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %if.then.18
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  br label %cond.end.22

cond.false.21:                                    ; preds = %if.then.18
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.21, %cond.true.20
  %cond23 = phi %union.tree_node* [ %13, %cond.true.20 ], [ %14, %cond.false.21 ]
  store %union.tree_node* %cond23, %union.tree_node** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.12
  %15 = load i32, i32* %bits.addr, align 4
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %type25 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %precision26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i32 0, i32 6
  %bf.load27 = load i32, i32* %precision26, align 4
  %bf.clear28 = and i32 %bf.load27, 511
  %cmp29 = icmp eq i32 %15, %bf.clear28
  br i1 %cmp29, label %if.then.30, label %if.end.36

if.then.30:                                       ; preds = %if.end.24
  %17 = load i32, i32* %unsignedp.addr, align 4
  %tobool31 = icmp ne i32 %17, 0
  br i1 %tobool31, label %cond.true.32, label %cond.false.33

cond.true.32:                                     ; preds = %if.then.30
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  br label %cond.end.34

cond.false.33:                                    ; preds = %if.then.30
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  br label %cond.end.34

cond.end.34:                                      ; preds = %cond.false.33, %cond.true.32
  %cond35 = phi %union.tree_node* [ %18, %cond.true.32 ], [ %19, %cond.false.33 ]
  store %union.tree_node* %cond35, %union.tree_node** %retval
  br label %return

if.end.36:                                        ; preds = %if.end.24
  %20 = load i32, i32* %bits.addr, align 4
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %type37 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %precision38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i32 0, i32 6
  %bf.load39 = load i32, i32* %precision38, align 4
  %bf.clear40 = and i32 %bf.load39, 511
  %cmp41 = icmp eq i32 %20, %bf.clear40
  br i1 %cmp41, label %if.then.42, label %if.end.48

if.then.42:                                       ; preds = %if.end.36
  %22 = load i32, i32* %unsignedp.addr, align 4
  %tobool43 = icmp ne i32 %22, 0
  br i1 %tobool43, label %cond.true.44, label %cond.false.45

cond.true.44:                                     ; preds = %if.then.42
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  br label %cond.end.46

cond.false.45:                                    ; preds = %if.then.42
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  br label %cond.end.46

cond.end.46:                                      ; preds = %cond.false.45, %cond.true.44
  %cond47 = phi %union.tree_node* [ %23, %cond.true.44 ], [ %24, %cond.false.45 ]
  store %union.tree_node* %cond47, %union.tree_node** %retval
  br label %return

if.end.48:                                        ; preds = %if.end.36
  %25 = load i32, i32* %bits.addr, align 4
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %type49 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %precision50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type49, i32 0, i32 6
  %bf.load51 = load i32, i32* %precision50, align 4
  %bf.clear52 = and i32 %bf.load51, 511
  %cmp53 = icmp eq i32 %25, %bf.clear52
  br i1 %cmp53, label %if.then.54, label %if.end.60

if.then.54:                                       ; preds = %if.end.48
  %27 = load i32, i32* %unsignedp.addr, align 4
  %tobool55 = icmp ne i32 %27, 0
  br i1 %tobool55, label %cond.true.56, label %cond.false.57

cond.true.56:                                     ; preds = %if.then.54
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  br label %cond.end.58

cond.false.57:                                    ; preds = %if.then.54
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.57, %cond.true.56
  %cond59 = phi %union.tree_node* [ %28, %cond.true.56 ], [ %29, %cond.false.57 ]
  store %union.tree_node* %cond59, %union.tree_node** %retval
  br label %return

if.end.60:                                        ; preds = %if.end.48
  %30 = load i32, i32* %bits.addr, align 4
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  %type61 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %precision62 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type61, i32 0, i32 6
  %bf.load63 = load i32, i32* %precision62, align 4
  %bf.clear64 = and i32 %bf.load63, 511
  %cmp65 = icmp ule i32 %30, %bf.clear64
  br i1 %cmp65, label %if.then.66, label %if.end.72

if.then.66:                                       ; preds = %if.end.60
  %32 = load i32, i32* %unsignedp.addr, align 4
  %tobool67 = icmp ne i32 %32, 0
  br i1 %tobool67, label %cond.true.68, label %cond.false.69

cond.true.68:                                     ; preds = %if.then.66
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  br label %cond.end.70

cond.false.69:                                    ; preds = %if.then.66
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  br label %cond.end.70

cond.end.70:                                      ; preds = %cond.false.69, %cond.true.68
  %cond71 = phi %union.tree_node* [ %33, %cond.true.68 ], [ %34, %cond.false.69 ]
  store %union.tree_node* %cond71, %union.tree_node** %retval
  br label %return

if.end.72:                                        ; preds = %if.end.60
  %35 = load i32, i32* %bits.addr, align 4
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  %type73 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %precision74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type73, i32 0, i32 6
  %bf.load75 = load i32, i32* %precision74, align 4
  %bf.clear76 = and i32 %bf.load75, 511
  %cmp77 = icmp ule i32 %35, %bf.clear76
  br i1 %cmp77, label %if.then.78, label %if.end.84

if.then.78:                                       ; preds = %if.end.72
  %37 = load i32, i32* %unsignedp.addr, align 4
  %tobool79 = icmp ne i32 %37, 0
  br i1 %tobool79, label %cond.true.80, label %cond.false.81

cond.true.80:                                     ; preds = %if.then.78
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  br label %cond.end.82

cond.false.81:                                    ; preds = %if.then.78
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  br label %cond.end.82

cond.end.82:                                      ; preds = %cond.false.81, %cond.true.80
  %cond83 = phi %union.tree_node* [ %38, %cond.true.80 ], [ %39, %cond.false.81 ]
  store %union.tree_node* %cond83, %union.tree_node** %retval
  br label %return

if.end.84:                                        ; preds = %if.end.72
  %40 = load i32, i32* %bits.addr, align 4
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  %type85 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %precision86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i32 0, i32 6
  %bf.load87 = load i32, i32* %precision86, align 4
  %bf.clear88 = and i32 %bf.load87, 511
  %cmp89 = icmp ule i32 %40, %bf.clear88
  br i1 %cmp89, label %if.then.90, label %if.end.96

if.then.90:                                       ; preds = %if.end.84
  %42 = load i32, i32* %unsignedp.addr, align 4
  %tobool91 = icmp ne i32 %42, 0
  br i1 %tobool91, label %cond.true.92, label %cond.false.93

cond.true.92:                                     ; preds = %if.then.90
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  br label %cond.end.94

cond.false.93:                                    ; preds = %if.then.90
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.93, %cond.true.92
  %cond95 = phi %union.tree_node* [ %43, %cond.true.92 ], [ %44, %cond.false.93 ]
  store %union.tree_node* %cond95, %union.tree_node** %retval
  br label %return

if.end.96:                                        ; preds = %if.end.84
  %45 = load i32, i32* %bits.addr, align 4
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  %type97 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %precision98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type97, i32 0, i32 6
  %bf.load99 = load i32, i32* %precision98, align 4
  %bf.clear100 = and i32 %bf.load99, 511
  %cmp101 = icmp ule i32 %45, %bf.clear100
  br i1 %cmp101, label %if.then.102, label %if.end.108

if.then.102:                                      ; preds = %if.end.96
  %47 = load i32, i32* %unsignedp.addr, align 4
  %tobool103 = icmp ne i32 %47, 0
  br i1 %tobool103, label %cond.true.104, label %cond.false.105

cond.true.104:                                    ; preds = %if.then.102
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  br label %cond.end.106

cond.false.105:                                   ; preds = %if.then.102
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  br label %cond.end.106

cond.end.106:                                     ; preds = %cond.false.105, %cond.true.104
  %cond107 = phi %union.tree_node* [ %48, %cond.true.104 ], [ %49, %cond.false.105 ]
  store %union.tree_node* %cond107, %union.tree_node** %retval
  br label %return

if.end.108:                                       ; preds = %if.end.96
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.108, %cond.end.106, %cond.end.94, %cond.end.82, %cond.end.70, %cond.end.58, %cond.end.46, %cond.end.34, %cond.end.22, %cond.end.10, %cond.end
  %50 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %50
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @type_for_mode(i32 %mode, i32 %unsignedp) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %mode.addr = alloca i32, align 4
  %unsignedp.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  %0 = load i32, i32* %mode.addr, align 4
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type = bitcast %union.tree_node* %1 to %struct.tree_type*
  %mode1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load = load i32, i32* %mode1, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %cmp = icmp eq i32 %0, %bf.clear
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %unsignedp.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %3, %cond.true ], [ %4, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %mode.addr, align 4
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %type2 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 6
  %bf.load4 = load i32, i32* %mode3, align 4
  %bf.lshr5 = lshr i32 %bf.load4, 9
  %bf.clear6 = and i32 %bf.lshr5, 127
  %cmp7 = icmp eq i32 %5, %bf.clear6
  br i1 %cmp7, label %if.then.8, label %if.end.14

if.then.8:                                        ; preds = %if.end
  %7 = load i32, i32* %unsignedp.addr, align 4
  %tobool9 = icmp ne i32 %7, 0
  br i1 %tobool9, label %cond.true.10, label %cond.false.11

cond.true.10:                                     ; preds = %if.then.8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  br label %cond.end.12

cond.false.11:                                    ; preds = %if.then.8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.11, %cond.true.10
  %cond13 = phi %union.tree_node* [ %8, %cond.true.10 ], [ %9, %cond.false.11 ]
  store %union.tree_node* %cond13, %union.tree_node** %retval
  br label %return

if.end.14:                                        ; preds = %if.end
  %10 = load i32, i32* %mode.addr, align 4
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  %type15 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 6
  %bf.load17 = load i32, i32* %mode16, align 4
  %bf.lshr18 = lshr i32 %bf.load17, 9
  %bf.clear19 = and i32 %bf.lshr18, 127
  %cmp20 = icmp eq i32 %10, %bf.clear19
  br i1 %cmp20, label %if.then.21, label %if.end.27

if.then.21:                                       ; preds = %if.end.14
  %12 = load i32, i32* %unsignedp.addr, align 4
  %tobool22 = icmp ne i32 %12, 0
  br i1 %tobool22, label %cond.true.23, label %cond.false.24

cond.true.23:                                     ; preds = %if.then.21
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  br label %cond.end.25

cond.false.24:                                    ; preds = %if.then.21
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  br label %cond.end.25

cond.end.25:                                      ; preds = %cond.false.24, %cond.true.23
  %cond26 = phi %union.tree_node* [ %13, %cond.true.23 ], [ %14, %cond.false.24 ]
  store %union.tree_node* %cond26, %union.tree_node** %retval
  br label %return

if.end.27:                                        ; preds = %if.end.14
  %15 = load i32, i32* %mode.addr, align 4
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %type28 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %mode29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i32 0, i32 6
  %bf.load30 = load i32, i32* %mode29, align 4
  %bf.lshr31 = lshr i32 %bf.load30, 9
  %bf.clear32 = and i32 %bf.lshr31, 127
  %cmp33 = icmp eq i32 %15, %bf.clear32
  br i1 %cmp33, label %if.then.34, label %if.end.40

if.then.34:                                       ; preds = %if.end.27
  %17 = load i32, i32* %unsignedp.addr, align 4
  %tobool35 = icmp ne i32 %17, 0
  br i1 %tobool35, label %cond.true.36, label %cond.false.37

cond.true.36:                                     ; preds = %if.then.34
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  br label %cond.end.38

cond.false.37:                                    ; preds = %if.then.34
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  br label %cond.end.38

cond.end.38:                                      ; preds = %cond.false.37, %cond.true.36
  %cond39 = phi %union.tree_node* [ %18, %cond.true.36 ], [ %19, %cond.false.37 ]
  store %union.tree_node* %cond39, %union.tree_node** %retval
  br label %return

if.end.40:                                        ; preds = %if.end.27
  %20 = load i32, i32* %mode.addr, align 4
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %type41 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %mode42 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type41, i32 0, i32 6
  %bf.load43 = load i32, i32* %mode42, align 4
  %bf.lshr44 = lshr i32 %bf.load43, 9
  %bf.clear45 = and i32 %bf.lshr44, 127
  %cmp46 = icmp eq i32 %20, %bf.clear45
  br i1 %cmp46, label %if.then.47, label %if.end.53

if.then.47:                                       ; preds = %if.end.40
  %22 = load i32, i32* %unsignedp.addr, align 4
  %tobool48 = icmp ne i32 %22, 0
  br i1 %tobool48, label %cond.true.49, label %cond.false.50

cond.true.49:                                     ; preds = %if.then.47
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  br label %cond.end.51

cond.false.50:                                    ; preds = %if.then.47
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  br label %cond.end.51

cond.end.51:                                      ; preds = %cond.false.50, %cond.true.49
  %cond52 = phi %union.tree_node* [ %23, %cond.true.49 ], [ %24, %cond.false.50 ]
  store %union.tree_node* %cond52, %union.tree_node** %retval
  br label %return

if.end.53:                                        ; preds = %if.end.40
  %25 = load i32, i32* %mode.addr, align 4
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %type54 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %mode55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i32 0, i32 6
  %bf.load56 = load i32, i32* %mode55, align 4
  %bf.lshr57 = lshr i32 %bf.load56, 9
  %bf.clear58 = and i32 %bf.lshr57, 127
  %cmp59 = icmp eq i32 %25, %bf.clear58
  br i1 %cmp59, label %if.then.60, label %if.end.66

if.then.60:                                       ; preds = %if.end.53
  %27 = load i32, i32* %unsignedp.addr, align 4
  %tobool61 = icmp ne i32 %27, 0
  br i1 %tobool61, label %cond.true.62, label %cond.false.63

cond.true.62:                                     ; preds = %if.then.60
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  br label %cond.end.64

cond.false.63:                                    ; preds = %if.then.60
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  br label %cond.end.64

cond.end.64:                                      ; preds = %cond.false.63, %cond.true.62
  %cond65 = phi %union.tree_node* [ %28, %cond.true.62 ], [ %29, %cond.false.63 ]
  store %union.tree_node* %cond65, %union.tree_node** %retval
  br label %return

if.end.66:                                        ; preds = %if.end.53
  %30 = load i32, i32* %mode.addr, align 4
  %cmp67 = icmp eq i32 %30, 2
  br i1 %cmp67, label %if.then.68, label %if.end.74

if.then.68:                                       ; preds = %if.end.66
  %31 = load i32, i32* %unsignedp.addr, align 4
  %tobool69 = icmp ne i32 %31, 0
  br i1 %tobool69, label %cond.true.70, label %cond.false.71

cond.true.70:                                     ; preds = %if.then.68
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  br label %cond.end.72

cond.false.71:                                    ; preds = %if.then.68
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  br label %cond.end.72

cond.end.72:                                      ; preds = %cond.false.71, %cond.true.70
  %cond73 = phi %union.tree_node* [ %32, %cond.true.70 ], [ %33, %cond.false.71 ]
  store %union.tree_node* %cond73, %union.tree_node** %retval
  br label %return

if.end.74:                                        ; preds = %if.end.66
  %34 = load i32, i32* %mode.addr, align 4
  %cmp75 = icmp eq i32 %34, 3
  br i1 %cmp75, label %if.then.76, label %if.end.82

if.then.76:                                       ; preds = %if.end.74
  %35 = load i32, i32* %unsignedp.addr, align 4
  %tobool77 = icmp ne i32 %35, 0
  br i1 %tobool77, label %cond.true.78, label %cond.false.79

cond.true.78:                                     ; preds = %if.then.76
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  br label %cond.end.80

cond.false.79:                                    ; preds = %if.then.76
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  br label %cond.end.80

cond.end.80:                                      ; preds = %cond.false.79, %cond.true.78
  %cond81 = phi %union.tree_node* [ %36, %cond.true.78 ], [ %37, %cond.false.79 ]
  store %union.tree_node* %cond81, %union.tree_node** %retval
  br label %return

if.end.82:                                        ; preds = %if.end.74
  %38 = load i32, i32* %mode.addr, align 4
  %cmp83 = icmp eq i32 %38, 4
  br i1 %cmp83, label %if.then.84, label %if.end.90

if.then.84:                                       ; preds = %if.end.82
  %39 = load i32, i32* %unsignedp.addr, align 4
  %tobool85 = icmp ne i32 %39, 0
  br i1 %tobool85, label %cond.true.86, label %cond.false.87

cond.true.86:                                     ; preds = %if.then.84
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  br label %cond.end.88

cond.false.87:                                    ; preds = %if.then.84
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  br label %cond.end.88

cond.end.88:                                      ; preds = %cond.false.87, %cond.true.86
  %cond89 = phi %union.tree_node* [ %40, %cond.true.86 ], [ %41, %cond.false.87 ]
  store %union.tree_node* %cond89, %union.tree_node** %retval
  br label %return

if.end.90:                                        ; preds = %if.end.82
  %42 = load i32, i32* %mode.addr, align 4
  %cmp91 = icmp eq i32 %42, 5
  br i1 %cmp91, label %if.then.92, label %if.end.98

if.then.92:                                       ; preds = %if.end.90
  %43 = load i32, i32* %unsignedp.addr, align 4
  %tobool93 = icmp ne i32 %43, 0
  br i1 %tobool93, label %cond.true.94, label %cond.false.95

cond.true.94:                                     ; preds = %if.then.92
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  br label %cond.end.96

cond.false.95:                                    ; preds = %if.then.92
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  br label %cond.end.96

cond.end.96:                                      ; preds = %cond.false.95, %cond.true.94
  %cond97 = phi %union.tree_node* [ %44, %cond.true.94 ], [ %45, %cond.false.95 ]
  store %union.tree_node* %cond97, %union.tree_node** %retval
  br label %return

if.end.98:                                        ; preds = %if.end.90
  %46 = load i32, i32* %mode.addr, align 4
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  %type99 = bitcast %union.tree_node* %47 to %struct.tree_type*
  %mode100 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type99, i32 0, i32 6
  %bf.load101 = load i32, i32* %mode100, align 4
  %bf.lshr102 = lshr i32 %bf.load101, 9
  %bf.clear103 = and i32 %bf.lshr102, 127
  %cmp104 = icmp eq i32 %46, %bf.clear103
  br i1 %cmp104, label %if.then.105, label %if.end.111

if.then.105:                                      ; preds = %if.end.98
  %48 = load i32, i32* %unsignedp.addr, align 4
  %tobool106 = icmp ne i32 %48, 0
  br i1 %tobool106, label %cond.true.107, label %cond.false.108

cond.true.107:                                    ; preds = %if.then.105
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 10), align 8
  br label %cond.end.109

cond.false.108:                                   ; preds = %if.then.105
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  br label %cond.end.109

cond.end.109:                                     ; preds = %cond.false.108, %cond.true.107
  %cond110 = phi %union.tree_node* [ %49, %cond.true.107 ], [ %50, %cond.false.108 ]
  store %union.tree_node* %cond110, %union.tree_node** %retval
  br label %return

if.end.111:                                       ; preds = %if.end.98
  %51 = load i32, i32* %mode.addr, align 4
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type112 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %mode113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type112, i32 0, i32 6
  %bf.load114 = load i32, i32* %mode113, align 4
  %bf.lshr115 = lshr i32 %bf.load114, 9
  %bf.clear116 = and i32 %bf.lshr115, 127
  %cmp117 = icmp eq i32 %51, %bf.clear116
  br i1 %cmp117, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %if.end.111
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  store %union.tree_node* %53, %union.tree_node** %retval
  br label %return

if.end.119:                                       ; preds = %if.end.111
  %54 = load i32, i32* %mode.addr, align 4
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %type120 = bitcast %union.tree_node* %55 to %struct.tree_type*
  %mode121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type120, i32 0, i32 6
  %bf.load122 = load i32, i32* %mode121, align 4
  %bf.lshr123 = lshr i32 %bf.load122, 9
  %bf.clear124 = and i32 %bf.lshr123, 127
  %cmp125 = icmp eq i32 %54, %bf.clear124
  br i1 %cmp125, label %if.then.126, label %if.end.127

if.then.126:                                      ; preds = %if.end.119
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  store %union.tree_node* %56, %union.tree_node** %retval
  br label %return

if.end.127:                                       ; preds = %if.end.119
  %57 = load i32, i32* %mode.addr, align 4
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %type128 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %mode129 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type128, i32 0, i32 6
  %bf.load130 = load i32, i32* %mode129, align 4
  %bf.lshr131 = lshr i32 %bf.load130, 9
  %bf.clear132 = and i32 %bf.lshr131, 127
  %cmp133 = icmp eq i32 %57, %bf.clear132
  br i1 %cmp133, label %if.then.134, label %if.end.135

if.then.134:                                      ; preds = %if.end.127
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  store %union.tree_node* %59, %union.tree_node** %retval
  br label %return

if.end.135:                                       ; preds = %if.end.127
  %60 = load i32, i32* %mode.addr, align 4
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %call = call %union.tree_node* @build_pointer_type(%union.tree_node* %61)
  %type136 = bitcast %union.tree_node* %call to %struct.tree_type*
  %mode137 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type136, i32 0, i32 6
  %bf.load138 = load i32, i32* %mode137, align 4
  %bf.lshr139 = lshr i32 %bf.load138, 9
  %bf.clear140 = and i32 %bf.lshr139, 127
  %cmp141 = icmp eq i32 %60, %bf.clear140
  br i1 %cmp141, label %if.then.142, label %if.end.144

if.then.142:                                      ; preds = %if.end.135
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %call143 = call %union.tree_node* @build_pointer_type(%union.tree_node* %62)
  store %union.tree_node* %call143, %union.tree_node** %retval
  br label %return

if.end.144:                                       ; preds = %if.end.135
  %63 = load i32, i32* %mode.addr, align 4
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %call145 = call %union.tree_node* @build_pointer_type(%union.tree_node* %64)
  %type146 = bitcast %union.tree_node* %call145 to %struct.tree_type*
  %mode147 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type146, i32 0, i32 6
  %bf.load148 = load i32, i32* %mode147, align 4
  %bf.lshr149 = lshr i32 %bf.load148, 9
  %bf.clear150 = and i32 %bf.lshr149, 127
  %cmp151 = icmp eq i32 %63, %bf.clear150
  br i1 %cmp151, label %if.then.152, label %if.end.154

if.then.152:                                      ; preds = %if.end.144
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %call153 = call %union.tree_node* @build_pointer_type(%union.tree_node* %65)
  store %union.tree_node* %call153, %union.tree_node** %retval
  br label %return

if.end.154:                                       ; preds = %if.end.144
  %66 = load i32, i32* %mode.addr, align 4
  %cmp155 = icmp eq i32 %66, 6
  br i1 %cmp155, label %land.lhs.true.174, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.154
  %67 = load i32, i32* %mode.addr, align 4
  %cmp156 = icmp eq i32 %67, 46
  br i1 %cmp156, label %land.lhs.true.174, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %lor.lhs.false
  %68 = load i32, i32* %mode.addr, align 4
  %cmp158 = icmp eq i32 %68, 37
  br i1 %cmp158, label %land.lhs.true.174, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %lor.lhs.false.157
  %69 = load i32, i32* %mode.addr, align 4
  %cmp160 = icmp eq i32 %69, 15
  br i1 %cmp160, label %land.lhs.true.174, label %lor.lhs.false.161

lor.lhs.false.161:                                ; preds = %lor.lhs.false.159
  %70 = load i32, i32* @target_flags, align 4
  %and = and i32 %70, 262144
  %cmp162 = icmp ne i32 %and, 0
  br i1 %cmp162, label %land.lhs.true, label %cond.false.178

land.lhs.true:                                    ; preds = %lor.lhs.false.161
  %71 = load i32, i32* %mode.addr, align 4
  %cmp163 = icmp eq i32 %71, 16
  br i1 %cmp163, label %land.lhs.true.174, label %lor.lhs.false.164

lor.lhs.false.164:                                ; preds = %land.lhs.true
  %72 = load i32, i32* %mode.addr, align 4
  %cmp165 = icmp eq i32 %72, 5
  br i1 %cmp165, label %land.lhs.true.174, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %lor.lhs.false.164
  %73 = load i32, i32* %mode.addr, align 4
  %cmp167 = icmp eq i32 %73, 39
  br i1 %cmp167, label %land.lhs.true.174, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.166
  %74 = load i32, i32* %mode.addr, align 4
  %cmp169 = icmp eq i32 %74, 36
  br i1 %cmp169, label %land.lhs.true.174, label %lor.lhs.false.170

lor.lhs.false.170:                                ; preds = %lor.lhs.false.168
  %75 = load i32, i32* %mode.addr, align 4
  %cmp171 = icmp eq i32 %75, 33
  br i1 %cmp171, label %land.lhs.true.174, label %lor.lhs.false.172

lor.lhs.false.172:                                ; preds = %lor.lhs.false.170
  %76 = load i32, i32* %mode.addr, align 4
  %cmp173 = icmp eq i32 %76, 4
  br i1 %cmp173, label %land.lhs.true.174, label %cond.false.178

land.lhs.true.174:                                ; preds = %lor.lhs.false.172, %lor.lhs.false.170, %lor.lhs.false.168, %lor.lhs.false.166, %lor.lhs.false.164, %land.lhs.true, %lor.lhs.false.159, %lor.lhs.false.157, %lor.lhs.false, %if.end.154
  %77 = load i32, i32* @target_flags, align 4
  %and175 = and i32 %77, 327680
  %cmp176 = icmp ne i32 %and175, 0
  br i1 %cmp176, label %cond.true.177, label %cond.false.178

cond.true.177:                                    ; preds = %land.lhs.true.174
  br i1 true, label %if.then.201, label %if.end.240

cond.false.178:                                   ; preds = %land.lhs.true.174, %lor.lhs.false.172, %lor.lhs.false.161
  %78 = load i32, i32* %mode.addr, align 4
  %cmp179 = icmp eq i32 %78, 5
  br i1 %cmp179, label %land.lhs.true.188, label %lor.lhs.false.180

lor.lhs.false.180:                                ; preds = %cond.false.178
  %79 = load i32, i32* %mode.addr, align 4
  %cmp181 = icmp eq i32 %79, 39
  br i1 %cmp181, label %land.lhs.true.188, label %lor.lhs.false.182

lor.lhs.false.182:                                ; preds = %lor.lhs.false.180
  %80 = load i32, i32* %mode.addr, align 4
  %cmp183 = icmp eq i32 %80, 36
  br i1 %cmp183, label %land.lhs.true.188, label %lor.lhs.false.184

lor.lhs.false.184:                                ; preds = %lor.lhs.false.182
  %81 = load i32, i32* %mode.addr, align 4
  %cmp185 = icmp eq i32 %81, 33
  br i1 %cmp185, label %land.lhs.true.188, label %lor.lhs.false.186

lor.lhs.false.186:                                ; preds = %lor.lhs.false.184
  %82 = load i32, i32* %mode.addr, align 4
  %cmp187 = icmp eq i32 %82, 4
  br i1 %cmp187, label %land.lhs.true.188, label %cond.false.192

land.lhs.true.188:                                ; preds = %lor.lhs.false.186, %lor.lhs.false.184, %lor.lhs.false.182, %lor.lhs.false.180, %cond.false.178
  %83 = load i32, i32* @target_flags, align 4
  %and189 = and i32 %83, 16384
  %cmp190 = icmp ne i32 %and189, 0
  br i1 %cmp190, label %cond.true.191, label %cond.false.192

cond.true.191:                                    ; preds = %land.lhs.true.188
  br i1 true, label %if.then.201, label %if.end.240

cond.false.192:                                   ; preds = %land.lhs.true.188, %lor.lhs.false.186
  %84 = load i32, i32* %mode.addr, align 4
  %cmp193 = icmp eq i32 %84, 44
  br i1 %cmp193, label %land.lhs.true.196, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %cond.false.192
  %85 = load i32, i32* %mode.addr, align 4
  %cmp195 = icmp eq i32 %85, 15
  br i1 %cmp195, label %land.lhs.true.196, label %cond.false.200

land.lhs.true.196:                                ; preds = %lor.lhs.false.194, %cond.false.192
  %86 = load i32, i32* @target_flags, align 4
  %and197 = and i32 %86, 1048576
  %cmp198 = icmp ne i32 %and197, 0
  br i1 %cmp198, label %cond.true.199, label %cond.false.200

cond.true.199:                                    ; preds = %land.lhs.true.196
  br i1 true, label %if.then.201, label %if.end.240

cond.false.200:                                   ; preds = %land.lhs.true.196, %lor.lhs.false.194
  br i1 false, label %if.then.201, label %if.end.240

if.then.201:                                      ; preds = %cond.false.200, %cond.true.199, %cond.true.191, %cond.true.177
  %87 = load i32, i32* %mode.addr, align 4
  switch i32 %87, label %sw.default [
    i32 43, label %sw.bb
    i32 40, label %sw.bb.207
    i32 37, label %sw.bb.213
    i32 33, label %sw.bb.219
    i32 36, label %sw.bb.225
    i32 39, label %sw.bb.231
    i32 50, label %sw.bb.237
    i32 46, label %sw.bb.238
    i32 44, label %sw.bb.239
  ]

sw.bb:                                            ; preds = %if.then.201
  %88 = load i32, i32* %unsignedp.addr, align 4
  %tobool202 = icmp ne i32 %88, 0
  br i1 %tobool202, label %cond.true.203, label %cond.false.204

cond.true.203:                                    ; preds = %sw.bb
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 40), align 8
  br label %cond.end.205

cond.false.204:                                   ; preds = %sw.bb
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 49), align 8
  br label %cond.end.205

cond.end.205:                                     ; preds = %cond.false.204, %cond.true.203
  %cond206 = phi %union.tree_node* [ %89, %cond.true.203 ], [ %90, %cond.false.204 ]
  store %union.tree_node* %cond206, %union.tree_node** %retval
  br label %return

sw.bb.207:                                        ; preds = %if.then.201
  %91 = load i32, i32* %unsignedp.addr, align 4
  %tobool208 = icmp ne i32 %91, 0
  br i1 %tobool208, label %cond.true.209, label %cond.false.210

cond.true.209:                                    ; preds = %sw.bb.207
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 35), align 8
  br label %cond.end.211

cond.false.210:                                   ; preds = %sw.bb.207
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 44), align 8
  br label %cond.end.211

cond.end.211:                                     ; preds = %cond.false.210, %cond.true.209
  %cond212 = phi %union.tree_node* [ %92, %cond.true.209 ], [ %93, %cond.false.210 ]
  store %union.tree_node* %cond212, %union.tree_node** %retval
  br label %return

sw.bb.213:                                        ; preds = %if.then.201
  %94 = load i32, i32* %unsignedp.addr, align 4
  %tobool214 = icmp ne i32 %94, 0
  br i1 %tobool214, label %cond.true.215, label %cond.false.216

cond.true.215:                                    ; preds = %sw.bb.213
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 34), align 8
  br label %cond.end.217

cond.false.216:                                   ; preds = %sw.bb.213
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 43), align 8
  br label %cond.end.217

cond.end.217:                                     ; preds = %cond.false.216, %cond.true.215
  %cond218 = phi %union.tree_node* [ %95, %cond.true.215 ], [ %96, %cond.false.216 ]
  store %union.tree_node* %cond218, %union.tree_node** %retval
  br label %return

sw.bb.219:                                        ; preds = %if.then.201
  %97 = load i32, i32* %unsignedp.addr, align 4
  %tobool220 = icmp ne i32 %97, 0
  br i1 %tobool220, label %cond.true.221, label %cond.false.222

cond.true.221:                                    ; preds = %sw.bb.219
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 38), align 8
  br label %cond.end.223

cond.false.222:                                   ; preds = %sw.bb.219
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 47), align 8
  br label %cond.end.223

cond.end.223:                                     ; preds = %cond.false.222, %cond.true.221
  %cond224 = phi %union.tree_node* [ %98, %cond.true.221 ], [ %99, %cond.false.222 ]
  store %union.tree_node* %cond224, %union.tree_node** %retval
  br label %return

sw.bb.225:                                        ; preds = %if.then.201
  %100 = load i32, i32* %unsignedp.addr, align 4
  %tobool226 = icmp ne i32 %100, 0
  br i1 %tobool226, label %cond.true.227, label %cond.false.228

cond.true.227:                                    ; preds = %sw.bb.225
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 37), align 8
  br label %cond.end.229

cond.false.228:                                   ; preds = %sw.bb.225
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 46), align 8
  br label %cond.end.229

cond.end.229:                                     ; preds = %cond.false.228, %cond.true.227
  %cond230 = phi %union.tree_node* [ %101, %cond.true.227 ], [ %102, %cond.false.228 ]
  store %union.tree_node* %cond230, %union.tree_node** %retval
  br label %return

sw.bb.231:                                        ; preds = %if.then.201
  %103 = load i32, i32* %unsignedp.addr, align 4
  %tobool232 = icmp ne i32 %103, 0
  br i1 %tobool232, label %cond.true.233, label %cond.false.234

cond.true.233:                                    ; preds = %sw.bb.231
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 36), align 8
  br label %cond.end.235

cond.false.234:                                   ; preds = %sw.bb.231
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 45), align 8
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.false.234, %cond.true.233
  %cond236 = phi %union.tree_node* [ %104, %cond.true.233 ], [ %105, %cond.false.234 ]
  store %union.tree_node* %cond236, %union.tree_node** %retval
  br label %return

sw.bb.237:                                        ; preds = %if.then.201
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 42), align 8
  store %union.tree_node* %106, %union.tree_node** %retval
  br label %return

sw.bb.238:                                        ; preds = %if.then.201
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 41), align 8
  store %union.tree_node* %107, %union.tree_node** %retval
  br label %return

sw.bb.239:                                        ; preds = %if.then.201
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 48), align 8
  store %union.tree_node* %108, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %if.then.201
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.240

if.end.240:                                       ; preds = %sw.epilog, %cond.false.200, %cond.true.199, %cond.true.191, %cond.true.177
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.240, %sw.bb.239, %sw.bb.238, %sw.bb.237, %cond.end.235, %cond.end.229, %cond.end.223, %cond.end.217, %cond.end.211, %cond.end.205, %if.then.152, %if.then.142, %if.then.134, %if.then.126, %if.then.118, %cond.end.109, %cond.end.96, %cond.end.88, %cond.end.80, %cond.end.72, %cond.end.64, %cond.end.51, %cond.end.38, %cond.end.25, %cond.end.12, %cond.end
  %109 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %109
}

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @signed_or_unsigned_type(i32 %unsignedp, %union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %unsignedp.addr = alloca i32, align 4
  %type.addr = alloca %union.tree_node*, align 8
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 6
  br i1 %cmp, label %lor.lhs.false.18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 10
  br i1 %cmp5, label %lor.lhs.false.18, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common7 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 11
  br i1 %cmp11, label %lor.lhs.false.18, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.6
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common13 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp eq i32 %bf.clear16, 12
  br i1 %cmp17, label %lor.lhs.false.18, label %if.then

lor.lhs.false.18:                                 ; preds = %lor.lhs.false.12, %lor.lhs.false.6, %lor.lhs.false, %entry
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common19 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load20 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load20, 13
  %bf.clear21 = and i32 %bf.lshr, 1
  %5 = load i32, i32* %unsignedp.addr, align 4
  %cmp22 = icmp eq i32 %bf.clear21, %5
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.18, %lor.lhs.false.12
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.18
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type23 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 6
  %bf.load24 = load i32, i32* %precision, align 4
  %bf.clear25 = and i32 %bf.load24, 511
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %type26 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %precision27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i32 0, i32 6
  %bf.load28 = load i32, i32* %precision27, align 4
  %bf.clear29 = and i32 %bf.load28, 511
  %cmp30 = icmp eq i32 %bf.clear25, %bf.clear29
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end
  %9 = load i32, i32* %unsignedp.addr, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.31
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.31
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %10, %cond.true ], [ %11, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %retval
  br label %return

if.end.32:                                        ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type33 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %precision34 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i32 0, i32 6
  %bf.load35 = load i32, i32* %precision34, align 4
  %bf.clear36 = and i32 %bf.load35, 511
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type37 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %precision38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i32 0, i32 6
  %bf.load39 = load i32, i32* %precision38, align 4
  %bf.clear40 = and i32 %bf.load39, 511
  %cmp41 = icmp eq i32 %bf.clear36, %bf.clear40
  br i1 %cmp41, label %if.then.42, label %if.end.48

if.then.42:                                       ; preds = %if.end.32
  %14 = load i32, i32* %unsignedp.addr, align 4
  %tobool43 = icmp ne i32 %14, 0
  br i1 %tobool43, label %cond.true.44, label %cond.false.45

cond.true.44:                                     ; preds = %if.then.42
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  br label %cond.end.46

cond.false.45:                                    ; preds = %if.then.42
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  br label %cond.end.46

cond.end.46:                                      ; preds = %cond.false.45, %cond.true.44
  %cond47 = phi %union.tree_node* [ %15, %cond.true.44 ], [ %16, %cond.false.45 ]
  store %union.tree_node* %cond47, %union.tree_node** %retval
  br label %return

if.end.48:                                        ; preds = %if.end.32
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type49 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision50 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type49, i32 0, i32 6
  %bf.load51 = load i32, i32* %precision50, align 4
  %bf.clear52 = and i32 %bf.load51, 511
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  %type53 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %precision54 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type53, i32 0, i32 6
  %bf.load55 = load i32, i32* %precision54, align 4
  %bf.clear56 = and i32 %bf.load55, 511
  %cmp57 = icmp eq i32 %bf.clear52, %bf.clear56
  br i1 %cmp57, label %if.then.58, label %if.end.64

if.then.58:                                       ; preds = %if.end.48
  %19 = load i32, i32* %unsignedp.addr, align 4
  %tobool59 = icmp ne i32 %19, 0
  br i1 %tobool59, label %cond.true.60, label %cond.false.61

cond.true.60:                                     ; preds = %if.then.58
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  br label %cond.end.62

cond.false.61:                                    ; preds = %if.then.58
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  br label %cond.end.62

cond.end.62:                                      ; preds = %cond.false.61, %cond.true.60
  %cond63 = phi %union.tree_node* [ %20, %cond.true.60 ], [ %21, %cond.false.61 ]
  store %union.tree_node* %cond63, %union.tree_node** %retval
  br label %return

if.end.64:                                        ; preds = %if.end.48
  %22 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type65 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %precision66 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type65, i32 0, i32 6
  %bf.load67 = load i32, i32* %precision66, align 4
  %bf.clear68 = and i32 %bf.load67, 511
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %type69 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %precision70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type69, i32 0, i32 6
  %bf.load71 = load i32, i32* %precision70, align 4
  %bf.clear72 = and i32 %bf.load71, 511
  %cmp73 = icmp eq i32 %bf.clear68, %bf.clear72
  br i1 %cmp73, label %if.then.74, label %if.end.80

if.then.74:                                       ; preds = %if.end.64
  %24 = load i32, i32* %unsignedp.addr, align 4
  %tobool75 = icmp ne i32 %24, 0
  br i1 %tobool75, label %cond.true.76, label %cond.false.77

cond.true.76:                                     ; preds = %if.then.74
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  br label %cond.end.78

cond.false.77:                                    ; preds = %if.then.74
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  br label %cond.end.78

cond.end.78:                                      ; preds = %cond.false.77, %cond.true.76
  %cond79 = phi %union.tree_node* [ %25, %cond.true.76 ], [ %26, %cond.false.77 ]
  store %union.tree_node* %cond79, %union.tree_node** %retval
  br label %return

if.end.80:                                        ; preds = %if.end.64
  %27 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type81 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %precision82 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type81, i32 0, i32 6
  %bf.load83 = load i32, i32* %precision82, align 4
  %bf.clear84 = and i32 %bf.load83, 511
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %type85 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %precision86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i32 0, i32 6
  %bf.load87 = load i32, i32* %precision86, align 4
  %bf.clear88 = and i32 %bf.load87, 511
  %cmp89 = icmp eq i32 %bf.clear84, %bf.clear88
  br i1 %cmp89, label %if.then.90, label %if.end.96

if.then.90:                                       ; preds = %if.end.80
  %29 = load i32, i32* %unsignedp.addr, align 4
  %tobool91 = icmp ne i32 %29, 0
  br i1 %tobool91, label %cond.true.92, label %cond.false.93

cond.true.92:                                     ; preds = %if.then.90
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  br label %cond.end.94

cond.false.93:                                    ; preds = %if.then.90
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.93, %cond.true.92
  %cond95 = phi %union.tree_node* [ %30, %cond.true.92 ], [ %31, %cond.false.93 ]
  store %union.tree_node* %cond95, %union.tree_node** %retval
  br label %return

if.end.96:                                        ; preds = %if.end.80
  %32 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type97 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %precision98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type97, i32 0, i32 6
  %bf.load99 = load i32, i32* %precision98, align 4
  %bf.clear100 = and i32 %bf.load99, 511
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %type101 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %precision102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i32 0, i32 6
  %bf.load103 = load i32, i32* %precision102, align 4
  %bf.clear104 = and i32 %bf.load103, 511
  %cmp105 = icmp eq i32 %bf.clear100, %bf.clear104
  br i1 %cmp105, label %if.then.106, label %if.end.112

if.then.106:                                      ; preds = %if.end.96
  %34 = load i32, i32* %unsignedp.addr, align 4
  %tobool107 = icmp ne i32 %34, 0
  br i1 %tobool107, label %cond.true.108, label %cond.false.109

cond.true.108:                                    ; preds = %if.then.106
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  br label %cond.end.110

cond.false.109:                                   ; preds = %if.then.106
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  br label %cond.end.110

cond.end.110:                                     ; preds = %cond.false.109, %cond.true.108
  %cond111 = phi %union.tree_node* [ %35, %cond.true.108 ], [ %36, %cond.false.109 ]
  store %union.tree_node* %cond111, %union.tree_node** %retval
  br label %return

if.end.112:                                       ; preds = %if.end.96
  %37 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type113 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %precision114 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type113, i32 0, i32 6
  %bf.load115 = load i32, i32* %precision114, align 4
  %bf.clear116 = and i32 %bf.load115, 511
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  %type117 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %precision118 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type117, i32 0, i32 6
  %bf.load119 = load i32, i32* %precision118, align 4
  %bf.clear120 = and i32 %bf.load119, 511
  %cmp121 = icmp eq i32 %bf.clear116, %bf.clear120
  br i1 %cmp121, label %if.then.122, label %if.end.128

if.then.122:                                      ; preds = %if.end.112
  %39 = load i32, i32* %unsignedp.addr, align 4
  %tobool123 = icmp ne i32 %39, 0
  br i1 %tobool123, label %cond.true.124, label %cond.false.125

cond.true.124:                                    ; preds = %if.then.122
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 10), align 8
  br label %cond.end.126

cond.false.125:                                   ; preds = %if.then.122
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  br label %cond.end.126

cond.end.126:                                     ; preds = %cond.false.125, %cond.true.124
  %cond127 = phi %union.tree_node* [ %40, %cond.true.124 ], [ %41, %cond.false.125 ]
  store %union.tree_node* %cond127, %union.tree_node** %retval
  br label %return

if.end.128:                                       ; preds = %if.end.112
  %42 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type129 = bitcast %union.tree_node* %42 to %struct.tree_type*
  %precision130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i32 0, i32 6
  %bf.load131 = load i32, i32* %precision130, align 4
  %bf.clear132 = and i32 %bf.load131, 511
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  %type133 = bitcast %union.tree_node* %43 to %struct.tree_type*
  %precision134 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type133, i32 0, i32 6
  %bf.load135 = load i32, i32* %precision134, align 4
  %bf.clear136 = and i32 %bf.load135, 511
  %cmp137 = icmp eq i32 %bf.clear132, %bf.clear136
  br i1 %cmp137, label %if.then.138, label %if.end.144

if.then.138:                                      ; preds = %if.end.128
  %44 = load i32, i32* %unsignedp.addr, align 4
  %tobool139 = icmp ne i32 %44, 0
  br i1 %tobool139, label %cond.true.140, label %cond.false.141

cond.true.140:                                    ; preds = %if.then.138
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  br label %cond.end.142

cond.false.141:                                   ; preds = %if.then.138
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  br label %cond.end.142

cond.end.142:                                     ; preds = %cond.false.141, %cond.true.140
  %cond143 = phi %union.tree_node* [ %45, %cond.true.140 ], [ %46, %cond.false.141 ]
  store %union.tree_node* %cond143, %union.tree_node** %retval
  br label %return

if.end.144:                                       ; preds = %if.end.128
  %47 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type145 = bitcast %union.tree_node* %47 to %struct.tree_type*
  %precision146 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type145, i32 0, i32 6
  %bf.load147 = load i32, i32* %precision146, align 4
  %bf.clear148 = and i32 %bf.load147, 511
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  %type149 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %precision150 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type149, i32 0, i32 6
  %bf.load151 = load i32, i32* %precision150, align 4
  %bf.clear152 = and i32 %bf.load151, 511
  %cmp153 = icmp eq i32 %bf.clear148, %bf.clear152
  br i1 %cmp153, label %if.then.154, label %if.end.160

if.then.154:                                      ; preds = %if.end.144
  %49 = load i32, i32* %unsignedp.addr, align 4
  %tobool155 = icmp ne i32 %49, 0
  br i1 %tobool155, label %cond.true.156, label %cond.false.157

cond.true.156:                                    ; preds = %if.then.154
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  br label %cond.end.158

cond.false.157:                                   ; preds = %if.then.154
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  br label %cond.end.158

cond.end.158:                                     ; preds = %cond.false.157, %cond.true.156
  %cond159 = phi %union.tree_node* [ %50, %cond.true.156 ], [ %51, %cond.false.157 ]
  store %union.tree_node* %cond159, %union.tree_node** %retval
  br label %return

if.end.160:                                       ; preds = %if.end.144
  %52 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type161 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %precision162 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type161, i32 0, i32 6
  %bf.load163 = load i32, i32* %precision162, align 4
  %bf.clear164 = and i32 %bf.load163, 511
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  %type165 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %precision166 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type165, i32 0, i32 6
  %bf.load167 = load i32, i32* %precision166, align 4
  %bf.clear168 = and i32 %bf.load167, 511
  %cmp169 = icmp eq i32 %bf.clear164, %bf.clear168
  br i1 %cmp169, label %if.then.170, label %if.end.176

if.then.170:                                      ; preds = %if.end.160
  %54 = load i32, i32* %unsignedp.addr, align 4
  %tobool171 = icmp ne i32 %54, 0
  br i1 %tobool171, label %cond.true.172, label %cond.false.173

cond.true.172:                                    ; preds = %if.then.170
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  br label %cond.end.174

cond.false.173:                                   ; preds = %if.then.170
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  br label %cond.end.174

cond.end.174:                                     ; preds = %cond.false.173, %cond.true.172
  %cond175 = phi %union.tree_node* [ %55, %cond.true.172 ], [ %56, %cond.false.173 ]
  store %union.tree_node* %cond175, %union.tree_node** %retval
  br label %return

if.end.176:                                       ; preds = %if.end.160
  %57 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type177 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %precision178 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type177, i32 0, i32 6
  %bf.load179 = load i32, i32* %precision178, align 4
  %bf.clear180 = and i32 %bf.load179, 511
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  %type181 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %precision182 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type181, i32 0, i32 6
  %bf.load183 = load i32, i32* %precision182, align 4
  %bf.clear184 = and i32 %bf.load183, 511
  %cmp185 = icmp eq i32 %bf.clear180, %bf.clear184
  br i1 %cmp185, label %if.then.186, label %if.end.192

if.then.186:                                      ; preds = %if.end.176
  %59 = load i32, i32* %unsignedp.addr, align 4
  %tobool187 = icmp ne i32 %59, 0
  br i1 %tobool187, label %cond.true.188, label %cond.false.189

cond.true.188:                                    ; preds = %if.then.186
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  br label %cond.end.190

cond.false.189:                                   ; preds = %if.then.186
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.189, %cond.true.188
  %cond191 = phi %union.tree_node* [ %60, %cond.true.188 ], [ %61, %cond.false.189 ]
  store %union.tree_node* %cond191, %union.tree_node** %retval
  br label %return

if.end.192:                                       ; preds = %if.end.176
  %62 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %62, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.192, %cond.end.190, %cond.end.174, %cond.end.158, %cond.end.142, %cond.end.126, %cond.end.110, %cond.end.94, %cond.end.78, %cond.end.62, %cond.end.46, %cond.end, %if.then
  %63 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %63
}

; Function Attrs: nounwind uwtable
define i32 @min_precision(%union.tree_node* %value, i32 %unsignedp) #0 {
entry:
  %value.addr = alloca %union.tree_node*, align 8
  %unsignedp.addr = alloca i32, align 4
  %log = alloca i32, align 4
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  store i32 %unsignedp, i32* %unsignedp.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call = call i32 @tree_int_cst_sgn(%union.tree_node* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %3 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call1 = call %union.tree_node* @build1(i32 90, %union.tree_node* %2, %union.tree_node* %3)
  %call2 = call %union.tree_node* @fold(%union.tree_node* %call1)
  store %union.tree_node* %call2, %union.tree_node** %value.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call3 = call i32 @integer_zerop(%union.tree_node* %4)
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %log, align 4
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call5 = call i32 @tree_floor_log2(%union.tree_node* %5)
  store i32 %call5, i32* %log, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.4
  %6 = load i32, i32* %log, align 4
  %add = add nsw i32 %6, 1
  %7 = load i32, i32* %unsignedp.addr, align 4
  %tobool7 = icmp ne i32 %7, 0
  %lnot = xor i1 %tobool7, true
  %lnot.ext = zext i1 %lnot to i32
  %add8 = add nsw i32 %add, %lnot.ext
  ret i32 %add8
}

declare i32 @tree_int_cst_sgn(%union.tree_node*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

declare i32 @integer_zerop(%union.tree_node*) #1

declare i32 @tree_floor_log2(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @binary_op_error(i32 %code) #0 {
entry:
  %code.addr = alloca i32, align 4
  %opname = alloca i8*, align 8
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  switch i32 %0, label %sw.default [
    i32 115, label %sw.bb
    i32 59, label %sw.bb.1
    i32 60, label %sw.bb.2
    i32 61, label %sw.bb.3
    i32 79, label %sw.bb.4
    i32 78, label %sw.bb.5
    i32 101, label %sw.bb.6
    i32 102, label %sw.bb.7
    i32 98, label %sw.bb.8
    i32 100, label %sw.bb.9
    i32 97, label %sw.bb.10
    i32 99, label %sw.bb.11
    i32 82, label %sw.bb.12
    i32 83, label %sw.bb.13
    i32 66, label %sw.bb.14
    i32 68, label %sw.bb.14
    i32 62, label %sw.bb.15
    i32 64, label %sw.bb.15
    i32 88, label %sw.bb.16
    i32 86, label %sw.bb.17
    i32 91, label %sw.bb.18
    i32 92, label %sw.bb.19
    i32 87, label %sw.bb.20
    i32 84, label %sw.bb.21
    i32 85, label %sw.bb.21
  ]

sw.bb:                                            ; preds = %entry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0))
  br label %return

sw.bb.1:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.2:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.4:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.5:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.6:                                          ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.7:                                          ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.8:                                          ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.9:                                          ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.10:                                         ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.11:                                         ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.12:                                         ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.13:                                         ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.14:                                         ; preds = %entry, %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.15:                                         ; preds = %entry, %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.16:                                         ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.17:                                         ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.18:                                         ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.19:                                         ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.20:                                         ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.bb.21:                                         ; preds = %entry, %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8** %opname, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.21, %sw.bb.20, %sw.bb.19, %sw.bb.18, %sw.bb.17, %sw.bb.16, %sw.bb.15, %sw.bb.14, %sw.bb.13, %sw.bb.12, %sw.bb.11, %sw.bb.10, %sw.bb.9, %sw.bb.8, %sw.bb.7, %sw.bb.6, %sw.bb.5, %sw.bb.4, %sw.bb.3, %sw.bb.2, %sw.bb.1
  %1 = load i8*, i8** %opname, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i8* %1)
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @shorten_compare(%union.tree_node** %op0_ptr, %union.tree_node** %op1_ptr, %union.tree_node** %restype_ptr, i32* %rescode_ptr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %op0_ptr.addr = alloca %union.tree_node**, align 8
  %op1_ptr.addr = alloca %union.tree_node**, align 8
  %restype_ptr.addr = alloca %union.tree_node**, align 8
  %rescode_ptr.addr = alloca i32*, align 8
  %type = alloca %union.tree_node*, align 8
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  %unsignedp0 = alloca i32, align 4
  %unsignedp1 = alloca i32, align 4
  %real1 = alloca i32, align 4
  %real2 = alloca i32, align 4
  %primop0 = alloca %union.tree_node*, align 8
  %primop1 = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %tem = alloca %union.tree_node*, align 8
  %temi = alloca i32, align 4
  %min_gt = alloca i32, align 4
  %max_gt = alloca i32, align 4
  %min_lt = alloca i32, align 4
  %max_lt = alloca i32, align 4
  %maxval = alloca %union.tree_node*, align 8
  %minval = alloca %union.tree_node*, align 8
  %unsignedp = alloca i32, align 4
  %val = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  store %union.tree_node** %op0_ptr, %union.tree_node*** %op0_ptr.addr, align 8
  store %union.tree_node** %op1_ptr, %union.tree_node*** %op1_ptr.addr, align 8
  store %union.tree_node** %restype_ptr, %union.tree_node*** %restype_ptr.addr, align 8
  store i32* %rescode_ptr, i32** %rescode_ptr.addr, align 8
  %0 = load %union.tree_node**, %union.tree_node*** %op0_ptr.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8
  store %union.tree_node* %1, %union.tree_node** %op0, align 8
  %2 = load %union.tree_node**, %union.tree_node*** %op1_ptr.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8
  store %union.tree_node* %3, %union.tree_node** %op1, align 8
  %4 = load i32*, i32** %rescode_ptr.addr, align 8
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %code, align 4
  %6 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %call = call %union.tree_node* @get_narrower(%union.tree_node* %6, i32* %unsignedp0)
  store %union.tree_node* %call, %union.tree_node** %primop0, align 8
  %7 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %call1 = call %union.tree_node* @get_narrower(%union.tree_node* %7, i32* %unsignedp1)
  store %union.tree_node* %call1, %union.tree_node** %primop1, align 8
  %8 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %9 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %cmp = icmp eq %union.tree_node* %8, %9
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %10 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %12 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8
  %cmp3 = icmp ne %union.tree_node* %11, %13
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %14 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %common4 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %common6 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* %unsignedp0, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %17 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %cmp7 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.20

land.lhs.true.8:                                  ; preds = %if.end
  %18 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common9 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type10, align 8
  %20 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8
  %cmp11 = icmp ne %union.tree_node* %19, %21
  br i1 %cmp11, label %if.then.12, label %if.end.20

if.then.12:                                       ; preds = %land.lhs.true.8
  %22 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %common13 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type14, align 8
  %common15 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %unsigned_flag16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %unsigned_flag16, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 13
  %bf.clear19 = and i32 %bf.lshr18, 1
  store i32 %bf.clear19, i32* %unsignedp1, align 4
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.12, %land.lhs.true.8, %if.end
  %24 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common21 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %common23 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 7
  %conv = zext i1 %cmp27 to i32
  store i32 %conv, i32* %real1, align 4
  %26 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common28 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type29, align 8
  %common30 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load32 = load i32, i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 7
  %conv35 = zext i1 %cmp34 to i32
  store i32 %conv35, i32* %real2, align 4
  %28 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common36 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load37 = load i32, i32* %constant_flag, align 8
  %bf.lshr38 = lshr i32 %bf.load37, 9
  %bf.clear39 = and i32 %bf.lshr38, 1
  %tobool = icmp ne i32 %bf.clear39, 0
  br i1 %tobool, label %land.lhs.true.40, label %if.end.50

land.lhs.true.40:                                 ; preds = %if.end.20
  %29 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call41 = call i32 @integer_zerop(%union.tree_node* %29)
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end.50, label %land.lhs.true.43

land.lhs.true.43:                                 ; preds = %land.lhs.true.40
  %30 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call44 = call i32 @real_zerop(%union.tree_node* %30)
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end.50, label %if.then.46

if.then.46:                                       ; preds = %land.lhs.true.43
  %31 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  store %union.tree_node* %31, %union.tree_node** %tem, align 8
  %32 = load i32, i32* %unsignedp0, align 4
  store i32 %32, i32* %temi, align 4
  %33 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  store %union.tree_node* %33, %union.tree_node** %primop0, align 8
  %34 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %34, %union.tree_node** %primop1, align 8
  %35 = load %union.tree_node*, %union.tree_node** %op0, align 8
  store %union.tree_node* %35, %union.tree_node** %tem, align 8
  %36 = load %union.tree_node*, %union.tree_node** %op1, align 8
  store %union.tree_node* %36, %union.tree_node** %op0, align 8
  %37 = load %union.tree_node*, %union.tree_node** %tem, align 8
  store %union.tree_node* %37, %union.tree_node** %op1, align 8
  %38 = load %union.tree_node*, %union.tree_node** %op0, align 8
  %39 = load %union.tree_node**, %union.tree_node*** %op0_ptr.addr, align 8
  store %union.tree_node* %38, %union.tree_node** %39, align 8
  %40 = load %union.tree_node*, %union.tree_node** %op1, align 8
  %41 = load %union.tree_node**, %union.tree_node*** %op1_ptr.addr, align 8
  store %union.tree_node* %40, %union.tree_node** %41, align 8
  %42 = load i32, i32* %unsignedp1, align 4
  store i32 %42, i32* %unsignedp0, align 4
  %43 = load i32, i32* %temi, align 4
  store i32 %43, i32* %unsignedp1, align 4
  %44 = load i32, i32* %real1, align 4
  store i32 %44, i32* %temi, align 4
  %45 = load i32, i32* %real2, align 4
  store i32 %45, i32* %real1, align 4
  %46 = load i32, i32* %temi, align 4
  store i32 %46, i32* %real2, align 4
  %47 = load i32, i32* %code, align 4
  switch i32 %47, label %sw.default [
    i32 97, label %sw.bb
    i32 99, label %sw.bb.47
    i32 98, label %sw.bb.48
    i32 100, label %sw.bb.49
  ]

sw.bb:                                            ; preds = %if.then.46
  store i32 99, i32* %code, align 4
  br label %sw.epilog

sw.bb.47:                                         ; preds = %if.then.46
  store i32 97, i32* %code, align 4
  br label %sw.epilog

sw.bb.48:                                         ; preds = %if.then.46
  store i32 100, i32* %code, align 4
  br label %sw.epilog

sw.bb.49:                                         ; preds = %if.then.46
  store i32 98, i32* %code, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.46
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.49, %sw.bb.48, %sw.bb.47, %sw.bb
  %48 = load i32, i32* %code, align 4
  %49 = load i32*, i32** %rescode_ptr.addr, align 8
  store i32 %48, i32* %49, align 4
  br label %if.end.50

if.end.50:                                        ; preds = %sw.epilog, %land.lhs.true.43, %land.lhs.true.40, %if.end.20
  %50 = load i32, i32* %real1, align 4
  %tobool51 = icmp ne i32 %50, 0
  br i1 %tobool51, label %if.else.481, label %land.lhs.true.52

land.lhs.true.52:                                 ; preds = %if.end.50
  %51 = load i32, i32* %real2, align 4
  %tobool53 = icmp ne i32 %51, 0
  br i1 %tobool53, label %if.else.481, label %land.lhs.true.54

land.lhs.true.54:                                 ; preds = %land.lhs.true.52
  %52 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common55 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %code56 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common55, i32 0, i32 2
  %bf.load57 = load i32, i32* %code56, align 8
  %bf.clear58 = and i32 %bf.load57, 255
  %cmp59 = icmp eq i32 %bf.clear58, 25
  br i1 %cmp59, label %land.lhs.true.61, label %if.else.481

land.lhs.true.61:                                 ; preds = %land.lhs.true.54
  %53 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common62 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type63, align 8
  %type64 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i32 0, i32 6
  %bf.load65 = load i32, i32* %precision, align 4
  %bf.clear66 = and i32 %bf.load65, 511
  %55 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8
  %type67 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %precision68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i32 0, i32 6
  %bf.load69 = load i32, i32* %precision68, align 4
  %bf.clear70 = and i32 %bf.load69, 511
  %cmp71 = icmp slt i32 %bf.clear66, %bf.clear70
  br i1 %cmp71, label %if.then.73, label %if.else.481

if.then.73:                                       ; preds = %land.lhs.true.61
  %57 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8
  %common74 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %unsigned_flag75 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common74, i32 0, i32 2
  %bf.load76 = load i32, i32* %unsigned_flag75, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 13
  %bf.clear78 = and i32 %bf.lshr77, 1
  store i32 %bf.clear78, i32* %unsignedp, align 4
  %59 = load i32, i32* %unsignedp0, align 4
  %60 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common79 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %type80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 1
  %61 = load %union.tree_node*, %union.tree_node** %type80, align 8
  %call81 = call %union.tree_node* @signed_or_unsigned_type(i32 %59, %union.tree_node* %61)
  store %union.tree_node* %call81, %union.tree_node** %type, align 8
  %62 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common82 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 2
  %bf.load84 = load i32, i32* %code83, align 8
  %bf.clear85 = and i32 %bf.load84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 10
  br i1 %cmp86, label %if.then.88, label %if.end.94

if.then.88:                                       ; preds = %if.then.73
  %63 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type89 = bitcast %union.tree_node* %63 to %struct.tree_type*
  %precision90 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type89, i32 0, i32 6
  %bf.load91 = load i32, i32* %precision90, align 4
  %bf.clear92 = and i32 %bf.load91, 511
  %64 = load i32, i32* %unsignedp0, align 4
  %call93 = call %union.tree_node* @type_for_size(i32 %bf.clear92, i32 %64)
  store %union.tree_node* %call93, %union.tree_node** %type, align 8
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.88, %if.then.73
  %65 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type95 = bitcast %union.tree_node* %65 to %struct.tree_type*
  %maxval96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i32 0, i32 13
  %66 = load %union.tree_node*, %union.tree_node** %maxval96, align 8
  store %union.tree_node* %66, %union.tree_node** %maxval, align 8
  %67 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type97 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %minval98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type97, i32 0, i32 12
  %68 = load %union.tree_node*, %union.tree_node** %minval98, align 8
  store %union.tree_node* %68, %union.tree_node** %minval, align 8
  %69 = load i32, i32* %unsignedp, align 4
  %tobool99 = icmp ne i32 %69, 0
  br i1 %tobool99, label %land.lhs.true.100, label %if.end.104

land.lhs.true.100:                                ; preds = %if.end.94
  %70 = load i32, i32* %unsignedp0, align 4
  %tobool101 = icmp ne i32 %70, 0
  br i1 %tobool101, label %if.end.104, label %if.then.102

if.then.102:                                      ; preds = %land.lhs.true.100
  %71 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %72 = load %union.tree_node*, %union.tree_node** %71, align 8
  %call103 = call %union.tree_node* @signed_type(%union.tree_node* %72)
  %73 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  store %union.tree_node* %call103, %union.tree_node** %73, align 8
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.102, %land.lhs.true.100, %if.end.94
  %74 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common105 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %type106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 1
  %75 = load %union.tree_node*, %union.tree_node** %type106, align 8
  %76 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %77 = load %union.tree_node*, %union.tree_node** %76, align 8
  %cmp107 = icmp ne %union.tree_node* %75, %77
  br i1 %cmp107, label %if.then.109, label %if.end.111

if.then.109:                                      ; preds = %if.end.104
  %78 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %79 = load %union.tree_node*, %union.tree_node** %78, align 8
  %80 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call110 = call %union.tree_node* @convert(%union.tree_node* %79, %union.tree_node* %80)
  store %union.tree_node* %call110, %union.tree_node** %primop1, align 8
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.109, %if.end.104
  %81 = load %union.tree_node*, %union.tree_node** %type, align 8
  %82 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %83 = load %union.tree_node*, %union.tree_node** %82, align 8
  %cmp112 = icmp ne %union.tree_node* %81, %83
  br i1 %cmp112, label %if.then.114, label %if.end.117

if.then.114:                                      ; preds = %if.end.111
  %84 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %85 = load %union.tree_node*, %union.tree_node** %84, align 8
  %86 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %call115 = call %union.tree_node* @convert(%union.tree_node* %85, %union.tree_node* %86)
  store %union.tree_node* %call115, %union.tree_node** %minval, align 8
  %87 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %88 = load %union.tree_node*, %union.tree_node** %87, align 8
  %89 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %call116 = call %union.tree_node* @convert(%union.tree_node* %88, %union.tree_node* %89)
  store %union.tree_node* %call116, %union.tree_node** %maxval, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.114, %if.end.111
  %90 = load i32, i32* %unsignedp, align 4
  %tobool118 = icmp ne i32 %90, 0
  br i1 %tobool118, label %land.lhs.true.119, label %if.else

land.lhs.true.119:                                ; preds = %if.end.117
  %91 = load i32, i32* %unsignedp0, align 4
  %tobool120 = icmp ne i32 %91, 0
  br i1 %tobool120, label %if.then.121, label %if.else

if.then.121:                                      ; preds = %land.lhs.true.119
  %92 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst = bitcast %union.tree_node* %92 to %struct.tree_int_cst*
  %int_cst122 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %high = getelementptr inbounds %struct.anon, %struct.anon* %int_cst122, i32 0, i32 1
  %93 = load i64, i64* %high, align 8
  %94 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst123 = bitcast %union.tree_node* %94 to %struct.tree_int_cst*
  %int_cst124 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst123, i32 0, i32 2
  %high125 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst124, i32 0, i32 1
  %95 = load i64, i64* %high125, align 8
  %cmp126 = icmp ult i64 %93, %95
  br i1 %cmp126, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.121
  %96 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst128 = bitcast %union.tree_node* %96 to %struct.tree_int_cst*
  %int_cst129 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst128, i32 0, i32 2
  %high130 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst129, i32 0, i32 1
  %97 = load i64, i64* %high130, align 8
  %98 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst131 = bitcast %union.tree_node* %98 to %struct.tree_int_cst*
  %int_cst132 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst131, i32 0, i32 2
  %high133 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst132, i32 0, i32 1
  %99 = load i64, i64* %high133, align 8
  %cmp134 = icmp eq i64 %97, %99
  br i1 %cmp134, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %100 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst136 = bitcast %union.tree_node* %100 to %struct.tree_int_cst*
  %int_cst137 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst136, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst137, i32 0, i32 0
  %101 = load i64, i64* %low, align 8
  %102 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst138 = bitcast %union.tree_node* %102 to %struct.tree_int_cst*
  %int_cst139 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst138, i32 0, i32 2
  %low140 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst139, i32 0, i32 0
  %103 = load i64, i64* %low140, align 8
  %cmp141 = icmp ult i64 %101, %103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %104 = phi i1 [ false, %lor.rhs ], [ %cmp141, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.then.121
  %105 = phi i1 [ true, %if.then.121 ], [ %104, %land.end ]
  %lor.ext = zext i1 %105 to i32
  store i32 %lor.ext, i32* %min_gt, align 4
  %106 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst143 = bitcast %union.tree_node* %106 to %struct.tree_int_cst*
  %int_cst144 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst143, i32 0, i32 2
  %high145 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst144, i32 0, i32 1
  %107 = load i64, i64* %high145, align 8
  %108 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst146 = bitcast %union.tree_node* %108 to %struct.tree_int_cst*
  %int_cst147 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst146, i32 0, i32 2
  %high148 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst147, i32 0, i32 1
  %109 = load i64, i64* %high148, align 8
  %cmp149 = icmp ult i64 %107, %109
  br i1 %cmp149, label %lor.end.170, label %lor.rhs.151

lor.rhs.151:                                      ; preds = %lor.end
  %110 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst152 = bitcast %union.tree_node* %110 to %struct.tree_int_cst*
  %int_cst153 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst152, i32 0, i32 2
  %high154 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst153, i32 0, i32 1
  %111 = load i64, i64* %high154, align 8
  %112 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst155 = bitcast %union.tree_node* %112 to %struct.tree_int_cst*
  %int_cst156 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst155, i32 0, i32 2
  %high157 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst156, i32 0, i32 1
  %113 = load i64, i64* %high157, align 8
  %cmp158 = icmp eq i64 %111, %113
  br i1 %cmp158, label %land.rhs.160, label %land.end.169

land.rhs.160:                                     ; preds = %lor.rhs.151
  %114 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst161 = bitcast %union.tree_node* %114 to %struct.tree_int_cst*
  %int_cst162 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst161, i32 0, i32 2
  %low163 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst162, i32 0, i32 0
  %115 = load i64, i64* %low163, align 8
  %116 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst164 = bitcast %union.tree_node* %116 to %struct.tree_int_cst*
  %int_cst165 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst164, i32 0, i32 2
  %low166 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst165, i32 0, i32 0
  %117 = load i64, i64* %low166, align 8
  %cmp167 = icmp ult i64 %115, %117
  br label %land.end.169

land.end.169:                                     ; preds = %land.rhs.160, %lor.rhs.151
  %118 = phi i1 [ false, %lor.rhs.151 ], [ %cmp167, %land.rhs.160 ]
  br label %lor.end.170

lor.end.170:                                      ; preds = %land.end.169, %lor.end
  %119 = phi i1 [ true, %lor.end ], [ %118, %land.end.169 ]
  %lor.ext171 = zext i1 %119 to i32
  store i32 %lor.ext171, i32* %max_gt, align 4
  %120 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst172 = bitcast %union.tree_node* %120 to %struct.tree_int_cst*
  %int_cst173 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst172, i32 0, i32 2
  %high174 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst173, i32 0, i32 1
  %121 = load i64, i64* %high174, align 8
  %122 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst175 = bitcast %union.tree_node* %122 to %struct.tree_int_cst*
  %int_cst176 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst175, i32 0, i32 2
  %high177 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst176, i32 0, i32 1
  %123 = load i64, i64* %high177, align 8
  %cmp178 = icmp ult i64 %121, %123
  br i1 %cmp178, label %lor.end.199, label %lor.rhs.180

lor.rhs.180:                                      ; preds = %lor.end.170
  %124 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst181 = bitcast %union.tree_node* %124 to %struct.tree_int_cst*
  %int_cst182 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst181, i32 0, i32 2
  %high183 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst182, i32 0, i32 1
  %125 = load i64, i64* %high183, align 8
  %126 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst184 = bitcast %union.tree_node* %126 to %struct.tree_int_cst*
  %int_cst185 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst184, i32 0, i32 2
  %high186 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst185, i32 0, i32 1
  %127 = load i64, i64* %high186, align 8
  %cmp187 = icmp eq i64 %125, %127
  br i1 %cmp187, label %land.rhs.189, label %land.end.198

land.rhs.189:                                     ; preds = %lor.rhs.180
  %128 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst190 = bitcast %union.tree_node* %128 to %struct.tree_int_cst*
  %int_cst191 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst190, i32 0, i32 2
  %low192 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst191, i32 0, i32 0
  %129 = load i64, i64* %low192, align 8
  %130 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst193 = bitcast %union.tree_node* %130 to %struct.tree_int_cst*
  %int_cst194 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst193, i32 0, i32 2
  %low195 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst194, i32 0, i32 0
  %131 = load i64, i64* %low195, align 8
  %cmp196 = icmp ult i64 %129, %131
  br label %land.end.198

land.end.198:                                     ; preds = %land.rhs.189, %lor.rhs.180
  %132 = phi i1 [ false, %lor.rhs.180 ], [ %cmp196, %land.rhs.189 ]
  br label %lor.end.199

lor.end.199:                                      ; preds = %land.end.198, %lor.end.170
  %133 = phi i1 [ true, %lor.end.170 ], [ %132, %land.end.198 ]
  %lor.ext200 = zext i1 %133 to i32
  store i32 %lor.ext200, i32* %min_lt, align 4
  %134 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst201 = bitcast %union.tree_node* %134 to %struct.tree_int_cst*
  %int_cst202 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst201, i32 0, i32 2
  %high203 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst202, i32 0, i32 1
  %135 = load i64, i64* %high203, align 8
  %136 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst204 = bitcast %union.tree_node* %136 to %struct.tree_int_cst*
  %int_cst205 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst204, i32 0, i32 2
  %high206 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst205, i32 0, i32 1
  %137 = load i64, i64* %high206, align 8
  %cmp207 = icmp ult i64 %135, %137
  br i1 %cmp207, label %lor.end.228, label %lor.rhs.209

lor.rhs.209:                                      ; preds = %lor.end.199
  %138 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst210 = bitcast %union.tree_node* %138 to %struct.tree_int_cst*
  %int_cst211 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst210, i32 0, i32 2
  %high212 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst211, i32 0, i32 1
  %139 = load i64, i64* %high212, align 8
  %140 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst213 = bitcast %union.tree_node* %140 to %struct.tree_int_cst*
  %int_cst214 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst213, i32 0, i32 2
  %high215 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst214, i32 0, i32 1
  %141 = load i64, i64* %high215, align 8
  %cmp216 = icmp eq i64 %139, %141
  br i1 %cmp216, label %land.rhs.218, label %land.end.227

land.rhs.218:                                     ; preds = %lor.rhs.209
  %142 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst219 = bitcast %union.tree_node* %142 to %struct.tree_int_cst*
  %int_cst220 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst219, i32 0, i32 2
  %low221 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst220, i32 0, i32 0
  %143 = load i64, i64* %low221, align 8
  %144 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst222 = bitcast %union.tree_node* %144 to %struct.tree_int_cst*
  %int_cst223 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst222, i32 0, i32 2
  %low224 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst223, i32 0, i32 0
  %145 = load i64, i64* %low224, align 8
  %cmp225 = icmp ult i64 %143, %145
  br label %land.end.227

land.end.227:                                     ; preds = %land.rhs.218, %lor.rhs.209
  %146 = phi i1 [ false, %lor.rhs.209 ], [ %cmp225, %land.rhs.218 ]
  br label %lor.end.228

lor.end.228:                                      ; preds = %land.end.227, %lor.end.199
  %147 = phi i1 [ true, %lor.end.199 ], [ %146, %land.end.227 ]
  %lor.ext229 = zext i1 %147 to i32
  store i32 %lor.ext229, i32* %max_lt, align 4
  br label %if.end.346

if.else:                                          ; preds = %land.lhs.true.119, %if.end.117
  %148 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst230 = bitcast %union.tree_node* %148 to %struct.tree_int_cst*
  %int_cst231 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst230, i32 0, i32 2
  %high232 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst231, i32 0, i32 1
  %149 = load i64, i64* %high232, align 8
  %150 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst233 = bitcast %union.tree_node* %150 to %struct.tree_int_cst*
  %int_cst234 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst233, i32 0, i32 2
  %high235 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst234, i32 0, i32 1
  %151 = load i64, i64* %high235, align 8
  %cmp236 = icmp slt i64 %149, %151
  br i1 %cmp236, label %lor.end.257, label %lor.rhs.238

lor.rhs.238:                                      ; preds = %if.else
  %152 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst239 = bitcast %union.tree_node* %152 to %struct.tree_int_cst*
  %int_cst240 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst239, i32 0, i32 2
  %high241 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst240, i32 0, i32 1
  %153 = load i64, i64* %high241, align 8
  %154 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst242 = bitcast %union.tree_node* %154 to %struct.tree_int_cst*
  %int_cst243 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst242, i32 0, i32 2
  %high244 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst243, i32 0, i32 1
  %155 = load i64, i64* %high244, align 8
  %cmp245 = icmp eq i64 %153, %155
  br i1 %cmp245, label %land.rhs.247, label %land.end.256

land.rhs.247:                                     ; preds = %lor.rhs.238
  %156 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst248 = bitcast %union.tree_node* %156 to %struct.tree_int_cst*
  %int_cst249 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst248, i32 0, i32 2
  %low250 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst249, i32 0, i32 0
  %157 = load i64, i64* %low250, align 8
  %158 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst251 = bitcast %union.tree_node* %158 to %struct.tree_int_cst*
  %int_cst252 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst251, i32 0, i32 2
  %low253 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst252, i32 0, i32 0
  %159 = load i64, i64* %low253, align 8
  %cmp254 = icmp ult i64 %157, %159
  br label %land.end.256

land.end.256:                                     ; preds = %land.rhs.247, %lor.rhs.238
  %160 = phi i1 [ false, %lor.rhs.238 ], [ %cmp254, %land.rhs.247 ]
  br label %lor.end.257

lor.end.257:                                      ; preds = %land.end.256, %if.else
  %161 = phi i1 [ true, %if.else ], [ %160, %land.end.256 ]
  %lor.ext258 = zext i1 %161 to i32
  store i32 %lor.ext258, i32* %min_gt, align 4
  %162 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst259 = bitcast %union.tree_node* %162 to %struct.tree_int_cst*
  %int_cst260 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst259, i32 0, i32 2
  %high261 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst260, i32 0, i32 1
  %163 = load i64, i64* %high261, align 8
  %164 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst262 = bitcast %union.tree_node* %164 to %struct.tree_int_cst*
  %int_cst263 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst262, i32 0, i32 2
  %high264 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst263, i32 0, i32 1
  %165 = load i64, i64* %high264, align 8
  %cmp265 = icmp slt i64 %163, %165
  br i1 %cmp265, label %lor.end.286, label %lor.rhs.267

lor.rhs.267:                                      ; preds = %lor.end.257
  %166 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst268 = bitcast %union.tree_node* %166 to %struct.tree_int_cst*
  %int_cst269 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst268, i32 0, i32 2
  %high270 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst269, i32 0, i32 1
  %167 = load i64, i64* %high270, align 8
  %168 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst271 = bitcast %union.tree_node* %168 to %struct.tree_int_cst*
  %int_cst272 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst271, i32 0, i32 2
  %high273 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst272, i32 0, i32 1
  %169 = load i64, i64* %high273, align 8
  %cmp274 = icmp eq i64 %167, %169
  br i1 %cmp274, label %land.rhs.276, label %land.end.285

land.rhs.276:                                     ; preds = %lor.rhs.267
  %170 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst277 = bitcast %union.tree_node* %170 to %struct.tree_int_cst*
  %int_cst278 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst277, i32 0, i32 2
  %low279 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst278, i32 0, i32 0
  %171 = load i64, i64* %low279, align 8
  %172 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst280 = bitcast %union.tree_node* %172 to %struct.tree_int_cst*
  %int_cst281 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst280, i32 0, i32 2
  %low282 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst281, i32 0, i32 0
  %173 = load i64, i64* %low282, align 8
  %cmp283 = icmp ult i64 %171, %173
  br label %land.end.285

land.end.285:                                     ; preds = %land.rhs.276, %lor.rhs.267
  %174 = phi i1 [ false, %lor.rhs.267 ], [ %cmp283, %land.rhs.276 ]
  br label %lor.end.286

lor.end.286:                                      ; preds = %land.end.285, %lor.end.257
  %175 = phi i1 [ true, %lor.end.257 ], [ %174, %land.end.285 ]
  %lor.ext287 = zext i1 %175 to i32
  store i32 %lor.ext287, i32* %max_gt, align 4
  %176 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst288 = bitcast %union.tree_node* %176 to %struct.tree_int_cst*
  %int_cst289 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst288, i32 0, i32 2
  %high290 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst289, i32 0, i32 1
  %177 = load i64, i64* %high290, align 8
  %178 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst291 = bitcast %union.tree_node* %178 to %struct.tree_int_cst*
  %int_cst292 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst291, i32 0, i32 2
  %high293 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst292, i32 0, i32 1
  %179 = load i64, i64* %high293, align 8
  %cmp294 = icmp slt i64 %177, %179
  br i1 %cmp294, label %lor.end.315, label %lor.rhs.296

lor.rhs.296:                                      ; preds = %lor.end.286
  %180 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst297 = bitcast %union.tree_node* %180 to %struct.tree_int_cst*
  %int_cst298 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst297, i32 0, i32 2
  %high299 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst298, i32 0, i32 1
  %181 = load i64, i64* %high299, align 8
  %182 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst300 = bitcast %union.tree_node* %182 to %struct.tree_int_cst*
  %int_cst301 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst300, i32 0, i32 2
  %high302 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst301, i32 0, i32 1
  %183 = load i64, i64* %high302, align 8
  %cmp303 = icmp eq i64 %181, %183
  br i1 %cmp303, label %land.rhs.305, label %land.end.314

land.rhs.305:                                     ; preds = %lor.rhs.296
  %184 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %int_cst306 = bitcast %union.tree_node* %184 to %struct.tree_int_cst*
  %int_cst307 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst306, i32 0, i32 2
  %low308 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst307, i32 0, i32 0
  %185 = load i64, i64* %low308, align 8
  %186 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst309 = bitcast %union.tree_node* %186 to %struct.tree_int_cst*
  %int_cst310 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst309, i32 0, i32 2
  %low311 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst310, i32 0, i32 0
  %187 = load i64, i64* %low311, align 8
  %cmp312 = icmp ult i64 %185, %187
  br label %land.end.314

land.end.314:                                     ; preds = %land.rhs.305, %lor.rhs.296
  %188 = phi i1 [ false, %lor.rhs.296 ], [ %cmp312, %land.rhs.305 ]
  br label %lor.end.315

lor.end.315:                                      ; preds = %land.end.314, %lor.end.286
  %189 = phi i1 [ true, %lor.end.286 ], [ %188, %land.end.314 ]
  %lor.ext316 = zext i1 %189 to i32
  store i32 %lor.ext316, i32* %min_lt, align 4
  %190 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst317 = bitcast %union.tree_node* %190 to %struct.tree_int_cst*
  %int_cst318 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst317, i32 0, i32 2
  %high319 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst318, i32 0, i32 1
  %191 = load i64, i64* %high319, align 8
  %192 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst320 = bitcast %union.tree_node* %192 to %struct.tree_int_cst*
  %int_cst321 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst320, i32 0, i32 2
  %high322 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst321, i32 0, i32 1
  %193 = load i64, i64* %high322, align 8
  %cmp323 = icmp slt i64 %191, %193
  br i1 %cmp323, label %lor.end.344, label %lor.rhs.325

lor.rhs.325:                                      ; preds = %lor.end.315
  %194 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst326 = bitcast %union.tree_node* %194 to %struct.tree_int_cst*
  %int_cst327 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst326, i32 0, i32 2
  %high328 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst327, i32 0, i32 1
  %195 = load i64, i64* %high328, align 8
  %196 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst329 = bitcast %union.tree_node* %196 to %struct.tree_int_cst*
  %int_cst330 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst329, i32 0, i32 2
  %high331 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst330, i32 0, i32 1
  %197 = load i64, i64* %high331, align 8
  %cmp332 = icmp eq i64 %195, %197
  br i1 %cmp332, label %land.rhs.334, label %land.end.343

land.rhs.334:                                     ; preds = %lor.rhs.325
  %198 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %int_cst335 = bitcast %union.tree_node* %198 to %struct.tree_int_cst*
  %int_cst336 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst335, i32 0, i32 2
  %low337 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst336, i32 0, i32 0
  %199 = load i64, i64* %low337, align 8
  %200 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %int_cst338 = bitcast %union.tree_node* %200 to %struct.tree_int_cst*
  %int_cst339 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst338, i32 0, i32 2
  %low340 = getelementptr inbounds %struct.anon, %struct.anon* %int_cst339, i32 0, i32 0
  %201 = load i64, i64* %low340, align 8
  %cmp341 = icmp ult i64 %199, %201
  br label %land.end.343

land.end.343:                                     ; preds = %land.rhs.334, %lor.rhs.325
  %202 = phi i1 [ false, %lor.rhs.325 ], [ %cmp341, %land.rhs.334 ]
  br label %lor.end.344

lor.end.344:                                      ; preds = %land.end.343, %lor.end.315
  %203 = phi i1 [ true, %lor.end.315 ], [ %202, %land.end.343 ]
  %lor.ext345 = zext i1 %203 to i32
  store i32 %lor.ext345, i32* %max_lt, align 4
  br label %if.end.346

if.end.346:                                       ; preds = %lor.end.344, %lor.end.228
  store %union.tree_node* null, %union.tree_node** %val, align 8
  %204 = load i32, i32* %code, align 4
  %cmp347 = icmp eq i32 %204, 102
  br i1 %cmp347, label %if.then.349, label %if.else.354

if.then.349:                                      ; preds = %if.end.346
  %205 = load i32, i32* %max_lt, align 4
  %tobool350 = icmp ne i32 %205, 0
  br i1 %tobool350, label %if.then.352, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.349
  %206 = load i32, i32* %min_gt, align 4
  %tobool351 = icmp ne i32 %206, 0
  br i1 %tobool351, label %if.then.352, label %if.end.353

if.then.352:                                      ; preds = %lor.lhs.false, %if.then.349
  %207 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %207, %union.tree_node** %val, align 8
  br label %if.end.353

if.end.353:                                       ; preds = %if.then.352, %lor.lhs.false
  br label %if.end.408

if.else.354:                                      ; preds = %if.end.346
  %208 = load i32, i32* %code, align 4
  %cmp355 = icmp eq i32 %208, 101
  br i1 %cmp355, label %if.then.357, label %if.else.363

if.then.357:                                      ; preds = %if.else.354
  %209 = load i32, i32* %max_lt, align 4
  %tobool358 = icmp ne i32 %209, 0
  br i1 %tobool358, label %if.then.361, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %if.then.357
  %210 = load i32, i32* %min_gt, align 4
  %tobool360 = icmp ne i32 %210, 0
  br i1 %tobool360, label %if.then.361, label %if.end.362

if.then.361:                                      ; preds = %lor.lhs.false.359, %if.then.357
  %211 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %211, %union.tree_node** %val, align 8
  br label %if.end.362

if.end.362:                                       ; preds = %if.then.361, %lor.lhs.false.359
  br label %if.end.407

if.else.363:                                      ; preds = %if.else.354
  %212 = load i32, i32* %code, align 4
  %cmp364 = icmp eq i32 %212, 97
  br i1 %cmp364, label %if.then.366, label %if.else.373

if.then.366:                                      ; preds = %if.else.363
  %213 = load i32, i32* %max_lt, align 4
  %tobool367 = icmp ne i32 %213, 0
  br i1 %tobool367, label %if.then.368, label %if.end.369

if.then.368:                                      ; preds = %if.then.366
  %214 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %214, %union.tree_node** %val, align 8
  br label %if.end.369

if.end.369:                                       ; preds = %if.then.368, %if.then.366
  %215 = load i32, i32* %min_lt, align 4
  %tobool370 = icmp ne i32 %215, 0
  br i1 %tobool370, label %if.end.372, label %if.then.371

if.then.371:                                      ; preds = %if.end.369
  %216 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %216, %union.tree_node** %val, align 8
  br label %if.end.372

if.end.372:                                       ; preds = %if.then.371, %if.end.369
  br label %if.end.406

if.else.373:                                      ; preds = %if.else.363
  %217 = load i32, i32* %code, align 4
  %cmp374 = icmp eq i32 %217, 99
  br i1 %cmp374, label %if.then.376, label %if.else.383

if.then.376:                                      ; preds = %if.else.373
  %218 = load i32, i32* %min_gt, align 4
  %tobool377 = icmp ne i32 %218, 0
  br i1 %tobool377, label %if.then.378, label %if.end.379

if.then.378:                                      ; preds = %if.then.376
  %219 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %219, %union.tree_node** %val, align 8
  br label %if.end.379

if.end.379:                                       ; preds = %if.then.378, %if.then.376
  %220 = load i32, i32* %max_gt, align 4
  %tobool380 = icmp ne i32 %220, 0
  br i1 %tobool380, label %if.end.382, label %if.then.381

if.then.381:                                      ; preds = %if.end.379
  %221 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %221, %union.tree_node** %val, align 8
  br label %if.end.382

if.end.382:                                       ; preds = %if.then.381, %if.end.379
  br label %if.end.405

if.else.383:                                      ; preds = %if.else.373
  %222 = load i32, i32* %code, align 4
  %cmp384 = icmp eq i32 %222, 98
  br i1 %cmp384, label %if.then.386, label %if.else.393

if.then.386:                                      ; preds = %if.else.383
  %223 = load i32, i32* %max_gt, align 4
  %tobool387 = icmp ne i32 %223, 0
  br i1 %tobool387, label %if.end.389, label %if.then.388

if.then.388:                                      ; preds = %if.then.386
  %224 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %224, %union.tree_node** %val, align 8
  br label %if.end.389

if.end.389:                                       ; preds = %if.then.388, %if.then.386
  %225 = load i32, i32* %min_gt, align 4
  %tobool390 = icmp ne i32 %225, 0
  br i1 %tobool390, label %if.then.391, label %if.end.392

if.then.391:                                      ; preds = %if.end.389
  %226 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %226, %union.tree_node** %val, align 8
  br label %if.end.392

if.end.392:                                       ; preds = %if.then.391, %if.end.389
  br label %if.end.404

if.else.393:                                      ; preds = %if.else.383
  %227 = load i32, i32* %code, align 4
  %cmp394 = icmp eq i32 %227, 100
  br i1 %cmp394, label %if.then.396, label %if.end.403

if.then.396:                                      ; preds = %if.else.393
  %228 = load i32, i32* %min_lt, align 4
  %tobool397 = icmp ne i32 %228, 0
  br i1 %tobool397, label %if.end.399, label %if.then.398

if.then.398:                                      ; preds = %if.then.396
  %229 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %229, %union.tree_node** %val, align 8
  br label %if.end.399

if.end.399:                                       ; preds = %if.then.398, %if.then.396
  %230 = load i32, i32* %max_lt, align 4
  %tobool400 = icmp ne i32 %230, 0
  br i1 %tobool400, label %if.then.401, label %if.end.402

if.then.401:                                      ; preds = %if.end.399
  %231 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %231, %union.tree_node** %val, align 8
  br label %if.end.402

if.end.402:                                       ; preds = %if.then.401, %if.end.399
  br label %if.end.403

if.end.403:                                       ; preds = %if.end.402, %if.else.393
  br label %if.end.404

if.end.404:                                       ; preds = %if.end.403, %if.end.392
  br label %if.end.405

if.end.405:                                       ; preds = %if.end.404, %if.end.382
  br label %if.end.406

if.end.406:                                       ; preds = %if.end.405, %if.end.372
  br label %if.end.407

if.end.407:                                       ; preds = %if.end.406, %if.end.362
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.353
  %232 = load i32, i32* %unsignedp, align 4
  %tobool409 = icmp ne i32 %232, 0
  br i1 %tobool409, label %land.lhs.true.410, label %if.end.426

land.lhs.true.410:                                ; preds = %if.end.408
  %233 = load i32, i32* %unsignedp0, align 4
  %tobool411 = icmp ne i32 %233, 0
  br i1 %tobool411, label %if.end.426, label %if.then.412

if.then.412:                                      ; preds = %land.lhs.true.410
  %234 = load %union.tree_node*, %union.tree_node** %val, align 8
  %cmp413 = icmp ne %union.tree_node* %234, null
  br i1 %cmp413, label %if.then.415, label %if.end.424

if.then.415:                                      ; preds = %if.then.412
  %235 = load i32, i32* %code, align 4
  switch i32 %235, label %sw.default.422 [
    i32 97, label %sw.bb.416
    i32 100, label %sw.bb.416
    i32 98, label %sw.bb.419
    i32 99, label %sw.bb.419
  ]

sw.bb.416:                                        ; preds = %if.then.415, %if.then.415
  %236 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type417 = bitcast %union.tree_node* %236 to %struct.tree_type*
  %minval418 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type417, i32 0, i32 12
  %237 = load %union.tree_node*, %union.tree_node** %minval418, align 8
  store %union.tree_node* %237, %union.tree_node** %primop1, align 8
  store %union.tree_node* null, %union.tree_node** %val, align 8
  br label %sw.epilog.423

sw.bb.419:                                        ; preds = %if.then.415, %if.then.415
  %238 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type420 = bitcast %union.tree_node* %238 to %struct.tree_type*
  %maxval421 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type420, i32 0, i32 13
  %239 = load %union.tree_node*, %union.tree_node** %maxval421, align 8
  store %union.tree_node* %239, %union.tree_node** %primop1, align 8
  store %union.tree_node* null, %union.tree_node** %val, align 8
  br label %sw.epilog.423

sw.default.422:                                   ; preds = %if.then.415
  br label %sw.epilog.423

sw.epilog.423:                                    ; preds = %sw.default.422, %sw.bb.419, %sw.bb.416
  br label %if.end.424

if.end.424:                                       ; preds = %sw.epilog.423, %if.then.412
  %240 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call425 = call %union.tree_node* @unsigned_type(%union.tree_node* %240)
  store %union.tree_node* %call425, %union.tree_node** %type, align 8
  br label %if.end.426

if.end.426:                                       ; preds = %if.end.424, %land.lhs.true.410, %if.end.408
  %241 = load i32, i32* %max_gt, align 4
  %tobool427 = icmp ne i32 %241, 0
  br i1 %tobool427, label %if.end.446, label %land.lhs.true.428

land.lhs.true.428:                                ; preds = %if.end.426
  %242 = load i32, i32* %unsignedp0, align 4
  %tobool429 = icmp ne i32 %242, 0
  br i1 %tobool429, label %if.end.446, label %land.lhs.true.430

land.lhs.true.430:                                ; preds = %land.lhs.true.428
  %243 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common431 = bitcast %union.tree_node* %243 to %struct.tree_common*
  %code432 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common431, i32 0, i32 2
  %bf.load433 = load i32, i32* %code432, align 8
  %bf.clear434 = and i32 %bf.load433, 255
  %cmp435 = icmp ne i32 %bf.clear434, 25
  br i1 %cmp435, label %if.then.437, label %if.end.446

if.then.437:                                      ; preds = %land.lhs.true.430
  %244 = load %union.tree_node*, %union.tree_node** %val, align 8
  %245 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  %cmp438 = icmp eq %union.tree_node* %244, %245
  br i1 %cmp438, label %if.then.440, label %if.end.441

if.then.440:                                      ; preds = %if.then.437
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.39, i32 0, i32 0))
  br label %if.end.441

if.end.441:                                       ; preds = %if.then.440, %if.then.437
  %246 = load %union.tree_node*, %union.tree_node** %val, align 8
  %247 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  %cmp442 = icmp eq %union.tree_node* %246, %247
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %if.end.441
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.40, i32 0, i32 0))
  br label %if.end.445

if.end.445:                                       ; preds = %if.then.444, %if.end.441
  br label %if.end.446

if.end.446:                                       ; preds = %if.end.445, %land.lhs.true.430, %land.lhs.true.428, %if.end.426
  %248 = load i32, i32* %min_lt, align 4
  %tobool447 = icmp ne i32 %248, 0
  br i1 %tobool447, label %if.end.466, label %land.lhs.true.448

land.lhs.true.448:                                ; preds = %if.end.446
  %249 = load i32, i32* %unsignedp0, align 4
  %tobool449 = icmp ne i32 %249, 0
  br i1 %tobool449, label %land.lhs.true.450, label %if.end.466

land.lhs.true.450:                                ; preds = %land.lhs.true.448
  %250 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common451 = bitcast %union.tree_node* %250 to %struct.tree_common*
  %code452 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common451, i32 0, i32 2
  %bf.load453 = load i32, i32* %code452, align 8
  %bf.clear454 = and i32 %bf.load453, 255
  %cmp455 = icmp ne i32 %bf.clear454, 25
  br i1 %cmp455, label %if.then.457, label %if.end.466

if.then.457:                                      ; preds = %land.lhs.true.450
  %251 = load %union.tree_node*, %union.tree_node** %val, align 8
  %252 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  %cmp458 = icmp eq %union.tree_node* %251, %252
  br i1 %cmp458, label %if.then.460, label %if.end.461

if.then.460:                                      ; preds = %if.then.457
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.39, i32 0, i32 0))
  br label %if.end.461

if.end.461:                                       ; preds = %if.then.460, %if.then.457
  %253 = load %union.tree_node*, %union.tree_node** %val, align 8
  %254 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  %cmp462 = icmp eq %union.tree_node* %253, %254
  br i1 %cmp462, label %if.then.464, label %if.end.465

if.then.464:                                      ; preds = %if.end.461
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.40, i32 0, i32 0))
  br label %if.end.465

if.end.465:                                       ; preds = %if.then.464, %if.end.461
  br label %if.end.466

if.end.466:                                       ; preds = %if.end.465, %land.lhs.true.450, %land.lhs.true.448, %if.end.446
  %255 = load %union.tree_node*, %union.tree_node** %val, align 8
  %cmp467 = icmp ne %union.tree_node* %255, null
  br i1 %cmp467, label %if.then.469, label %if.end.480

if.then.469:                                      ; preds = %if.end.466
  %256 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common470 = bitcast %union.tree_node* %256 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common470, i32 0, i32 2
  %bf.load471 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr472 = lshr i32 %bf.load471, 8
  %bf.clear473 = and i32 %bf.lshr472, 1
  %tobool474 = icmp ne i32 %bf.clear473, 0
  br i1 %tobool474, label %if.then.475, label %if.end.479

if.then.475:                                      ; preds = %if.then.469
  %257 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common476 = bitcast %union.tree_node* %257 to %struct.tree_common*
  %type477 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common476, i32 0, i32 1
  %258 = load %union.tree_node*, %union.tree_node** %type477, align 8
  %259 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %260 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call478 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %258, %union.tree_node* %259, %union.tree_node* %260)
  store %union.tree_node* %call478, %union.tree_node** %retval
  br label %return

if.end.479:                                       ; preds = %if.then.469
  %261 = load %union.tree_node*, %union.tree_node** %val, align 8
  store %union.tree_node* %261, %union.tree_node** %retval
  br label %return

if.end.480:                                       ; preds = %if.end.466
  br label %if.end.638

if.else.481:                                      ; preds = %land.lhs.true.61, %land.lhs.true.54, %land.lhs.true.52, %if.end.50
  %262 = load i32, i32* %real1, align 4
  %tobool482 = icmp ne i32 %262, 0
  br i1 %tobool482, label %land.lhs.true.483, label %if.else.503

land.lhs.true.483:                                ; preds = %if.else.481
  %263 = load i32, i32* %real2, align 4
  %tobool484 = icmp ne i32 %263, 0
  br i1 %tobool484, label %land.lhs.true.485, label %if.else.503

land.lhs.true.485:                                ; preds = %land.lhs.true.483
  %264 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common486 = bitcast %union.tree_node* %264 to %struct.tree_common*
  %type487 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common486, i32 0, i32 1
  %265 = load %union.tree_node*, %union.tree_node** %type487, align 8
  %type488 = bitcast %union.tree_node* %265 to %struct.tree_type*
  %precision489 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type488, i32 0, i32 6
  %bf.load490 = load i32, i32* %precision489, align 4
  %bf.clear491 = and i32 %bf.load490, 511
  %266 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common492 = bitcast %union.tree_node* %266 to %struct.tree_common*
  %type493 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common492, i32 0, i32 1
  %267 = load %union.tree_node*, %union.tree_node** %type493, align 8
  %type494 = bitcast %union.tree_node* %267 to %struct.tree_type*
  %precision495 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type494, i32 0, i32 6
  %bf.load496 = load i32, i32* %precision495, align 4
  %bf.clear497 = and i32 %bf.load496, 511
  %cmp498 = icmp eq i32 %bf.clear491, %bf.clear497
  br i1 %cmp498, label %if.then.500, label %if.else.503

if.then.500:                                      ; preds = %land.lhs.true.485
  %268 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common501 = bitcast %union.tree_node* %268 to %struct.tree_common*
  %type502 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common501, i32 0, i32 1
  %269 = load %union.tree_node*, %union.tree_node** %type502, align 8
  store %union.tree_node* %269, %union.tree_node** %type, align 8
  br label %if.end.637

if.else.503:                                      ; preds = %land.lhs.true.485, %land.lhs.true.483, %if.else.481
  %270 = load i32, i32* %unsignedp0, align 4
  %271 = load i32, i32* %unsignedp1, align 4
  %cmp504 = icmp eq i32 %270, %271
  br i1 %cmp504, label %land.lhs.true.506, label %if.else.560

land.lhs.true.506:                                ; preds = %if.else.503
  %272 = load i32, i32* %real1, align 4
  %273 = load i32, i32* %real2, align 4
  %cmp507 = icmp eq i32 %272, %273
  br i1 %cmp507, label %land.lhs.true.509, label %if.else.560

land.lhs.true.509:                                ; preds = %land.lhs.true.506
  %274 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common510 = bitcast %union.tree_node* %274 to %struct.tree_common*
  %type511 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common510, i32 0, i32 1
  %275 = load %union.tree_node*, %union.tree_node** %type511, align 8
  %type512 = bitcast %union.tree_node* %275 to %struct.tree_type*
  %precision513 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type512, i32 0, i32 6
  %bf.load514 = load i32, i32* %precision513, align 4
  %bf.clear515 = and i32 %bf.load514, 511
  %276 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %277 = load %union.tree_node*, %union.tree_node** %276, align 8
  %type516 = bitcast %union.tree_node* %277 to %struct.tree_type*
  %precision517 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type516, i32 0, i32 6
  %bf.load518 = load i32, i32* %precision517, align 4
  %bf.clear519 = and i32 %bf.load518, 511
  %cmp520 = icmp slt i32 %bf.clear515, %bf.clear519
  br i1 %cmp520, label %land.lhs.true.522, label %if.else.560

land.lhs.true.522:                                ; preds = %land.lhs.true.509
  %278 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common523 = bitcast %union.tree_node* %278 to %struct.tree_common*
  %type524 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common523, i32 0, i32 1
  %279 = load %union.tree_node*, %union.tree_node** %type524, align 8
  %type525 = bitcast %union.tree_node* %279 to %struct.tree_type*
  %precision526 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type525, i32 0, i32 6
  %bf.load527 = load i32, i32* %precision526, align 4
  %bf.clear528 = and i32 %bf.load527, 511
  %280 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %281 = load %union.tree_node*, %union.tree_node** %280, align 8
  %type529 = bitcast %union.tree_node* %281 to %struct.tree_type*
  %precision530 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type529, i32 0, i32 6
  %bf.load531 = load i32, i32* %precision530, align 4
  %bf.clear532 = and i32 %bf.load531, 511
  %cmp533 = icmp slt i32 %bf.clear528, %bf.clear532
  br i1 %cmp533, label %if.then.535, label %if.else.560

if.then.535:                                      ; preds = %land.lhs.true.522
  %282 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common536 = bitcast %union.tree_node* %282 to %struct.tree_common*
  %type537 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common536, i32 0, i32 1
  %283 = load %union.tree_node*, %union.tree_node** %type537, align 8
  %284 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common538 = bitcast %union.tree_node* %284 to %struct.tree_common*
  %type539 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common538, i32 0, i32 1
  %285 = load %union.tree_node*, %union.tree_node** %type539, align 8
  %call540 = call %union.tree_node* @common_type(%union.tree_node* %283, %union.tree_node* %285)
  store %union.tree_node* %call540, %union.tree_node** %type, align 8
  %286 = load i32, i32* %unsignedp0, align 4
  %tobool541 = icmp ne i32 %286, 0
  br i1 %tobool541, label %lor.end.549, label %lor.rhs.542

lor.rhs.542:                                      ; preds = %if.then.535
  %287 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %288 = load %union.tree_node*, %union.tree_node** %287, align 8
  %common543 = bitcast %union.tree_node* %288 to %struct.tree_common*
  %unsigned_flag544 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common543, i32 0, i32 2
  %bf.load545 = load i32, i32* %unsigned_flag544, align 8
  %bf.lshr546 = lshr i32 %bf.load545, 13
  %bf.clear547 = and i32 %bf.lshr546, 1
  %tobool548 = icmp ne i32 %bf.clear547, 0
  br label %lor.end.549

lor.end.549:                                      ; preds = %lor.rhs.542, %if.then.535
  %289 = phi i1 [ true, %if.then.535 ], [ %tobool548, %lor.rhs.542 ]
  %lor.ext550 = zext i1 %289 to i32
  %290 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call551 = call %union.tree_node* @signed_or_unsigned_type(i32 %lor.ext550, %union.tree_node* %290)
  store %union.tree_node* %call551, %union.tree_node** %type, align 8
  %291 = load i32, i32* %unsignedp0, align 4
  %292 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common552 = bitcast %union.tree_node* %292 to %struct.tree_common*
  %type553 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common552, i32 0, i32 1
  %293 = load %union.tree_node*, %union.tree_node** %type553, align 8
  %call554 = call %union.tree_node* @signed_or_unsigned_type(i32 %291, %union.tree_node* %293)
  %294 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call555 = call %union.tree_node* @convert(%union.tree_node* %call554, %union.tree_node* %294)
  store %union.tree_node* %call555, %union.tree_node** %primop0, align 8
  %295 = load i32, i32* %unsignedp1, align 4
  %296 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %common556 = bitcast %union.tree_node* %296 to %struct.tree_common*
  %type557 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common556, i32 0, i32 1
  %297 = load %union.tree_node*, %union.tree_node** %type557, align 8
  %call558 = call %union.tree_node* @signed_or_unsigned_type(i32 %295, %union.tree_node* %297)
  %298 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call559 = call %union.tree_node* @convert(%union.tree_node* %call558, %union.tree_node* %298)
  store %union.tree_node* %call559, %union.tree_node** %primop1, align 8
  br label %if.end.636

if.else.560:                                      ; preds = %land.lhs.true.522, %land.lhs.true.509, %land.lhs.true.506, %if.else.503
  %299 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %300 = load %union.tree_node*, %union.tree_node** %299, align 8
  store %union.tree_node* %300, %union.tree_node** %type, align 8
  %301 = load %union.tree_node*, %union.tree_node** %op0, align 8
  store %union.tree_node* %301, %union.tree_node** %primop0, align 8
  %302 = load %union.tree_node*, %union.tree_node** %op1, align 8
  store %union.tree_node* %302, %union.tree_node** %primop1, align 8
  %303 = load i32, i32* %real1, align 4
  %tobool561 = icmp ne i32 %303, 0
  br i1 %tobool561, label %if.end.635, label %land.lhs.true.562

land.lhs.true.562:                                ; preds = %if.else.560
  %304 = load i32, i32* %real2, align 4
  %tobool563 = icmp ne i32 %304, 0
  br i1 %tobool563, label %if.end.635, label %land.lhs.true.564

land.lhs.true.564:                                ; preds = %land.lhs.true.562
  %305 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call565 = call i32 @integer_zerop(%union.tree_node* %305)
  %tobool566 = icmp ne i32 %call565, 0
  br i1 %tobool566, label %land.lhs.true.567, label %if.end.635

land.lhs.true.567:                                ; preds = %land.lhs.true.564
  %306 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  %307 = load %union.tree_node*, %union.tree_node** %306, align 8
  %common568 = bitcast %union.tree_node* %307 to %struct.tree_common*
  %unsigned_flag569 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common568, i32 0, i32 2
  %bf.load570 = load i32, i32* %unsigned_flag569, align 8
  %bf.lshr571 = lshr i32 %bf.load570, 13
  %bf.clear572 = and i32 %bf.lshr571, 1
  %tobool573 = icmp ne i32 %bf.clear572, 0
  br i1 %tobool573, label %if.then.574, label %if.end.635

if.then.574:                                      ; preds = %land.lhs.true.567
  store %union.tree_node* null, %union.tree_node** %value, align 8
  %308 = load i32, i32* %code, align 4
  switch i32 %308, label %sw.default.618 [
    i32 100, label %sw.bb.575
    i32 97, label %sw.bb.596
  ]

sw.bb.575:                                        ; preds = %if.then.574
  %309 = load i32, i32* @extra_warnings, align 4
  %tobool576 = icmp ne i32 %309, 0
  br i1 %tobool576, label %land.lhs.true.577, label %if.end.595

land.lhs.true.577:                                ; preds = %sw.bb.575
  %310 = load i32, i32* @in_system_header, align 4
  %tobool578 = icmp ne i32 %310, 0
  br i1 %tobool578, label %if.end.595, label %land.lhs.true.579

land.lhs.true.579:                                ; preds = %land.lhs.true.577
  %311 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common580 = bitcast %union.tree_node* %311 to %struct.tree_common*
  %code581 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common580, i32 0, i32 2
  %bf.load582 = load i32, i32* %code581, align 8
  %bf.clear583 = and i32 %bf.load582, 255
  %cmp584 = icmp eq i32 %bf.clear583, 25
  br i1 %cmp584, label %land.lhs.true.586, label %if.then.594

land.lhs.true.586:                                ; preds = %land.lhs.true.579
  %312 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call587 = call %union.tree_node* @signed_type(%union.tree_node* %312)
  %313 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call588 = call %union.tree_node* @convert(%union.tree_node* %call587, %union.tree_node* %313)
  %common589 = bitcast %union.tree_node* %call588 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common589, i32 0, i32 2
  %bf.load590 = load i32, i32* %public_flag, align 8
  %bf.lshr591 = lshr i32 %bf.load590, 19
  %bf.clear592 = and i32 %bf.lshr591, 1
  %tobool593 = icmp ne i32 %bf.clear592, 0
  br i1 %tobool593, label %if.then.594, label %if.end.595

if.then.594:                                      ; preds = %land.lhs.true.586, %land.lhs.true.579
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i32 0, i32 0))
  br label %if.end.595

if.end.595:                                       ; preds = %if.then.594, %land.lhs.true.586, %land.lhs.true.577, %sw.bb.575
  %314 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %314, %union.tree_node** %value, align 8
  br label %sw.epilog.619

sw.bb.596:                                        ; preds = %if.then.574
  %315 = load i32, i32* @extra_warnings, align 4
  %tobool597 = icmp ne i32 %315, 0
  br i1 %tobool597, label %land.lhs.true.598, label %if.end.617

land.lhs.true.598:                                ; preds = %sw.bb.596
  %316 = load i32, i32* @in_system_header, align 4
  %tobool599 = icmp ne i32 %316, 0
  br i1 %tobool599, label %if.end.617, label %land.lhs.true.600

land.lhs.true.600:                                ; preds = %land.lhs.true.598
  %317 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common601 = bitcast %union.tree_node* %317 to %struct.tree_common*
  %code602 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common601, i32 0, i32 2
  %bf.load603 = load i32, i32* %code602, align 8
  %bf.clear604 = and i32 %bf.load603, 255
  %cmp605 = icmp eq i32 %bf.clear604, 25
  br i1 %cmp605, label %land.lhs.true.607, label %if.then.616

land.lhs.true.607:                                ; preds = %land.lhs.true.600
  %318 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call608 = call %union.tree_node* @signed_type(%union.tree_node* %318)
  %319 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call609 = call %union.tree_node* @convert(%union.tree_node* %call608, %union.tree_node* %319)
  %common610 = bitcast %union.tree_node* %call609 to %struct.tree_common*
  %public_flag611 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common610, i32 0, i32 2
  %bf.load612 = load i32, i32* %public_flag611, align 8
  %bf.lshr613 = lshr i32 %bf.load612, 19
  %bf.clear614 = and i32 %bf.lshr613, 1
  %tobool615 = icmp ne i32 %bf.clear614, 0
  br i1 %tobool615, label %if.then.616, label %if.end.617

if.then.616:                                      ; preds = %land.lhs.true.607, %land.lhs.true.600
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.42, i32 0, i32 0))
  br label %if.end.617

if.end.617:                                       ; preds = %if.then.616, %land.lhs.true.607, %land.lhs.true.598, %sw.bb.596
  %320 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  store %union.tree_node* %320, %union.tree_node** %value, align 8
  br label %sw.epilog.619

sw.default.618:                                   ; preds = %if.then.574
  br label %sw.epilog.619

sw.epilog.619:                                    ; preds = %sw.default.618, %if.end.617, %if.end.595
  %321 = load %union.tree_node*, %union.tree_node** %value, align 8
  %cmp620 = icmp ne %union.tree_node* %321, null
  br i1 %cmp620, label %if.then.622, label %if.end.634

if.then.622:                                      ; preds = %sw.epilog.619
  %322 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %common623 = bitcast %union.tree_node* %322 to %struct.tree_common*
  %side_effects_flag624 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common623, i32 0, i32 2
  %bf.load625 = load i32, i32* %side_effects_flag624, align 8
  %bf.lshr626 = lshr i32 %bf.load625, 8
  %bf.clear627 = and i32 %bf.lshr626, 1
  %tobool628 = icmp ne i32 %bf.clear627, 0
  br i1 %tobool628, label %if.then.629, label %if.end.633

if.then.629:                                      ; preds = %if.then.622
  %323 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common630 = bitcast %union.tree_node* %323 to %struct.tree_common*
  %type631 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common630, i32 0, i32 1
  %324 = load %union.tree_node*, %union.tree_node** %type631, align 8
  %325 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %326 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call632 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %324, %union.tree_node* %325, %union.tree_node* %326)
  store %union.tree_node* %call632, %union.tree_node** %retval
  br label %return

if.end.633:                                       ; preds = %if.then.622
  %327 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %327, %union.tree_node** %retval
  br label %return

if.end.634:                                       ; preds = %sw.epilog.619
  br label %if.end.635

if.end.635:                                       ; preds = %if.end.634, %land.lhs.true.567, %land.lhs.true.564, %land.lhs.true.562, %if.else.560
  br label %if.end.636

if.end.636:                                       ; preds = %if.end.635, %lor.end.549
  br label %if.end.637

if.end.637:                                       ; preds = %if.end.636, %if.then.500
  br label %if.end.638

if.end.638:                                       ; preds = %if.end.637, %if.end.480
  %328 = load %union.tree_node*, %union.tree_node** %type, align 8
  %329 = load %union.tree_node*, %union.tree_node** %primop0, align 8
  %call639 = call %union.tree_node* @convert(%union.tree_node* %328, %union.tree_node* %329)
  %330 = load %union.tree_node**, %union.tree_node*** %op0_ptr.addr, align 8
  store %union.tree_node* %call639, %union.tree_node** %330, align 8
  %331 = load %union.tree_node*, %union.tree_node** %type, align 8
  %332 = load %union.tree_node*, %union.tree_node** %primop1, align 8
  %call640 = call %union.tree_node* @convert(%union.tree_node* %331, %union.tree_node* %332)
  %333 = load %union.tree_node**, %union.tree_node*** %op1_ptr.addr, align 8
  store %union.tree_node* %call640, %union.tree_node** %333, align 8
  %334 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %335 = load %union.tree_node**, %union.tree_node*** %restype_ptr.addr, align 8
  store %union.tree_node* %334, %union.tree_node** %335, align 8
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.638, %if.end.633, %if.then.629, %if.end.479, %if.then.475
  %336 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %336
}

declare %union.tree_node* @get_narrower(%union.tree_node*, i32*) #1

declare i32 @real_zerop(%union.tree_node*) #1

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @common_type(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @pointer_int_sum(i32 %resultcode, %union.tree_node* %ptrop, %union.tree_node* %intop) #0 {
entry:
  %resultcode.addr = alloca i32, align 4
  %ptrop.addr = alloca %union.tree_node*, align 8
  %intop.addr = alloca %union.tree_node*, align 8
  %size_exp = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  %folded = alloca %union.tree_node*, align 8
  %result_type = alloca %union.tree_node*, align 8
  %subcode = alloca i32, align 4
  %int_type = alloca %union.tree_node*, align 8
  store i32 %resultcode, i32* %resultcode.addr, align 4
  store %union.tree_node* %ptrop, %union.tree_node** %ptrop.addr, align 8
  store %union.tree_node* %intop, %union.tree_node** %intop.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %ptrop.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %1, %union.tree_node** %result_type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %common3 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i32, i32* @warn_pointer_arith, align 4
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %lor.lhs.false, %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.5, %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %6, %union.tree_node** %size_exp, align 8
  br label %if.end.53

if.else:                                          ; preds = %entry
  %7 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type7, align 8
  %common8 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 23
  br i1 %cmp12, label %if.then.13, label %if.else.19

if.then.13:                                       ; preds = %if.else
  %9 = load i32, i32* @pedantic, align 4
  %tobool14 = icmp ne i32 %9, 0
  br i1 %tobool14, label %if.then.17, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %if.then.13
  %10 = load i32, i32* @warn_pointer_arith, align 4
  %tobool16 = icmp ne i32 %10, 0
  br i1 %tobool16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %lor.lhs.false.15, %if.then.13
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44, i32 0, i32 0))
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.17, %lor.lhs.false.15
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %11, %union.tree_node** %size_exp, align 8
  br label %if.end.52

if.else.19:                                       ; preds = %if.else
  %12 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common20 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type21, align 8
  %common22 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code23 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common22, i32 0, i32 2
  %bf.load24 = load i32, i32* %code23, align 8
  %bf.clear25 = and i32 %bf.load24, 255
  %cmp26 = icmp eq i32 %bf.clear25, 16
  br i1 %cmp26, label %if.then.27, label %if.else.33

if.then.27:                                       ; preds = %if.else.19
  %14 = load i32, i32* @pedantic, align 4
  %tobool28 = icmp ne i32 %14, 0
  br i1 %tobool28, label %if.then.31, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %if.then.27
  %15 = load i32, i32* @warn_pointer_arith, align 4
  %tobool30 = icmp ne i32 %15, 0
  br i1 %tobool30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %lor.lhs.false.29, %if.then.27
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45, i32 0, i32 0))
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %lor.lhs.false.29
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %16, %union.tree_node** %size_exp, align 8
  br label %if.end.51

if.else.33:                                       ; preds = %if.else.19
  %17 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common34 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type35, align 8
  %common36 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 14
  br i1 %cmp40, label %if.then.41, label %if.else.47

if.then.41:                                       ; preds = %if.else.33
  %19 = load i32, i32* @pedantic, align 4
  %tobool42 = icmp ne i32 %19, 0
  br i1 %tobool42, label %if.then.45, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %if.then.41
  %20 = load i32, i32* @warn_pointer_arith, align 4
  %tobool44 = icmp ne i32 %20, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %lor.lhs.false.43, %if.then.41
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i32 0, i32 0))
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.45, %lor.lhs.false.43
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %21, %union.tree_node** %size_exp, align 8
  br label %if.end.50

if.else.47:                                       ; preds = %if.else.33
  %22 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %common48 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type49, align 8
  %call = call %union.tree_node* @size_in_bytes(%union.tree_node* %23)
  store %union.tree_node* %call, %union.tree_node** %size_exp, align 8
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.end.46
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.end.32
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.end.18
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end
  %24 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common54 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %code55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load56 = load i32, i32* %code55, align 8
  %bf.clear57 = and i32 %bf.load56, 255
  %cmp58 = icmp eq i32 %bf.clear57, 59
  br i1 %cmp58, label %land.lhs.true, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %if.end.53
  %25 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common60 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load62 = load i32, i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 60
  br i1 %cmp64, label %land.lhs.true, label %if.end.135

land.lhs.true:                                    ; preds = %lor.lhs.false.59, %if.end.53
  %26 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common65 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 2
  %bf.load66 = load i32, i32* %constant_flag, align 8
  %bf.lshr = lshr i32 %bf.load66, 9
  %bf.clear67 = and i32 %bf.lshr, 1
  %tobool68 = icmp ne i32 %bf.clear67, 0
  br i1 %tobool68, label %if.end.135, label %land.lhs.true.69

land.lhs.true.69:                                 ; preds = %land.lhs.true
  %27 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %exp = bitcast %union.tree_node* %27 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common70 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %constant_flag71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 2
  %bf.load72 = load i32, i32* %constant_flag71, align 8
  %bf.lshr73 = lshr i32 %bf.load72, 9
  %bf.clear74 = and i32 %bf.lshr73, 1
  %tobool75 = icmp ne i32 %bf.clear74, 0
  br i1 %tobool75, label %land.lhs.true.76, label %if.end.135

land.lhs.true.76:                                 ; preds = %land.lhs.true.69
  %29 = load %union.tree_node*, %union.tree_node** %size_exp, align 8
  %common77 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %constant_flag78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 2
  %bf.load79 = load i32, i32* %constant_flag78, align 8
  %bf.lshr80 = lshr i32 %bf.load79, 9
  %bf.clear81 = and i32 %bf.lshr80, 1
  %tobool82 = icmp ne i32 %bf.clear81, 0
  br i1 %tobool82, label %land.lhs.true.83, label %if.end.135

land.lhs.true.83:                                 ; preds = %land.lhs.true.76
  %30 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %exp84 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands85 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp84, i32 0, i32 2
  %arrayidx86 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands85, i32 0, i64 0
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8
  %common87 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type88, align 8
  %common89 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common89, i32 0, i32 2
  %bf.load91 = load i32, i32* %code90, align 8
  %bf.clear92 = and i32 %bf.load91, 255
  %cmp93 = icmp eq i32 %bf.clear92, 6
  br i1 %cmp93, label %land.lhs.true.94, label %if.end.135

land.lhs.true.94:                                 ; preds = %land.lhs.true.83
  %33 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common95 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type96, align 8
  %common97 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load98 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 13
  %bf.clear100 = and i32 %bf.lshr99, 1
  %tobool101 = icmp ne i32 %bf.clear100, 0
  br i1 %tobool101, label %lor.lhs.false.102, label %if.then.115

lor.lhs.false.102:                                ; preds = %land.lhs.true.94
  %35 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common103 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type104, align 8
  %type105 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type105, i32 0, i32 6
  %bf.load106 = load i32, i32* %precision, align 4
  %bf.clear107 = and i32 %bf.load106, 511
  %37 = load %union.tree_node*, %union.tree_node** %ptrop.addr, align 8
  %common108 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type109 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common108, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type109, align 8
  %type110 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %precision111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i32 0, i32 6
  %bf.load112 = load i32, i32* %precision111, align 4
  %bf.clear113 = and i32 %bf.load112, 511
  %cmp114 = icmp eq i32 %bf.clear107, %bf.clear113
  br i1 %cmp114, label %if.then.115, label %if.end.135

if.then.115:                                      ; preds = %lor.lhs.false.102, %land.lhs.true.94
  %39 = load i32, i32* %resultcode.addr, align 4
  store i32 %39, i32* %subcode, align 4
  %40 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common116 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type117 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type117, align 8
  store %union.tree_node* %41, %union.tree_node** %int_type, align 8
  %42 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common118 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load120 = load i32, i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 60
  br i1 %cmp122, label %if.then.123, label %if.end.125

if.then.123:                                      ; preds = %if.then.115
  %43 = load i32, i32* %subcode, align 4
  %cmp124 = icmp eq i32 %43, 59
  %cond = select i1 %cmp124, i32 60, i32 59
  store i32 %cond, i32* %subcode, align 4
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.123, %if.then.115
  %44 = load i32, i32* %subcode, align 4
  %45 = load %union.tree_node*, %union.tree_node** %ptrop.addr, align 8
  %46 = load %union.tree_node*, %union.tree_node** %int_type, align 8
  %47 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %exp126 = bitcast %union.tree_node* %47 to %struct.tree_exp*
  %operands127 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp126, i32 0, i32 2
  %arrayidx128 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands127, i32 0, i64 1
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx128, align 8
  %call129 = call %union.tree_node* @convert(%union.tree_node* %46, %union.tree_node* %48)
  %call130 = call %union.tree_node* @build_binary_op(i32 %44, %union.tree_node* %45, %union.tree_node* %call129, i32 1)
  store %union.tree_node* %call130, %union.tree_node** %ptrop.addr, align 8
  %49 = load %union.tree_node*, %union.tree_node** %int_type, align 8
  %50 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %exp131 = bitcast %union.tree_node* %50 to %struct.tree_exp*
  %operands132 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp131, i32 0, i32 2
  %arrayidx133 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands132, i32 0, i64 0
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx133, align 8
  %call134 = call %union.tree_node* @convert(%union.tree_node* %49, %union.tree_node* %51)
  store %union.tree_node* %call134, %union.tree_node** %intop.addr, align 8
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.125, %lor.lhs.false.102, %land.lhs.true.83, %land.lhs.true.76, %land.lhs.true.69, %land.lhs.true, %lor.lhs.false.59
  %52 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common136 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %type137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %type137, align 8
  %type138 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %precision139 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type138, i32 0, i32 6
  %bf.load140 = load i32, i32* %precision139, align 4
  %bf.clear141 = and i32 %bf.load140, 511
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %type142 = bitcast %union.tree_node* %54 to %struct.tree_type*
  %precision143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i32 0, i32 6
  %bf.load144 = load i32, i32* %precision143, align 4
  %bf.clear145 = and i32 %bf.load144, 511
  %cmp146 = icmp ne i32 %bf.clear141, %bf.clear145
  br i1 %cmp146, label %if.then.161, label %lor.lhs.false.147

lor.lhs.false.147:                                ; preds = %if.end.135
  %55 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common148 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %type149 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 1
  %56 = load %union.tree_node*, %union.tree_node** %type149, align 8
  %common150 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %unsigned_flag151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common150, i32 0, i32 2
  %bf.load152 = load i32, i32* %unsigned_flag151, align 8
  %bf.lshr153 = lshr i32 %bf.load152, 13
  %bf.clear154 = and i32 %bf.lshr153, 1
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %common155 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %unsigned_flag156 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common155, i32 0, i32 2
  %bf.load157 = load i32, i32* %unsigned_flag156, align 8
  %bf.lshr158 = lshr i32 %bf.load157, 13
  %bf.clear159 = and i32 %bf.lshr158, 1
  %cmp160 = icmp ne i32 %bf.clear154, %bf.clear159
  br i1 %cmp160, label %if.then.161, label %if.end.173

if.then.161:                                      ; preds = %lor.lhs.false.147, %if.end.135
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %type162 = bitcast %union.tree_node* %58 to %struct.tree_type*
  %precision163 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162, i32 0, i32 6
  %bf.load164 = load i32, i32* %precision163, align 4
  %bf.clear165 = and i32 %bf.load164, 511
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %common166 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %unsigned_flag167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 2
  %bf.load168 = load i32, i32* %unsigned_flag167, align 8
  %bf.lshr169 = lshr i32 %bf.load168, 13
  %bf.clear170 = and i32 %bf.lshr169, 1
  %call171 = call %union.tree_node* @type_for_size(i32 %bf.clear165, i32 %bf.clear170)
  %60 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %call172 = call %union.tree_node* @convert(%union.tree_node* %call171, %union.tree_node* %60)
  store %union.tree_node* %call172, %union.tree_node** %intop.addr, align 8
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.161, %lor.lhs.false.147
  %61 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %62 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %63 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common174 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type175, align 8
  %65 = load %union.tree_node*, %union.tree_node** %size_exp, align 8
  %call176 = call %union.tree_node* @convert(%union.tree_node* %64, %union.tree_node* %65)
  %call177 = call %union.tree_node* @build_binary_op(i32 61, %union.tree_node* %62, %union.tree_node* %call176, i32 1)
  %call178 = call %union.tree_node* @convert(%union.tree_node* %61, %union.tree_node* %call177)
  store %union.tree_node* %call178, %union.tree_node** %intop.addr, align 8
  %66 = load i32, i32* %resultcode.addr, align 4
  %67 = load %union.tree_node*, %union.tree_node** %result_type, align 8
  %68 = load %union.tree_node*, %union.tree_node** %ptrop.addr, align 8
  %69 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %call179 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 %66, %union.tree_node* %67, %union.tree_node* %68, %union.tree_node* %69)
  store %union.tree_node* %call179, %union.tree_node** %result, align 8
  %70 = load %union.tree_node*, %union.tree_node** %result, align 8
  %call180 = call %union.tree_node* @fold(%union.tree_node* %70)
  store %union.tree_node* %call180, %union.tree_node** %folded, align 8
  %71 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %72 = load %union.tree_node*, %union.tree_node** %result, align 8
  %cmp181 = icmp eq %union.tree_node* %71, %72
  br i1 %cmp181, label %if.then.182, label %if.end.197

if.then.182:                                      ; preds = %if.end.173
  %73 = load %union.tree_node*, %union.tree_node** %ptrop.addr, align 8
  %common183 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %constant_flag184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 2
  %bf.load185 = load i32, i32* %constant_flag184, align 8
  %bf.lshr186 = lshr i32 %bf.load185, 9
  %bf.clear187 = and i32 %bf.lshr186, 1
  %74 = load %union.tree_node*, %union.tree_node** %intop.addr, align 8
  %common188 = bitcast %union.tree_node* %74 to %struct.tree_common*
  %constant_flag189 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common188, i32 0, i32 2
  %bf.load190 = load i32, i32* %constant_flag189, align 8
  %bf.lshr191 = lshr i32 %bf.load190, 9
  %bf.clear192 = and i32 %bf.lshr191, 1
  %and = and i32 %bf.clear187, %bf.clear192
  %75 = load %union.tree_node*, %union.tree_node** %folded, align 8
  %common193 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %constant_flag194 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common193, i32 0, i32 2
  %bf.load195 = load i32, i32* %constant_flag194, align 8
  %bf.value = and i32 %and, 1
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear196 = and i32 %bf.load195, -513
  %bf.set = or i32 %bf.clear196, %bf.shl
  store i32 %bf.set, i32* %constant_flag194, align 8
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.182, %if.end.173
  %76 = load %union.tree_node*, %union.tree_node** %folded, align 8
  ret %union.tree_node* %76
}

declare %union.tree_node* @size_in_bytes(%union.tree_node*) #1

declare %union.tree_node* @build_binary_op(i32, %union.tree_node*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @truthvalue_conversion(%union.tree_node* %expr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  switch i32 %bf.clear4, label %sw.default [
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 98, label %sw.bb
    i32 100, label %sw.bb
    i32 97, label %sw.bb
    i32 99, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 0, label %sw.bb.6
    i32 25, label %sw.bb.7
    i32 26, label %sw.bb.8
    i32 121, label %sw.bb.15
    i32 125, label %sw.bb.44
    i32 77, label %sw.bb.64
    i32 80, label %sw.bb.64
    i32 76, label %sw.bb.64
    i32 81, label %sw.bb.64
    i32 84, label %sw.bb.69
    i32 85, label %sw.bb.69
    i32 51, label %sw.bb.93
    i32 114, label %sw.bb.107
    i32 115, label %sw.bb.129
    i32 60, label %sw.bb.152
    i32 87, label %sw.bb.163
    i32 88, label %sw.bb.199
    i32 48, label %sw.bb.213
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %4 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common5 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  store %union.tree_node* %3, %union.tree_node** %type, align 8
  %5 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

sw.bb.6:                                          ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

sw.bb.7:                                          ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call i32 @integer_zerop(%union.tree_node* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb.7
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  br label %cond.end

cond.false:                                       ; preds = %sw.bb.7
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %8, %cond.true ], [ %9, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %retval
  br label %return

sw.bb.8:                                          ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call9 = call i32 @real_zerop(%union.tree_node* %10)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %sw.bb.8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  br label %cond.end.13

cond.false.12:                                    ; preds = %sw.bb.8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  br label %cond.end.13

cond.end.13:                                      ; preds = %cond.false.12, %cond.true.11
  %cond14 = phi %union.tree_node* [ %11, %cond.true.11 ], [ %12, %cond.false.12 ]
  store %union.tree_node* %cond14, %union.tree_node** %retval
  br label %return

sw.bb.15:                                         ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp = bitcast %union.tree_node* %13 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common16 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %idxprom = sext i32 %bf.clear19 to i64
  %arrayidx20 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %15 = load i8, i8* %arrayidx20, align 1
  %conv = sext i8 %15 to i32
  %cmp21 = icmp eq i32 %conv, 100
  br i1 %cmp21, label %land.lhs.true, label %if.end.30

land.lhs.true:                                    ; preds = %sw.bb.15
  %16 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp23 = bitcast %union.tree_node* %16 to %struct.tree_exp*
  %operands24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp23, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands24, i32 0, i64 0
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8
  %decl = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %18 = bitcast i48* %external_flag to i64*
  %bf.load26 = load i64, i64* %18, align 8
  %bf.lshr = lshr i64 %bf.load26, 8
  %bf.clear27 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear27 to i32
  %tobool28 = icmp ne i32 %bf.cast, 0
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %land.lhs.true
  br label %sw.epilog

if.end.30:                                        ; preds = %land.lhs.true, %sw.bb.15
  %19 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp31 = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands32 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp31, i32 0, i32 2
  %arrayidx33 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands32, i32 0, i64 0
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8
  %common34 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load35 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 8
  %bf.clear37 = and i32 %bf.lshr36, 1
  %tobool38 = icmp ne i32 %bf.clear37, 0
  br i1 %tobool38, label %if.then.39, label %if.else

if.then.39:                                       ; preds = %if.end.30
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %22 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp40 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  %call43 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %21, %union.tree_node* %23, %union.tree_node* %24)
  store %union.tree_node* %call43, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %if.end.30
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  store %union.tree_node* %25, %union.tree_node** %retval
  br label %return

sw.bb.44:                                         ; preds = %if.end
  %26 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp45 = bitcast %union.tree_node* %26 to %struct.tree_exp*
  %operands46 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp45, i32 0, i32 2
  %arrayidx47 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands46, i32 0, i64 1
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx47, align 8
  %common48 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %side_effects_flag49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 2
  %bf.load50 = load i32, i32* %side_effects_flag49, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 8
  %bf.clear52 = and i32 %bf.lshr51, 1
  %tobool53 = icmp ne i32 %bf.clear52, 0
  %cond54 = select i1 %tobool53, i32 94, i32 92
  %28 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp55 = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands56 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp55, i32 0, i32 2
  %arrayidx57 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands56, i32 0, i64 0
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx57, align 8
  %call58 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %29)
  %30 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp59 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands60 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp59, i32 0, i32 2
  %arrayidx61 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands60, i32 0, i64 1
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx61, align 8
  %call62 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %31)
  %call63 = call %union.tree_node* @build_binary_op(i32 %cond54, %union.tree_node* %call58, %union.tree_node* %call62, i32 0)
  store %union.tree_node* %call63, %union.tree_node** %retval
  br label %return

sw.bb.64:                                         ; preds = %if.end, %if.end, %if.end, %if.end
  %32 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp65 = bitcast %union.tree_node* %32 to %struct.tree_exp*
  %operands66 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp65, i32 0, i32 2
  %arrayidx67 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands66, i32 0, i64 0
  %33 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8
  %call68 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %33)
  store %union.tree_node* %call68, %union.tree_node** %retval
  br label %return

sw.bb.69:                                         ; preds = %if.end, %if.end
  %34 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp70 = bitcast %union.tree_node* %34 to %struct.tree_exp*
  %operands71 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp70, i32 0, i32 2
  %arrayidx72 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands71, i32 0, i64 1
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx72, align 8
  %common73 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %side_effects_flag74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 2
  %bf.load75 = load i32, i32* %side_effects_flag74, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 8
  %bf.clear77 = and i32 %bf.lshr76, 1
  %tobool78 = icmp ne i32 %bf.clear77, 0
  br i1 %tobool78, label %if.then.79, label %if.else.88

if.then.79:                                       ; preds = %sw.bb.69
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %37 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp80 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands81 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp80, i32 0, i32 2
  %arrayidx82 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands81, i32 0, i64 1
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx82, align 8
  %39 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp83 = bitcast %union.tree_node* %39 to %struct.tree_exp*
  %operands84 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp83, i32 0, i32 2
  %arrayidx85 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands84, i32 0, i64 0
  %40 = load %union.tree_node*, %union.tree_node** %arrayidx85, align 8
  %call86 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %40)
  %call87 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %36, %union.tree_node* %38, %union.tree_node* %call86)
  store %union.tree_node* %call87, %union.tree_node** %retval
  br label %return

if.else.88:                                       ; preds = %sw.bb.69
  %41 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp89 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands90 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp89, i32 0, i32 2
  %arrayidx91 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands90, i32 0, i64 0
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx91, align 8
  %call92 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %42)
  store %union.tree_node* %call92, %union.tree_node** %retval
  br label %return

sw.bb.93:                                         ; preds = %if.end
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %44 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp94 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands95 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp94, i32 0, i32 2
  %arrayidx96 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands95, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx96, align 8
  %46 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp97 = bitcast %union.tree_node* %46 to %struct.tree_exp*
  %operands98 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp97, i32 0, i32 2
  %arrayidx99 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands98, i32 0, i64 1
  %47 = load %union.tree_node*, %union.tree_node** %arrayidx99, align 8
  %call100 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %47)
  %48 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp101 = bitcast %union.tree_node* %48 to %struct.tree_exp*
  %operands102 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp101, i32 0, i32 2
  %arrayidx103 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands102, i32 0, i64 2
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx103, align 8
  %call104 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %49)
  %call105 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 51, %union.tree_node* %43, %union.tree_node* %45, %union.tree_node* %call100, %union.tree_node* %call104)
  %call106 = call %union.tree_node* @fold(%union.tree_node* %call105)
  store %union.tree_node* %call106, %union.tree_node** %retval
  br label %return

sw.bb.107:                                        ; preds = %if.end
  %50 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common108 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type109 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common108, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type109, align 8
  %common110 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %code111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 2
  %bf.load112 = load i32, i32* %code111, align 8
  %bf.clear113 = and i32 %bf.load112, 255
  %cmp114 = icmp eq i32 %bf.clear113, 15
  br i1 %cmp114, label %if.then.127, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.107
  %52 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp116 = bitcast %union.tree_node* %52 to %struct.tree_exp*
  %operands117 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp116, i32 0, i32 2
  %arrayidx118 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands117, i32 0, i64 0
  %53 = load %union.tree_node*, %union.tree_node** %arrayidx118, align 8
  %common119 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type120, align 8
  %common121 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %code122 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common121, i32 0, i32 2
  %bf.load123 = load i32, i32* %code122, align 8
  %bf.clear124 = and i32 %bf.load123, 255
  %cmp125 = icmp eq i32 %bf.clear124, 15
  br i1 %cmp125, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %lor.lhs.false, %sw.bb.107
  br label %sw.epilog

if.end.128:                                       ; preds = %lor.lhs.false
  br label %sw.bb.129

sw.bb.129:                                        ; preds = %if.end, %if.end.128
  %55 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common130 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %type131 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common130, i32 0, i32 1
  %56 = load %union.tree_node*, %union.tree_node** %type131, align 8
  %type132 = bitcast %union.tree_node* %56 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i32 0, i32 6
  %bf.load133 = load i32, i32* %precision, align 4
  %bf.clear134 = and i32 %bf.load133, 511
  %57 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp135 = bitcast %union.tree_node* %57 to %struct.tree_exp*
  %operands136 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp135, i32 0, i32 2
  %arrayidx137 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands136, i32 0, i64 0
  %58 = load %union.tree_node*, %union.tree_node** %arrayidx137, align 8
  %common138 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %59 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %type140 = bitcast %union.tree_node* %59 to %struct.tree_type*
  %precision141 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type140, i32 0, i32 6
  %bf.load142 = load i32, i32* %precision141, align 4
  %bf.clear143 = and i32 %bf.load142, 511
  %cmp144 = icmp sge i32 %bf.clear134, %bf.clear143
  br i1 %cmp144, label %if.then.146, label %if.end.151

if.then.146:                                      ; preds = %sw.bb.129
  %60 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp147 = bitcast %union.tree_node* %60 to %struct.tree_exp*
  %operands148 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp147, i32 0, i32 2
  %arrayidx149 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands148, i32 0, i64 0
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx149, align 8
  %call150 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %61)
  store %union.tree_node* %call150, %union.tree_node** %retval
  br label %return

if.end.151:                                       ; preds = %sw.bb.129
  br label %sw.epilog

sw.bb.152:                                        ; preds = %if.end
  %62 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common153 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %type154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 1
  %63 = load %union.tree_node*, %union.tree_node** %type154, align 8
  %common155 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %code156 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common155, i32 0, i32 2
  %bf.load157 = load i32, i32* %code156, align 8
  %bf.clear158 = and i32 %bf.load157, 255
  %cmp159 = icmp eq i32 %bf.clear158, 7
  br i1 %cmp159, label %if.then.161, label %if.end.162

if.then.161:                                      ; preds = %sw.bb.152
  br label %sw.epilog

if.end.162:                                       ; preds = %sw.bb.152
  br label %sw.bb.163

sw.bb.163:                                        ; preds = %if.end, %if.end.162
  %64 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp164 = bitcast %union.tree_node* %64 to %struct.tree_exp*
  %operands165 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp164, i32 0, i32 2
  %arrayidx166 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands165, i32 0, i64 0
  %65 = load %union.tree_node*, %union.tree_node** %arrayidx166, align 8
  %common167 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type168 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common167, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type168, align 8
  %67 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp169 = bitcast %union.tree_node* %67 to %struct.tree_exp*
  %operands170 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp169, i32 0, i32 2
  %arrayidx171 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands170, i32 0, i64 1
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx171, align 8
  %common172 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %type173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 1
  %69 = load %union.tree_node*, %union.tree_node** %type173, align 8
  %cmp174 = icmp eq %union.tree_node* %66, %69
  br i1 %cmp174, label %if.then.176, label %if.end.184

if.then.176:                                      ; preds = %sw.bb.163
  %70 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp177 = bitcast %union.tree_node* %70 to %struct.tree_exp*
  %operands178 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp177, i32 0, i32 2
  %arrayidx179 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands178, i32 0, i64 0
  %71 = load %union.tree_node*, %union.tree_node** %arrayidx179, align 8
  %72 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp180 = bitcast %union.tree_node* %72 to %struct.tree_exp*
  %operands181 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp180, i32 0, i32 2
  %arrayidx182 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands181, i32 0, i64 1
  %73 = load %union.tree_node*, %union.tree_node** %arrayidx182, align 8
  %call183 = call %union.tree_node* @build_binary_op(i32 102, %union.tree_node* %71, %union.tree_node* %73, i32 1)
  store %union.tree_node* %call183, %union.tree_node** %retval
  br label %return

if.end.184:                                       ; preds = %sw.bb.163
  %74 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp185 = bitcast %union.tree_node* %74 to %struct.tree_exp*
  %operands186 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp185, i32 0, i32 2
  %arrayidx187 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands186, i32 0, i64 0
  %75 = load %union.tree_node*, %union.tree_node** %arrayidx187, align 8
  %76 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp188 = bitcast %union.tree_node* %76 to %struct.tree_exp*
  %operands189 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp188, i32 0, i32 2
  %arrayidx190 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands189, i32 0, i64 0
  %77 = load %union.tree_node*, %union.tree_node** %arrayidx190, align 8
  %common191 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %type192 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common191, i32 0, i32 1
  %78 = load %union.tree_node*, %union.tree_node** %type192, align 8
  %79 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp193 = bitcast %union.tree_node* %79 to %struct.tree_exp*
  %operands194 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp193, i32 0, i32 2
  %arrayidx195 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands194, i32 0, i64 1
  %80 = load %union.tree_node*, %union.tree_node** %arrayidx195, align 8
  %call196 = call %union.tree_node* @build1(i32 115, %union.tree_node* %78, %union.tree_node* %80)
  %call197 = call %union.tree_node* @fold(%union.tree_node* %call196)
  %call198 = call %union.tree_node* @build_binary_op(i32 102, %union.tree_node* %75, %union.tree_node* %call197, i32 1)
  store %union.tree_node* %call198, %union.tree_node** %retval
  br label %return

sw.bb.199:                                        ; preds = %if.end
  %81 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp200 = bitcast %union.tree_node* %81 to %struct.tree_exp*
  %operands201 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp200, i32 0, i32 2
  %arrayidx202 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands201, i32 0, i64 1
  %82 = load %union.tree_node*, %union.tree_node** %arrayidx202, align 8
  %call203 = call i32 @integer_onep(%union.tree_node* %82)
  %tobool204 = icmp ne i32 %call203, 0
  br i1 %tobool204, label %land.lhs.true.205, label %if.end.212

land.lhs.true.205:                                ; preds = %sw.bb.199
  %83 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common206 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %type207 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common206, i32 0, i32 1
  %84 = load %union.tree_node*, %union.tree_node** %type207, align 8
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %cmp208 = icmp ne %union.tree_node* %84, %85
  br i1 %cmp208, label %if.then.210, label %if.end.212

if.then.210:                                      ; preds = %land.lhs.true.205
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %87 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call211 = call %union.tree_node* @build1(i32 115, %union.tree_node* %86, %union.tree_node* %87)
  store %union.tree_node* %call211, %union.tree_node** %retval
  br label %return

if.end.212:                                       ; preds = %land.lhs.true.205, %sw.bb.199
  br label %sw.epilog

sw.bb.213:                                        ; preds = %if.end
  %88 = load i32, i32* @warn_parentheses, align 4
  %tobool214 = icmp ne i32 %88, 0
  br i1 %tobool214, label %land.lhs.true.215, label %if.end.220

land.lhs.true.215:                                ; preds = %sw.bb.213
  %89 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp216 = bitcast %union.tree_node* %89 to %struct.tree_exp*
  %complexity = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp216, i32 0, i32 1
  %90 = load i32, i32* %complexity, align 4
  %cmp217 = icmp eq i32 %90, 48
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %land.lhs.true.215
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.47, i32 0, i32 0))
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.219, %land.lhs.true.215, %sw.bb.213
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.220, %if.end.212, %if.then.161, %if.end.151, %if.then.127, %if.then.29
  %91 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common221 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %type222 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common221, i32 0, i32 1
  %92 = load %union.tree_node*, %union.tree_node** %type222, align 8
  %common223 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %code224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common223, i32 0, i32 2
  %bf.load225 = load i32, i32* %code224, align 8
  %bf.clear226 = and i32 %bf.load225, 255
  %cmp227 = icmp eq i32 %bf.clear226, 8
  br i1 %cmp227, label %if.then.229, label %if.end.243

if.then.229:                                      ; preds = %sw.epilog
  %93 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call230 = call %union.tree_node* @save_expr(%union.tree_node* %93)
  store %union.tree_node* %call230, %union.tree_node** %tem, align 8
  %94 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common231 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %side_effects_flag232 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common231, i32 0, i32 2
  %bf.load233 = load i32, i32* %side_effects_flag232, align 8
  %bf.lshr234 = lshr i32 %bf.load233, 8
  %bf.clear235 = and i32 %bf.lshr234, 1
  %tobool236 = icmp ne i32 %bf.clear235, 0
  %cond237 = select i1 %tobool236, i32 94, i32 92
  %95 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call238 = call %union.tree_node* @build_unary_op(i32 127, %union.tree_node* %95, i32 0)
  %call239 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %call238)
  %96 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %call240 = call %union.tree_node* @build_unary_op(i32 128, %union.tree_node* %96, i32 0)
  %call241 = call %union.tree_node* @truthvalue_conversion(%union.tree_node* %call240)
  %call242 = call %union.tree_node* @build_binary_op(i32 %cond237, %union.tree_node* %call239, %union.tree_node* %call241, i32 0)
  store %union.tree_node* %call242, %union.tree_node** %retval
  br label %return

if.end.243:                                       ; preds = %sw.epilog
  %97 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call244 = call %union.tree_node* @build_binary_op(i32 102, %union.tree_node* %97, %union.tree_node* %98, i32 1)
  store %union.tree_node* %call244, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.243, %if.then.229, %if.then.210, %if.end.184, %if.then.176, %if.then.146, %sw.bb.93, %if.else.88, %if.then.79, %sw.bb.64, %sw.bb.44, %if.else, %if.then.39, %cond.end.13, %cond.end, %sw.bb.6, %sw.bb, %if.then
  %99 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %99
}

declare i32 @integer_onep(%union.tree_node*) #1

declare %union.tree_node* @save_expr(%union.tree_node*) #1

declare %union.tree_node* @build_unary_op(i32, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_build_qualified_type(%union.tree_node* %type, i32 %type_quals) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %type_quals.addr = alloca i32, align 4
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store i32 %type_quals, i32* %type_quals.addr, align 4
  %0 = load i32, i32* %type_quals.addr, align 4
  %and = and i32 %0, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 13
  br i1 %cmp, label %lor.lhs.false.6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 15
  br i1 %cmp5, label %lor.lhs.false.6, label %if.then

lor.lhs.false.6:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common7 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8
  %common9 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 23
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.6, %lor.lhs.false
  call void (i8*, ...) @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i32 0, i32 0))
  %5 = load i32, i32* %type_quals.addr, align 4
  %and14 = and i32 %5, -5
  store i32 %and14, i32* %type_quals.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.6, %entry
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common15 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 18
  br i1 %cmp19, label %if.then.20, label %if.end.25

if.then.20:                                       ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common21 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %9 = load i32, i32* %type_quals.addr, align 4
  %call = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %8, i32 %9)
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type23 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values, align 8
  %call24 = call %union.tree_node* @build_array_type(%union.tree_node* %call, %union.tree_node* %11)
  store %union.tree_node* %call24, %union.tree_node** %retval
  br label %return

if.end.25:                                        ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %13 = load i32, i32* %type_quals.addr, align 4
  %call26 = call %union.tree_node* @build_qualified_type(%union.tree_node* %12, i32 %13)
  store %union.tree_node* %call26, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.25, %if.then.20
  %14 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %14
}

; Function Attrs: nounwind uwtable
define void @c_apply_type_quals_to_decl(i32 %type_quals, %union.tree_node* %decl) #0 {
entry:
  %type_quals.addr = alloca i32, align 4
  %decl.addr = alloca %union.tree_node*, align 8
  store i32 %type_quals, i32* %type_quals.addr, align 4
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load i32, i32* %type_quals.addr, align 4
  %and = and i32 %0, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8
  %tobool1 = icmp ne %union.tree_node* %2, null
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 15
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %entry
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common5 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load6 = load i32, i32* %readonly_flag, align 8
  %bf.clear7 = and i32 %bf.load6, -4097
  %bf.set = or i32 %bf.clear7, 4096
  store i32 %bf.set, i32* %readonly_flag, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %6 = load i32, i32* %type_quals.addr, align 4
  %and8 = and i32 %6, 2
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then.10, label %if.end.19

if.then.10:                                       ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common11 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load12 = load i32, i32* %side_effects_flag, align 8
  %bf.clear13 = and i32 %bf.load12, -257
  %bf.set14 = or i32 %bf.clear13, 256
  store i32 %bf.set14, i32* %side_effects_flag, align 8
  %8 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common15 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load16 = load i32, i32* %volatile_flag, align 8
  %bf.clear17 = and i32 %bf.load16, -2049
  %bf.set18 = or i32 %bf.clear17, 2048
  store i32 %bf.set18, i32* %volatile_flag, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.10, %if.end
  %9 = load i32, i32* %type_quals.addr, align 4
  %and20 = and i32 %9, 4
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then.22, label %if.end.58

if.then.22:                                       ; preds = %if.end.19
  %10 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common23 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type24, align 8
  %tobool25 = icmp ne %union.tree_node* %11, null
  br i1 %tobool25, label %lor.lhs.false.26, label %if.then.52

lor.lhs.false.26:                                 ; preds = %if.then.22
  %12 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common27 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %common29 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 13
  br i1 %cmp33, label %lor.lhs.false.42, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.26
  %14 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common35 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type36, align 8
  %common37 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 2
  %bf.load39 = load i32, i32* %code38, align 8
  %bf.clear40 = and i32 %bf.load39, 255
  %cmp41 = icmp eq i32 %bf.clear40, 15
  br i1 %cmp41, label %lor.lhs.false.42, label %if.then.52

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.34, %lor.lhs.false.26
  %16 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common43 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %type44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %type44, align 8
  %common45 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type46, align 8
  %common47 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 2
  %bf.load49 = load i32, i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 23
  br i1 %cmp51, label %if.then.52, label %if.else

if.then.52:                                       ; preds = %lor.lhs.false.42, %lor.lhs.false.34, %if.then.22
  call void (i8*, ...) @error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i32 0, i32 0))
  br label %if.end.57

if.else:                                          ; preds = %lor.lhs.false.42
  %19 = load i32, i32* @flag_strict_aliasing, align 4
  %tobool53 = icmp ne i32 %19, 0
  br i1 %tobool53, label %if.then.54, label %if.end.56

if.then.54:                                       ; preds = %if.else
  %20 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl55 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %pointer_alias_set = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl55, i32 0, i32 23
  store i64 -2, i64* %pointer_alias_set, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.54, %if.else
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then.52
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.end.19
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @c_common_get_alias_set(%union.tree_node* %t) #0 {
entry:
  %retval = alloca i64, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %u = alloca %union.tree_node*, align 8
  %t1 = alloca %union.tree_node*, align 8
  %t168 = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %u, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %union.tree_node*, %union.tree_node** %u, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %u, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 43
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %3 = phi i1 [ true, %for.cond ], [ %cmp5, %lor.rhs ]
  br i1 %3, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  %4 = load %union.tree_node*, %union.tree_node** %u, align 8
  %common6 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 39
  br i1 %cmp10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %5 = load %union.tree_node*, %union.tree_node** %u, align 8
  %exp = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common11 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common12 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 21
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i64 0, i64* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %u, align 8
  %exp17 = bitcast %union.tree_node* %8 to %struct.tree_exp*
  %operands18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp17, i32 0, i32 2
  %arrayidx19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands18, i32 0, i64 0
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8
  store %union.tree_node* %9, %union.tree_node** %u, align 8
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %10 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common20 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %idxprom = sext i32 %bf.clear23 to i64
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %11 = load i8, i8* %arrayidx24, align 1
  %conv = sext i8 %11 to i32
  %cmp25 = icmp eq i32 %conv, 116
  br i1 %cmp25, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %for.end
  store i64 -1, i64* %retval
  br label %return

if.end.28:                                        ; preds = %for.end
  %12 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp29 = icmp eq %union.tree_node* %12, %13
  br i1 %cmp29, label %if.then.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.28
  %14 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %cmp31 = icmp eq %union.tree_node* %14, %15
  br i1 %cmp31, label %if.then.36, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false
  %16 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  %cmp34 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %lor.lhs.false.33, %lor.lhs.false, %if.end.28
  store i64 0, i64* %retval
  br label %return

if.end.37:                                        ; preds = %lor.lhs.false.33
  %18 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common38 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load40 = load i32, i32* %code39, align 8
  %bf.clear41 = and i32 %bf.load40, 255
  %cmp42 = icmp eq i32 %bf.clear41, 6
  br i1 %cmp42, label %land.lhs.true.44, label %if.else

land.lhs.true.44:                                 ; preds = %if.end.37
  %19 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common45 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load46 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load46, 13
  %bf.clear47 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear47, 0
  br i1 %tobool, label %if.then.48, label %if.else

if.then.48:                                       ; preds = %land.lhs.true.44
  %20 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call = call %union.tree_node* @signed_type(%union.tree_node* %20)
  store %union.tree_node* %call, %union.tree_node** %t1, align 8
  %21 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %22 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %cmp49 = icmp ne %union.tree_node* %21, %22
  br i1 %cmp49, label %if.then.51, label %if.end.53

if.then.51:                                       ; preds = %if.then.48
  %23 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %call52 = call i64 @get_alias_set(%union.tree_node* %23)
  store i64 %call52, i64* %retval
  br label %return

if.end.53:                                        ; preds = %if.then.48
  br label %if.end.76

if.else:                                          ; preds = %land.lhs.true.44, %if.end.37
  %24 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common54 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %code55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load56 = load i32, i32* %code55, align 8
  %bf.clear57 = and i32 %bf.load56, 255
  %cmp58 = icmp eq i32 %bf.clear57, 13
  br i1 %cmp58, label %if.then.67, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %if.else
  %25 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common61 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code62 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common61, i32 0, i32 2
  %bf.load63 = load i32, i32* %code62, align 8
  %bf.clear64 = and i32 %bf.load63, 255
  %cmp65 = icmp eq i32 %bf.clear64, 15
  br i1 %cmp65, label %if.then.67, label %if.end.75

if.then.67:                                       ; preds = %lor.lhs.false.60, %if.else
  %26 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call69 = call %union.tree_node* @build_type_no_quals(%union.tree_node* %26)
  store %union.tree_node* %call69, %union.tree_node** %t168, align 8
  %27 = load %union.tree_node*, %union.tree_node** %t168, align 8
  %28 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %cmp70 = icmp ne %union.tree_node* %27, %28
  br i1 %cmp70, label %if.then.72, label %if.end.74

if.then.72:                                       ; preds = %if.then.67
  %29 = load %union.tree_node*, %union.tree_node** %t168, align 8
  %call73 = call i64 @get_alias_set(%union.tree_node* %29)
  store i64 %call73, i64* %retval
  br label %return

if.end.74:                                        ; preds = %if.then.67
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %lor.lhs.false.60
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %if.end.53
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %if.end.76, %if.then.72, %if.then.51, %if.then.36, %if.then.27, %if.then
  %30 = load i64, i64* %retval
  ret i64 %30
}

declare i64 @get_alias_set(%union.tree_node*) #1

declare %union.tree_node* @build_type_no_quals(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_alignof(%union.tree_node* %type) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %1 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %1, 15
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8
  store %union.tree_node* %3, %union.tree_node** %type.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common4 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  store i32 %bf.clear7, i32* %code, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %code, align 4
  %cmp8 = icmp eq i32 %5, 23
  br i1 %cmp8, label %if.then.9, label %if.else

if.then.9:                                        ; preds = %if.end
  %call = call %union.tree_node* @size_int_wide(i64 2, i32 0)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  br label %if.end.22

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* %code, align 4
  %cmp10 = icmp eq i32 %6, 5
  br i1 %cmp10, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %7 = load i32, i32* %code, align 4
  %cmp11 = icmp eq i32 %7, 0
  br i1 %cmp11, label %if.then.12, label %if.else.13

if.then.12:                                       ; preds = %lor.lhs.false, %if.else
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %8, %union.tree_node** %t, align 8
  br label %if.end.21

if.else.13:                                       ; preds = %lor.lhs.false
  %9 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type14 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i32 0, i32 2
  %10 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp15 = icmp ne %union.tree_node* %10, null
  br i1 %cmp15, label %if.else.17, label %if.then.16

if.then.16:                                       ; preds = %if.else.13
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i32 0, i32 0))
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 15), align 8
  store %union.tree_node* %11, %union.tree_node** %t, align 8
  br label %if.end.20

if.else.17:                                       ; preds = %if.else.13
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type18 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i32 0, i32 7
  %13 = load i32, i32* %align, align 4
  %div = udiv i32 %13, 8
  %conv = zext i32 %div to i64
  %call19 = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  store %union.tree_node* %call19, %union.tree_node** %t, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.then.12
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.9
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %15 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call23 = call %union.tree_node* @build1(i32 115, %union.tree_node* %14, %union.tree_node* %15)
  %call24 = call %union.tree_node* @fold(%union.tree_node* %call23)
  ret %union.tree_node* %call24
}

declare %union.tree_node* @size_int_wide(i64, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_alignof_expr(%union.tree_node* %expr) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %t52 = alloca %union.tree_node*, align 8
  %best = alloca %union.tree_node*, align 8
  %bestalign = alloca i32, align 4
  %thisalign = alloca i32, align 4
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %decl = bitcast %union.tree_node* %1 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 6
  %a = bitcast %union.anon* %u1 to %struct.anon.0*
  %2 = bitcast %struct.anon.0* %a to i32*
  %bf.load1 = load i32, i32* %2, align 4
  %bf.clear2 = and i32 %bf.load1, 16777215
  %div = sdiv i32 %bf.clear2, 8
  %conv = sext i32 %div to i64
  %call = call %union.tree_node* @size_int_wide(i64 %conv, i32 0)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  br label %if.end.100

if.else:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common3 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load5 = load i32, i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %cmp7 = icmp eq i32 %bf.clear6, 39
  br i1 %cmp7, label %land.lhs.true, label %if.else.15

land.lhs.true:                                    ; preds = %if.else
  %4 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %decl9 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl9, i32 0, i32 5
  %6 = bitcast i48* %lang_flag_4 to i64*
  %bf.load10 = load i64, i64* %6, align 8
  %bf.lshr = lshr i64 %bf.load10, 41
  %bf.clear11 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear11 to i32
  %cmp12 = icmp eq i32 %bf.cast, 1
  br i1 %cmp12, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i32 0, i32 0))
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  store %union.tree_node* %7, %union.tree_node** %t, align 8
  br label %if.end.99

if.else.15:                                       ; preds = %land.lhs.true, %if.else
  %8 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common16 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code17 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load18 = load i32, i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 39
  br i1 %cmp20, label %land.lhs.true.22, label %if.else.44

land.lhs.true.22:                                 ; preds = %if.else.15
  %9 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp23 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands24 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp23, i32 0, i32 2
  %arrayidx25 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands24, i32 0, i64 1
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8
  %common26 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 37
  br i1 %cmp30, label %if.then.32, label %if.else.44

if.then.32:                                       ; preds = %land.lhs.true.22
  %11 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp33 = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands34 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp33, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands34, i32 0, i64 1
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8
  %decl36 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %u137 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl36, i32 0, i32 6
  %a38 = bitcast %union.anon* %u137 to %struct.anon.0*
  %13 = bitcast %struct.anon.0* %a38 to i32*
  %bf.load39 = load i32, i32* %13, align 4
  %bf.clear40 = and i32 %bf.load39, 16777215
  %div41 = sdiv i32 %bf.clear40, 8
  %conv42 = sext i32 %div41 to i64
  %call43 = call %union.tree_node* @size_int_wide(i64 %conv42, i32 0)
  store %union.tree_node* %call43, %union.tree_node** %t, align 8
  br label %if.end.98

if.else.44:                                       ; preds = %land.lhs.true.22, %if.else.15
  %14 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common45 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 41
  br i1 %cmp49, label %if.then.51, label %if.else.94

if.then.51:                                       ; preds = %if.else.44
  %15 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %exp53 = bitcast %union.tree_node* %15 to %struct.tree_exp*
  %operands54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp53, i32 0, i32 2
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands54, i32 0, i64 0
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8
  store %union.tree_node* %16, %union.tree_node** %t52, align 8
  %17 = load %union.tree_node*, %union.tree_node** %t52, align 8
  store %union.tree_node* %17, %union.tree_node** %best, align 8
  %18 = load %union.tree_node*, %union.tree_node** %t52, align 8
  %common56 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common57 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type58, align 8
  %type59 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i32 0, i32 7
  %21 = load i32, i32* %align, align 4
  store i32 %21, i32* %bestalign, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then.51
  %22 = load %union.tree_node*, %union.tree_node** %t52, align 8
  %common60 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load62 = load i32, i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 115
  br i1 %cmp64, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %23 = load %union.tree_node*, %union.tree_node** %t52, align 8
  %exp66 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands67 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp66, i32 0, i32 2
  %arrayidx68 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands67, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx68, align 8
  %common69 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %type70, align 8
  %common71 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 2
  %bf.load73 = load i32, i32* %code72, align 8
  %bf.clear74 = and i32 %bf.load73, 255
  %cmp75 = icmp eq i32 %bf.clear74, 13
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %26 = phi i1 [ false, %while.cond ], [ %cmp75, %land.rhs ]
  br i1 %26, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %27 = load %union.tree_node*, %union.tree_node** %t52, align 8
  %exp77 = bitcast %union.tree_node* %27 to %struct.tree_exp*
  %operands78 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp77, i32 0, i32 2
  %arrayidx79 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands78, i32 0, i64 0
  %28 = load %union.tree_node*, %union.tree_node** %arrayidx79, align 8
  store %union.tree_node* %28, %union.tree_node** %t52, align 8
  %29 = load %union.tree_node*, %union.tree_node** %t52, align 8
  %common80 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type81, align 8
  %common82 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %type83 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common82, i32 0, i32 1
  %31 = load %union.tree_node*, %union.tree_node** %type83, align 8
  %type84 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %align85 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type84, i32 0, i32 7
  %32 = load i32, i32* %align85, align 4
  store i32 %32, i32* %thisalign, align 4
  %33 = load i32, i32* %thisalign, align 4
  %34 = load i32, i32* %bestalign, align 4
  %cmp86 = icmp sgt i32 %33, %34
  br i1 %cmp86, label %if.then.88, label %if.end

if.then.88:                                       ; preds = %while.body
  %35 = load %union.tree_node*, %union.tree_node** %t52, align 8
  store %union.tree_node* %35, %union.tree_node** %best, align 8
  %36 = load i32, i32* %thisalign, align 4
  store i32 %36, i32* %bestalign, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.88, %while.body
  br label %while.cond

while.end:                                        ; preds = %land.end
  %37 = load %union.tree_node*, %union.tree_node** %best, align 8
  %common89 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type90 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common89, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type90, align 8
  %common91 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common91, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type92, align 8
  %call93 = call %union.tree_node* @c_alignof(%union.tree_node* %39)
  store %union.tree_node* %call93, %union.tree_node** %retval
  br label %return

if.else.94:                                       ; preds = %if.else.44
  %40 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %common95 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type96, align 8
  %call97 = call %union.tree_node* @c_alignof(%union.tree_node* %41)
  store %union.tree_node* %call97, %union.tree_node** %retval
  br label %return

if.end.98:                                        ; preds = %if.then.32
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %if.then.14
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.then
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %43 = load %union.tree_node*, %union.tree_node** %t, align 8
  %call101 = call %union.tree_node* @build1(i32 115, %union.tree_node* %42, %union.tree_node* %43)
  %call102 = call %union.tree_node* @fold(%union.tree_node* %call101)
  store %union.tree_node* %call102, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.100, %if.else.94, %while.end
  %44 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %44
}

; Function Attrs: nounwind uwtable
define void @c_common_nodes_and_builtins() #0 {
entry:
  %builtin_types = alloca [78 x %union.tree_node*], align 16
  %wchar_type_size = alloca i32, align 4
  %array_domain_type = alloca %union.tree_node*, align 8
  %traditional_ptr_type_node = alloca %union.tree_node*, align 8
  %traditional_cptr_type_node = alloca %union.tree_node*, align 8
  %traditional_len_type_node = alloca %union.tree_node*, align 8
  %va_list_ref_type_node = alloca %union.tree_node*, align 8
  %va_list_arg_type_node = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %decl516 = alloca %union.tree_node*, align 8
  %decl526 = alloca %union.tree_node*, align 8
  %decl536 = alloca %union.tree_node*, align 8
  %decl546 = alloca %union.tree_node*, align 8
  %decl556 = alloca %union.tree_node*, align 8
  %decl566 = alloca %union.tree_node*, align 8
  %decl577 = alloca %union.tree_node*, align 8
  %decl590 = alloca %union.tree_node*, align 8
  %decl603 = alloca %union.tree_node*, align 8
  %decl616 = alloca %union.tree_node*, align 8
  %decl629 = alloca %union.tree_node*, align 8
  %decl642 = alloca %union.tree_node*, align 8
  %decl655 = alloca %union.tree_node*, align 8
  %decl668 = alloca %union.tree_node*, align 8
  %decl681 = alloca %union.tree_node*, align 8
  %decl694 = alloca %union.tree_node*, align 8
  %decl707 = alloca %union.tree_node*, align 8
  %decl717 = alloca %union.tree_node*, align 8
  %decl727 = alloca %union.tree_node*, align 8
  %decl737 = alloca %union.tree_node*, align 8
  %decl747 = alloca %union.tree_node*, align 8
  %decl757 = alloca %union.tree_node*, align 8
  %decl767 = alloca %union.tree_node*, align 8
  %decl777 = alloca %union.tree_node*, align 8
  %decl787 = alloca %union.tree_node*, align 8
  %decl797 = alloca %union.tree_node*, align 8
  %decl807 = alloca %union.tree_node*, align 8
  %decl817 = alloca %union.tree_node*, align 8
  %decl827 = alloca %union.tree_node*, align 8
  %decl837 = alloca %union.tree_node*, align 8
  %decl847 = alloca %union.tree_node*, align 8
  %decl857 = alloca %union.tree_node*, align 8
  %decl867 = alloca %union.tree_node*, align 8
  %decl877 = alloca %union.tree_node*, align 8
  %decl887 = alloca %union.tree_node*, align 8
  %decl897 = alloca %union.tree_node*, align 8
  %decl907 = alloca %union.tree_node*, align 8
  %decl917 = alloca %union.tree_node*, align 8
  %decl927 = alloca %union.tree_node*, align 8
  %decl937 = alloca %union.tree_node*, align 8
  %decl947 = alloca %union.tree_node*, align 8
  %decl957 = alloca %union.tree_node*, align 8
  %decl967 = alloca %union.tree_node*, align 8
  %decl977 = alloca %union.tree_node*, align 8
  %decl987 = alloca %union.tree_node*, align 8
  %decl997 = alloca %union.tree_node*, align 8
  %decl1007 = alloca %union.tree_node*, align 8
  %decl1016 = alloca %union.tree_node*, align 8
  %decl1025 = alloca %union.tree_node*, align 8
  %decl1034 = alloca %union.tree_node*, align 8
  %decl1043 = alloca %union.tree_node*, align 8
  %decl1052 = alloca %union.tree_node*, align 8
  %decl1061 = alloca %union.tree_node*, align 8
  %decl1070 = alloca %union.tree_node*, align 8
  %decl1079 = alloca %union.tree_node*, align 8
  %decl1088 = alloca %union.tree_node*, align 8
  %decl1097 = alloca %union.tree_node*, align 8
  %decl1106 = alloca %union.tree_node*, align 8
  %decl1115 = alloca %union.tree_node*, align 8
  %decl1124 = alloca %union.tree_node*, align 8
  %decl1133 = alloca %union.tree_node*, align 8
  %decl1142 = alloca %union.tree_node*, align 8
  %decl1151 = alloca %union.tree_node*, align 8
  %decl1160 = alloca %union.tree_node*, align 8
  %decl1170 = alloca %union.tree_node*, align 8
  %decl1179 = alloca %union.tree_node*, align 8
  %decl1189 = alloca %union.tree_node*, align 8
  %decl1198 = alloca %union.tree_node*, align 8
  %decl1208 = alloca %union.tree_node*, align 8
  %decl1217 = alloca %union.tree_node*, align 8
  %decl1226 = alloca %union.tree_node*, align 8
  %decl1236 = alloca %union.tree_node*, align 8
  %decl1245 = alloca %union.tree_node*, align 8
  %decl1255 = alloca %union.tree_node*, align 8
  %decl1264 = alloca %union.tree_node*, align 8
  %decl1274 = alloca %union.tree_node*, align 8
  %decl1283 = alloca %union.tree_node*, align 8
  %decl1292 = alloca %union.tree_node*, align 8
  %decl1301 = alloca %union.tree_node*, align 8
  %decl1310 = alloca %union.tree_node*, align 8
  %decl1319 = alloca %union.tree_node*, align 8
  %decl1328 = alloca %union.tree_node*, align 8
  %decl1337 = alloca %union.tree_node*, align 8
  %decl1346 = alloca %union.tree_node*, align 8
  %decl1355 = alloca %union.tree_node*, align 8
  %decl1364 = alloca %union.tree_node*, align 8
  %decl1373 = alloca %union.tree_node*, align 8
  %decl1382 = alloca %union.tree_node*, align 8
  %decl1391 = alloca %union.tree_node*, align 8
  %decl1400 = alloca %union.tree_node*, align 8
  %decl1409 = alloca %union.tree_node*, align 8
  %decl1418 = alloca %union.tree_node*, align 8
  %decl1427 = alloca %union.tree_node*, align 8
  %decl1436 = alloca %union.tree_node*, align 8
  store %struct.attribute_spec* getelementptr inbounds ([3 x %struct.attribute_spec], [3 x %struct.attribute_spec]* @c_format_attribute_table, i32 0, i32 0), %struct.attribute_spec** @format_attribute_table, align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  call void @record_builtin_type(i32 27, i8* null, %union.tree_node* %0)
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  call void @record_builtin_type(i32 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), %union.tree_node* %1)
  %2 = load i32, i32* @c_language, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  call void @record_builtin_type(i32 10, i8* null, %union.tree_node* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  call void @record_builtin_type(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %union.tree_node* %4)
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  call void @record_builtin_type(i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), %union.tree_node* %5)
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), %union.tree_node* %6)
  %7 = load i32, i32* @c_language, align 4
  %cmp1 = icmp eq i32 %7, 1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i32 0, i32 0), %union.tree_node* %8)
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), %union.tree_node* %9)
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i32 0, i32 0), %union.tree_node* %10)
  %11 = load i32, i32* @c_language, align 4
  %cmp4 = icmp eq i32 %11, 1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i32 0, i32 0), %union.tree_node* %12)
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  call void @record_builtin_type(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), %union.tree_node* %13)
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i32 0, i32 0), %union.tree_node* %14)
  %15 = load i32, i32* @c_language, align 4
  %cmp7 = icmp eq i32 %15, 1
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), %union.tree_node* %16)
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.end.6
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), %union.tree_node* %17)
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i32 0, i32 0), %union.tree_node* %18)
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 1), align 8
  %call = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %19)
  %call10 = call %union.tree_node* @pushdecl(%union.tree_node* %call)
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 2), align 8
  %call11 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %20)
  %call12 = call %union.tree_node* @pushdecl(%union.tree_node* %call11)
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 3), align 8
  %call13 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %21)
  %call14 = call %union.tree_node* @pushdecl(%union.tree_node* %call13)
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 4), align 8
  %call15 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %22)
  %call16 = call %union.tree_node* @pushdecl(%union.tree_node* %call15)
  %call17 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0))
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 5), align 8
  %call18 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call17, %union.tree_node* %23)
  %call19 = call %union.tree_node* @pushdecl(%union.tree_node* %call18)
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 6), align 8
  %call20 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %24)
  %call21 = call %union.tree_node* @pushdecl(%union.tree_node* %call20)
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 7), align 8
  %call22 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %25)
  %call23 = call %union.tree_node* @pushdecl(%union.tree_node* %call22)
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 8), align 8
  %call24 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %26)
  %call25 = call %union.tree_node* @pushdecl(%union.tree_node* %call24)
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 9), align 8
  %call26 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %27)
  %call27 = call %union.tree_node* @pushdecl(%union.tree_node* %call26)
  %call28 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0))
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 10), align 8
  %call29 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call28, %union.tree_node* %28)
  %call30 = call %union.tree_node* @pushdecl(%union.tree_node* %call29)
  %call31 = call %union.tree_node* @make_signed_type(i32 128)
  store %union.tree_node* %call31, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 9), align 8
  %call32 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %29)
  %call33 = call %union.tree_node* @pushdecl(%union.tree_node* %call32)
  %call34 = call %union.tree_node* @make_unsigned_type(i32 128)
  store %union.tree_node* %call34, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 10), align 8
  %call35 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %30)
  %call36 = call %union.tree_node* @pushdecl(%union.tree_node* %call35)
  %31 = load i32, i32* @target_flags, align 4
  %and = and i32 %31, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0)
  %call37 = call %union.tree_node* @get_identifier(i8* %cond)
  %call38 = call %union.tree_node* @identifier_global_value(%union.tree_node* %call37)
  %common = bitcast %union.tree_node* %call38 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %32, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %call39 = call %union.tree_node* @signed_type(%union.tree_node* %33)
  store %union.tree_node* %call39, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 5), align 8
  %34 = load i32, i32* @flag_traditional, align 4
  %tobool40 = icmp ne i32 %34, 0
  br i1 %tobool40, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %if.end.9
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 5), align 8
  store %union.tree_node* %35, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.41, %if.end.9
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  call void @set_sizetype(%union.tree_node* %36)
  %37 = load i32, i32* @flag_short_double, align 4
  call void @build_common_tree_nodes_2(i32 %37)
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  call void @record_builtin_type(i32 29, i8* null, %union.tree_node* %38)
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  call void @record_builtin_type(i32 30, i8* null, %union.tree_node* %39)
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  call void @record_builtin_type(i32 114, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), %union.tree_node* %40)
  %call43 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0))
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 20), align 8
  %call44 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call43, %union.tree_node* %41)
  %call45 = call %union.tree_node* @pushdecl(%union.tree_node* %call44)
  %call46 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0))
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 21), align 8
  %call47 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call46, %union.tree_node* %42)
  %call48 = call %union.tree_node* @pushdecl(%union.tree_node* %call47)
  %call49 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0))
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 22), align 8
  %call50 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call49, %union.tree_node* %43)
  %call51 = call %union.tree_node* @pushdecl(%union.tree_node* %call50)
  %call52 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i32 0, i32 0))
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 23), align 8
  %call53 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call52, %union.tree_node* %44)
  %call54 = call %union.tree_node* @pushdecl(%union.tree_node* %call53)
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  call void @record_builtin_type(i32 31, i8* null, %union.tree_node* %45)
  %call55 = call %union.tree_node* @build_int_2_wide(i64 0, i64 0)
  store %union.tree_node* %call55, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 31), align 8
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 31), align 8
  %common56 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common56, i32 0, i32 1
  store %union.tree_node* %46, %union.tree_node** %type57, align 8
  %call58 = call %union.tree_node* @build_void_list_node()
  store %union.tree_node* %call58, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call59 = call %union.tree_node* @size_int_wide(i64 200, i32 0)
  %call60 = call %union.tree_node* @build_index_type(%union.tree_node* %call59)
  store %union.tree_node* %call60, %union.tree_node** %array_domain_type, align 8
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %49 = load %union.tree_node*, %union.tree_node** %array_domain_type, align 8
  %call61 = call %union.tree_node* @build_array_type(%union.tree_node* %48, %union.tree_node* %49)
  store %union.tree_node* %call61, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 11), align 8
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %51 = load %union.tree_node*, %union.tree_node** %array_domain_type, align 8
  %call62 = call %union.tree_node* @build_array_type(%union.tree_node* %50, %union.tree_node* %51)
  store %union.tree_node* %call62, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 13), align 8
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %call63 = call %union.tree_node* @build_pointer_type(%union.tree_node* %52)
  store %union.tree_node* %call63, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 14), align 8
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %call64 = call %union.tree_node* @build_qualified_type(%union.tree_node* %53, i32 1)
  %call65 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call64)
  store %union.tree_node* %call65, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 15), align 8
  %54 = load i32, i32* @flag_traditional, align 4
  %tobool66 = icmp ne i32 %54, 0
  br i1 %tobool66, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end.42
  %55 = load i32, i32* @c_language, align 4
  %cmp67 = icmp ne i32 %55, 1
  br i1 %cmp67, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 14), align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end.42
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond68 = phi %union.tree_node* [ %56, %cond.true ], [ %57, %cond.false ]
  store %union.tree_node* %cond68, %union.tree_node** %traditional_ptr_type_node, align 8
  %58 = load i32, i32* @flag_traditional, align 4
  %tobool69 = icmp ne i32 %58, 0
  br i1 %tobool69, label %land.lhs.true.70, label %cond.false.73

land.lhs.true.70:                                 ; preds = %cond.end
  %59 = load i32, i32* @c_language, align 4
  %cmp71 = icmp ne i32 %59, 1
  br i1 %cmp71, label %cond.true.72, label %cond.false.73

cond.true.72:                                     ; preds = %land.lhs.true.70
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 15), align 8
  br label %cond.end.74

cond.false.73:                                    ; preds = %land.lhs.true.70, %cond.end
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 29), align 8
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.false.73, %cond.true.72
  %cond75 = phi %union.tree_node* [ %60, %cond.true.72 ], [ %61, %cond.false.73 ]
  store %union.tree_node* %cond75, %union.tree_node** %traditional_cptr_type_node, align 8
  %62 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 10), align 8
  call void %62()
  %63 = load i32, i32* @flag_short_wchar, align 4
  %tobool76 = icmp ne i32 %63, 0
  %cond77 = select i1 %tobool76, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)
  %call78 = call %union.tree_node* @get_identifier(i8* %cond77)
  store %union.tree_node* %call78, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %call79 = call %union.tree_node* @identifier_global_value(%union.tree_node* %64)
  %common80 = bitcast %union.tree_node* %call79 to %struct.tree_common*
  %type81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common80, i32 0, i32 1
  %65 = load %union.tree_node*, %union.tree_node** %type81, align 8
  store %union.tree_node* %65, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %type82 = bitcast %union.tree_node* %66 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type82, i32 0, i32 6
  %bf.load = load i32, i32* %precision, align 4
  %bf.clear = and i32 %bf.load, 511
  store i32 %bf.clear, i32* %wchar_type_size, align 4
  %67 = load i32, i32* @c_language, align 4
  %cmp83 = icmp eq i32 %67, 1
  br i1 %cmp83, label %if.then.84, label %if.else.93

if.then.84:                                       ; preds = %cond.end.74
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %common85 = bitcast %union.tree_node* %68 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 2
  %bf.load86 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load86, 13
  %bf.clear87 = and i32 %bf.lshr, 1
  %tobool88 = icmp ne i32 %bf.clear87, 0
  br i1 %tobool88, label %if.then.89, label %if.else

if.then.89:                                       ; preds = %if.then.84
  %69 = load i32, i32* %wchar_type_size, align 4
  %call90 = call %union.tree_node* @make_unsigned_type(i32 %69)
  store %union.tree_node* %call90, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  br label %if.end.92

if.else:                                          ; preds = %if.then.84
  %70 = load i32, i32* %wchar_type_size, align 4
  %call91 = call %union.tree_node* @make_signed_type(i32 %70)
  store %union.tree_node* %call91, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  br label %if.end.92

if.end.92:                                        ; preds = %if.else, %if.then.89
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  call void @record_builtin_type(i32 66, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), %union.tree_node* %71)
  br label %if.end.96

if.else.93:                                       ; preds = %cond.end.74
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %call94 = call %union.tree_node* @signed_type(%union.tree_node* %72)
  store %union.tree_node* %call94, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 1), align 8
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %call95 = call %union.tree_node* @unsigned_type(%union.tree_node* %73)
  store %union.tree_node* %call95, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 2), align 8
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.end.92
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 0), align 8
  %75 = load %union.tree_node*, %union.tree_node** %array_domain_type, align 8
  %call97 = call %union.tree_node* @build_array_type(%union.tree_node* %74, %union.tree_node* %75)
  store %union.tree_node* %call97, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 12), align 8
  %call98 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0))
  %call99 = call %union.tree_node* @identifier_global_value(%union.tree_node* %call98)
  %common100 = bitcast %union.tree_node* %call99 to %struct.tree_common*
  %type101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 1
  %76 = load %union.tree_node*, %union.tree_node** %type101, align 8
  store %union.tree_node* %76, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 3), align 8
  %77 = load i32, i32* @target_flags, align 4
  %and102 = and i32 %77, 33554432
  %tobool103 = icmp ne i32 %and102, 0
  %cond104 = select i1 %tobool103, i32 64, i32 32
  %cmp105 = icmp eq i32 %cond104, 64
  %cond106 = select i1 %cmp105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0)
  %call107 = call %union.tree_node* @get_identifier(i8* %cond106)
  %call108 = call %union.tree_node* @identifier_global_value(%union.tree_node* %call107)
  %common109 = bitcast %union.tree_node* %call108 to %struct.tree_common*
  %type110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 1
  %78 = load %union.tree_node*, %union.tree_node** %type110, align 8
  store %union.tree_node* %78, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 7), align 8
  %79 = load i32, i32* @target_flags, align 4
  %and111 = and i32 %79, 33554432
  %tobool112 = icmp ne i32 %and111, 0
  %cond113 = select i1 %tobool112, i32 64, i32 32
  %cmp114 = icmp eq i32 %cond113, 64
  %cond115 = select i1 %cmp114, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i32 0, i32 0)
  %call116 = call %union.tree_node* @get_identifier(i8* %cond115)
  %call117 = call %union.tree_node* @identifier_global_value(%union.tree_node* %call116)
  %common118 = bitcast %union.tree_node* %call117 to %struct.tree_common*
  %type119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 1
  %80 = load %union.tree_node*, %union.tree_node** %type119, align 8
  store %union.tree_node* %80, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 8), align 8
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %call120 = call %union.tree_node* @build_function_type(%union.tree_node* %81, %union.tree_node* null)
  store %union.tree_node* %call120, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 22), align 8
  %82 = load i32, i32* @target_flags, align 4
  %and121 = and i32 %82, 33554432
  %tobool122 = icmp ne i32 %and121, 0
  %cond123 = select i1 %tobool122, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0)
  %call124 = call %union.tree_node* @get_identifier(i8* %cond123)
  %call125 = call %union.tree_node* @identifier_global_value(%union.tree_node* %call124)
  %common126 = bitcast %union.tree_node* %call125 to %struct.tree_common*
  %type127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 1
  %83 = load %union.tree_node*, %union.tree_node** %type127, align 8
  store %union.tree_node* %83, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 30), align 8
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 30), align 8
  %call128 = call %union.tree_node* @unsigned_type(%union.tree_node* %84)
  store %union.tree_node* %call128, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 6), align 8
  %call129 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.73, i32 0, i32 0))
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 31), align 8
  %call130 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call129, %union.tree_node* %85)
  %call131 = call %union.tree_node* @pushdecl(%union.tree_node* %call130)
  %call132 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i32 0, i32 0))
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 30), align 8
  %call133 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call132, %union.tree_node* %86)
  %call134 = call %union.tree_node* @pushdecl(%union.tree_node* %call133)
  %call135 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i32 0, i32 0))
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %call136 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call135, %union.tree_node* %87)
  %call137 = call %union.tree_node* @pushdecl(%union.tree_node* %call136)
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 31), align 8
  %common138 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 2
  %bf.load139 = load i32, i32* %code, align 8
  %bf.clear140 = and i32 %bf.load139, 255
  %cmp141 = icmp eq i32 %bf.clear140, 18
  br i1 %cmp141, label %if.then.142, label %if.else.146

if.then.142:                                      ; preds = %if.end.96
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 31), align 8
  %common143 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %type144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common143, i32 0, i32 1
  %90 = load %union.tree_node*, %union.tree_node** %type144, align 8
  %call145 = call %union.tree_node* @build_pointer_type(%union.tree_node* %90)
  store %union.tree_node* %call145, %union.tree_node** %va_list_ref_type_node, align 8
  store %union.tree_node* %call145, %union.tree_node** %va_list_arg_type_node, align 8
  br label %if.end.148

if.else.146:                                      ; preds = %if.end.96
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 31), align 8
  store %union.tree_node* %91, %union.tree_node** %va_list_arg_type_node, align 8
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 31), align 8
  %call147 = call %union.tree_node* @build_reference_type(%union.tree_node* %92)
  store %union.tree_node* %call147, %union.tree_node** %va_list_ref_type_node, align 8
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.146, %if.then.142
  %93 = load i32, i32* @flag_traditional, align 4
  %tobool149 = icmp ne i32 %93, 0
  br i1 %tobool149, label %land.lhs.true.150, label %cond.false.153

land.lhs.true.150:                                ; preds = %if.end.148
  %94 = load i32, i32* @c_language, align 4
  %cmp151 = icmp ne i32 %94, 1
  br i1 %cmp151, label %cond.true.152, label %cond.false.153

cond.true.152:                                    ; preds = %land.lhs.true.150
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  br label %cond.end.154

cond.false.153:                                   ; preds = %land.lhs.true.150, %if.end.148
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  br label %cond.end.154

cond.end.154:                                     ; preds = %cond.false.153, %cond.true.152
  %cond155 = phi %union.tree_node* [ %95, %cond.true.152 ], [ %96, %cond.false.153 ]
  store %union.tree_node* %cond155, %union.tree_node** %traditional_len_type_node, align 8
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %arrayidx = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  store %union.tree_node* %97, %union.tree_node** %arrayidx, align 8
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %arrayidx156 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  store %union.tree_node* %98, %union.tree_node** %arrayidx156, align 8
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %arrayidx157 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 2
  store %union.tree_node* %99, %union.tree_node** %arrayidx157, align 8
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %arrayidx158 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  store %union.tree_node* %100, %union.tree_node** %arrayidx158, align 8
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %arrayidx159 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 4
  store %union.tree_node* %101, %union.tree_node** %arrayidx159, align 8
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %arrayidx160 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 5
  store %union.tree_node* %102, %union.tree_node** %arrayidx160, align 8
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 7), align 8
  %arrayidx161 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 6
  store %union.tree_node* %103, %union.tree_node** %arrayidx161, align 8
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %arrayidx162 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 7
  store %union.tree_node* %104, %union.tree_node** %arrayidx162, align 8
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %arrayidx163 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 8
  store %union.tree_node* %105, %union.tree_node** %arrayidx163, align 8
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 21), align 8
  %arrayidx164 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 9
  store %union.tree_node* %106, %union.tree_node** %arrayidx164, align 8
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 22), align 8
  %arrayidx165 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 10
  store %union.tree_node* %107, %union.tree_node** %arrayidx165, align 8
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 23), align 8
  %arrayidx166 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 11
  store %union.tree_node* %108, %union.tree_node** %arrayidx166, align 8
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  %arrayidx167 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  store %union.tree_node* %109, %union.tree_node** %arrayidx167, align 8
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 29), align 8
  %arrayidx168 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  store %union.tree_node* %110, %union.tree_node** %arrayidx168, align 8
  %111 = load %union.tree_node*, %union.tree_node** %traditional_ptr_type_node, align 8
  %arrayidx169 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 14
  store %union.tree_node* %111, %union.tree_node** %arrayidx169, align 8
  %112 = load %union.tree_node*, %union.tree_node** %traditional_cptr_type_node, align 8
  %arrayidx170 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 15
  store %union.tree_node* %112, %union.tree_node** %arrayidx170, align 8
  %113 = load i32, i32* @ptr_mode, align 4
  %call171 = call %union.tree_node* @type_for_mode(i32 %113, i32 0)
  %arrayidx172 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 16
  store %union.tree_node* %call171, %union.tree_node** %arrayidx172, align 8
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 4), align 8
  %arrayidx173 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  store %union.tree_node* %114, %union.tree_node** %arrayidx173, align 8
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 14), align 8
  %arrayidx174 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  store %union.tree_node* %115, %union.tree_node** %arrayidx174, align 8
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 15), align 8
  %arrayidx175 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  store %union.tree_node* %116, %union.tree_node** %arrayidx175, align 8
  %117 = load %union.tree_node*, %union.tree_node** %traditional_len_type_node, align 8
  %arrayidx176 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 20
  store %union.tree_node* %117, %union.tree_node** %arrayidx176, align 8
  %118 = load %union.tree_node*, %union.tree_node** %va_list_ref_type_node, align 8
  %arrayidx177 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 21
  store %union.tree_node* %118, %union.tree_node** %arrayidx177, align 8
  %119 = load %union.tree_node*, %union.tree_node** %va_list_arg_type_node, align 8
  %arrayidx178 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 22
  store %union.tree_node* %119, %union.tree_node** %arrayidx178, align 8
  %arrayidx179 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %120 = load %union.tree_node*, %union.tree_node** %arrayidx179, align 8
  %121 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call180 = call %union.tree_node* @build_function_type(%union.tree_node* %120, %union.tree_node* %121)
  %arrayidx181 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 23
  store %union.tree_node* %call180, %union.tree_node** %arrayidx181, align 8
  %arrayidx182 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %122 = load %union.tree_node*, %union.tree_node** %arrayidx182, align 8
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call183 = call %union.tree_node* @build_function_type(%union.tree_node* %122, %union.tree_node* %123)
  %arrayidx184 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 24
  store %union.tree_node* %call183, %union.tree_node** %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 2
  %124 = load %union.tree_node*, %union.tree_node** %arrayidx185, align 8
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call186 = call %union.tree_node* @build_function_type(%union.tree_node* %124, %union.tree_node* %125)
  %arrayidx187 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 25
  store %union.tree_node* %call186, %union.tree_node** %arrayidx187, align 8
  %arrayidx188 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  %126 = load %union.tree_node*, %union.tree_node** %arrayidx188, align 8
  %arrayidx189 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  %127 = load %union.tree_node*, %union.tree_node** %arrayidx189, align 8
  %128 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call190 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %127, %union.tree_node* %128)
  %call191 = call %union.tree_node* @build_function_type(%union.tree_node* %126, %union.tree_node* %call190)
  %arrayidx192 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 26
  store %union.tree_node* %call191, %union.tree_node** %arrayidx192, align 8
  %arrayidx193 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 4
  %129 = load %union.tree_node*, %union.tree_node** %arrayidx193, align 8
  %arrayidx194 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 4
  %130 = load %union.tree_node*, %union.tree_node** %arrayidx194, align 8
  %131 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call195 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %130, %union.tree_node* %131)
  %call196 = call %union.tree_node* @build_function_type(%union.tree_node* %129, %union.tree_node* %call195)
  %arrayidx197 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 27
  store %union.tree_node* %call196, %union.tree_node** %arrayidx197, align 8
  %arrayidx198 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 6
  %132 = load %union.tree_node*, %union.tree_node** %arrayidx198, align 8
  %arrayidx199 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 6
  %133 = load %union.tree_node*, %union.tree_node** %arrayidx199, align 8
  %134 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call200 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %133, %union.tree_node* %134)
  %call201 = call %union.tree_node* @build_function_type(%union.tree_node* %132, %union.tree_node* %call200)
  %arrayidx202 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 28
  store %union.tree_node* %call201, %union.tree_node** %arrayidx202, align 8
  %arrayidx203 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 5
  %135 = load %union.tree_node*, %union.tree_node** %arrayidx203, align 8
  %arrayidx204 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 5
  %136 = load %union.tree_node*, %union.tree_node** %arrayidx204, align 8
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call205 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %136, %union.tree_node* %137)
  %call206 = call %union.tree_node* @build_function_type(%union.tree_node* %135, %union.tree_node* %call205)
  %arrayidx207 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  store %union.tree_node* %call206, %union.tree_node** %arrayidx207, align 8
  %arrayidx208 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 7
  %138 = load %union.tree_node*, %union.tree_node** %arrayidx208, align 8
  %arrayidx209 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 7
  %139 = load %union.tree_node*, %union.tree_node** %arrayidx209, align 8
  %140 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call210 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %139, %union.tree_node* %140)
  %call211 = call %union.tree_node* @build_function_type(%union.tree_node* %138, %union.tree_node* %call210)
  %arrayidx212 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  store %union.tree_node* %call211, %union.tree_node** %arrayidx212, align 8
  %arrayidx213 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 8
  %141 = load %union.tree_node*, %union.tree_node** %arrayidx213, align 8
  %arrayidx214 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 8
  %142 = load %union.tree_node*, %union.tree_node** %arrayidx214, align 8
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call215 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %142, %union.tree_node* %143)
  %call216 = call %union.tree_node* @build_function_type(%union.tree_node* %141, %union.tree_node* %call215)
  %arrayidx217 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  store %union.tree_node* %call216, %union.tree_node** %arrayidx217, align 8
  %arrayidx218 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 9
  %144 = load %union.tree_node*, %union.tree_node** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 9
  %145 = load %union.tree_node*, %union.tree_node** %arrayidx219, align 8
  %146 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call220 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %145, %union.tree_node* %146)
  %call221 = call %union.tree_node* @build_function_type(%union.tree_node* %144, %union.tree_node* %call220)
  %arrayidx222 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 32
  store %union.tree_node* %call221, %union.tree_node** %arrayidx222, align 8
  %arrayidx223 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 10
  %147 = load %union.tree_node*, %union.tree_node** %arrayidx223, align 8
  %arrayidx224 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 10
  %148 = load %union.tree_node*, %union.tree_node** %arrayidx224, align 8
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call225 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %148, %union.tree_node* %149)
  %call226 = call %union.tree_node* @build_function_type(%union.tree_node* %147, %union.tree_node* %call225)
  %arrayidx227 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 33
  store %union.tree_node* %call226, %union.tree_node** %arrayidx227, align 8
  %arrayidx228 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 11
  %150 = load %union.tree_node*, %union.tree_node** %arrayidx228, align 8
  %arrayidx229 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 11
  %151 = load %union.tree_node*, %union.tree_node** %arrayidx229, align 8
  %152 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call230 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %151, %union.tree_node* %152)
  %call231 = call %union.tree_node* @build_function_type(%union.tree_node* %150, %union.tree_node* %call230)
  %arrayidx232 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 34
  store %union.tree_node* %call231, %union.tree_node** %arrayidx232, align 8
  %arrayidx233 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 5
  %153 = load %union.tree_node*, %union.tree_node** %arrayidx233, align 8
  %arrayidx234 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 9
  %154 = load %union.tree_node*, %union.tree_node** %arrayidx234, align 8
  %155 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call235 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %154, %union.tree_node* %155)
  %call236 = call %union.tree_node* @build_function_type(%union.tree_node* %153, %union.tree_node* %call235)
  %arrayidx237 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 35
  store %union.tree_node* %call236, %union.tree_node** %arrayidx237, align 8
  %arrayidx238 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 7
  %156 = load %union.tree_node*, %union.tree_node** %arrayidx238, align 8
  %arrayidx239 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 10
  %157 = load %union.tree_node*, %union.tree_node** %arrayidx239, align 8
  %158 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call240 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %157, %union.tree_node* %158)
  %call241 = call %union.tree_node* @build_function_type(%union.tree_node* %156, %union.tree_node* %call240)
  %arrayidx242 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 36
  store %union.tree_node* %call241, %union.tree_node** %arrayidx242, align 8
  %arrayidx243 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 8
  %159 = load %union.tree_node*, %union.tree_node** %arrayidx243, align 8
  %arrayidx244 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 11
  %160 = load %union.tree_node*, %union.tree_node** %arrayidx244, align 8
  %161 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call245 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %160, %union.tree_node* %161)
  %call246 = call %union.tree_node* @build_function_type(%union.tree_node* %159, %union.tree_node* %call245)
  %arrayidx247 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 37
  store %union.tree_node* %call246, %union.tree_node** %arrayidx247, align 8
  %arrayidx248 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %162 = load %union.tree_node*, %union.tree_node** %arrayidx248, align 8
  %arrayidx249 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 2
  %163 = load %union.tree_node*, %union.tree_node** %arrayidx249, align 8
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call250 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %163, %union.tree_node* %164)
  %call251 = call %union.tree_node* @build_function_type(%union.tree_node* %162, %union.tree_node* %call250)
  %arrayidx252 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 38
  store %union.tree_node* %call251, %union.tree_node** %arrayidx252, align 8
  %arrayidx253 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %165 = load %union.tree_node*, %union.tree_node** %arrayidx253, align 8
  %arrayidx254 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %166 = load %union.tree_node*, %union.tree_node** %arrayidx254, align 8
  %167 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call255 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %166, %union.tree_node* %167)
  %call256 = call %union.tree_node* @build_function_type(%union.tree_node* %165, %union.tree_node* %call255)
  %arrayidx257 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 39
  store %union.tree_node* %call256, %union.tree_node** %arrayidx257, align 8
  %arrayidx258 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %168 = load %union.tree_node*, %union.tree_node** %arrayidx258, align 8
  %arrayidx259 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %169 = load %union.tree_node*, %union.tree_node** %arrayidx259, align 8
  %170 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call260 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %169, %union.tree_node* %170)
  %call261 = call %union.tree_node* @build_function_type(%union.tree_node* %168, %union.tree_node* %call260)
  %arrayidx262 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  store %union.tree_node* %call261, %union.tree_node** %arrayidx262, align 8
  %arrayidx263 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %171 = load %union.tree_node*, %union.tree_node** %arrayidx263, align 8
  %arrayidx264 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %172 = load %union.tree_node*, %union.tree_node** %arrayidx264, align 8
  %173 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call265 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %172, %union.tree_node* %173)
  %call266 = call %union.tree_node* @build_function_type(%union.tree_node* %171, %union.tree_node* %call265)
  %arrayidx267 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 41
  store %union.tree_node* %call266, %union.tree_node** %arrayidx267, align 8
  %arrayidx268 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %174 = load %union.tree_node*, %union.tree_node** %arrayidx268, align 8
  %arrayidx269 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %175 = load %union.tree_node*, %union.tree_node** %arrayidx269, align 8
  %176 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call270 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %175, %union.tree_node* %176)
  %call271 = call %union.tree_node* @build_function_type(%union.tree_node* %174, %union.tree_node* %call270)
  %arrayidx272 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 42
  store %union.tree_node* %call271, %union.tree_node** %arrayidx272, align 8
  %arrayidx273 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 20
  %177 = load %union.tree_node*, %union.tree_node** %arrayidx273, align 8
  %arrayidx274 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %178 = load %union.tree_node*, %union.tree_node** %arrayidx274, align 8
  %179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call275 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %178, %union.tree_node* %179)
  %call276 = call %union.tree_node* @build_function_type(%union.tree_node* %177, %union.tree_node* %call275)
  %arrayidx277 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 43
  store %union.tree_node* %call276, %union.tree_node** %arrayidx277, align 8
  %arrayidx278 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %180 = load %union.tree_node*, %union.tree_node** %arrayidx278, align 8
  %arrayidx279 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %181 = load %union.tree_node*, %union.tree_node** %arrayidx279, align 8
  %182 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call280 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %181, %union.tree_node* %182)
  %call281 = call %union.tree_node* @build_function_type(%union.tree_node* %180, %union.tree_node* %call280)
  %arrayidx282 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 44
  store %union.tree_node* %call281, %union.tree_node** %arrayidx282, align 8
  %arrayidx283 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %183 = load %union.tree_node*, %union.tree_node** %arrayidx283, align 8
  %arrayidx284 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %184 = load %union.tree_node*, %union.tree_node** %arrayidx284, align 8
  %185 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call285 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %184, %union.tree_node* %185)
  %call286 = call %union.tree_node* @build_function_type(%union.tree_node* %183, %union.tree_node* %call285)
  %arrayidx287 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 45
  store %union.tree_node* %call286, %union.tree_node** %arrayidx287, align 8
  %arrayidx288 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %186 = load %union.tree_node*, %union.tree_node** %arrayidx288, align 8
  %arrayidx289 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 21
  %187 = load %union.tree_node*, %union.tree_node** %arrayidx289, align 8
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call290 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %187, %union.tree_node* %188)
  %call291 = call %union.tree_node* @build_function_type(%union.tree_node* %186, %union.tree_node* %call290)
  %arrayidx292 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 46
  store %union.tree_node* %call291, %union.tree_node** %arrayidx292, align 8
  %arrayidx293 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %189 = load %union.tree_node*, %union.tree_node** %arrayidx293, align 8
  %arrayidx294 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %190 = load %union.tree_node*, %union.tree_node** %arrayidx294, align 8
  %191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call295 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %190, %union.tree_node* %191)
  %call296 = call %union.tree_node* @build_function_type(%union.tree_node* %189, %union.tree_node* %call295)
  %arrayidx297 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 47
  store %union.tree_node* %call296, %union.tree_node** %arrayidx297, align 8
  %arrayidx298 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %192 = load %union.tree_node*, %union.tree_node** %arrayidx298, align 8
  %arrayidx299 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %193 = load %union.tree_node*, %union.tree_node** %arrayidx299, align 8
  %arrayidx300 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %194 = load %union.tree_node*, %union.tree_node** %arrayidx300, align 8
  %195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call301 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %194, %union.tree_node* %195)
  %call302 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %193, %union.tree_node* %call301)
  %call303 = call %union.tree_node* @build_function_type(%union.tree_node* %192, %union.tree_node* %call302)
  %arrayidx304 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 48
  store %union.tree_node* %call303, %union.tree_node** %arrayidx304, align 8
  %arrayidx305 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %196 = load %union.tree_node*, %union.tree_node** %arrayidx305, align 8
  %arrayidx306 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %197 = load %union.tree_node*, %union.tree_node** %arrayidx306, align 8
  %arrayidx307 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %198 = load %union.tree_node*, %union.tree_node** %arrayidx307, align 8
  %199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call308 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %198, %union.tree_node* %199)
  %call309 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %197, %union.tree_node* %call308)
  %call310 = call %union.tree_node* @build_function_type(%union.tree_node* %196, %union.tree_node* %call309)
  %arrayidx311 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 49
  store %union.tree_node* %call310, %union.tree_node** %arrayidx311, align 8
  %arrayidx312 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %200 = load %union.tree_node*, %union.tree_node** %arrayidx312, align 8
  %arrayidx313 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %201 = load %union.tree_node*, %union.tree_node** %arrayidx313, align 8
  %arrayidx314 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %202 = load %union.tree_node*, %union.tree_node** %arrayidx314, align 8
  %203 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call315 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %202, %union.tree_node* %203)
  %call316 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %201, %union.tree_node* %call315)
  %call317 = call %union.tree_node* @build_function_type(%union.tree_node* %200, %union.tree_node* %call316)
  %arrayidx318 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 50
  store %union.tree_node* %call317, %union.tree_node** %arrayidx318, align 8
  %arrayidx319 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %204 = load %union.tree_node*, %union.tree_node** %arrayidx319, align 8
  %arrayidx320 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %205 = load %union.tree_node*, %union.tree_node** %arrayidx320, align 8
  %arrayidx321 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %206 = load %union.tree_node*, %union.tree_node** %arrayidx321, align 8
  %207 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call322 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %206, %union.tree_node* %207)
  %call323 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %205, %union.tree_node* %call322)
  %call324 = call %union.tree_node* @build_function_type(%union.tree_node* %204, %union.tree_node* %call323)
  %arrayidx325 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 51
  store %union.tree_node* %call324, %union.tree_node** %arrayidx325, align 8
  %arrayidx326 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %208 = load %union.tree_node*, %union.tree_node** %arrayidx326, align 8
  %arrayidx327 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %209 = load %union.tree_node*, %union.tree_node** %arrayidx327, align 8
  %arrayidx328 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %210 = load %union.tree_node*, %union.tree_node** %arrayidx328, align 8
  %211 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call329 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %210, %union.tree_node* %211)
  %call330 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %209, %union.tree_node* %call329)
  %call331 = call %union.tree_node* @build_function_type(%union.tree_node* %208, %union.tree_node* %call330)
  %arrayidx332 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 52
  store %union.tree_node* %call331, %union.tree_node** %arrayidx332, align 8
  %arrayidx333 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %212 = load %union.tree_node*, %union.tree_node** %arrayidx333, align 8
  %arrayidx334 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %213 = load %union.tree_node*, %union.tree_node** %arrayidx334, align 8
  %arrayidx335 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %214 = load %union.tree_node*, %union.tree_node** %arrayidx335, align 8
  %215 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call336 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %214, %union.tree_node* %215)
  %call337 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %213, %union.tree_node* %call336)
  %call338 = call %union.tree_node* @build_function_type(%union.tree_node* %212, %union.tree_node* %call337)
  %arrayidx339 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  store %union.tree_node* %call338, %union.tree_node** %arrayidx339, align 8
  %arrayidx340 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %216 = load %union.tree_node*, %union.tree_node** %arrayidx340, align 8
  %arrayidx341 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %217 = load %union.tree_node*, %union.tree_node** %arrayidx341, align 8
  %arrayidx342 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %218 = load %union.tree_node*, %union.tree_node** %arrayidx342, align 8
  %219 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call343 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %218, %union.tree_node* %219)
  %call344 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %217, %union.tree_node* %call343)
  %call345 = call %union.tree_node* @build_function_type(%union.tree_node* %216, %union.tree_node* %call344)
  %arrayidx346 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 54
  store %union.tree_node* %call345, %union.tree_node** %arrayidx346, align 8
  %arrayidx347 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %220 = load %union.tree_node*, %union.tree_node** %arrayidx347, align 8
  %arrayidx348 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %221 = load %union.tree_node*, %union.tree_node** %arrayidx348, align 8
  %arrayidx349 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %222 = load %union.tree_node*, %union.tree_node** %arrayidx349, align 8
  %223 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call350 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %222, %union.tree_node* %223)
  %call351 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %221, %union.tree_node* %call350)
  %call352 = call %union.tree_node* @build_function_type(%union.tree_node* %220, %union.tree_node* %call351)
  %arrayidx353 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 55
  store %union.tree_node* %call352, %union.tree_node** %arrayidx353, align 8
  %arrayidx354 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %224 = load %union.tree_node*, %union.tree_node** %arrayidx354, align 8
  %arrayidx355 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 16
  %225 = load %union.tree_node*, %union.tree_node** %arrayidx355, align 8
  %arrayidx356 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %226 = load %union.tree_node*, %union.tree_node** %arrayidx356, align 8
  %227 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call357 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %226, %union.tree_node* %227)
  %call358 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %225, %union.tree_node* %call357)
  %call359 = call %union.tree_node* @build_function_type(%union.tree_node* %224, %union.tree_node* %call358)
  %arrayidx360 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 56
  store %union.tree_node* %call359, %union.tree_node** %arrayidx360, align 8
  %arrayidx361 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %228 = load %union.tree_node*, %union.tree_node** %arrayidx361, align 8
  %arrayidx362 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 21
  %229 = load %union.tree_node*, %union.tree_node** %arrayidx362, align 8
  %arrayidx363 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 22
  %230 = load %union.tree_node*, %union.tree_node** %arrayidx363, align 8
  %231 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call364 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %230, %union.tree_node* %231)
  %call365 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %229, %union.tree_node* %call364)
  %call366 = call %union.tree_node* @build_function_type(%union.tree_node* %228, %union.tree_node* %call365)
  %arrayidx367 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 57
  store %union.tree_node* %call366, %union.tree_node** %arrayidx367, align 8
  %arrayidx368 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  %232 = load %union.tree_node*, %union.tree_node** %arrayidx368, align 8
  %arrayidx369 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  %233 = load %union.tree_node*, %union.tree_node** %arrayidx369, align 8
  %arrayidx370 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 3
  %234 = load %union.tree_node*, %union.tree_node** %arrayidx370, align 8
  %235 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call371 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %234, %union.tree_node* %235)
  %call372 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %233, %union.tree_node* %call371)
  %call373 = call %union.tree_node* @build_function_type(%union.tree_node* %232, %union.tree_node* %call372)
  %arrayidx374 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 58
  store %union.tree_node* %call373, %union.tree_node** %arrayidx374, align 8
  %arrayidx375 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %236 = load %union.tree_node*, %union.tree_node** %arrayidx375, align 8
  %arrayidx376 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %237 = load %union.tree_node*, %union.tree_node** %arrayidx376, align 8
  %arrayidx377 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %238 = load %union.tree_node*, %union.tree_node** %arrayidx377, align 8
  %239 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call378 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %238, %union.tree_node* %239)
  %call379 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %237, %union.tree_node* %call378)
  %call380 = call %union.tree_node* @build_function_type(%union.tree_node* %236, %union.tree_node* %call379)
  %arrayidx381 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 59
  store %union.tree_node* %call380, %union.tree_node** %arrayidx381, align 8
  %arrayidx382 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %240 = load %union.tree_node*, %union.tree_node** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 14
  %241 = load %union.tree_node*, %union.tree_node** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 20
  %242 = load %union.tree_node*, %union.tree_node** %arrayidx384, align 8
  %243 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call385 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %242, %union.tree_node* %243)
  %call386 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %241, %union.tree_node* %call385)
  %call387 = call %union.tree_node* @build_function_type(%union.tree_node* %240, %union.tree_node* %call386)
  %arrayidx388 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 60
  store %union.tree_node* %call387, %union.tree_node** %arrayidx388, align 8
  %arrayidx389 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %244 = load %union.tree_node*, %union.tree_node** %arrayidx389, align 8
  %arrayidx390 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 18
  %245 = load %union.tree_node*, %union.tree_node** %arrayidx390, align 8
  %arrayidx391 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %246 = load %union.tree_node*, %union.tree_node** %arrayidx391, align 8
  %arrayidx392 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %247 = load %union.tree_node*, %union.tree_node** %arrayidx392, align 8
  %248 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call393 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %247, %union.tree_node* %248)
  %call394 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %246, %union.tree_node* %call393)
  %call395 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %245, %union.tree_node* %call394)
  %call396 = call %union.tree_node* @build_function_type(%union.tree_node* %244, %union.tree_node* %call395)
  %arrayidx397 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 61
  store %union.tree_node* %call396, %union.tree_node** %arrayidx397, align 8
  %arrayidx398 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %249 = load %union.tree_node*, %union.tree_node** %arrayidx398, align 8
  %arrayidx399 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %250 = load %union.tree_node*, %union.tree_node** %arrayidx399, align 8
  %arrayidx400 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %251 = load %union.tree_node*, %union.tree_node** %arrayidx400, align 8
  %arrayidx401 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %252 = load %union.tree_node*, %union.tree_node** %arrayidx401, align 8
  %253 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call402 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %252, %union.tree_node* %253)
  %call403 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %251, %union.tree_node* %call402)
  %call404 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %250, %union.tree_node* %call403)
  %call405 = call %union.tree_node* @build_function_type(%union.tree_node* %249, %union.tree_node* %call404)
  %arrayidx406 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 62
  store %union.tree_node* %call405, %union.tree_node** %arrayidx406, align 8
  %arrayidx407 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 14
  %254 = load %union.tree_node*, %union.tree_node** %arrayidx407, align 8
  %arrayidx408 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %255 = load %union.tree_node*, %union.tree_node** %arrayidx408, align 8
  %arrayidx409 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  %256 = load %union.tree_node*, %union.tree_node** %arrayidx409, align 8
  %arrayidx410 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %257 = load %union.tree_node*, %union.tree_node** %arrayidx410, align 8
  %258 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call411 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %257, %union.tree_node* %258)
  %call412 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %256, %union.tree_node* %call411)
  %call413 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %255, %union.tree_node* %call412)
  %call414 = call %union.tree_node* @build_function_type(%union.tree_node* %254, %union.tree_node* %call413)
  %arrayidx415 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 63
  store %union.tree_node* %call414, %union.tree_node** %arrayidx415, align 8
  %arrayidx416 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %259 = load %union.tree_node*, %union.tree_node** %arrayidx416, align 8
  %arrayidx417 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  %260 = load %union.tree_node*, %union.tree_node** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  %261 = load %union.tree_node*, %union.tree_node** %arrayidx418, align 8
  %arrayidx419 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %262 = load %union.tree_node*, %union.tree_node** %arrayidx419, align 8
  %263 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call420 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %262, %union.tree_node* %263)
  %call421 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %261, %union.tree_node* %call420)
  %call422 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %260, %union.tree_node* %call421)
  %call423 = call %union.tree_node* @build_function_type(%union.tree_node* %259, %union.tree_node* %call422)
  %arrayidx424 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 64
  store %union.tree_node* %call423, %union.tree_node** %arrayidx424, align 8
  %arrayidx425 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 14
  %264 = load %union.tree_node*, %union.tree_node** %arrayidx425, align 8
  %arrayidx426 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %265 = load %union.tree_node*, %union.tree_node** %arrayidx426, align 8
  %arrayidx427 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %266 = load %union.tree_node*, %union.tree_node** %arrayidx427, align 8
  %arrayidx428 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %267 = load %union.tree_node*, %union.tree_node** %arrayidx428, align 8
  %268 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call429 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %267, %union.tree_node* %268)
  %call430 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %266, %union.tree_node* %call429)
  %call431 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %265, %union.tree_node* %call430)
  %call432 = call %union.tree_node* @build_function_type(%union.tree_node* %264, %union.tree_node* %call431)
  %arrayidx433 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 65
  store %union.tree_node* %call432, %union.tree_node** %arrayidx433, align 8
  %arrayidx434 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %269 = load %union.tree_node*, %union.tree_node** %arrayidx434, align 8
  %arrayidx435 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 15
  %270 = load %union.tree_node*, %union.tree_node** %arrayidx435, align 8
  %arrayidx436 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 15
  %271 = load %union.tree_node*, %union.tree_node** %arrayidx436, align 8
  %arrayidx437 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 20
  %272 = load %union.tree_node*, %union.tree_node** %arrayidx437, align 8
  %273 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call438 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %272, %union.tree_node* %273)
  %call439 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %271, %union.tree_node* %call438)
  %call440 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %270, %union.tree_node* %call439)
  %call441 = call %union.tree_node* @build_function_type(%union.tree_node* %269, %union.tree_node* %call440)
  %arrayidx442 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 66
  store %union.tree_node* %call441, %union.tree_node** %arrayidx442, align 8
  %arrayidx443 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %274 = load %union.tree_node*, %union.tree_node** %arrayidx443, align 8
  %arrayidx444 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %275 = load %union.tree_node*, %union.tree_node** %arrayidx444, align 8
  %arrayidx445 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %276 = load %union.tree_node*, %union.tree_node** %arrayidx445, align 8
  %arrayidx446 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %277 = load %union.tree_node*, %union.tree_node** %arrayidx446, align 8
  %278 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call447 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %277, %union.tree_node* %278)
  %call448 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %276, %union.tree_node* %call447)
  %call449 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %275, %union.tree_node* %call448)
  %call450 = call %union.tree_node* @build_function_type(%union.tree_node* %274, %union.tree_node* %call449)
  %arrayidx451 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 67
  store %union.tree_node* %call450, %union.tree_node** %arrayidx451, align 8
  %arrayidx452 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %279 = load %union.tree_node*, %union.tree_node** %arrayidx452, align 8
  %arrayidx453 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  %280 = load %union.tree_node*, %union.tree_node** %arrayidx453, align 8
  %arrayidx454 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %281 = load %union.tree_node*, %union.tree_node** %arrayidx454, align 8
  %arrayidx455 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %282 = load %union.tree_node*, %union.tree_node** %arrayidx455, align 8
  %arrayidx456 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %283 = load %union.tree_node*, %union.tree_node** %arrayidx456, align 8
  %284 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call457 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %283, %union.tree_node* %284)
  %call458 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %282, %union.tree_node* %call457)
  %call459 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %281, %union.tree_node* %call458)
  %call460 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %280, %union.tree_node* %call459)
  %call461 = call %union.tree_node* @build_function_type(%union.tree_node* %279, %union.tree_node* %call460)
  %arrayidx462 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 68
  store %union.tree_node* %call461, %union.tree_node** %arrayidx462, align 8
  %arrayidx463 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %285 = load %union.tree_node*, %union.tree_node** %arrayidx463, align 8
  %call464 = call %union.tree_node* @build_function_type(%union.tree_node* %285, %union.tree_node* null)
  %arrayidx465 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 69
  store %union.tree_node* %call464, %union.tree_node** %arrayidx465, align 8
  %arrayidx466 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %286 = load %union.tree_node*, %union.tree_node** %arrayidx466, align 8
  %call467 = call %union.tree_node* @build_function_type(%union.tree_node* %286, %union.tree_node* null)
  %arrayidx468 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  store %union.tree_node* %call467, %union.tree_node** %arrayidx468, align 8
  %arrayidx469 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %287 = load %union.tree_node*, %union.tree_node** %arrayidx469, align 8
  %call470 = call %union.tree_node* @build_function_type(%union.tree_node* %287, %union.tree_node* null)
  %arrayidx471 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 71
  store %union.tree_node* %call470, %union.tree_node** %arrayidx471, align 8
  %arrayidx472 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %288 = load %union.tree_node*, %union.tree_node** %arrayidx472, align 8
  %arrayidx473 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 21
  %289 = load %union.tree_node*, %union.tree_node** %arrayidx473, align 8
  %call474 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %289, %union.tree_node* null)
  %call475 = call %union.tree_node* @build_function_type(%union.tree_node* %288, %union.tree_node* %call474)
  %arrayidx476 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 72
  store %union.tree_node* %call475, %union.tree_node** %arrayidx476, align 8
  %arrayidx477 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 0
  %290 = load %union.tree_node*, %union.tree_node** %arrayidx477, align 8
  %arrayidx478 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 13
  %291 = load %union.tree_node*, %union.tree_node** %arrayidx478, align 8
  %call479 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %291, %union.tree_node* null)
  %call480 = call %union.tree_node* @build_function_type(%union.tree_node* %290, %union.tree_node* %call479)
  %arrayidx481 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 73
  store %union.tree_node* %call480, %union.tree_node** %arrayidx481, align 8
  %arrayidx482 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %292 = load %union.tree_node*, %union.tree_node** %arrayidx482, align 8
  %arrayidx483 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %293 = load %union.tree_node*, %union.tree_node** %arrayidx483, align 8
  %call484 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %293, %union.tree_node* null)
  %call485 = call %union.tree_node* @build_function_type(%union.tree_node* %292, %union.tree_node* %call484)
  %arrayidx486 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 74
  store %union.tree_node* %call485, %union.tree_node** %arrayidx486, align 8
  %arrayidx487 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 1
  %294 = load %union.tree_node*, %union.tree_node** %arrayidx487, align 8
  %arrayidx488 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %295 = load %union.tree_node*, %union.tree_node** %arrayidx488, align 8
  %arrayidx489 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 19
  %296 = load %union.tree_node*, %union.tree_node** %arrayidx489, align 8
  %call490 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %296, %union.tree_node* null)
  %call491 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %295, %union.tree_node* %call490)
  %call492 = call %union.tree_node* @build_function_type(%union.tree_node* %294, %union.tree_node* %call491)
  %arrayidx493 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 75
  store %union.tree_node* %call492, %union.tree_node** %arrayidx493, align 8
  %arrayidx494 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 69
  %297 = load %union.tree_node*, %union.tree_node** %arrayidx494, align 8
  %call495 = call %union.tree_node* @build_pointer_type(%union.tree_node* %297)
  %arrayidx496 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 76
  store %union.tree_node* %call495, %union.tree_node** %arrayidx496, align 8
  %arrayidx497 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %298 = load %union.tree_node*, %union.tree_node** %arrayidx497, align 8
  %arrayidx498 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 76
  %299 = load %union.tree_node*, %union.tree_node** %arrayidx498, align 8
  %arrayidx499 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 12
  %300 = load %union.tree_node*, %union.tree_node** %arrayidx499, align 8
  %arrayidx500 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 17
  %301 = load %union.tree_node*, %union.tree_node** %arrayidx500, align 8
  %302 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  %call501 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %301, %union.tree_node* %302)
  %call502 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %300, %union.tree_node* %call501)
  %call503 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %299, %union.tree_node* %call502)
  %call504 = call %union.tree_node* @build_function_type(%union.tree_node* %298, %union.tree_node* %call503)
  %arrayidx505 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 77
  store %union.tree_node* %call504, %union.tree_node** %arrayidx505, align 8
  br i1 true, label %if.then.506, label %if.end.514

if.then.506:                                      ; preds = %cond.end.154
  %call507 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp508 = icmp ne i32 %call507, 0
  br i1 %cmp508, label %if.then.509, label %if.end.510

if.then.509:                                      ; preds = %if.then.506
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 147, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.510:                                       ; preds = %if.then.506
  %arrayidx511 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 39
  %303 = load %union.tree_node*, %union.tree_node** %arrayidx511, align 8
  %arrayidx512 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 39
  %304 = load %union.tree_node*, %union.tree_node** %arrayidx512, align 8
  %call513 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i32 0, i64 10), %union.tree_node* %303, %union.tree_node* %304, i32 0, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call513, %union.tree_node** %decl, align 8
  %305 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %305, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 0), align 8
  br label %if.end.514

if.end.514:                                       ; preds = %if.end.510, %cond.end.154
  br i1 true, label %if.then.515, label %if.end.524

if.then.515:                                      ; preds = %if.end.514
  %call517 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp518 = icmp ne i32 %call517, 0
  br i1 %cmp518, label %if.then.519, label %if.end.520

if.then.519:                                      ; preds = %if.then.515
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 152, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.520:                                       ; preds = %if.then.515
  %arrayidx521 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %306 = load %union.tree_node*, %union.tree_node** %arrayidx521, align 8
  %arrayidx522 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %307 = load %union.tree_node*, %union.tree_node** %arrayidx522, align 8
  %call523 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i32 0, i64 10), %union.tree_node* %306, %union.tree_node* %307, i32 1, i32 3, i32 0, i32 1, i32 0)
  store %union.tree_node* %call523, %union.tree_node** %decl516, align 8
  %308 = load %union.tree_node*, %union.tree_node** %decl516, align 8
  store %union.tree_node* %308, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 1), align 8
  br label %if.end.524

if.end.524:                                       ; preds = %if.end.520, %if.end.514
  br i1 true, label %if.then.525, label %if.end.534

if.then.525:                                      ; preds = %if.end.524
  %call527 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp528 = icmp ne i32 %call527, 0
  br i1 %cmp528, label %if.then.529, label %if.end.530

if.then.529:                                      ; preds = %if.then.525
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 155, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.530:                                       ; preds = %if.then.525
  %arrayidx531 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 26
  %309 = load %union.tree_node*, %union.tree_node** %arrayidx531, align 8
  %arrayidx532 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 26
  %310 = load %union.tree_node*, %union.tree_node** %arrayidx532, align 8
  %call533 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i64 10), %union.tree_node* %309, %union.tree_node* %310, i32 2, i32 3, i32 0, i32 1, i32 0)
  store %union.tree_node* %call533, %union.tree_node** %decl526, align 8
  %311 = load %union.tree_node*, %union.tree_node** %decl526, align 8
  store %union.tree_node* %311, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 2), align 8
  br label %if.end.534

if.end.534:                                       ; preds = %if.end.530, %if.end.524
  br i1 true, label %if.then.535, label %if.end.544

if.then.535:                                      ; preds = %if.end.534
  %call537 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp538 = icmp ne i32 %call537, 0
  br i1 %cmp538, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %if.then.535
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 159, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.540:                                       ; preds = %if.then.535
  %arrayidx541 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %312 = load %union.tree_node*, %union.tree_node** %arrayidx541, align 8
  %arrayidx542 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %313 = load %union.tree_node*, %union.tree_node** %arrayidx542, align 8
  %call543 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i64 10), %union.tree_node* %312, %union.tree_node* %313, i32 3, i32 3, i32 0, i32 1, i32 0)
  store %union.tree_node* %call543, %union.tree_node** %decl536, align 8
  %314 = load %union.tree_node*, %union.tree_node** %decl536, align 8
  store %union.tree_node* %314, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 3), align 8
  br label %if.end.544

if.end.544:                                       ; preds = %if.end.540, %if.end.534
  br i1 true, label %if.then.545, label %if.end.554

if.then.545:                                      ; preds = %if.end.544
  %call547 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp548 = icmp ne i32 %call547, 0
  br i1 %cmp548, label %if.then.549, label %if.end.550

if.then.549:                                      ; preds = %if.then.545
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 162, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.550:                                       ; preds = %if.then.545
  %arrayidx551 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %315 = load %union.tree_node*, %union.tree_node** %arrayidx551, align 8
  %arrayidx552 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %316 = load %union.tree_node*, %union.tree_node** %arrayidx552, align 8
  %call553 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i32 0, i64 10), %union.tree_node* %315, %union.tree_node* %316, i32 4, i32 3, i32 0, i32 1, i32 0)
  store %union.tree_node* %call553, %union.tree_node** %decl546, align 8
  %317 = load %union.tree_node*, %union.tree_node** %decl546, align 8
  store %union.tree_node* %317, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 4), align 8
  br label %if.end.554

if.end.554:                                       ; preds = %if.end.550, %if.end.544
  br i1 true, label %if.then.555, label %if.end.564

if.then.555:                                      ; preds = %if.end.554
  %call557 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp558 = icmp ne i32 %call557, 0
  br i1 %cmp558, label %if.then.559, label %if.end.560

if.then.559:                                      ; preds = %if.then.555
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 165, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.560:                                       ; preds = %if.then.555
  %arrayidx561 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %318 = load %union.tree_node*, %union.tree_node** %arrayidx561, align 8
  %arrayidx562 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %319 = load %union.tree_node*, %union.tree_node** %arrayidx562, align 8
  %call563 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i64 10), %union.tree_node* %318, %union.tree_node* %319, i32 5, i32 3, i32 0, i32 1, i32 0)
  store %union.tree_node* %call563, %union.tree_node** %decl556, align 8
  %320 = load %union.tree_node*, %union.tree_node** %decl556, align 8
  store %union.tree_node* %320, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 5), align 8
  br label %if.end.564

if.end.564:                                       ; preds = %if.end.560, %if.end.554
  br i1 true, label %if.then.565, label %if.end.575

if.then.565:                                      ; preds = %if.end.564
  %call567 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp568 = icmp ne i32 %call567, 0
  br i1 %cmp568, label %if.then.569, label %if.end.570

if.then.569:                                      ; preds = %if.then.565
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 169, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.570:                                       ; preds = %if.then.565
  %arrayidx571 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 27
  %321 = load %union.tree_node*, %union.tree_node** %arrayidx571, align 8
  %arrayidx572 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 27
  %322 = load %union.tree_node*, %union.tree_node** %arrayidx572, align 8
  %323 = load i32, i32* @flag_isoc99, align 4
  %tobool573 = icmp ne i32 %323, 0
  %lnot = xor i1 %tobool573, true
  %lnot.ext = zext i1 %lnot to i32
  %call574 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i64 10), %union.tree_node* %321, %union.tree_node* %322, i32 6, i32 3, i32 %lnot.ext, i32 1, i32 0)
  store %union.tree_node* %call574, %union.tree_node** %decl566, align 8
  %324 = load %union.tree_node*, %union.tree_node** %decl566, align 8
  store %union.tree_node* %324, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 6), align 8
  br label %if.end.575

if.end.575:                                       ; preds = %if.end.570, %if.end.564
  br i1 true, label %if.then.576, label %if.end.588

if.then.576:                                      ; preds = %if.end.575
  %call578 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp579 = icmp ne i32 %call578, 0
  br i1 %cmp579, label %if.then.580, label %if.end.581

if.then.580:                                      ; preds = %if.then.576
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 172, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.581:                                       ; preds = %if.then.576
  %arrayidx582 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 28
  %325 = load %union.tree_node*, %union.tree_node** %arrayidx582, align 8
  %arrayidx583 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 28
  %326 = load %union.tree_node*, %union.tree_node** %arrayidx583, align 8
  %327 = load i32, i32* @flag_isoc99, align 4
  %tobool584 = icmp ne i32 %327, 0
  %lnot585 = xor i1 %tobool584, true
  %lnot.ext586 = zext i1 %lnot585 to i32
  %call587 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i32 0, i64 10), %union.tree_node* %325, %union.tree_node* %326, i32 7, i32 3, i32 %lnot.ext586, i32 1, i32 0)
  store %union.tree_node* %call587, %union.tree_node** %decl577, align 8
  %328 = load %union.tree_node*, %union.tree_node** %decl577, align 8
  store %union.tree_node* %328, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 7), align 8
  br label %if.end.588

if.end.588:                                       ; preds = %if.end.581, %if.end.575
  br i1 true, label %if.then.589, label %if.end.601

if.then.589:                                      ; preds = %if.end.588
  %call591 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp592 = icmp ne i32 %call591, 0
  br i1 %cmp592, label %if.then.593, label %if.end.594

if.then.593:                                      ; preds = %if.then.589
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 175, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.594:                                       ; preds = %if.then.589
  %arrayidx595 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 33
  %329 = load %union.tree_node*, %union.tree_node** %arrayidx595, align 8
  %arrayidx596 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 33
  %330 = load %union.tree_node*, %union.tree_node** %arrayidx596, align 8
  %331 = load i32, i32* @flag_isoc99, align 4
  %tobool597 = icmp ne i32 %331, 0
  %lnot598 = xor i1 %tobool597, true
  %lnot.ext599 = zext i1 %lnot598 to i32
  %call600 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i64 10), %union.tree_node* %329, %union.tree_node* %330, i32 8, i32 3, i32 %lnot.ext599, i32 1, i32 0)
  store %union.tree_node* %call600, %union.tree_node** %decl590, align 8
  %332 = load %union.tree_node*, %union.tree_node** %decl590, align 8
  store %union.tree_node* %332, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 8), align 8
  br label %if.end.601

if.end.601:                                       ; preds = %if.end.594, %if.end.588
  br i1 true, label %if.then.602, label %if.end.614

if.then.602:                                      ; preds = %if.end.601
  %call604 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp605 = icmp ne i32 %call604, 0
  br i1 %cmp605, label %if.then.606, label %if.end.607

if.then.606:                                      ; preds = %if.then.602
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 178, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.607:                                       ; preds = %if.then.602
  %arrayidx608 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 32
  %333 = load %union.tree_node*, %union.tree_node** %arrayidx608, align 8
  %arrayidx609 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 32
  %334 = load %union.tree_node*, %union.tree_node** %arrayidx609, align 8
  %335 = load i32, i32* @flag_isoc99, align 4
  %tobool610 = icmp ne i32 %335, 0
  %lnot611 = xor i1 %tobool610, true
  %lnot.ext612 = zext i1 %lnot611 to i32
  %call613 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i64 10), %union.tree_node* %333, %union.tree_node* %334, i32 9, i32 3, i32 %lnot.ext612, i32 1, i32 0)
  store %union.tree_node* %call613, %union.tree_node** %decl603, align 8
  %336 = load %union.tree_node*, %union.tree_node** %decl603, align 8
  store %union.tree_node* %336, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 9), align 8
  br label %if.end.614

if.end.614:                                       ; preds = %if.end.607, %if.end.601
  br i1 true, label %if.then.615, label %if.end.627

if.then.615:                                      ; preds = %if.end.614
  %call617 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp618 = icmp ne i32 %call617, 0
  br i1 %cmp618, label %if.then.619, label %if.end.620

if.then.619:                                      ; preds = %if.then.615
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 181, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.620:                                       ; preds = %if.then.615
  %arrayidx621 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 34
  %337 = load %union.tree_node*, %union.tree_node** %arrayidx621, align 8
  %arrayidx622 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 34
  %338 = load %union.tree_node*, %union.tree_node** %arrayidx622, align 8
  %339 = load i32, i32* @flag_isoc99, align 4
  %tobool623 = icmp ne i32 %339, 0
  %lnot624 = xor i1 %tobool623, true
  %lnot.ext625 = zext i1 %lnot624 to i32
  %call626 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i64 10), %union.tree_node* %337, %union.tree_node* %338, i32 10, i32 3, i32 %lnot.ext625, i32 1, i32 0)
  store %union.tree_node* %call626, %union.tree_node** %decl616, align 8
  %340 = load %union.tree_node*, %union.tree_node** %decl616, align 8
  store %union.tree_node* %340, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 10), align 8
  br label %if.end.627

if.end.627:                                       ; preds = %if.end.620, %if.end.614
  br i1 true, label %if.then.628, label %if.end.640

if.then.628:                                      ; preds = %if.end.627
  %call630 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp631 = icmp ne i32 %call630, 0
  br i1 %cmp631, label %if.then.632, label %if.end.633

if.then.632:                                      ; preds = %if.then.628
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 184, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.633:                                       ; preds = %if.then.628
  %arrayidx634 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 36
  %341 = load %union.tree_node*, %union.tree_node** %arrayidx634, align 8
  %arrayidx635 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 36
  %342 = load %union.tree_node*, %union.tree_node** %arrayidx635, align 8
  %343 = load i32, i32* @flag_isoc99, align 4
  %tobool636 = icmp ne i32 %343, 0
  %lnot637 = xor i1 %tobool636, true
  %lnot.ext638 = zext i1 %lnot637 to i32
  %call639 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i64 10), %union.tree_node* %341, %union.tree_node* %342, i32 11, i32 3, i32 %lnot.ext638, i32 1, i32 0)
  store %union.tree_node* %call639, %union.tree_node** %decl629, align 8
  %344 = load %union.tree_node*, %union.tree_node** %decl629, align 8
  store %union.tree_node* %344, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 11), align 8
  br label %if.end.640

if.end.640:                                       ; preds = %if.end.633, %if.end.627
  br i1 true, label %if.then.641, label %if.end.653

if.then.641:                                      ; preds = %if.end.640
  %call643 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp644 = icmp ne i32 %call643, 0
  br i1 %cmp644, label %if.then.645, label %if.end.646

if.then.645:                                      ; preds = %if.then.641
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 187, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.646:                                       ; preds = %if.then.641
  %arrayidx647 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 35
  %345 = load %union.tree_node*, %union.tree_node** %arrayidx647, align 8
  %arrayidx648 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 35
  %346 = load %union.tree_node*, %union.tree_node** %arrayidx648, align 8
  %347 = load i32, i32* @flag_isoc99, align 4
  %tobool649 = icmp ne i32 %347, 0
  %lnot650 = xor i1 %tobool649, true
  %lnot.ext651 = zext i1 %lnot650 to i32
  %call652 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i32 0, i64 10), %union.tree_node* %345, %union.tree_node* %346, i32 12, i32 3, i32 %lnot.ext651, i32 1, i32 0)
  store %union.tree_node* %call652, %union.tree_node** %decl642, align 8
  %348 = load %union.tree_node*, %union.tree_node** %decl642, align 8
  store %union.tree_node* %348, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 12), align 8
  br label %if.end.653

if.end.653:                                       ; preds = %if.end.646, %if.end.640
  br i1 true, label %if.then.654, label %if.end.666

if.then.654:                                      ; preds = %if.end.653
  %call656 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp657 = icmp ne i32 %call656, 0
  br i1 %cmp657, label %if.then.658, label %if.end.659

if.then.658:                                      ; preds = %if.then.654
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 190, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.659:                                       ; preds = %if.then.654
  %arrayidx660 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 37
  %349 = load %union.tree_node*, %union.tree_node** %arrayidx660, align 8
  %arrayidx661 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 37
  %350 = load %union.tree_node*, %union.tree_node** %arrayidx661, align 8
  %351 = load i32, i32* @flag_isoc99, align 4
  %tobool662 = icmp ne i32 %351, 0
  %lnot663 = xor i1 %tobool662, true
  %lnot.ext664 = zext i1 %lnot663 to i32
  %call665 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i64 10), %union.tree_node* %349, %union.tree_node* %350, i32 13, i32 3, i32 %lnot.ext664, i32 1, i32 0)
  store %union.tree_node* %call665, %union.tree_node** %decl655, align 8
  %352 = load %union.tree_node*, %union.tree_node** %decl655, align 8
  store %union.tree_node* %352, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 13), align 8
  br label %if.end.666

if.end.666:                                       ; preds = %if.end.659, %if.end.653
  br i1 true, label %if.then.667, label %if.end.679

if.then.667:                                      ; preds = %if.end.666
  %call669 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp670 = icmp ne i32 %call669, 0
  br i1 %cmp670, label %if.then.671, label %if.end.672

if.then.671:                                      ; preds = %if.then.667
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 193, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.672:                                       ; preds = %if.then.667
  %arrayidx673 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 36
  %353 = load %union.tree_node*, %union.tree_node** %arrayidx673, align 8
  %arrayidx674 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 36
  %354 = load %union.tree_node*, %union.tree_node** %arrayidx674, align 8
  %355 = load i32, i32* @flag_isoc99, align 4
  %tobool675 = icmp ne i32 %355, 0
  %lnot676 = xor i1 %tobool675, true
  %lnot.ext677 = zext i1 %lnot676 to i32
  %call678 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i64 10), %union.tree_node* %353, %union.tree_node* %354, i32 14, i32 3, i32 %lnot.ext677, i32 1, i32 0)
  store %union.tree_node* %call678, %union.tree_node** %decl668, align 8
  %356 = load %union.tree_node*, %union.tree_node** %decl668, align 8
  store %union.tree_node* %356, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 14), align 8
  br label %if.end.679

if.end.679:                                       ; preds = %if.end.672, %if.end.666
  br i1 true, label %if.then.680, label %if.end.692

if.then.680:                                      ; preds = %if.end.679
  %call682 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp683 = icmp ne i32 %call682, 0
  br i1 %cmp683, label %if.then.684, label %if.end.685

if.then.684:                                      ; preds = %if.then.680
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 196, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.685:                                       ; preds = %if.then.680
  %arrayidx686 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 35
  %357 = load %union.tree_node*, %union.tree_node** %arrayidx686, align 8
  %arrayidx687 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 35
  %358 = load %union.tree_node*, %union.tree_node** %arrayidx687, align 8
  %359 = load i32, i32* @flag_isoc99, align 4
  %tobool688 = icmp ne i32 %359, 0
  %lnot689 = xor i1 %tobool688, true
  %lnot.ext690 = zext i1 %lnot689 to i32
  %call691 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i32 0, i64 10), %union.tree_node* %357, %union.tree_node* %358, i32 15, i32 3, i32 %lnot.ext690, i32 1, i32 0)
  store %union.tree_node* %call691, %union.tree_node** %decl681, align 8
  %360 = load %union.tree_node*, %union.tree_node** %decl681, align 8
  store %union.tree_node* %360, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 15), align 8
  br label %if.end.692

if.end.692:                                       ; preds = %if.end.685, %if.end.679
  br i1 true, label %if.then.693, label %if.end.705

if.then.693:                                      ; preds = %if.end.692
  %call695 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp696 = icmp ne i32 %call695, 0
  br i1 %cmp696, label %if.then.697, label %if.end.698

if.then.697:                                      ; preds = %if.then.693
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 199, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.698:                                       ; preds = %if.then.693
  %arrayidx699 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 37
  %361 = load %union.tree_node*, %union.tree_node** %arrayidx699, align 8
  %arrayidx700 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 37
  %362 = load %union.tree_node*, %union.tree_node** %arrayidx700, align 8
  %363 = load i32, i32* @flag_isoc99, align 4
  %tobool701 = icmp ne i32 %363, 0
  %lnot702 = xor i1 %tobool701, true
  %lnot.ext703 = zext i1 %lnot702 to i32
  %call704 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i32 0, i64 10), %union.tree_node* %361, %union.tree_node* %362, i32 16, i32 3, i32 %lnot.ext703, i32 1, i32 0)
  store %union.tree_node* %call704, %union.tree_node** %decl694, align 8
  %364 = load %union.tree_node*, %union.tree_node** %decl694, align 8
  store %union.tree_node* %364, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 16), align 8
  br label %if.end.705

if.end.705:                                       ; preds = %if.end.698, %if.end.692
  br i1 true, label %if.then.706, label %if.end.715

if.then.706:                                      ; preds = %if.end.705
  %call708 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp709 = icmp ne i32 %call708, 0
  br i1 %cmp709, label %if.then.710, label %if.end.711

if.then.710:                                      ; preds = %if.then.706
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 219, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.711:                                       ; preds = %if.then.706
  %arrayidx712 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 60
  %365 = load %union.tree_node*, %union.tree_node** %arrayidx712, align 8
  %arrayidx713 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 69
  %366 = load %union.tree_node*, %union.tree_node** %arrayidx713, align 8
  %call714 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i64 10), %union.tree_node* %365, %union.tree_node* %366, i32 17, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call714, %union.tree_node** %decl707, align 8
  %367 = load %union.tree_node*, %union.tree_node** %decl707, align 8
  store %union.tree_node* %367, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 17), align 8
  br label %if.end.715

if.end.715:                                       ; preds = %if.end.711, %if.end.705
  br i1 true, label %if.then.716, label %if.end.725

if.then.716:                                      ; preds = %if.end.715
  %call718 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp719 = icmp ne i32 %call718, 0
  br i1 %cmp719, label %if.then.720, label %if.end.721

if.then.720:                                      ; preds = %if.then.716
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 225, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.721:                                       ; preds = %if.then.716
  %arrayidx722 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 66
  %368 = load %union.tree_node*, %union.tree_node** %arrayidx722, align 8
  %arrayidx723 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %369 = load %union.tree_node*, %union.tree_node** %arrayidx723, align 8
  %call724 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96, i32 0, i64 10), %union.tree_node* %368, %union.tree_node* %369, i32 18, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call724, %union.tree_node** %decl717, align 8
  %370 = load %union.tree_node*, %union.tree_node** %decl717, align 8
  store %union.tree_node* %370, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 18), align 8
  br label %if.end.725

if.end.725:                                       ; preds = %if.end.721, %if.end.715
  br i1 true, label %if.then.726, label %if.end.735

if.then.726:                                      ; preds = %if.end.725
  %call728 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp729 = icmp ne i32 %call728, 0
  br i1 %cmp729, label %if.then.730, label %if.end.731

if.then.730:                                      ; preds = %if.then.726
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 229, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.731:                                       ; preds = %if.then.726
  %arrayidx732 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %371 = load %union.tree_node*, %union.tree_node** %arrayidx732, align 8
  %arrayidx733 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %372 = load %union.tree_node*, %union.tree_node** %arrayidx733, align 8
  %call734 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i64 10), %union.tree_node* %371, %union.tree_node* %372, i32 19, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call734, %union.tree_node** %decl727, align 8
  %373 = load %union.tree_node*, %union.tree_node** %decl727, align 8
  store %union.tree_node* %373, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 19), align 8
  br label %if.end.735

if.end.735:                                       ; preds = %if.end.731, %if.end.725
  br i1 true, label %if.then.736, label %if.end.745

if.then.736:                                      ; preds = %if.end.735
  %call738 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp739 = icmp ne i32 %call738, 0
  br i1 %cmp739, label %if.then.740, label %if.end.741

if.then.740:                                      ; preds = %if.then.736
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 232, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.741:                                       ; preds = %if.then.736
  %arrayidx742 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %374 = load %union.tree_node*, %union.tree_node** %arrayidx742, align 8
  %arrayidx743 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %375 = load %union.tree_node*, %union.tree_node** %arrayidx743, align 8
  %call744 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i64 10), %union.tree_node* %374, %union.tree_node* %375, i32 20, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call744, %union.tree_node** %decl737, align 8
  %376 = load %union.tree_node*, %union.tree_node** %decl737, align 8
  store %union.tree_node* %376, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 20), align 8
  br label %if.end.745

if.end.745:                                       ; preds = %if.end.741, %if.end.735
  br i1 true, label %if.then.746, label %if.end.755

if.then.746:                                      ; preds = %if.end.745
  %call748 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp749 = icmp ne i32 %call748, 0
  br i1 %cmp749, label %if.then.750, label %if.end.751

if.then.750:                                      ; preds = %if.then.746
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 235, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.751:                                       ; preds = %if.then.746
  %arrayidx752 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %377 = load %union.tree_node*, %union.tree_node** %arrayidx752, align 8
  %arrayidx753 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %378 = load %union.tree_node*, %union.tree_node** %arrayidx753, align 8
  %call754 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i32 0, i64 10), %union.tree_node* %377, %union.tree_node* %378, i32 21, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call754, %union.tree_node** %decl747, align 8
  %379 = load %union.tree_node*, %union.tree_node** %decl747, align 8
  store %union.tree_node* %379, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 21), align 8
  br label %if.end.755

if.end.755:                                       ; preds = %if.end.751, %if.end.745
  br i1 true, label %if.then.756, label %if.end.765

if.then.756:                                      ; preds = %if.end.755
  %call758 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp759 = icmp ne i32 %call758, 0
  br i1 %cmp759, label %if.then.760, label %if.end.761

if.then.760:                                      ; preds = %if.then.756
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 239, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.761:                                       ; preds = %if.then.756
  %arrayidx762 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 63
  %380 = load %union.tree_node*, %union.tree_node** %arrayidx762, align 8
  %arrayidx763 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 63
  %381 = load %union.tree_node*, %union.tree_node** %arrayidx763, align 8
  %call764 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i64 10), %union.tree_node* %380, %union.tree_node* %381, i32 22, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call764, %union.tree_node** %decl757, align 8
  %382 = load %union.tree_node*, %union.tree_node** %decl757, align 8
  store %union.tree_node* %382, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 22), align 8
  br label %if.end.765

if.end.765:                                       ; preds = %if.end.761, %if.end.755
  br i1 true, label %if.then.766, label %if.end.775

if.then.766:                                      ; preds = %if.end.765
  %call768 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp769 = icmp ne i32 %call768, 0
  br i1 %cmp769, label %if.then.770, label %if.end.771

if.then.770:                                      ; preds = %if.then.766
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 242, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.771:                                       ; preds = %if.then.766
  %arrayidx772 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 64
  %383 = load %union.tree_node*, %union.tree_node** %arrayidx772, align 8
  %arrayidx773 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 64
  %384 = load %union.tree_node*, %union.tree_node** %arrayidx773, align 8
  %call774 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i64 10), %union.tree_node* %383, %union.tree_node* %384, i32 23, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call774, %union.tree_node** %decl767, align 8
  %385 = load %union.tree_node*, %union.tree_node** %decl767, align 8
  store %union.tree_node* %385, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 23), align 8
  br label %if.end.775

if.end.775:                                       ; preds = %if.end.771, %if.end.765
  br i1 true, label %if.then.776, label %if.end.785

if.then.776:                                      ; preds = %if.end.775
  %call778 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp779 = icmp ne i32 %call778, 0
  br i1 %cmp779, label %if.then.780, label %if.end.781

if.then.780:                                      ; preds = %if.then.776
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 245, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.781:                                       ; preds = %if.then.776
  %arrayidx782 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 65
  %386 = load %union.tree_node*, %union.tree_node** %arrayidx782, align 8
  %arrayidx783 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 65
  %387 = load %union.tree_node*, %union.tree_node** %arrayidx783, align 8
  %call784 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i32 0, i64 10), %union.tree_node* %386, %union.tree_node* %387, i32 24, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call784, %union.tree_node** %decl777, align 8
  %388 = load %union.tree_node*, %union.tree_node** %decl777, align 8
  store %union.tree_node* %388, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 24), align 8
  br label %if.end.785

if.end.785:                                       ; preds = %if.end.781, %if.end.775
  br i1 true, label %if.then.786, label %if.end.795

if.then.786:                                      ; preds = %if.end.785
  %call788 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp789 = icmp ne i32 %call788, 0
  br i1 %cmp789, label %if.then.790, label %if.end.791

if.then.790:                                      ; preds = %if.then.786
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 249, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.791:                                       ; preds = %if.then.786
  %arrayidx792 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 49
  %389 = load %union.tree_node*, %union.tree_node** %arrayidx792, align 8
  %arrayidx793 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 49
  %390 = load %union.tree_node*, %union.tree_node** %arrayidx793, align 8
  %call794 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.103, i32 0, i64 10), %union.tree_node* %389, %union.tree_node* %390, i32 25, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call794, %union.tree_node** %decl787, align 8
  %391 = load %union.tree_node*, %union.tree_node** %decl787, align 8
  store %union.tree_node* %391, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 25), align 8
  br label %if.end.795

if.end.795:                                       ; preds = %if.end.791, %if.end.785
  br i1 true, label %if.then.796, label %if.end.805

if.then.796:                                      ; preds = %if.end.795
  %call798 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp799 = icmp ne i32 %call798, 0
  br i1 %cmp799, label %if.then.800, label %if.end.801

if.then.800:                                      ; preds = %if.then.796
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 252, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.801:                                       ; preds = %if.then.796
  %arrayidx802 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 61
  %392 = load %union.tree_node*, %union.tree_node** %arrayidx802, align 8
  %arrayidx803 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 61
  %393 = load %union.tree_node*, %union.tree_node** %arrayidx803, align 8
  %call804 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i32 0, i64 10), %union.tree_node* %392, %union.tree_node* %393, i32 26, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call804, %union.tree_node** %decl797, align 8
  %394 = load %union.tree_node*, %union.tree_node** %decl797, align 8
  store %union.tree_node* %394, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 26), align 8
  br label %if.end.805

if.end.805:                                       ; preds = %if.end.801, %if.end.795
  br i1 true, label %if.then.806, label %if.end.815

if.then.806:                                      ; preds = %if.end.805
  %call808 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp809 = icmp ne i32 %call808, 0
  br i1 %cmp809, label %if.then.810, label %if.end.811

if.then.810:                                      ; preds = %if.then.806
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 255, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.811:                                       ; preds = %if.then.806
  %arrayidx812 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 49
  %395 = load %union.tree_node*, %union.tree_node** %arrayidx812, align 8
  %arrayidx813 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 49
  %396 = load %union.tree_node*, %union.tree_node** %arrayidx813, align 8
  %call814 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i32 0, i64 10), %union.tree_node* %395, %union.tree_node* %396, i32 27, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call814, %union.tree_node** %decl807, align 8
  %397 = load %union.tree_node*, %union.tree_node** %decl807, align 8
  store %union.tree_node* %397, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 27), align 8
  br label %if.end.815

if.end.815:                                       ; preds = %if.end.811, %if.end.805
  br i1 true, label %if.then.816, label %if.end.825

if.then.816:                                      ; preds = %if.end.815
  %call818 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp819 = icmp ne i32 %call818, 0
  br i1 %cmp819, label %if.then.820, label %if.end.821

if.then.820:                                      ; preds = %if.then.816
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 258, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.821:                                       ; preds = %if.then.816
  %arrayidx822 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 61
  %398 = load %union.tree_node*, %union.tree_node** %arrayidx822, align 8
  %arrayidx823 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 61
  %399 = load %union.tree_node*, %union.tree_node** %arrayidx823, align 8
  %call824 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i32 0, i64 10), %union.tree_node* %398, %union.tree_node* %399, i32 28, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call824, %union.tree_node** %decl817, align 8
  %400 = load %union.tree_node*, %union.tree_node** %decl817, align 8
  store %union.tree_node* %400, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 28), align 8
  br label %if.end.825

if.end.825:                                       ; preds = %if.end.821, %if.end.815
  br i1 true, label %if.then.826, label %if.end.835

if.then.826:                                      ; preds = %if.end.825
  %call828 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp829 = icmp ne i32 %call828, 0
  br i1 %cmp829, label %if.then.830, label %if.end.831

if.then.830:                                      ; preds = %if.then.826
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 261, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.831:                                       ; preds = %if.then.826
  %arrayidx832 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 50
  %401 = load %union.tree_node*, %union.tree_node** %arrayidx832, align 8
  %arrayidx833 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 50
  %402 = load %union.tree_node*, %union.tree_node** %arrayidx833, align 8
  %call834 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i32 0, i64 10), %union.tree_node* %401, %union.tree_node* %402, i32 29, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call834, %union.tree_node** %decl827, align 8
  %403 = load %union.tree_node*, %union.tree_node** %decl827, align 8
  store %union.tree_node* %403, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 29), align 8
  br label %if.end.835

if.end.835:                                       ; preds = %if.end.831, %if.end.825
  br i1 true, label %if.then.836, label %if.end.845

if.then.836:                                      ; preds = %if.end.835
  %call838 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp839 = icmp ne i32 %call838, 0
  br i1 %cmp839, label %if.then.840, label %if.end.841

if.then.840:                                      ; preds = %if.then.836
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 264, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.841:                                       ; preds = %if.then.836
  %arrayidx842 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 62
  %404 = load %union.tree_node*, %union.tree_node** %arrayidx842, align 8
  %arrayidx843 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 62
  %405 = load %union.tree_node*, %union.tree_node** %arrayidx843, align 8
  %call844 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.108, i32 0, i64 10), %union.tree_node* %404, %union.tree_node* %405, i32 30, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call844, %union.tree_node** %decl837, align 8
  %406 = load %union.tree_node*, %union.tree_node** %decl837, align 8
  store %union.tree_node* %406, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 30), align 8
  br label %if.end.845

if.end.845:                                       ; preds = %if.end.841, %if.end.835
  br i1 true, label %if.then.846, label %if.end.855

if.then.846:                                      ; preds = %if.end.845
  %call848 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp849 = icmp ne i32 %call848, 0
  br i1 %cmp849, label %if.then.850, label %if.end.851

if.then.850:                                      ; preds = %if.then.846
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 267, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.851:                                       ; preds = %if.then.846
  %arrayidx852 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 43
  %407 = load %union.tree_node*, %union.tree_node** %arrayidx852, align 8
  %arrayidx853 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 43
  %408 = load %union.tree_node*, %union.tree_node** %arrayidx853, align 8
  %call854 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i64 10), %union.tree_node* %407, %union.tree_node* %408, i32 31, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call854, %union.tree_node** %decl847, align 8
  %409 = load %union.tree_node*, %union.tree_node** %decl847, align 8
  store %union.tree_node* %409, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 31), align 8
  br label %if.end.855

if.end.855:                                       ; preds = %if.end.851, %if.end.845
  br i1 true, label %if.then.856, label %if.end.865

if.then.856:                                      ; preds = %if.end.855
  %call858 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp859 = icmp ne i32 %call858, 0
  br i1 %cmp859, label %if.then.860, label %if.end.861

if.then.860:                                      ; preds = %if.then.856
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 270, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.861:                                       ; preds = %if.then.856
  %arrayidx862 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 51
  %410 = load %union.tree_node*, %union.tree_node** %arrayidx862, align 8
  %arrayidx863 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 51
  %411 = load %union.tree_node*, %union.tree_node** %arrayidx863, align 8
  %call864 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i32 0, i64 10), %union.tree_node* %410, %union.tree_node* %411, i32 32, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call864, %union.tree_node** %decl857, align 8
  %412 = load %union.tree_node*, %union.tree_node** %decl857, align 8
  store %union.tree_node* %412, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 32), align 8
  br label %if.end.865

if.end.865:                                       ; preds = %if.end.861, %if.end.855
  br i1 true, label %if.then.866, label %if.end.875

if.then.866:                                      ; preds = %if.end.865
  %call868 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp869 = icmp ne i32 %call868, 0
  br i1 %cmp869, label %if.then.870, label %if.end.871

if.then.870:                                      ; preds = %if.then.866
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 273, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.871:                                       ; preds = %if.then.866
  %arrayidx872 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 51
  %413 = load %union.tree_node*, %union.tree_node** %arrayidx872, align 8
  %arrayidx873 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 51
  %414 = load %union.tree_node*, %union.tree_node** %arrayidx873, align 8
  %call874 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i32 0, i64 10), %union.tree_node* %413, %union.tree_node* %414, i32 33, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call874, %union.tree_node** %decl867, align 8
  %415 = load %union.tree_node*, %union.tree_node** %decl867, align 8
  store %union.tree_node* %415, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 33), align 8
  br label %if.end.875

if.end.875:                                       ; preds = %if.end.871, %if.end.865
  br i1 true, label %if.then.876, label %if.end.885

if.then.876:                                      ; preds = %if.end.875
  %call878 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp879 = icmp ne i32 %call878, 0
  br i1 %cmp879, label %if.then.880, label %if.end.881

if.then.880:                                      ; preds = %if.then.876
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 276, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.881:                                       ; preds = %if.then.876
  %arrayidx882 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 52
  %416 = load %union.tree_node*, %union.tree_node** %arrayidx882, align 8
  %arrayidx883 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 52
  %417 = load %union.tree_node*, %union.tree_node** %arrayidx883, align 8
  %call884 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i32 0, i64 10), %union.tree_node* %416, %union.tree_node* %417, i32 34, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call884, %union.tree_node** %decl877, align 8
  %418 = load %union.tree_node*, %union.tree_node** %decl877, align 8
  store %union.tree_node* %418, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 34), align 8
  br label %if.end.885

if.end.885:                                       ; preds = %if.end.881, %if.end.875
  br i1 true, label %if.then.886, label %if.end.895

if.then.886:                                      ; preds = %if.end.885
  %call888 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp889 = icmp ne i32 %call888, 0
  br i1 %cmp889, label %if.then.890, label %if.end.891

if.then.890:                                      ; preds = %if.then.886
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 279, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.891:                                       ; preds = %if.then.886
  %arrayidx892 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 52
  %419 = load %union.tree_node*, %union.tree_node** %arrayidx892, align 8
  %arrayidx893 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 52
  %420 = load %union.tree_node*, %union.tree_node** %arrayidx893, align 8
  %call894 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i32 0, i64 10), %union.tree_node* %419, %union.tree_node* %420, i32 35, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call894, %union.tree_node** %decl887, align 8
  %421 = load %union.tree_node*, %union.tree_node** %decl887, align 8
  store %union.tree_node* %421, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 35), align 8
  br label %if.end.895

if.end.895:                                       ; preds = %if.end.891, %if.end.885
  br i1 true, label %if.then.896, label %if.end.905

if.then.896:                                      ; preds = %if.end.895
  %call898 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp899 = icmp ne i32 %call898, 0
  br i1 %cmp899, label %if.then.900, label %if.end.901

if.then.900:                                      ; preds = %if.then.896
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 282, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.901:                                       ; preds = %if.then.896
  %arrayidx902 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %422 = load %union.tree_node*, %union.tree_node** %arrayidx902, align 8
  %arrayidx903 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %423 = load %union.tree_node*, %union.tree_node** %arrayidx903, align 8
  %call904 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i32 0, i64 10), %union.tree_node* %422, %union.tree_node* %423, i32 36, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call904, %union.tree_node** %decl897, align 8
  %424 = load %union.tree_node*, %union.tree_node** %decl897, align 8
  store %union.tree_node* %424, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 36), align 8
  br label %if.end.905

if.end.905:                                       ; preds = %if.end.901, %if.end.895
  br i1 true, label %if.then.906, label %if.end.915

if.then.906:                                      ; preds = %if.end.905
  %call908 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp909 = icmp ne i32 %call908, 0
  br i1 %cmp909, label %if.then.910, label %if.end.911

if.then.910:                                      ; preds = %if.then.906
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 285, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.911:                                       ; preds = %if.then.906
  %arrayidx912 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %425 = load %union.tree_node*, %union.tree_node** %arrayidx912, align 8
  %arrayidx913 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 53
  %426 = load %union.tree_node*, %union.tree_node** %arrayidx913, align 8
  %call914 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i32 0, i64 10), %union.tree_node* %425, %union.tree_node* %426, i32 37, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call914, %union.tree_node** %decl907, align 8
  %427 = load %union.tree_node*, %union.tree_node** %decl907, align 8
  store %union.tree_node* %427, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 37), align 8
  br label %if.end.915

if.end.915:                                       ; preds = %if.end.911, %if.end.905
  br i1 true, label %if.then.916, label %if.end.925

if.then.916:                                      ; preds = %if.end.915
  %call918 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp919 = icmp ne i32 %call918, 0
  br i1 %cmp919, label %if.then.920, label %if.end.921

if.then.920:                                      ; preds = %if.then.916
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 289, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.921:                                       ; preds = %if.then.916
  %arrayidx922 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %428 = load %union.tree_node*, %union.tree_node** %arrayidx922, align 8
  %arrayidx923 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %429 = load %union.tree_node*, %union.tree_node** %arrayidx923, align 8
  %call924 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i64 10), %union.tree_node* %428, %union.tree_node* %429, i32 38, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call924, %union.tree_node** %decl917, align 8
  %430 = load %union.tree_node*, %union.tree_node** %decl917, align 8
  store %union.tree_node* %430, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 38), align 8
  br label %if.end.925

if.end.925:                                       ; preds = %if.end.921, %if.end.915
  br i1 true, label %if.then.926, label %if.end.935

if.then.926:                                      ; preds = %if.end.925
  %call928 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp929 = icmp ne i32 %call928, 0
  br i1 %cmp929, label %if.then.930, label %if.end.931

if.then.930:                                      ; preds = %if.then.926
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 292, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.931:                                       ; preds = %if.then.926
  %arrayidx932 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %431 = load %union.tree_node*, %union.tree_node** %arrayidx932, align 8
  %arrayidx933 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %432 = load %union.tree_node*, %union.tree_node** %arrayidx933, align 8
  %call934 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i64 10), %union.tree_node* %431, %union.tree_node* %432, i32 39, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call934, %union.tree_node** %decl927, align 8
  %433 = load %union.tree_node*, %union.tree_node** %decl927, align 8
  store %union.tree_node* %433, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 39), align 8
  br label %if.end.935

if.end.935:                                       ; preds = %if.end.931, %if.end.925
  br i1 true, label %if.then.936, label %if.end.945

if.then.936:                                      ; preds = %if.end.935
  %call938 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp939 = icmp ne i32 %call938, 0
  br i1 %cmp939, label %if.then.940, label %if.end.941

if.then.940:                                      ; preds = %if.then.936
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 295, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.941:                                       ; preds = %if.then.936
  %arrayidx942 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %434 = load %union.tree_node*, %union.tree_node** %arrayidx942, align 8
  %arrayidx943 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 30
  %435 = load %union.tree_node*, %union.tree_node** %arrayidx943, align 8
  %call944 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.118, i32 0, i64 10), %union.tree_node* %434, %union.tree_node* %435, i32 40, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call944, %union.tree_node** %decl937, align 8
  %436 = load %union.tree_node*, %union.tree_node** %decl937, align 8
  store %union.tree_node* %436, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 40), align 8
  br label %if.end.945

if.end.945:                                       ; preds = %if.end.941, %if.end.935
  br i1 true, label %if.then.946, label %if.end.955

if.then.946:                                      ; preds = %if.end.945
  %call948 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp949 = icmp ne i32 %call948, 0
  br i1 %cmp949, label %if.then.950, label %if.end.951

if.then.950:                                      ; preds = %if.then.946
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 298, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.951:                                       ; preds = %if.then.946
  %arrayidx952 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %437 = load %union.tree_node*, %union.tree_node** %arrayidx952, align 8
  %arrayidx953 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %438 = load %union.tree_node*, %union.tree_node** %arrayidx953, align 8
  %call954 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i32 0, i64 10), %union.tree_node* %437, %union.tree_node* %438, i32 41, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call954, %union.tree_node** %decl947, align 8
  %439 = load %union.tree_node*, %union.tree_node** %decl947, align 8
  store %union.tree_node* %439, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 41), align 8
  br label %if.end.955

if.end.955:                                       ; preds = %if.end.951, %if.end.945
  br i1 true, label %if.then.956, label %if.end.965

if.then.956:                                      ; preds = %if.end.955
  %call958 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp959 = icmp ne i32 %call958, 0
  br i1 %cmp959, label %if.then.960, label %if.end.961

if.then.960:                                      ; preds = %if.then.956
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 301, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.961:                                       ; preds = %if.then.956
  %arrayidx962 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %440 = load %union.tree_node*, %union.tree_node** %arrayidx962, align 8
  %arrayidx963 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %441 = load %union.tree_node*, %union.tree_node** %arrayidx963, align 8
  %call964 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i32 0, i64 10), %union.tree_node* %440, %union.tree_node* %441, i32 42, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call964, %union.tree_node** %decl957, align 8
  %442 = load %union.tree_node*, %union.tree_node** %decl957, align 8
  store %union.tree_node* %442, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 42), align 8
  br label %if.end.965

if.end.965:                                       ; preds = %if.end.961, %if.end.955
  br i1 true, label %if.then.966, label %if.end.975

if.then.966:                                      ; preds = %if.end.965
  %call968 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp969 = icmp ne i32 %call968, 0
  br i1 %cmp969, label %if.then.970, label %if.end.971

if.then.970:                                      ; preds = %if.then.966
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 304, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.971:                                       ; preds = %if.then.966
  %arrayidx972 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %443 = load %union.tree_node*, %union.tree_node** %arrayidx972, align 8
  %arrayidx973 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 29
  %444 = load %union.tree_node*, %union.tree_node** %arrayidx973, align 8
  %call974 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i32 0, i64 10), %union.tree_node* %443, %union.tree_node* %444, i32 43, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call974, %union.tree_node** %decl967, align 8
  %445 = load %union.tree_node*, %union.tree_node** %decl967, align 8
  store %union.tree_node* %445, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 43), align 8
  br label %if.end.975

if.end.975:                                       ; preds = %if.end.971, %if.end.965
  br i1 true, label %if.then.976, label %if.end.985

if.then.976:                                      ; preds = %if.end.975
  %call978 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp979 = icmp ne i32 %call978, 0
  br i1 %cmp979, label %if.then.980, label %if.end.981

if.then.980:                                      ; preds = %if.then.976
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 307, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.981:                                       ; preds = %if.then.976
  %arrayidx982 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %446 = load %union.tree_node*, %union.tree_node** %arrayidx982, align 8
  %arrayidx983 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %447 = load %union.tree_node*, %union.tree_node** %arrayidx983, align 8
  %call984 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i64 10), %union.tree_node* %446, %union.tree_node* %447, i32 44, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call984, %union.tree_node** %decl977, align 8
  %448 = load %union.tree_node*, %union.tree_node** %decl977, align 8
  store %union.tree_node* %448, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 44), align 8
  br label %if.end.985

if.end.985:                                       ; preds = %if.end.981, %if.end.975
  br i1 true, label %if.then.986, label %if.end.995

if.then.986:                                      ; preds = %if.end.985
  %call988 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp989 = icmp ne i32 %call988, 0
  br i1 %cmp989, label %if.then.990, label %if.end.991

if.then.990:                                      ; preds = %if.then.986
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 310, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.991:                                       ; preds = %if.then.986
  %arrayidx992 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %449 = load %union.tree_node*, %union.tree_node** %arrayidx992, align 8
  %arrayidx993 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %450 = load %union.tree_node*, %union.tree_node** %arrayidx993, align 8
  %call994 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i32 0, i64 10), %union.tree_node* %449, %union.tree_node* %450, i32 45, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call994, %union.tree_node** %decl987, align 8
  %451 = load %union.tree_node*, %union.tree_node** %decl987, align 8
  store %union.tree_node* %451, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 45), align 8
  br label %if.end.995

if.end.995:                                       ; preds = %if.end.991, %if.end.985
  br i1 true, label %if.then.996, label %if.end.1005

if.then.996:                                      ; preds = %if.end.995
  %call998 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp999 = icmp ne i32 %call998, 0
  br i1 %cmp999, label %if.then.1000, label %if.end.1001

if.then.1000:                                     ; preds = %if.then.996
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 313, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1001:                                      ; preds = %if.then.996
  %arrayidx1002 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %452 = load %union.tree_node*, %union.tree_node** %arrayidx1002, align 8
  %arrayidx1003 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 31
  %453 = load %union.tree_node*, %union.tree_node** %arrayidx1003, align 8
  %call1004 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i64 10), %union.tree_node* %452, %union.tree_node* %453, i32 46, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call1004, %union.tree_node** %decl997, align 8
  %454 = load %union.tree_node*, %union.tree_node** %decl997, align 8
  store %union.tree_node* %454, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 46), align 8
  br label %if.end.1005

if.end.1005:                                      ; preds = %if.end.1001, %if.end.995
  br i1 true, label %if.then.1006, label %if.end.1014

if.then.1006:                                     ; preds = %if.end.1005
  %call1008 = call i32 @strncmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1009 = icmp ne i32 %call1008, 0
  br i1 %cmp1009, label %if.then.1010, label %if.end.1011

if.then.1010:                                     ; preds = %if.then.1006
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 323, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1011:                                      ; preds = %if.then.1006
  %arrayidx1012 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 71
  %455 = load %union.tree_node*, %union.tree_node** %arrayidx1012, align 8
  %call1013 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i32 0, i32 0), %union.tree_node* %455, i32 47, i32 3, i8* null)
  store %union.tree_node* %call1013, %union.tree_node** %decl1007, align 8
  %456 = load %union.tree_node*, %union.tree_node** %decl1007, align 8
  store %union.tree_node* %456, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 47), align 8
  br label %if.end.1014

if.end.1014:                                      ; preds = %if.end.1011, %if.end.1005
  br i1 true, label %if.then.1015, label %if.end.1023

if.then.1015:                                     ; preds = %if.end.1014
  %call1017 = call i32 @strncmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1018 = icmp ne i32 %call1017, 0
  br i1 %cmp1018, label %if.then.1019, label %if.end.1020

if.then.1019:                                     ; preds = %if.then.1015
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 326, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1020:                                      ; preds = %if.then.1015
  %arrayidx1021 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %457 = load %union.tree_node*, %union.tree_node** %arrayidx1021, align 8
  %call1022 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.126, i32 0, i32 0), %union.tree_node* %457, i32 48, i32 3, i8* null)
  store %union.tree_node* %call1022, %union.tree_node** %decl1016, align 8
  %458 = load %union.tree_node*, %union.tree_node** %decl1016, align 8
  store %union.tree_node* %458, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 48), align 8
  br label %if.end.1023

if.end.1023:                                      ; preds = %if.end.1020, %if.end.1014
  br i1 true, label %if.then.1024, label %if.end.1032

if.then.1024:                                     ; preds = %if.end.1023
  %call1026 = call i32 @strncmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1027 = icmp ne i32 %call1026, 0
  br i1 %cmp1027, label %if.then.1028, label %if.end.1029

if.then.1028:                                     ; preds = %if.then.1024
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 329, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1029:                                      ; preds = %if.then.1024
  %arrayidx1030 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 71
  %459 = load %union.tree_node*, %union.tree_node** %arrayidx1030, align 8
  %call1031 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.127, i32 0, i32 0), %union.tree_node* %459, i32 49, i32 3, i8* null)
  store %union.tree_node* %call1031, %union.tree_node** %decl1025, align 8
  %460 = load %union.tree_node*, %union.tree_node** %decl1025, align 8
  store %union.tree_node* %460, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 49), align 8
  br label %if.end.1032

if.end.1032:                                      ; preds = %if.end.1029, %if.end.1023
  br i1 true, label %if.then.1033, label %if.end.1041

if.then.1033:                                     ; preds = %if.end.1032
  %call1035 = call i32 @strncmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1036 = icmp ne i32 %call1035, 0
  br i1 %cmp1036, label %if.then.1037, label %if.end.1038

if.then.1037:                                     ; preds = %if.then.1033
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 332, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1038:                                      ; preds = %if.then.1033
  %arrayidx1039 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %461 = load %union.tree_node*, %union.tree_node** %arrayidx1039, align 8
  %call1040 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i32 0, i32 0), %union.tree_node* %461, i32 50, i32 3, i8* null)
  store %union.tree_node* %call1040, %union.tree_node** %decl1034, align 8
  %462 = load %union.tree_node*, %union.tree_node** %decl1034, align 8
  store %union.tree_node* %462, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 50), align 8
  br label %if.end.1041

if.end.1041:                                      ; preds = %if.end.1038, %if.end.1032
  br i1 true, label %if.then.1042, label %if.end.1050

if.then.1042:                                     ; preds = %if.end.1041
  %call1044 = call i32 @strncmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1045 = icmp ne i32 %call1044, 0
  br i1 %cmp1045, label %if.then.1046, label %if.end.1047

if.then.1046:                                     ; preds = %if.then.1042
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 335, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1047:                                      ; preds = %if.then.1042
  %arrayidx1048 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %463 = load %union.tree_node*, %union.tree_node** %arrayidx1048, align 8
  %call1049 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i32 0, i32 0), %union.tree_node* %463, i32 51, i32 3, i8* null)
  store %union.tree_node* %call1049, %union.tree_node** %decl1043, align 8
  %464 = load %union.tree_node*, %union.tree_node** %decl1043, align 8
  store %union.tree_node* %464, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 51), align 8
  br label %if.end.1050

if.end.1050:                                      ; preds = %if.end.1047, %if.end.1041
  br i1 true, label %if.then.1051, label %if.end.1059

if.then.1051:                                     ; preds = %if.end.1050
  %call1053 = call i32 @strncmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1054 = icmp ne i32 %call1053, 0
  br i1 %cmp1054, label %if.then.1055, label %if.end.1056

if.then.1055:                                     ; preds = %if.then.1051
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 338, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1056:                                      ; preds = %if.then.1051
  %arrayidx1057 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 38
  %465 = load %union.tree_node*, %union.tree_node** %arrayidx1057, align 8
  %call1058 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.130, i32 0, i32 0), %union.tree_node* %465, i32 52, i32 3, i8* null)
  store %union.tree_node* %call1058, %union.tree_node** %decl1052, align 8
  %466 = load %union.tree_node*, %union.tree_node** %decl1052, align 8
  store %union.tree_node* %466, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 52), align 8
  br label %if.end.1059

if.end.1059:                                      ; preds = %if.end.1056, %if.end.1050
  br i1 true, label %if.then.1060, label %if.end.1068

if.then.1060:                                     ; preds = %if.end.1059
  %call1062 = call i32 @strncmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1063 = icmp ne i32 %call1062, 0
  br i1 %cmp1063, label %if.then.1064, label %if.end.1065

if.then.1064:                                     ; preds = %if.then.1060
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 341, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1065:                                      ; preds = %if.then.1060
  %arrayidx1066 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 38
  %467 = load %union.tree_node*, %union.tree_node** %arrayidx1066, align 8
  %call1067 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i32 0, i32 0), %union.tree_node* %467, i32 53, i32 3, i8* null)
  store %union.tree_node* %call1067, %union.tree_node** %decl1061, align 8
  %468 = load %union.tree_node*, %union.tree_node** %decl1061, align 8
  store %union.tree_node* %468, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 53), align 8
  br label %if.end.1068

if.end.1068:                                      ; preds = %if.end.1065, %if.end.1059
  br i1 true, label %if.then.1069, label %if.end.1077

if.then.1069:                                     ; preds = %if.end.1068
  %call1071 = call i32 @strncmp(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1072 = icmp ne i32 %call1071, 0
  br i1 %cmp1072, label %if.then.1073, label %if.end.1074

if.then.1073:                                     ; preds = %if.then.1069
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 344, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1074:                                      ; preds = %if.then.1069
  %arrayidx1075 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 71
  %469 = load %union.tree_node*, %union.tree_node** %arrayidx1075, align 8
  %call1076 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.132, i32 0, i32 0), %union.tree_node* %469, i32 54, i32 3, i8* null)
  store %union.tree_node* %call1076, %union.tree_node** %decl1070, align 8
  %470 = load %union.tree_node*, %union.tree_node** %decl1070, align 8
  store %union.tree_node* %470, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 54), align 8
  br label %if.end.1077

if.end.1077:                                      ; preds = %if.end.1074, %if.end.1068
  br i1 true, label %if.then.1078, label %if.end.1086

if.then.1078:                                     ; preds = %if.end.1077
  %call1080 = call i32 @strncmp(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1081 = icmp ne i32 %call1080, 0
  br i1 %cmp1081, label %if.then.1082, label %if.end.1083

if.then.1082:                                     ; preds = %if.then.1078
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 347, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1083:                                      ; preds = %if.then.1078
  %arrayidx1084 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 71
  %471 = load %union.tree_node*, %union.tree_node** %arrayidx1084, align 8
  %call1085 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.133, i32 0, i32 0), %union.tree_node* %471, i32 55, i32 3, i8* null)
  store %union.tree_node* %call1085, %union.tree_node** %decl1079, align 8
  %472 = load %union.tree_node*, %union.tree_node** %decl1079, align 8
  store %union.tree_node* %472, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 55), align 8
  br label %if.end.1086

if.end.1086:                                      ; preds = %if.end.1083, %if.end.1077
  br i1 true, label %if.then.1087, label %if.end.1095

if.then.1087:                                     ; preds = %if.end.1086
  %call1089 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1090 = icmp ne i32 %call1089, 0
  br i1 %cmp1090, label %if.then.1091, label %if.end.1092

if.then.1091:                                     ; preds = %if.then.1087
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 350, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1092:                                      ; preds = %if.then.1087
  %arrayidx1093 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 77
  %473 = load %union.tree_node*, %union.tree_node** %arrayidx1093, align 8
  %call1094 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i32 0, i32 0), %union.tree_node* %473, i32 56, i32 3, i8* null)
  store %union.tree_node* %call1094, %union.tree_node** %decl1088, align 8
  %474 = load %union.tree_node*, %union.tree_node** %decl1088, align 8
  store %union.tree_node* %474, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 56), align 8
  br label %if.end.1095

if.end.1095:                                      ; preds = %if.end.1092, %if.end.1086
  br i1 true, label %if.then.1096, label %if.end.1104

if.then.1096:                                     ; preds = %if.end.1095
  %call1098 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1099 = icmp ne i32 %call1098, 0
  br i1 %cmp1099, label %if.then.1100, label %if.end.1101

if.then.1100:                                     ; preds = %if.then.1096
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 353, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1101:                                      ; preds = %if.then.1096
  %arrayidx1102 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 42
  %475 = load %union.tree_node*, %union.tree_node** %arrayidx1102, align 8
  %call1103 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.135, i32 0, i32 0), %union.tree_node* %475, i32 57, i32 3, i8* null)
  store %union.tree_node* %call1103, %union.tree_node** %decl1097, align 8
  %476 = load %union.tree_node*, %union.tree_node** %decl1097, align 8
  store %union.tree_node* %476, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 57), align 8
  br label %if.end.1104

if.end.1104:                                      ; preds = %if.end.1101, %if.end.1095
  br i1 true, label %if.then.1105, label %if.end.1113

if.then.1105:                                     ; preds = %if.end.1104
  %call1107 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1108 = icmp ne i32 %call1107, 0
  br i1 %cmp1108, label %if.then.1109, label %if.end.1110

if.then.1109:                                     ; preds = %if.then.1105
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 356, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1110:                                      ; preds = %if.then.1105
  %arrayidx1111 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 41
  %477 = load %union.tree_node*, %union.tree_node** %arrayidx1111, align 8
  %call1112 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.136, i32 0, i32 0), %union.tree_node* %477, i32 58, i32 3, i8* null)
  store %union.tree_node* %call1112, %union.tree_node** %decl1106, align 8
  %478 = load %union.tree_node*, %union.tree_node** %decl1106, align 8
  store %union.tree_node* %478, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 58), align 8
  br label %if.end.1113

if.end.1113:                                      ; preds = %if.end.1110, %if.end.1104
  br i1 true, label %if.then.1114, label %if.end.1122

if.then.1114:                                     ; preds = %if.end.1113
  %call1116 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1117 = icmp ne i32 %call1116, 0
  br i1 %cmp1117, label %if.then.1118, label %if.end.1119

if.then.1118:                                     ; preds = %if.then.1114
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 359, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1119:                                      ; preds = %if.then.1114
  %arrayidx1120 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 48
  %479 = load %union.tree_node*, %union.tree_node** %arrayidx1120, align 8
  %call1121 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.137, i32 0, i32 0), %union.tree_node* %479, i32 59, i32 3, i8* null)
  store %union.tree_node* %call1121, %union.tree_node** %decl1115, align 8
  %480 = load %union.tree_node*, %union.tree_node** %decl1115, align 8
  store %union.tree_node* %480, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 59), align 8
  br label %if.end.1122

if.end.1122:                                      ; preds = %if.end.1119, %if.end.1113
  br i1 true, label %if.then.1123, label %if.end.1131

if.then.1123:                                     ; preds = %if.end.1122
  %call1125 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1126 = icmp ne i32 %call1125, 0
  br i1 %cmp1126, label %if.then.1127, label %if.end.1128

if.then.1127:                                     ; preds = %if.then.1123
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 362, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1128:                                      ; preds = %if.then.1123
  %arrayidx1129 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 23
  %481 = load %union.tree_node*, %union.tree_node** %arrayidx1129, align 8
  %call1130 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i32 0, i32 0), %union.tree_node* %481, i32 60, i32 3, i8* null)
  store %union.tree_node* %call1130, %union.tree_node** %decl1124, align 8
  %482 = load %union.tree_node*, %union.tree_node** %decl1124, align 8
  store %union.tree_node* %482, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 60), align 8
  br label %if.end.1131

if.end.1131:                                      ; preds = %if.end.1128, %if.end.1122
  br i1 true, label %if.then.1132, label %if.end.1140

if.then.1132:                                     ; preds = %if.end.1131
  %call1134 = call i32 @strncmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1135 = icmp ne i32 %call1134, 0
  br i1 %cmp1135, label %if.then.1136, label %if.end.1137

if.then.1136:                                     ; preds = %if.then.1132
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 365, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1137:                                      ; preds = %if.then.1132
  %arrayidx1138 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 73
  %483 = load %union.tree_node*, %union.tree_node** %arrayidx1138, align 8
  %call1139 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i32 0, i32 0), %union.tree_node* %483, i32 61, i32 3, i8* null)
  store %union.tree_node* %call1139, %union.tree_node** %decl1133, align 8
  %484 = load %union.tree_node*, %union.tree_node** %decl1133, align 8
  store %union.tree_node* %484, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 61), align 8
  br label %if.end.1140

if.end.1140:                                      ; preds = %if.end.1137, %if.end.1131
  br i1 true, label %if.then.1141, label %if.end.1149

if.then.1141:                                     ; preds = %if.end.1140
  %call1143 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1144 = icmp ne i32 %call1143, 0
  br i1 %cmp1144, label %if.then.1145, label %if.end.1146

if.then.1145:                                     ; preds = %if.then.1141
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 370, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1146:                                      ; preds = %if.then.1141
  %arrayidx1147 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %485 = load %union.tree_node*, %union.tree_node** %arrayidx1147, align 8
  %call1148 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i32 0, i32 0), %union.tree_node* %485, i32 62, i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i32 0, i64 10))
  store %union.tree_node* %call1148, %union.tree_node** %decl1142, align 8
  %486 = load %union.tree_node*, %union.tree_node** %decl1142, align 8
  store %union.tree_node* %486, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 62), align 8
  br label %if.end.1149

if.end.1149:                                      ; preds = %if.end.1146, %if.end.1140
  br i1 true, label %if.then.1150, label %if.end.1158

if.then.1150:                                     ; preds = %if.end.1149
  %call1152 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1153 = icmp ne i32 %call1152, 0
  br i1 %cmp1153, label %if.then.1154, label %if.end.1155

if.then.1154:                                     ; preds = %if.then.1150
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1155:                                      ; preds = %if.then.1150
  %arrayidx1156 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 44
  %487 = load %union.tree_node*, %union.tree_node** %arrayidx1156, align 8
  %call1157 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i32 0, i32 0), %union.tree_node* %487, i32 63, i32 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i32 0, i64 10))
  store %union.tree_node* %call1157, %union.tree_node** %decl1151, align 8
  %488 = load %union.tree_node*, %union.tree_node** %decl1151, align 8
  store %union.tree_node* %488, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 63), align 8
  br label %if.end.1158

if.end.1158:                                      ; preds = %if.end.1155, %if.end.1149
  br i1 true, label %if.then.1159, label %if.end.1168

if.then.1159:                                     ; preds = %if.end.1158
  %call1161 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1162 = icmp ne i32 %call1161, 0
  br i1 %cmp1162, label %if.then.1163, label %if.end.1164

if.then.1163:                                     ; preds = %if.then.1159
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 376, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1164:                                      ; preds = %if.then.1159
  %arrayidx1165 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 74
  %489 = load %union.tree_node*, %union.tree_node** %arrayidx1165, align 8
  %arrayidx1166 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 74
  %490 = load %union.tree_node*, %union.tree_node** %arrayidx1166, align 8
  %call1167 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i32 0, i64 10), %union.tree_node* %489, %union.tree_node* %490, i32 64, i32 1, i32 1, i32 0, i32 0)
  store %union.tree_node* %call1167, %union.tree_node** %decl1160, align 8
  %491 = load %union.tree_node*, %union.tree_node** %decl1160, align 8
  store %union.tree_node* %491, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 64), align 8
  br label %if.end.1168

if.end.1168:                                      ; preds = %if.end.1164, %if.end.1158
  br i1 true, label %if.then.1169, label %if.end.1177

if.then.1169:                                     ; preds = %if.end.1168
  %call1171 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1172 = icmp ne i32 %call1171, 0
  br i1 %cmp1172, label %if.then.1173, label %if.end.1174

if.then.1173:                                     ; preds = %if.then.1169
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 379, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1174:                                      ; preds = %if.then.1169
  %arrayidx1175 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 55
  %492 = load %union.tree_node*, %union.tree_node** %arrayidx1175, align 8
  %call1176 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i32 0, i32 0), %union.tree_node* %492, i32 65, i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i32 0, i64 10))
  store %union.tree_node* %call1176, %union.tree_node** %decl1170, align 8
  %493 = load %union.tree_node*, %union.tree_node** %decl1170, align 8
  store %union.tree_node* %493, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 65), align 8
  br label %if.end.1177

if.end.1177:                                      ; preds = %if.end.1174, %if.end.1168
  br i1 true, label %if.then.1178, label %if.end.1187

if.then.1178:                                     ; preds = %if.end.1177
  %call1180 = call i32 @strncmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1181 = icmp ne i32 %call1180, 0
  br i1 %cmp1181, label %if.then.1182, label %if.end.1183

if.then.1182:                                     ; preds = %if.then.1178
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 389, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1183:                                      ; preds = %if.then.1178
  %arrayidx1184 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 54
  %494 = load %union.tree_node*, %union.tree_node** %arrayidx1184, align 8
  %arrayidx1185 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %495 = load %union.tree_node*, %union.tree_node** %arrayidx1185, align 8
  %call1186 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.144, i32 0, i64 10), %union.tree_node* %494, %union.tree_node* %495, i32 66, i32 3, i32 1, i32 0, i32 0)
  store %union.tree_node* %call1186, %union.tree_node** %decl1179, align 8
  %496 = load %union.tree_node*, %union.tree_node** %decl1179, align 8
  store %union.tree_node* %496, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 66), align 8
  br label %if.end.1187

if.end.1187:                                      ; preds = %if.end.1183, %if.end.1177
  br i1 true, label %if.then.1188, label %if.end.1196

if.then.1188:                                     ; preds = %if.end.1187
  %call1190 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1191 = icmp ne i32 %call1190, 0
  br i1 %cmp1191, label %if.then.1192, label %if.end.1193

if.then.1192:                                     ; preds = %if.then.1188
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 392, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1193:                                      ; preds = %if.then.1188
  %arrayidx1194 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 68
  %497 = load %union.tree_node*, %union.tree_node** %arrayidx1194, align 8
  %call1195 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.145, i32 0, i32 0), %union.tree_node* %497, i32 67, i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.145, i32 0, i64 10))
  store %union.tree_node* %call1195, %union.tree_node** %decl1189, align 8
  %498 = load %union.tree_node*, %union.tree_node** %decl1189, align 8
  store %union.tree_node* %498, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 67), align 8
  br label %if.end.1196

if.end.1196:                                      ; preds = %if.end.1193, %if.end.1187
  br i1 true, label %if.then.1197, label %if.end.1206

if.then.1197:                                     ; preds = %if.end.1196
  %call1199 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1200 = icmp ne i32 %call1199, 0
  br i1 %cmp1200, label %if.then.1201, label %if.end.1202

if.then.1201:                                     ; preds = %if.then.1197
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 395, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1202:                                      ; preds = %if.then.1197
  %arrayidx1203 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 75
  %499 = load %union.tree_node*, %union.tree_node** %arrayidx1203, align 8
  %arrayidx1204 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 75
  %500 = load %union.tree_node*, %union.tree_node** %arrayidx1204, align 8
  %call1205 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i32 0, i64 10), %union.tree_node* %499, %union.tree_node* %500, i32 68, i32 1, i32 1, i32 0, i32 0)
  store %union.tree_node* %call1205, %union.tree_node** %decl1198, align 8
  %501 = load %union.tree_node*, %union.tree_node** %decl1198, align 8
  store %union.tree_node* %501, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 68), align 8
  br label %if.end.1206

if.end.1206:                                      ; preds = %if.end.1202, %if.end.1196
  br i1 true, label %if.then.1207, label %if.end.1215

if.then.1207:                                     ; preds = %if.end.1206
  %call1209 = call i32 @strncmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1210 = icmp ne i32 %call1209, 0
  br i1 %cmp1210, label %if.then.1211, label %if.end.1212

if.then.1211:                                     ; preds = %if.then.1207
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 401, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1212:                                      ; preds = %if.then.1207
  %arrayidx1213 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %502 = load %union.tree_node*, %union.tree_node** %arrayidx1213, align 8
  %call1214 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.147, i32 0, i32 0), %union.tree_node* %502, i32 69, i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.147, i32 0, i64 10))
  store %union.tree_node* %call1214, %union.tree_node** %decl1208, align 8
  %503 = load %union.tree_node*, %union.tree_node** %decl1208, align 8
  store %union.tree_node* %503, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 69), align 8
  br label %if.end.1215

if.end.1215:                                      ; preds = %if.end.1212, %if.end.1206
  br i1 true, label %if.then.1216, label %if.end.1224

if.then.1216:                                     ; preds = %if.end.1215
  %call1218 = call i32 @strncmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1219 = icmp ne i32 %call1218, 0
  br i1 %cmp1219, label %if.then.1220, label %if.end.1221

if.then.1220:                                     ; preds = %if.then.1216
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 404, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1221:                                      ; preds = %if.then.1216
  %arrayidx1222 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 44
  %504 = load %union.tree_node*, %union.tree_node** %arrayidx1222, align 8
  %call1223 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.148, i32 0, i32 0), %union.tree_node* %504, i32 70, i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.148, i32 0, i64 10))
  store %union.tree_node* %call1223, %union.tree_node** %decl1217, align 8
  %505 = load %union.tree_node*, %union.tree_node** %decl1217, align 8
  store %union.tree_node* %505, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 70), align 8
  br label %if.end.1224

if.end.1224:                                      ; preds = %if.end.1221, %if.end.1215
  br i1 true, label %if.then.1225, label %if.end.1234

if.then.1225:                                     ; preds = %if.end.1224
  %call1227 = call i32 @strncmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1228 = icmp ne i32 %call1227, 0
  br i1 %cmp1228, label %if.then.1229, label %if.end.1230

if.then.1229:                                     ; preds = %if.then.1225
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 407, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1230:                                      ; preds = %if.then.1225
  %arrayidx1231 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 74
  %506 = load %union.tree_node*, %union.tree_node** %arrayidx1231, align 8
  %arrayidx1232 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 74
  %507 = load %union.tree_node*, %union.tree_node** %arrayidx1232, align 8
  %call1233 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.149, i32 0, i64 10), %union.tree_node* %506, %union.tree_node* %507, i32 71, i32 1, i32 1, i32 1, i32 0)
  store %union.tree_node* %call1233, %union.tree_node** %decl1226, align 8
  %508 = load %union.tree_node*, %union.tree_node** %decl1226, align 8
  store %union.tree_node* %508, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 71), align 8
  br label %if.end.1234

if.end.1234:                                      ; preds = %if.end.1230, %if.end.1224
  br i1 true, label %if.then.1235, label %if.end.1243

if.then.1235:                                     ; preds = %if.end.1234
  %call1237 = call i32 @strncmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1238 = icmp ne i32 %call1237, 0
  br i1 %cmp1238, label %if.then.1239, label %if.end.1240

if.then.1239:                                     ; preds = %if.then.1235
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 410, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1240:                                      ; preds = %if.then.1235
  %arrayidx1241 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 55
  %509 = load %union.tree_node*, %union.tree_node** %arrayidx1241, align 8
  %call1242 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i32 0), %union.tree_node* %509, i32 72, i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i64 10))
  store %union.tree_node* %call1242, %union.tree_node** %decl1236, align 8
  %510 = load %union.tree_node*, %union.tree_node** %decl1236, align 8
  store %union.tree_node* %510, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 72), align 8
  br label %if.end.1243

if.end.1243:                                      ; preds = %if.end.1240, %if.end.1234
  br i1 true, label %if.then.1244, label %if.end.1253

if.then.1244:                                     ; preds = %if.end.1243
  %call1246 = call i32 @strncmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1247 = icmp ne i32 %call1246, 0
  br i1 %cmp1247, label %if.then.1248, label %if.end.1249

if.then.1248:                                     ; preds = %if.then.1244
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 420, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1249:                                      ; preds = %if.then.1244
  %arrayidx1250 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 54
  %511 = load %union.tree_node*, %union.tree_node** %arrayidx1250, align 8
  %arrayidx1251 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %512 = load %union.tree_node*, %union.tree_node** %arrayidx1251, align 8
  %call1252 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.151, i32 0, i64 10), %union.tree_node* %511, %union.tree_node* %512, i32 73, i32 3, i32 1, i32 1, i32 0)
  store %union.tree_node* %call1252, %union.tree_node** %decl1245, align 8
  %513 = load %union.tree_node*, %union.tree_node** %decl1245, align 8
  store %union.tree_node* %513, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 73), align 8
  br label %if.end.1253

if.end.1253:                                      ; preds = %if.end.1249, %if.end.1243
  br i1 true, label %if.then.1254, label %if.end.1262

if.then.1254:                                     ; preds = %if.end.1253
  %call1256 = call i32 @strncmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1257 = icmp ne i32 %call1256, 0
  br i1 %cmp1257, label %if.then.1258, label %if.end.1259

if.then.1258:                                     ; preds = %if.then.1254
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 423, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1259:                                      ; preds = %if.then.1254
  %arrayidx1260 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 68
  %514 = load %union.tree_node*, %union.tree_node** %arrayidx1260, align 8
  %call1261 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.152, i32 0, i32 0), %union.tree_node* %514, i32 74, i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.152, i32 0, i64 10))
  store %union.tree_node* %call1261, %union.tree_node** %decl1255, align 8
  %515 = load %union.tree_node*, %union.tree_node** %decl1255, align 8
  store %union.tree_node* %515, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 74), align 8
  br label %if.end.1262

if.end.1262:                                      ; preds = %if.end.1259, %if.end.1253
  br i1 true, label %if.then.1263, label %if.end.1272

if.then.1263:                                     ; preds = %if.end.1262
  %call1265 = call i32 @strncmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1266 = icmp ne i32 %call1265, 0
  br i1 %cmp1266, label %if.then.1267, label %if.end.1268

if.then.1267:                                     ; preds = %if.then.1263
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 426, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1268:                                      ; preds = %if.then.1263
  %arrayidx1269 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 75
  %516 = load %union.tree_node*, %union.tree_node** %arrayidx1269, align 8
  %arrayidx1270 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 75
  %517 = load %union.tree_node*, %union.tree_node** %arrayidx1270, align 8
  %call1271 = call %union.tree_node* @builtin_function_2(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.153, i32 0, i64 10), %union.tree_node* %516, %union.tree_node* %517, i32 75, i32 1, i32 1, i32 1, i32 0)
  store %union.tree_node* %call1271, %union.tree_node** %decl1264, align 8
  %518 = load %union.tree_node*, %union.tree_node** %decl1264, align 8
  store %union.tree_node* %518, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 75), align 8
  br label %if.end.1272

if.end.1272:                                      ; preds = %if.end.1268, %if.end.1262
  br i1 true, label %if.then.1273, label %if.end.1281

if.then.1273:                                     ; preds = %if.end.1272
  %call1275 = call i32 @strncmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1276 = icmp ne i32 %call1275, 0
  br i1 %cmp1276, label %if.then.1277, label %if.end.1278

if.then.1277:                                     ; preds = %if.then.1273
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 431, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1278:                                      ; preds = %if.then.1273
  %arrayidx1279 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %519 = load %union.tree_node*, %union.tree_node** %arrayidx1279, align 8
  %call1280 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.154, i32 0, i32 0), %union.tree_node* %519, i32 76, i32 3, i8* null)
  store %union.tree_node* %call1280, %union.tree_node** %decl1274, align 8
  %520 = load %union.tree_node*, %union.tree_node** %decl1274, align 8
  store %union.tree_node* %520, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 76), align 8
  br label %if.end.1281

if.end.1281:                                      ; preds = %if.end.1278, %if.end.1272
  br i1 true, label %if.then.1282, label %if.end.1290

if.then.1282:                                     ; preds = %if.end.1281
  %call1284 = call i32 @strncmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1285 = icmp ne i32 %call1284, 0
  br i1 %cmp1285, label %if.then.1286, label %if.end.1287

if.then.1286:                                     ; preds = %if.then.1282
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 434, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1287:                                      ; preds = %if.then.1282
  %arrayidx1288 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %521 = load %union.tree_node*, %union.tree_node** %arrayidx1288, align 8
  %call1289 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.155, i32 0, i32 0), %union.tree_node* %521, i32 77, i32 3, i8* null)
  store %union.tree_node* %call1289, %union.tree_node** %decl1283, align 8
  %522 = load %union.tree_node*, %union.tree_node** %decl1283, align 8
  store %union.tree_node* %522, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 77), align 8
  br label %if.end.1290

if.end.1290:                                      ; preds = %if.end.1287, %if.end.1281
  br i1 true, label %if.then.1291, label %if.end.1299

if.then.1291:                                     ; preds = %if.end.1290
  %call1293 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1294 = icmp ne i32 %call1293, 0
  br i1 %cmp1294, label %if.then.1295, label %if.end.1296

if.then.1295:                                     ; preds = %if.then.1291
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 437, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1296:                                      ; preds = %if.then.1291
  %arrayidx1297 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %523 = load %union.tree_node*, %union.tree_node** %arrayidx1297, align 8
  %call1298 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.156, i32 0, i32 0), %union.tree_node* %523, i32 78, i32 3, i8* null)
  store %union.tree_node* %call1298, %union.tree_node** %decl1292, align 8
  %524 = load %union.tree_node*, %union.tree_node** %decl1292, align 8
  store %union.tree_node* %524, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 78), align 8
  br label %if.end.1299

if.end.1299:                                      ; preds = %if.end.1296, %if.end.1290
  br i1 true, label %if.then.1300, label %if.end.1308

if.then.1300:                                     ; preds = %if.end.1299
  %call1302 = call i32 @strncmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1303 = icmp ne i32 %call1302, 0
  br i1 %cmp1303, label %if.then.1304, label %if.end.1305

if.then.1304:                                     ; preds = %if.then.1300
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 440, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1305:                                      ; preds = %if.then.1300
  %arrayidx1306 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %525 = load %union.tree_node*, %union.tree_node** %arrayidx1306, align 8
  %call1307 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.157, i32 0, i32 0), %union.tree_node* %525, i32 79, i32 3, i8* null)
  store %union.tree_node* %call1307, %union.tree_node** %decl1301, align 8
  %526 = load %union.tree_node*, %union.tree_node** %decl1301, align 8
  store %union.tree_node* %526, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 79), align 8
  br label %if.end.1308

if.end.1308:                                      ; preds = %if.end.1305, %if.end.1299
  br i1 true, label %if.then.1309, label %if.end.1317

if.then.1309:                                     ; preds = %if.end.1308
  %call1311 = call i32 @strncmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1312 = icmp ne i32 %call1311, 0
  br i1 %cmp1312, label %if.then.1313, label %if.end.1314

if.then.1313:                                     ; preds = %if.then.1309
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 443, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1314:                                      ; preds = %if.then.1309
  %arrayidx1315 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %527 = load %union.tree_node*, %union.tree_node** %arrayidx1315, align 8
  %call1316 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.158, i32 0, i32 0), %union.tree_node* %527, i32 80, i32 3, i8* null)
  store %union.tree_node* %call1316, %union.tree_node** %decl1310, align 8
  %528 = load %union.tree_node*, %union.tree_node** %decl1310, align 8
  store %union.tree_node* %528, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 80), align 8
  br label %if.end.1317

if.end.1317:                                      ; preds = %if.end.1314, %if.end.1308
  br i1 true, label %if.then.1318, label %if.end.1326

if.then.1318:                                     ; preds = %if.end.1317
  %call1320 = call i32 @strncmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1321 = icmp ne i32 %call1320, 0
  br i1 %cmp1321, label %if.then.1322, label %if.end.1323

if.then.1322:                                     ; preds = %if.then.1318
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 446, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1323:                                      ; preds = %if.then.1318
  %arrayidx1324 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 70
  %529 = load %union.tree_node*, %union.tree_node** %arrayidx1324, align 8
  %call1325 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.159, i32 0, i32 0), %union.tree_node* %529, i32 81, i32 3, i8* null)
  store %union.tree_node* %call1325, %union.tree_node** %decl1319, align 8
  %530 = load %union.tree_node*, %union.tree_node** %decl1319, align 8
  store %union.tree_node* %530, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 81), align 8
  br label %if.end.1326

if.end.1326:                                      ; preds = %if.end.1323, %if.end.1317
  br i1 true, label %if.then.1327, label %if.end.1335

if.then.1327:                                     ; preds = %if.end.1326
  %call1329 = call i32 @strncmp(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1330 = icmp ne i32 %call1329, 0
  br i1 %cmp1330, label %if.then.1331, label %if.end.1332

if.then.1331:                                     ; preds = %if.then.1327
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 451, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1332:                                      ; preds = %if.then.1327
  %arrayidx1333 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 23
  %531 = load %union.tree_node*, %union.tree_node** %arrayidx1333, align 8
  %call1334 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i32 0, i32 0), %union.tree_node* %531, i32 82, i32 3, i8* null)
  store %union.tree_node* %call1334, %union.tree_node** %decl1328, align 8
  %532 = load %union.tree_node*, %union.tree_node** %decl1328, align 8
  store %union.tree_node* %532, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 82), align 8
  br label %if.end.1335

if.end.1335:                                      ; preds = %if.end.1332, %if.end.1326
  br i1 true, label %if.then.1336, label %if.end.1344

if.then.1336:                                     ; preds = %if.end.1335
  %call1338 = call i32 @strncmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1339 = icmp ne i32 %call1338, 0
  br i1 %cmp1339, label %if.then.1340, label %if.end.1341

if.then.1340:                                     ; preds = %if.then.1336
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 454, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1341:                                      ; preds = %if.then.1336
  %arrayidx1342 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 24
  %533 = load %union.tree_node*, %union.tree_node** %arrayidx1342, align 8
  %call1343 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.161, i32 0, i32 0), %union.tree_node* %533, i32 83, i32 3, i8* null)
  store %union.tree_node* %call1343, %union.tree_node** %decl1337, align 8
  %534 = load %union.tree_node*, %union.tree_node** %decl1337, align 8
  store %union.tree_node* %534, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 83), align 8
  br label %if.end.1344

if.end.1344:                                      ; preds = %if.end.1341, %if.end.1335
  br i1 true, label %if.then.1345, label %if.end.1353

if.then.1345:                                     ; preds = %if.end.1344
  %call1347 = call i32 @strncmp(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1348 = icmp ne i32 %call1347, 0
  br i1 %cmp1348, label %if.then.1349, label %if.end.1350

if.then.1349:                                     ; preds = %if.then.1345
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 457, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1350:                                      ; preds = %if.then.1345
  %arrayidx1351 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 25
  %535 = load %union.tree_node*, %union.tree_node** %arrayidx1351, align 8
  %call1352 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.162, i32 0, i32 0), %union.tree_node* %535, i32 84, i32 3, i8* null)
  store %union.tree_node* %call1352, %union.tree_node** %decl1346, align 8
  %536 = load %union.tree_node*, %union.tree_node** %decl1346, align 8
  store %union.tree_node* %536, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 84), align 8
  br label %if.end.1353

if.end.1353:                                      ; preds = %if.end.1350, %if.end.1344
  br i1 true, label %if.then.1354, label %if.end.1362

if.then.1354:                                     ; preds = %if.end.1353
  %call1356 = call i32 @strncmp(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1357 = icmp ne i32 %call1356, 0
  br i1 %cmp1357, label %if.then.1358, label %if.end.1359

if.then.1358:                                     ; preds = %if.then.1354
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 460, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1359:                                      ; preds = %if.then.1354
  %arrayidx1360 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 42
  %537 = load %union.tree_node*, %union.tree_node** %arrayidx1360, align 8
  %call1361 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.163, i32 0, i32 0), %union.tree_node* %537, i32 85, i32 3, i8* null)
  store %union.tree_node* %call1361, %union.tree_node** %decl1355, align 8
  %538 = load %union.tree_node*, %union.tree_node** %decl1355, align 8
  store %union.tree_node* %538, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 85), align 8
  br label %if.end.1362

if.end.1362:                                      ; preds = %if.end.1359, %if.end.1353
  br i1 true, label %if.then.1363, label %if.end.1371

if.then.1363:                                     ; preds = %if.end.1362
  %call1365 = call i32 @strncmp(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1366 = icmp ne i32 %call1365, 0
  br i1 %cmp1366, label %if.then.1367, label %if.end.1368

if.then.1367:                                     ; preds = %if.then.1363
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 463, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1368:                                      ; preds = %if.then.1363
  %arrayidx1369 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 45
  %539 = load %union.tree_node*, %union.tree_node** %arrayidx1369, align 8
  %call1370 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.164, i32 0, i32 0), %union.tree_node* %539, i32 86, i32 3, i8* null)
  store %union.tree_node* %call1370, %union.tree_node** %decl1364, align 8
  %540 = load %union.tree_node*, %union.tree_node** %decl1364, align 8
  store %union.tree_node* %540, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 86), align 8
  br label %if.end.1371

if.end.1371:                                      ; preds = %if.end.1368, %if.end.1362
  br i1 true, label %if.then.1372, label %if.end.1380

if.then.1372:                                     ; preds = %if.end.1371
  %call1374 = call i32 @strncmp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1375 = icmp ne i32 %call1374, 0
  br i1 %cmp1375, label %if.then.1376, label %if.end.1377

if.then.1376:                                     ; preds = %if.then.1372
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 466, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1377:                                      ; preds = %if.then.1372
  %arrayidx1378 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 45
  %541 = load %union.tree_node*, %union.tree_node** %arrayidx1378, align 8
  %call1379 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.165, i32 0, i32 0), %union.tree_node* %541, i32 87, i32 3, i8* null)
  store %union.tree_node* %call1379, %union.tree_node** %decl1373, align 8
  %542 = load %union.tree_node*, %union.tree_node** %decl1373, align 8
  store %union.tree_node* %542, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 87), align 8
  br label %if.end.1380

if.end.1380:                                      ; preds = %if.end.1377, %if.end.1371
  br i1 true, label %if.then.1381, label %if.end.1389

if.then.1381:                                     ; preds = %if.end.1380
  %call1383 = call i32 @strncmp(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1384 = icmp ne i32 %call1383, 0
  br i1 %cmp1384, label %if.then.1385, label %if.end.1386

if.then.1385:                                     ; preds = %if.then.1381
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 469, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1386:                                      ; preds = %if.then.1381
  %arrayidx1387 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 56
  %543 = load %union.tree_node*, %union.tree_node** %arrayidx1387, align 8
  %call1388 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.166, i32 0, i32 0), %union.tree_node* %543, i32 88, i32 3, i8* null)
  store %union.tree_node* %call1388, %union.tree_node** %decl1382, align 8
  %544 = load %union.tree_node*, %union.tree_node** %decl1382, align 8
  store %union.tree_node* %544, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 88), align 8
  br label %if.end.1389

if.end.1389:                                      ; preds = %if.end.1386, %if.end.1380
  br i1 true, label %if.then.1390, label %if.end.1398

if.then.1390:                                     ; preds = %if.end.1389
  %call1392 = call i32 @strncmp(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1393 = icmp ne i32 %call1392, 0
  br i1 %cmp1393, label %if.then.1394, label %if.end.1395

if.then.1394:                                     ; preds = %if.then.1390
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 472, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1395:                                      ; preds = %if.then.1390
  %arrayidx1396 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 40
  %545 = load %union.tree_node*, %union.tree_node** %arrayidx1396, align 8
  %call1397 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.167, i32 0, i32 0), %union.tree_node* %545, i32 89, i32 3, i8* null)
  store %union.tree_node* %call1397, %union.tree_node** %decl1391, align 8
  %546 = load %union.tree_node*, %union.tree_node** %decl1391, align 8
  store %union.tree_node* %546, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 89), align 8
  br label %if.end.1398

if.end.1398:                                      ; preds = %if.end.1395, %if.end.1389
  br i1 true, label %if.then.1399, label %if.end.1407

if.then.1399:                                     ; preds = %if.end.1398
  %call1401 = call i32 @strncmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1402 = icmp ne i32 %call1401, 0
  br i1 %cmp1402, label %if.then.1403, label %if.end.1404

if.then.1403:                                     ; preds = %if.then.1399
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 476, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1404:                                      ; preds = %if.then.1399
  %arrayidx1405 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 46
  %547 = load %union.tree_node*, %union.tree_node** %arrayidx1405, align 8
  %call1406 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.168, i32 0, i32 0), %union.tree_node* %547, i32 90, i32 3, i8* null)
  store %union.tree_node* %call1406, %union.tree_node** %decl1400, align 8
  %548 = load %union.tree_node*, %union.tree_node** %decl1400, align 8
  store %union.tree_node* %548, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 90), align 8
  br label %if.end.1407

if.end.1407:                                      ; preds = %if.end.1404, %if.end.1398
  br i1 true, label %if.then.1408, label %if.end.1416

if.then.1408:                                     ; preds = %if.end.1407
  %call1410 = call i32 @strncmp(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1411 = icmp ne i32 %call1410, 0
  br i1 %cmp1411, label %if.then.1412, label %if.end.1413

if.then.1412:                                     ; preds = %if.then.1408
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 479, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1413:                                      ; preds = %if.then.1408
  %arrayidx1414 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 72
  %549 = load %union.tree_node*, %union.tree_node** %arrayidx1414, align 8
  %call1415 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i32 0, i32 0), %union.tree_node* %549, i32 91, i32 3, i8* null)
  store %union.tree_node* %call1415, %union.tree_node** %decl1409, align 8
  %550 = load %union.tree_node*, %union.tree_node** %decl1409, align 8
  store %union.tree_node* %550, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 91), align 8
  br label %if.end.1416

if.end.1416:                                      ; preds = %if.end.1413, %if.end.1407
  br i1 true, label %if.then.1417, label %if.end.1425

if.then.1417:                                     ; preds = %if.end.1416
  %call1419 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1420 = icmp ne i32 %call1419, 0
  br i1 %cmp1420, label %if.then.1421, label %if.end.1422

if.then.1421:                                     ; preds = %if.then.1417
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 482, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1422:                                      ; preds = %if.then.1417
  %arrayidx1423 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 46
  %551 = load %union.tree_node*, %union.tree_node** %arrayidx1423, align 8
  %call1424 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i32 0, i32 0), %union.tree_node* %551, i32 92, i32 3, i8* null)
  store %union.tree_node* %call1424, %union.tree_node** %decl1418, align 8
  %552 = load %union.tree_node*, %union.tree_node** %decl1418, align 8
  store %union.tree_node* %552, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 92), align 8
  br label %if.end.1425

if.end.1425:                                      ; preds = %if.end.1422, %if.end.1416
  br i1 true, label %if.then.1426, label %if.end.1434

if.then.1426:                                     ; preds = %if.end.1425
  %call1428 = call i32 @strncmp(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1429 = icmp ne i32 %call1428, 0
  br i1 %cmp1429, label %if.then.1430, label %if.end.1431

if.then.1430:                                     ; preds = %if.then.1426
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 485, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1431:                                      ; preds = %if.then.1426
  %arrayidx1432 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 57
  %553 = load %union.tree_node*, %union.tree_node** %arrayidx1432, align 8
  %call1433 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.171, i32 0, i32 0), %union.tree_node* %553, i32 93, i32 3, i8* null)
  store %union.tree_node* %call1433, %union.tree_node** %decl1427, align 8
  %554 = load %union.tree_node*, %union.tree_node** %decl1427, align 8
  store %union.tree_node* %554, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 93), align 8
  br label %if.end.1434

if.end.1434:                                      ; preds = %if.end.1431, %if.end.1425
  br i1 true, label %if.then.1435, label %if.end.1443

if.then.1435:                                     ; preds = %if.end.1434
  %call1437 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp1438 = icmp ne i32 %call1437, 0
  br i1 %cmp1438, label %if.then.1439, label %if.end.1440

if.then.1439:                                     ; preds = %if.then.1435
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i32 488, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.c_common_nodes_and_builtins, i32 0, i32 0)) #7
  unreachable

if.end.1440:                                      ; preds = %if.then.1435
  %arrayidx1441 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 58
  %555 = load %union.tree_node*, %union.tree_node** %arrayidx1441, align 8
  %call1442 = call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.172, i32 0, i32 0), %union.tree_node* %555, i32 94, i32 3, i8* null)
  store %union.tree_node* %call1442, %union.tree_node** %decl1436, align 8
  %556 = load %union.tree_node*, %union.tree_node** %decl1436, align 8
  store %union.tree_node* %556, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 94), align 8
  br label %if.end.1443

if.end.1443:                                      ; preds = %if.end.1440, %if.end.1434
  %arrayidx1444 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 47
  %557 = load %union.tree_node*, %union.tree_node** %arrayidx1444, align 8
  %call1445 = call %union.tree_node* @builtin_function_2(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), %union.tree_node* null, %union.tree_node* %557, i32 0, i32 0, i32 0, i32 1, i32 1)
  %arrayidx1446 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 47
  %558 = load %union.tree_node*, %union.tree_node** %arrayidx1446, align 8
  %559 = load i32, i32* @flag_isoc99, align 4
  %tobool1447 = icmp ne i32 %559, 0
  %lnot1448 = xor i1 %tobool1447, true
  %lnot.ext1449 = zext i1 %lnot1448 to i32
  %call1450 = call %union.tree_node* @builtin_function_2(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), %union.tree_node* null, %union.tree_node* %558, i32 0, i32 0, i32 0, i32 %lnot.ext1449, i32 1)
  %560 = load i32, i32* @c_language, align 4
  %cmp1451 = icmp eq i32 %560, 1
  br i1 %cmp1451, label %cond.true.1452, label %cond.false.1454

cond.true.1452:                                   ; preds = %if.end.1443
  %arrayidx1453 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 23
  %561 = load %union.tree_node*, %union.tree_node** %arrayidx1453, align 8
  br label %cond.end.1456

cond.false.1454:                                  ; preds = %if.end.1443
  %arrayidx1455 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 69
  %562 = load %union.tree_node*, %union.tree_node** %arrayidx1455, align 8
  br label %cond.end.1456

cond.end.1456:                                    ; preds = %cond.false.1454, %cond.true.1452
  %cond1457 = phi %union.tree_node* [ %561, %cond.true.1452 ], [ %562, %cond.false.1454 ]
  %call1458 = call %union.tree_node* @builtin_function_2(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i32 0, i32 0), %union.tree_node* null, %union.tree_node* %cond1457, i32 0, i32 0, i32 0, i32 0, i32 1)
  %563 = load i32, i32* @c_language, align 4
  %cmp1459 = icmp eq i32 %563, 1
  br i1 %cmp1459, label %cond.true.1460, label %cond.false.1462

cond.true.1460:                                   ; preds = %cond.end.1456
  %arrayidx1461 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 47
  %564 = load %union.tree_node*, %union.tree_node** %arrayidx1461, align 8
  br label %cond.end.1464

cond.false.1462:                                  ; preds = %cond.end.1456
  %arrayidx1463 = getelementptr inbounds [78 x %union.tree_node*], [78 x %union.tree_node*]* %builtin_types, i32 0, i64 69
  %565 = load %union.tree_node*, %union.tree_node** %arrayidx1463, align 8
  br label %cond.end.1464

cond.end.1464:                                    ; preds = %cond.false.1462, %cond.true.1460
  %cond1465 = phi %union.tree_node* [ %564, %cond.true.1460 ], [ %565, %cond.false.1462 ]
  %call1466 = call %union.tree_node* @builtin_function_2(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), %union.tree_node* null, %union.tree_node* %cond1465, i32 0, i32 0, i32 0, i32 0, i32 1)
  %call1467 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0))
  store %union.tree_node* %call1467, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  store %union.tree_node* (%union.tree_node*)* @simple_type_promotes_to, %union.tree_node* (%union.tree_node*)** @lang_type_promotes_to, align 8
  ret void
}

declare void @record_builtin_type(i32, i8*, %union.tree_node*) #1

declare %union.tree_node* @pushdecl(%union.tree_node*) #1

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @get_identifier(i8*) #1

declare %union.tree_node* @make_signed_type(i32) #1

declare %union.tree_node* @make_unsigned_type(i32) #1

declare %union.tree_node* @identifier_global_value(%union.tree_node*) #1

declare void @set_sizetype(%union.tree_node*) #1

declare void @build_common_tree_nodes_2(i32) #1

declare %union.tree_node* @build_void_list_node() #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_reference_type(%union.tree_node*) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #5

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @builtin_function_2(i8* %builtin_name, i8* %name, %union.tree_node* %builtin_type, %union.tree_node* %type, i32 %function_code, i32 %class, i32 %library_name_p, i32 %nonansi_p, i32 %noreturn_p) #0 {
entry:
  %builtin_name.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %builtin_type.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %function_code.addr = alloca i32, align 4
  %class.addr = alloca i32, align 4
  %library_name_p.addr = alloca i32, align 4
  %nonansi_p.addr = alloca i32, align 4
  %noreturn_p.addr = alloca i32, align 4
  %bdecl = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store i8* %builtin_name, i8** %builtin_name.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store %union.tree_node* %builtin_type, %union.tree_node** %builtin_type.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store i32 %function_code, i32* %function_code.addr, align 4
  store i32 %class, i32* %class.addr, align 4
  store i32 %library_name_p, i32* %library_name_p.addr, align 4
  store i32 %nonansi_p, i32* %nonansi_p.addr, align 4
  store i32 %noreturn_p, i32* %noreturn_p.addr, align 4
  store %union.tree_node* null, %union.tree_node** %bdecl, align 8
  store %union.tree_node* null, %union.tree_node** %decl, align 8
  %0 = load i8*, i8** %builtin_name.addr, align 8
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %if.then, label %if.end.7

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %builtin_name.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %builtin_type.addr, align 8
  %3 = load i32, i32* %function_code.addr, align 4
  %4 = load i32, i32* %class.addr, align 4
  %5 = load i32, i32* %library_name_p.addr, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %6 = load i8*, i8** %name.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ null, %cond.false ]
  %call = call %union.tree_node* @builtin_function(i8* %1, %union.tree_node* %2, i32 %3, i32 %4, i8* %cond)
  store %union.tree_node* %call, %union.tree_node** %bdecl, align 8
  %7 = load i32, i32* %noreturn_p.addr, align 4
  %tobool1 = icmp ne i32 %7, 0
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %cond.end
  %8 = load %union.tree_node*, %union.tree_node** %bdecl, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %volatile_flag, align 8
  %bf.clear = and i32 %bf.load, -2049
  %bf.set = or i32 %bf.clear, 2048
  store i32 %bf.set, i32* %volatile_flag, align 8
  %9 = load %union.tree_node*, %union.tree_node** %bdecl, align 8
  %common3 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load4 = load i32, i32* %side_effects_flag, align 8
  %bf.clear5 = and i32 %bf.load4, -257
  %bf.set6 = or i32 %bf.clear5, 256
  store i32 %bf.set6, i32* %side_effects_flag, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.2, %cond.end
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %entry
  %10 = load i8*, i8** %name.addr, align 8
  %cmp8 = icmp ne i8* %10, null
  br i1 %cmp8, label %land.lhs.true, label %if.end.38

land.lhs.true:                                    ; preds = %if.end.7
  %11 = load i32, i32* @flag_no_builtin, align 4
  %tobool9 = icmp ne i32 %11, 0
  br i1 %tobool9, label %if.end.38, label %land.lhs.true.10

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %12 = load i8*, i8** %name.addr, align 8
  %call11 = call zeroext i1 @builtin_function_disabled_p(i8* %12)
  br i1 %call11, label %if.end.38, label %land.lhs.true.12

land.lhs.true.12:                                 ; preds = %land.lhs.true.10
  %13 = load i32, i32* %nonansi_p.addr, align 4
  %tobool13 = icmp ne i32 %13, 0
  br i1 %tobool13, label %land.lhs.true.14, label %if.then.16

land.lhs.true.14:                                 ; preds = %land.lhs.true.12
  %14 = load i32, i32* @flag_no_nonansi_builtin, align 4
  %tobool15 = icmp ne i32 %14, 0
  br i1 %tobool15, label %if.end.38, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true.14, %land.lhs.true.12
  %15 = load i8*, i8** %name.addr, align 8
  %16 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %17 = load i32, i32* %function_code.addr, align 4
  %18 = load i32, i32* %class.addr, align 4
  %call17 = call %union.tree_node* @builtin_function(i8* %15, %union.tree_node* %16, i32 %17, i32 %18, i8* null)
  store %union.tree_node* %call17, %union.tree_node** %decl, align 8
  %19 = load i32, i32* %nonansi_p.addr, align 4
  %tobool18 = icmp ne i32 %19, 0
  br i1 %tobool18, label %if.then.19, label %if.end.24

if.then.19:                                       ; preds = %if.then.16
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common20 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load21 = load i32, i32* %unsigned_flag, align 8
  %bf.clear22 = and i32 %bf.load21, -8193
  %bf.set23 = or i32 %bf.clear22, 8192
  store i32 %bf.set23, i32* %unsigned_flag, align 8
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.19, %if.then.16
  %21 = load i32, i32* %noreturn_p.addr, align 4
  %tobool25 = icmp ne i32 %21, 0
  br i1 %tobool25, label %if.then.26, label %if.end.37

if.then.26:                                       ; preds = %if.end.24
  %22 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common27 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %volatile_flag28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load29 = load i32, i32* %volatile_flag28, align 8
  %bf.clear30 = and i32 %bf.load29, -2049
  %bf.set31 = or i32 %bf.clear30, 2048
  store i32 %bf.set31, i32* %volatile_flag28, align 8
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common32 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %side_effects_flag33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 2
  %bf.load34 = load i32, i32* %side_effects_flag33, align 8
  %bf.clear35 = and i32 %bf.load34, -257
  %bf.set36 = or i32 %bf.clear35, 256
  store i32 %bf.set36, i32* %side_effects_flag33, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.26, %if.end.24
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %land.lhs.true.14, %land.lhs.true.10, %land.lhs.true, %if.end.7
  %24 = load %union.tree_node*, %union.tree_node** %bdecl, align 8
  %cmp39 = icmp ne %union.tree_node* %24, null
  br i1 %cmp39, label %cond.true.40, label %cond.false.41

cond.true.40:                                     ; preds = %if.end.38
  %25 = load %union.tree_node*, %union.tree_node** %bdecl, align 8
  br label %cond.end.42

cond.false.41:                                    ; preds = %if.end.38
  %26 = load %union.tree_node*, %union.tree_node** %decl, align 8
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.false.41, %cond.true.40
  %cond43 = phi %union.tree_node* [ %25, %cond.true.40 ], [ %26, %cond.false.41 ]
  ret %union.tree_node* %cond43
}

declare %union.tree_node* @builtin_function(i8*, %union.tree_node*, i32, i32, i8*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @simple_type_promotes_to(%union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type1 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i32 0, i32 15
  %1 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp = icmp eq %union.tree_node* %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  store %union.tree_node* %3, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %4)
  br i1 %call, label %if.then.2, label %if.end.14

if.then.2:                                        ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.13

land.lhs.true:                                    ; preds = %if.then.2
  %6 = load i32, i32* @flag_traditional, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type4 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i32 0, i32 6
  %bf.load5 = load i32, i32* %precision, align 4
  %bf.clear6 = and i32 %bf.load5, 511
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type7 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %precision8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 6
  %bf.load9 = load i32, i32* %precision8, align 4
  %bf.clear10 = and i32 %bf.load9, 511
  %cmp11 = icmp eq i32 %bf.clear6, %bf.clear10
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.13:                                        ; preds = %lor.lhs.false, %if.then.2
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %10, %union.tree_node** %retval
  br label %return

if.end.14:                                        ; preds = %if.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.end.13, %if.then.12, %if.then
  %11 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %11
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_va_arg(%union.tree_node* %expr, %union.tree_node* %type) #0 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call %union.tree_node* @build1(i32 133, %union.tree_node* %0, %union.tree_node* %1)
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define void @disable_builtin_function(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %new = alloca %struct.disabled_builtin*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.178, i32 0, i32 0), i8* %1)
  br label %if.end

if.else:                                          ; preds = %entry
  %call1 = call noalias i8* @xmalloc(i64 16)
  %2 = bitcast i8* %call1 to %struct.disabled_builtin*
  store %struct.disabled_builtin* %2, %struct.disabled_builtin** %new, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %4 = load %struct.disabled_builtin*, %struct.disabled_builtin** %new, align 8
  %name2 = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %4, i32 0, i32 0
  store i8* %3, i8** %name2, align 8
  %5 = load %struct.disabled_builtin*, %struct.disabled_builtin** @disabled_builtins, align 8
  %6 = load %struct.disabled_builtin*, %struct.disabled_builtin** %new, align 8
  %next = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %6, i32 0, i32 1
  store %struct.disabled_builtin* %5, %struct.disabled_builtin** %next, align 8
  %7 = load %struct.disabled_builtin*, %struct.disabled_builtin** %new, align 8
  store %struct.disabled_builtin* %7, %struct.disabled_builtin** @disabled_builtins, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %t) #0 {
entry:
  %retval = alloca i1, align 1
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 6, label %sw.bb
    i32 10, label %sw.bb.24
    i32 11, label %sw.bb.34
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type = bitcast %union.tree_node* %1 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 15
  %2 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %2, %3
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type1 = bitcast %union.tree_node* %4 to %struct.tree_type*
  %main_variant2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i32 0, i32 15
  %5 = load %union.tree_node*, %union.tree_node** %main_variant2, align 8
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  %cmp3 = icmp eq %union.tree_node* %5, %6
  br i1 %cmp3, label %lor.end, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type5 = bitcast %union.tree_node* %7 to %struct.tree_type*
  %main_variant6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 15
  %8 = load %union.tree_node*, %union.tree_node** %main_variant6, align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  %cmp7 = icmp eq %union.tree_node* %8, %9
  br i1 %cmp7, label %lor.end, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false.4
  %10 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type9 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %main_variant10 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type9, i32 0, i32 15
  %11 = load %union.tree_node*, %union.tree_node** %main_variant10, align 8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  %cmp11 = icmp eq %union.tree_node* %11, %12
  br i1 %cmp11, label %lor.end, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.8
  %13 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type13 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %main_variant14 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 15
  %14 = load %union.tree_node*, %union.tree_node** %main_variant14, align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  %cmp15 = icmp eq %union.tree_node* %14, %15
  br i1 %cmp15, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.12
  %16 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type16 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i32 0, i32 6
  %bf.load17 = load i32, i32* %precision, align 4
  %bf.clear18 = and i32 %bf.load17, 511
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type19 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i32 0, i32 6
  %bf.load21 = load i32, i32* %precision20, align 4
  %bf.clear22 = and i32 %bf.load21, 511
  %cmp23 = icmp slt i32 %bf.clear18, %bf.clear22
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.12, %lor.lhs.false.8, %lor.lhs.false.4, %lor.lhs.false, %sw.bb
  %18 = phi i1 [ true, %lor.lhs.false.12 ], [ true, %lor.lhs.false.8 ], [ true, %lor.lhs.false.4 ], [ true, %lor.lhs.false ], [ true, %sw.bb ], [ %cmp23, %lor.rhs ]
  store i1 %18, i1* %retval
  br label %return

sw.bb.24:                                         ; preds = %entry
  %19 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type25 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %precision26 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i32 0, i32 6
  %bf.load27 = load i32, i32* %precision26, align 4
  %bf.clear28 = and i32 %bf.load27, 511
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type29 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %precision30 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i32 0, i32 6
  %bf.load31 = load i32, i32* %precision30, align 4
  %bf.clear32 = and i32 %bf.load31, 511
  %cmp33 = icmp slt i32 %bf.clear28, %bf.clear32
  store i1 %cmp33, i1* %retval
  br label %return

sw.bb.34:                                         ; preds = %entry
  store i1 true, i1* %retval
  br label %return

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.34, %sw.bb.24, %lor.end
  %21 = load i1, i1* %retval
  ret i1 %21
}

; Function Attrs: nounwind uwtable
define i32 @self_promoting_args_p(%union.tree_node* %parms) #0 {
entry:
  %retval = alloca i32, align 4
  %parms.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %parms, %union.tree_node** %parms.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %parms.addr, align 8
  store %union.tree_node* %0, %union.tree_node** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %3, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp = icmp eq %union.tree_node* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp1 = icmp ne %union.tree_node* %6, %7
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp2 = icmp eq %union.tree_node* %8, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type5 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 15
  %10 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp6 = icmp eq %union.tree_node* %10, %11
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  store i32 0, i32* %retval
  br label %return

if.end.8:                                         ; preds = %if.end.4
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %12)
  br i1 %call, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.8
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end.8
  br label %for.inc

for.inc:                                          ; preds = %if.end.10
  %13 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common11 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %chain12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 0
  %14 = load %union.tree_node*, %union.tree_node** %chain12, align 8
  store %union.tree_node* %14, %union.tree_node** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.9, %if.then.7, %if.then.3, %if.then
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @strip_array_types(%union.tree_node* %type) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8
  store %union.tree_node* %2, %union.tree_node** %type.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %3 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  ret %union.tree_node* %3
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @expand_tree_builtin(%union.tree_node* %function, %union.tree_node* %params, %union.tree_node* %coerced_params) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %function.addr = alloca %union.tree_node*, align 8
  %params.addr = alloca %union.tree_node*, align 8
  %coerced_params.addr = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %arg0 = alloca %union.tree_node*, align 8
  %arg1 = alloca %union.tree_node*, align 8
  store %union.tree_node* %function, %union.tree_node** %function.addr, align 8
  store %union.tree_node* %params, %union.tree_node** %params.addr, align 8
  store %union.tree_node* %coerced_params, %union.tree_node** %coerced_params.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %1 = bitcast i48* %built_in_class to i64*
  %bf.load = load i64, i64* %1, align 8
  %bf.lshr = lshr i64 %bf.load, 29
  %bf.clear = and i64 %bf.lshr, 3
  %bf.cast = trunc i64 %bf.clear to i32
  %cmp = icmp ne i32 %bf.cast, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl1 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %3 = load i32, i32* %f, align 4
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 8, label %sw.bb.5
    i32 9, label %sw.bb.5
    i32 10, label %sw.bb.5
    i32 11, label %sw.bb.12
    i32 12, label %sw.bb.12
    i32 13, label %sw.bb.12
    i32 14, label %sw.bb.19
    i32 15, label %sw.bb.19
    i32 16, label %sw.bb.19
    i32 76, label %sw.bb.26
    i32 77, label %sw.bb.27
    i32 78, label %sw.bb.28
    i32 79, label %sw.bb.29
    i32 80, label %sw.bb.30
    i32 81, label %sw.bb.31
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %4 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %cmp2 = icmp eq %union.tree_node* %4, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %sw.bb
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %5, %union.tree_node** %retval
  br label %return

if.end.4:                                         ; preds = %sw.bb
  %6 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %list = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call = call %union.tree_node* @build_unary_op(i32 80, %union.tree_node* %7, i32 0)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

sw.bb.5:                                          ; preds = %if.end, %if.end, %if.end
  %8 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %cmp6 = icmp eq %union.tree_node* %8, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %sw.bb.5
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end.8:                                         ; preds = %sw.bb.5
  %10 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %list9 = bitcast %union.tree_node* %10 to %struct.tree_list*
  %value10 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list9, i32 0, i32 2
  %11 = load %union.tree_node*, %union.tree_node** %value10, align 8
  %call11 = call %union.tree_node* @build_unary_op(i32 126, %union.tree_node* %11, i32 0)
  store %union.tree_node* %call11, %union.tree_node** %retval
  br label %return

sw.bb.12:                                         ; preds = %if.end, %if.end, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %cmp13 = icmp eq %union.tree_node* %12, null
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %sw.bb.12
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %13, %union.tree_node** %retval
  br label %return

if.end.15:                                        ; preds = %sw.bb.12
  %14 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %list16 = bitcast %union.tree_node* %14 to %struct.tree_list*
  %value17 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list16, i32 0, i32 2
  %15 = load %union.tree_node*, %union.tree_node** %value17, align 8
  %call18 = call %union.tree_node* @build_unary_op(i32 127, %union.tree_node* %15, i32 0)
  store %union.tree_node* %call18, %union.tree_node** %retval
  br label %return

sw.bb.19:                                         ; preds = %if.end, %if.end, %if.end
  %16 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %cmp20 = icmp eq %union.tree_node* %16, null
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %sw.bb.19
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %17, %union.tree_node** %retval
  br label %return

if.end.22:                                        ; preds = %sw.bb.19
  %18 = load %union.tree_node*, %union.tree_node** %coerced_params.addr, align 8
  %list23 = bitcast %union.tree_node* %18 to %struct.tree_list*
  %value24 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list23, i32 0, i32 2
  %19 = load %union.tree_node*, %union.tree_node** %value24, align 8
  %call25 = call %union.tree_node* @build_unary_op(i32 128, %union.tree_node* %19, i32 0)
  store %union.tree_node* %call25, %union.tree_node** %retval
  br label %return

sw.bb.26:                                         ; preds = %if.end
  store i32 106, i32* %code, align 4
  br label %unordered_cmp

sw.bb.27:                                         ; preds = %if.end
  store i32 105, i32* %code, align 4
  br label %unordered_cmp

sw.bb.28:                                         ; preds = %if.end
  store i32 108, i32* %code, align 4
  br label %unordered_cmp

sw.bb.29:                                         ; preds = %if.end
  store i32 107, i32* %code, align 4
  br label %unordered_cmp

sw.bb.30:                                         ; preds = %if.end
  store i32 109, i32* %code, align 4
  br label %unordered_cmp

sw.bb.31:                                         ; preds = %if.end
  store i32 103, i32* %code, align 4
  br label %unordered_cmp

unordered_cmp:                                    ; preds = %sw.bb.31, %sw.bb.30, %sw.bb.29, %sw.bb.28, %sw.bb.27, %sw.bb.26
  %20 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %cmp32 = icmp eq %union.tree_node* %20, null
  br i1 %cmp32, label %if.then.34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %unordered_cmp
  %21 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %common = bitcast %union.tree_node* %21 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %22 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp33 = icmp eq %union.tree_node* %22, null
  br i1 %cmp33, label %if.then.34, label %if.else

if.then.34:                                       ; preds = %lor.lhs.false, %unordered_cmp
  %23 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl35 = bitcast %union.tree_node* %23 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl35, i32 0, i32 8
  %24 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %24 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %25 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.179, i32 0, i32 0), i8* %25)
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %26, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %27 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %common36 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %chain37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 0
  %28 = load %union.tree_node*, %union.tree_node** %chain37, align 8
  %common38 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %chain39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 0
  %29 = load %union.tree_node*, %union.tree_node** %chain39, align 8
  %cmp40 = icmp ne %union.tree_node* %29, null
  br i1 %cmp40, label %if.then.41, label %if.end.47

if.then.41:                                       ; preds = %if.else
  %30 = load %union.tree_node*, %union.tree_node** %function.addr, align 8
  %decl42 = bitcast %union.tree_node* %30 to %struct.tree_decl*
  %name43 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl42, i32 0, i32 8
  %31 = load %union.tree_node*, %union.tree_node** %name43, align 8
  %identifier44 = bitcast %union.tree_node* %31 to %struct.tree_identifier*
  %id45 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier44, i32 0, i32 1
  %str46 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id45, i32 0, i32 1
  %32 = load i8*, i8** %str46, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.180, i32 0, i32 0), i8* %32)
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %33, %union.tree_node** %retval
  br label %return

if.end.47:                                        ; preds = %if.else
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47
  %34 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %list49 = bitcast %union.tree_node* %34 to %struct.tree_list*
  %value50 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list49, i32 0, i32 2
  %35 = load %union.tree_node*, %union.tree_node** %value50, align 8
  store %union.tree_node* %35, %union.tree_node** %arg0, align 8
  %36 = load %union.tree_node*, %union.tree_node** %params.addr, align 8
  %common51 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %chain52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 0
  %37 = load %union.tree_node*, %union.tree_node** %chain52, align 8
  %list53 = bitcast %union.tree_node* %37 to %struct.tree_list*
  %value54 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list53, i32 0, i32 2
  %38 = load %union.tree_node*, %union.tree_node** %value54, align 8
  store %union.tree_node* %38, %union.tree_node** %arg1, align 8
  %39 = load i32, i32* %code, align 4
  %40 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %41 = load %union.tree_node*, %union.tree_node** %arg1, align 8
  %call55 = call %union.tree_node* @build_binary_op(i32 %39, %union.tree_node* %40, %union.tree_node* %41, i32 0)
  store %union.tree_node* %call55, %union.tree_node** %arg0, align 8
  %42 = load i32, i32* %code, align 4
  %cmp56 = icmp ne i32 %42, 103
  br i1 %cmp56, label %if.then.57, label %if.end.59

if.then.57:                                       ; preds = %if.end.48
  %43 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  %call58 = call %union.tree_node* @build_unary_op(i32 96, %union.tree_node* %43, i32 0)
  store %union.tree_node* %call58, %union.tree_node** %arg0, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.57, %if.end.48
  %44 = load %union.tree_node*, %union.tree_node** %arg0, align 8
  store %union.tree_node* %44, %union.tree_node** %retval
  br label %return

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.end.59, %if.then.41, %if.then.34, %if.end.22, %if.then.21, %if.end.15, %if.then.14, %if.end.8, %if.then.7, %if.end.4, %if.then.3, %if.then
  %45 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %45
}

; Function Attrs: nounwind uwtable
define i32 @statement_code_p(i32 %code) #0 {
entry:
  %retval = alloca i32, align 4
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  switch i32 %0, label %sw.default [
    i32 171, label %sw.bb
    i32 152, label %sw.bb
    i32 153, label %sw.bb
    i32 154, label %sw.bb
    i32 155, label %sw.bb
    i32 156, label %sw.bb
    i32 157, label %sw.bb
    i32 158, label %sw.bb
    i32 159, label %sw.bb
    i32 160, label %sw.bb
    i32 161, label %sw.bb
    i32 166, label %sw.bb
    i32 162, label %sw.bb
    i32 163, label %sw.bb
    i32 164, label %sw.bb
    i32 165, label %sw.bb
    i32 167, label %sw.bb
    i32 168, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  %1 = load i32 (i32)*, i32 (i32)** @lang_statement_code_p, align 8
  %tobool = icmp ne i32 (i32)* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.default
  %2 = load i32 (i32)*, i32 (i32)** @lang_statement_code_p, align 8
  %3 = load i32, i32* %code.addr, align 4
  %call = call i32 %2(i32 %3)
  store i32 %call, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.default
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then, %sw.bb
  %4 = load i32, i32* %retval
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @walk_stmt_tree(%union.tree_node** %tp, %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, i8* %data) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %tp.addr = alloca %union.tree_node**, align 8
  %func.addr = alloca %union.tree_node* (%union.tree_node**, i32*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %code = alloca i32, align 4
  %walk_subtrees = alloca i32, align 4
  %result = alloca %union.tree_node*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store %union.tree_node** %tp, %union.tree_node*** %tp.addr, align 8
  store %union.tree_node* (%union.tree_node**, i32*, i8*)* %func, %union.tree_node* (%union.tree_node**, i32*, i8*)** %func.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8
  %tobool = icmp ne %union.tree_node* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %call = call i32 @statement_code_p(i32 %bf.clear)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  store i32 1, i32* %walk_subtrees, align 4
  %4 = load %union.tree_node* (%union.tree_node**, i32*, i8*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)** %func.addr, align 8
  %5 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %6 = load i8*, i8** %data.addr, align 8
  %call5 = call %union.tree_node* %4(%union.tree_node** %5, i32* %walk_subtrees, i8* %6)
  store %union.tree_node* %call5, %union.tree_node** %result, align 8
  %7 = load %union.tree_node*, %union.tree_node** %result, align 8
  %tobool6 = icmp ne %union.tree_node* %7, null
  br i1 %tobool6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  %8 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end.8:                                         ; preds = %if.end.4
  %9 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8
  %common9 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  store i32 %bf.clear12, i32* %code, align 4
  %11 = load i32, i32* %code, align 4
  %call13 = call i32 @statement_code_p(i32 %11)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.end.8
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.8
  %12 = load i32, i32* %walk_subtrees, align 4
  %tobool17 = icmp ne i32 %12, 0
  br i1 %tobool17, label %if.then.18, label %if.end.25

if.then.18:                                       ; preds = %if.end.16
  %13 = load i32, i32* %code, align 4
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @tree_code_length, i32 0, i64 %idxprom
  %14 = load i32, i32* %arrayidx, align 4
  store i32 %14, i32* %len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.18
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %len, align 4
  %cmp = icmp slt i32 %15, %16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %17 to i64
  %18 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8
  %exp = bitcast %union.tree_node* %19 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx20 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 %idxprom19
  %20 = load %union.tree_node* (%union.tree_node**, i32*, i8*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)** %func.addr, align 8
  %21 = load i8*, i8** %data.addr, align 8
  %call21 = call %union.tree_node* @walk_stmt_tree(%union.tree_node** %arrayidx20, %union.tree_node* (%union.tree_node**, i32*, i8*)* %20, i8* %21)
  store %union.tree_node* %call21, %union.tree_node** %result, align 8
  %22 = load %union.tree_node*, %union.tree_node** %result, align 8
  %tobool22 = icmp ne %union.tree_node* %22, null
  br i1 %tobool22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %do.body
  %23 = load %union.tree_node*, %union.tree_node** %result, align 8
  store %union.tree_node* %23, %union.tree_node** %retval
  br label %return

if.end.24:                                        ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.24
  br label %for.inc

for.inc:                                          ; preds = %do.end
  %24 = load i32, i32* %i, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.25

if.end.25:                                        ; preds = %for.end, %if.end.16
  %25 = load %union.tree_node**, %union.tree_node*** %tp.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8
  %common26 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 0
  %27 = load %union.tree_node* (%union.tree_node**, i32*, i8*)*, %union.tree_node* (%union.tree_node**, i32*, i8*)** %func.addr, align 8
  %28 = load i8*, i8** %data.addr, align 8
  %call27 = call %union.tree_node* @walk_stmt_tree(%union.tree_node** %chain, %union.tree_node* (%union.tree_node**, i32*, i8*)* %27, i8* %28)
  store %union.tree_node* %call27, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.25, %if.then.23, %if.then.15, %if.then.7, %if.then.3, %if.then
  %29 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %29
}

; Function Attrs: nounwind uwtable
define i32 @case_compare(i64 %k1, i64 %k2) #0 {
entry:
  %retval = alloca i32, align 4
  %k1.addr = alloca i64, align 8
  %k2.addr = alloca i64, align 8
  store i64 %k1, i64* %k1.addr, align 8
  store i64 %k2, i64* %k2.addr, align 8
  %0 = load i64, i64* %k1.addr, align 8
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %k2.addr, align 8
  %tobool1 = icmp ne i64 %1, 0
  %cond = select i1 %tobool1, i32 -1, i32 0
  store i32 %cond, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i64, i64* %k2.addr, align 8
  %tobool2 = icmp ne i64 %2, 0
  br i1 %tobool2, label %if.end, label %if.then.3

if.then.3:                                        ; preds = %if.else
  %3 = load i64, i64* %k1.addr, align 8
  %tobool4 = icmp ne i64 %3, 0
  %cond5 = select i1 %tobool4, i32 1, i32 0
  store i32 %cond5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end
  %4 = load i64, i64* %k1.addr, align 8
  %5 = inttoptr i64 %4 to %union.tree_node*
  %6 = load i64, i64* %k2.addr, align 8
  %7 = inttoptr i64 %6 to %union.tree_node*
  %call = call i32 @tree_int_cst_compare(%union.tree_node* %5, %union.tree_node* %7)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.3, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

declare i32 @tree_int_cst_compare(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_add_case_label(%struct.splay_tree_s* %cases, %union.tree_node* %cond, %union.tree_node* %low_value, %union.tree_node* %high_value) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %cases.addr = alloca %struct.splay_tree_s*, align 8
  %cond.addr = alloca %union.tree_node*, align 8
  %low_value.addr = alloca %union.tree_node*, align 8
  %high_value.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %label = alloca %union.tree_node*, align 8
  %case_label = alloca %union.tree_node*, align 8
  %node = alloca %struct.splay_tree_node_s*, align 8
  %low_bound = alloca %struct.splay_tree_node_s*, align 8
  %high_bound = alloca %struct.splay_tree_node_s*, align 8
  %duplicate = alloca %union.tree_node*, align 8
  store %struct.splay_tree_s* %cases, %struct.splay_tree_s** %cases.addr, align 8
  store %union.tree_node* %cond, %union.tree_node** %cond.addr, align 8
  store %union.tree_node* %low_value, %union.tree_node** %low_value.addr, align 8
  store %union.tree_node* %high_value, %union.tree_node** %high_value.addr, align 8
  %call = call %union.tree_node* @build_decl(i32 31, %union.tree_node* null, %union.tree_node* null)
  store %union.tree_node* %call, %union.tree_node** %label, align 8
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %1 = load %union.tree_node*, %union.tree_node** %label, align 8
  %decl = bitcast %union.tree_node* %1 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 9
  store %union.tree_node* %0, %union.tree_node** %context, align 8
  %2 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp = icmp eq %union.tree_node* %3, %4
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %root = getelementptr inbounds %struct.splay_tree_s, %struct.splay_tree_s* %5, i32 0, i32 0
  %6 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %root, align 8
  %tobool1 = icmp ne %struct.splay_tree_node_s* %6, null
  br i1 %tobool1, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  %7 = load %union.tree_node*, %union.tree_node** %label, align 8
  %call3 = call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %7)
  %call4 = call %union.tree_node* @add_stmt(%union.tree_node* %call3)
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

if.end.5:                                         ; preds = %lor.lhs.false
  %9 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool6 = icmp ne %union.tree_node* %9, null
  br i1 %tobool6, label %land.lhs.true, label %lor.lhs.false.22

land.lhs.true:                                    ; preds = %if.end.5
  %10 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type7, align 8
  %tobool8 = icmp ne %union.tree_node* %11, null
  br i1 %tobool8, label %land.lhs.true.9, label %lor.lhs.false.22

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %12 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %common10 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %type11, align 8
  %common12 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp13 = icmp eq i32 %bf.clear, 13
  br i1 %cmp13, label %if.then.44, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %land.lhs.true.9
  %14 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %common15 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type16, align 8
  %common17 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 15
  br i1 %cmp21, label %if.then.44, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.14, %land.lhs.true, %if.end.5
  %16 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool23 = icmp ne %union.tree_node* %16, null
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.45

land.lhs.true.24:                                 ; preds = %lor.lhs.false.22
  %17 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %common25 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type26 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type26, align 8
  %tobool27 = icmp ne %union.tree_node* %18, null
  br i1 %tobool27, label %land.lhs.true.28, label %if.end.45

land.lhs.true.28:                                 ; preds = %land.lhs.true.24
  %19 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %common29 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type30, align 8
  %common31 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load33 = load i32, i32* %code32, align 8
  %bf.clear34 = and i32 %bf.load33, 255
  %cmp35 = icmp eq i32 %bf.clear34, 13
  br i1 %cmp35, label %if.then.44, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %land.lhs.true.28
  %21 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %common37 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type38 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common37, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %type38, align 8
  %common39 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 15
  br i1 %cmp43, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %lor.lhs.false.36, %land.lhs.true.28, %lor.lhs.false.14, %land.lhs.true.9
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.181, i32 0, i32 0))
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.44, %lor.lhs.false.36, %land.lhs.true.24, %lor.lhs.false.22
  %23 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool46 = icmp ne %union.tree_node* %23, null
  br i1 %tobool46, label %land.lhs.true.47, label %if.end.53

land.lhs.true.47:                                 ; preds = %if.end.45
  %24 = load i32, i32* @pedantic, align 4
  %tobool48 = icmp ne i32 %24, 0
  br i1 %tobool48, label %if.then.49, label %if.end.53

if.then.49:                                       ; preds = %land.lhs.true.47
  %25 = load i32, i32* @c_language, align 4
  %cmp50 = icmp eq i32 %25, 1
  br i1 %cmp50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %if.then.49
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.182, i32 0, i32 0))
  br label %if.end.52

if.else:                                          ; preds = %if.then.49
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.183, i32 0, i32 0))
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.then.51
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %land.lhs.true.47, %if.end.45
  %26 = load %union.tree_node*, %union.tree_node** %cond.addr, align 8
  %common54 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type55, align 8
  store %union.tree_node* %27, %union.tree_node** %type, align 8
  %28 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool56 = icmp ne %union.tree_node* %28, null
  br i1 %tobool56, label %if.then.57, label %if.end.60

if.then.57:                                       ; preds = %if.end.53
  %29 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %call58 = call %union.tree_node* @check_case_value(%union.tree_node* %29)
  store %union.tree_node* %call58, %union.tree_node** %low_value.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** %type, align 8
  %31 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %call59 = call %union.tree_node* @convert_and_check(%union.tree_node* %30, %union.tree_node* %31)
  store %union.tree_node* %call59, %union.tree_node** %low_value.addr, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.57, %if.end.53
  %32 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool61 = icmp ne %union.tree_node* %32, null
  br i1 %tobool61, label %if.then.62, label %if.end.65

if.then.62:                                       ; preds = %if.end.60
  %33 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call63 = call %union.tree_node* @check_case_value(%union.tree_node* %33)
  store %union.tree_node* %call63, %union.tree_node** %high_value.addr, align 8
  %34 = load %union.tree_node*, %union.tree_node** %type, align 8
  %35 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call64 = call %union.tree_node* @convert_and_check(%union.tree_node* %34, %union.tree_node* %35)
  store %union.tree_node* %call64, %union.tree_node** %high_value.addr, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.62, %if.end.60
  %36 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp66 = icmp eq %union.tree_node* %36, %37
  br i1 %cmp66, label %if.then.69, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %if.end.65
  %38 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp68 = icmp eq %union.tree_node* %38, %39
  br i1 %cmp68, label %if.then.69, label %if.end.76

if.then.69:                                       ; preds = %lor.lhs.false.67, %if.end.65
  %40 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %root70 = getelementptr inbounds %struct.splay_tree_s, %struct.splay_tree_s* %40, i32 0, i32 0
  %41 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %root70, align 8
  %tobool71 = icmp ne %struct.splay_tree_node_s* %41, null
  br i1 %tobool71, label %if.end.75, label %if.then.72

if.then.72:                                       ; preds = %if.then.69
  %42 = load %union.tree_node*, %union.tree_node** %label, align 8
  %call73 = call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %42)
  %call74 = call %union.tree_node* @add_stmt(%union.tree_node* %call73)
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.72, %if.then.69
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %43, %union.tree_node** %retval
  br label %return

if.end.76:                                        ; preds = %lor.lhs.false.67
  %44 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %45 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call77 = call i32 @tree_int_cst_equal(%union.tree_node* %44, %union.tree_node* %45)
  %tobool78 = icmp ne i32 %call77, 0
  br i1 %tobool78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  store %union.tree_node* null, %union.tree_node** %high_value.addr, align 8
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.79, %if.end.76
  %46 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool81 = icmp ne %union.tree_node* %46, null
  br i1 %tobool81, label %land.lhs.true.82, label %if.end.88

land.lhs.true.82:                                 ; preds = %if.end.80
  %47 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool83 = icmp ne %union.tree_node* %47, null
  br i1 %tobool83, label %land.lhs.true.84, label %if.end.88

land.lhs.true.84:                                 ; preds = %land.lhs.true.82
  %48 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %49 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call85 = call i32 @tree_int_cst_lt(%union.tree_node* %48, %union.tree_node* %49)
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.end.88, label %if.then.87

if.then.87:                                       ; preds = %land.lhs.true.84
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.184, i32 0, i32 0))
  br label %if.end.88

if.end.88:                                        ; preds = %if.then.87, %land.lhs.true.84, %land.lhs.true.82, %if.end.80
  %50 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %51 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %52 = ptrtoint %union.tree_node* %51 to i64
  %call89 = call %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s* %50, i64 %52)
  store %struct.splay_tree_node_s* %call89, %struct.splay_tree_node_s** %node, align 8
  %53 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %node, align 8
  %tobool90 = icmp ne %struct.splay_tree_node_s* %53, null
  br i1 %tobool90, label %if.end.119, label %land.lhs.true.91

land.lhs.true.91:                                 ; preds = %if.end.88
  %54 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool92 = icmp ne %union.tree_node* %54, null
  br i1 %tobool92, label %if.then.95, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %land.lhs.true.91
  %55 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool94 = icmp ne %union.tree_node* %55, null
  br i1 %tobool94, label %if.then.95, label %if.end.119

if.then.95:                                       ; preds = %lor.lhs.false.93, %land.lhs.true.91
  %56 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %57 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %58 = ptrtoint %union.tree_node* %57 to i64
  %call96 = call %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s* %56, i64 %58)
  store %struct.splay_tree_node_s* %call96, %struct.splay_tree_node_s** %low_bound, align 8
  %59 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %60 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %61 = ptrtoint %union.tree_node* %60 to i64
  %call97 = call %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s* %59, i64 %61)
  store %struct.splay_tree_node_s* %call97, %struct.splay_tree_node_s** %high_bound, align 8
  %62 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %low_bound, align 8
  %tobool98 = icmp ne %struct.splay_tree_node_s* %62, null
  br i1 %tobool98, label %land.lhs.true.99, label %if.else.109

land.lhs.true.99:                                 ; preds = %if.then.95
  %63 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %low_bound, align 8
  %value = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %63, i32 0, i32 1
  %64 = load i64, i64* %value, align 8
  %65 = inttoptr i64 %64 to %union.tree_node*
  %exp = bitcast %union.tree_node* %65 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %66 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %tobool100 = icmp ne %union.tree_node* %66, null
  br i1 %tobool100, label %land.lhs.true.101, label %if.else.109

land.lhs.true.101:                                ; preds = %land.lhs.true.99
  %67 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %low_bound, align 8
  %value102 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %67, i32 0, i32 1
  %68 = load i64, i64* %value102, align 8
  %69 = inttoptr i64 %68 to %union.tree_node*
  %exp103 = bitcast %union.tree_node* %69 to %struct.tree_exp*
  %operands104 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp103, i32 0, i32 2
  %arrayidx105 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands104, i32 0, i64 1
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx105, align 8
  %71 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %call106 = call i32 @tree_int_cst_compare(%union.tree_node* %70, %union.tree_node* %71)
  %cmp107 = icmp sge i32 %call106, 0
  br i1 %cmp107, label %if.then.108, label %if.else.109

if.then.108:                                      ; preds = %land.lhs.true.101
  %72 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %low_bound, align 8
  store %struct.splay_tree_node_s* %72, %struct.splay_tree_node_s** %node, align 8
  br label %if.end.118

if.else.109:                                      ; preds = %land.lhs.true.101, %land.lhs.true.99, %if.then.95
  %73 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %high_bound, align 8
  %tobool110 = icmp ne %struct.splay_tree_node_s* %73, null
  br i1 %tobool110, label %land.lhs.true.111, label %if.end.117

land.lhs.true.111:                                ; preds = %if.else.109
  %74 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool112 = icmp ne %union.tree_node* %74, null
  br i1 %tobool112, label %land.lhs.true.113, label %if.end.117

land.lhs.true.113:                                ; preds = %land.lhs.true.111
  %75 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %high_bound, align 8
  %key = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %75, i32 0, i32 0
  %76 = load i64, i64* %key, align 8
  %77 = inttoptr i64 %76 to %union.tree_node*
  %78 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %call114 = call i32 @tree_int_cst_compare(%union.tree_node* %77, %union.tree_node* %78)
  %cmp115 = icmp sle i32 %call114, 0
  br i1 %cmp115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %land.lhs.true.113
  %79 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %high_bound, align 8
  store %struct.splay_tree_node_s* %79, %struct.splay_tree_node_s** %node, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.116, %land.lhs.true.113, %land.lhs.true.111, %if.else.109
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.then.108
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %lor.lhs.false.93, %if.end.88
  %80 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %node, align 8
  %tobool120 = icmp ne %struct.splay_tree_node_s* %80, null
  br i1 %tobool120, label %if.then.121, label %if.end.140

if.then.121:                                      ; preds = %if.end.119
  %81 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %node, align 8
  %value122 = getelementptr inbounds %struct.splay_tree_node_s, %struct.splay_tree_node_s* %81, i32 0, i32 1
  %82 = load i64, i64* %value122, align 8
  %83 = inttoptr i64 %82 to %union.tree_node*
  %exp123 = bitcast %union.tree_node* %83 to %struct.tree_exp*
  %operands124 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp123, i32 0, i32 2
  %arrayidx125 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands124, i32 0, i64 2
  %84 = load %union.tree_node*, %union.tree_node** %arrayidx125, align 8
  store %union.tree_node* %84, %union.tree_node** %duplicate, align 8
  %85 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %tobool126 = icmp ne %union.tree_node* %85, null
  br i1 %tobool126, label %if.then.127, label %if.else.128

if.then.127:                                      ; preds = %if.then.121
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.185, i32 0, i32 0))
  %86 = load %union.tree_node*, %union.tree_node** %duplicate, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %86, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.186, i32 0, i32 0))
  br label %if.end.133

if.else.128:                                      ; preds = %if.then.121
  %87 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %tobool129 = icmp ne %union.tree_node* %87, null
  br i1 %tobool129, label %if.then.130, label %if.else.131

if.then.130:                                      ; preds = %if.else.128
  call void (i8*, ...) @error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.187, i32 0, i32 0))
  %88 = load %union.tree_node*, %union.tree_node** %duplicate, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %88, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.188, i32 0, i32 0))
  br label %if.end.132

if.else.131:                                      ; preds = %if.else.128
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.189, i32 0, i32 0))
  %89 = load %union.tree_node*, %union.tree_node** %duplicate, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %89, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.190, i32 0, i32 0))
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.131, %if.then.130
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %if.then.127
  %90 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %root134 = getelementptr inbounds %struct.splay_tree_s, %struct.splay_tree_s* %90, i32 0, i32 0
  %91 = load %struct.splay_tree_node_s*, %struct.splay_tree_node_s** %root134, align 8
  %tobool135 = icmp ne %struct.splay_tree_node_s* %91, null
  br i1 %tobool135, label %if.end.139, label %if.then.136

if.then.136:                                      ; preds = %if.end.133
  %92 = load %union.tree_node*, %union.tree_node** %label, align 8
  %call137 = call %union.tree_node* @build_case_label(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %92)
  %call138 = call %union.tree_node* @add_stmt(%union.tree_node* %call137)
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.136, %if.end.133
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %if.end.119
  %93 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %94 = load %union.tree_node*, %union.tree_node** %high_value.addr, align 8
  %95 = load %union.tree_node*, %union.tree_node** %label, align 8
  %call141 = call %union.tree_node* @build_case_label(%union.tree_node* %93, %union.tree_node* %94, %union.tree_node* %95)
  %call142 = call %union.tree_node* @add_stmt(%union.tree_node* %call141)
  store %union.tree_node* %call142, %union.tree_node** %case_label, align 8
  %96 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases.addr, align 8
  %97 = load %union.tree_node*, %union.tree_node** %low_value.addr, align 8
  %98 = ptrtoint %union.tree_node* %97 to i64
  %99 = load %union.tree_node*, %union.tree_node** %case_label, align 8
  %100 = ptrtoint %union.tree_node* %99 to i64
  %call143 = call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %96, i64 %98, i64 %100)
  %101 = load %union.tree_node*, %union.tree_node** %case_label, align 8
  store %union.tree_node* %101, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.140, %if.end.75, %if.end
  %102 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %102
}

declare %union.tree_node* @build_case_label(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) #1

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

declare %struct.splay_tree_node_s* @splay_tree_lookup(%struct.splay_tree_s*, i64) #1

declare %struct.splay_tree_node_s* @splay_tree_predecessor(%struct.splay_tree_s*, i64) #1

declare %struct.splay_tree_node_s* @splay_tree_successor(%struct.splay_tree_s*, i64) #1

declare void @error_with_decl(%union.tree_node*, i8*, ...) #1

declare %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @finish_label_address_expr(%union.tree_node* %label) #0 {
entry:
  %label.addr = alloca %union.tree_node*, align 8
  %result = alloca %union.tree_node*, align 8
  store %union.tree_node* %label, %union.tree_node** %label.addr, align 8
  %0 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end.2

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @c_language, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.191, i32 0, i32 0))
  br label %if.end

if.else:                                          ; preds = %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.192, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  br label %if.end.2

if.end.2:                                         ; preds = %if.end, %entry
  %2 = load %union.tree_node*, %union.tree_node** %label.addr, align 8
  %call = call %union.tree_node* @lookup_label(%union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %label.addr, align 8
  %3 = load %union.tree_node*, %union.tree_node** %label.addr, align 8
  %cmp3 = icmp eq %union.tree_node* %3, null
  br i1 %cmp3, label %if.then.4, label %if.else.5

if.then.4:                                        ; preds = %if.end.2
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 14), align 8
  store %union.tree_node* %4, %union.tree_node** %result, align 8
  br label %if.end.11

if.else.5:                                        ; preds = %if.end.2
  %5 = load %union.tree_node*, %union.tree_node** %label.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %used_flag, align 8
  %bf.clear = and i32 %bf.load, -65537
  %bf.set = or i32 %bf.clear, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  %7 = load %union.tree_node*, %union.tree_node** %label.addr, align 8
  %call6 = call %union.tree_node* @build1(i32 121, %union.tree_node* %6, %union.tree_node* %7)
  store %union.tree_node* %call6, %union.tree_node** %result, align 8
  %8 = load %union.tree_node*, %union.tree_node** %result, align 8
  %common7 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load8 = load i32, i32* %constant_flag, align 8
  %bf.clear9 = and i32 %bf.load8, -513
  %bf.set10 = or i32 %bf.clear9, 512
  store i32 %bf.set10, i32* %constant_flag, align 8
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.5, %if.then.4
  %9 = load %union.tree_node*, %union.tree_node** %result, align 8
  ret %union.tree_node* %9
}

declare %union.tree_node* @lookup_label(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @mark_stmt_tree(i8* %p) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %st = alloca %struct.stmt_tree_s*, align 8
  %t__ = alloca %union.tree_node*, align 8
  %t__10 = alloca %union.tree_node*, align 8
  store i8* %p, i8** %p.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %1 = bitcast i8* %0 to %struct.stmt_tree_s*
  store %struct.stmt_tree_s* %1, %struct.stmt_tree_s** %st, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load %struct.stmt_tree_s*, %struct.stmt_tree_s** %st, align 8
  %x_last_stmt = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %2, i32 0, i32 0
  %3 = load %union.tree_node*, %union.tree_node** %x_last_stmt, align 8
  store %union.tree_node* %3, %union.tree_node** %t__, align 8
  %4 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %cmp = icmp ne %union.tree_node* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %do.body
  %5 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %6 = bitcast %union.tree_node* %5 to i8*
  %call = call i32 @ggc_set_mark(i8* %6)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.7, label %if.then

if.then:                                          ; preds = %land.lhs.true
  br label %do.body.1

do.body.1:                                        ; preds = %if.then
  %7 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %7, i32 0, i32 1
  %8 = load i64, i64* %elements_used, align 8
  %9 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %9, i32 0, i32 0
  %10 = load i64, i64* %num_elements, align 8
  %cmp2 = icmp uge i64 %8, %10
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %do.body.1
  %11 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %12 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements4 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %12, i32 0, i32 0
  %13 = load i64, i64* %num_elements4, align 8
  %mul = mul i64 2, %13
  %call5 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %mul)
  store %struct.varray_head_tag* %call5, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.3, %do.body.1
  %14 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %15 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used6 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %15, i32 0, i32 1
  %16 = load i64, i64* %elements_used6, align 8
  %inc = add i64 %16, 1
  store i64 %inc, i64* %elements_used6, align 8
  %17 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %17, i32 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree, i32 0, i64 %16
  store %union.tree_node* %14, %union.tree_node** %arrayidx, align 8
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.7

if.end.7:                                         ; preds = %do.end, %land.lhs.true, %do.body
  br label %do.end.8

do.end.8:                                         ; preds = %if.end.7
  br label %do.body.9

do.body.9:                                        ; preds = %do.end.8
  %18 = load %struct.stmt_tree_s*, %struct.stmt_tree_s** %st, align 8
  %x_last_expr_type = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %18, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %x_last_expr_type, align 8
  store %union.tree_node* %19, %union.tree_node** %t__10, align 8
  %20 = load %union.tree_node*, %union.tree_node** %t__10, align 8
  %cmp11 = icmp ne %union.tree_node* %20, null
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.31

land.lhs.true.12:                                 ; preds = %do.body.9
  %21 = load %union.tree_node*, %union.tree_node** %t__10, align 8
  %22 = bitcast %union.tree_node* %21 to i8*
  %call13 = call i32 @ggc_set_mark(i8* %22)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end.31, label %if.then.15

if.then.15:                                       ; preds = %land.lhs.true.12
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %23 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used17 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %23, i32 0, i32 1
  %24 = load i64, i64* %elements_used17, align 8
  %25 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements18 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %25, i32 0, i32 0
  %26 = load i64, i64* %num_elements18, align 8
  %cmp19 = icmp uge i64 %24, %26
  br i1 %cmp19, label %if.then.20, label %if.end.24

if.then.20:                                       ; preds = %do.body.16
  %27 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %28 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements21 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %28, i32 0, i32 0
  %29 = load i64, i64* %num_elements21, align 8
  %mul22 = mul i64 2, %29
  %call23 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %27, i64 %mul22)
  store %struct.varray_head_tag* %call23, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.20, %do.body.16
  %30 = load %union.tree_node*, %union.tree_node** %t__10, align 8
  %31 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used25 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %31, i32 0, i32 1
  %32 = load i64, i64* %elements_used25, align 8
  %inc26 = add i64 %32, 1
  store i64 %inc26, i64* %elements_used25, align 8
  %33 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data27 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %33, i32 0, i32 4
  %tree28 = bitcast %union.varray_data_tag* %data27 to [1 x %union.tree_node*]*
  %arrayidx29 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree28, i32 0, i64 %32
  store %union.tree_node* %30, %union.tree_node** %arrayidx29, align 8
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.24
  br label %if.end.31

if.end.31:                                        ; preds = %do.end.30, %land.lhs.true.12, %do.body.9
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  ret void
}

declare i32 @ggc_set_mark(i8*) #1

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind uwtable
define void @c_mark_lang_decl(%struct.c_lang_decl* %c) #0 {
entry:
  %c.addr = alloca %struct.c_lang_decl*, align 8
  store %struct.c_lang_decl* %c, %struct.c_lang_decl** %c.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @mark_c_language_function(%struct.language_function* %f) #0 {
entry:
  %f.addr = alloca %struct.language_function*, align 8
  %t__ = alloca %union.tree_node*, align 8
  store %struct.language_function* %f, %struct.language_function** %f.addr, align 8
  %0 = load %struct.language_function*, %struct.language_function** %f.addr, align 8
  %tobool = icmp ne %struct.language_function* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %do.end.11

if.end:                                           ; preds = %entry
  %1 = load %struct.language_function*, %struct.language_function** %f.addr, align 8
  %x_stmt_tree = getelementptr inbounds %struct.language_function, %struct.language_function* %1, i32 0, i32 0
  %2 = bitcast %struct.stmt_tree_s* %x_stmt_tree to i8*
  call void @mark_stmt_tree(i8* %2)
  br label %do.body

do.body:                                          ; preds = %if.end
  %3 = load %struct.language_function*, %struct.language_function** %f.addr, align 8
  %x_scope_stmt_stack = getelementptr inbounds %struct.language_function, %struct.language_function* %3, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %x_scope_stmt_stack, align 8
  store %union.tree_node* %4, %union.tree_node** %t__, align 8
  %5 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %cmp = icmp ne %union.tree_node* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.end.10

land.lhs.true:                                    ; preds = %do.body
  %6 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %7 = bitcast %union.tree_node* %6 to i8*
  %call = call i32 @ggc_set_mark(i8* %7)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end.10, label %if.then.2

if.then.2:                                        ; preds = %land.lhs.true
  br label %do.body.3

do.body.3:                                        ; preds = %if.then.2
  %8 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %8, i32 0, i32 1
  %9 = load i64, i64* %elements_used, align 8
  %10 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %10, i32 0, i32 0
  %11 = load i64, i64* %num_elements, align 8
  %cmp4 = icmp uge i64 %9, %11
  br i1 %cmp4, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %do.body.3
  %12 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %13 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements6 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %13, i32 0, i32 0
  %14 = load i64, i64* %num_elements6, align 8
  %mul = mul i64 2, %14
  %call7 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %12, i64 %mul)
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %do.body.3
  %15 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %16 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used9 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %16, i32 0, i32 1
  %17 = load i64, i64* %elements_used9, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %elements_used9, align 8
  %18 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %18, i32 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree, i32 0, i64 %17
  store %union.tree_node* %15, %union.tree_node** %arrayidx, align 8
  br label %do.end

do.end:                                           ; preds = %if.end.8
  br label %if.end.10

if.end.10:                                        ; preds = %do.end, %land.lhs.true, %do.body
  br label %do.end.11

do.end.11:                                        ; preds = %if.then, %if.end.10
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @c_expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %target.addr = alloca %struct.rtx_def*, align 8
  %tmode.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %rtl_expr = alloca %union.tree_node*, align 8
  %result = alloca %struct.rtx_def*, align 8
  %preserve_result = alloca i8, align 1
  %expr = alloca %union.tree_node*, align 8
  %last = alloca %union.tree_node*, align 8
  %decl127 = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  store %struct.rtx_def* %target, %struct.rtx_def** %target.addr, align 8
  store i32 %tmode, i32* %tmode.addr, align 4
  store i32 %modifier, i32* %modifier.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 169, label %sw.bb
    i32 53, label %sw.bb.77
    i32 170, label %sw.bb.126
  ]

sw.bb:                                            ; preds = %entry
  store i8 0, i8* %preserve_result, align 1
  call void @push_temp_slots()
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load2 = load i32, i32* %lang_flag_0, align 8
  %bf.lshr = lshr i32 %bf.load2, 24
  %bf.clear3 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear3, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %call = call %union.tree_node* @expand_start_stmt_expr(i32 %lnot.ext)
  store %union.tree_node* %call, %union.tree_node** %rtl_expr, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp = icmp ne %struct.rtx_def* %2, %3
  br i1 %cmp, label %land.lhs.true, label %if.end.49

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp4 = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp4, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %common5 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %code6, align 8
  %bf.clear8 = and i32 %bf.load7, 255
  %cmp9 = icmp eq i32 %bf.clear8, 153
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.49

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp11 = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands12 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp11, i32 0, i32 2
  %arrayidx13 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands12, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8
  %exp14 = bitcast %union.tree_node* %7 to %struct.tree_exp*
  %operands15 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp14, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands15, i32 0, i64 0
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8
  %common17 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 166
  br i1 %cmp21, label %if.then, label %if.end.49

if.then:                                          ; preds = %land.lhs.true.10
  %9 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp22 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands23 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp22, i32 0, i32 2
  %arrayidx24 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands23, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx24, align 8
  %exp25 = bitcast %union.tree_node* %10 to %struct.tree_exp*
  %operands26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp25, i32 0, i32 2
  %arrayidx27 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands26, i32 0, i64 0
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx27, align 8
  store %union.tree_node* %11, %union.tree_node** %expr, align 8
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %common28 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 0
  %13 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %13, %union.tree_node** %last, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %14 = load %union.tree_node*, %union.tree_node** %last, align 8
  %common29 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %chain30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %chain30, align 8
  %tobool31 = icmp ne %union.tree_node* %15, null
  br i1 %tobool31, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %16 = load %union.tree_node*, %union.tree_node** %last, align 8
  store %union.tree_node* %16, %union.tree_node** %expr, align 8
  %17 = load %union.tree_node*, %union.tree_node** %last, align 8
  %common32 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain33, align 8
  store %union.tree_node* %18, %union.tree_node** %last, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %19 = load %union.tree_node*, %union.tree_node** %last, align 8
  %common34 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 2
  %bf.load36 = load i32, i32* %code35, align 8
  %bf.clear37 = and i32 %bf.load36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 166
  br i1 %cmp38, label %land.lhs.true.39, label %if.end

land.lhs.true.39:                                 ; preds = %while.end
  %20 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %common40 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 2
  %bf.load42 = load i32, i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cmp44 = icmp eq i32 %bf.clear43, 152
  br i1 %cmp44, label %if.then.45, label %if.end

if.then.45:                                       ; preds = %land.lhs.true.39
  %21 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %common46 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 2
  %bf.load47 = load i32, i32* %addressable_flag, align 8
  %bf.clear48 = and i32 %bf.load47, -1025
  %bf.set = or i32 %bf.clear48, 1024
  store i32 %bf.set, i32* %addressable_flag, align 8
  store i8 1, i8* %preserve_result, align 1
  br label %if.end

if.end:                                           ; preds = %if.then.45, %land.lhs.true.39, %while.end
  br label %if.end.49

if.end.49:                                        ; preds = %if.end, %land.lhs.true.10, %land.lhs.true, %sw.bb
  %22 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp50 = bitcast %union.tree_node* %22 to %struct.tree_exp*
  %operands51 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp50, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands51, i32 0, i64 0
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8
  call void @expand_stmt(%union.tree_node* %23)
  %24 = load %union.tree_node*, %union.tree_node** %rtl_expr, align 8
  %call53 = call %union.tree_node* @expand_end_stmt_expr(%union.tree_node* %24)
  %25 = load %union.tree_node*, %union.tree_node** %rtl_expr, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %27 = load i32, i32* %tmode.addr, align 4
  %28 = load i32, i32* %modifier.addr, align 4
  %call54 = call %struct.rtx_def* @expand_expr(%union.tree_node* %25, %struct.rtx_def* %26, i32 %27, i32 %28)
  store %struct.rtx_def* %call54, %struct.rtx_def** %result, align 8
  %29 = load i8, i8* %preserve_result, align 1
  %tobool55 = trunc i8 %29 to i1
  br i1 %tobool55, label %land.lhs.true.56, label %if.end.68

land.lhs.true.56:                                 ; preds = %if.end.49
  %30 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load57 = load i32, i32* %31, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 66
  br i1 %cmp59, label %if.then.60, label %if.end.68

if.then.60:                                       ; preds = %land.lhs.true.56
  %32 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load61 = load i32, i32* %33, align 8
  %bf.lshr62 = lshr i32 %bf.load61, 16
  %bf.clear63 = and i32 %bf.lshr62, 255
  %cmp64 = icmp ne i32 %bf.clear63, 51
  br i1 %cmp64, label %if.then.65, label %if.else

if.then.65:                                       ; preds = %if.then.60
  %34 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %call66 = call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %34)
  store %struct.rtx_def* %call66, %struct.rtx_def** %result, align 8
  br label %if.end.67

if.else:                                          ; preds = %if.then.60
  %35 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  call void @preserve_temp_slots(%struct.rtx_def* %35)
  br label %if.end.67

if.end.67:                                        ; preds = %if.else, %if.then.65
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %land.lhs.true.56, %if.end.49
  %36 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common69 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %lang_flag_070 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load71 = load i32, i32* %lang_flag_070, align 8
  %bf.lshr72 = lshr i32 %bf.load71, 24
  %bf.clear73 = and i32 %bf.lshr72, 1
  %tobool74 = icmp ne i32 %bf.clear73, 0
  br i1 %tobool74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.68
  call void @preserve_temp_slots(%struct.rtx_def* null)
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.75, %if.end.68
  call void @pop_temp_slots()
  %37 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %retval
  br label %return

sw.bb.77:                                         ; preds = %entry
  %38 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp78 = bitcast %union.tree_node* %38 to %struct.tree_exp*
  %operands79 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp78, i32 0, i32 2
  %arrayidx80 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands79, i32 0, i64 0
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx80, align 8
  %common81 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %code82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 2
  %bf.load83 = load i32, i32* %code82, align 8
  %bf.clear84 = and i32 %bf.load83, 255
  %cmp85 = icmp eq i32 %bf.clear84, 121
  br i1 %cmp85, label %land.lhs.true.86, label %if.else.125

land.lhs.true.86:                                 ; preds = %sw.bb.77
  %40 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp87 = bitcast %union.tree_node* %40 to %struct.tree_exp*
  %operands88 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp87, i32 0, i32 2
  %arrayidx89 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands88, i32 0, i64 0
  %41 = load %union.tree_node*, %union.tree_node** %arrayidx89, align 8
  %exp90 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands91 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp90, i32 0, i32 2
  %arrayidx92 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands91, i32 0, i64 0
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx92, align 8
  %common93 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 30
  br i1 %cmp97, label %land.lhs.true.98, label %if.else.125

land.lhs.true.98:                                 ; preds = %land.lhs.true.86
  %43 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp99 = bitcast %union.tree_node* %43 to %struct.tree_exp*
  %operands100 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp99, i32 0, i32 2
  %arrayidx101 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands100, i32 0, i64 0
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx101, align 8
  %exp102 = bitcast %union.tree_node* %44 to %struct.tree_exp*
  %operands103 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp102, i32 0, i32 2
  %arrayidx104 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands103, i32 0, i64 0
  %45 = load %union.tree_node*, %union.tree_node** %arrayidx104, align 8
  %decl = bitcast %union.tree_node* %45 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %46 = bitcast i48* %built_in_class to i64*
  %bf.load105 = load i64, i64* %46, align 8
  %bf.lshr106 = lshr i64 %bf.load105, 29
  %bf.clear107 = and i64 %bf.lshr106, 3
  %bf.cast = trunc i64 %bf.clear107 to i32
  %cmp108 = icmp ne i32 %bf.cast, 0
  br i1 %cmp108, label %land.lhs.true.109, label %if.else.125

land.lhs.true.109:                                ; preds = %land.lhs.true.98
  %47 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp110 = bitcast %union.tree_node* %47 to %struct.tree_exp*
  %operands111 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp110, i32 0, i32 2
  %arrayidx112 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands111, i32 0, i64 0
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx112, align 8
  %exp113 = bitcast %union.tree_node* %48 to %struct.tree_exp*
  %operands114 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp113, i32 0, i32 2
  %arrayidx115 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands114, i32 0, i64 0
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx115, align 8
  %decl116 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %built_in_class117 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl116, i32 0, i32 5
  %50 = bitcast i48* %built_in_class117 to i64*
  %bf.load118 = load i64, i64* %50, align 8
  %bf.lshr119 = lshr i64 %bf.load118, 29
  %bf.clear120 = and i64 %bf.lshr119, 3
  %bf.cast121 = trunc i64 %bf.clear120 to i32
  %cmp122 = icmp eq i32 %bf.cast121, 1
  br i1 %cmp122, label %if.then.123, label %if.else.125

if.then.123:                                      ; preds = %land.lhs.true.109
  %51 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %52 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %53 = load i32, i32* %tmode.addr, align 4
  %54 = load i32, i32* %modifier.addr, align 4
  %call124 = call %struct.rtx_def* @c_expand_builtin(%union.tree_node* %51, %struct.rtx_def* %52, i32 %53, i32 %54)
  store %struct.rtx_def* %call124, %struct.rtx_def** %retval
  br label %return

if.else.125:                                      ; preds = %land.lhs.true.109, %land.lhs.true.98, %land.lhs.true.86, %sw.bb.77
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.193, i32 0, i32 0), i32 3632, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.c_expand_expr, i32 0, i32 0)) #7
  unreachable

sw.bb.126:                                        ; preds = %entry
  %55 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp128 = bitcast %union.tree_node* %55 to %struct.tree_exp*
  %operands129 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp128, i32 0, i32 2
  %arrayidx130 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands129, i32 0, i64 0
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx130, align 8
  %exp131 = bitcast %union.tree_node* %56 to %struct.tree_exp*
  %operands132 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp131, i32 0, i32 2
  %arrayidx133 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands132, i32 0, i64 0
  %57 = load %union.tree_node*, %union.tree_node** %arrayidx133, align 8
  store %union.tree_node* %57, %union.tree_node** %decl127, align 8
  %58 = load %union.tree_node*, %union.tree_node** %decl127, align 8
  call void @emit_local_var(%union.tree_node* %58)
  %59 = load %union.tree_node*, %union.tree_node** %decl127, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %61 = load i32, i32* %tmode.addr, align 4
  %62 = load i32, i32* %modifier.addr, align 4
  %call134 = call %struct.rtx_def* @expand_expr(%union.tree_node* %59, %struct.rtx_def* %60, i32 %61, i32 %62)
  store %struct.rtx_def* %call134, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.193, i32 0, i32 0), i32 3646, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.c_expand_expr, i32 0, i32 0)) #7
  unreachable

return:                                           ; preds = %sw.bb.126, %if.then.123, %if.end.76
  %63 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %63
}

declare void @push_temp_slots() #1

declare %union.tree_node* @expand_start_stmt_expr(i32) #1

declare void @expand_stmt(%union.tree_node*) #1

declare %union.tree_node* @expand_end_stmt_expr(%union.tree_node*) #1

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #1

declare void @preserve_temp_slots(%struct.rtx_def*) #1

declare void @pop_temp_slots() #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @c_expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %tmode, i32 %modifier) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %target.addr = alloca %struct.rtx_def*, align 8
  %tmode.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %type = alloca %union.tree_node*, align 8
  %fndecl = alloca %union.tree_node*, align 8
  %arglist = alloca %union.tree_node*, align 8
  %fcode = alloca i32, align 4
  %code = alloca i32, align 4
  %ignore = alloca i32, align 4
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  store %struct.rtx_def* %target, %struct.rtx_def** %target.addr, align 8
  store i32 %tmode, i32* %tmode.addr, align 4
  store i32 %modifier, i32* %modifier.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp2 = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %exp3 = bitcast %union.tree_node* %3 to %struct.tree_exp*
  %operands4 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp3, i32 0, i32 2
  %arrayidx5 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands4, i32 0, i64 0
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8
  store %union.tree_node* %4, %union.tree_node** %fndecl, align 8
  %5 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp6 = bitcast %union.tree_node* %5 to %struct.tree_exp*
  %operands7 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp6, i32 0, i32 2
  %arrayidx8 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands7, i32 0, i64 1
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8
  store %union.tree_node* %6, %union.tree_node** %arglist, align 8
  %7 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %8 = load i32, i32* %f, align 4
  store i32 %8, i32* %fcode, align 4
  %9 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common9 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load = load i32, i32* %code10, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %12 = load i32, i32* %code, align 4
  %cmp11 = icmp eq i32 %12, 116
  br i1 %cmp11, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.rhs
  %13 = load i32, i32* %code, align 4
  %cmp12 = icmp eq i32 %13, 115
  br i1 %cmp12, label %land.rhs, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false
  %14 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %14, 114
  br i1 %cmp14, label %land.rhs, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %lor.lhs.false.13
  %15 = load i32, i32* %code, align 4
  %cmp16 = icmp eq i32 %15, 122
  br i1 %cmp16, label %land.rhs, label %lor.lhs.false.17

lor.lhs.false.17:                                 ; preds = %lor.lhs.false.15
  %16 = load i32, i32* %code, align 4
  %cmp18 = icmp eq i32 %16, 51
  br i1 %cmp18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false.17, %lor.lhs.false.15, %lor.lhs.false.13, %lor.lhs.false, %lor.rhs
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common19 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 2
  %bf.load21 = load i32, i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %cmp23 = icmp eq i32 %bf.clear22, 5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.17
  %18 = phi i1 [ false, %lor.lhs.false.17 ], [ %cmp23, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %entry
  %19 = phi i1 [ true, %entry ], [ %18, %land.end ]
  %lor.ext = zext i1 %19 to i32
  store i32 %lor.ext, i32* %ignore, align 4
  %20 = load i32, i32* @optimize, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.end
  %21 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl24 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl24, i32 0, i32 8
  %22 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %22 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %23 = load i8*, i8** %str, align 8
  %call = call i32 @strncmp(i8* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 10) #6
  %tobool25 = icmp ne i32 %call, 0
  br i1 %tobool25, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %24 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %26 = load i32, i32* %ignore, align 4
  %call26 = call %struct.rtx_def* @expand_call(%union.tree_node* %24, %struct.rtx_def* %25, i32 %26)
  store %struct.rtx_def* %call26, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.end
  %27 = load i32, i32* %fcode, align 4
  switch i32 %27, label %sw.default [
    i32 64, label %sw.bb
    i32 71, label %sw.bb.31
    i32 68, label %sw.bb.36
    i32 75, label %sw.bb.41
  ]

sw.bb:                                            ; preds = %if.end
  %28 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %30 = load i32, i32* %tmode.addr, align 4
  %31 = load i32, i32* %modifier.addr, align 4
  %32 = load i32, i32* %ignore, align 4
  %call27 = call %struct.rtx_def* @c_expand_builtin_printf(%union.tree_node* %28, %struct.rtx_def* %29, i32 %30, i32 %31, i32 %32, i32 0)
  store %struct.rtx_def* %call27, %struct.rtx_def** %target.addr, align 8
  %33 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %tobool28 = icmp ne %struct.rtx_def* %33, null
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %sw.bb
  %34 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  store %struct.rtx_def* %34, %struct.rtx_def** %retval
  br label %return

if.end.30:                                        ; preds = %sw.bb
  br label %sw.epilog

sw.bb.31:                                         ; preds = %if.end
  %35 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %36 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %37 = load i32, i32* %tmode.addr, align 4
  %38 = load i32, i32* %modifier.addr, align 4
  %39 = load i32, i32* %ignore, align 4
  %call32 = call %struct.rtx_def* @c_expand_builtin_printf(%union.tree_node* %35, %struct.rtx_def* %36, i32 %37, i32 %38, i32 %39, i32 1)
  store %struct.rtx_def* %call32, %struct.rtx_def** %target.addr, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %tobool33 = icmp ne %struct.rtx_def* %40, null
  br i1 %tobool33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %sw.bb.31
  %41 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  store %struct.rtx_def* %41, %struct.rtx_def** %retval
  br label %return

if.end.35:                                        ; preds = %sw.bb.31
  br label %sw.epilog

sw.bb.36:                                         ; preds = %if.end
  %42 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %44 = load i32, i32* %tmode.addr, align 4
  %45 = load i32, i32* %modifier.addr, align 4
  %46 = load i32, i32* %ignore, align 4
  %call37 = call %struct.rtx_def* @c_expand_builtin_fprintf(%union.tree_node* %42, %struct.rtx_def* %43, i32 %44, i32 %45, i32 %46, i32 0)
  store %struct.rtx_def* %call37, %struct.rtx_def** %target.addr, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %tobool38 = icmp ne %struct.rtx_def* %47, null
  br i1 %tobool38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %sw.bb.36
  %48 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  store %struct.rtx_def* %48, %struct.rtx_def** %retval
  br label %return

if.end.40:                                        ; preds = %sw.bb.36
  br label %sw.epilog

sw.bb.41:                                         ; preds = %if.end
  %49 = load %union.tree_node*, %union.tree_node** %arglist, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %51 = load i32, i32* %tmode.addr, align 4
  %52 = load i32, i32* %modifier.addr, align 4
  %53 = load i32, i32* %ignore, align 4
  %call42 = call %struct.rtx_def* @c_expand_builtin_fprintf(%union.tree_node* %49, %struct.rtx_def* %50, i32 %51, i32 %52, i32 %53, i32 1)
  store %struct.rtx_def* %call42, %struct.rtx_def** %target.addr, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %tobool43 = icmp ne %struct.rtx_def* %54, null
  br i1 %tobool43, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %sw.bb.41
  %55 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  store %struct.rtx_def* %55, %struct.rtx_def** %retval
  br label %return

if.end.45:                                        ; preds = %sw.bb.41
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %56 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl46 = bitcast %union.tree_node* %56 to %struct.tree_decl*
  %name47 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl46, i32 0, i32 8
  %57 = load %union.tree_node*, %union.tree_node** %name47, align 8
  %identifier48 = bitcast %union.tree_node* %57 to %struct.tree_identifier*
  %id49 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier48, i32 0, i32 1
  %str50 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id49, i32 0, i32 1
  %58 = load i8*, i8** %str50, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.229, i32 0, i32 0), i8* %58)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.45, %if.end.40, %if.end.35, %if.end.30
  %59 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %61 = load i32, i32* %ignore, align 4
  %call51 = call %struct.rtx_def* @expand_call(%union.tree_node* %59, %struct.rtx_def* %60, i32 %61)
  store %struct.rtx_def* %call51, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.44, %if.then.39, %if.then.34, %if.then.29, %if.then
  %62 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %62
}

declare void @emit_local_var(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define i32 @c_safe_from_p(%struct.rtx_def* %target, %union.tree_node* %exp) #0 {
entry:
  %retval = alloca i32, align 4
  %target.addr = alloca %struct.rtx_def*, align 8
  %exp.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store %struct.rtx_def* %target, %struct.rtx_def** %target.addr, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 154
  br i1 %cmp, label %if.then, label %if.end.13

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp1 = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %2, %union.tree_node** %decl, align 8
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common2 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load4 = load i32, i32* %code3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  %cmp6 = icmp eq i32 %bf.clear5, 34
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl7 = bitcast %union.tree_node* %4 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7, i32 0, i32 12
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %tobool = icmp ne %union.tree_node* %5, null
  br i1 %tobool, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl9 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %initial10 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl9, i32 0, i32 12
  %8 = load %union.tree_node*, %union.tree_node** %initial10, align 8
  %call = call i32 @safe_from_p(%struct.rtx_def* %6, %union.tree_node* %8, i32 0)
  %tobool11 = icmp ne i32 %call, 0
  br i1 %tobool11, label %if.end, label %if.then.12

if.then.12:                                       ; preds = %land.lhs.true.8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.8, %land.lhs.true, %if.then
  br label %if.end.13

if.end.13:                                        ; preds = %if.end, %entry
  %9 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common14 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load16 = load i32, i32* %code15, align 8
  %bf.clear17 = and i32 %bf.load16, 255
  %call18 = call i32 @statement_code_p(i32 %bf.clear17)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %land.lhs.true.20, label %if.end.27

land.lhs.true.20:                                 ; preds = %if.end.13
  %10 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common21 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 0
  %11 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %tobool22 = icmp ne %union.tree_node* %11, null
  br i1 %tobool22, label %if.then.23, label %if.end.27

if.then.23:                                       ; preds = %land.lhs.true.20
  %12 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  %13 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common24 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %chain25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 0
  %14 = load %union.tree_node*, %union.tree_node** %chain25, align 8
  %call26 = call i32 @safe_from_p(%struct.rtx_def* %12, %union.tree_node* %14, i32 0)
  store i32 %call26, i32* %retval
  br label %return

if.end.27:                                        ; preds = %land.lhs.true.20, %if.end.13
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.27, %if.then.23, %if.then.12
  %15 = load i32, i32* %retval
  ret i32 %15
}

declare i32 @safe_from_p(%struct.rtx_def*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @c_unsafe_for_reeval(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca i32, align 4
  %exp.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 169
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 170
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @c_staticp(%union.tree_node* %exp) #0 {
entry:
  %retval = alloca i32, align 4
  %exp.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %exp, %union.tree_node** %exp.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 170
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %exp.addr, align 8
  %exp1 = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %exp2 = bitcast %union.tree_node* %2 to %struct.tree_exp*
  %operands3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp2, i32 0, i32 2
  %arrayidx4 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands3, i32 0, i64 0
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8
  %common5 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load6 = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load6, 18
  %bf.clear7 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define void @add_c_tree_codes() #0 {
entry:
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 147), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @c_tree_code_type, i32 0, i32 0), i64 25, i32 1, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (i32* getelementptr inbounds ([256 x i32], [256 x i32]* @tree_code_length, i32 0, i64 147) to i8*), i8* bitcast ([25 x i32]* @c_tree_code_length to i8*), i64 100, i32 4, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (i8** getelementptr inbounds ([256 x i8*], [256 x i8*]* @tree_code_name, i32 0, i64 147) to i8*), i8* bitcast ([25 x i8*]* @c_tree_code_name to i8*), i64 200, i32 8, i1 false)
  store i32 (%union.tree_node*)* @c_unsafe_for_reeval, i32 (%union.tree_node*)** @lang_unsafe_for_reeval, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @boolean_increment(i32 %code, %union.tree_node* %arg) #0 {
entry:
  %code.addr = alloca i32, align 4
  %arg.addr = alloca %union.tree_node*, align 8
  %val = alloca %union.tree_node*, align 8
  %true_res = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %arg, %union.tree_node** %arg.addr, align 8
  %0 = load i32, i32* @c_language, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 20), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %2, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %true_res, align 8
  %3 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call = call %union.tree_node* @stabilize_reference(%union.tree_node* %3)
  store %union.tree_node* %call, %union.tree_node** %arg.addr, align 8
  %4 = load i32, i32* %code.addr, align 4
  switch i32 %4, label %sw.default [
    i32 130, label %sw.bb
    i32 132, label %sw.bb.2
    i32 129, label %sw.bb.13
    i32 131, label %sw.bb.18
  ]

sw.bb:                                            ; preds = %cond.end
  %5 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8
  %7 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %true_res, align 8
  %call1 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %6, %union.tree_node* %7, %union.tree_node* %8)
  store %union.tree_node* %call1, %union.tree_node** %val, align 8
  br label %sw.epilog

sw.bb.2:                                          ; preds = %cond.end
  %9 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common3 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %type4, align 8
  %11 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %12 = load %union.tree_node*, %union.tree_node** %true_res, align 8
  %call5 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %10, %union.tree_node* %11, %union.tree_node* %12)
  store %union.tree_node* %call5, %union.tree_node** %val, align 8
  %13 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call6 = call %union.tree_node* @save_expr(%union.tree_node* %13)
  store %union.tree_node* %call6, %union.tree_node** %arg.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common7 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %type8, align 8
  %16 = load %union.tree_node*, %union.tree_node** %val, align 8
  %17 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call9 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %15, %union.tree_node* %16, %union.tree_node* %17)
  store %union.tree_node* %call9, %union.tree_node** %val, align 8
  %18 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common10 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type11, align 8
  %20 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %21 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call12 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %19, %union.tree_node* %20, %union.tree_node* %21)
  store %union.tree_node* %call12, %union.tree_node** %val, align 8
  br label %sw.epilog

sw.bb.13:                                         ; preds = %cond.end
  %22 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common14 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type15, align 8
  %24 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call16 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %25)
  %call17 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %23, %union.tree_node* %24, %union.tree_node* %call16)
  store %union.tree_node* %call17, %union.tree_node** %val, align 8
  br label %sw.epilog

sw.bb.18:                                         ; preds = %cond.end
  %26 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common19 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common19, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type20, align 8
  %28 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %29 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call21 = call %union.tree_node* @invert_truthvalue(%union.tree_node* %29)
  %call22 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 48, %union.tree_node* %27, %union.tree_node* %28, %union.tree_node* %call21)
  store %union.tree_node* %call22, %union.tree_node** %val, align 8
  %30 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call23 = call %union.tree_node* @save_expr(%union.tree_node* %30)
  store %union.tree_node* %call23, %union.tree_node** %arg.addr, align 8
  %31 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common24 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type25, align 8
  %33 = load %union.tree_node*, %union.tree_node** %val, align 8
  %34 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %call26 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %32, %union.tree_node* %33, %union.tree_node* %34)
  store %union.tree_node* %call26, %union.tree_node** %val, align 8
  %35 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %common27 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %37 = load %union.tree_node*, %union.tree_node** %arg.addr, align 8
  %38 = load %union.tree_node*, %union.tree_node** %val, align 8
  %call29 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 47, %union.tree_node* %36, %union.tree_node* %37, %union.tree_node* %38)
  store %union.tree_node* %call29, %union.tree_node** %val, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.193, i32 0, i32 0), i32 4080, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.boolean_increment, i32 0, i32 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb.18, %sw.bb.13, %sw.bb.2, %sw.bb
  %39 = load %union.tree_node*, %union.tree_node** %val, align 8
  %common30 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load = load i32, i32* %side_effects_flag, align 8
  %bf.clear = and i32 %bf.load, -257
  %bf.set = or i32 %bf.clear, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %40 = load %union.tree_node*, %union.tree_node** %val, align 8
  ret %union.tree_node* %40
}

declare %union.tree_node* @stabilize_reference(%union.tree_node*) #1

declare %union.tree_node* @invert_truthvalue(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_common_init_options(i32 %lang) #0 {
entry:
  %lang.addr = alloca i32, align 4
  store i32 %lang, i32* %lang.addr, align 4
  %0 = load i32, i32* %lang.addr, align 4
  store i32 %0, i32* @c_language, align 4
  %1 = load i32, i32* %lang.addr, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %lang.addr, align 4
  %cmp1 = icmp eq i32 %2, 1
  %cond = select i1 %cmp1, i32 5, i32 7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ]
  %call = call %struct.cpp_reader* @cpp_create_reader(i32 %cond2)
  store %struct.cpp_reader* %call, %struct.cpp_reader** @parse_in, align 8
  store i32 -1, i32* @flag_bounds_check, align 4
  ret void
}

declare %struct.cpp_reader* @cpp_create_reader(i32) #1

; Function Attrs: nounwind uwtable
define void @c_common_post_options() #0 {
entry:
  %0 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8
  call void @cpp_post_options(%struct.cpp_reader* %0)
  store i32 1, i32* @flag_inline_trees, align 4
  %1 = load i32, i32* @flag_instrument_function_entry_exit, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end.6, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @flag_no_inline, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  store i32 1, i32* @flag_no_inline, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %3 = load i32, i32* @flag_inline_functions, align 4
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  store i32 2, i32* @flag_inline_trees, align 4
  store i32 0, i32* @flag_inline_functions, align 4
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.end
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %entry
  %4 = load i32, i32* @flag_bounds_check, align 4
  %cmp = icmp eq i32 %4, -1
  br i1 %cmp, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.6
  %5 = load i32, i32* @flag_bounded_pointers, align 4
  store i32 %5, i32* @flag_bounds_check, align 4
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end.6
  %6 = load i32, i32* @warn_format_y2k, align 4
  %tobool9 = icmp ne i32 %6, 0
  br i1 %tobool9, label %land.lhs.true, label %if.end.12

land.lhs.true:                                    ; preds = %if.end.8
  %7 = load i32, i32* @warn_format, align 4
  %tobool10 = icmp ne i32 %7, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.194, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %land.lhs.true, %if.end.8
  %8 = load i32, i32* @warn_format_extra_args, align 4
  %tobool13 = icmp ne i32 %8, 0
  br i1 %tobool13, label %land.lhs.true.14, label %if.end.17

land.lhs.true.14:                                 ; preds = %if.end.12
  %9 = load i32, i32* @warn_format, align 4
  %tobool15 = icmp ne i32 %9, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true.14
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.195, i32 0, i32 0))
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.16, %land.lhs.true.14, %if.end.12
  %10 = load i32, i32* @warn_format_nonliteral, align 4
  %tobool18 = icmp ne i32 %10, 0
  br i1 %tobool18, label %land.lhs.true.19, label %if.end.22

land.lhs.true.19:                                 ; preds = %if.end.17
  %11 = load i32, i32* @warn_format, align 4
  %tobool20 = icmp ne i32 %11, 0
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %land.lhs.true.19
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.196, i32 0, i32 0))
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.21, %land.lhs.true.19, %if.end.17
  %12 = load i32, i32* @warn_format_security, align 4
  %tobool23 = icmp ne i32 %12, 0
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.27

land.lhs.true.24:                                 ; preds = %if.end.22
  %13 = load i32, i32* @warn_format, align 4
  %tobool25 = icmp ne i32 %13, 0
  br i1 %tobool25, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %land.lhs.true.24
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.197, i32 0, i32 0))
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %land.lhs.true.24, %if.end.22
  %14 = load i32, i32* @warn_missing_format_attribute, align 4
  %tobool28 = icmp ne i32 %14, 0
  br i1 %tobool28, label %land.lhs.true.29, label %if.end.32

land.lhs.true.29:                                 ; preds = %if.end.27
  %15 = load i32, i32* @warn_format, align 4
  %tobool30 = icmp ne i32 %15, 0
  br i1 %tobool30, label %if.end.32, label %if.then.31

if.then.31:                                       ; preds = %land.lhs.true.29
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.198, i32 0, i32 0))
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %land.lhs.true.29, %if.end.27
  %16 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8
  %call = call i32 @cpp_errors(%struct.cpp_reader* %16)
  %17 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8
  %18 = bitcast %struct.diagnostic_context* %17 to %struct.output_buffer*
  %state = getelementptr inbounds %struct.output_buffer, %struct.output_buffer* %18, i32 0, i32 0
  %diagnostic_count = getelementptr inbounds %struct.output_state, %struct.output_state* %state, i32 0, i32 9
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %diagnostic_count, i32 0, i64 3
  %19 = load i32, i32* %arrayidx, align 4
  %add = add i32 %19, %call
  store i32 %add, i32* %arrayidx, align 4
  ret void
}

declare void @cpp_post_options(%struct.cpp_reader*) #1

declare i32 @cpp_errors(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define i8* @c_common_init(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8*, i8** %filename.addr, align 8
  %call = call i8* @init_c_lex(i8* %0)
  store i8* %call, i8** %filename.addr, align 8
  call void @init_pragma()
  %1 = load i8, i8* @c_attrs_initialized, align 1
  %tobool = trunc i8 %1 to i1
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @c_init_attributes()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %filename.addr, align 8
  ret i8* %2
}

declare i8* @init_c_lex(i8*) #1

declare void @init_pragma() #1

; Function Attrs: nounwind uwtable
define internal void @c_init_attributes() #0 {
entry:
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call = call %union.tree_node* @build_int_2_wide(i64 0, i64 0)
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 1), align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 1), align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call1 = call %union.tree_node* @tree_cons(%union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %2)
  store %union.tree_node* %call1, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 2), align 8
  %call2 = call %union.tree_node* @build_int_2_wide(i64 1, i64 0)
  store %union.tree_node* %call2, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 3), align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 3), align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call3 = call %union.tree_node* @tree_cons(%union.tree_node* %3, %union.tree_node* %4, %union.tree_node* %5)
  store %union.tree_node* %call3, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 4), align 8
  %call4 = call %union.tree_node* @build_int_2_wide(i64 2, i64 0)
  store %union.tree_node* %call4, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 5), align 8
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 5), align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call5 = call %union.tree_node* @tree_cons(%union.tree_node* %6, %union.tree_node* %7, %union.tree_node* %8)
  store %union.tree_node* %call5, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 6), align 8
  %call6 = call %union.tree_node* @build_int_2_wide(i64 3, i64 0)
  store %union.tree_node* %call6, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 7), align 8
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 7), align 8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call7 = call %union.tree_node* @tree_cons(%union.tree_node* %9, %union.tree_node* %10, %union.tree_node* %11)
  store %union.tree_node* %call7, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 8), align 8
  %call8 = call %union.tree_node* @build_int_2_wide(i64 4, i64 0)
  store %union.tree_node* %call8, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 9), align 8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 9), align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call9 = call %union.tree_node* @tree_cons(%union.tree_node* %12, %union.tree_node* %13, %union.tree_node* %14)
  store %union.tree_node* %call9, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 10), align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 3), align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 2), align 8
  %call10 = call %union.tree_node* @tree_cons(%union.tree_node* %15, %union.tree_node* %16, %union.tree_node* %17)
  store %union.tree_node* %call10, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 11), align 8
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 3), align 8
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 6), align 8
  %call11 = call %union.tree_node* @tree_cons(%union.tree_node* %18, %union.tree_node* %19, %union.tree_node* %20)
  store %union.tree_node* %call11, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 12), align 8
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 5), align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 2), align 8
  %call12 = call %union.tree_node* @tree_cons(%union.tree_node* %21, %union.tree_node* %22, %union.tree_node* %23)
  store %union.tree_node* %call12, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 13), align 8
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 5), align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 8), align 8
  %call13 = call %union.tree_node* @tree_cons(%union.tree_node* %24, %union.tree_node* %25, %union.tree_node* %26)
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 14), align 8
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 7), align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 2), align 8
  %call14 = call %union.tree_node* @tree_cons(%union.tree_node* %27, %union.tree_node* %28, %union.tree_node* %29)
  store %union.tree_node* %call14, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 15), align 8
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 7), align 8
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 10), align 8
  %call15 = call %union.tree_node* @tree_cons(%union.tree_node* %30, %union.tree_node* %31, %union.tree_node* %32)
  store %union.tree_node* %call15, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 16), align 8
  %call16 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0))
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %call17 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0))
  store %union.tree_node* %call17, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 18), align 8
  %call18 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0))
  store %union.tree_node* %call18, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 19), align 8
  %call19 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.236, i32 0, i32 0))
  store %union.tree_node* %call19, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 20), align 8
  %call20 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0))
  store %union.tree_node* %call20, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %call21 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.203, i32 0, i32 0))
  store %union.tree_node* %call21, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 22), align 8
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 11), align 8
  %call22 = call %union.tree_node* @tree_cons(%union.tree_node* %33, %union.tree_node* %34, %union.tree_node* %35)
  store %union.tree_node* %call22, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 23), align 8
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 23), align 8
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call23 = call %union.tree_node* @tree_cons(%union.tree_node* %36, %union.tree_node* %37, %union.tree_node* %38)
  store %union.tree_node* %call23, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 24), align 8
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 12), align 8
  %call24 = call %union.tree_node* @tree_cons(%union.tree_node* %39, %union.tree_node* %40, %union.tree_node* %41)
  store %union.tree_node* %call24, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 25), align 8
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 25), align 8
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call25 = call %union.tree_node* @tree_cons(%union.tree_node* %42, %union.tree_node* %43, %union.tree_node* %44)
  store %union.tree_node* %call25, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 26), align 8
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 13), align 8
  %call26 = call %union.tree_node* @tree_cons(%union.tree_node* %45, %union.tree_node* %46, %union.tree_node* %47)
  store %union.tree_node* %call26, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 27), align 8
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 27), align 8
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call27 = call %union.tree_node* @tree_cons(%union.tree_node* %48, %union.tree_node* %49, %union.tree_node* %50)
  store %union.tree_node* %call27, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 28), align 8
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 14), align 8
  %call28 = call %union.tree_node* @tree_cons(%union.tree_node* %51, %union.tree_node* %52, %union.tree_node* %53)
  store %union.tree_node* %call28, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 29), align 8
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 29), align 8
  %56 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call29 = call %union.tree_node* @tree_cons(%union.tree_node* %54, %union.tree_node* %55, %union.tree_node* %56)
  store %union.tree_node* %call29, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 15), align 8
  %call30 = call %union.tree_node* @tree_cons(%union.tree_node* %57, %union.tree_node* %58, %union.tree_node* %59)
  store %union.tree_node* %call30, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 31), align 8
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 31), align 8
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call31 = call %union.tree_node* @tree_cons(%union.tree_node* %60, %union.tree_node* %61, %union.tree_node* %62)
  store %union.tree_node* %call31, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 32), align 8
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 17), align 8
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 16), align 8
  %call32 = call %union.tree_node* @tree_cons(%union.tree_node* %63, %union.tree_node* %64, %union.tree_node* %65)
  store %union.tree_node* %call32, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 33), align 8
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 33), align 8
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call33 = call %union.tree_node* @tree_cons(%union.tree_node* %66, %union.tree_node* %67, %union.tree_node* %68)
  store %union.tree_node* %call33, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 34), align 8
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 18), align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 11), align 8
  %call34 = call %union.tree_node* @tree_cons(%union.tree_node* %69, %union.tree_node* %70, %union.tree_node* %71)
  store %union.tree_node* %call34, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 35), align 8
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 35), align 8
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call35 = call %union.tree_node* @tree_cons(%union.tree_node* %72, %union.tree_node* %73, %union.tree_node* %74)
  store %union.tree_node* %call35, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 36), align 8
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 18), align 8
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 12), align 8
  %call36 = call %union.tree_node* @tree_cons(%union.tree_node* %75, %union.tree_node* %76, %union.tree_node* %77)
  store %union.tree_node* %call36, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 37), align 8
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %79 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 37), align 8
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call37 = call %union.tree_node* @tree_cons(%union.tree_node* %78, %union.tree_node* %79, %union.tree_node* %80)
  store %union.tree_node* %call37, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 38), align 8
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 18), align 8
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 13), align 8
  %call38 = call %union.tree_node* @tree_cons(%union.tree_node* %81, %union.tree_node* %82, %union.tree_node* %83)
  store %union.tree_node* %call38, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 39), align 8
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 39), align 8
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call39 = call %union.tree_node* @tree_cons(%union.tree_node* %84, %union.tree_node* %85, %union.tree_node* %86)
  store %union.tree_node* %call39, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 40), align 8
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 18), align 8
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 14), align 8
  %call40 = call %union.tree_node* @tree_cons(%union.tree_node* %87, %union.tree_node* %88, %union.tree_node* %89)
  store %union.tree_node* %call40, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 41), align 8
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 41), align 8
  %92 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call41 = call %union.tree_node* @tree_cons(%union.tree_node* %90, %union.tree_node* %91, %union.tree_node* %92)
  store %union.tree_node* %call41, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 42), align 8
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 19), align 8
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 15), align 8
  %call42 = call %union.tree_node* @tree_cons(%union.tree_node* %93, %union.tree_node* %94, %union.tree_node* %95)
  store %union.tree_node* %call42, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 43), align 8
  %96 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 43), align 8
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call43 = call %union.tree_node* @tree_cons(%union.tree_node* %96, %union.tree_node* %97, %union.tree_node* %98)
  store %union.tree_node* %call43, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 44), align 8
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 20), align 8
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 16), align 8
  %call44 = call %union.tree_node* @tree_cons(%union.tree_node* %99, %union.tree_node* %100, %union.tree_node* %101)
  store %union.tree_node* %call44, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 45), align 8
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 21), align 8
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 45), align 8
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call45 = call %union.tree_node* @tree_cons(%union.tree_node* %102, %union.tree_node* %103, %union.tree_node* %104)
  store %union.tree_node* %call45, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 46), align 8
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 22), align 8
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 4), align 8
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call46 = call %union.tree_node* @tree_cons(%union.tree_node* %105, %union.tree_node* %106, %union.tree_node* %107)
  store %union.tree_node* %call46, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 47), align 8
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 22), align 8
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 6), align 8
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 0), align 8
  %call47 = call %union.tree_node* @tree_cons(%union.tree_node* %108, %union.tree_node* %109, %union.tree_node* %110)
  store %union.tree_node* %call47, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 48), align 8
  %call48 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i32 0, i32 0))
  store %union.tree_node* %call48, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 49), align 8
  %call49 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.146, i32 0, i32 0))
  store %union.tree_node* %call49, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 50), align 8
  %call50 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.149, i32 0, i32 0))
  store %union.tree_node* %call50, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 51), align 8
  %call51 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.153, i32 0, i32 0))
  store %union.tree_node* %call51, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 52), align 8
  %call52 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0))
  store %union.tree_node* %call52, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 53), align 8
  %call53 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.237, i32 0, i32 0))
  store %union.tree_node* %call53, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 54), align 8
  %call54 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.238, i32 0, i32 0))
  store %union.tree_node* %call54, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 55), align 8
  %call55 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0))
  store %union.tree_node* %call55, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 56), align 8
  %call56 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.239, i32 0, i32 0))
  store %union.tree_node* %call56, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 57), align 8
  %call57 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.240, i32 0, i32 0))
  store %union.tree_node* %call57, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 58), align 8
  %call58 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0))
  store %union.tree_node* %call58, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 59), align 8
  %call59 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.242, i32 0, i32 0))
  store %union.tree_node* %call59, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 60), align 8
  %call60 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.243, i32 0, i32 0))
  store %union.tree_node* %call60, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 61), align 8
  %call61 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.235, i32 0, i32 0))
  store %union.tree_node* %call61, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 62), align 8
  %call62 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.244, i32 0, i32 0))
  store %union.tree_node* %call62, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 63), align 8
  %call63 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.245, i32 0, i32 0))
  store %union.tree_node* %call63, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 64), align 8
  %call64 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.246, i32 0, i32 0))
  store %union.tree_node* %call64, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 65), align 8
  %call65 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.247, i32 0, i32 0))
  store %union.tree_node* %call65, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 66), align 8
  %call66 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.248, i32 0, i32 0))
  store %union.tree_node* %call66, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 67), align 8
  %call67 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.249, i32 0, i32 0))
  store %union.tree_node* %call67, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 68), align 8
  %call68 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i32 0, i32 0))
  store %union.tree_node* %call68, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 69), align 8
  %call69 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.251, i32 0, i32 0))
  store %union.tree_node* %call69, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 70), align 8
  %call70 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.236, i32 0, i32 0))
  store %union.tree_node* %call70, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 71), align 8
  %call71 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.252, i32 0, i32 0))
  store %union.tree_node* %call71, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 72), align 8
  %call72 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.253, i32 0, i32 0))
  store %union.tree_node* %call72, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 73), align 8
  call void @ggc_add_tree_root(%union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i32 0), i32 74)
  store i8 1, i8* @c_attrs_initialized, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_common_finish() #0 {
entry:
  %0 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8
  call void @cpp_finish(%struct.cpp_reader* %0)
  %1 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8
  %call = call i32 @cpp_errors(%struct.cpp_reader* %1)
  %2 = load %struct.diagnostic_context*, %struct.diagnostic_context** @global_dc, align 8
  %3 = bitcast %struct.diagnostic_context* %2 to %struct.output_buffer*
  %state = getelementptr inbounds %struct.output_buffer, %struct.output_buffer* %3, i32 0, i32 0
  %diagnostic_count = getelementptr inbounds %struct.output_state, %struct.output_state* %state, i32 0, i32 9
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %diagnostic_count, i32 0, i64 3
  %4 = load i32, i32* %arrayidx, align 4
  %add = add i32 %4, %call
  store i32 %add, i32* %arrayidx, align 4
  ret void
}

declare void @cpp_finish(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define void @c_common_insert_default_attributes(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %name = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl1 = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %name2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 8
  %1 = load %union.tree_node*, %union.tree_node** %name2, align 8
  store %union.tree_node* %1, %union.tree_node** %name, align 8
  %2 = load i8, i8* @c_attrs_initialized, align 1
  %tobool = trunc i8 %2 to i1
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @c_init_attributes()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 49), align 8
  %cmp = icmp eq %union.tree_node* %3, %4
  br i1 %cmp, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 26), align 8
  %call = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %5, i32 16)
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %if.end
  %6 = load %union.tree_node*, %union.tree_node** %name, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 50), align 8
  %cmp5 = icmp eq %union.tree_node* %6, %7
  br i1 %cmp5, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.end.4
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %call7 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %8, i32 16)
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.6, %if.end.4
  %9 = load %union.tree_node*, %union.tree_node** %name, align 8
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 51), align 8
  %cmp9 = icmp eq %union.tree_node* %9, %10
  br i1 %cmp9, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.end.8
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 26), align 8
  %call11 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %11, i32 16)
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.end.8
  %12 = load %union.tree_node*, %union.tree_node** %name, align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 52), align 8
  %cmp13 = icmp eq %union.tree_node* %12, %13
  br i1 %cmp13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.end.12
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %call15 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %14, i32 16)
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %if.end.12
  %15 = load i32, i32* @flag_hosted, align 4
  %tobool17 = icmp ne i32 %15, 0
  br i1 %tobool17, label %land.lhs.true, label %if.end.21

land.lhs.true:                                    ; preds = %if.end.16
  %16 = load %union.tree_node*, %union.tree_node** %name, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 53), align 8
  %cmp18 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp18, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %land.lhs.true
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 26), align 8
  %call20 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %18, i32 16)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %land.lhs.true, %if.end.16
  %19 = load i32, i32* @flag_hosted, align 4
  %tobool22 = icmp ne i32 %19, 0
  br i1 %tobool22, label %land.lhs.true.23, label %if.end.27

land.lhs.true.23:                                 ; preds = %if.end.21
  %20 = load %union.tree_node*, %union.tree_node** %name, align 8
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 54), align 8
  %cmp24 = icmp eq %union.tree_node* %20, %21
  br i1 %cmp24, label %if.then.25, label %if.end.27

if.then.25:                                       ; preds = %land.lhs.true.23
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %call26 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %22, i32 16)
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.25, %land.lhs.true.23, %if.end.21
  %23 = load i32, i32* @flag_hosted, align 4
  %tobool28 = icmp ne i32 %23, 0
  br i1 %tobool28, label %land.lhs.true.29, label %if.end.33

land.lhs.true.29:                                 ; preds = %if.end.27
  %24 = load %union.tree_node*, %union.tree_node** %name, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 55), align 8
  %cmp30 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp30, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %land.lhs.true.29
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %call32 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %26, i32 16)
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.31, %land.lhs.true.29, %if.end.27
  %27 = load i32, i32* @flag_hosted, align 4
  %tobool34 = icmp ne i32 %27, 0
  br i1 %tobool34, label %land.lhs.true.35, label %if.end.39

land.lhs.true.35:                                 ; preds = %if.end.33
  %28 = load %union.tree_node*, %union.tree_node** %name, align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 56), align 8
  %cmp36 = icmp eq %union.tree_node* %28, %29
  br i1 %cmp36, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %land.lhs.true.35
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 38), align 8
  %call38 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %30, i32 16)
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.37, %land.lhs.true.35, %if.end.33
  %31 = load i32, i32* @flag_hosted, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %land.lhs.true.41, label %if.end.45

land.lhs.true.41:                                 ; preds = %if.end.39
  %32 = load %union.tree_node*, %union.tree_node** %name, align 8
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 57), align 8
  %cmp42 = icmp eq %union.tree_node* %32, %33
  br i1 %cmp42, label %if.then.43, label %if.end.45

if.then.43:                                       ; preds = %land.lhs.true.41
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 42), align 8
  %call44 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %34, i32 16)
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.43, %land.lhs.true.41, %if.end.39
  %35 = load i32, i32* @flag_hosted, align 4
  %tobool46 = icmp ne i32 %35, 0
  br i1 %tobool46, label %land.lhs.true.47, label %if.end.51

land.lhs.true.47:                                 ; preds = %if.end.45
  %36 = load %union.tree_node*, %union.tree_node** %name, align 8
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 58), align 8
  %cmp48 = icmp eq %union.tree_node* %36, %37
  br i1 %cmp48, label %if.then.49, label %if.end.51

if.then.49:                                       ; preds = %land.lhs.true.47
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 42), align 8
  %call50 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %38, i32 16)
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.49, %land.lhs.true.47, %if.end.45
  %39 = load i32, i32* @flag_hosted, align 4
  %tobool52 = icmp ne i32 %39, 0
  br i1 %tobool52, label %land.lhs.true.53, label %if.end.57

land.lhs.true.53:                                 ; preds = %if.end.51
  %40 = load %union.tree_node*, %union.tree_node** %name, align 8
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 59), align 8
  %cmp54 = icmp eq %union.tree_node* %40, %41
  br i1 %cmp54, label %if.then.55, label %if.end.57

if.then.55:                                       ; preds = %land.lhs.true.53
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 24), align 8
  %call56 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %42, i32 16)
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.55, %land.lhs.true.53, %if.end.51
  %43 = load i32, i32* @flag_hosted, align 4
  %tobool58 = icmp ne i32 %43, 0
  br i1 %tobool58, label %land.lhs.true.59, label %if.end.63

land.lhs.true.59:                                 ; preds = %if.end.57
  %44 = load %union.tree_node*, %union.tree_node** %name, align 8
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 60), align 8
  %cmp60 = icmp eq %union.tree_node* %44, %45
  br i1 %cmp60, label %if.then.61, label %if.end.63

if.then.61:                                       ; preds = %land.lhs.true.59
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 28), align 8
  %call62 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %46, i32 16)
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.61, %land.lhs.true.59, %if.end.57
  %47 = load i32, i32* @flag_hosted, align 4
  %tobool64 = icmp ne i32 %47, 0
  br i1 %tobool64, label %land.lhs.true.65, label %if.end.69

land.lhs.true.65:                                 ; preds = %if.end.63
  %48 = load %union.tree_node*, %union.tree_node** %name, align 8
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 61), align 8
  %cmp66 = icmp eq %union.tree_node* %48, %49
  br i1 %cmp66, label %if.then.67, label %if.end.69

if.then.67:                                       ; preds = %land.lhs.true.65
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 28), align 8
  %call68 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %50, i32 16)
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.67, %land.lhs.true.65, %if.end.63
  %51 = load i32, i32* @flag_hosted, align 4
  %tobool70 = icmp ne i32 %51, 0
  br i1 %tobool70, label %land.lhs.true.71, label %if.end.75

land.lhs.true.71:                                 ; preds = %if.end.69
  %52 = load %union.tree_node*, %union.tree_node** %name, align 8
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 62), align 8
  %cmp72 = icmp eq %union.tree_node* %52, %53
  br i1 %cmp72, label %if.then.73, label %if.end.75

if.then.73:                                       ; preds = %land.lhs.true.71
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 44), align 8
  %call74 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %54, i32 16)
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.73, %land.lhs.true.71, %if.end.69
  %55 = load i32, i32* @flag_hosted, align 4
  %tobool76 = icmp ne i32 %55, 0
  br i1 %tobool76, label %land.lhs.true.77, label %if.end.84

land.lhs.true.77:                                 ; preds = %if.end.75
  %56 = load i32, i32* @flag_isoc99, align 4
  %tobool78 = icmp ne i32 %56, 0
  br i1 %tobool78, label %land.lhs.true.80, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.77
  %57 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool79 = icmp ne i32 %57, 0
  br i1 %tobool79, label %land.lhs.true.80, label %if.end.84

land.lhs.true.80:                                 ; preds = %lor.lhs.false, %land.lhs.true.77
  %58 = load %union.tree_node*, %union.tree_node** %name, align 8
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 63), align 8
  %cmp81 = icmp eq %union.tree_node* %58, %59
  br i1 %cmp81, label %if.then.82, label %if.end.84

if.then.82:                                       ; preds = %land.lhs.true.80
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 34), align 8
  %call83 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %60, i32 16)
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.82, %land.lhs.true.80, %lor.lhs.false, %if.end.75
  %61 = load i32, i32* @flag_hosted, align 4
  %tobool85 = icmp ne i32 %61, 0
  br i1 %tobool85, label %land.lhs.true.86, label %if.end.94

land.lhs.true.86:                                 ; preds = %if.end.84
  %62 = load i32, i32* @flag_isoc99, align 4
  %tobool87 = icmp ne i32 %62, 0
  br i1 %tobool87, label %land.lhs.true.90, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %land.lhs.true.86
  %63 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool89 = icmp ne i32 %63, 0
  br i1 %tobool89, label %land.lhs.true.90, label %if.end.94

land.lhs.true.90:                                 ; preds = %lor.lhs.false.88, %land.lhs.true.86
  %64 = load %union.tree_node*, %union.tree_node** %name, align 8
  %65 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 64), align 8
  %cmp91 = icmp eq %union.tree_node* %64, %65
  br i1 %cmp91, label %if.then.92, label %if.end.94

if.then.92:                                       ; preds = %land.lhs.true.90
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 32), align 8
  %call93 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %66, i32 16)
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.92, %land.lhs.true.90, %lor.lhs.false.88, %if.end.84
  %67 = load i32, i32* @flag_hosted, align 4
  %tobool95 = icmp ne i32 %67, 0
  br i1 %tobool95, label %land.lhs.true.96, label %if.end.104

land.lhs.true.96:                                 ; preds = %if.end.94
  %68 = load i32, i32* @flag_isoc99, align 4
  %tobool97 = icmp ne i32 %68, 0
  br i1 %tobool97, label %land.lhs.true.100, label %lor.lhs.false.98

lor.lhs.false.98:                                 ; preds = %land.lhs.true.96
  %69 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool99 = icmp ne i32 %69, 0
  br i1 %tobool99, label %land.lhs.true.100, label %if.end.104

land.lhs.true.100:                                ; preds = %lor.lhs.false.98, %land.lhs.true.96
  %70 = load %union.tree_node*, %union.tree_node** %name, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 65), align 8
  %cmp101 = icmp eq %union.tree_node* %70, %71
  br i1 %cmp101, label %if.then.102, label %if.end.104

if.then.102:                                      ; preds = %land.lhs.true.100
  %72 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 36), align 8
  %call103 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %72, i32 16)
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.102, %land.lhs.true.100, %lor.lhs.false.98, %if.end.94
  %73 = load i32, i32* @flag_hosted, align 4
  %tobool105 = icmp ne i32 %73, 0
  br i1 %tobool105, label %land.lhs.true.106, label %if.end.114

land.lhs.true.106:                                ; preds = %if.end.104
  %74 = load i32, i32* @flag_isoc99, align 4
  %tobool107 = icmp ne i32 %74, 0
  br i1 %tobool107, label %land.lhs.true.110, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %land.lhs.true.106
  %75 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool109 = icmp ne i32 %75, 0
  br i1 %tobool109, label %land.lhs.true.110, label %if.end.114

land.lhs.true.110:                                ; preds = %lor.lhs.false.108, %land.lhs.true.106
  %76 = load %union.tree_node*, %union.tree_node** %name, align 8
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 66), align 8
  %cmp111 = icmp eq %union.tree_node* %76, %77
  br i1 %cmp111, label %if.then.112, label %if.end.114

if.then.112:                                      ; preds = %land.lhs.true.110
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 40), align 8
  %call113 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %78, i32 16)
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.112, %land.lhs.true.110, %lor.lhs.false.108, %if.end.104
  %79 = load i32, i32* @flag_hosted, align 4
  %tobool115 = icmp ne i32 %79, 0
  br i1 %tobool115, label %land.lhs.true.116, label %if.end.124

land.lhs.true.116:                                ; preds = %if.end.114
  %80 = load i32, i32* @flag_isoc99, align 4
  %tobool117 = icmp ne i32 %80, 0
  br i1 %tobool117, label %land.lhs.true.120, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %land.lhs.true.116
  %81 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool119 = icmp ne i32 %81, 0
  br i1 %tobool119, label %land.lhs.true.120, label %if.end.124

land.lhs.true.120:                                ; preds = %lor.lhs.false.118, %land.lhs.true.116
  %82 = load %union.tree_node*, %union.tree_node** %name, align 8
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 67), align 8
  %cmp121 = icmp eq %union.tree_node* %82, %83
  br i1 %cmp121, label %if.then.122, label %if.end.124

if.then.122:                                      ; preds = %land.lhs.true.120
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 40), align 8
  %call123 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %84, i32 16)
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.122, %land.lhs.true.120, %lor.lhs.false.118, %if.end.114
  %85 = load i32, i32* @flag_hosted, align 4
  %tobool125 = icmp ne i32 %85, 0
  br i1 %tobool125, label %land.lhs.true.126, label %if.end.132

land.lhs.true.126:                                ; preds = %if.end.124
  %86 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool127 = icmp ne i32 %86, 0
  br i1 %tobool127, label %land.lhs.true.128, label %if.end.132

land.lhs.true.128:                                ; preds = %land.lhs.true.126
  %87 = load %union.tree_node*, %union.tree_node** %name, align 8
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 68), align 8
  %cmp129 = icmp eq %union.tree_node* %87, %88
  br i1 %cmp129, label %if.then.130, label %if.end.132

if.then.130:                                      ; preds = %land.lhs.true.128
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 47), align 8
  %call131 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %89, i32 16)
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.130, %land.lhs.true.128, %land.lhs.true.126, %if.end.124
  %90 = load i32, i32* @flag_hosted, align 4
  %tobool133 = icmp ne i32 %90, 0
  br i1 %tobool133, label %land.lhs.true.134, label %if.end.140

land.lhs.true.134:                                ; preds = %if.end.132
  %91 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool135 = icmp ne i32 %91, 0
  br i1 %tobool135, label %land.lhs.true.136, label %if.end.140

land.lhs.true.136:                                ; preds = %land.lhs.true.134
  %92 = load %union.tree_node*, %union.tree_node** %name, align 8
  %93 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 69), align 8
  %cmp137 = icmp eq %union.tree_node* %92, %93
  br i1 %cmp137, label %if.then.138, label %if.end.140

if.then.138:                                      ; preds = %land.lhs.true.136
  %94 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 48), align 8
  %call139 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %94, i32 16)
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.138, %land.lhs.true.136, %land.lhs.true.134, %if.end.132
  %95 = load i32, i32* @flag_hosted, align 4
  %tobool141 = icmp ne i32 %95, 0
  br i1 %tobool141, label %land.lhs.true.142, label %if.end.148

land.lhs.true.142:                                ; preds = %if.end.140
  %96 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool143 = icmp ne i32 %96, 0
  br i1 %tobool143, label %land.lhs.true.144, label %if.end.148

land.lhs.true.144:                                ; preds = %land.lhs.true.142
  %97 = load %union.tree_node*, %union.tree_node** %name, align 8
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 70), align 8
  %cmp145 = icmp eq %union.tree_node* %97, %98
  br i1 %cmp145, label %if.then.146, label %if.end.148

if.then.146:                                      ; preds = %land.lhs.true.144
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 48), align 8
  %call147 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %99, i32 16)
  br label %if.end.148

if.end.148:                                       ; preds = %if.then.146, %land.lhs.true.144, %land.lhs.true.142, %if.end.140
  %100 = load i32, i32* @flag_hosted, align 4
  %tobool149 = icmp ne i32 %100, 0
  br i1 %tobool149, label %land.lhs.true.150, label %if.end.156

land.lhs.true.150:                                ; preds = %if.end.148
  %101 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool151 = icmp ne i32 %101, 0
  br i1 %tobool151, label %land.lhs.true.152, label %if.end.156

land.lhs.true.152:                                ; preds = %land.lhs.true.150
  %102 = load %union.tree_node*, %union.tree_node** %name, align 8
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 71), align 8
  %cmp153 = icmp eq %union.tree_node* %102, %103
  br i1 %cmp153, label %if.then.154, label %if.end.156

if.then.154:                                      ; preds = %land.lhs.true.152
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 46), align 8
  %call155 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %104, i32 16)
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.154, %land.lhs.true.152, %land.lhs.true.150, %if.end.148
  %105 = load i32, i32* @flag_hosted, align 4
  %tobool157 = icmp ne i32 %105, 0
  br i1 %tobool157, label %land.lhs.true.158, label %if.end.164

land.lhs.true.158:                                ; preds = %if.end.156
  %106 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool159 = icmp ne i32 %106, 0
  br i1 %tobool159, label %land.lhs.true.160, label %if.end.164

land.lhs.true.160:                                ; preds = %land.lhs.true.158
  %107 = load %union.tree_node*, %union.tree_node** %name, align 8
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 72), align 8
  %cmp161 = icmp eq %union.tree_node* %107, %108
  br i1 %cmp161, label %if.then.162, label %if.end.164

if.then.162:                                      ; preds = %land.lhs.true.160
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 26), align 8
  %call163 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %109, i32 16)
  br label %if.end.164

if.end.164:                                       ; preds = %if.then.162, %land.lhs.true.160, %land.lhs.true.158, %if.end.156
  %110 = load i32, i32* @flag_hosted, align 4
  %tobool165 = icmp ne i32 %110, 0
  br i1 %tobool165, label %land.lhs.true.166, label %if.end.172

land.lhs.true.166:                                ; preds = %if.end.164
  %111 = load i32, i32* @flag_noniso_default_format_attributes, align 4
  %tobool167 = icmp ne i32 %111, 0
  br i1 %tobool167, label %land.lhs.true.168, label %if.end.172

land.lhs.true.168:                                ; preds = %land.lhs.true.166
  %112 = load %union.tree_node*, %union.tree_node** %name, align 8
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 73), align 8
  %cmp169 = icmp eq %union.tree_node* %112, %113
  br i1 %cmp169, label %if.then.170, label %if.end.172

if.then.170:                                      ; preds = %land.lhs.true.168
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([74 x %union.tree_node*], [74 x %union.tree_node*]* @built_in_attributes, i32 0, i64 30), align 8
  %call171 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl.addr, %union.tree_node* %114, i32 16)
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.170, %land.lhs.true.168, %land.lhs.true.166, %if.end.164
  ret void
}

declare %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define void @shadow_warning(i8* %msgid, %union.tree_node* %name, %union.tree_node* %decl) #0 {
entry:
  %msgid.addr = alloca i8*, align 8
  %name.addr = alloca %union.tree_node*, align 8
  %decl.addr = alloca %union.tree_node*, align 8
  store i8* %msgid, i8** %msgid.addr, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %0 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %1 = load i8*, i8** %str, align 8
  %2 = load i8*, i8** %msgid.addr, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i32 0, i32 0), i8* %1, i8* %2)
  %3 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl1 = bitcast %union.tree_node* %3 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 1
  %4 = load i8*, i8** %filename, align 8
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl2 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 2
  %6 = load i32, i32* %linenum, align 4
  call void (i8*, i32, i8*, ...) @warning_with_file_and_line(i8* %4, i32 %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0))
  ret void
}

declare void @gcc_obstack_init(%struct.obstack*) #1

declare void @_obstack_newchunk(%struct.obstack*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @verify_tree(%union.tree_node* %x, %struct.tlist** %pbefore_sp, %struct.tlist** %pno_sp, %union.tree_node* %writer) #0 {
entry:
  %x.addr = alloca %union.tree_node*, align 8
  %pbefore_sp.addr = alloca %struct.tlist**, align 8
  %pno_sp.addr = alloca %struct.tlist**, align 8
  %writer.addr = alloca %union.tree_node*, align 8
  %tmp_before = alloca %struct.tlist*, align 8
  %tmp_nosp = alloca %struct.tlist*, align 8
  %tmp_list2 = alloca %struct.tlist*, align 8
  %tmp_list3 = alloca %struct.tlist*, align 8
  %code = alloca i32, align 4
  %class = alloca i8, align 1
  %t = alloca %struct.tlist_cache*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value75 = alloca i8*, align 8
  %tmp108 = alloca i8*, align 8
  %t118 = alloca %struct.tlist*, align 8
  %lp = alloca i32, align 4
  %max = alloca i32, align 4
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  store %struct.tlist** %pbefore_sp, %struct.tlist*** %pbefore_sp.addr, align 8
  store %struct.tlist** %pno_sp, %struct.tlist*** %pno_sp.addr, align 8
  store %union.tree_node* %writer, %union.tree_node** %writer.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %sw.epilog.156

if.end:                                           ; preds = %entry
  br label %restart

restart:                                          ; preds = %if.end.132, %if.end
  %1 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  store i8 %3, i8* %class, align 1
  %4 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %call = call i32 @warning_candidate_p(%union.tree_node* %4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.2, label %if.end.4

if.then.2:                                        ; preds = %restart
  %5 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %6 = load %struct.tlist*, %struct.tlist** %5, align 8
  %7 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %8 = load %union.tree_node*, %union.tree_node** %writer.addr, align 8
  %call3 = call %struct.tlist* @new_tlist(%struct.tlist* %6, %union.tree_node* %7, %union.tree_node* %8)
  %9 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  store %struct.tlist* %call3, %struct.tlist** %9, align 8
  br label %sw.epilog.156

if.end.4:                                         ; preds = %restart
  %10 = load i32, i32* %code, align 4
  switch i32 %10, label %sw.default [
    i32 46, label %sw.bb
    i32 47, label %sw.bb.5
    i32 91, label %sw.bb.5
    i32 92, label %sw.bb.5
    i32 51, label %sw.bb.10
    i32 129, label %sw.bb.20
    i32 130, label %sw.bb.20
    i32 131, label %sw.bb.20
    i32 132, label %sw.bb.20
    i32 48, label %sw.bb.24
    i32 53, label %sw.bb.45
    i32 2, label %sw.bb.58
    i32 118, label %sw.bb.61
  ]

sw.bb:                                            ; preds = %if.end.4
  br label %sw.epilog.156

sw.bb.5:                                          ; preds = %if.end.4, %if.end.4, %if.end.4
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %11 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp = bitcast %union.tree_node* %11 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx6 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8
  call void @verify_tree(%union.tree_node* %12, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %13 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @warn_for_collisions(%struct.tlist* %13)
  %14 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %15 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @merge_tlist(%struct.tlist** %14, %struct.tlist* %15, i32 0)
  %16 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %17 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @merge_tlist(%struct.tlist** %16, %struct.tlist* %17, i32 0)
  %18 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp7 = bitcast %union.tree_node* %18 to %struct.tree_exp*
  %operands8 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp7, i32 0, i32 2
  %arrayidx9 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands8, i32 0, i64 1
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8
  %20 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  call void @verify_tree(%union.tree_node* %19, %struct.tlist** %tmp_list3, %struct.tlist** %20, %union.tree_node* null)
  %21 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %22 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  call void @merge_tlist(%struct.tlist** %21, %struct.tlist* %22, i32 0)
  br label %sw.epilog.156

sw.bb.10:                                         ; preds = %if.end.4
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %23 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp11 = bitcast %union.tree_node* %23 to %struct.tree_exp*
  %operands12 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp11, i32 0, i32 2
  %arrayidx13 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands12, i32 0, i64 0
  %24 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8
  call void @verify_tree(%union.tree_node* %24, %struct.tlist** %tmp_before, %struct.tlist** %tmp_list2, %union.tree_node* null)
  %25 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8
  call void @warn_for_collisions(%struct.tlist* %25)
  %26 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %27 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @merge_tlist(%struct.tlist** %26, %struct.tlist* %27, i32 0)
  %28 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %29 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8
  call void @merge_tlist(%struct.tlist** %28, %struct.tlist* %29, i32 1)
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  %30 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp14 = bitcast %union.tree_node* %30 to %struct.tree_exp*
  %operands15 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp14, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands15, i32 0, i64 1
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8
  call void @verify_tree(%union.tree_node* %31, %struct.tlist** %tmp_list3, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %32 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @warn_for_collisions(%struct.tlist* %32)
  %33 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %34 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  call void @merge_tlist(%struct.tlist** %33, %struct.tlist* %34, i32 0)
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  %35 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp17 = bitcast %union.tree_node* %35 to %struct.tree_exp*
  %operands18 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp17, i32 0, i32 2
  %arrayidx19 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands18, i32 0, i64 2
  %36 = load %union.tree_node*, %union.tree_node** %arrayidx19, align 8
  call void @verify_tree(%union.tree_node* %36, %struct.tlist** %tmp_list3, %struct.tlist** %tmp_list2, %union.tree_node* null)
  %37 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8
  call void @warn_for_collisions(%struct.tlist* %37)
  %38 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %39 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  call void @merge_tlist(%struct.tlist** %38, %struct.tlist* %39, i32 0)
  %40 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8
  call void @merge_tlist(%struct.tlist** %tmp_nosp, %struct.tlist* %40, i32 0)
  %41 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %42 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @add_tlist(%struct.tlist** %41, %struct.tlist* %42, %union.tree_node* null, i32 0)
  br label %sw.epilog.156

sw.bb.20:                                         ; preds = %if.end.4, %if.end.4, %if.end.4, %if.end.4
  %43 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp21 = bitcast %union.tree_node* %43 to %struct.tree_exp*
  %operands22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands22, i32 0, i64 0
  %44 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  %45 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %46 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %47 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void @verify_tree(%union.tree_node* %44, %struct.tlist** %45, %struct.tlist** %46, %union.tree_node* %47)
  br label %sw.epilog.156

sw.bb.24:                                         ; preds = %if.end.4
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %48 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp25 = bitcast %union.tree_node* %48 to %struct.tree_exp*
  %operands26 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp25, i32 0, i32 2
  %arrayidx27 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands26, i32 0, i64 1
  %49 = load %union.tree_node*, %union.tree_node** %arrayidx27, align 8
  call void @verify_tree(%union.tree_node* %49, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %50 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp28 = bitcast %union.tree_node* %50 to %struct.tree_exp*
  %operands29 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp28, i32 0, i32 2
  %arrayidx30 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands29, i32 0, i64 0
  %51 = load %union.tree_node*, %union.tree_node** %arrayidx30, align 8
  %52 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void @verify_tree(%union.tree_node* %51, %struct.tlist** %tmp_list3, %struct.tlist** %tmp_list3, %union.tree_node* %52)
  %53 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  %54 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void @add_tlist(%struct.tlist** %tmp_before, %struct.tlist* %53, %union.tree_node* %54, i32 1)
  %55 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @warn_for_collisions(%struct.tlist* %55)
  %56 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %57 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  %58 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void @add_tlist(%struct.tlist** %56, %struct.tlist* %57, %union.tree_node* %58, i32 0)
  %59 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp31 = bitcast %union.tree_node* %59 to %struct.tree_exp*
  %operands32 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp31, i32 0, i32 2
  %arrayidx33 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands32, i32 0, i64 0
  %60 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8
  %61 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %62 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @warn_for_collisions_1(%union.tree_node* %60, %union.tree_node* %61, %struct.tlist* %62, i32 1)
  %63 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %64 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @merge_tlist(%struct.tlist** %63, %struct.tlist* %64, i32 0)
  %65 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp34 = bitcast %union.tree_node* %65 to %struct.tree_exp*
  %operands35 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp34, i32 0, i32 2
  %arrayidx36 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands35, i32 0, i64 0
  %66 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8
  %call37 = call i32 @warning_candidate_p(%union.tree_node* %66)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then.39, label %if.end.44

if.then.39:                                       ; preds = %sw.bb.24
  %67 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp40 = bitcast %union.tree_node* %67 to %struct.tree_exp*
  %operands41 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp40, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands41, i32 0, i64 0
  %68 = load %union.tree_node*, %union.tree_node** %arrayidx42, align 8
  %69 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %call43 = call %struct.tlist* @new_tlist(%struct.tlist* null, %union.tree_node* %68, %union.tree_node* %69)
  call void @merge_tlist(%struct.tlist** %tmp_nosp, %struct.tlist* %call43, i32 0)
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.39, %sw.bb.24
  %70 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %71 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @add_tlist(%struct.tlist** %70, %struct.tlist* %71, %union.tree_node* null, i32 1)
  br label %sw.epilog.156

sw.bb.45:                                         ; preds = %if.end.4
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_list2, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %72 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp46 = bitcast %union.tree_node* %72 to %struct.tree_exp*
  %operands47 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp46, i32 0, i32 2
  %arrayidx48 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands47, i32 0, i64 0
  %73 = load %union.tree_node*, %union.tree_node** %arrayidx48, align 8
  call void @verify_tree(%union.tree_node* %73, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %74 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp49 = bitcast %union.tree_node* %74 to %struct.tree_exp*
  %operands50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp49, i32 0, i32 2
  %arrayidx51 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands50, i32 0, i64 1
  %75 = load %union.tree_node*, %union.tree_node** %arrayidx51, align 8
  %tobool52 = icmp ne %union.tree_node* %75, null
  br i1 %tobool52, label %if.then.53, label %if.end.57

if.then.53:                                       ; preds = %sw.bb.45
  %76 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp54 = bitcast %union.tree_node* %76 to %struct.tree_exp*
  %operands55 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp54, i32 0, i32 2
  %arrayidx56 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands55, i32 0, i64 1
  %77 = load %union.tree_node*, %union.tree_node** %arrayidx56, align 8
  call void @verify_tree(%union.tree_node* %77, %struct.tlist** %tmp_list2, %struct.tlist** %tmp_list3, %union.tree_node* null)
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.53, %sw.bb.45
  %78 = load %struct.tlist*, %struct.tlist** %tmp_list2, align 8
  call void @merge_tlist(%struct.tlist** %tmp_list3, %struct.tlist* %78, i32 0)
  %79 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  call void @add_tlist(%struct.tlist** %tmp_before, %struct.tlist* %79, %union.tree_node* null, i32 0)
  %80 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @add_tlist(%struct.tlist** %tmp_before, %struct.tlist* %80, %union.tree_node* null, i32 0)
  %81 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @warn_for_collisions(%struct.tlist* %81)
  %82 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %83 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @add_tlist(%struct.tlist** %82, %struct.tlist* %83, %union.tree_node* null, i32 0)
  br label %sw.epilog.156

sw.bb.58:                                         ; preds = %if.end.4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %sw.bb.58
  %84 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %tobool59 = icmp ne %union.tree_node* %84, null
  br i1 %tobool59, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %85 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %list = bitcast %union.tree_node* %85 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %86 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @verify_tree(%union.tree_node* %86, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %87 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @merge_tlist(%struct.tlist** %tmp_nosp, %struct.tlist* %87, i32 0)
  %88 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %89 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @add_tlist(%struct.tlist** %88, %struct.tlist* %89, %union.tree_node* null, i32 0)
  %90 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common60 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 0
  %91 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %91, %union.tree_node** %x.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %sw.epilog.156

sw.bb.61:                                         ; preds = %if.end.4
  %92 = load %struct.tlist_cache*, %struct.tlist_cache** @save_expr_cache, align 8
  store %struct.tlist_cache* %92, %struct.tlist_cache** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb.61
  %93 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %tobool62 = icmp ne %struct.tlist_cache* %93, null
  br i1 %tobool62, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %94 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %expr = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %94, i32 0, i32 3
  %95 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %96 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %cmp63 = icmp eq %union.tree_node* %95, %96
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %for.body
  br label %for.end

if.end.65:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.65
  %97 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %next = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %97, i32 0, i32 0
  %98 = load %struct.tlist_cache*, %struct.tlist_cache** %next, align 8
  store %struct.tlist_cache* %98, %struct.tlist_cache** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.64, %for.cond
  %99 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %tobool66 = icmp ne %struct.tlist_cache* %99, null
  br i1 %tobool66, label %if.end.121, label %if.then.67

if.then.67:                                       ; preds = %for.end
  store %struct.obstack* @tlist_obstack, %struct.obstack** %__h, align 8
  %100 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %100, %struct.obstack** %__o, align 8
  store i32 32, i32* %__len, align 4
  %101 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %101, i32 0, i32 4
  %102 = load i8*, i8** %chunk_limit, align 8
  %103 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %103, i32 0, i32 3
  %104 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %102 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %104 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %105 = load i32, i32* %__len, align 4
  %conv = sext i32 %105 to i64
  %cmp68 = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp68, label %if.then.70, label %if.end.71

if.then.70:                                       ; preds = %if.then.67
  %106 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %107 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %106, i32 %107)
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.70, %if.then.67
  %108 = load i32, i32* %__len, align 4
  %109 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free72 = getelementptr inbounds %struct.obstack, %struct.obstack* %109, i32 0, i32 3
  %110 = load i8*, i8** %next_free72, align 8
  %idx.ext = sext i32 %108 to i64
  %add.ptr = getelementptr inbounds i8, i8* %110, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free72, align 8
  %111 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %111, %struct.obstack** %__o1, align 8
  %112 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %112, i32 0, i32 2
  %113 = load i8*, i8** %object_base, align 8
  store i8* %113, i8** %value75, align 8
  %114 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free76 = getelementptr inbounds %struct.obstack, %struct.obstack* %114, i32 0, i32 3
  %115 = load i8*, i8** %next_free76, align 8
  %116 = load i8*, i8** %value75, align 8
  %cmp77 = icmp eq i8* %115, %116
  br i1 %cmp77, label %if.then.79, label %if.end.82

if.then.79:                                       ; preds = %if.end.71
  %117 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %117, i32 0, i32 10
  %bf.load80 = load i8, i8* %maybe_empty_object, align 8
  %bf.clear81 = and i8 %bf.load80, -3
  %bf.set = or i8 %bf.clear81, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.79, %if.end.71
  %118 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free83 = getelementptr inbounds %struct.obstack, %struct.obstack* %118, i32 0, i32 3
  %119 = load i8*, i8** %next_free83, align 8
  %sub.ptr.lhs.cast84 = ptrtoint i8* %119 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast84, 0
  %120 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %120, i32 0, i32 6
  %121 = load i32, i32* %alignment_mask, align 4
  %conv86 = sext i32 %121 to i64
  %add = add nsw i64 %sub.ptr.sub85, %conv86
  %122 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask87 = getelementptr inbounds %struct.obstack, %struct.obstack* %122, i32 0, i32 6
  %123 = load i32, i32* %alignment_mask87, align 4
  %neg = xor i32 %123, -1
  %conv88 = sext i32 %neg to i64
  %and = and i64 %add, %conv88
  %add.ptr89 = getelementptr inbounds i8, i8* null, i64 %and
  %124 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free90 = getelementptr inbounds %struct.obstack, %struct.obstack* %124, i32 0, i32 3
  store i8* %add.ptr89, i8** %next_free90, align 8
  %125 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free91 = getelementptr inbounds %struct.obstack, %struct.obstack* %125, i32 0, i32 3
  %126 = load i8*, i8** %next_free91, align 8
  %127 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %127, i32 0, i32 1
  %128 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %129 = bitcast %struct._obstack_chunk* %128 to i8*
  %sub.ptr.lhs.cast92 = ptrtoint i8* %126 to i64
  %sub.ptr.rhs.cast93 = ptrtoint i8* %129 to i64
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93
  %130 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit95 = getelementptr inbounds %struct.obstack, %struct.obstack* %130, i32 0, i32 4
  %131 = load i8*, i8** %chunk_limit95, align 8
  %132 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk96 = getelementptr inbounds %struct.obstack, %struct.obstack* %132, i32 0, i32 1
  %133 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk96, align 8
  %134 = bitcast %struct._obstack_chunk* %133 to i8*
  %sub.ptr.lhs.cast97 = ptrtoint i8* %131 to i64
  %sub.ptr.rhs.cast98 = ptrtoint i8* %134 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98
  %cmp100 = icmp sgt i64 %sub.ptr.sub94, %sub.ptr.sub99
  br i1 %cmp100, label %if.then.102, label %if.end.105

if.then.102:                                      ; preds = %if.end.82
  %135 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit103 = getelementptr inbounds %struct.obstack, %struct.obstack* %135, i32 0, i32 4
  %136 = load i8*, i8** %chunk_limit103, align 8
  %137 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free104 = getelementptr inbounds %struct.obstack, %struct.obstack* %137, i32 0, i32 3
  store i8* %136, i8** %next_free104, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.102, %if.end.82
  %138 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free106 = getelementptr inbounds %struct.obstack, %struct.obstack* %138, i32 0, i32 3
  %139 = load i8*, i8** %next_free106, align 8
  %140 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base107 = getelementptr inbounds %struct.obstack, %struct.obstack* %140, i32 0, i32 2
  store i8* %139, i8** %object_base107, align 8
  %141 = load i8*, i8** %value75, align 8
  store i8* %141, i8** %tmp108
  %142 = load i8*, i8** %tmp108
  store i8* %142, i8** %tmp
  %143 = load i8*, i8** %tmp
  %144 = bitcast i8* %143 to %struct.tlist_cache*
  store %struct.tlist_cache* %144, %struct.tlist_cache** %t, align 8
  %145 = load %struct.tlist_cache*, %struct.tlist_cache** @save_expr_cache, align 8
  %146 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %next109 = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %146, i32 0, i32 0
  store %struct.tlist_cache* %145, %struct.tlist_cache** %next109, align 8
  %147 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %148 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %expr110 = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %148, i32 0, i32 3
  store %union.tree_node* %147, %union.tree_node** %expr110, align 8
  %149 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  store %struct.tlist_cache* %149, %struct.tlist_cache** @save_expr_cache, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %150 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp111 = bitcast %union.tree_node* %150 to %struct.tree_exp*
  %operands112 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp111, i32 0, i32 2
  %arrayidx113 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands112, i32 0, i64 0
  %151 = load %union.tree_node*, %union.tree_node** %arrayidx113, align 8
  call void @verify_tree(%union.tree_node* %151, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %152 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @warn_for_collisions(%struct.tlist* %152)
  store %struct.tlist* null, %struct.tlist** %tmp_list3, align 8
  br label %while.cond.114

while.cond.114:                                   ; preds = %while.body.116, %if.end.105
  %153 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  %tobool115 = icmp ne %struct.tlist* %153, null
  br i1 %tobool115, label %while.body.116, label %while.end.120

while.body.116:                                   ; preds = %while.cond.114
  %154 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* %154, %struct.tlist** %t118, align 8
  %155 = load %struct.tlist*, %struct.tlist** %t118, align 8
  %next119 = getelementptr inbounds %struct.tlist, %struct.tlist* %155, i32 0, i32 0
  %156 = load %struct.tlist*, %struct.tlist** %next119, align 8
  store %struct.tlist* %156, %struct.tlist** %tmp_nosp, align 8
  %157 = load %struct.tlist*, %struct.tlist** %t118, align 8
  call void @merge_tlist(%struct.tlist** %tmp_list3, %struct.tlist* %157, i32 0)
  br label %while.cond.114

while.end.120:                                    ; preds = %while.cond.114
  %158 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  %159 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %cache_before_sp = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %159, i32 0, i32 1
  store %struct.tlist* %158, %struct.tlist** %cache_before_sp, align 8
  %160 = load %struct.tlist*, %struct.tlist** %tmp_list3, align 8
  %161 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %cache_after_sp = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %161, i32 0, i32 2
  store %struct.tlist* %160, %struct.tlist** %cache_after_sp, align 8
  br label %if.end.121

if.end.121:                                       ; preds = %while.end.120, %for.end
  %162 = load %struct.tlist**, %struct.tlist*** %pbefore_sp.addr, align 8
  %163 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %cache_before_sp122 = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %163, i32 0, i32 1
  %164 = load %struct.tlist*, %struct.tlist** %cache_before_sp122, align 8
  call void @merge_tlist(%struct.tlist** %162, %struct.tlist* %164, i32 1)
  %165 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %166 = load %struct.tlist_cache*, %struct.tlist_cache** %t, align 8
  %cache_after_sp123 = getelementptr inbounds %struct.tlist_cache, %struct.tlist_cache* %166, i32 0, i32 2
  %167 = load %struct.tlist*, %struct.tlist** %cache_after_sp123, align 8
  call void @add_tlist(%struct.tlist** %165, %struct.tlist* %167, %union.tree_node* null, i32 1)
  br label %sw.epilog.156

sw.default:                                       ; preds = %if.end.4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %168 = load i8, i8* %class, align 1
  %conv124 = sext i8 %168 to i32
  %cmp125 = icmp eq i32 %conv124, 49
  br i1 %cmp125, label %if.then.127, label %if.end.136

if.then.127:                                      ; preds = %sw.epilog
  %169 = load i32, i32* %code, align 4
  %call128 = call i32 @first_rtl_op(i32 %169)
  %cmp129 = icmp eq i32 %call128, 0
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.then.127
  br label %sw.epilog.156

if.end.132:                                       ; preds = %if.then.127
  %170 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp133 = bitcast %union.tree_node* %170 to %struct.tree_exp*
  %operands134 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp133, i32 0, i32 2
  %arrayidx135 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands134, i32 0, i64 0
  %171 = load %union.tree_node*, %union.tree_node** %arrayidx135, align 8
  store %union.tree_node* %171, %union.tree_node** %x.addr, align 8
  store %union.tree_node* null, %union.tree_node** %writer.addr, align 8
  br label %restart

if.end.136:                                       ; preds = %sw.epilog
  %172 = load i8, i8* %class, align 1
  %conv137 = sext i8 %172 to i32
  switch i32 %conv137, label %sw.epilog.156 [
    i32 114, label %sw.bb.138
    i32 60, label %sw.bb.138
    i32 50, label %sw.bb.138
    i32 98, label %sw.bb.138
    i32 101, label %sw.bb.138
    i32 115, label %sw.bb.138
    i32 120, label %sw.bb.138
  ]

sw.bb.138:                                        ; preds = %if.end.136, %if.end.136, %if.end.136, %if.end.136, %if.end.136, %if.end.136, %if.end.136
  %173 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common141 = bitcast %union.tree_node* %173 to %struct.tree_common*
  %code142 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common141, i32 0, i32 2
  %bf.load143 = load i32, i32* %code142, align 8
  %bf.clear144 = and i32 %bf.load143, 255
  %call145 = call i32 @first_rtl_op(i32 %bf.clear144)
  store i32 %call145, i32* %max, align 4
  store i32 0, i32* %lp, align 4
  br label %for.cond.146

for.cond.146:                                     ; preds = %for.inc.154, %sw.bb.138
  %174 = load i32, i32* %lp, align 4
  %175 = load i32, i32* %max, align 4
  %cmp147 = icmp slt i32 %174, %175
  br i1 %cmp147, label %for.body.149, label %for.end.155

for.body.149:                                     ; preds = %for.cond.146
  store %struct.tlist* null, %struct.tlist** %tmp_nosp, align 8
  store %struct.tlist* null, %struct.tlist** %tmp_before, align 8
  %176 = load i32, i32* %lp, align 4
  %idxprom150 = sext i32 %176 to i64
  %177 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %exp151 = bitcast %union.tree_node* %177 to %struct.tree_exp*
  %operands152 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp151, i32 0, i32 2
  %arrayidx153 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands152, i32 0, i64 %idxprom150
  %178 = load %union.tree_node*, %union.tree_node** %arrayidx153, align 8
  call void @verify_tree(%union.tree_node* %178, %struct.tlist** %tmp_before, %struct.tlist** %tmp_nosp, %union.tree_node* null)
  %179 = load %struct.tlist*, %struct.tlist** %tmp_before, align 8
  call void @merge_tlist(%struct.tlist** %tmp_nosp, %struct.tlist* %179, i32 0)
  %180 = load %struct.tlist**, %struct.tlist*** %pno_sp.addr, align 8
  %181 = load %struct.tlist*, %struct.tlist** %tmp_nosp, align 8
  call void @add_tlist(%struct.tlist** %180, %struct.tlist* %181, %union.tree_node* null, i32 0)
  br label %for.inc.154

for.inc.154:                                      ; preds = %for.body.149
  %182 = load i32, i32* %lp, align 4
  %inc = add nsw i32 %182, 1
  store i32 %inc, i32* %lp, align 4
  br label %for.cond.146

for.end.155:                                      ; preds = %for.cond.146
  br label %sw.epilog.156

sw.epilog.156:                                    ; preds = %if.then, %if.then.2, %sw.bb, %sw.bb.5, %sw.bb.10, %sw.bb.20, %if.end.44, %if.end.57, %while.end, %if.end.121, %if.then.131, %if.end.136, %for.end.155
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @warn_for_collisions(%struct.tlist* %list) #0 {
entry:
  %list.addr = alloca %struct.tlist*, align 8
  %tmp = alloca %struct.tlist*, align 8
  store %struct.tlist* %list, %struct.tlist** %list.addr, align 8
  %0 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  store %struct.tlist* %0, %struct.tlist** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %tobool = icmp ne %struct.tlist* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %2, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %writer, align 8
  %tobool1 = icmp ne %union.tree_node* %3, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %4 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %4, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %6 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %writer2 = getelementptr inbounds %struct.tlist, %struct.tlist* %6, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %writer2, align 8
  %8 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  call void @warn_for_collisions_1(%union.tree_node* %5, %union.tree_node* %7, %struct.tlist* %8, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %9, i32 0, i32 0
  %10 = load %struct.tlist*, %struct.tlist** %next, align 8
  store %struct.tlist* %10, %struct.tlist** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare void @obstack_free(%struct.obstack*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @warning_candidate_p(%union.tree_node* %x) #0 {
entry:
  %x.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 35
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp5, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define internal %struct.tlist* @new_tlist(%struct.tlist* %next, %union.tree_node* %t, %union.tree_node* %writer) #0 {
entry:
  %next.addr = alloca %struct.tlist*, align 8
  %t.addr = alloca %union.tree_node*, align 8
  %writer.addr = alloca %union.tree_node*, align 8
  %l = alloca %struct.tlist*, align 8
  %__h = alloca %struct.obstack*, align 8
  %__o = alloca %struct.obstack*, align 8
  %__len = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %__o1 = alloca %struct.obstack*, align 8
  %value = alloca i8*, align 8
  %tmp35 = alloca i8*, align 8
  store %struct.tlist* %next, %struct.tlist** %next.addr, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %writer, %union.tree_node** %writer.addr, align 8
  store %struct.obstack* @tlist_obstack, %struct.obstack** %__h, align 8
  %0 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %0, %struct.obstack** %__o, align 8
  store i32 24, i32* %__len, align 4
  %1 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %chunk_limit = getelementptr inbounds %struct.obstack, %struct.obstack* %1, i32 0, i32 4
  %2 = load i8*, i8** %chunk_limit, align 8
  %3 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free = getelementptr inbounds %struct.obstack, %struct.obstack* %3, i32 0, i32 3
  %4 = load i8*, i8** %next_free, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %5 = load i32, i32* %__len, align 4
  %conv = sext i32 %5 to i64
  %cmp = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %7 = load i32, i32* %__len, align 4
  call void @_obstack_newchunk(%struct.obstack* %6, i32 %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %__len, align 4
  %9 = load %struct.obstack*, %struct.obstack** %__o, align 8
  %next_free2 = getelementptr inbounds %struct.obstack, %struct.obstack* %9, i32 0, i32 3
  %10 = load i8*, i8** %next_free2, align 8
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext
  store i8* %add.ptr, i8** %next_free2, align 8
  %11 = load %struct.obstack*, %struct.obstack** %__h, align 8
  store %struct.obstack* %11, %struct.obstack** %__o1, align 8
  %12 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base = getelementptr inbounds %struct.obstack, %struct.obstack* %12, i32 0, i32 2
  %13 = load i8*, i8** %object_base, align 8
  store i8* %13, i8** %value, align 8
  %14 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free5 = getelementptr inbounds %struct.obstack, %struct.obstack* %14, i32 0, i32 3
  %15 = load i8*, i8** %next_free5, align 8
  %16 = load i8*, i8** %value, align 8
  %cmp6 = icmp eq i8* %15, %16
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  %17 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %maybe_empty_object = getelementptr inbounds %struct.obstack, %struct.obstack* %17, i32 0, i32 10
  %bf.load = load i8, i8* %maybe_empty_object, align 8
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.end
  %18 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free10 = getelementptr inbounds %struct.obstack, %struct.obstack* %18, i32 0, i32 3
  %19 = load i8*, i8** %next_free10, align 8
  %sub.ptr.lhs.cast11 = ptrtoint i8* %19 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast11, 0
  %20 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask = getelementptr inbounds %struct.obstack, %struct.obstack* %20, i32 0, i32 6
  %21 = load i32, i32* %alignment_mask, align 4
  %conv13 = sext i32 %21 to i64
  %add = add nsw i64 %sub.ptr.sub12, %conv13
  %22 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %alignment_mask14 = getelementptr inbounds %struct.obstack, %struct.obstack* %22, i32 0, i32 6
  %23 = load i32, i32* %alignment_mask14, align 4
  %neg = xor i32 %23, -1
  %conv15 = sext i32 %neg to i64
  %and = and i64 %add, %conv15
  %add.ptr16 = getelementptr inbounds i8, i8* null, i64 %and
  %24 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free17 = getelementptr inbounds %struct.obstack, %struct.obstack* %24, i32 0, i32 3
  store i8* %add.ptr16, i8** %next_free17, align 8
  %25 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free18 = getelementptr inbounds %struct.obstack, %struct.obstack* %25, i32 0, i32 3
  %26 = load i8*, i8** %next_free18, align 8
  %27 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk = getelementptr inbounds %struct.obstack, %struct.obstack* %27, i32 0, i32 1
  %28 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk, align 8
  %29 = bitcast %struct._obstack_chunk* %28 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %26 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %29 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %30 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit22 = getelementptr inbounds %struct.obstack, %struct.obstack* %30, i32 0, i32 4
  %31 = load i8*, i8** %chunk_limit22, align 8
  %32 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk23 = getelementptr inbounds %struct.obstack, %struct.obstack* %32, i32 0, i32 1
  %33 = load %struct._obstack_chunk*, %struct._obstack_chunk** %chunk23, align 8
  %34 = bitcast %struct._obstack_chunk* %33 to i8*
  %sub.ptr.lhs.cast24 = ptrtoint i8* %31 to i64
  %sub.ptr.rhs.cast25 = ptrtoint i8* %34 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25
  %cmp27 = icmp sgt i64 %sub.ptr.sub21, %sub.ptr.sub26
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.end.9
  %35 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %chunk_limit30 = getelementptr inbounds %struct.obstack, %struct.obstack* %35, i32 0, i32 4
  %36 = load i8*, i8** %chunk_limit30, align 8
  %37 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free31 = getelementptr inbounds %struct.obstack, %struct.obstack* %37, i32 0, i32 3
  store i8* %36, i8** %next_free31, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.end.9
  %38 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %next_free33 = getelementptr inbounds %struct.obstack, %struct.obstack* %38, i32 0, i32 3
  %39 = load i8*, i8** %next_free33, align 8
  %40 = load %struct.obstack*, %struct.obstack** %__o1, align 8
  %object_base34 = getelementptr inbounds %struct.obstack, %struct.obstack* %40, i32 0, i32 2
  store i8* %39, i8** %object_base34, align 8
  %41 = load i8*, i8** %value, align 8
  store i8* %41, i8** %tmp35
  %42 = load i8*, i8** %tmp35
  store i8* %42, i8** %tmp
  %43 = load i8*, i8** %tmp
  %44 = bitcast i8* %43 to %struct.tlist*
  store %struct.tlist* %44, %struct.tlist** %l, align 8
  %45 = load %struct.tlist*, %struct.tlist** %next.addr, align 8
  %46 = load %struct.tlist*, %struct.tlist** %l, align 8
  %next36 = getelementptr inbounds %struct.tlist, %struct.tlist* %46, i32 0, i32 0
  store %struct.tlist* %45, %struct.tlist** %next36, align 8
  %47 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %48 = load %struct.tlist*, %struct.tlist** %l, align 8
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %48, i32 0, i32 1
  store %union.tree_node* %47, %union.tree_node** %expr, align 8
  %49 = load %union.tree_node*, %union.tree_node** %writer.addr, align 8
  %50 = load %struct.tlist*, %struct.tlist** %l, align 8
  %writer37 = getelementptr inbounds %struct.tlist, %struct.tlist* %50, i32 0, i32 2
  store %union.tree_node* %49, %union.tree_node** %writer37, align 8
  %51 = load %struct.tlist*, %struct.tlist** %l, align 8
  ret %struct.tlist* %51
}

; Function Attrs: nounwind uwtable
define internal void @merge_tlist(%struct.tlist** %to, %struct.tlist* %add, i32 %copy) #0 {
entry:
  %to.addr = alloca %struct.tlist**, align 8
  %add.addr = alloca %struct.tlist*, align 8
  %copy.addr = alloca i32, align 4
  %end = alloca %struct.tlist**, align 8
  %found = alloca i32, align 4
  %tmp2 = alloca %struct.tlist*, align 8
  %next4 = alloca %struct.tlist*, align 8
  store %struct.tlist** %to, %struct.tlist*** %to.addr, align 8
  store %struct.tlist* %add, %struct.tlist** %add.addr, align 8
  store i32 %copy, i32* %copy.addr, align 4
  %0 = load %struct.tlist**, %struct.tlist*** %to.addr, align 8
  store %struct.tlist** %0, %struct.tlist*** %end, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.tlist**, %struct.tlist*** %end, align 8
  %2 = load %struct.tlist*, %struct.tlist** %1, align 8
  %tobool = icmp ne %struct.tlist* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.tlist**, %struct.tlist*** %end, align 8
  %4 = load %struct.tlist*, %struct.tlist** %3, align 8
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %4, i32 0, i32 0
  store %struct.tlist** %next, %struct.tlist*** %end, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond.1

while.cond.1:                                     ; preds = %if.end.20, %while.end
  %5 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %tobool2 = icmp ne %struct.tlist* %5, null
  br i1 %tobool2, label %while.body.3, label %while.end.21

while.body.3:                                     ; preds = %while.cond.1
  store i32 0, i32* %found, align 4
  %6 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %next5 = getelementptr inbounds %struct.tlist, %struct.tlist* %6, i32 0, i32 0
  %7 = load %struct.tlist*, %struct.tlist** %next5, align 8
  store %struct.tlist* %7, %struct.tlist** %next4, align 8
  %8 = load %struct.tlist**, %struct.tlist*** %to.addr, align 8
  %9 = load %struct.tlist*, %struct.tlist** %8, align 8
  store %struct.tlist* %9, %struct.tlist** %tmp2, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body.3
  %10 = load %struct.tlist*, %struct.tlist** %tmp2, align 8
  %tobool6 = icmp ne %struct.tlist* %10, null
  br i1 %tobool6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.tlist*, %struct.tlist** %tmp2, align 8
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %11, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %13 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %expr7 = getelementptr inbounds %struct.tlist, %struct.tlist* %13, i32 0, i32 1
  %14 = load %union.tree_node*, %union.tree_node** %expr7, align 8
  %cmp = icmp eq %union.tree_node* %12, %14
  br i1 %cmp, label %if.then, label %if.end.12

if.then:                                          ; preds = %for.body
  store i32 1, i32* %found, align 4
  %15 = load %struct.tlist*, %struct.tlist** %tmp2, align 8
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %15, i32 0, i32 2
  %16 = load %union.tree_node*, %union.tree_node** %writer, align 8
  %tobool8 = icmp ne %union.tree_node* %16, null
  br i1 %tobool8, label %if.end, label %if.then.9

if.then.9:                                        ; preds = %if.then
  %17 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %writer10 = getelementptr inbounds %struct.tlist, %struct.tlist* %17, i32 0, i32 2
  %18 = load %union.tree_node*, %union.tree_node** %writer10, align 8
  %19 = load %struct.tlist*, %struct.tlist** %tmp2, align 8
  %writer11 = getelementptr inbounds %struct.tlist, %struct.tlist* %19, i32 0, i32 2
  store %union.tree_node* %18, %union.tree_node** %writer11, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.9, %if.then
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.12
  %20 = load %struct.tlist*, %struct.tlist** %tmp2, align 8
  %next13 = getelementptr inbounds %struct.tlist, %struct.tlist* %20, i32 0, i32 0
  %21 = load %struct.tlist*, %struct.tlist** %next13, align 8
  store %struct.tlist* %21, %struct.tlist** %tmp2, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %found, align 4
  %tobool14 = icmp ne i32 %22, 0
  br i1 %tobool14, label %if.end.20, label %if.then.15

if.then.15:                                       ; preds = %for.end
  %23 = load i32, i32* %copy.addr, align 4
  %tobool16 = icmp ne i32 %23, 0
  br i1 %tobool16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.15
  %24 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.15
  %25 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %expr17 = getelementptr inbounds %struct.tlist, %struct.tlist* %25, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %expr17, align 8
  %27 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %writer18 = getelementptr inbounds %struct.tlist, %struct.tlist* %27, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %writer18, align 8
  %call = call %struct.tlist* @new_tlist(%struct.tlist* null, %union.tree_node* %26, %union.tree_node* %28)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.tlist* [ %24, %cond.true ], [ %call, %cond.false ]
  %29 = load %struct.tlist**, %struct.tlist*** %end, align 8
  store %struct.tlist* %cond, %struct.tlist** %29, align 8
  %30 = load %struct.tlist**, %struct.tlist*** %end, align 8
  %31 = load %struct.tlist*, %struct.tlist** %30, align 8
  %next19 = getelementptr inbounds %struct.tlist, %struct.tlist* %31, i32 0, i32 0
  store %struct.tlist** %next19, %struct.tlist*** %end, align 8
  %32 = load %struct.tlist**, %struct.tlist*** %end, align 8
  store %struct.tlist* null, %struct.tlist** %32, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %cond.end, %for.end
  %33 = load %struct.tlist*, %struct.tlist** %next4, align 8
  store %struct.tlist* %33, %struct.tlist** %add.addr, align 8
  br label %while.cond.1

while.end.21:                                     ; preds = %while.cond.1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_tlist(%struct.tlist** %to, %struct.tlist* %add, %union.tree_node* %exclude_writer, i32 %copy) #0 {
entry:
  %to.addr = alloca %struct.tlist**, align 8
  %add.addr = alloca %struct.tlist*, align 8
  %exclude_writer.addr = alloca %union.tree_node*, align 8
  %copy.addr = alloca i32, align 4
  %next = alloca %struct.tlist*, align 8
  store %struct.tlist** %to, %struct.tlist*** %to.addr, align 8
  store %struct.tlist* %add, %struct.tlist** %add.addr, align 8
  store %union.tree_node* %exclude_writer, %union.tree_node** %exclude_writer.addr, align 8
  store i32 %copy, i32* %copy.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.8, %entry
  %0 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %tobool = icmp ne %struct.tlist* %0, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %next1 = getelementptr inbounds %struct.tlist, %struct.tlist* %1, i32 0, i32 0
  %2 = load %struct.tlist*, %struct.tlist** %next1, align 8
  store %struct.tlist* %2, %struct.tlist** %next, align 8
  %3 = load i32, i32* %copy.addr, align 4
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  %4 = load %struct.tlist**, %struct.tlist*** %to.addr, align 8
  %5 = load %struct.tlist*, %struct.tlist** %4, align 8
  %6 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %next3 = getelementptr inbounds %struct.tlist, %struct.tlist* %6, i32 0, i32 0
  store %struct.tlist* %5, %struct.tlist** %next3, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %union.tree_node*, %union.tree_node** %exclude_writer.addr, align 8
  %tobool4 = icmp ne %union.tree_node* %7, null
  br i1 %tobool4, label %lor.lhs.false, label %if.then.5

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %writer = getelementptr inbounds %struct.tlist, %struct.tlist* %8, i32 0, i32 2
  %9 = load %union.tree_node*, %union.tree_node** %writer, align 8
  %10 = load %union.tree_node*, %union.tree_node** %exclude_writer.addr, align 8
  %cmp = icmp ne %union.tree_node* %9, %10
  br i1 %cmp, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %11 = load i32, i32* %copy.addr, align 4
  %tobool6 = icmp ne i32 %11, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.5
  %12 = load %struct.tlist**, %struct.tlist*** %to.addr, align 8
  %13 = load %struct.tlist*, %struct.tlist** %12, align 8
  %14 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %14, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %16 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  %writer7 = getelementptr inbounds %struct.tlist, %struct.tlist* %16, i32 0, i32 2
  %17 = load %union.tree_node*, %union.tree_node** %writer7, align 8
  %call = call %struct.tlist* @new_tlist(%struct.tlist* %13, %union.tree_node* %15, %union.tree_node* %17)
  br label %cond.end

cond.false:                                       ; preds = %if.then.5
  %18 = load %struct.tlist*, %struct.tlist** %add.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.tlist* [ %call, %cond.true ], [ %18, %cond.false ]
  %19 = load %struct.tlist**, %struct.tlist*** %to.addr, align 8
  store %struct.tlist* %cond, %struct.tlist** %19, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %cond.end, %lor.lhs.false
  %20 = load %struct.tlist*, %struct.tlist** %next, align 8
  store %struct.tlist* %20, %struct.tlist** %add.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @warn_for_collisions_1(%union.tree_node* %written, %union.tree_node* %writer, %struct.tlist* %list, i32 %only_writes) #0 {
entry:
  %written.addr = alloca %union.tree_node*, align 8
  %writer.addr = alloca %union.tree_node*, align 8
  %list.addr = alloca %struct.tlist*, align 8
  %only_writes.addr = alloca i32, align 4
  %tmp = alloca %struct.tlist*, align 8
  store %union.tree_node* %written, %union.tree_node** %written.addr, align 8
  store %union.tree_node* %writer, %union.tree_node** %writer.addr, align 8
  store %struct.tlist* %list, %struct.tlist** %list.addr, align 8
  store i32 %only_writes, i32* %only_writes.addr, align 4
  %0 = load %struct.tlist*, %struct.tlist** @warned_ids, align 8
  store %struct.tlist* %0, %struct.tlist** %tmp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %tobool = icmp ne %struct.tlist* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %expr = getelementptr inbounds %struct.tlist, %struct.tlist* %2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %expr, align 8
  %4 = load %union.tree_node*, %union.tree_node** %written.addr, align 8
  %cmp = icmp eq %union.tree_node* %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %while.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.tlist*, %struct.tlist** %tmp, align 8
  %next = getelementptr inbounds %struct.tlist, %struct.tlist* %5, i32 0, i32 0
  %6 = load %struct.tlist*, %struct.tlist** %next, align 8
  store %struct.tlist* %6, %struct.tlist** %tmp, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end.12, %for.end
  %7 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %tobool1 = icmp ne %struct.tlist* %7, null
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %expr2 = getelementptr inbounds %struct.tlist, %struct.tlist* %8, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %expr2, align 8
  %10 = load %union.tree_node*, %union.tree_node** %written.addr, align 8
  %cmp3 = icmp eq %union.tree_node* %9, %10
  br i1 %cmp3, label %land.lhs.true, label %if.end.12

land.lhs.true:                                    ; preds = %while.body
  %11 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %writer4 = getelementptr inbounds %struct.tlist, %struct.tlist* %11, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %writer4, align 8
  %13 = load %union.tree_node*, %union.tree_node** %writer.addr, align 8
  %cmp5 = icmp ne %union.tree_node* %12, %13
  br i1 %cmp5, label %land.lhs.true.6, label %if.end.12

land.lhs.true.6:                                  ; preds = %land.lhs.true
  %14 = load i32, i32* %only_writes.addr, align 4
  %tobool7 = icmp ne i32 %14, 0
  br i1 %tobool7, label %lor.lhs.false, label %if.then.10

lor.lhs.false:                                    ; preds = %land.lhs.true.6
  %15 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %writer8 = getelementptr inbounds %struct.tlist, %struct.tlist* %15, i32 0, i32 2
  %16 = load %union.tree_node*, %union.tree_node** %writer8, align 8
  %tobool9 = icmp ne %union.tree_node* %16, null
  br i1 %tobool9, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %lor.lhs.false, %land.lhs.true.6
  %17 = load %struct.tlist*, %struct.tlist** @warned_ids, align 8
  %18 = load %union.tree_node*, %union.tree_node** %written.addr, align 8
  %call = call %struct.tlist* @new_tlist(%struct.tlist* %17, %union.tree_node* %18, %union.tree_node* null)
  store %struct.tlist* %call, %struct.tlist** @warned_ids, align 8
  %19 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %expr11 = getelementptr inbounds %struct.tlist, %struct.tlist* %19, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %expr11, align 8
  %decl = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %21 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %21 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %22 = load i8*, i8** %str, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.201, i32 0, i32 0), i8* %22)
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %lor.lhs.false, %land.lhs.true, %while.body
  %23 = load %struct.tlist*, %struct.tlist** %list.addr, align 8
  %next13 = getelementptr inbounds %struct.tlist, %struct.tlist* %23, i32 0, i32 0
  %24 = load %struct.tlist*, %struct.tlist** %next13, align 8
  store %struct.tlist* %24, %struct.tlist** %list.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

declare i32 @first_rtl_op(i32) #1

declare %union.tree_node* @handle_format_attribute(%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*) #1

declare %union.tree_node* @handle_format_arg_attribute(%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i1 @builtin_function_disabled_p(i8* %name) #0 {
entry:
  %retval = alloca i1, align 1
  %name.addr = alloca i8*, align 8
  %p = alloca %struct.disabled_builtin*, align 8
  store i8* %name, i8** %name.addr, align 8
  %0 = load %struct.disabled_builtin*, %struct.disabled_builtin** @disabled_builtins, align 8
  store %struct.disabled_builtin* %0, %struct.disabled_builtin** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.disabled_builtin*, %struct.disabled_builtin** %p, align 8
  %cmp = icmp ne %struct.disabled_builtin* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8
  %3 = load %struct.disabled_builtin*, %struct.disabled_builtin** %p, align 8
  %name1 = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %3, i32 0, i32 0
  %4 = load i8*, i8** %name1, align 8
  %call = call i32 @strcmp(i8* %2, i8* %4) #6
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.disabled_builtin*, %struct.disabled_builtin** %p, align 8
  %next = getelementptr inbounds %struct.disabled_builtin, %struct.disabled_builtin* %5, i32 0, i32 1
  %6 = load %struct.disabled_builtin*, %struct.disabled_builtin** %next, align 8
  store %struct.disabled_builtin* %6, %struct.disabled_builtin** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval
  ret i1 %7
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

declare %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @c_expand_builtin_printf(%union.tree_node* %arglist, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, i32 %ignore, i32 %unlocked) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %arglist.addr = alloca %union.tree_node*, align 8
  %target.addr = alloca %struct.rtx_def*, align 8
  %tmode.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %ignore.addr = alloca i32, align 4
  %unlocked.addr = alloca i32, align 4
  %fn_putchar = alloca %union.tree_node*, align 8
  %fn_puts = alloca %union.tree_node*, align 8
  %fn = alloca %union.tree_node*, align 8
  %format_arg = alloca %union.tree_node*, align 8
  %stripped_string = alloca %union.tree_node*, align 8
  %newlen = alloca i32, align 4
  %newstr = alloca i8*, align 8
  store %union.tree_node* %arglist, %union.tree_node** %arglist.addr, align 8
  store %struct.rtx_def* %target, %struct.rtx_def** %target.addr, align 8
  store i32 %tmode, i32* %tmode.addr, align 4
  store i32 %modifier, i32* %modifier.addr, align 4
  store i32 %ignore, i32* %ignore.addr, align 4
  store i32 %unlocked, i32* %unlocked.addr, align 4
  %0 = load i32, i32* %unlocked.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 69), align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 62), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %2, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %fn_putchar, align 8
  %3 = load i32, i32* %unlocked.addr, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 70), align 8
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 63), align 8
  br label %cond.end.4

cond.end.4:                                       ; preds = %cond.false.3, %cond.true.2
  %cond5 = phi %union.tree_node* [ %4, %cond.true.2 ], [ %5, %cond.false.3 ]
  store %union.tree_node* %cond5, %union.tree_node** %fn_puts, align 8
  %6 = load i32, i32* %ignore.addr, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %cond.end.4
  %7 = load %union.tree_node*, %union.tree_node** %fn_putchar, align 8
  %tobool7 = icmp ne %union.tree_node* %7, null
  br i1 %tobool7, label %lor.lhs.false.8, label %if.then

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %fn_puts, align 8
  %tobool9 = icmp ne %union.tree_node* %8, null
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false.8, %lor.lhs.false, %cond.end.4
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.8
  %9 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %cmp = icmp eq %union.tree_node* %9, null
  br i1 %cmp, label %if.then.13, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list = bitcast %union.tree_node* %10 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common11 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp12 = icmp ne i32 %bf.clear, 13
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %lor.lhs.false.10, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.14:                                        ; preds = %lor.lhs.false.10
  %13 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %call = call i32 @is_valid_printf_arglist(%union.tree_node* %13)
  %tobool15 = icmp ne i32 %call, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.14
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.14
  %14 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list18 = bitcast %union.tree_node* %14 to %struct.tree_list*
  %value19 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list18, i32 0, i32 2
  %15 = load %union.tree_node*, %union.tree_node** %value19, align 8
  store %union.tree_node* %15, %union.tree_node** %format_arg, align 8
  %16 = load %union.tree_node*, %union.tree_node** %format_arg, align 8
  store %union.tree_node* %16, %union.tree_node** %stripped_string, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.17
  %17 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common20 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 115
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %while.cond
  %18 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common26 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 114
  br i1 %cmp30, label %land.lhs.true, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.25
  %19 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common32 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common32, i32 0, i32 2
  %bf.load34 = load i32, i32* %code33, align 8
  %bf.clear35 = and i32 %bf.load34, 255
  %cmp36 = icmp eq i32 %bf.clear35, 116
  br i1 %cmp36, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.31, %lor.lhs.false.25, %while.cond
  %20 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp = bitcast %union.tree_node* %20 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %21 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp37 = icmp ne %union.tree_node* %21, %22
  br i1 %cmp37, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %23 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common38 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type39, align 8
  %type40 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i32 0, i32 6
  %bf.load41 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load41, 9
  %bf.clear42 = and i32 %bf.lshr, 127
  %25 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp43 = bitcast %union.tree_node* %25 to %struct.tree_exp*
  %operands44 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp43, i32 0, i32 2
  %arrayidx45 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands44, i32 0, i64 0
  %26 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 8
  %common46 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type47, align 8
  %type48 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %mode49 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type48, i32 0, i32 6
  %bf.load50 = load i32, i32* %mode49, align 4
  %bf.lshr51 = lshr i32 %bf.load50, 9
  %bf.clear52 = and i32 %bf.lshr51, 127
  %cmp53 = icmp eq i32 %bf.clear42, %bf.clear52
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.31
  %28 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.31 ], [ %cmp53, %land.rhs ]
  br i1 %28, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %29 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp54 = bitcast %union.tree_node* %29 to %struct.tree_exp*
  %operands55 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp54, i32 0, i32 2
  %arrayidx56 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands55, i32 0, i64 0
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx56, align 8
  store %union.tree_node* %30, %union.tree_node** %stripped_string, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %31 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %tobool57 = icmp ne %union.tree_node* %31, null
  br i1 %tobool57, label %land.lhs.true.58, label %if.end.68

land.lhs.true.58:                                 ; preds = %while.end
  %32 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common59 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code60 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 2
  %bf.load61 = load i32, i32* %code60, align 8
  %bf.clear62 = and i32 %bf.load61, 255
  %cmp63 = icmp eq i32 %bf.clear62, 121
  br i1 %cmp63, label %if.then.64, label %if.end.68

if.then.64:                                       ; preds = %land.lhs.true.58
  %33 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp65 = bitcast %union.tree_node* %33 to %struct.tree_exp*
  %operands66 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp65, i32 0, i32 2
  %arrayidx67 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands66, i32 0, i64 0
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx67, align 8
  store %union.tree_node* %34, %union.tree_node** %stripped_string, align 8
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.64, %land.lhs.true.58, %while.end
  %35 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common69 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common69, i32 0, i32 2
  %bf.load71 = load i32, i32* %code70, align 8
  %bf.clear72 = and i32 %bf.load71, 255
  %cmp73 = icmp ne i32 %bf.clear72, 29
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.end.68
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.75:                                        ; preds = %if.end.68
  %36 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string = bitcast %union.tree_node* %36 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 3
  %37 = load i8*, i8** %pointer, align 8
  %call76 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.230, i32 0, i32 0)) #6
  %cmp77 = icmp eq i32 %call76, 0
  br i1 %cmp77, label %if.then.78, label %if.else

if.then.78:                                       ; preds = %if.end.75
  %38 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common79 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 0
  %39 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %39, %union.tree_node** %arglist.addr, align 8
  %40 = load %union.tree_node*, %union.tree_node** %fn_puts, align 8
  store %union.tree_node* %40, %union.tree_node** %fn, align 8
  br label %if.end.135

if.else:                                          ; preds = %if.end.75
  %41 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string80 = bitcast %union.tree_node* %41 to %struct.tree_string*
  %pointer81 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string80, i32 0, i32 3
  %42 = load i8*, i8** %pointer81, align 8
  %call82 = call i32 @strcmp(i8* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0)) #6
  %cmp83 = icmp eq i32 %call82, 0
  br i1 %cmp83, label %if.then.84, label %if.else.87

if.then.84:                                       ; preds = %if.else
  %43 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common85 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %chain86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 0
  %44 = load %union.tree_node*, %union.tree_node** %chain86, align 8
  store %union.tree_node* %44, %union.tree_node** %arglist.addr, align 8
  %45 = load %union.tree_node*, %union.tree_node** %fn_putchar, align 8
  store %union.tree_node* %45, %union.tree_node** %fn, align 8
  br label %if.end.134

if.else.87:                                       ; preds = %if.else
  %46 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string88 = bitcast %union.tree_node* %46 to %struct.tree_string*
  %pointer89 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string88, i32 0, i32 3
  %47 = load i8*, i8** %pointer89, align 8
  %call90 = call i8* @strchr(i8* %47, i32 37) #6
  %tobool91 = icmp ne i8* %call90, null
  br i1 %tobool91, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %if.else.87
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.93:                                        ; preds = %if.else.87
  %48 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string94 = bitcast %union.tree_node* %48 to %struct.tree_string*
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string94, i32 0, i32 2
  %49 = load i32, i32* %length, align 4
  %cmp95 = icmp eq i32 %49, 2
  br i1 %cmp95, label %if.then.96, label %if.else.102

if.then.96:                                       ; preds = %if.end.93
  %50 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string97 = bitcast %union.tree_node* %50 to %struct.tree_string*
  %pointer98 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string97, i32 0, i32 3
  %51 = load i8*, i8** %pointer98, align 8
  %arrayidx99 = getelementptr inbounds i8, i8* %51, i64 0
  %52 = load i8, i8* %arrayidx99, align 1
  %conv = sext i8 %52 to i64
  %call100 = call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0)
  store %union.tree_node* %call100, %union.tree_node** %arglist.addr, align 8
  %53 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %call101 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %53)
  store %union.tree_node* %call101, %union.tree_node** %arglist.addr, align 8
  %54 = load %union.tree_node*, %union.tree_node** %fn_putchar, align 8
  store %union.tree_node* %54, %union.tree_node** %fn, align 8
  br label %if.end.133

if.else.102:                                      ; preds = %if.end.93
  %55 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string103 = bitcast %union.tree_node* %55 to %struct.tree_string*
  %length104 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string103, i32 0, i32 2
  %56 = load i32, i32* %length104, align 4
  %cmp105 = icmp sgt i32 %56, 2
  br i1 %cmp105, label %land.lhs.true.107, label %if.else.131

land.lhs.true.107:                                ; preds = %if.else.102
  %57 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string108 = bitcast %union.tree_node* %57 to %struct.tree_string*
  %length109 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string108, i32 0, i32 2
  %58 = load i32, i32* %length109, align 4
  %sub = sub nsw i32 %58, 2
  %idxprom = sext i32 %sub to i64
  %59 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string110 = bitcast %union.tree_node* %59 to %struct.tree_string*
  %pointer111 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string110, i32 0, i32 3
  %60 = load i8*, i8** %pointer111, align 8
  %arrayidx112 = getelementptr inbounds i8, i8* %60, i64 %idxprom
  %61 = load i8, i8* %arrayidx112, align 1
  %conv113 = sext i8 %61 to i32
  %cmp114 = icmp eq i32 %conv113, 10
  br i1 %cmp114, label %if.then.116, label %if.else.131

if.then.116:                                      ; preds = %land.lhs.true.107
  %62 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string117 = bitcast %union.tree_node* %62 to %struct.tree_string*
  %length118 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string117, i32 0, i32 2
  %63 = load i32, i32* %length118, align 4
  %sub119 = sub nsw i32 %63, 1
  store i32 %sub119, i32* %newlen, align 4
  %64 = load i32, i32* %newlen, align 4
  %conv120 = sext i32 %64 to i64
  %65 = alloca i8, i64 %conv120
  store i8* %65, i8** %newstr, align 8
  %66 = load i8*, i8** %newstr, align 8
  %67 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string121 = bitcast %union.tree_node* %67 to %struct.tree_string*
  %pointer122 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string121, i32 0, i32 3
  %68 = load i8*, i8** %pointer122, align 8
  %69 = load i32, i32* %newlen, align 4
  %sub123 = sub nsw i32 %69, 1
  %conv124 = sext i32 %sub123 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %68, i64 %conv124, i32 1, i1 false)
  %70 = load i32, i32* %newlen, align 4
  %sub125 = sub nsw i32 %70, 1
  %idxprom126 = sext i32 %sub125 to i64
  %71 = load i8*, i8** %newstr, align 8
  %arrayidx127 = getelementptr inbounds i8, i8* %71, i64 %idxprom126
  store i8 0, i8* %arrayidx127, align 1
  %72 = load i32, i32* %newlen, align 4
  %73 = load i8*, i8** %newstr, align 8
  %call128 = call %union.tree_node* @build_string(i32 %72, i8* %73)
  %call129 = call %union.tree_node* @combine_strings(%union.tree_node* %call128)
  store %union.tree_node* %call129, %union.tree_node** %arglist.addr, align 8
  %74 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %call130 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %74)
  store %union.tree_node* %call130, %union.tree_node** %arglist.addr, align 8
  %75 = load %union.tree_node*, %union.tree_node** %fn_puts, align 8
  store %union.tree_node* %75, %union.tree_node** %fn, align 8
  br label %if.end.132

if.else.131:                                      ; preds = %land.lhs.true.107, %if.else.102
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.132:                                       ; preds = %if.then.116
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %if.then.96
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %if.then.84
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.134, %if.then.78
  %76 = load %union.tree_node*, %union.tree_node** %fn, align 8
  %77 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %call136 = call %union.tree_node* @build_function_call(%union.tree_node* %76, %union.tree_node* %77)
  %78 = load i32, i32* %ignore.addr, align 4
  %tobool137 = icmp ne i32 %78, 0
  br i1 %tobool137, label %cond.true.138, label %cond.false.139

cond.true.138:                                    ; preds = %if.end.135
  %79 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end.140

cond.false.139:                                   ; preds = %if.end.135
  %80 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  br label %cond.end.140

cond.end.140:                                     ; preds = %cond.false.139, %cond.true.138
  %cond141 = phi %struct.rtx_def* [ %79, %cond.true.138 ], [ %80, %cond.false.139 ]
  %81 = load i32, i32* %tmode.addr, align 4
  %82 = load i32, i32* %modifier.addr, align 4
  %call142 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call136, %struct.rtx_def* %cond141, i32 %81, i32 %82)
  store %struct.rtx_def* %call142, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.140, %if.else.131, %if.then.92, %if.then.74, %if.then.16, %if.then.13, %if.then
  %83 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %83
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @c_expand_builtin_fprintf(%union.tree_node* %arglist, %struct.rtx_def* %target, i32 %tmode, i32 %modifier, i32 %ignore, i32 %unlocked) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %arglist.addr = alloca %union.tree_node*, align 8
  %target.addr = alloca %struct.rtx_def*, align 8
  %tmode.addr = alloca i32, align 4
  %modifier.addr = alloca i32, align 4
  %ignore.addr = alloca i32, align 4
  %unlocked.addr = alloca i32, align 4
  %fn_fputc = alloca %union.tree_node*, align 8
  %fn_fputs = alloca %union.tree_node*, align 8
  %fn = alloca %union.tree_node*, align 8
  %format_arg = alloca %union.tree_node*, align 8
  %stripped_string = alloca %union.tree_node*, align 8
  %newarglist = alloca %union.tree_node*, align 8
  %newarglist113 = alloca %union.tree_node*, align 8
  store %union.tree_node* %arglist, %union.tree_node** %arglist.addr, align 8
  store %struct.rtx_def* %target, %struct.rtx_def** %target.addr, align 8
  store i32 %tmode, i32* %tmode.addr, align 4
  store i32 %modifier, i32* %modifier.addr, align 4
  store i32 %ignore, i32* %ignore.addr, align 4
  store i32 %unlocked, i32* %unlocked.addr, align 4
  %0 = load i32, i32* %unlocked.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 72), align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 65), align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %1, %cond.true ], [ %2, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %fn_fputc, align 8
  %3 = load i32, i32* %unlocked.addr, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 73), align 8
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([95 x %union.tree_node*], [95 x %union.tree_node*]* @built_in_decls, i32 0, i64 66), align 8
  br label %cond.end.4

cond.end.4:                                       ; preds = %cond.false.3, %cond.true.2
  %cond5 = phi %union.tree_node* [ %4, %cond.true.2 ], [ %5, %cond.false.3 ]
  store %union.tree_node* %cond5, %union.tree_node** %fn_fputs, align 8
  %6 = load i32, i32* %ignore.addr, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %cond.end.4
  %7 = load %union.tree_node*, %union.tree_node** %fn_fputc, align 8
  %tobool7 = icmp ne %union.tree_node* %7, null
  br i1 %tobool7, label %lor.lhs.false.8, label %if.then

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** %fn_fputs, align 8
  %tobool9 = icmp ne %union.tree_node* %8, null
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false.8, %lor.lhs.false, %cond.end.4
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.8
  %9 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %cmp = icmp eq %union.tree_node* %9, null
  br i1 %cmp, label %if.then.28, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list = bitcast %union.tree_node* %10 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common11 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp12 = icmp ne i32 %bf.clear, 13
  br i1 %cmp12, label %if.then.28, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.10
  %13 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 0
  %14 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp15 = icmp eq %union.tree_node* %14, null
  br i1 %cmp15, label %if.then.28, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false.13
  %15 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common17 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %chain18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 0
  %16 = load %union.tree_node*, %union.tree_node** %chain18, align 8
  %list19 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %value20 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list19, i32 0, i32 2
  %17 = load %union.tree_node*, %union.tree_node** %value20, align 8
  %common21 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %common23 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 2
  %bf.load25 = load i32, i32* %code24, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp ne i32 %bf.clear26, 13
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %lor.lhs.false.16, %lor.lhs.false.13, %lor.lhs.false.10, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.29:                                        ; preds = %lor.lhs.false.16
  %19 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common30 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 0
  %20 = load %union.tree_node*, %union.tree_node** %chain31, align 8
  %call = call i32 @is_valid_printf_arglist(%union.tree_node* %20)
  %tobool32 = icmp ne i32 %call, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.29
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.34:                                        ; preds = %if.end.29
  %21 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common35 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %chain36 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common35, i32 0, i32 0
  %22 = load %union.tree_node*, %union.tree_node** %chain36, align 8
  %list37 = bitcast %union.tree_node* %22 to %struct.tree_list*
  %value38 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list37, i32 0, i32 2
  %23 = load %union.tree_node*, %union.tree_node** %value38, align 8
  store %union.tree_node* %23, %union.tree_node** %format_arg, align 8
  %24 = load %union.tree_node*, %union.tree_node** %format_arg, align 8
  store %union.tree_node* %24, %union.tree_node** %stripped_string, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.34
  %25 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common39 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %code40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 2
  %bf.load41 = load i32, i32* %code40, align 8
  %bf.clear42 = and i32 %bf.load41, 255
  %cmp43 = icmp eq i32 %bf.clear42, 115
  br i1 %cmp43, label %land.lhs.true, label %lor.lhs.false.44

lor.lhs.false.44:                                 ; preds = %while.cond
  %26 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common45 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 114
  br i1 %cmp49, label %land.lhs.true, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.44
  %27 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common51 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp eq i32 %bf.clear54, 116
  br i1 %cmp55, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.50, %lor.lhs.false.44, %while.cond
  %28 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp = bitcast %union.tree_node* %28 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp56 = icmp ne %union.tree_node* %29, %30
  br i1 %cmp56, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %31 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common57 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type58, align 8
  %type59 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i32 0, i32 6
  %bf.load60 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load60, 9
  %bf.clear61 = and i32 %bf.lshr, 127
  %33 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp62 = bitcast %union.tree_node* %33 to %struct.tree_exp*
  %operands63 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp62, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands63, i32 0, i64 0
  %34 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8
  %common65 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %type67 = bitcast %union.tree_node* %35 to %struct.tree_type*
  %mode68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i32 0, i32 6
  %bf.load69 = load i32, i32* %mode68, align 4
  %bf.lshr70 = lshr i32 %bf.load69, 9
  %bf.clear71 = and i32 %bf.lshr70, 127
  %cmp72 = icmp eq i32 %bf.clear61, %bf.clear71
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.50
  %36 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.50 ], [ %cmp72, %land.rhs ]
  br i1 %36, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %37 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp73 = bitcast %union.tree_node* %37 to %struct.tree_exp*
  %operands74 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp73, i32 0, i32 2
  %arrayidx75 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands74, i32 0, i64 0
  %38 = load %union.tree_node*, %union.tree_node** %arrayidx75, align 8
  store %union.tree_node* %38, %union.tree_node** %stripped_string, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %39 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %tobool76 = icmp ne %union.tree_node* %39, null
  br i1 %tobool76, label %land.lhs.true.77, label %if.end.87

land.lhs.true.77:                                 ; preds = %while.end
  %40 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common78 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %code79 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 2
  %bf.load80 = load i32, i32* %code79, align 8
  %bf.clear81 = and i32 %bf.load80, 255
  %cmp82 = icmp eq i32 %bf.clear81, 121
  br i1 %cmp82, label %if.then.83, label %if.end.87

if.then.83:                                       ; preds = %land.lhs.true.77
  %41 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %exp84 = bitcast %union.tree_node* %41 to %struct.tree_exp*
  %operands85 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp84, i32 0, i32 2
  %arrayidx86 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands85, i32 0, i64 0
  %42 = load %union.tree_node*, %union.tree_node** %arrayidx86, align 8
  store %union.tree_node* %42, %union.tree_node** %stripped_string, align 8
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.83, %land.lhs.true.77, %while.end
  %43 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %common88 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %code89, align 8
  %bf.clear91 = and i32 %bf.load90, 255
  %cmp92 = icmp ne i32 %bf.clear91, 29
  br i1 %cmp92, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %if.end.87
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.94:                                        ; preds = %if.end.87
  %44 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string = bitcast %union.tree_node* %44 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 3
  %45 = load i8*, i8** %pointer, align 8
  %call95 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.233, i32 0, i32 0)) #6
  %cmp96 = icmp eq i32 %call95, 0
  br i1 %cmp96, label %if.then.97, label %if.else

if.then.97:                                       ; preds = %if.end.94
  %46 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list98 = bitcast %union.tree_node* %46 to %struct.tree_list*
  %value99 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list98, i32 0, i32 2
  %47 = load %union.tree_node*, %union.tree_node** %value99, align 8
  %call100 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %47)
  store %union.tree_node* %call100, %union.tree_node** %newarglist, align 8
  %48 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common101 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %chain102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 0
  %49 = load %union.tree_node*, %union.tree_node** %chain102, align 8
  %common103 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %chain104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 0
  %50 = load %union.tree_node*, %union.tree_node** %chain104, align 8
  %list105 = bitcast %union.tree_node* %50 to %struct.tree_list*
  %value106 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list105, i32 0, i32 2
  %51 = load %union.tree_node*, %union.tree_node** %value106, align 8
  %52 = load %union.tree_node*, %union.tree_node** %newarglist, align 8
  %call107 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %51, %union.tree_node* %52)
  store %union.tree_node* %call107, %union.tree_node** %arglist.addr, align 8
  %53 = load %union.tree_node*, %union.tree_node** %fn_fputs, align 8
  store %union.tree_node* %53, %union.tree_node** %fn, align 8
  br label %if.end.140

if.else:                                          ; preds = %if.end.94
  %54 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string108 = bitcast %union.tree_node* %54 to %struct.tree_string*
  %pointer109 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string108, i32 0, i32 3
  %55 = load i8*, i8** %pointer109, align 8
  %call110 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0)) #6
  %cmp111 = icmp eq i32 %call110, 0
  br i1 %cmp111, label %if.then.112, label %if.else.124

if.then.112:                                      ; preds = %if.else
  %56 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list114 = bitcast %union.tree_node* %56 to %struct.tree_list*
  %value115 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list114, i32 0, i32 2
  %57 = load %union.tree_node*, %union.tree_node** %value115, align 8
  %call116 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %57)
  store %union.tree_node* %call116, %union.tree_node** %newarglist113, align 8
  %58 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common117 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %chain118 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common117, i32 0, i32 0
  %59 = load %union.tree_node*, %union.tree_node** %chain118, align 8
  %common119 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %chain120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common119, i32 0, i32 0
  %60 = load %union.tree_node*, %union.tree_node** %chain120, align 8
  %list121 = bitcast %union.tree_node* %60 to %struct.tree_list*
  %value122 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list121, i32 0, i32 2
  %61 = load %union.tree_node*, %union.tree_node** %value122, align 8
  %62 = load %union.tree_node*, %union.tree_node** %newarglist113, align 8
  %call123 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %61, %union.tree_node* %62)
  store %union.tree_node* %call123, %union.tree_node** %arglist.addr, align 8
  %63 = load %union.tree_node*, %union.tree_node** %fn_fputc, align 8
  store %union.tree_node* %63, %union.tree_node** %fn, align 8
  br label %if.end.139

if.else.124:                                      ; preds = %if.else
  %64 = load %union.tree_node*, %union.tree_node** %stripped_string, align 8
  %string125 = bitcast %union.tree_node* %64 to %struct.tree_string*
  %pointer126 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string125, i32 0, i32 3
  %65 = load i8*, i8** %pointer126, align 8
  %call127 = call i8* @strchr(i8* %65, i32 37) #6
  %tobool128 = icmp ne i8* %call127, null
  br i1 %tobool128, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.else.124
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.130:                                       ; preds = %if.else.124
  %66 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %common131 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %chain132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 0
  %67 = load %union.tree_node*, %union.tree_node** %chain132, align 8
  %list133 = bitcast %union.tree_node* %67 to %struct.tree_list*
  %value134 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list133, i32 0, i32 2
  %68 = load %union.tree_node*, %union.tree_node** %value134, align 8
  %69 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %list135 = bitcast %union.tree_node* %69 to %struct.tree_list*
  %value136 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list135, i32 0, i32 2
  %70 = load %union.tree_node*, %union.tree_node** %value136, align 8
  %call137 = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %70)
  %call138 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %68, %union.tree_node* %call137)
  store %union.tree_node* %call138, %union.tree_node** %arglist.addr, align 8
  %71 = load %union.tree_node*, %union.tree_node** %fn_fputs, align 8
  store %union.tree_node* %71, %union.tree_node** %fn, align 8
  br label %if.end.139

if.end.139:                                       ; preds = %if.end.130, %if.then.112
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %if.then.97
  %72 = load %union.tree_node*, %union.tree_node** %fn, align 8
  %73 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  %call141 = call %union.tree_node* @build_function_call(%union.tree_node* %72, %union.tree_node* %73)
  %74 = load i32, i32* %ignore.addr, align 4
  %tobool142 = icmp ne i32 %74, 0
  br i1 %tobool142, label %cond.true.143, label %cond.false.144

cond.true.143:                                    ; preds = %if.end.140
  %75 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end.145

cond.false.144:                                   ; preds = %if.end.140
  %76 = load %struct.rtx_def*, %struct.rtx_def** %target.addr, align 8
  br label %cond.end.145

cond.end.145:                                     ; preds = %cond.false.144, %cond.true.143
  %cond146 = phi %struct.rtx_def* [ %75, %cond.true.143 ], [ %76, %cond.false.144 ]
  %77 = load i32, i32* %tmode.addr, align 4
  %78 = load i32, i32* %modifier.addr, align 4
  %call147 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call141, %struct.rtx_def* %cond146, i32 %77, i32 %78)
  store %struct.rtx_def* %call147, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.145, %if.then.129, %if.then.93, %if.then.33, %if.then.28, %if.then
  %79 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %79
}

; Function Attrs: nounwind uwtable
define internal i32 @is_valid_printf_arglist(%union.tree_node* %arglist) #0 {
entry:
  %arglist.addr = alloca %union.tree_node*, align 8
  %SAVE_pedantic = alloca i32, align 4
  %diagnostic_occurred = alloca i32, align 4
  %attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* %arglist, %union.tree_node** %arglist.addr, align 8
  %0 = load i32, i32* @pedantic, align 4
  store i32 %0, i32* %SAVE_pedantic, align 4
  store i32 0, i32* %diagnostic_occurred, align 4
  store i32 1, i32* @pedantic, align 4
  %call = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0))
  %call1 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0))
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call2 = call %union.tree_node* @build_int_2_wide(i64 2, i64 0)
  %call3 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call2, %union.tree_node* null)
  %call4 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %1, %union.tree_node* %call3)
  %call5 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call1, %union.tree_node* %call4)
  %call6 = call %union.tree_node* @tree_cons(%union.tree_node* %call, %union.tree_node* %call5, %union.tree_node* null)
  store %union.tree_node* %call6, %union.tree_node** %attrs, align 8
  %2 = load %union.tree_node*, %union.tree_node** %attrs, align 8
  %3 = load %union.tree_node*, %union.tree_node** %arglist.addr, align 8
  call void @check_function_format(i32* %diagnostic_occurred, %union.tree_node* %2, %union.tree_node* %3)
  %4 = load i32, i32* %SAVE_pedantic, align 4
  store i32 %4, i32* @pedantic, align 4
  %5 = load i32, i32* %diagnostic_occurred, align 4
  %tobool = icmp ne i32 %5, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  ret i32 %lnot.ext
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_function_call(%union.tree_node*, %union.tree_node*) #1

declare void @check_function_format(i32*, %union.tree_node*, %union.tree_node*) #1

declare void @ggc_add_tree_root(%union.tree_node**, i32) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
