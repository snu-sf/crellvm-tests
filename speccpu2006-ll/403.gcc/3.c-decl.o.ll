; ModuleID = 'c-decl.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cpp_reader = type opaque
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type { %struct.stmt_tree_s, %union.tree_node* }
%struct.stmt_tree_s = type { %union.tree_node*, %union.tree_node*, i8*, i32 }
%struct.lang_decl = type { %struct.c_lang_decl, %union.tree_node* }
%struct.c_lang_decl = type { i8, [3 x i8] }
%struct.binding_level = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.binding_level*, i8, i8, i8, i8, i8, i32, %union.tree_node* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i1 (%union.tree_node*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void ()*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)* }
%struct.lang_identifier = type { %struct.c_common_identifier, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.c_common_identifier = type { %struct.tree_common, %struct.cpp_hashnode }
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon.3 }
%struct.ht_identifier = type { i32, i8* }
%union.anon.3 = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type { i32, [1 x %union.tree_node*] }
%struct.tree_string = type { %struct.tree_common, %struct.rtx_def*, i32, i8* }
%struct.tree_exp = type { %struct.tree_common, i32, [1 x %union.tree_node*] }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_block = type { %struct.tree_common, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.anon.0 = type { i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.rtx_def*, %struct.anon }
%struct.anon = type { i64, i64 }
%struct.c_language_function = type { %struct.language_function, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, i32, %struct.binding_level* }

@flag_isoc94 = global i32 0, align 4
@flag_isoc99 = global i32 0, align 4
@flag_hosted = global i32 1, align 4
@flag_noniso_default_format_attributes = global i32 1, align 4
@flag_allow_single_precision = global i32 0, align 4
@flag_signed_bitfields = global i32 1, align 4
@explicit_flag_signed_bitfields = global i32 0, align 4
@warn_long_long = global i32 1, align 4
@mesg_implicit_function_declaration = global i32 -1, align 4
@warn_redundant_decls = global i32 0, align 4
@warn_nested_externs = global i32 0, align 4
@warn_char_subscripts = global i32 0, align 4
@warn_unknown_pragmas = global i32 0, align 4
@warn_sign_compare = global i32 -1, align 4
@warn_float_equal = global i32 0, align 4
@warn_multichar = global i32 1, align 4
@dollars_in_ident = global i32 1, align 4
@parse_in = external global %struct.cpp_reader*, align 8
@.str = private unnamed_addr constant [14 x i8] c"-ftraditional\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"-traditional\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"-traditional is deprecated and may be removed\00", align 1
@flag_traditional = common global i32 0, align 4
@flag_writable_strings = external global i32, align 4
@.str.3 = private unnamed_addr constant [25 x i8] c"-fallow-single-precision\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"-fhosted\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"-fno-freestanding\00", align 1
@flag_no_builtin = external global i32, align 4
@.str.6 = private unnamed_addr constant [15 x i8] c"-ffreestanding\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"-fno-hosted\00", align 1
@warn_main = common global i32 0, align 4
@.str.8 = private unnamed_addr constant [16 x i8] c"-fnotraditional\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"-fno-traditional\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"-std=\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"iso9899:1990\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"c89\00", align 1
@flag_no_asm = common global i32 0, align 4
@flag_no_nonansi_builtin = external global i32, align 4
@.str.13 = private unnamed_addr constant [15 x i8] c"iso9899:199409\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"iso9899:199x\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"iso9899:1999\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"c9x\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"c99\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"gnu89\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"gnu9x\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"gnu99\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"unknown C standard `%s'\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"-fdollars-in-identifiers\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"-fno-dollars-in-identifiers\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"-fsigned-char\00", align 1
@flag_signed_char = external global i32, align 4
@.str.25 = private unnamed_addr constant [16 x i8] c"-funsigned-char\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"-fno-signed-char\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"-fno-unsigned-char\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"-fsigned-bitfields\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"-fno-unsigned-bitfields\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"-funsigned-bitfields\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"-fno-signed-bitfields\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"-fshort-enums\00", align 1
@flag_short_enums = external global i32, align 4
@.str.33 = private unnamed_addr constant [17 x i8] c"-fno-short-enums\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"-fshort-wchar\00", align 1
@flag_short_wchar = external global i32, align 4
@.str.35 = private unnamed_addr constant [17 x i8] c"-fno-short-wchar\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"-fcond-mismatch\00", align 1
@flag_cond_mismatch = common global i32 0, align 4
@.str.37 = private unnamed_addr constant [19 x i8] c"-fno-cond-mismatch\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"-fshort-double\00", align 1
@flag_short_double = external global i32, align 4
@.str.39 = private unnamed_addr constant [18 x i8] c"-fno-short-double\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"-fasm\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"-fno-asm\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"-fbuiltin\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"-fno-builtin\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"-fno-builtin-\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"-ansi\00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"-Werror-implicit-function-declaration\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c"-Wimplicit-function-declaration\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"-Wno-implicit-function-declaration\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"-Wimplicit-int\00", align 1
@warn_implicit_int = common global i32 0, align 4
@.str.50 = private unnamed_addr constant [18 x i8] c"-Wno-implicit-int\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"-Wimplicit\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"-Wno-implicit\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"-Wlong-long\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"-Wno-long-long\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"-Wwrite-strings\00", align 1
@flag_const_strings = common global i32 0, align 4
@.str.56 = private unnamed_addr constant [19 x i8] c"-Wno-write-strings\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"-Wcast-qual\00", align 1
@warn_cast_qual = common global i32 0, align 4
@.str.58 = private unnamed_addr constant [15 x i8] c"-Wno-cast-qual\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"-Wbad-function-cast\00", align 1
@warn_bad_function_cast = common global i32 0, align 4
@.str.60 = private unnamed_addr constant [23 x i8] c"-Wno-bad-function-cast\00", align 1
@.str.61 = private unnamed_addr constant [22 x i8] c"-Wno-missing-noreturn\00", align 1
@warn_missing_noreturn = external global i32, align 4
@.str.62 = private unnamed_addr constant [27 x i8] c"-Wmissing-format-attribute\00", align 1
@warn_missing_format_attribute = common global i32 0, align 4
@.str.63 = private unnamed_addr constant [30 x i8] c"-Wno-missing-format-attribute\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"-Wpointer-arith\00", align 1
@warn_pointer_arith = common global i32 0, align 4
@.str.65 = private unnamed_addr constant [19 x i8] c"-Wno-pointer-arith\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"-Wstrict-prototypes\00", align 1
@warn_strict_prototypes = common global i32 0, align 4
@.str.67 = private unnamed_addr constant [23 x i8] c"-Wno-strict-prototypes\00", align 1
@.str.68 = private unnamed_addr constant [21 x i8] c"-Wmissing-prototypes\00", align 1
@warn_missing_prototypes = common global i32 0, align 4
@.str.69 = private unnamed_addr constant [24 x i8] c"-Wno-missing-prototypes\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"-Wmissing-declarations\00", align 1
@warn_missing_declarations = common global i32 0, align 4
@.str.71 = private unnamed_addr constant [26 x i8] c"-Wno-missing-declarations\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"-Wredundant-decls\00", align 1
@.str.73 = private unnamed_addr constant [21 x i8] c"-Wno-redundant-decls\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"-Wnested-externs\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"-Wno-nested-externs\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"-Wtraditional\00", align 1
@warn_traditional = common global i32 0, align 4
@.str.77 = private unnamed_addr constant [17 x i8] c"-Wno-traditional\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"-Wformat=\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"-Wformat\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"-Wno-format\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"-Wformat-y2k\00", align 1
@warn_format_y2k = external global i32, align 4
@.str.82 = private unnamed_addr constant [16 x i8] c"-Wno-format-y2k\00", align 1
@.str.83 = private unnamed_addr constant [20 x i8] c"-Wformat-extra-args\00", align 1
@warn_format_extra_args = external global i32, align 4
@.str.84 = private unnamed_addr constant [23 x i8] c"-Wno-format-extra-args\00", align 1
@.str.85 = private unnamed_addr constant [20 x i8] c"-Wformat-nonliteral\00", align 1
@warn_format_nonliteral = external global i32, align 4
@.str.86 = private unnamed_addr constant [23 x i8] c"-Wno-format-nonliteral\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"-Wformat-security\00", align 1
@warn_format_security = external global i32, align 4
@.str.88 = private unnamed_addr constant [21 x i8] c"-Wno-format-security\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"-Wchar-subscripts\00", align 1
@.str.90 = private unnamed_addr constant [21 x i8] c"-Wno-char-subscripts\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"-Wconversion\00", align 1
@warn_conversion = common global i32 0, align 4
@.str.92 = private unnamed_addr constant [16 x i8] c"-Wno-conversion\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"-Wparentheses\00", align 1
@warn_parentheses = common global i32 0, align 4
@.str.94 = private unnamed_addr constant [17 x i8] c"-Wno-parentheses\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"-Wreturn-type\00", align 1
@warn_return_type = external global i32, align 4
@.str.96 = private unnamed_addr constant [17 x i8] c"-Wno-return-type\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"-Wsequence-point\00", align 1
@warn_sequence_point = external global i32, align 4
@.str.98 = private unnamed_addr constant [20 x i8] c"-Wno-sequence-point\00", align 1
@.str.99 = private unnamed_addr constant [10 x i8] c"-Wcomment\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"-Wno-comment\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"-Wcomments\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"-Wno-comments\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"-Wtrigraphs\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"-Wno-trigraphs\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"-Wundef\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"-Wno-undef\00", align 1
@.str.107 = private unnamed_addr constant [9 x i8] c"-Wimport\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"-Wno-import\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"-Wmissing-braces\00", align 1
@warn_missing_braces = common global i32 0, align 4
@.str.110 = private unnamed_addr constant [20 x i8] c"-Wno-missing-braces\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"-Wmain\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"-Wno-main\00", align 1
@.str.113 = private unnamed_addr constant [15 x i8] c"-Wsign-compare\00", align 1
@.str.114 = private unnamed_addr constant [18 x i8] c"-Wno-sign-compare\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"-Wfloat-equal\00", align 1
@.str.116 = private unnamed_addr constant [17 x i8] c"-Wno-float-equal\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c"-Wmultichar\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c"-Wno-multichar\00", align 1
@.str.119 = private unnamed_addr constant [14 x i8] c"-Wdiv-by-zero\00", align 1
@warn_div_by_zero = external global i32, align 4
@.str.120 = private unnamed_addr constant [17 x i8] c"-Wno-div-by-zero\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"-Wunknown-pragmas\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"-Wno-unknown-pragmas\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"-Wall\00", align 1
@warn_uninitialized = external global i32, align 4
@warn_switch = external global i32, align 4
@.str.124 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"implicit\00", align 1
@.str.128 = private unnamed_addr constant [12 x i8] c"error locus\00", align 1
@.str.129 = private unnamed_addr constant [12 x i8] c"limbo value\00", align 1
@ridpointers = external global %union.tree_node**, align 8
@.str.130 = private unnamed_addr constant [5 x i8] c"rid \00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c" \22%s\22\00", align 1
@global_trees = external global [51 x %union.tree_node*], align 16
@.str.133 = private unnamed_addr constant [39 x i8] c"array `%s' assumed to have one element\00", align 1
@current_binding_level = internal global %struct.binding_level* null, align 8
@global_binding_level = internal global %struct.binding_level* null, align 8
@keep_next_level_flag = internal global i32 0, align 4
@named_labels = internal global %union.tree_node* null, align 8
@free_binding_level = internal global %struct.binding_level* null, align 8
@clear_binding_level = internal global %struct.binding_level zeroinitializer, align 8
@keep_next_if_subblocks = internal global i32 0, align 4
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*, align 8
@.str.134 = private unnamed_addr constant [32 x i8] c"label `%s' used but not defined\00", align 1
@input_filename = external global i8*, align 8
@lineno = external global i32, align 4
@warn_unused_label = external global i32, align 4
@.str.135 = private unnamed_addr constant [32 x i8] c"label `%s' defined but not used\00", align 1
@current_function_decl = external global %union.tree_node*, align 8
@label_level_chain = internal global %struct.binding_level* null, align 8
@shadowed_labels = internal global %union.tree_node* null, align 8
@.str.136 = private unnamed_addr constant [34 x i8] c"nested extern declaration of `%s'\00", align 1
@.str.137 = private unnamed_addr constant [31 x i8] c"`%s' used prior to declaration\00", align 1
@.str.138 = private unnamed_addr constant [57 x i8] c"`%s' was declared implicitly `extern' and later `static'\00", align 1
@.str.139 = private unnamed_addr constant [29 x i8] c"previous declaration of `%s'\00", align 1
@.str.140 = private unnamed_addr constant [42 x i8] c"type mismatch with previous external decl\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"previous external decl of `%s'\00", align 1
@.str.142 = private unnamed_addr constant [49 x i8] c"type mismatch with previous implicit declaration\00", align 1
@.str.143 = private unnamed_addr constant [38 x i8] c"previous implicit declaration of `%s'\00", align 1
@.str.144 = private unnamed_addr constant [36 x i8] c"type of external `%s' is not global\00", align 1
@integer_types = external global [11 x %union.tree_node*], align 16
@.str.145 = private unnamed_addr constant [56 x i8] c"`%s' was previously implicitly declared to return `int'\00", align 1
@.str.146 = private unnamed_addr constant [46 x i8] c"`%s' was declared `extern' and later `static'\00", align 1
@.str.147 = private unnamed_addr constant [52 x i8] c"extern declaration of `%s' doesn't match global one\00", align 1
@c_global_trees = external global [32 x %union.tree_node*], align 16
@.str.148 = private unnamed_addr constant [53 x i8] c"function `%s' was previously declared within a block\00", align 1
@.str.149 = private unnamed_addr constant [38 x i8] c"implicit declaration of function `%s'\00", align 1
@.str.150 = private unnamed_addr constant [44 x i8] c"label %s referenced outside of any function\00", align 1
@.str.151 = private unnamed_addr constant [33 x i8] c"duplicate label declaration `%s'\00", align 1
@.str.152 = private unnamed_addr constant [31 x i8] c"this is a previous declaration\00", align 1
@in_system_header = external global i32, align 4
@.str.153 = private unnamed_addr constant [79 x i8] c"traditional C lacks a separate namespace for labels, identifier `%s' conflicts\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"duplicate label `%s'\00", align 1
@pending_invalid_xref = common global %union.tree_node* null, align 8
@pending_invalid_xref_file = common global i8* null, align 8
@pending_invalid_xref_line = common global i32 0, align 4
@.str.155 = private unnamed_addr constant [34 x i8] c"`%s' defined as wrong kind of tag\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"__g77_integer\00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"__g77_uinteger\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"__g77_longint\00", align 1
@.str.160 = private unnamed_addr constant [15 x i8] c"__g77_ulongint\00", align 1
@pedantic = external global i32, align 4
@pedantic_lvalues = external global i32, align 4
@make_fname_decl = external global %union.tree_node* (%union.tree_node*, i32)*, align 8
@incomplete_decl_finalize_hook = external global void (%union.tree_node*)*, align 8
@c_stmt_tree = internal global %struct.stmt_tree_s zeroinitializer, align 8
@c_scope_stmt_stack = internal global %union.tree_node* null, align 8
@static_ctors = common global %union.tree_node* null, align 8
@static_dtors = common global %union.tree_node* null, align 8
@.str.161 = private unnamed_addr constant [47 x i8] c"unnamed struct/union that defines no instances\00", align 1
@.str.162 = private unnamed_addr constant [50 x i8] c"useless keyword or type name in empty declaration\00", align 1
@.str.163 = private unnamed_addr constant [45 x i8] c"two types specified in one empty declaration\00", align 1
@.str.164 = private unnamed_addr constant [18 x i8] c"empty declaration\00", align 1
@.str.165 = private unnamed_addr constant [84 x i8] c"ISO C89 does not support `static' or type qualifiers in parameter array declarators\00", align 1
@.str.166 = private unnamed_addr constant [49 x i8] c"ISO C89 does not support `[*]' array declarators\00", align 1
@.str.167 = private unnamed_addr constant [60 x i8] c"GCC does not yet properly implement `[*]' array declarators\00", align 1
@.str.168 = private unnamed_addr constant [49 x i8] c"static or type qualifiers in abstract declarator\00", align 1
@.str.169 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@deprecated_state = internal global i32 0, align 4
@.str.170 = private unnamed_addr constant [27 x i8] c"`%s' is usually a function\00", align 1
@.str.171 = private unnamed_addr constant [28 x i8] c"typedef `%s' is initialized\00", align 1
@.str.172 = private unnamed_addr constant [45 x i8] c"function `%s' is initialized like a variable\00", align 1
@.str.173 = private unnamed_addr constant [30 x i8] c"parameter `%s' is initialized\00", align 1
@.str.174 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str.175 = private unnamed_addr constant [50 x i8] c"variable `%s' has initializer but incomplete type\00", align 1
@.str.176 = private unnamed_addr constant [44 x i8] c"elements of array `%s' have incomplete type\00", align 1
@flag_no_common = external global i32, align 4
@.str.177 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.178 = private unnamed_addr constant [46 x i8] c"inline function `%s' given attribute noinline\00", align 1
@.str.179 = private unnamed_addr constant [44 x i8] c"initializer fails to determine size of `%s'\00", align 1
@.str.180 = private unnamed_addr constant [27 x i8] c"array size missing in `%s'\00", align 1
@.str.181 = private unnamed_addr constant [33 x i8] c"zero or negative size array `%s'\00", align 1
@.str.182 = private unnamed_addr constant [33 x i8] c"storage size of `%s' isn't known\00", align 1
@.str.183 = private unnamed_addr constant [36 x i8] c"storage size of `%s' isn't constant\00", align 1
@.str.184 = private unnamed_addr constant [58 x i8] c"ignoring asm-specifier for non-static local variable `%s'\00", align 1
@immediate_size_expand = external global i32, align 4
@.str.185 = private unnamed_addr constant [9 x i8] c"c-decl.c\00", align 1
@__FUNCTION__.build_compound_literal = private unnamed_addr constant [23 x i8] c"build_compound_literal\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"%s.%d\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"__compound_literal\00", align 1
@var_labelno = external global i32, align 4
@.str.188 = private unnamed_addr constant [46 x i8] c"parameter `%s' has just a forward declaration\00", align 1
@target_flags = external global i32, align 4
@.str.189 = private unnamed_addr constant [49 x i8] c"`void' in parameter list must be the entire list\00", align 1
@parmlist_tags_warning.already = internal global i32 0, align 4
@.str.190 = private unnamed_addr constant [43 x i8] c"`struct %s' declared inside parameter list\00", align 1
@.str.191 = private unnamed_addr constant [42 x i8] c"`union %s' declared inside parameter list\00", align 1
@.str.192 = private unnamed_addr constant [41 x i8] c"`enum %s' declared inside parameter list\00", align 1
@.str.193 = private unnamed_addr constant [48 x i8] c"anonymous struct declared inside parameter list\00", align 1
@.str.194 = private unnamed_addr constant [47 x i8] c"anonymous union declared inside parameter list\00", align 1
@.str.195 = private unnamed_addr constant [46 x i8] c"anonymous enum declared inside parameter list\00", align 1
@.str.196 = private unnamed_addr constant [86 x i8] c"its scope is only this definition or declaration, which is probably not what you want\00", align 1
@flag_pack_struct = external global i32, align 4
@.str.197 = private unnamed_addr constant [27 x i8] c"redefinition of `union %s'\00", align 1
@.str.198 = private unnamed_addr constant [28 x i8] c"redefinition of `struct %s'\00", align 1
@.str.199 = private unnamed_addr constant [66 x i8] c"unnamed fields of type other than struct or union are not allowed\00", align 1
@.str.200 = private unnamed_addr constant [24 x i8] c"%s defined inside parms\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.202 = private unnamed_addr constant [10 x i8] c"structure\00", align 1
@.str.203 = private unnamed_addr constant [13 x i8] c"%s has no %s\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.205 = private unnamed_addr constant [14 x i8] c"named members\00", align 1
@.str.206 = private unnamed_addr constant [8 x i8] c"members\00", align 1
@.str.207 = private unnamed_addr constant [28 x i8] c"nested redefinition of `%s'\00", align 1
@.str.208 = private unnamed_addr constant [45 x i8] c"bit-field `%s' width not an integer constant\00", align 1
@.str.209 = private unnamed_addr constant [32 x i8] c"bit-field `%s' has invalid type\00", align 1
@.str.210 = private unnamed_addr constant [37 x i8] c"bit-field `%s' type invalid in ISO C\00", align 1
@.str.211 = private unnamed_addr constant [33 x i8] c"negative width in bit-field `%s'\00", align 1
@.str.212 = private unnamed_addr constant [31 x i8] c"width of `%s' exceeds its type\00", align 1
@.str.213 = private unnamed_addr constant [30 x i8] c"zero width for bit-field `%s'\00", align 1
@.str.214 = private unnamed_addr constant [41 x i8] c"`%s' is narrower than values of its type\00", align 1
@targetm = external global %struct.gcc_target, align 8
@.str.215 = private unnamed_addr constant [31 x i8] c"flexible array member in union\00", align 1
@.str.216 = private unnamed_addr constant [43 x i8] c"flexible array member not at end of struct\00", align 1
@.str.217 = private unnamed_addr constant [48 x i8] c"flexible array member in otherwise empty struct\00", align 1
@.str.218 = private unnamed_addr constant [22 x i8] c"duplicate member `%s'\00", align 1
@.str.219 = private unnamed_addr constant [33 x i8] c"union cannot be made transparent\00", align 1
@.str.220 = private unnamed_addr constant [27 x i8] c"redeclaration of `enum %s'\00", align 1
@enum_next_value = internal global %union.tree_node* null, align 8
@enum_overflow = internal global i32 0, align 4
@.str.221 = private unnamed_addr constant [26 x i8] c"enum defined inside parms\00", align 1
@.str.222 = private unnamed_addr constant [51 x i8] c"enumeration values exceed range of largest integer\00", align 1
@.str.223 = private unnamed_addr constant [47 x i8] c"enumerator value for `%s' not integer constant\00", align 1
@.str.224 = private unnamed_addr constant [31 x i8] c"overflow in enumeration values\00", align 1
@.str.225 = private unnamed_addr constant [52 x i8] c"ISO C restricts enumerator values to range of `int'\00", align 1
@current_function_returns_value = common global i32 0, align 4
@current_function_returns_null = common global i32 0, align 4
@current_function_returns_abnormally = common global i32 0, align 4
@warn_about_return_type = internal global i32 0, align 4
@current_extern_inline = internal global i32 0, align 4
@c_function_varargs = internal global i32 0, align 4
@.str.226 = private unnamed_addr constant [34 x i8] c"return type is an incomplete type\00", align 1
@.str.227 = private unnamed_addr constant [30 x i8] c"return type defaults to `int'\00", align 1
@last_function_parms = internal global %union.tree_node* null, align 8
@current_function_parms = internal global %union.tree_node* null, align 8
@last_function_parm_tags = internal global %union.tree_node* null, align 8
@current_function_parm_tags = internal global %union.tree_node* null, align 8
@current_function_prototype_file = internal global i8* null, align 8
@current_function_prototype_line = internal global i32 0, align 4
@.str.228 = private unnamed_addr constant [39 x i8] c"function declaration isn't a prototype\00", align 1
@.str.229 = private unnamed_addr constant [31 x i8] c"no previous prototype for `%s'\00", align 1
@.str.230 = private unnamed_addr constant [54 x i8] c"`%s' was used with no prototype before its definition\00", align 1
@.str.231 = private unnamed_addr constant [33 x i8] c"no previous declaration for `%s'\00", align 1
@.str.232 = private unnamed_addr constant [56 x i8] c"`%s' was used with no declaration before its definition\00", align 1
@.str.233 = private unnamed_addr constant [33 x i8] c"return type of `%s' is not `int'\00", align 1
@.str.234 = private unnamed_addr constant [39 x i8] c"first argument of `%s' should be `int'\00", align 1
@.str.235 = private unnamed_addr constant [44 x i8] c"second argument of `%s' should be `char **'\00", align 1
@.str.236 = private unnamed_addr constant [52 x i8] c"third argument of `%s' should probably be `char **'\00", align 1
@.str.237 = private unnamed_addr constant [38 x i8] c"`%s' takes only zero or two arguments\00", align 1
@.str.238 = private unnamed_addr constant [39 x i8] c"`%s' is normally a non-static function\00", align 1
@warn_shadow = external global i32, align 4
@.str.239 = private unnamed_addr constant [49 x i8] c"parm types given both in parmlist and separately\00", align 1
@.str.240 = private unnamed_addr constant [23 x i8] c"parameter name omitted\00", align 1
@.str.241 = private unnamed_addr constant [29 x i8] c"parameter `%s' declared void\00", align 1
@.str.242 = private unnamed_addr constant [43 x i8] c"parameter name missing from parameter list\00", align 1
@.str.243 = private unnamed_addr constant [31 x i8] c"multiple parameters named `%s'\00", align 1
@.str.244 = private unnamed_addr constant [31 x i8] c"type of `%s' defaults to `int'\00", align 1
@extra_warnings = external global i32, align 4
@.str.245 = private unnamed_addr constant [35 x i8] c"parameter `%s' has incomplete type\00", align 1
@.str.246 = private unnamed_addr constant [53 x i8] c"declaration for parameter `%s' but no such parameter\00", align 1
@.str.247 = private unnamed_addr constant [44 x i8] c"number of arguments doesn't match prototype\00", align 1
@.str.248 = private unnamed_addr constant [22 x i8] c"prototype declaration\00", align 1
@.str.249 = private unnamed_addr constant [47 x i8] c"promoted argument `%s' doesn't match prototype\00", align 1
@.str.250 = private unnamed_addr constant [38 x i8] c"argument `%s' doesn't match prototype\00", align 1
@cfun = external global %struct.function*, align 8
@.str.251 = private unnamed_addr constant [51 x i8] c"no return statement in function returning non-void\00", align 1
@.str.252 = private unnamed_addr constant [53 x i8] c"`for' loop initial declaration used outside C99 mode\00", align 1
@.str.253 = private unnamed_addr constant [55 x i8] c"`struct %s' declared in `for' loop initial declaration\00", align 1
@.str.254 = private unnamed_addr constant [54 x i8] c"`union %s' declared in `for' loop initial declaration\00", align 1
@.str.255 = private unnamed_addr constant [53 x i8] c"`enum %s' declared in `for' loop initial declaration\00", align 1
@.str.256 = private unnamed_addr constant [67 x i8] c"declaration of non-variable `%s' in `for' loop initial declaration\00", align 1
@.str.257 = private unnamed_addr constant [70 x i8] c"declaration of static variable `%s' in `for' loop initial declaration\00", align 1
@.str.258 = private unnamed_addr constant [72 x i8] c"declaration of `extern' variable `%s' in `for' loop initial declaration\00", align 1
@ggc_pending_trees = external global %struct.varray_head_tag*, align 8
@tree_code_type = external global [256 x i8], align 16
@.str.259 = private unnamed_addr constant [35 x i8] c"function `%s' redeclared as inline\00", align 1
@.str.260 = private unnamed_addr constant [62 x i8] c"previous declaration of function `%s' with attribute noinline\00", align 1
@.str.261 = private unnamed_addr constant [49 x i8] c"function `%s' redeclared with attribute noinline\00", align 1
@.str.262 = private unnamed_addr constant [49 x i8] c"previous declaration of function `%s' was inline\00", align 1
@.str.263 = private unnamed_addr constant [33 x i8] c"shadowing built-in function `%s'\00", align 1
@.str.264 = private unnamed_addr constant [32 x i8] c"shadowing library function `%s'\00", align 1
@.str.265 = private unnamed_addr constant [47 x i8] c"library function `%s' declared as non-function\00", align 1
@.str.266 = private unnamed_addr constant [48 x i8] c"built-in function `%s' declared as non-function\00", align 1
@.str.267 = private unnamed_addr constant [44 x i8] c"`%s' redeclared as different kind of symbol\00", align 1
@.str.268 = private unnamed_addr constant [45 x i8] c"conflicting types for built-in function `%s'\00", align 1
@.str.269 = private unnamed_addr constant [27 x i8] c"conflicting types for `%s'\00", align 1
@.str.270 = private unnamed_addr constant [87 x i8] c"a parameter list with an ellipsis can't match an empty parameter name list declaration\00", align 1
@.str.271 = private unnamed_addr constant [99 x i8] c"an argument type that has a default promotion can't match an empty parameter name list declaration\00", align 1
@.str.272 = private unnamed_addr constant [21 x i8] c"redefinition of `%s'\00", align 1
@.str.273 = private unnamed_addr constant [22 x i8] c"redeclaration of `%s'\00", align 1
@.str.274 = private unnamed_addr constant [33 x i8] c"conflicting declarations of `%s'\00", align 1
@__FUNCTION__.duplicate_decls = private unnamed_addr constant [16 x i8] c"duplicate_decls\00", align 1
@.str.275 = private unnamed_addr constant [29 x i8] c"`%s' previously defined here\00", align 1
@.str.276 = private unnamed_addr constant [30 x i8] c"`%s' previously declared here\00", align 1
@.str.277 = private unnamed_addr constant [27 x i8] c"prototype for `%s' follows\00", align 1
@.str.278 = private unnamed_addr constant [30 x i8] c"non-prototype definition here\00", align 1
@.str.279 = private unnamed_addr constant [65 x i8] c"prototype for `%s' follows and number of arguments doesn't match\00", align 1
@.str.280 = private unnamed_addr constant [57 x i8] c"prototype for `%s' follows and argument %d doesn't match\00", align 1
@.str.281 = private unnamed_addr constant [40 x i8] c"`%s' declared inline after being called\00", align 1
@.str.282 = private unnamed_addr constant [42 x i8] c"`%s' declared inline after its definition\00", align 1
@.str.283 = private unnamed_addr constant [47 x i8] c"static declaration for `%s' follows non-static\00", align 1
@.str.284 = private unnamed_addr constant [47 x i8] c"non-static declaration for `%s' follows static\00", align 1
@.str.285 = private unnamed_addr constant [45 x i8] c"const declaration for `%s' follows non-const\00", align 1
@.str.286 = private unnamed_addr constant [53 x i8] c"type qualifiers for `%s' conflict with previous decl\00", align 1
@.str.287 = private unnamed_addr constant [46 x i8] c"redundant redeclaration of `%s' in same scope\00", align 1
@debug_hooks = external global %struct.gcc_debug_hooks*, align 8
@.str.288 = private unnamed_addr constant [40 x i8] c"declaration of `%s' shadows a parameter\00", align 1
@.str.289 = private unnamed_addr constant [61 x i8] c"declaration of `%s' shadows a symbol from the parameter list\00", align 1
@.str.290 = private unnamed_addr constant [12 x i8] c"a parameter\00", align 1
@.str.291 = private unnamed_addr constant [17 x i8] c"a previous local\00", align 1
@.str.292 = private unnamed_addr constant [21 x i8] c"a global declaration\00", align 1
@__FUNCTION__.grokdeclarator = private unnamed_addr constant [15 x i8] c"grokdeclarator\00", align 1
@.str.293 = private unnamed_addr constant [10 x i8] c"type name\00", align 1
@.str.294 = private unnamed_addr constant [37 x i8] c"`long long long' is too long for GCC\00", align 1
@.str.295 = private unnamed_addr constant [37 x i8] c"ISO C89 does not support `long long'\00", align 1
@.str.296 = private unnamed_addr constant [15 x i8] c"duplicate `%s'\00", align 1
@.str.297 = private unnamed_addr constant [46 x i8] c"two or more data types in declaration of `%s'\00", align 1
@.str.298 = private unnamed_addr constant [44 x i8] c"`%s' fails to be a typedef or built in type\00", align 1
@.str.299 = private unnamed_addr constant [46 x i8] c"type defaults to `int' in declaration of `%s'\00", align 1
@.str.300 = private unnamed_addr constant [39 x i8] c"both long and short specified for `%s'\00", align 1
@.str.301 = private unnamed_addr constant [43 x i8] c"long or short specified with char for `%s'\00", align 1
@grokdeclarator.already = internal global i32 0, align 4
@.str.302 = private unnamed_addr constant [52 x i8] c"long or short specified with floating type for `%s'\00", align 1
@.str.303 = private unnamed_addr constant [44 x i8] c"the only valid combination is `long double'\00", align 1
@.str.304 = private unnamed_addr constant [44 x i8] c"both signed and unsigned specified for `%s'\00", align 1
@.str.305 = private unnamed_addr constant [49 x i8] c"long, short, signed or unsigned invalid for `%s'\00", align 1
@.str.306 = private unnamed_addr constant [56 x i8] c"long, short, signed or unsigned used invalidly for `%s'\00", align 1
@flag_pedantic_errors = external global i32, align 4
@.str.307 = private unnamed_addr constant [25 x i8] c"complex invalid for `%s'\00", align 1
@.str.308 = private unnamed_addr constant [39 x i8] c"ISO C89 does not support complex types\00", align 1
@.str.309 = private unnamed_addr constant [64 x i8] c"ISO C does not support plain `complex' meaning `double complex'\00", align 1
@.str.310 = private unnamed_addr constant [45 x i8] c"ISO C does not support complex integer types\00", align 1
@.str.311 = private unnamed_addr constant [18 x i8] c"duplicate `const'\00", align 1
@.str.312 = private unnamed_addr constant [21 x i8] c"duplicate `restrict'\00", align 1
@.str.313 = private unnamed_addr constant [21 x i8] c"duplicate `volatile'\00", align 1
@flag_gen_aux_info = external global i32, align 4
@.str.314 = private unnamed_addr constant [48 x i8] c"multiple storage classes in declaration of `%s'\00", align 1
@.str.315 = private unnamed_addr constant [36 x i8] c"function definition declared `auto'\00", align 1
@.str.316 = private unnamed_addr constant [40 x i8] c"function definition declared `register'\00", align 1
@.str.317 = private unnamed_addr constant [39 x i8] c"function definition declared `typedef'\00", align 1
@.str.318 = private unnamed_addr constant [49 x i8] c"storage class specified for structure field `%s'\00", align 1
@.str.319 = private unnamed_addr constant [43 x i8] c"storage class specified for parameter `%s'\00", align 1
@.str.320 = private unnamed_addr constant [37 x i8] c"storage class specified for typename\00", align 1
@.str.321 = private unnamed_addr constant [39 x i8] c"`%s' initialized and declared `extern'\00", align 1
@.str.322 = private unnamed_addr constant [39 x i8] c"`%s' has both `extern' and initializer\00", align 1
@.str.323 = private unnamed_addr constant [39 x i8] c"nested function `%s' declared `extern'\00", align 1
@.str.324 = private unnamed_addr constant [47 x i8] c"top-level declaration of `%s' specifies `auto'\00", align 1
@.str.325 = private unnamed_addr constant [60 x i8] c"static or type qualifiers in non-parameter array declarator\00", align 1
@sizetype_tab = external global [6 x %union.tree_node*], align 16
@.str.326 = private unnamed_addr constant [38 x i8] c"declaration of `%s' as array of voids\00", align 1
@.str.327 = private unnamed_addr constant [42 x i8] c"declaration of `%s' as array of functions\00", align 1
@.str.328 = private unnamed_addr constant [40 x i8] c"size of array `%s' has non-integer type\00", align 1
@.str.329 = private unnamed_addr constant [35 x i8] c"ISO C forbids zero-size array `%s'\00", align 1
@.str.330 = private unnamed_addr constant [31 x i8] c"size of array `%s' is negative\00", align 1
@.str.331 = private unnamed_addr constant [57 x i8] c"ISO C89 forbids array `%s' whose size can't be evaluated\00", align 1
@.str.332 = private unnamed_addr constant [41 x i8] c"ISO C89 forbids variable-size array `%s'\00", align 1
@.str.333 = private unnamed_addr constant [32 x i8] c"size of array `%s' is too large\00", align 1
@.str.334 = private unnamed_addr constant [48 x i8] c"ISO C89 does not support flexible array members\00", align 1
@.str.335 = private unnamed_addr constant [39 x i8] c"array type has incomplete element type\00", align 1
@.str.336 = private unnamed_addr constant [47 x i8] c"`%s' declared as function returning a function\00", align 1
@.str.337 = private unnamed_addr constant [45 x i8] c"`%s' declared as function returning an array\00", align 1
@.str.338 = private unnamed_addr constant [50 x i8] c"ISO C forbids qualified void function return type\00", align 1
@.str.339 = private unnamed_addr constant [48 x i8] c"type qualifiers ignored on function return type\00", align 1
@.str.340 = private unnamed_addr constant [39 x i8] c"ISO C forbids qualified function types\00", align 1
@.str.341 = private unnamed_addr constant [48 x i8] c"invalid type modifier within pointer declarator\00", align 1
@.str.342 = private unnamed_addr constant [47 x i8] c"ISO C forbids const or volatile function types\00", align 1
@.str.343 = private unnamed_addr constant [37 x i8] c"variable or field `%s' declared void\00", align 1
@.str.344 = private unnamed_addr constant [49 x i8] c"attributes in parameter array declarator ignored\00", align 1
@.str.345 = private unnamed_addr constant [46 x i8] c"invalid type modifier within array declarator\00", align 1
@.str.346 = private unnamed_addr constant [34 x i8] c"field `%s' declared as a function\00", align 1
@.str.347 = private unnamed_addr constant [31 x i8] c"field `%s' has incomplete type\00", align 1
@.str.348 = private unnamed_addr constant [40 x i8] c"invalid storage class for function `%s'\00", align 1
@.str.349 = private unnamed_addr constant [43 x i8] c"`noreturn' function returns non-void value\00", align 1
@.str.350 = private unnamed_addr constant [30 x i8] c"cannot inline function `main'\00", align 1
@flag_inline_trees = external global i32, align 4
@.str.351 = private unnamed_addr constant [32 x i8] c"variable `%s' declared `inline'\00", align 1
@.str.352 = private unnamed_addr constant [56 x i8] c"parameter names (without types) in function declaration\00", align 1
@.str.353 = private unnamed_addr constant [30 x i8] c"parameter has incomplete type\00", align 1
@flag_syntax_only = external global i32, align 4
@lang_expand_function_end = external global void ()*, align 8
@.str.354 = private unnamed_addr constant [49 x i8] c"this function may return with or without a value\00", align 1
@warn_larger_than = external global i32, align 4
@larger_than_size = external global i64, align 8
@.str.355 = private unnamed_addr constant [41 x i8] c"size of return value of `%s' is %u bytes\00", align 1
@.str.356 = private unnamed_addr constant [53 x i8] c"size of return value of `%s' is larger than %d bytes\00", align 1

; Function Attrs: nounwind uwtable
define i32 @c_decode_option(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %strings_processed = alloca i32, align 4
  %p = alloca i8*, align 8
  %argstart = alloca i8*, align 8
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load i8**, i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0
  %1 = load i8*, i8** %arrayidx, align 8
  store i8* %1, i8** %p, align 8
  %2 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8
  %3 = load i32, i32* %argc.addr, align 4
  %4 = load i8**, i8*** %argv.addr, align 8
  %call = call i32 @cpp_handle_option(%struct.cpp_reader* %2, i32 %3, i8** %4, i32 0)
  store i32 %call, i32* %strings_processed, align 4
  %5 = load i8*, i8** %p, align 8
  %call1 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #6
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %6 = load i8*, i8** %p, align 8
  %call2 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #6
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0))
  store i32 1, i32* @flag_traditional, align 4
  store i32 1, i32* @flag_writable_strings, align 4
  br label %if.end.610

if.else:                                          ; preds = %lor.lhs.false
  %7 = load i8*, i8** %p, align 8
  %call4 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0)) #6
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.else.7, label %if.then.6

if.then.6:                                        ; preds = %if.else
  store i32 1, i32* @flag_allow_single_precision, align 4
  br label %if.end.609

if.else.7:                                        ; preds = %if.else
  %8 = load i8*, i8** %p, align 8
  %call8 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)) #6
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %lor.lhs.false.10, label %if.then.13

lor.lhs.false.10:                                 ; preds = %if.else.7
  %9 = load i8*, i8** %p, align 8
  %call11 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0)) #6
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.else.14, label %if.then.13

if.then.13:                                       ; preds = %lor.lhs.false.10, %if.else.7
  store i32 1, i32* @flag_hosted, align 4
  store i32 0, i32* @flag_no_builtin, align 4
  br label %if.end.608

if.else.14:                                       ; preds = %lor.lhs.false.10
  %10 = load i8*, i8** %p, align 8
  %call15 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0)) #6
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %lor.lhs.false.17, label %if.then.20

lor.lhs.false.17:                                 ; preds = %if.else.14
  %11 = load i8*, i8** %p, align 8
  %call18 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0)) #6
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.else.22, label %if.then.20

if.then.20:                                       ; preds = %lor.lhs.false.17, %if.else.14
  store i32 0, i32* @flag_hosted, align 4
  store i32 1, i32* @flag_no_builtin, align 4
  %12 = load i32, i32* @warn_main, align 4
  %cmp = icmp eq i32 %12, 2
  br i1 %cmp, label %if.then.21, label %if.end

if.then.21:                                       ; preds = %if.then.20
  store i32 0, i32* @warn_main, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.21, %if.then.20
  br label %if.end.607

if.else.22:                                       ; preds = %lor.lhs.false.17
  %13 = load i8*, i8** %p, align 8
  %call23 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0)) #6
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %lor.lhs.false.25, label %if.then.28

lor.lhs.false.25:                                 ; preds = %if.else.22
  %14 = load i8*, i8** %p, align 8
  %call26 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0)) #6
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.else.29, label %if.then.28

if.then.28:                                       ; preds = %lor.lhs.false.25, %if.else.22
  store i32 0, i32* @flag_traditional, align 4
  store i32 0, i32* @flag_writable_strings, align 4
  br label %if.end.606

if.else.29:                                       ; preds = %lor.lhs.false.25
  %15 = load i8*, i8** %p, align 8
  %call30 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i64 5) #6
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.else.74, label %if.then.32

if.then.32:                                       ; preds = %if.else.29
  %16 = load i8*, i8** %p, align 8
  %arrayidx33 = getelementptr inbounds i8, i8* %16, i64 5
  store i8* %arrayidx33, i8** %argstart, align 8
  %17 = load i8*, i8** %argstart, align 8
  %call34 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0)) #6
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %lor.lhs.false.36, label %if.then.39

lor.lhs.false.36:                                 ; preds = %if.then.32
  %18 = load i8*, i8** %argstart, align 8
  %call37 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0)) #6
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.else.40, label %if.then.39

if.then.39:                                       ; preds = %lor.lhs.false.36, %if.then.32
  br label %iso_1990

iso_1990:                                         ; preds = %if.then.180, %if.then.39
  store i32 0, i32* @flag_isoc94, align 4
  br label %iso_1994

iso_1994:                                         ; preds = %if.then.43, %iso_1990
  store i32 0, i32* @flag_traditional, align 4
  store i32 0, i32* @flag_writable_strings, align 4
  store i32 1, i32* @flag_no_asm, align 4
  store i32 1, i32* @flag_no_nonansi_builtin, align 4
  store i32 0, i32* @flag_noniso_default_format_attributes, align 4
  store i32 0, i32* @flag_isoc99, align 4
  br label %if.end.73

if.else.40:                                       ; preds = %lor.lhs.false.36
  %19 = load i8*, i8** %argstart, align 8
  %call41 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #6
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.else.44, label %if.then.43

if.then.43:                                       ; preds = %if.else.40
  store i32 1, i32* @flag_isoc94, align 4
  br label %iso_1994

if.else.44:                                       ; preds = %if.else.40
  %20 = load i8*, i8** %argstart, align 8
  %call45 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0)) #6
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %lor.lhs.false.47, label %if.then.56

lor.lhs.false.47:                                 ; preds = %if.else.44
  %21 = load i8*, i8** %argstart, align 8
  %call48 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0)) #6
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %lor.lhs.false.50, label %if.then.56

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.47
  %22 = load i8*, i8** %argstart, align 8
  %call51 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0)) #6
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %lor.lhs.false.53, label %if.then.56

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.50
  %23 = load i8*, i8** %argstart, align 8
  %call54 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0)) #6
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.else.57, label %if.then.56

if.then.56:                                       ; preds = %lor.lhs.false.53, %lor.lhs.false.50, %lor.lhs.false.47, %if.else.44
  store i32 0, i32* @flag_traditional, align 4
  store i32 0, i32* @flag_writable_strings, align 4
  store i32 1, i32* @flag_no_asm, align 4
  store i32 1, i32* @flag_no_nonansi_builtin, align 4
  store i32 0, i32* @flag_noniso_default_format_attributes, align 4
  store i32 1, i32* @flag_isoc99, align 4
  store i32 1, i32* @flag_isoc94, align 4
  br label %if.end.71

if.else.57:                                       ; preds = %lor.lhs.false.53
  %24 = load i8*, i8** %argstart, align 8
  %call58 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0)) #6
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.else.61, label %if.then.60

if.then.60:                                       ; preds = %if.else.57
  store i32 0, i32* @flag_traditional, align 4
  store i32 0, i32* @flag_writable_strings, align 4
  store i32 0, i32* @flag_no_asm, align 4
  store i32 0, i32* @flag_no_nonansi_builtin, align 4
  store i32 1, i32* @flag_noniso_default_format_attributes, align 4
  store i32 0, i32* @flag_isoc99, align 4
  store i32 0, i32* @flag_isoc94, align 4
  br label %if.end.70

if.else.61:                                       ; preds = %if.else.57
  %25 = load i8*, i8** %argstart, align 8
  %call62 = call i32 @strcmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0)) #6
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %lor.lhs.false.64, label %if.then.67

lor.lhs.false.64:                                 ; preds = %if.else.61
  %26 = load i8*, i8** %argstart, align 8
  %call65 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0)) #6
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.else.68, label %if.then.67

if.then.67:                                       ; preds = %lor.lhs.false.64, %if.else.61
  store i32 0, i32* @flag_traditional, align 4
  store i32 0, i32* @flag_writable_strings, align 4
  store i32 0, i32* @flag_no_asm, align 4
  store i32 0, i32* @flag_no_nonansi_builtin, align 4
  store i32 1, i32* @flag_noniso_default_format_attributes, align 4
  store i32 1, i32* @flag_isoc99, align 4
  store i32 1, i32* @flag_isoc94, align 4
  br label %if.end.69

if.else.68:                                       ; preds = %lor.lhs.false.64
  %27 = load i8*, i8** %argstart, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), i8* %27)
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.68, %if.then.67
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.60
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %if.then.56
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72, %iso_1994
  br label %if.end.605

if.else.74:                                       ; preds = %if.else.29
  %28 = load i8*, i8** %p, align 8
  %call75 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i32 0, i32 0)) #6
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.else.78, label %if.then.77

if.then.77:                                       ; preds = %if.else.74
  store i32 1, i32* @dollars_in_ident, align 4
  br label %if.end.604

if.else.78:                                       ; preds = %if.else.74
  %29 = load i8*, i8** %p, align 8
  %call79 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i32 0, i32 0)) #6
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.else.82, label %if.then.81

if.then.81:                                       ; preds = %if.else.78
  store i32 0, i32* @dollars_in_ident, align 4
  br label %if.end.603

if.else.82:                                       ; preds = %if.else.78
  %30 = load i8*, i8** %p, align 8
  %call83 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0)) #6
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.else.86, label %if.then.85

if.then.85:                                       ; preds = %if.else.82
  store i32 1, i32* @flag_signed_char, align 4
  br label %if.end.602

if.else.86:                                       ; preds = %if.else.82
  %31 = load i8*, i8** %p, align 8
  %call87 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0)) #6
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %if.else.90, label %if.then.89

if.then.89:                                       ; preds = %if.else.86
  store i32 0, i32* @flag_signed_char, align 4
  br label %if.end.601

if.else.90:                                       ; preds = %if.else.86
  %32 = load i8*, i8** %p, align 8
  %call91 = call i32 @strcmp(i8* %32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0)) #6
  %tobool92 = icmp ne i32 %call91, 0
  br i1 %tobool92, label %if.else.94, label %if.then.93

if.then.93:                                       ; preds = %if.else.90
  store i32 0, i32* @flag_signed_char, align 4
  br label %if.end.600

if.else.94:                                       ; preds = %if.else.90
  %33 = load i8*, i8** %p, align 8
  %call95 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i32 0, i32 0)) #6
  %tobool96 = icmp ne i32 %call95, 0
  br i1 %tobool96, label %if.else.98, label %if.then.97

if.then.97:                                       ; preds = %if.else.94
  store i32 1, i32* @flag_signed_char, align 4
  br label %if.end.599

if.else.98:                                       ; preds = %if.else.94
  %34 = load i8*, i8** %p, align 8
  %call99 = call i32 @strcmp(i8* %34, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i32 0, i32 0)) #6
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %lor.lhs.false.101, label %if.then.104

lor.lhs.false.101:                                ; preds = %if.else.98
  %35 = load i8*, i8** %p, align 8
  %call102 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0)) #6
  %tobool103 = icmp ne i32 %call102, 0
  br i1 %tobool103, label %if.else.105, label %if.then.104

if.then.104:                                      ; preds = %lor.lhs.false.101, %if.else.98
  store i32 1, i32* @flag_signed_bitfields, align 4
  store i32 1, i32* @explicit_flag_signed_bitfields, align 4
  br label %if.end.598

if.else.105:                                      ; preds = %lor.lhs.false.101
  %36 = load i8*, i8** %p, align 8
  %call106 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i32 0, i32 0)) #6
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %lor.lhs.false.108, label %if.then.111

lor.lhs.false.108:                                ; preds = %if.else.105
  %37 = load i8*, i8** %p, align 8
  %call109 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0)) #6
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.else.112, label %if.then.111

if.then.111:                                      ; preds = %lor.lhs.false.108, %if.else.105
  store i32 0, i32* @flag_signed_bitfields, align 4
  store i32 1, i32* @explicit_flag_signed_bitfields, align 4
  br label %if.end.597

if.else.112:                                      ; preds = %lor.lhs.false.108
  %38 = load i8*, i8** %p, align 8
  %call113 = call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0)) #6
  %tobool114 = icmp ne i32 %call113, 0
  br i1 %tobool114, label %if.else.116, label %if.then.115

if.then.115:                                      ; preds = %if.else.112
  store i32 1, i32* @flag_short_enums, align 4
  br label %if.end.596

if.else.116:                                      ; preds = %if.else.112
  %39 = load i8*, i8** %p, align 8
  %call117 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i32 0, i32 0)) #6
  %tobool118 = icmp ne i32 %call117, 0
  br i1 %tobool118, label %if.else.120, label %if.then.119

if.then.119:                                      ; preds = %if.else.116
  store i32 0, i32* @flag_short_enums, align 4
  br label %if.end.595

if.else.120:                                      ; preds = %if.else.116
  %40 = load i8*, i8** %p, align 8
  %call121 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0)) #6
  %tobool122 = icmp ne i32 %call121, 0
  br i1 %tobool122, label %if.else.124, label %if.then.123

if.then.123:                                      ; preds = %if.else.120
  store i32 1, i32* @flag_short_wchar, align 4
  br label %if.end.594

if.else.124:                                      ; preds = %if.else.120
  %41 = load i8*, i8** %p, align 8
  %call125 = call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0)) #6
  %tobool126 = icmp ne i32 %call125, 0
  br i1 %tobool126, label %if.else.128, label %if.then.127

if.then.127:                                      ; preds = %if.else.124
  store i32 0, i32* @flag_short_wchar, align 4
  br label %if.end.593

if.else.128:                                      ; preds = %if.else.124
  %42 = load i8*, i8** %p, align 8
  %call129 = call i32 @strcmp(i8* %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0)) #6
  %tobool130 = icmp ne i32 %call129, 0
  br i1 %tobool130, label %if.else.132, label %if.then.131

if.then.131:                                      ; preds = %if.else.128
  store i32 1, i32* @flag_cond_mismatch, align 4
  br label %if.end.592

if.else.132:                                      ; preds = %if.else.128
  %43 = load i8*, i8** %p, align 8
  %call133 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0)) #6
  %tobool134 = icmp ne i32 %call133, 0
  br i1 %tobool134, label %if.else.136, label %if.then.135

if.then.135:                                      ; preds = %if.else.132
  store i32 0, i32* @flag_cond_mismatch, align 4
  br label %if.end.591

if.else.136:                                      ; preds = %if.else.132
  %44 = load i8*, i8** %p, align 8
  %call137 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0)) #6
  %tobool138 = icmp ne i32 %call137, 0
  br i1 %tobool138, label %if.else.140, label %if.then.139

if.then.139:                                      ; preds = %if.else.136
  store i32 1, i32* @flag_short_double, align 4
  br label %if.end.590

if.else.140:                                      ; preds = %if.else.136
  %45 = load i8*, i8** %p, align 8
  %call141 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i32 0, i32 0)) #6
  %tobool142 = icmp ne i32 %call141, 0
  br i1 %tobool142, label %if.else.144, label %if.then.143

if.then.143:                                      ; preds = %if.else.140
  store i32 0, i32* @flag_short_double, align 4
  br label %if.end.589

if.else.144:                                      ; preds = %if.else.140
  %46 = load i8*, i8** %p, align 8
  %call145 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0)) #6
  %tobool146 = icmp ne i32 %call145, 0
  br i1 %tobool146, label %if.else.148, label %if.then.147

if.then.147:                                      ; preds = %if.else.144
  store i32 0, i32* @flag_no_asm, align 4
  br label %if.end.588

if.else.148:                                      ; preds = %if.else.144
  %47 = load i8*, i8** %p, align 8
  %call149 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0)) #6
  %tobool150 = icmp ne i32 %call149, 0
  br i1 %tobool150, label %if.else.152, label %if.then.151

if.then.151:                                      ; preds = %if.else.148
  store i32 1, i32* @flag_no_asm, align 4
  br label %if.end.587

if.else.152:                                      ; preds = %if.else.148
  %48 = load i8*, i8** %p, align 8
  %call153 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #6
  %tobool154 = icmp ne i32 %call153, 0
  br i1 %tobool154, label %if.else.156, label %if.then.155

if.then.155:                                      ; preds = %if.else.152
  store i32 0, i32* @flag_no_builtin, align 4
  br label %if.end.586

if.else.156:                                      ; preds = %if.else.152
  %49 = load i8*, i8** %p, align 8
  %call157 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0)) #6
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.else.160, label %if.then.159

if.then.159:                                      ; preds = %if.else.156
  store i32 1, i32* @flag_no_builtin, align 4
  br label %if.end.585

if.else.160:                                      ; preds = %if.else.156
  %50 = load i8*, i8** %p, align 8
  %call161 = call i32 @strncmp(i8* %50, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i64 13) #6
  %tobool162 = icmp ne i32 %call161, 0
  br i1 %tobool162, label %if.else.164, label %if.then.163

if.then.163:                                      ; preds = %if.else.160
  %51 = load i8*, i8** %p, align 8
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 13
  call void @disable_builtin_function(i8* %add.ptr)
  br label %if.end.584

if.else.164:                                      ; preds = %if.else.160
  %52 = load i8*, i8** %p, align 8
  %arrayidx165 = getelementptr inbounds i8, i8* %52, i64 0
  %53 = load i8, i8* %arrayidx165, align 1
  %conv = sext i8 %53 to i32
  %cmp166 = icmp eq i32 %conv, 45
  br i1 %cmp166, label %land.lhs.true, label %if.else.177

land.lhs.true:                                    ; preds = %if.else.164
  %54 = load i8*, i8** %p, align 8
  %arrayidx168 = getelementptr inbounds i8, i8* %54, i64 1
  %55 = load i8, i8* %arrayidx168, align 1
  %conv169 = sext i8 %55 to i32
  %cmp170 = icmp eq i32 %conv169, 102
  br i1 %cmp170, label %land.lhs.true.172, label %if.else.177

land.lhs.true.172:                                ; preds = %land.lhs.true
  %56 = load i8*, i8** %p, align 8
  %add.ptr173 = getelementptr inbounds i8, i8* %56, i64 2
  %call174 = call i32 @dump_switch_p(i8* %add.ptr173)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %if.then.176, label %if.else.177

if.then.176:                                      ; preds = %land.lhs.true.172
  br label %if.end.583

if.else.177:                                      ; preds = %land.lhs.true.172, %land.lhs.true, %if.else.164
  %57 = load i8*, i8** %p, align 8
  %call178 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0)) #6
  %tobool179 = icmp ne i32 %call178, 0
  br i1 %tobool179, label %if.else.181, label %if.then.180

if.then.180:                                      ; preds = %if.else.177
  br label %iso_1990

if.else.181:                                      ; preds = %if.else.177
  %58 = load i8*, i8** %p, align 8
  %call182 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i32 0, i32 0)) #6
  %tobool183 = icmp ne i32 %call182, 0
  br i1 %tobool183, label %if.else.185, label %if.then.184

if.then.184:                                      ; preds = %if.else.181
  store i32 2, i32* @mesg_implicit_function_declaration, align 4
  br label %if.end.581

if.else.185:                                      ; preds = %if.else.181
  %59 = load i8*, i8** %p, align 8
  %call186 = call i32 @strcmp(i8* %59, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i32 0, i32 0)) #6
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %if.else.189, label %if.then.188

if.then.188:                                      ; preds = %if.else.185
  store i32 1, i32* @mesg_implicit_function_declaration, align 4
  br label %if.end.580

if.else.189:                                      ; preds = %if.else.185
  %60 = load i8*, i8** %p, align 8
  %call190 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0)) #6
  %tobool191 = icmp ne i32 %call190, 0
  br i1 %tobool191, label %if.else.193, label %if.then.192

if.then.192:                                      ; preds = %if.else.189
  store i32 0, i32* @mesg_implicit_function_declaration, align 4
  br label %if.end.579

if.else.193:                                      ; preds = %if.else.189
  %61 = load i8*, i8** %p, align 8
  %call194 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0)) #6
  %tobool195 = icmp ne i32 %call194, 0
  br i1 %tobool195, label %if.else.197, label %if.then.196

if.then.196:                                      ; preds = %if.else.193
  store i32 1, i32* @warn_implicit_int, align 4
  br label %if.end.578

if.else.197:                                      ; preds = %if.else.193
  %62 = load i8*, i8** %p, align 8
  %call198 = call i32 @strcmp(i8* %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0)) #6
  %tobool199 = icmp ne i32 %call198, 0
  br i1 %tobool199, label %if.else.201, label %if.then.200

if.then.200:                                      ; preds = %if.else.197
  store i32 0, i32* @warn_implicit_int, align 4
  br label %if.end.577

if.else.201:                                      ; preds = %if.else.197
  %63 = load i8*, i8** %p, align 8
  %call202 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i32 0, i32 0)) #6
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.else.209, label %if.then.204

if.then.204:                                      ; preds = %if.else.201
  store i32 1, i32* @warn_implicit_int, align 4
  %64 = load i32, i32* @mesg_implicit_function_declaration, align 4
  %cmp205 = icmp ne i32 %64, 2
  br i1 %cmp205, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %if.then.204
  store i32 1, i32* @mesg_implicit_function_declaration, align 4
  br label %if.end.208

if.end.208:                                       ; preds = %if.then.207, %if.then.204
  br label %if.end.576

if.else.209:                                      ; preds = %if.else.201
  %65 = load i8*, i8** %p, align 8
  %call210 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0)) #6
  %tobool211 = icmp ne i32 %call210, 0
  br i1 %tobool211, label %if.else.213, label %if.then.212

if.then.212:                                      ; preds = %if.else.209
  store i32 0, i32* @warn_implicit_int, align 4
  store i32 0, i32* @mesg_implicit_function_declaration, align 4
  br label %if.end.575

if.else.213:                                      ; preds = %if.else.209
  %66 = load i8*, i8** %p, align 8
  %call214 = call i32 @strcmp(i8* %66, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0)) #6
  %tobool215 = icmp ne i32 %call214, 0
  br i1 %tobool215, label %if.else.217, label %if.then.216

if.then.216:                                      ; preds = %if.else.213
  store i32 1, i32* @warn_long_long, align 4
  br label %if.end.574

if.else.217:                                      ; preds = %if.else.213
  %67 = load i8*, i8** %p, align 8
  %call218 = call i32 @strcmp(i8* %67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0)) #6
  %tobool219 = icmp ne i32 %call218, 0
  br i1 %tobool219, label %if.else.221, label %if.then.220

if.then.220:                                      ; preds = %if.else.217
  store i32 0, i32* @warn_long_long, align 4
  br label %if.end.573

if.else.221:                                      ; preds = %if.else.217
  %68 = load i8*, i8** %p, align 8
  %call222 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0)) #6
  %tobool223 = icmp ne i32 %call222, 0
  br i1 %tobool223, label %if.else.225, label %if.then.224

if.then.224:                                      ; preds = %if.else.221
  store i32 1, i32* @flag_const_strings, align 4
  br label %if.end.572

if.else.225:                                      ; preds = %if.else.221
  %69 = load i8*, i8** %p, align 8
  %call226 = call i32 @strcmp(i8* %69, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i32 0, i32 0)) #6
  %tobool227 = icmp ne i32 %call226, 0
  br i1 %tobool227, label %if.else.229, label %if.then.228

if.then.228:                                      ; preds = %if.else.225
  store i32 0, i32* @flag_const_strings, align 4
  br label %if.end.571

if.else.229:                                      ; preds = %if.else.225
  %70 = load i8*, i8** %p, align 8
  %call230 = call i32 @strcmp(i8* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0)) #6
  %tobool231 = icmp ne i32 %call230, 0
  br i1 %tobool231, label %if.else.233, label %if.then.232

if.then.232:                                      ; preds = %if.else.229
  store i32 1, i32* @warn_cast_qual, align 4
  br label %if.end.570

if.else.233:                                      ; preds = %if.else.229
  %71 = load i8*, i8** %p, align 8
  %call234 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0)) #6
  %tobool235 = icmp ne i32 %call234, 0
  br i1 %tobool235, label %if.else.237, label %if.then.236

if.then.236:                                      ; preds = %if.else.233
  store i32 0, i32* @warn_cast_qual, align 4
  br label %if.end.569

if.else.237:                                      ; preds = %if.else.233
  %72 = load i8*, i8** %p, align 8
  %call238 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0)) #6
  %tobool239 = icmp ne i32 %call238, 0
  br i1 %tobool239, label %if.else.241, label %if.then.240

if.then.240:                                      ; preds = %if.else.237
  store i32 1, i32* @warn_bad_function_cast, align 4
  br label %if.end.568

if.else.241:                                      ; preds = %if.else.237
  %73 = load i8*, i8** %p, align 8
  %call242 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i32 0, i32 0)) #6
  %tobool243 = icmp ne i32 %call242, 0
  br i1 %tobool243, label %if.else.245, label %if.then.244

if.then.244:                                      ; preds = %if.else.241
  store i32 0, i32* @warn_bad_function_cast, align 4
  br label %if.end.567

if.else.245:                                      ; preds = %if.else.241
  %74 = load i8*, i8** %p, align 8
  %call246 = call i32 @strcmp(i8* %74, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i32 0, i32 0)) #6
  %tobool247 = icmp ne i32 %call246, 0
  br i1 %tobool247, label %if.else.249, label %if.then.248

if.then.248:                                      ; preds = %if.else.245
  store i32 0, i32* @warn_missing_noreturn, align 4
  br label %if.end.566

if.else.249:                                      ; preds = %if.else.245
  %75 = load i8*, i8** %p, align 8
  %call250 = call i32 @strcmp(i8* %75, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i32 0, i32 0)) #6
  %tobool251 = icmp ne i32 %call250, 0
  br i1 %tobool251, label %if.else.253, label %if.then.252

if.then.252:                                      ; preds = %if.else.249
  store i32 1, i32* @warn_missing_format_attribute, align 4
  br label %if.end.565

if.else.253:                                      ; preds = %if.else.249
  %76 = load i8*, i8** %p, align 8
  %call254 = call i32 @strcmp(i8* %76, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63, i32 0, i32 0)) #6
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %if.else.257, label %if.then.256

if.then.256:                                      ; preds = %if.else.253
  store i32 0, i32* @warn_missing_format_attribute, align 4
  br label %if.end.564

if.else.257:                                      ; preds = %if.else.253
  %77 = load i8*, i8** %p, align 8
  %call258 = call i32 @strcmp(i8* %77, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i32 0, i32 0)) #6
  %tobool259 = icmp ne i32 %call258, 0
  br i1 %tobool259, label %if.else.261, label %if.then.260

if.then.260:                                      ; preds = %if.else.257
  store i32 1, i32* @warn_pointer_arith, align 4
  br label %if.end.563

if.else.261:                                      ; preds = %if.else.257
  %78 = load i8*, i8** %p, align 8
  %call262 = call i32 @strcmp(i8* %78, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0)) #6
  %tobool263 = icmp ne i32 %call262, 0
  br i1 %tobool263, label %if.else.265, label %if.then.264

if.then.264:                                      ; preds = %if.else.261
  store i32 0, i32* @warn_pointer_arith, align 4
  br label %if.end.562

if.else.265:                                      ; preds = %if.else.261
  %79 = load i8*, i8** %p, align 8
  %call266 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i32 0, i32 0)) #6
  %tobool267 = icmp ne i32 %call266, 0
  br i1 %tobool267, label %if.else.269, label %if.then.268

if.then.268:                                      ; preds = %if.else.265
  store i32 1, i32* @warn_strict_prototypes, align 4
  br label %if.end.561

if.else.269:                                      ; preds = %if.else.265
  %80 = load i8*, i8** %p, align 8
  %call270 = call i32 @strcmp(i8* %80, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i32 0, i32 0)) #6
  %tobool271 = icmp ne i32 %call270, 0
  br i1 %tobool271, label %if.else.273, label %if.then.272

if.then.272:                                      ; preds = %if.else.269
  store i32 0, i32* @warn_strict_prototypes, align 4
  br label %if.end.560

if.else.273:                                      ; preds = %if.else.269
  %81 = load i8*, i8** %p, align 8
  %call274 = call i32 @strcmp(i8* %81, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i32 0, i32 0)) #6
  %tobool275 = icmp ne i32 %call274, 0
  br i1 %tobool275, label %if.else.277, label %if.then.276

if.then.276:                                      ; preds = %if.else.273
  store i32 1, i32* @warn_missing_prototypes, align 4
  br label %if.end.559

if.else.277:                                      ; preds = %if.else.273
  %82 = load i8*, i8** %p, align 8
  %call278 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i32 0, i32 0)) #6
  %tobool279 = icmp ne i32 %call278, 0
  br i1 %tobool279, label %if.else.281, label %if.then.280

if.then.280:                                      ; preds = %if.else.277
  store i32 0, i32* @warn_missing_prototypes, align 4
  br label %if.end.558

if.else.281:                                      ; preds = %if.else.277
  %83 = load i8*, i8** %p, align 8
  %call282 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i32 0, i32 0)) #6
  %tobool283 = icmp ne i32 %call282, 0
  br i1 %tobool283, label %if.else.285, label %if.then.284

if.then.284:                                      ; preds = %if.else.281
  store i32 1, i32* @warn_missing_declarations, align 4
  br label %if.end.557

if.else.285:                                      ; preds = %if.else.281
  %84 = load i8*, i8** %p, align 8
  %call286 = call i32 @strcmp(i8* %84, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i32 0, i32 0)) #6
  %tobool287 = icmp ne i32 %call286, 0
  br i1 %tobool287, label %if.else.289, label %if.then.288

if.then.288:                                      ; preds = %if.else.285
  store i32 0, i32* @warn_missing_declarations, align 4
  br label %if.end.556

if.else.289:                                      ; preds = %if.else.285
  %85 = load i8*, i8** %p, align 8
  %call290 = call i32 @strcmp(i8* %85, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0)) #6
  %tobool291 = icmp ne i32 %call290, 0
  br i1 %tobool291, label %if.else.293, label %if.then.292

if.then.292:                                      ; preds = %if.else.289
  store i32 1, i32* @warn_redundant_decls, align 4
  br label %if.end.555

if.else.293:                                      ; preds = %if.else.289
  %86 = load i8*, i8** %p, align 8
  %call294 = call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.73, i32 0, i32 0)) #6
  %tobool295 = icmp ne i32 %call294, 0
  br i1 %tobool295, label %if.else.297, label %if.then.296

if.then.296:                                      ; preds = %if.else.293
  store i32 0, i32* @warn_redundant_decls, align 4
  br label %if.end.554

if.else.297:                                      ; preds = %if.else.293
  %87 = load i8*, i8** %p, align 8
  %call298 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0)) #6
  %tobool299 = icmp ne i32 %call298, 0
  br i1 %tobool299, label %if.else.301, label %if.then.300

if.then.300:                                      ; preds = %if.else.297
  store i32 1, i32* @warn_nested_externs, align 4
  br label %if.end.553

if.else.301:                                      ; preds = %if.else.297
  %88 = load i8*, i8** %p, align 8
  %call302 = call i32 @strcmp(i8* %88, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0)) #6
  %tobool303 = icmp ne i32 %call302, 0
  br i1 %tobool303, label %if.else.305, label %if.then.304

if.then.304:                                      ; preds = %if.else.301
  store i32 0, i32* @warn_nested_externs, align 4
  br label %if.end.552

if.else.305:                                      ; preds = %if.else.301
  %89 = load i8*, i8** %p, align 8
  %call306 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0)) #6
  %tobool307 = icmp ne i32 %call306, 0
  br i1 %tobool307, label %if.else.309, label %if.then.308

if.then.308:                                      ; preds = %if.else.305
  store i32 1, i32* @warn_traditional, align 4
  br label %if.end.551

if.else.309:                                      ; preds = %if.else.305
  %90 = load i8*, i8** %p, align 8
  %call310 = call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0)) #6
  %tobool311 = icmp ne i32 %call310, 0
  br i1 %tobool311, label %if.else.313, label %if.then.312

if.then.312:                                      ; preds = %if.else.309
  store i32 0, i32* @warn_traditional, align 4
  br label %if.end.550

if.else.313:                                      ; preds = %if.else.309
  %91 = load i8*, i8** %p, align 8
  %call314 = call i32 @strncmp(i8* %91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), i64 9) #6
  %tobool315 = icmp ne i32 %call314, 0
  br i1 %tobool315, label %if.else.319, label %if.then.316

if.then.316:                                      ; preds = %if.else.313
  %92 = load i8*, i8** %p, align 8
  %add.ptr317 = getelementptr inbounds i8, i8* %92, i64 9
  %call318 = call i32 @atoi(i8* %add.ptr317) #6
  call void @set_Wformat(i32 %call318)
  br label %if.end.549

if.else.319:                                      ; preds = %if.else.313
  %93 = load i8*, i8** %p, align 8
  %call320 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i32 0, i32 0)) #6
  %tobool321 = icmp ne i32 %call320, 0
  br i1 %tobool321, label %if.else.323, label %if.then.322

if.then.322:                                      ; preds = %if.else.319
  call void @set_Wformat(i32 1)
  br label %if.end.548

if.else.323:                                      ; preds = %if.else.319
  %94 = load i8*, i8** %p, align 8
  %call324 = call i32 @strcmp(i8* %94, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i32 0, i32 0)) #6
  %tobool325 = icmp ne i32 %call324, 0
  br i1 %tobool325, label %if.else.327, label %if.then.326

if.then.326:                                      ; preds = %if.else.323
  call void @set_Wformat(i32 0)
  br label %if.end.547

if.else.327:                                      ; preds = %if.else.323
  %95 = load i8*, i8** %p, align 8
  %call328 = call i32 @strcmp(i8* %95, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i32 0, i32 0)) #6
  %tobool329 = icmp ne i32 %call328, 0
  br i1 %tobool329, label %if.else.331, label %if.then.330

if.then.330:                                      ; preds = %if.else.327
  store i32 1, i32* @warn_format_y2k, align 4
  br label %if.end.546

if.else.331:                                      ; preds = %if.else.327
  %96 = load i8*, i8** %p, align 8
  %call332 = call i32 @strcmp(i8* %96, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i32 0, i32 0)) #6
  %tobool333 = icmp ne i32 %call332, 0
  br i1 %tobool333, label %if.else.335, label %if.then.334

if.then.334:                                      ; preds = %if.else.331
  store i32 0, i32* @warn_format_y2k, align 4
  br label %if.end.545

if.else.335:                                      ; preds = %if.else.331
  %97 = load i8*, i8** %p, align 8
  %call336 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.83, i32 0, i32 0)) #6
  %tobool337 = icmp ne i32 %call336, 0
  br i1 %tobool337, label %if.else.339, label %if.then.338

if.then.338:                                      ; preds = %if.else.335
  store i32 1, i32* @warn_format_extra_args, align 4
  br label %if.end.544

if.else.339:                                      ; preds = %if.else.335
  %98 = load i8*, i8** %p, align 8
  %call340 = call i32 @strcmp(i8* %98, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0)) #6
  %tobool341 = icmp ne i32 %call340, 0
  br i1 %tobool341, label %if.else.343, label %if.then.342

if.then.342:                                      ; preds = %if.else.339
  store i32 0, i32* @warn_format_extra_args, align 4
  br label %if.end.543

if.else.343:                                      ; preds = %if.else.339
  %99 = load i8*, i8** %p, align 8
  %call344 = call i32 @strcmp(i8* %99, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.85, i32 0, i32 0)) #6
  %tobool345 = icmp ne i32 %call344, 0
  br i1 %tobool345, label %if.else.347, label %if.then.346

if.then.346:                                      ; preds = %if.else.343
  store i32 1, i32* @warn_format_nonliteral, align 4
  br label %if.end.542

if.else.347:                                      ; preds = %if.else.343
  %100 = load i8*, i8** %p, align 8
  %call348 = call i32 @strcmp(i8* %100, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.86, i32 0, i32 0)) #6
  %tobool349 = icmp ne i32 %call348, 0
  br i1 %tobool349, label %if.else.351, label %if.then.350

if.then.350:                                      ; preds = %if.else.347
  store i32 0, i32* @warn_format_nonliteral, align 4
  br label %if.end.541

if.else.351:                                      ; preds = %if.else.347
  %101 = load i8*, i8** %p, align 8
  %call352 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i32 0, i32 0)) #6
  %tobool353 = icmp ne i32 %call352, 0
  br i1 %tobool353, label %if.else.355, label %if.then.354

if.then.354:                                      ; preds = %if.else.351
  store i32 1, i32* @warn_format_security, align 4
  br label %if.end.540

if.else.355:                                      ; preds = %if.else.351
  %102 = load i8*, i8** %p, align 8
  %call356 = call i32 @strcmp(i8* %102, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i32 0, i32 0)) #6
  %tobool357 = icmp ne i32 %call356, 0
  br i1 %tobool357, label %if.else.359, label %if.then.358

if.then.358:                                      ; preds = %if.else.355
  store i32 0, i32* @warn_format_security, align 4
  br label %if.end.539

if.else.359:                                      ; preds = %if.else.355
  %103 = load i8*, i8** %p, align 8
  %call360 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i32 0, i32 0)) #6
  %tobool361 = icmp ne i32 %call360, 0
  br i1 %tobool361, label %if.else.363, label %if.then.362

if.then.362:                                      ; preds = %if.else.359
  store i32 1, i32* @warn_char_subscripts, align 4
  br label %if.end.538

if.else.363:                                      ; preds = %if.else.359
  %104 = load i8*, i8** %p, align 8
  %call364 = call i32 @strcmp(i8* %104, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i32 0, i32 0)) #6
  %tobool365 = icmp ne i32 %call364, 0
  br i1 %tobool365, label %if.else.367, label %if.then.366

if.then.366:                                      ; preds = %if.else.363
  store i32 0, i32* @warn_char_subscripts, align 4
  br label %if.end.537

if.else.367:                                      ; preds = %if.else.363
  %105 = load i8*, i8** %p, align 8
  %call368 = call i32 @strcmp(i8* %105, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0)) #6
  %tobool369 = icmp ne i32 %call368, 0
  br i1 %tobool369, label %if.else.371, label %if.then.370

if.then.370:                                      ; preds = %if.else.367
  store i32 1, i32* @warn_conversion, align 4
  br label %if.end.536

if.else.371:                                      ; preds = %if.else.367
  %106 = load i8*, i8** %p, align 8
  %call372 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i32 0)) #6
  %tobool373 = icmp ne i32 %call372, 0
  br i1 %tobool373, label %if.else.375, label %if.then.374

if.then.374:                                      ; preds = %if.else.371
  store i32 0, i32* @warn_conversion, align 4
  br label %if.end.535

if.else.375:                                      ; preds = %if.else.371
  %107 = load i8*, i8** %p, align 8
  %call376 = call i32 @strcmp(i8* %107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i32 0, i32 0)) #6
  %tobool377 = icmp ne i32 %call376, 0
  br i1 %tobool377, label %if.else.379, label %if.then.378

if.then.378:                                      ; preds = %if.else.375
  store i32 1, i32* @warn_parentheses, align 4
  br label %if.end.534

if.else.379:                                      ; preds = %if.else.375
  %108 = load i8*, i8** %p, align 8
  %call380 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94, i32 0, i32 0)) #6
  %tobool381 = icmp ne i32 %call380, 0
  br i1 %tobool381, label %if.else.383, label %if.then.382

if.then.382:                                      ; preds = %if.else.379
  store i32 0, i32* @warn_parentheses, align 4
  br label %if.end.533

if.else.383:                                      ; preds = %if.else.379
  %109 = load i8*, i8** %p, align 8
  %call384 = call i32 @strcmp(i8* %109, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0)) #6
  %tobool385 = icmp ne i32 %call384, 0
  br i1 %tobool385, label %if.else.387, label %if.then.386

if.then.386:                                      ; preds = %if.else.383
  store i32 1, i32* @warn_return_type, align 4
  br label %if.end.532

if.else.387:                                      ; preds = %if.else.383
  %110 = load i8*, i8** %p, align 8
  %call388 = call i32 @strcmp(i8* %110, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96, i32 0, i32 0)) #6
  %tobool389 = icmp ne i32 %call388, 0
  br i1 %tobool389, label %if.else.391, label %if.then.390

if.then.390:                                      ; preds = %if.else.387
  store i32 0, i32* @warn_return_type, align 4
  br label %if.end.531

if.else.391:                                      ; preds = %if.else.387
  %111 = load i8*, i8** %p, align 8
  %call392 = call i32 @strcmp(i8* %111, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0)) #6
  %tobool393 = icmp ne i32 %call392, 0
  br i1 %tobool393, label %if.else.395, label %if.then.394

if.then.394:                                      ; preds = %if.else.391
  store i32 1, i32* @warn_sequence_point, align 4
  br label %if.end.530

if.else.395:                                      ; preds = %if.else.391
  %112 = load i8*, i8** %p, align 8
  %call396 = call i32 @strcmp(i8* %112, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.98, i32 0, i32 0)) #6
  %tobool397 = icmp ne i32 %call396, 0
  br i1 %tobool397, label %if.else.399, label %if.then.398

if.then.398:                                      ; preds = %if.else.395
  store i32 0, i32* @warn_sequence_point, align 4
  br label %if.end.529

if.else.399:                                      ; preds = %if.else.395
  %113 = load i8*, i8** %p, align 8
  %call400 = call i32 @strcmp(i8* %113, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0)) #6
  %tobool401 = icmp ne i32 %call400, 0
  br i1 %tobool401, label %if.else.403, label %if.then.402

if.then.402:                                      ; preds = %if.else.399
  br label %if.end.528

if.else.403:                                      ; preds = %if.else.399
  %114 = load i8*, i8** %p, align 8
  %call404 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0)) #6
  %tobool405 = icmp ne i32 %call404, 0
  br i1 %tobool405, label %if.else.407, label %if.then.406

if.then.406:                                      ; preds = %if.else.403
  br label %if.end.527

if.else.407:                                      ; preds = %if.else.403
  %115 = load i8*, i8** %p, align 8
  %call408 = call i32 @strcmp(i8* %115, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i32 0, i32 0)) #6
  %tobool409 = icmp ne i32 %call408, 0
  br i1 %tobool409, label %if.else.411, label %if.then.410

if.then.410:                                      ; preds = %if.else.407
  br label %if.end.526

if.else.411:                                      ; preds = %if.else.407
  %116 = load i8*, i8** %p, align 8
  %call412 = call i32 @strcmp(i8* %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i32 0, i32 0)) #6
  %tobool413 = icmp ne i32 %call412, 0
  br i1 %tobool413, label %if.else.415, label %if.then.414

if.then.414:                                      ; preds = %if.else.411
  br label %if.end.525

if.else.415:                                      ; preds = %if.else.411
  %117 = load i8*, i8** %p, align 8
  %call416 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i32 0, i32 0)) #6
  %tobool417 = icmp ne i32 %call416, 0
  br i1 %tobool417, label %if.else.419, label %if.then.418

if.then.418:                                      ; preds = %if.else.415
  br label %if.end.524

if.else.419:                                      ; preds = %if.else.415
  %118 = load i8*, i8** %p, align 8
  %call420 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i32 0, i32 0)) #6
  %tobool421 = icmp ne i32 %call420, 0
  br i1 %tobool421, label %if.else.423, label %if.then.422

if.then.422:                                      ; preds = %if.else.419
  br label %if.end.523

if.else.423:                                      ; preds = %if.else.419
  %119 = load i8*, i8** %p, align 8
  %call424 = call i32 @strcmp(i8* %119, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0)) #6
  %tobool425 = icmp ne i32 %call424, 0
  br i1 %tobool425, label %if.else.427, label %if.then.426

if.then.426:                                      ; preds = %if.else.423
  br label %if.end.522

if.else.427:                                      ; preds = %if.else.423
  %120 = load i8*, i8** %p, align 8
  %call428 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0)) #6
  %tobool429 = icmp ne i32 %call428, 0
  br i1 %tobool429, label %if.else.431, label %if.then.430

if.then.430:                                      ; preds = %if.else.427
  br label %if.end.521

if.else.431:                                      ; preds = %if.else.427
  %121 = load i8*, i8** %p, align 8
  %call432 = call i32 @strcmp(i8* %121, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i32 0, i32 0)) #6
  %tobool433 = icmp ne i32 %call432, 0
  br i1 %tobool433, label %if.else.435, label %if.then.434

if.then.434:                                      ; preds = %if.else.431
  br label %if.end.520

if.else.435:                                      ; preds = %if.else.431
  %122 = load i8*, i8** %p, align 8
  %call436 = call i32 @strcmp(i8* %122, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i32 0, i32 0)) #6
  %tobool437 = icmp ne i32 %call436, 0
  br i1 %tobool437, label %if.else.439, label %if.then.438

if.then.438:                                      ; preds = %if.else.435
  br label %if.end.519

if.else.439:                                      ; preds = %if.else.435
  %123 = load i8*, i8** %p, align 8
  %call440 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0)) #6
  %tobool441 = icmp ne i32 %call440, 0
  br i1 %tobool441, label %if.else.443, label %if.then.442

if.then.442:                                      ; preds = %if.else.439
  store i32 1, i32* @warn_missing_braces, align 4
  br label %if.end.518

if.else.443:                                      ; preds = %if.else.439
  %124 = load i8*, i8** %p, align 8
  %call444 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i32 0, i32 0)) #6
  %tobool445 = icmp ne i32 %call444, 0
  br i1 %tobool445, label %if.else.447, label %if.then.446

if.then.446:                                      ; preds = %if.else.443
  store i32 0, i32* @warn_missing_braces, align 4
  br label %if.end.517

if.else.447:                                      ; preds = %if.else.443
  %125 = load i8*, i8** %p, align 8
  %call448 = call i32 @strcmp(i8* %125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i32 0, i32 0)) #6
  %tobool449 = icmp ne i32 %call448, 0
  br i1 %tobool449, label %if.else.451, label %if.then.450

if.then.450:                                      ; preds = %if.else.447
  store i32 1, i32* @warn_main, align 4
  br label %if.end.516

if.else.451:                                      ; preds = %if.else.447
  %126 = load i8*, i8** %p, align 8
  %call452 = call i32 @strcmp(i8* %126, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i32 0, i32 0)) #6
  %tobool453 = icmp ne i32 %call452, 0
  br i1 %tobool453, label %if.else.455, label %if.then.454

if.then.454:                                      ; preds = %if.else.451
  store i32 -1, i32* @warn_main, align 4
  br label %if.end.515

if.else.455:                                      ; preds = %if.else.451
  %127 = load i8*, i8** %p, align 8
  %call456 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.113, i32 0, i32 0)) #6
  %tobool457 = icmp ne i32 %call456, 0
  br i1 %tobool457, label %if.else.459, label %if.then.458

if.then.458:                                      ; preds = %if.else.455
  store i32 1, i32* @warn_sign_compare, align 4
  br label %if.end.514

if.else.459:                                      ; preds = %if.else.455
  %128 = load i8*, i8** %p, align 8
  %call460 = call i32 @strcmp(i8* %128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.114, i32 0, i32 0)) #6
  %tobool461 = icmp ne i32 %call460, 0
  br i1 %tobool461, label %if.else.463, label %if.then.462

if.then.462:                                      ; preds = %if.else.459
  store i32 0, i32* @warn_sign_compare, align 4
  br label %if.end.513

if.else.463:                                      ; preds = %if.else.459
  %129 = load i8*, i8** %p, align 8
  %call464 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i32 0, i32 0)) #6
  %tobool465 = icmp ne i32 %call464, 0
  br i1 %tobool465, label %if.else.467, label %if.then.466

if.then.466:                                      ; preds = %if.else.463
  store i32 1, i32* @warn_float_equal, align 4
  br label %if.end.512

if.else.467:                                      ; preds = %if.else.463
  %130 = load i8*, i8** %p, align 8
  %call468 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.116, i32 0, i32 0)) #6
  %tobool469 = icmp ne i32 %call468, 0
  br i1 %tobool469, label %if.else.471, label %if.then.470

if.then.470:                                      ; preds = %if.else.467
  store i32 0, i32* @warn_float_equal, align 4
  br label %if.end.511

if.else.471:                                      ; preds = %if.else.467
  %131 = load i8*, i8** %p, align 8
  %call472 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i32 0, i32 0)) #6
  %tobool473 = icmp ne i32 %call472, 0
  br i1 %tobool473, label %if.else.475, label %if.then.474

if.then.474:                                      ; preds = %if.else.471
  store i32 1, i32* @warn_multichar, align 4
  br label %if.end.510

if.else.475:                                      ; preds = %if.else.471
  %132 = load i8*, i8** %p, align 8
  %call476 = call i32 @strcmp(i8* %132, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i32 0, i32 0)) #6
  %tobool477 = icmp ne i32 %call476, 0
  br i1 %tobool477, label %if.else.479, label %if.then.478

if.then.478:                                      ; preds = %if.else.475
  store i32 0, i32* @warn_multichar, align 4
  br label %if.end.509

if.else.479:                                      ; preds = %if.else.475
  %133 = load i8*, i8** %p, align 8
  %call480 = call i32 @strcmp(i8* %133, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.119, i32 0, i32 0)) #6
  %tobool481 = icmp ne i32 %call480, 0
  br i1 %tobool481, label %if.else.483, label %if.then.482

if.then.482:                                      ; preds = %if.else.479
  store i32 1, i32* @warn_div_by_zero, align 4
  br label %if.end.508

if.else.483:                                      ; preds = %if.else.479
  %134 = load i8*, i8** %p, align 8
  %call484 = call i32 @strcmp(i8* %134, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.120, i32 0, i32 0)) #6
  %tobool485 = icmp ne i32 %call484, 0
  br i1 %tobool485, label %if.else.487, label %if.then.486

if.then.486:                                      ; preds = %if.else.483
  store i32 0, i32* @warn_div_by_zero, align 4
  br label %if.end.507

if.else.487:                                      ; preds = %if.else.483
  %135 = load i8*, i8** %p, align 8
  %call488 = call i32 @strcmp(i8* %135, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.121, i32 0, i32 0)) #6
  %tobool489 = icmp ne i32 %call488, 0
  br i1 %tobool489, label %if.else.491, label %if.then.490

if.then.490:                                      ; preds = %if.else.487
  store i32 2, i32* @warn_unknown_pragmas, align 4
  br label %if.end.506

if.else.491:                                      ; preds = %if.else.487
  %136 = load i8*, i8** %p, align 8
  %call492 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i32 0, i32 0)) #6
  %tobool493 = icmp ne i32 %call492, 0
  br i1 %tobool493, label %if.else.495, label %if.then.494

if.then.494:                                      ; preds = %if.else.491
  store i32 0, i32* @warn_unknown_pragmas, align 4
  br label %if.end.505

if.else.495:                                      ; preds = %if.else.491
  %137 = load i8*, i8** %p, align 8
  %call496 = call i32 @strcmp(i8* %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0)) #6
  %tobool497 = icmp ne i32 %call496, 0
  br i1 %tobool497, label %if.else.503, label %if.then.498

if.then.498:                                      ; preds = %if.else.495
  %138 = load i32, i32* @warn_uninitialized, align 4
  %cmp499 = icmp ne i32 %138, 1
  br i1 %cmp499, label %if.then.501, label %if.end.502

if.then.501:                                      ; preds = %if.then.498
  store i32 2, i32* @warn_uninitialized, align 4
  br label %if.end.502

if.end.502:                                       ; preds = %if.then.501, %if.then.498
  store i32 1, i32* @warn_implicit_int, align 4
  store i32 1, i32* @mesg_implicit_function_declaration, align 4
  store i32 1, i32* @warn_return_type, align 4
  call void @set_Wunused(i32 1)
  store i32 1, i32* @warn_switch, align 4
  call void @set_Wformat(i32 1)
  store i32 1, i32* @warn_char_subscripts, align 4
  store i32 1, i32* @warn_parentheses, align 4
  store i32 1, i32* @warn_sequence_point, align 4
  store i32 1, i32* @warn_missing_braces, align 4
  store i32 2, i32* @warn_main, align 4
  store i32 1, i32* @warn_unknown_pragmas, align 4
  br label %if.end.504

if.else.503:                                      ; preds = %if.else.495
  %139 = load i32, i32* %strings_processed, align 4
  store i32 %139, i32* %retval
  br label %return

if.end.504:                                       ; preds = %if.end.502
  br label %if.end.505

if.end.505:                                       ; preds = %if.end.504, %if.then.494
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.505, %if.then.490
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %if.then.486
  br label %if.end.508

if.end.508:                                       ; preds = %if.end.507, %if.then.482
  br label %if.end.509

if.end.509:                                       ; preds = %if.end.508, %if.then.478
  br label %if.end.510

if.end.510:                                       ; preds = %if.end.509, %if.then.474
  br label %if.end.511

if.end.511:                                       ; preds = %if.end.510, %if.then.470
  br label %if.end.512

if.end.512:                                       ; preds = %if.end.511, %if.then.466
  br label %if.end.513

if.end.513:                                       ; preds = %if.end.512, %if.then.462
  br label %if.end.514

if.end.514:                                       ; preds = %if.end.513, %if.then.458
  br label %if.end.515

if.end.515:                                       ; preds = %if.end.514, %if.then.454
  br label %if.end.516

if.end.516:                                       ; preds = %if.end.515, %if.then.450
  br label %if.end.517

if.end.517:                                       ; preds = %if.end.516, %if.then.446
  br label %if.end.518

if.end.518:                                       ; preds = %if.end.517, %if.then.442
  br label %if.end.519

if.end.519:                                       ; preds = %if.end.518, %if.then.438
  br label %if.end.520

if.end.520:                                       ; preds = %if.end.519, %if.then.434
  br label %if.end.521

if.end.521:                                       ; preds = %if.end.520, %if.then.430
  br label %if.end.522

if.end.522:                                       ; preds = %if.end.521, %if.then.426
  br label %if.end.523

if.end.523:                                       ; preds = %if.end.522, %if.then.422
  br label %if.end.524

if.end.524:                                       ; preds = %if.end.523, %if.then.418
  br label %if.end.525

if.end.525:                                       ; preds = %if.end.524, %if.then.414
  br label %if.end.526

if.end.526:                                       ; preds = %if.end.525, %if.then.410
  br label %if.end.527

if.end.527:                                       ; preds = %if.end.526, %if.then.406
  br label %if.end.528

if.end.528:                                       ; preds = %if.end.527, %if.then.402
  br label %if.end.529

if.end.529:                                       ; preds = %if.end.528, %if.then.398
  br label %if.end.530

if.end.530:                                       ; preds = %if.end.529, %if.then.394
  br label %if.end.531

if.end.531:                                       ; preds = %if.end.530, %if.then.390
  br label %if.end.532

if.end.532:                                       ; preds = %if.end.531, %if.then.386
  br label %if.end.533

if.end.533:                                       ; preds = %if.end.532, %if.then.382
  br label %if.end.534

if.end.534:                                       ; preds = %if.end.533, %if.then.378
  br label %if.end.535

if.end.535:                                       ; preds = %if.end.534, %if.then.374
  br label %if.end.536

if.end.536:                                       ; preds = %if.end.535, %if.then.370
  br label %if.end.537

if.end.537:                                       ; preds = %if.end.536, %if.then.366
  br label %if.end.538

if.end.538:                                       ; preds = %if.end.537, %if.then.362
  br label %if.end.539

if.end.539:                                       ; preds = %if.end.538, %if.then.358
  br label %if.end.540

if.end.540:                                       ; preds = %if.end.539, %if.then.354
  br label %if.end.541

if.end.541:                                       ; preds = %if.end.540, %if.then.350
  br label %if.end.542

if.end.542:                                       ; preds = %if.end.541, %if.then.346
  br label %if.end.543

if.end.543:                                       ; preds = %if.end.542, %if.then.342
  br label %if.end.544

if.end.544:                                       ; preds = %if.end.543, %if.then.338
  br label %if.end.545

if.end.545:                                       ; preds = %if.end.544, %if.then.334
  br label %if.end.546

if.end.546:                                       ; preds = %if.end.545, %if.then.330
  br label %if.end.547

if.end.547:                                       ; preds = %if.end.546, %if.then.326
  br label %if.end.548

if.end.548:                                       ; preds = %if.end.547, %if.then.322
  br label %if.end.549

if.end.549:                                       ; preds = %if.end.548, %if.then.316
  br label %if.end.550

if.end.550:                                       ; preds = %if.end.549, %if.then.312
  br label %if.end.551

if.end.551:                                       ; preds = %if.end.550, %if.then.308
  br label %if.end.552

if.end.552:                                       ; preds = %if.end.551, %if.then.304
  br label %if.end.553

if.end.553:                                       ; preds = %if.end.552, %if.then.300
  br label %if.end.554

if.end.554:                                       ; preds = %if.end.553, %if.then.296
  br label %if.end.555

if.end.555:                                       ; preds = %if.end.554, %if.then.292
  br label %if.end.556

if.end.556:                                       ; preds = %if.end.555, %if.then.288
  br label %if.end.557

if.end.557:                                       ; preds = %if.end.556, %if.then.284
  br label %if.end.558

if.end.558:                                       ; preds = %if.end.557, %if.then.280
  br label %if.end.559

if.end.559:                                       ; preds = %if.end.558, %if.then.276
  br label %if.end.560

if.end.560:                                       ; preds = %if.end.559, %if.then.272
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %if.then.268
  br label %if.end.562

if.end.562:                                       ; preds = %if.end.561, %if.then.264
  br label %if.end.563

if.end.563:                                       ; preds = %if.end.562, %if.then.260
  br label %if.end.564

if.end.564:                                       ; preds = %if.end.563, %if.then.256
  br label %if.end.565

if.end.565:                                       ; preds = %if.end.564, %if.then.252
  br label %if.end.566

if.end.566:                                       ; preds = %if.end.565, %if.then.248
  br label %if.end.567

if.end.567:                                       ; preds = %if.end.566, %if.then.244
  br label %if.end.568

if.end.568:                                       ; preds = %if.end.567, %if.then.240
  br label %if.end.569

if.end.569:                                       ; preds = %if.end.568, %if.then.236
  br label %if.end.570

if.end.570:                                       ; preds = %if.end.569, %if.then.232
  br label %if.end.571

if.end.571:                                       ; preds = %if.end.570, %if.then.228
  br label %if.end.572

if.end.572:                                       ; preds = %if.end.571, %if.then.224
  br label %if.end.573

if.end.573:                                       ; preds = %if.end.572, %if.then.220
  br label %if.end.574

if.end.574:                                       ; preds = %if.end.573, %if.then.216
  br label %if.end.575

if.end.575:                                       ; preds = %if.end.574, %if.then.212
  br label %if.end.576

if.end.576:                                       ; preds = %if.end.575, %if.end.208
  br label %if.end.577

if.end.577:                                       ; preds = %if.end.576, %if.then.200
  br label %if.end.578

if.end.578:                                       ; preds = %if.end.577, %if.then.196
  br label %if.end.579

if.end.579:                                       ; preds = %if.end.578, %if.then.192
  br label %if.end.580

if.end.580:                                       ; preds = %if.end.579, %if.then.188
  br label %if.end.581

if.end.581:                                       ; preds = %if.end.580, %if.then.184
  br label %if.end.582

if.end.582:                                       ; preds = %if.end.581
  br label %if.end.583

if.end.583:                                       ; preds = %if.end.582, %if.then.176
  br label %if.end.584

if.end.584:                                       ; preds = %if.end.583, %if.then.163
  br label %if.end.585

if.end.585:                                       ; preds = %if.end.584, %if.then.159
  br label %if.end.586

if.end.586:                                       ; preds = %if.end.585, %if.then.155
  br label %if.end.587

if.end.587:                                       ; preds = %if.end.586, %if.then.151
  br label %if.end.588

if.end.588:                                       ; preds = %if.end.587, %if.then.147
  br label %if.end.589

if.end.589:                                       ; preds = %if.end.588, %if.then.143
  br label %if.end.590

if.end.590:                                       ; preds = %if.end.589, %if.then.139
  br label %if.end.591

if.end.591:                                       ; preds = %if.end.590, %if.then.135
  br label %if.end.592

if.end.592:                                       ; preds = %if.end.591, %if.then.131
  br label %if.end.593

if.end.593:                                       ; preds = %if.end.592, %if.then.127
  br label %if.end.594

if.end.594:                                       ; preds = %if.end.593, %if.then.123
  br label %if.end.595

if.end.595:                                       ; preds = %if.end.594, %if.then.119
  br label %if.end.596

if.end.596:                                       ; preds = %if.end.595, %if.then.115
  br label %if.end.597

if.end.597:                                       ; preds = %if.end.596, %if.then.111
  br label %if.end.598

if.end.598:                                       ; preds = %if.end.597, %if.then.104
  br label %if.end.599

if.end.599:                                       ; preds = %if.end.598, %if.then.97
  br label %if.end.600

if.end.600:                                       ; preds = %if.end.599, %if.then.93
  br label %if.end.601

if.end.601:                                       ; preds = %if.end.600, %if.then.89
  br label %if.end.602

if.end.602:                                       ; preds = %if.end.601, %if.then.85
  br label %if.end.603

if.end.603:                                       ; preds = %if.end.602, %if.then.81
  br label %if.end.604

if.end.604:                                       ; preds = %if.end.603, %if.then.77
  br label %if.end.605

if.end.605:                                       ; preds = %if.end.604, %if.end.73
  br label %if.end.606

if.end.606:                                       ; preds = %if.end.605, %if.then.28
  br label %if.end.607

if.end.607:                                       ; preds = %if.end.606, %if.end
  br label %if.end.608

if.end.608:                                       ; preds = %if.end.607, %if.then.13
  br label %if.end.609

if.end.609:                                       ; preds = %if.end.608, %if.then.6
  br label %if.end.610

if.end.610:                                       ; preds = %if.end.609, %if.then
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.610, %if.else.503
  %140 = load i32, i32* %retval
  ret i32 %140
}

declare i32 @cpp_handle_option(%struct.cpp_reader*, i32, i8**, i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #2

declare void @error(i8*, ...) #1

declare void @disable_builtin_function(i8*) #1

declare i32 @dump_switch_p(i8*) #1

declare void @set_Wformat(i32) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #2

declare void @set_Wunused(i32) #1

; Function Attrs: nounwind uwtable
define void @c_print_identifier(%struct._IO_FILE* %file, %union.tree_node* %node, i32 %indent) #0 {
entry:
  %file.addr = alloca %struct._IO_FILE*, align 8
  %node.addr = alloca %union.tree_node*, align 8
  %indent.addr = alloca i32, align 4
  %rid = alloca %union.tree_node*, align 8
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  store %union.tree_node* %node, %union.tree_node** %node.addr, align 8
  store i32 %indent, i32* %indent.addr, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %2 = bitcast %union.tree_node* %1 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  %4 = load i32, i32* %indent.addr, align 4
  %add = add nsw i32 %4, 4
  call void @print_node(%struct._IO_FILE* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0), %union.tree_node* %3, i32 %add)
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %6 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %7 = bitcast %union.tree_node* %6 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %7, i32 0, i32 2
  %8 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  %9 = load i32, i32* %indent.addr, align 4
  %add1 = add nsw i32 %9, 4
  call void @print_node(%struct._IO_FILE* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i32 0, i32 0), %union.tree_node* %8, i32 %add1)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %12 = bitcast %union.tree_node* %11 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %12, i32 0, i32 3
  %13 = load %union.tree_node*, %union.tree_node** %label_value, align 8
  %14 = load i32, i32* %indent.addr, align 4
  %add2 = add nsw i32 %14, 4
  call void @print_node(%struct._IO_FILE* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), %union.tree_node* %13, i32 %add2)
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %16 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %17 = bitcast %union.tree_node* %16 to %struct.lang_identifier*
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %17, i32 0, i32 4
  %18 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  %19 = load i32, i32* %indent.addr, align 4
  %add3 = add nsw i32 %19, 4
  call void @print_node(%struct._IO_FILE* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), %union.tree_node* %18, i32 %add3)
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %21 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %22 = bitcast %union.tree_node* %21 to %struct.lang_identifier*
  %error_locus = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %22, i32 0, i32 5
  %23 = load %union.tree_node*, %union.tree_node** %error_locus, align 8
  %24 = load i32, i32* %indent.addr, align 4
  %add4 = add nsw i32 %24, 4
  call void @print_node(%struct._IO_FILE* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.128, i32 0, i32 0), %union.tree_node* %23, i32 %add4)
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %27 = bitcast %union.tree_node* %26 to %struct.lang_identifier*
  %limbo_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %27, i32 0, i32 6
  %28 = load %union.tree_node*, %union.tree_node** %limbo_value, align 8
  %29 = load i32, i32* %indent.addr, align 4
  %add5 = add nsw i32 %29, 4
  call void @print_node(%struct._IO_FILE* %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.129, i32 0, i32 0), %union.tree_node* %28, i32 %add5)
  %30 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %common = bitcast %union.tree_node* %30 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %lang_flag_0, align 8
  %bf.lshr = lshr i32 %bf.load, 24
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %31 = load %union.tree_node*, %union.tree_node** %node.addr, align 8
  %32 = bitcast %union.tree_node* %31 to %struct.c_common_identifier*
  %node6 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %32, i32 0, i32 1
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node6, i32 0, i32 3
  %33 = load i8, i8* %rid_code, align 1
  %idxprom = zext i8 %33 to i64
  %34 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %34, i64 %idxprom
  %35 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %35, %union.tree_node** %rid, align 8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %37 = load i32, i32* %indent.addr, align 4
  %add7 = add nsw i32 %37, 4
  call void @indent_to(%struct._IO_FILE* %36, i32 %add7)
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0))
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %40 = load %union.tree_node*, %union.tree_node** %rid, align 8
  %41 = bitcast %union.tree_node* %40 to i8*
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), i8* %41)
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %43 = load %union.tree_node*, %union.tree_node** %rid, align 8
  %identifier = bitcast %union.tree_node* %43 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %44 = load i8*, i8** %str, align 8
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i8* %44)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @print_node(%struct._IO_FILE*, i8*, %union.tree_node*, i32) #1

declare void @indent_to(%struct._IO_FILE*, i32) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @finish_incomplete_decl(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %type2, align 8
  store %union.tree_node* %2, %union.tree_node** %type, align 8
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp3 = icmp ne %union.tree_node* %3, %4
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common4 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 18
  br i1 %cmp8, label %land.lhs.true.9, label %if.end

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl10 = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl10, i32 0, i32 5
  %7 = bitcast i48* %external_flag to i64*
  %bf.load11 = load i64, i64* %7, align 8
  %bf.lshr = lshr i64 %bf.load11, 8
  %bf.clear12 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear12 to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.end, label %land.lhs.true.13

land.lhs.true.13:                                 ; preds = %land.lhs.true.9
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type14 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp15 = icmp eq %union.tree_node* %9, null
  br i1 %cmp15, label %if.then.16, label %if.end

if.then.16:                                       ; preds = %land.lhs.true.13
  %10 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.133, i32 0, i32 0))
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call = call i32 @complete_array_type(%union.tree_node* %11, %union.tree_node* null, i32 1)
  %12 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @layout_decl(%union.tree_node* %12, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then.16, %land.lhs.true.13, %land.lhs.true.9, %land.lhs.true, %if.then
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %entry
  ret void
}

declare void @warning_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @complete_array_type(%union.tree_node* %type, %union.tree_node* %initial_value, i32 %do_default) #0 {
entry:
  %type.addr = alloca %union.tree_node*, align 8
  %initial_value.addr = alloca %union.tree_node*, align 8
  %do_default.addr = alloca i32, align 4
  %maxindex = alloca %union.tree_node*, align 8
  %value = alloca i32, align 4
  %eltsize = alloca i32, align 4
  %elts = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %initial_value, %union.tree_node** %initial_value.addr, align 8
  store i32 %do_default, i32* %do_default.addr, align 4
  store %union.tree_node* null, %union.tree_node** %maxindex, align 8
  store i32 0, i32* %value, align 4
  %0 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %tobool = icmp ne %union.tree_node* %0, null
  br i1 %tobool, label %if.then, label %if.end.34

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 29
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %common4 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8
  %call = call i64 @int_size_in_bytes(%union.tree_node* %4)
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %eltsize, align 4
  %5 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %string = bitcast %union.tree_node* %5 to %struct.tree_string*
  %length = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 2
  %6 = load i32, i32* %length, align 4
  %7 = load i32, i32* %eltsize, align 4
  %div = sdiv i32 %6, %7
  %sub = sub nsw i32 %div, 1
  %conv6 = sext i32 %sub to i64
  %call7 = call %union.tree_node* @build_int_2_wide(i64 %conv6, i64 0)
  store %union.tree_node* %call7, %union.tree_node** %maxindex, align 8
  br label %if.end.33

if.else:                                          ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %common8 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load10 = load i32, i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  %cmp12 = icmp eq i32 %bf.clear11, 46
  br i1 %cmp12, label %if.then.14, label %if.else.26

if.then.14:                                       ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %exp = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %10, %union.tree_node** %elts, align 8
  %call15 = call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1)
  store %union.tree_node* %call15, %union.tree_node** %maxindex, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.14
  %11 = load %union.tree_node*, %union.tree_node** %elts, align 8
  %tobool16 = icmp ne %union.tree_node* %11, null
  br i1 %tobool16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %union.tree_node*, %union.tree_node** %elts, align 8
  %list = bitcast %union.tree_node* %12 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %tobool17 = icmp ne %union.tree_node* %13, null
  br i1 %tobool17, label %if.then.18, label %if.else.21

if.then.18:                                       ; preds = %for.body
  %14 = load %union.tree_node*, %union.tree_node** %elts, align 8
  %list19 = bitcast %union.tree_node* %14 to %struct.tree_list*
  %purpose20 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list19, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %purpose20, align 8
  store %union.tree_node* %15, %union.tree_node** %maxindex, align 8
  br label %if.end

if.else.21:                                       ; preds = %for.body
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %17 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call22 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 59, %union.tree_node* %16, %union.tree_node* %17, %union.tree_node* %18)
  %call23 = call %union.tree_node* @fold(%union.tree_node* %call22)
  store %union.tree_node* %call23, %union.tree_node** %maxindex, align 8
  br label %if.end

if.end:                                           ; preds = %if.else.21, %if.then.18
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load %union.tree_node*, %union.tree_node** %elts, align 8
  %common24 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 0
  %20 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %20, %union.tree_node** %elts, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %21 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %call25 = call %union.tree_node* @copy_node(%union.tree_node* %21)
  store %union.tree_node* %call25, %union.tree_node** %maxindex, align 8
  br label %if.end.32

if.else.26:                                       ; preds = %if.else
  %22 = load %union.tree_node*, %union.tree_node** %initial_value.addr, align 8
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp27 = icmp ne %union.tree_node* %22, %23
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.else.26
  store i32 1, i32* %value, align 4
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.29, %if.else.26
  %call31 = call %union.tree_node* @build_int_2_wide(i64 0, i64 0)
  store %union.tree_node* %call31, %union.tree_node** %maxindex, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.30, %for.end
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then.1
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %entry
  %24 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %tobool35 = icmp ne %union.tree_node* %24, null
  br i1 %tobool35, label %if.end.41, label %if.then.36

if.then.36:                                       ; preds = %if.end.34
  %25 = load i32, i32* %do_default.addr, align 4
  %tobool37 = icmp ne i32 %25, 0
  br i1 %tobool37, label %if.then.38, label %if.end.40

if.then.38:                                       ; preds = %if.then.36
  %call39 = call %union.tree_node* @build_int_2_wide(i64 0, i64 0)
  store %union.tree_node* %call39, %union.tree_node** %maxindex, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.38, %if.then.36
  store i32 2, i32* %value, align 4
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.34
  %26 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %tobool42 = icmp ne %union.tree_node* %26, null
  br i1 %tobool42, label %if.then.43, label %if.end.55

if.then.43:                                       ; preds = %if.end.41
  %27 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %call44 = call %union.tree_node* @build_index_type(%union.tree_node* %27)
  %28 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type45 = bitcast %union.tree_node* %28 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i32 0, i32 1
  store %union.tree_node* %call44, %union.tree_node** %values, align 8
  %29 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %common46 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type47, align 8
  %tobool48 = icmp ne %union.tree_node* %30, null
  br i1 %tobool48, label %if.end.54, label %if.then.49

if.then.49:                                       ; preds = %if.then.43
  %31 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type50 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %values51 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type50, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %values51, align 8
  %33 = load %union.tree_node*, %union.tree_node** %maxindex, align 8
  %common52 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common52, i32 0, i32 1
  store %union.tree_node* %32, %union.tree_node** %type53, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.49, %if.then.43
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.41
  %34 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  call void @layout_type(%union.tree_node* %34)
  %35 = load i32, i32* %value, align 4
  ret i32 %35
}

declare void @layout_decl(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @global_bindings_p() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define void @keep_next_level() #0 {
entry:
  store i32 1, i32* @keep_next_level_flag, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @kept_level_p() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 10
  %1 = load i8, i8* %keep_if_subblocks, align 1
  %conv = sext i8 %1 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 3
  %3 = load %union.tree_node*, %union.tree_node** %blocks, align 8
  %cmp = icmp ne %union.tree_node* %3, null
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %keep = getelementptr inbounds %struct.binding_level, %struct.binding_level* %4, i32 0, i32 9
  %5 = load i8, i8* %keep, align 1
  %conv2 = sext i8 %5 to i32
  %tobool3 = icmp ne i32 %conv2, 0
  br i1 %tobool3, label %lor.end, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %6 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %6, i32 0, i32 0
  %7 = load %union.tree_node*, %union.tree_node** %names, align 8
  %cmp5 = icmp ne %union.tree_node* %7, null
  br i1 %cmp5, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.4
  %8 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %8, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %tags, align 8
  %cmp7 = icmp ne %union.tree_node* %9, null
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %10 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tag_transparent = getelementptr inbounds %struct.binding_level, %struct.binding_level* %10, i32 0, i32 7
  %11 = load i8, i8* %tag_transparent, align 1
  %tobool9 = icmp ne i8 %11, 0
  %lnot = xor i1 %tobool9, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %12 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false.4, %lor.lhs.false, %land.lhs.true
  %13 = phi i1 [ true, %lor.lhs.false.4 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %12, %land.end ]
  %lor.ext = zext i1 %13 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define void @declare_parm_level(i32 %definition_flag) #0 {
entry:
  %definition_flag.addr = alloca i32, align 4
  store i32 %definition_flag, i32* %definition_flag.addr, align 4
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_flag = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 6
  store i8 1, i8* %parm_flag, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @in_parm_level_p() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_flag = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 6
  %1 = load i8, i8* %parm_flag, align 1
  %conv = sext i8 %1 to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define void @pushlevel(i32 %tag_transparent) #0 {
entry:
  %tag_transparent.addr = alloca i32, align 4
  %newlevel = alloca %struct.binding_level*, align 8
  store i32 %tag_transparent, i32* %tag_transparent.addr, align 4
  store %struct.binding_level* null, %struct.binding_level** %newlevel, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %tobool = icmp ne %struct.binding_level* %2, null
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %3 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  store %struct.binding_level* %3, %struct.binding_level** %newlevel, align 8
  %4 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %4, i32 0, i32 5
  %5 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %5, %struct.binding_level** @free_binding_level, align 8
  br label %if.end.2

if.else:                                          ; preds = %if.end
  %call = call %struct.binding_level* @make_binding_level()
  store %struct.binding_level* %call, %struct.binding_level** %newlevel, align 8
  br label %if.end.2

if.end.2:                                         ; preds = %if.else, %if.then.1
  %6 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %7 = bitcast %struct.binding_level* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast (%struct.binding_level* @clear_binding_level to i8*), i64 72, i32 8, i1 false)
  %8 = load i32, i32* %tag_transparent.addr, align 4
  %tobool3 = icmp ne i32 %8, 0
  br i1 %tobool3, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.2
  %9 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tobool4 = icmp ne %struct.binding_level* %9, null
  br i1 %tobool4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.rhs
  %10 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %subblocks_tag_transparent = getelementptr inbounds %struct.binding_level, %struct.binding_level* %10, i32 0, i32 8
  %11 = load i8, i8* %subblocks_tag_transparent, align 1
  %conv = sext i8 %11 to i32
  br label %cond.end

cond.false:                                       ; preds = %lor.rhs
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ]
  %tobool5 = icmp ne i32 %cond, 0
  br label %lor.end

lor.end:                                          ; preds = %cond.end, %if.end.2
  %12 = phi i1 [ true, %if.end.2 ], [ %tobool5, %cond.end ]
  %lor.ext = zext i1 %12 to i32
  %conv6 = trunc i32 %lor.ext to i8
  %13 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %tag_transparent7 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %13, i32 0, i32 7
  store i8 %conv6, i8* %tag_transparent7, align 1
  %14 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %15 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %level_chain8 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %15, i32 0, i32 5
  store %struct.binding_level* %14, %struct.binding_level** %level_chain8, align 8
  %16 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  store %struct.binding_level* %16, %struct.binding_level** @current_binding_level, align 8
  %17 = load i32, i32* @keep_next_level_flag, align 4
  %conv9 = trunc i32 %17 to i8
  %18 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %keep = getelementptr inbounds %struct.binding_level, %struct.binding_level* %18, i32 0, i32 9
  store i8 %conv9, i8* %keep, align 1
  store i32 0, i32* @keep_next_level_flag, align 4
  %19 = load i32, i32* @keep_next_if_subblocks, align 4
  %conv10 = trunc i32 %19 to i8
  %20 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %20, i32 0, i32 10
  store i8 %conv10, i8* %keep_if_subblocks, align 1
  store i32 0, i32* @keep_next_if_subblocks, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.binding_level* @make_binding_level() #0 {
entry:
  %call = call noalias i8* @xmalloc(i64 72)
  %0 = bitcast i8* %call to %struct.binding_level*
  ret %struct.binding_level* %0
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define %union.tree_node* @poplevel(i32 %keep, i32 %reverse, i32 %functionbody) #0 {
entry:
  %keep.addr = alloca i32, align 4
  %reverse.addr = alloca i32, align 4
  %functionbody.addr = alloca i32, align 4
  %link = alloca %union.tree_node*, align 8
  %decls = alloca %union.tree_node*, align 8
  %tags = alloca %union.tree_node*, align 8
  %subblocks = alloca %union.tree_node*, align 8
  %block = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %block_previously_created = alloca i32, align 4
  %label = alloca %union.tree_node*, align 8
  %level = alloca %struct.binding_level*, align 8
  store i32 %keep, i32* %keep.addr, align 4
  store i32 %reverse, i32* %reverse.addr, align 4
  store i32 %functionbody, i32* %functionbody.addr, align 4
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tags1 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %tags1, align 8
  store %union.tree_node* %1, %union.tree_node** %tags, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 3
  %3 = load %union.tree_node*, %union.tree_node** %blocks, align 8
  store %union.tree_node* %3, %union.tree_node** %subblocks, align 8
  store %union.tree_node* null, %union.tree_node** %block, align 8
  %4 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %keep2 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %4, i32 0, i32 9
  %5 = load i8, i8* %keep2, align 1
  %conv = sext i8 %5 to i32
  %6 = load i32, i32* %keep.addr, align 4
  %or = or i32 %6, %conv
  store i32 %or, i32* %keep.addr, align 4
  %7 = load i32, i32* %reverse.addr, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %8, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %names, align 8
  %call = call %union.tree_node* @nreverse(%union.tree_node* %9)
  store %union.tree_node* %call, %union.tree_node** %decls, align 8
  %10 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names3 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %10, i32 0, i32 0
  store %union.tree_node* %call, %union.tree_node** %names3, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names4 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %11, i32 0, i32 0
  %12 = load %union.tree_node*, %union.tree_node** %names4, align 8
  store %union.tree_node* %12, %union.tree_node** %decls, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %union.tree_node*, %union.tree_node** %decls, align 8
  store %union.tree_node* %13, %union.tree_node** %decl, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool5 = icmp ne %union.tree_node* %14, null
  br i1 %tobool5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true, label %if.end.38

land.lhs.true:                                    ; preds = %for.body
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common7 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load8 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr = lshr i32 %bf.load8, 14
  %bf.clear9 = and i32 %bf.lshr, 1
  %tobool10 = icmp ne i32 %bf.clear9, 0
  br i1 %tobool10, label %if.end.38, label %land.lhs.true.11

land.lhs.true.11:                                 ; preds = %land.lhs.true
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl12 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl12, i32 0, i32 12
  %18 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp13 = icmp ne %union.tree_node* %18, null
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.38

land.lhs.true.15:                                 ; preds = %land.lhs.true.11
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common16 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common16, i32 0, i32 2
  %bf.load17 = load i32, i32* %addressable_flag, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 10
  %bf.clear19 = and i32 %bf.lshr18, 1
  %tobool20 = icmp ne i32 %bf.clear19, 0
  br i1 %tobool20, label %if.then.21, label %if.end.38

if.then.21:                                       ; preds = %land.lhs.true.15
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl22 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %abstract_origin = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl22, i32 0, i32 13
  %21 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8
  %cmp23 = icmp ne %union.tree_node* %21, null
  br i1 %cmp23, label %land.lhs.true.25, label %if.end.37

land.lhs.true.25:                                 ; preds = %if.then.21
  %22 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl26 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %abstract_origin27 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl26, i32 0, i32 13
  %23 = load %union.tree_node*, %union.tree_node** %abstract_origin27, align 8
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %cmp28 = icmp ne %union.tree_node* %23, %24
  br i1 %cmp28, label %if.then.30, label %if.end.37

if.then.30:                                       ; preds = %land.lhs.true.25
  %25 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl31 = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %abstract_origin32 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl31, i32 0, i32 13
  %26 = load %union.tree_node*, %union.tree_node** %abstract_origin32, align 8
  %common33 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %addressable_flag34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %addressable_flag34, align 8
  %bf.clear36 = and i32 %bf.load35, -1025
  %bf.set = or i32 %bf.clear36, 1024
  store i32 %bf.set, i32* %addressable_flag34, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.30, %land.lhs.true.25, %if.then.21
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %land.lhs.true.15, %land.lhs.true.11, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.38
  %27 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common39 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 0
  %28 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %28, %union.tree_node** %decl, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call40 = call %union.tree_node* @getdecls()
  call void @warn_about_unused_variables(%union.tree_node* %call40)
  store %union.tree_node* null, %union.tree_node** %block, align 8
  %29 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %this_block = getelementptr inbounds %struct.binding_level, %struct.binding_level* %29, i32 0, i32 4
  %30 = load %union.tree_node*, %union.tree_node** %this_block, align 8
  %cmp41 = icmp ne %union.tree_node* %30, null
  %conv42 = zext i1 %cmp41 to i32
  store i32 %conv42, i32* %block_previously_created, align 4
  %31 = load i32, i32* %block_previously_created, align 4
  %tobool43 = icmp ne i32 %31, 0
  br i1 %tobool43, label %if.then.44, label %if.else.46

if.then.44:                                       ; preds = %for.end
  %32 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %this_block45 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %32, i32 0, i32 4
  %33 = load %union.tree_node*, %union.tree_node** %this_block45, align 8
  store %union.tree_node* %33, %union.tree_node** %block, align 8
  br label %if.end.58

if.else.46:                                       ; preds = %for.end
  %34 = load i32, i32* %keep.addr, align 4
  %tobool47 = icmp ne i32 %34, 0
  br i1 %tobool47, label %if.then.55, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.46
  %35 = load i32, i32* %functionbody.addr, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.then.55, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %lor.lhs.false
  %36 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %36, i32 0, i32 10
  %37 = load i8, i8* %keep_if_subblocks, align 1
  %conv50 = sext i8 %37 to i32
  %tobool51 = icmp ne i32 %conv50, 0
  br i1 %tobool51, label %land.lhs.true.52, label %if.end.57

land.lhs.true.52:                                 ; preds = %lor.lhs.false.49
  %38 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  %cmp53 = icmp ne %union.tree_node* %38, null
  br i1 %cmp53, label %if.then.55, label %if.end.57

if.then.55:                                       ; preds = %land.lhs.true.52, %lor.lhs.false, %if.else.46
  %call56 = call %union.tree_node* @make_node(i32 4)
  store %union.tree_node* %call56, %union.tree_node** %block, align 8
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.55, %land.lhs.true.52, %lor.lhs.false.49
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.then.44
  %39 = load %union.tree_node*, %union.tree_node** %block, align 8
  %cmp59 = icmp ne %union.tree_node* %39, null
  br i1 %cmp59, label %if.then.61, label %if.end.65

if.then.61:                                       ; preds = %if.end.58
  %40 = load %union.tree_node*, %union.tree_node** %decls, align 8
  %41 = load %union.tree_node*, %union.tree_node** %block, align 8
  %block62 = bitcast %union.tree_node* %41 to %struct.tree_block*
  %vars = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block62, i32 0, i32 2
  store %union.tree_node* %40, %union.tree_node** %vars, align 8
  %42 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  %43 = load %union.tree_node*, %union.tree_node** %block, align 8
  %block63 = bitcast %union.tree_node* %43 to %struct.tree_block*
  %subblocks64 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block63, i32 0, i32 3
  store %union.tree_node* %42, %union.tree_node** %subblocks64, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.61, %if.end.58
  %44 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  store %union.tree_node* %44, %union.tree_node** %link, align 8
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.70, %if.end.65
  %45 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool67 = icmp ne %union.tree_node* %45, null
  br i1 %tobool67, label %for.body.68, label %for.end.73

for.body.68:                                      ; preds = %for.cond.66
  %46 = load %union.tree_node*, %union.tree_node** %block, align 8
  %47 = load %union.tree_node*, %union.tree_node** %link, align 8
  %block69 = bitcast %union.tree_node* %47 to %struct.tree_block*
  %supercontext = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block69, i32 0, i32 4
  store %union.tree_node* %46, %union.tree_node** %supercontext, align 8
  br label %for.inc.70

for.inc.70:                                       ; preds = %for.body.68
  %48 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common71 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %chain72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 0
  %49 = load %union.tree_node*, %union.tree_node** %chain72, align 8
  store %union.tree_node* %49, %union.tree_node** %link, align 8
  br label %for.cond.66

for.end.73:                                       ; preds = %for.cond.66
  %50 = load %union.tree_node*, %union.tree_node** %decls, align 8
  store %union.tree_node* %50, %union.tree_node** %link, align 8
  br label %for.cond.74

for.cond.74:                                      ; preds = %for.inc.123, %for.end.73
  %51 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool75 = icmp ne %union.tree_node* %51, null
  br i1 %tobool75, label %for.body.76, label %for.end.126

for.body.76:                                      ; preds = %for.cond.74
  %52 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl77 = bitcast %union.tree_node* %52 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl77, i32 0, i32 8
  %53 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp78 = icmp ne %union.tree_node* %53, null
  br i1 %cmp78, label %if.then.80, label %if.end.122

if.then.80:                                       ; preds = %for.body.76
  %54 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl81 = bitcast %union.tree_node* %54 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl81, i32 0, i32 5
  %55 = bitcast i48* %external_flag to i64*
  %bf.load82 = load i64, i64* %55, align 8
  %bf.lshr83 = lshr i64 %bf.load82, 8
  %bf.clear84 = and i64 %bf.lshr83, 1
  %bf.cast = trunc i64 %bf.clear84 to i32
  %tobool85 = icmp ne i32 %bf.cast, 0
  br i1 %tobool85, label %if.then.86, label %if.end.119

if.then.86:                                       ; preds = %if.then.80
  %56 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common87 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load88 = load i32, i32* %used_flag, align 8
  %bf.lshr89 = lshr i32 %bf.load88, 16
  %bf.clear90 = and i32 %bf.lshr89, 1
  %tobool91 = icmp ne i32 %bf.clear90, 0
  br i1 %tobool91, label %if.then.92, label %if.end.100

if.then.92:                                       ; preds = %if.then.86
  %57 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl93 = bitcast %union.tree_node* %57 to %struct.tree_decl*
  %name94 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl93, i32 0, i32 8
  %58 = load %union.tree_node*, %union.tree_node** %name94, align 8
  %common95 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %used_flag96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 2
  %bf.load97 = load i32, i32* %used_flag96, align 8
  %bf.clear98 = and i32 %bf.load97, -65537
  %bf.set99 = or i32 %bf.clear98, 65536
  store i32 %bf.set99, i32* %used_flag96, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.92, %if.then.86
  %59 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common101 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %addressable_flag102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 2
  %bf.load103 = load i32, i32* %addressable_flag102, align 8
  %bf.lshr104 = lshr i32 %bf.load103, 10
  %bf.clear105 = and i32 %bf.lshr104, 1
  %tobool106 = icmp ne i32 %bf.clear105, 0
  br i1 %tobool106, label %if.then.107, label %if.end.118

if.then.107:                                      ; preds = %if.end.100
  %60 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl108 = bitcast %union.tree_node* %60 to %struct.tree_decl*
  %assembler_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl108, i32 0, i32 14
  %61 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8
  %cmp109 = icmp ne %union.tree_node* %61, null
  br i1 %cmp109, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.107
  br label %cond.end

cond.false:                                       ; preds = %if.then.107
  %62 = load void (%union.tree_node*)*, void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8
  %63 = load %union.tree_node*, %union.tree_node** %link, align 8
  call void %62(%union.tree_node* %63)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %64 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl111 = bitcast %union.tree_node* %64 to %struct.tree_decl*
  %assembler_name112 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl111, i32 0, i32 14
  %65 = load %union.tree_node*, %union.tree_node** %assembler_name112, align 8
  %common113 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %addressable_flag114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 2
  %bf.load115 = load i32, i32* %addressable_flag114, align 8
  %bf.clear116 = and i32 %bf.load115, -1025
  %bf.set117 = or i32 %bf.clear116, 1024
  store i32 %bf.set117, i32* %addressable_flag114, align 8
  br label %if.end.118

if.end.118:                                       ; preds = %cond.end, %if.end.100
  br label %if.end.119

if.end.119:                                       ; preds = %if.end.118, %if.then.80
  %66 = load %union.tree_node*, %union.tree_node** %link, align 8
  %decl120 = bitcast %union.tree_node* %66 to %struct.tree_decl*
  %name121 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl120, i32 0, i32 8
  %67 = load %union.tree_node*, %union.tree_node** %name121, align 8
  %68 = bitcast %union.tree_node* %67 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %68, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %local_value, align 8
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.119, %for.body.76
  br label %for.inc.123

for.inc.123:                                      ; preds = %if.end.122
  %69 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common124 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %chain125 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 0
  %70 = load %union.tree_node*, %union.tree_node** %chain125, align 8
  store %union.tree_node* %70, %union.tree_node** %link, align 8
  br label %for.cond.74

for.end.126:                                      ; preds = %for.cond.74
  %71 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %71, i32 0, i32 2
  %72 = load %union.tree_node*, %union.tree_node** %shadowed, align 8
  store %union.tree_node* %72, %union.tree_node** %link, align 8
  br label %for.cond.127

for.cond.127:                                     ; preds = %for.inc.132, %for.end.126
  %73 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool128 = icmp ne %union.tree_node* %73, null
  br i1 %tobool128, label %for.body.129, label %for.end.135

for.body.129:                                     ; preds = %for.cond.127
  %74 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list = bitcast %union.tree_node* %74 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %75 = load %union.tree_node*, %union.tree_node** %value, align 8
  %76 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list130 = bitcast %union.tree_node* %76 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list130, i32 0, i32 1
  %77 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %78 = bitcast %union.tree_node* %77 to %struct.lang_identifier*
  %local_value131 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %78, i32 0, i32 2
  store %union.tree_node* %75, %union.tree_node** %local_value131, align 8
  br label %for.inc.132

for.inc.132:                                      ; preds = %for.body.129
  %79 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common133 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %chain134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common133, i32 0, i32 0
  %80 = load %union.tree_node*, %union.tree_node** %chain134, align 8
  store %union.tree_node* %80, %union.tree_node** %link, align 8
  br label %for.cond.127

for.end.135:                                      ; preds = %for.cond.127
  %81 = load i32, i32* %functionbody.addr, align 4
  %tobool136 = icmp ne i32 %81, 0
  br i1 %tobool136, label %if.then.137, label %if.end.177

if.then.137:                                      ; preds = %for.end.135
  %82 = load %union.tree_node*, %union.tree_node** %block, align 8
  call void @clear_limbo_values(%union.tree_node* %82)
  %83 = load %union.tree_node*, %union.tree_node** %block, align 8
  %block138 = bitcast %union.tree_node* %83 to %struct.tree_block*
  %vars139 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block138, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %vars139, align 8
  %84 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  store %union.tree_node* %84, %union.tree_node** %link, align 8
  br label %for.cond.140

for.cond.140:                                     ; preds = %for.inc.173, %if.then.137
  %85 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool141 = icmp ne %union.tree_node* %85, null
  br i1 %tobool141, label %for.body.142, label %for.end.176

for.body.142:                                     ; preds = %for.cond.140
  %86 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list143 = bitcast %union.tree_node* %86 to %struct.tree_list*
  %value144 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list143, i32 0, i32 2
  %87 = load %union.tree_node*, %union.tree_node** %value144, align 8
  store %union.tree_node* %87, %union.tree_node** %label, align 8
  %88 = load %union.tree_node*, %union.tree_node** %label, align 8
  %decl145 = bitcast %union.tree_node* %88 to %struct.tree_decl*
  %initial146 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl145, i32 0, i32 12
  %89 = load %union.tree_node*, %union.tree_node** %initial146, align 8
  %cmp147 = icmp eq %union.tree_node* %89, null
  br i1 %cmp147, label %if.then.149, label %if.else.153

if.then.149:                                      ; preds = %for.body.142
  %90 = load %union.tree_node*, %union.tree_node** %label, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %90, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.134, i32 0, i32 0))
  %91 = load i8*, i8** @input_filename, align 8
  %92 = load i32, i32* @lineno, align 4
  %93 = load %union.tree_node*, %union.tree_node** %label, align 8
  %decl150 = bitcast %union.tree_node* %93 to %struct.tree_decl*
  %name151 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl150, i32 0, i32 8
  %94 = load %union.tree_node*, %union.tree_node** %name151, align 8
  %call152 = call %union.tree_node* @define_label(i8* %91, i32 %92, %union.tree_node* %94)
  br label %if.end.164

if.else.153:                                      ; preds = %for.body.142
  %95 = load i32, i32* @warn_unused_label, align 4
  %tobool154 = icmp ne i32 %95, 0
  br i1 %tobool154, label %land.lhs.true.155, label %if.end.163

land.lhs.true.155:                                ; preds = %if.else.153
  %96 = load %union.tree_node*, %union.tree_node** %label, align 8
  %common156 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %used_flag157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 2
  %bf.load158 = load i32, i32* %used_flag157, align 8
  %bf.lshr159 = lshr i32 %bf.load158, 16
  %bf.clear160 = and i32 %bf.lshr159, 1
  %tobool161 = icmp ne i32 %bf.clear160, 0
  br i1 %tobool161, label %if.end.163, label %if.then.162

if.then.162:                                      ; preds = %land.lhs.true.155
  %97 = load %union.tree_node*, %union.tree_node** %label, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %97, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.135, i32 0, i32 0))
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.162, %land.lhs.true.155, %if.else.153
  br label %if.end.164

if.end.164:                                       ; preds = %if.end.163, %if.then.149
  %98 = load %union.tree_node*, %union.tree_node** %label, align 8
  %decl165 = bitcast %union.tree_node* %98 to %struct.tree_decl*
  %name166 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl165, i32 0, i32 8
  %99 = load %union.tree_node*, %union.tree_node** %name166, align 8
  %100 = bitcast %union.tree_node* %99 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %100, i32 0, i32 3
  store %union.tree_node* null, %union.tree_node** %label_value, align 8
  %101 = load %union.tree_node*, %union.tree_node** %block, align 8
  %block167 = bitcast %union.tree_node* %101 to %struct.tree_block*
  %vars168 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block167, i32 0, i32 2
  %102 = load %union.tree_node*, %union.tree_node** %vars168, align 8
  %103 = load %union.tree_node*, %union.tree_node** %label, align 8
  %common169 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %chain170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common169, i32 0, i32 0
  store %union.tree_node* %102, %union.tree_node** %chain170, align 8
  %104 = load %union.tree_node*, %union.tree_node** %label, align 8
  %105 = load %union.tree_node*, %union.tree_node** %block, align 8
  %block171 = bitcast %union.tree_node* %105 to %struct.tree_block*
  %vars172 = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block171, i32 0, i32 2
  store %union.tree_node* %104, %union.tree_node** %vars172, align 8
  br label %for.inc.173

for.inc.173:                                      ; preds = %if.end.164
  %106 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common174 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %chain175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 0
  %107 = load %union.tree_node*, %union.tree_node** %chain175, align 8
  store %union.tree_node* %107, %union.tree_node** %link, align 8
  br label %for.cond.140

for.end.176:                                      ; preds = %for.cond.140
  br label %if.end.177

if.end.177:                                       ; preds = %for.end.176, %for.end.135
  %108 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %108, %struct.binding_level** %level, align 8
  %109 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %109, i32 0, i32 5
  %110 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %110, %struct.binding_level** @current_binding_level, align 8
  %111 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %112 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %level_chain178 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %112, i32 0, i32 5
  store %struct.binding_level* %111, %struct.binding_level** %level_chain178, align 8
  %113 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  store %struct.binding_level* %113, %struct.binding_level** @free_binding_level, align 8
  %114 = load i32, i32* %functionbody.addr, align 4
  %tobool179 = icmp ne i32 %114, 0
  br i1 %tobool179, label %if.then.180, label %if.else.183

if.then.180:                                      ; preds = %if.end.177
  %115 = load %union.tree_node*, %union.tree_node** %block, align 8
  %116 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl181 = bitcast %union.tree_node* %116 to %struct.tree_decl*
  %initial182 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl181, i32 0, i32 12
  store %union.tree_node* %115, %union.tree_node** %initial182, align 8
  br label %if.end.200

if.else.183:                                      ; preds = %if.end.177
  %117 = load %union.tree_node*, %union.tree_node** %block, align 8
  %tobool184 = icmp ne %union.tree_node* %117, null
  br i1 %tobool184, label %if.then.185, label %if.else.192

if.then.185:                                      ; preds = %if.else.183
  %118 = load i32, i32* %block_previously_created, align 4
  %tobool186 = icmp ne i32 %118, 0
  br i1 %tobool186, label %if.end.191, label %if.then.187

if.then.187:                                      ; preds = %if.then.185
  %119 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks188 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %119, i32 0, i32 3
  %120 = load %union.tree_node*, %union.tree_node** %blocks188, align 8
  %121 = load %union.tree_node*, %union.tree_node** %block, align 8
  %call189 = call %union.tree_node* @chainon(%union.tree_node* %120, %union.tree_node* %121)
  %122 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks190 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %122, i32 0, i32 3
  store %union.tree_node* %call189, %union.tree_node** %blocks190, align 8
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.187, %if.then.185
  br label %if.end.199

if.else.192:                                      ; preds = %if.else.183
  %123 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  %tobool193 = icmp ne %union.tree_node* %123, null
  br i1 %tobool193, label %if.then.194, label %if.end.198

if.then.194:                                      ; preds = %if.else.192
  %124 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks195 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %124, i32 0, i32 3
  %125 = load %union.tree_node*, %union.tree_node** %blocks195, align 8
  %126 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  %call196 = call %union.tree_node* @chainon(%union.tree_node* %125, %union.tree_node* %126)
  %127 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks197 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %127, i32 0, i32 3
  store %union.tree_node* %call196, %union.tree_node** %blocks197, align 8
  br label %if.end.198

if.end.198:                                       ; preds = %if.then.194, %if.else.192
  br label %if.end.199

if.end.199:                                       ; preds = %if.end.198, %if.end.191
  br label %if.end.200

if.end.200:                                       ; preds = %if.end.199, %if.then.180
  %128 = load i32, i32* %functionbody.addr, align 4
  %tobool201 = icmp ne i32 %128, 0
  br i1 %tobool201, label %if.then.202, label %if.else.212

if.then.202:                                      ; preds = %if.end.200
  %129 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %129, %union.tree_node** %link, align 8
  br label %for.cond.203

for.cond.203:                                     ; preds = %for.inc.208, %if.then.202
  %130 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool204 = icmp ne %union.tree_node* %130, null
  br i1 %tobool204, label %for.body.205, label %for.end.211

for.body.205:                                     ; preds = %for.cond.203
  %131 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %132 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list206 = bitcast %union.tree_node* %132 to %struct.tree_list*
  %value207 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list206, i32 0, i32 2
  %133 = load %union.tree_node*, %union.tree_node** %value207, align 8
  %type = bitcast %union.tree_node* %133 to %struct.tree_type*
  %context = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 17
  store %union.tree_node* %131, %union.tree_node** %context, align 8
  br label %for.inc.208

for.inc.208:                                      ; preds = %for.body.205
  %134 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common209 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %chain210 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common209, i32 0, i32 0
  %135 = load %union.tree_node*, %union.tree_node** %chain210, align 8
  store %union.tree_node* %135, %union.tree_node** %link, align 8
  br label %for.cond.203

for.end.211:                                      ; preds = %for.cond.203
  br label %if.end.227

if.else.212:                                      ; preds = %if.end.200
  %136 = load %union.tree_node*, %union.tree_node** %block, align 8
  %tobool213 = icmp ne %union.tree_node* %136, null
  br i1 %tobool213, label %if.then.214, label %if.end.226

if.then.214:                                      ; preds = %if.else.212
  %137 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %137, %union.tree_node** %link, align 8
  br label %for.cond.215

for.cond.215:                                     ; preds = %for.inc.222, %if.then.214
  %138 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool216 = icmp ne %union.tree_node* %138, null
  br i1 %tobool216, label %for.body.217, label %for.end.225

for.body.217:                                     ; preds = %for.cond.215
  %139 = load %union.tree_node*, %union.tree_node** %block, align 8
  %140 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list218 = bitcast %union.tree_node* %140 to %struct.tree_list*
  %value219 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list218, i32 0, i32 2
  %141 = load %union.tree_node*, %union.tree_node** %value219, align 8
  %type220 = bitcast %union.tree_node* %141 to %struct.tree_type*
  %context221 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type220, i32 0, i32 17
  store %union.tree_node* %139, %union.tree_node** %context221, align 8
  br label %for.inc.222

for.inc.222:                                      ; preds = %for.body.217
  %142 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common223 = bitcast %union.tree_node* %142 to %struct.tree_common*
  %chain224 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common223, i32 0, i32 0
  %143 = load %union.tree_node*, %union.tree_node** %chain224, align 8
  store %union.tree_node* %143, %union.tree_node** %link, align 8
  br label %for.cond.215

for.end.225:                                      ; preds = %for.cond.215
  br label %if.end.226

if.end.226:                                       ; preds = %for.end.225, %if.else.212
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %for.end.211
  %144 = load %union.tree_node*, %union.tree_node** %block, align 8
  %tobool228 = icmp ne %union.tree_node* %144, null
  br i1 %tobool228, label %if.then.229, label %if.end.235

if.then.229:                                      ; preds = %if.end.227
  %145 = load %union.tree_node*, %union.tree_node** %block, align 8
  %common230 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %used_flag231 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common230, i32 0, i32 2
  %bf.load232 = load i32, i32* %used_flag231, align 8
  %bf.clear233 = and i32 %bf.load232, -65537
  %bf.set234 = or i32 %bf.clear233, 65536
  store i32 %bf.set234, i32* %used_flag231, align 8
  br label %if.end.235

if.end.235:                                       ; preds = %if.then.229, %if.end.227
  %146 = load %union.tree_node*, %union.tree_node** %block, align 8
  ret %union.tree_node* %146
}

declare %union.tree_node* @nreverse(%union.tree_node*) #1

declare void @warn_about_unused_variables(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @getdecls() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 0
  %1 = load %union.tree_node*, %union.tree_node** %names, align 8
  ret %union.tree_node* %1
}

declare %union.tree_node* @make_node(i32) #1

; Function Attrs: nounwind uwtable
define internal void @clear_limbo_values(%union.tree_node* %block) #0 {
entry:
  %block.addr = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  store %union.tree_node* %block, %union.tree_node** %block.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %block1 = bitcast %union.tree_node* %0 to %struct.tree_block*
  %vars = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block1, i32 0, i32 2
  %1 = load %union.tree_node*, %union.tree_node** %vars, align 8
  store %union.tree_node* %1, %union.tree_node** %tem, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %decl = bitcast %union.tree_node* %3 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %4 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp = icmp ne %union.tree_node* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %decl2 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %name3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 8
  %6 = load %union.tree_node*, %union.tree_node** %name3, align 8
  %7 = bitcast %union.tree_node* %6 to %struct.lang_identifier*
  %limbo_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %7, i32 0, i32 6
  store %union.tree_node* null, %union.tree_node** %limbo_value, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %9, %union.tree_node** %tem, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %block4 = bitcast %union.tree_node* %10 to %struct.tree_block*
  %subblocks = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block4, i32 0, i32 3
  %11 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  store %union.tree_node* %11, %union.tree_node** %tem, align 8
  br label %for.cond.5

for.cond.5:                                       ; preds = %for.inc.8, %for.end
  %12 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %tobool6 = icmp ne %union.tree_node* %12, null
  br i1 %tobool6, label %for.body.7, label %for.end.11

for.body.7:                                       ; preds = %for.cond.5
  %13 = load %union.tree_node*, %union.tree_node** %tem, align 8
  call void @clear_limbo_values(%union.tree_node* %13)
  br label %for.inc.8

for.inc.8:                                        ; preds = %for.body.7
  %14 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common9 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %chain10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %chain10, align 8
  store %union.tree_node* %15, %union.tree_node** %tem, align 8
  br label %for.cond.5

for.end.11:                                       ; preds = %for.cond.5
  ret void
}

declare void @error_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @define_label(i8* %filename, i32 %line, %union.tree_node* %name) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %filename.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %name.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %line, i32* %line.addr, align 4
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %call = call %union.tree_node* @lookup_label(%union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %cmp = icmp ne %union.tree_node* %1, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl1 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 9
  %3 = load %union.tree_node*, %union.tree_node** %context, align 8
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp2 = icmp ne %union.tree_node* %3, %4
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %6 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  %call3 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %5, %union.tree_node* %6)
  store %union.tree_node* %call3, %union.tree_node** @shadowed_labels, align 8
  %7 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %8 = bitcast %union.tree_node* %7 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %8, i32 0, i32 3
  store %union.tree_node* null, %union.tree_node** %label_value, align 8
  %9 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %call4 = call %union.tree_node* @lookup_label(%union.tree_node* %9)
  store %union.tree_node* %call4, %union.tree_node** %decl, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i32, i32* @warn_traditional, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %land.lhs.true.5, label %if.end.11

land.lhs.true.5:                                  ; preds = %if.end
  %11 = load i32, i32* @in_system_header, align 4
  %tobool6 = icmp ne i32 %11, 0
  br i1 %tobool6, label %if.end.11, label %land.lhs.true.7

land.lhs.true.7:                                  ; preds = %land.lhs.true.5
  %12 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %call8 = call %union.tree_node* @lookup_name(%union.tree_node* %12)
  %tobool9 = icmp ne %union.tree_node* %call8, null
  br i1 %tobool9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %land.lhs.true.7
  %13 = load i8*, i8** %filename.addr, align 8
  %14 = load i32, i32* %line.addr, align 4
  %15 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %16 = load i8*, i8** %str, align 8
  call void (i8*, i32, i8*, ...) @warning_with_file_and_line(i8* %13, i32 %14, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.153, i32 0, i32 0), i8* %16)
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %land.lhs.true.7, %land.lhs.true.5, %if.end
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl12 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl12, i32 0, i32 12
  %18 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp13 = icmp ne %union.tree_node* %18, null
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %if.end.11
  %19 = load i8*, i8** %filename.addr, align 8
  %20 = load i32, i32* %line.addr, align 4
  %21 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier15 = bitcast %union.tree_node* %21 to %struct.tree_identifier*
  %id16 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier15, i32 0, i32 1
  %str17 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id16, i32 0, i32 1
  %22 = load i8*, i8** %str17, align 8
  call void (i8*, i32, i8*, ...) @error_with_file_and_line(i8* %19, i32 %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i32 0, i32 0), i8* %22)
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %if.end.11
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl18 = bitcast %union.tree_node* %24 to %struct.tree_decl*
  %initial19 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl18, i32 0, i32 12
  store %union.tree_node* %23, %union.tree_node** %initial19, align 8
  %25 = load i8*, i8** %filename.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl20 = bitcast %union.tree_node* %26 to %struct.tree_decl*
  %filename21 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl20, i32 0, i32 1
  store i8* %25, i8** %filename21, align 8
  %27 = load i32, i32* %line.addr, align 4
  %28 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl22 = bitcast %union.tree_node* %28 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl22, i32 0, i32 2
  store i32 %27, i32* %linenum, align 4
  %29 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %29, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.14
  %30 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %30
}

declare %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @insert_block(%union.tree_node* %block) #0 {
entry:
  %block.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %block, %union.tree_node** %block.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %used_flag, align 8
  %bf.clear = and i32 %bf.load, -65537
  %bf.set = or i32 %bf.clear, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %1, i32 0, i32 3
  %2 = load %union.tree_node*, %union.tree_node** %blocks, align 8
  %3 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %call = call %union.tree_node* @chainon(%union.tree_node* %2, %union.tree_node* %3)
  %4 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks1 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %4, i32 0, i32 3
  store %union.tree_node* %call, %union.tree_node** %blocks1, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_block(%union.tree_node* %block) #0 {
entry:
  %block.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %block, %union.tree_node** %block.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %this_block = getelementptr inbounds %struct.binding_level, %struct.binding_level* %1, i32 0, i32 4
  store %union.tree_node* %0, %union.tree_node** %this_block, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 0
  %3 = load %union.tree_node*, %union.tree_node** %names, align 8
  %4 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %block1 = bitcast %union.tree_node* %4 to %struct.tree_block*
  %vars = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block1, i32 0, i32 2
  %5 = load %union.tree_node*, %union.tree_node** %vars, align 8
  %call = call %union.tree_node* @chainon(%union.tree_node* %3, %union.tree_node* %5)
  %6 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names2 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %6, i32 0, i32 0
  store %union.tree_node* %call, %union.tree_node** %names2, align 8
  %7 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %7, i32 0, i32 3
  %8 = load %union.tree_node*, %union.tree_node** %blocks, align 8
  %9 = load %union.tree_node*, %union.tree_node** %block.addr, align 8
  %block3 = bitcast %union.tree_node* %9 to %struct.tree_block*
  %subblocks = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block3, i32 0, i32 3
  %10 = load %union.tree_node*, %union.tree_node** %subblocks, align 8
  %call4 = call %union.tree_node* @chainon(%union.tree_node* %8, %union.tree_node* %10)
  %11 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %blocks5 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %11, i32 0, i32 3
  store %union.tree_node* %call4, %union.tree_node** %blocks5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_label_level() #0 {
entry:
  %newlevel = alloca %struct.binding_level*, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %tobool = icmp ne %struct.binding_level* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  store %struct.binding_level* %1, %struct.binding_level** %newlevel, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 5
  %3 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %3, %struct.binding_level** @free_binding_level, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call %struct.binding_level* @make_binding_level()
  store %struct.binding_level* %call, %struct.binding_level** %newlevel, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.binding_level*, %struct.binding_level** @label_level_chain, align 8
  %5 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %level_chain1 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %5, i32 0, i32 5
  store %struct.binding_level* %4, %struct.binding_level** %level_chain1, align 8
  %6 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  store %struct.binding_level* %6, %struct.binding_level** @label_level_chain, align 8
  %7 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  %8 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %8, i32 0, i32 0
  store %union.tree_node* %7, %union.tree_node** %names, align 8
  %9 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  %10 = load %struct.binding_level*, %struct.binding_level** %newlevel, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %10, i32 0, i32 2
  store %union.tree_node* %9, %union.tree_node** %shadowed, align 8
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8
  store %union.tree_node* null, %union.tree_node** @shadowed_labels, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @pop_label_level() #0 {
entry:
  %level = alloca %struct.binding_level*, align 8
  %link = alloca %union.tree_node*, align 8
  %prev = alloca %union.tree_node*, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @label_level_chain, align 8
  store %struct.binding_level* %0, %struct.binding_level** %level, align 8
  %1 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  store %union.tree_node* %1, %union.tree_node** %link, align 8
  store %union.tree_node* null, %union.tree_node** %prev, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.36, %entry
  %2 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list = bitcast %union.tree_node* %3 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %lang_flag_1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %lang_flag_1, align 8
  %bf.lshr = lshr i32 %bf.load, 25
  %bf.clear = and i32 %bf.lshr, 1
  %tobool1 = icmp ne i32 %bf.clear, 0
  br i1 %tobool1, label %if.then, label %if.else.33

if.then:                                          ; preds = %for.body
  %5 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list2 = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value3 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %value3, align 8
  %decl = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 2
  %7 = load i32, i32* %linenum, align 4
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list5 = bitcast %union.tree_node* %8 to %struct.tree_list*
  %value6 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list5, i32 0, i32 2
  %9 = load %union.tree_node*, %union.tree_node** %value6, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.134, i32 0, i32 0))
  %10 = load i8*, i8** @input_filename, align 8
  %11 = load i32, i32* @lineno, align 4
  %12 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list7 = bitcast %union.tree_node* %12 to %struct.tree_list*
  %value8 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list7, i32 0, i32 2
  %13 = load %union.tree_node*, %union.tree_node** %value8, align 8
  %decl9 = bitcast %union.tree_node* %13 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl9, i32 0, i32 8
  %14 = load %union.tree_node*, %union.tree_node** %name, align 8
  %call = call %union.tree_node* @define_label(i8* %10, i32 %11, %union.tree_node* %14)
  br label %if.end.21

if.else:                                          ; preds = %if.then
  %15 = load i32, i32* @warn_unused_label, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %16 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list11 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %value12 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list11, i32 0, i32 2
  %17 = load %union.tree_node*, %union.tree_node** %value12, align 8
  %common13 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load14 = load i32, i32* %used_flag, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 1
  %tobool17 = icmp ne i32 %bf.clear16, 0
  br i1 %tobool17, label %if.end, label %if.then.18

if.then.18:                                       ; preds = %land.lhs.true
  %18 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list19 = bitcast %union.tree_node* %18 to %struct.tree_list*
  %value20 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list19, i32 0, i32 2
  %19 = load %union.tree_node*, %union.tree_node** %value20, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.135, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.18, %land.lhs.true, %if.else
  br label %if.end.21

if.end.21:                                        ; preds = %if.end, %if.then.4
  %20 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list22 = bitcast %union.tree_node* %20 to %struct.tree_list*
  %value23 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list22, i32 0, i32 2
  %21 = load %union.tree_node*, %union.tree_node** %value23, align 8
  %decl24 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %name25 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl24, i32 0, i32 8
  %22 = load %union.tree_node*, %union.tree_node** %name25, align 8
  %23 = bitcast %union.tree_node* %22 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %23, i32 0, i32 3
  store %union.tree_node* null, %union.tree_node** %label_value, align 8
  %24 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common26 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 0
  %25 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %25, %union.tree_node** %link, align 8
  %26 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %tobool27 = icmp ne %union.tree_node* %26, null
  br i1 %tobool27, label %if.then.28, label %if.else.31

if.then.28:                                       ; preds = %if.end.21
  %27 = load %union.tree_node*, %union.tree_node** %link, align 8
  %28 = load %union.tree_node*, %union.tree_node** %prev, align 8
  %common29 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %chain30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 0
  store %union.tree_node* %27, %union.tree_node** %chain30, align 8
  br label %if.end.32

if.else.31:                                       ; preds = %if.end.21
  %29 = load %union.tree_node*, %union.tree_node** %link, align 8
  store %union.tree_node* %29, %union.tree_node** @named_labels, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.31, %if.then.28
  br label %if.end.36

if.else.33:                                       ; preds = %for.body
  %30 = load %union.tree_node*, %union.tree_node** %link, align 8
  store %union.tree_node* %30, %union.tree_node** %prev, align 8
  %31 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common34 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %chain35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 0
  %32 = load %union.tree_node*, %union.tree_node** %chain35, align 8
  store %union.tree_node* %32, %union.tree_node** %link, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.end.32
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  store %union.tree_node* %33, %union.tree_node** %link, align 8
  br label %for.cond.37

for.cond.37:                                      ; preds = %for.inc, %for.end
  %34 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool38 = icmp ne %union.tree_node* %34, null
  br i1 %tobool38, label %for.body.39, label %for.end.56

for.body.39:                                      ; preds = %for.cond.37
  %35 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list40 = bitcast %union.tree_node* %35 to %struct.tree_list*
  %value41 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list40, i32 0, i32 2
  %36 = load %union.tree_node*, %union.tree_node** %value41, align 8
  %decl42 = bitcast %union.tree_node* %36 to %struct.tree_decl*
  %name43 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl42, i32 0, i32 8
  %37 = load %union.tree_node*, %union.tree_node** %name43, align 8
  %cmp44 = icmp ne %union.tree_node* %37, null
  br i1 %cmp44, label %if.then.45, label %if.end.53

if.then.45:                                       ; preds = %for.body.39
  %38 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list46 = bitcast %union.tree_node* %38 to %struct.tree_list*
  %value47 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list46, i32 0, i32 2
  %39 = load %union.tree_node*, %union.tree_node** %value47, align 8
  %40 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list48 = bitcast %union.tree_node* %40 to %struct.tree_list*
  %value49 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list48, i32 0, i32 2
  %41 = load %union.tree_node*, %union.tree_node** %value49, align 8
  %decl50 = bitcast %union.tree_node* %41 to %struct.tree_decl*
  %name51 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl50, i32 0, i32 8
  %42 = load %union.tree_node*, %union.tree_node** %name51, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.lang_identifier*
  %label_value52 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %43, i32 0, i32 3
  store %union.tree_node* %39, %union.tree_node** %label_value52, align 8
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.45, %for.body.39
  br label %for.inc

for.inc:                                          ; preds = %if.end.53
  %44 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common54 = bitcast %union.tree_node* %44 to %struct.tree_common*
  %chain55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 0
  %45 = load %union.tree_node*, %union.tree_node** %chain55, align 8
  store %union.tree_node* %45, %union.tree_node** %link, align 8
  br label %for.cond.37

for.end.56:                                       ; preds = %for.cond.37
  %46 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  %47 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %47, i32 0, i32 0
  %48 = load %union.tree_node*, %union.tree_node** %names, align 8
  %call57 = call %union.tree_node* @chainon(%union.tree_node* %46, %union.tree_node* %48)
  store %union.tree_node* %call57, %union.tree_node** @named_labels, align 8
  %49 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %49, i32 0, i32 2
  %50 = load %union.tree_node*, %union.tree_node** %shadowed, align 8
  store %union.tree_node* %50, %union.tree_node** @shadowed_labels, align 8
  %51 = load %struct.binding_level*, %struct.binding_level** @label_level_chain, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %51, i32 0, i32 5
  %52 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %52, %struct.binding_level** @label_level_chain, align 8
  %53 = load %struct.binding_level*, %struct.binding_level** @free_binding_level, align 8
  %54 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %level_chain58 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %54, i32 0, i32 5
  store %struct.binding_level* %53, %struct.binding_level** %level_chain58, align 8
  %55 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  store %struct.binding_level* %55, %struct.binding_level** @free_binding_level, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @pushtag(%union.tree_node* %name, %union.tree_node* %type) #0 {
entry:
  %name.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %b = alloca %struct.binding_level*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %0, %struct.binding_level** %b, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %tag_transparent = getelementptr inbounds %struct.binding_level, %struct.binding_level* %1, i32 0, i32 7
  %2 = load i8, i8* %tag_transparent, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %3, i32 0, i32 5
  %4 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %4, %struct.binding_level** %b, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %tobool1 = icmp ne %union.tree_node* %5, null
  br i1 %tobool1, label %if.then, label %if.end.7

if.then:                                          ; preds = %for.end
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type2 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %name3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 11
  %7 = load %union.tree_node*, %union.tree_node** %name3, align 8
  %cmp = icmp eq %union.tree_node* %7, null
  br i1 %cmp, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %9 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type5 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %name6 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type5, i32 0, i32 11
  store %union.tree_node* %8, %union.tree_node** %name6, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.4, %if.then
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %for.end
  %10 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %12 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %12, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %tags, align 8
  %call = call %union.tree_node* @tree_cons(%union.tree_node* %10, %union.tree_node* %11, %union.tree_node* %13)
  %14 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %tags8 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %14, i32 0, i32 1
  store %union.tree_node* %call, %union.tree_node** %tags8, align 8
  %15 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call9 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %15)
  %call10 = call %union.tree_node* @pushdecl(%union.tree_node* %call9)
  %16 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common = bitcast %union.tree_node* %16 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  store %union.tree_node* %call10, %union.tree_node** %chain, align 8
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common11 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain12, align 8
  %decl = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 9
  %19 = load %union.tree_node*, %union.tree_node** %context, align 8
  %20 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type13 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %context14 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type13, i32 0, i32 17
  store %union.tree_node* %19, %union.tree_node** %context14, align 8
  ret void
}

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @pushdecl(%union.tree_node* %x) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %x.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %name = alloca %union.tree_node*, align 8
  %b = alloca %struct.binding_level*, align 8
  %different_binding_level = alloca i32, align 4
  %tt = alloca %union.tree_node*, align 8
  %decl219 = alloca %union.tree_node*, align 8
  %type304 = alloca %union.tree_node*, align 8
  %oldlocal = alloca %union.tree_node*, align 8
  %oldglobal = alloca %union.tree_node*, align 8
  %element = alloca %union.tree_node*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %name1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %1 = load %union.tree_node*, %union.tree_node** %name1, align 8
  store %union.tree_node* %1, %union.tree_node** %name, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %2, %struct.binding_level** %b, align 8
  %3 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl2 = bitcast %union.tree_node* %4 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 24
  %5 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %tobool = icmp ne %struct.lang_decl* %5, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call = call i8* @ggc_alloc_cleared(i64 16)
  %6 = bitcast i8* %call to %struct.lang_decl*
  %7 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl3 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %lang_specific4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl3, i32 0, i32 24
  store %struct.lang_decl* %6, %struct.lang_decl** %lang_specific4, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %9 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl5 = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl5, i32 0, i32 9
  store %union.tree_node* %8, %union.tree_node** %context, align 8
  %10 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common6 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %code7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load8 = load i32, i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 30
  br i1 %cmp10, label %land.lhs.true.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common11 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 2
  %bf.load13 = load i32, i32* %code12, align 8
  %bf.clear14 = and i32 %bf.load13, 255
  %cmp15 = icmp eq i32 %bf.clear14, 34
  br i1 %cmp15, label %land.lhs.true.16, label %if.end.27

land.lhs.true.16:                                 ; preds = %lor.lhs.false, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl17 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl17, i32 0, i32 12
  %13 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp18 = icmp eq %union.tree_node* %13, null
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.27

land.lhs.true.19:                                 ; preds = %land.lhs.true.16
  %14 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl20 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl20, i32 0, i32 5
  %15 = bitcast i48* %external_flag to i64*
  %bf.load21 = load i64, i64* %15, align 8
  %bf.lshr = lshr i64 %bf.load21, 8
  %bf.clear22 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear22 to i32
  %tobool23 = icmp ne i32 %bf.cast, 0
  br i1 %tobool23, label %if.then.24, label %if.end.27

if.then.24:                                       ; preds = %land.lhs.true.19
  %16 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl25 = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %context26 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl25, i32 0, i32 9
  store %union.tree_node* null, %union.tree_node** %context26, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.24, %land.lhs.true.19, %land.lhs.true.16, %lor.lhs.false
  %17 = load %union.tree_node*, %union.tree_node** %name, align 8
  %tobool28 = icmp ne %union.tree_node* %17, null
  br i1 %tobool28, label %if.then.29, label %if.end.721

if.then.29:                                       ; preds = %if.end.27
  store i32 0, i32* %different_binding_level, align 4
  %18 = load i32, i32* @warn_nested_externs, align 4
  %tobool30 = icmp ne i32 %18, 0
  br i1 %tobool30, label %land.lhs.true.31, label %if.end.51

land.lhs.true.31:                                 ; preds = %if.then.29
  %19 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl32 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %external_flag33 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl32, i32 0, i32 5
  %20 = bitcast i48* %external_flag33 to i64*
  %bf.load34 = load i64, i64* %20, align 8
  %bf.lshr35 = lshr i64 %bf.load34, 8
  %bf.clear36 = and i64 %bf.lshr35, 1
  %bf.cast37 = trunc i64 %bf.clear36 to i32
  %tobool38 = icmp ne i32 %bf.cast37, 0
  br i1 %tobool38, label %land.lhs.true.39, label %if.end.51

land.lhs.true.39:                                 ; preds = %land.lhs.true.31
  %21 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %22 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp40 = icmp ne %struct.binding_level* %21, %22
  br i1 %cmp40, label %land.lhs.true.41, label %if.end.51

land.lhs.true.41:                                 ; preds = %land.lhs.true.39
  %23 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %24 = load %union.tree_node*, %union.tree_node** %name, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.lang_identifier*
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %25, i32 0, i32 4
  %26 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  %cmp42 = icmp ne %union.tree_node* %23, %26
  br i1 %cmp42, label %land.lhs.true.43, label %if.end.51

land.lhs.true.43:                                 ; preds = %land.lhs.true.41
  %27 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl44 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %in_system_header_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl44, i32 0, i32 5
  %28 = bitcast i48* %in_system_header_flag to i64*
  %bf.load45 = load i64, i64* %28, align 8
  %bf.lshr46 = lshr i64 %bf.load45, 16
  %bf.clear47 = and i64 %bf.lshr46, 1
  %bf.cast48 = trunc i64 %bf.clear47 to i32
  %tobool49 = icmp ne i32 %bf.cast48, 0
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %land.lhs.true.43
  %29 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %29 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %30 = load i8*, i8** %str, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.136, i32 0, i32 0), i8* %30)
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.50, %land.lhs.true.43, %land.lhs.true.41, %land.lhs.true.39, %land.lhs.true.31, %if.then.29
  %31 = load %union.tree_node*, %union.tree_node** %name, align 8
  %call52 = call %union.tree_node* @lookup_name_current_level(%union.tree_node* %31)
  store %union.tree_node* %call52, %union.tree_node** %t, align 8
  %32 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool53 = icmp ne %union.tree_node* %32, null
  br i1 %tobool53, label %if.end.80, label %land.lhs.true.54

land.lhs.true.54:                                 ; preds = %if.end.51
  %33 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl55 = bitcast %union.tree_node* %33 to %struct.tree_decl*
  %external_flag56 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl55, i32 0, i32 5
  %34 = bitcast i48* %external_flag56 to i64*
  %bf.load57 = load i64, i64* %34, align 8
  %bf.lshr58 = lshr i64 %bf.load57, 8
  %bf.clear59 = and i64 %bf.lshr58, 1
  %bf.cast60 = trunc i64 %bf.clear59 to i32
  %tobool61 = icmp ne i32 %bf.cast60, 0
  br i1 %tobool61, label %land.lhs.true.62, label %if.end.80

land.lhs.true.62:                                 ; preds = %land.lhs.true.54
  %35 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common63 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common63, i32 0, i32 2
  %bf.load64 = load i32, i32* %public_flag, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 19
  %bf.clear66 = and i32 %bf.lshr65, 1
  %tobool67 = icmp ne i32 %bf.clear66, 0
  br i1 %tobool67, label %land.lhs.true.68, label %if.end.80

land.lhs.true.68:                                 ; preds = %land.lhs.true.62
  %36 = load i32, i32* @flag_traditional, align 4
  %tobool69 = icmp ne i32 %36, 0
  br i1 %tobool69, label %if.end.80, label %if.then.70

if.then.70:                                       ; preds = %land.lhs.true.68
  %37 = load %union.tree_node*, %union.tree_node** %name, align 8
  %38 = bitcast %union.tree_node* %37 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %38, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  store %union.tree_node* %39, %union.tree_node** %t, align 8
  %40 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool71 = icmp ne %union.tree_node* %40, null
  br i1 %tobool71, label %lor.lhs.false.72, label %if.then.78

lor.lhs.false.72:                                 ; preds = %if.then.70
  %41 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common73 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 2
  %bf.load75 = load i32, i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp eq i32 %bf.clear76, 33
  br i1 %cmp77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %lor.lhs.false.72, %if.then.70
  %42 = load %union.tree_node*, %union.tree_node** %name, align 8
  %43 = bitcast %union.tree_node* %42 to %struct.lang_identifier*
  %limbo_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %43, i32 0, i32 6
  %44 = load %union.tree_node*, %union.tree_node** %limbo_value, align 8
  store %union.tree_node* %44, %union.tree_node** %t, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %lor.lhs.false.72
  store i32 1, i32* %different_binding_level, align 4
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %land.lhs.true.68, %land.lhs.true.62, %land.lhs.true.54, %if.end.51
  %45 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp81 = icmp ne %union.tree_node* %45, null
  br i1 %cmp81, label %land.lhs.true.82, label %if.end.85

land.lhs.true.82:                                 ; preds = %if.end.80
  %46 = load %union.tree_node*, %union.tree_node** %t, align 8
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp83 = icmp eq %union.tree_node* %46, %47
  br i1 %cmp83, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %land.lhs.true.82
  store %union.tree_node* null, %union.tree_node** %t, align 8
  %48 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.137, i32 0, i32 0))
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.84, %land.lhs.true.82, %if.end.80
  %49 = load i32, i32* @flag_traditional, align 4
  %tobool86 = icmp ne i32 %49, 0
  br i1 %tobool86, label %if.end.126, label %land.lhs.true.87

land.lhs.true.87:                                 ; preds = %if.end.85
  %50 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common88 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %public_flag89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 2
  %bf.load90 = load i32, i32* %public_flag89, align 8
  %bf.lshr91 = lshr i32 %bf.load90, 19
  %bf.clear92 = and i32 %bf.lshr91, 1
  %tobool93 = icmp ne i32 %bf.clear92, 0
  br i1 %tobool93, label %land.lhs.true.94, label %if.end.126

land.lhs.true.94:                                 ; preds = %land.lhs.true.87
  %51 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common95 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %public_flag96 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common95, i32 0, i32 2
  %bf.load97 = load i32, i32* %public_flag96, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 19
  %bf.clear99 = and i32 %bf.lshr98, 1
  %tobool100 = icmp ne i32 %bf.clear99, 0
  br i1 %tobool100, label %if.end.126, label %land.lhs.true.101

land.lhs.true.101:                                ; preds = %land.lhs.true.94
  %52 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common102 = bitcast %union.tree_node* %52 to %struct.tree_common*
  %code103 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common102, i32 0, i32 2
  %bf.load104 = load i32, i32* %code103, align 8
  %bf.clear105 = and i32 %bf.load104, 255
  %cmp106 = icmp eq i32 %bf.clear105, 30
  br i1 %cmp106, label %land.lhs.true.109, label %lor.lhs.false.107

lor.lhs.false.107:                                ; preds = %land.lhs.true.101
  %53 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %54 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp108 = icmp eq %struct.binding_level* %53, %54
  br i1 %cmp108, label %land.lhs.true.109, label %if.end.126

land.lhs.true.109:                                ; preds = %lor.lhs.false.107, %land.lhs.true.101
  %55 = load %union.tree_node*, %union.tree_node** %name, align 8
  %56 = bitcast %union.tree_node* %55 to %struct.lang_identifier*
  %implicit_decl110 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %56, i32 0, i32 4
  %57 = load %union.tree_node*, %union.tree_node** %implicit_decl110, align 8
  %cmp111 = icmp ne %union.tree_node* %57, null
  br i1 %cmp111, label %if.then.112, label %if.end.126

if.then.112:                                      ; preds = %land.lhs.true.109
  %58 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier113 = bitcast %union.tree_node* %58 to %struct.tree_identifier*
  %id114 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier113, i32 0, i32 1
  %str115 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id114, i32 0, i32 1
  %59 = load i8*, i8** %str115, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.138, i32 0, i32 0), i8* %59)
  %60 = load %union.tree_node*, %union.tree_node** %name, align 8
  %61 = bitcast %union.tree_node* %60 to %struct.lang_identifier*
  %implicit_decl116 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %61, i32 0, i32 4
  %62 = load %union.tree_node*, %union.tree_node** %implicit_decl116, align 8
  %decl117 = bitcast %union.tree_node* %62 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl117, i32 0, i32 1
  %63 = load i8*, i8** %filename, align 8
  %64 = load %union.tree_node*, %union.tree_node** %name, align 8
  %65 = bitcast %union.tree_node* %64 to %struct.lang_identifier*
  %implicit_decl118 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %65, i32 0, i32 4
  %66 = load %union.tree_node*, %union.tree_node** %implicit_decl118, align 8
  %decl119 = bitcast %union.tree_node* %66 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl119, i32 0, i32 2
  %67 = load i32, i32* %linenum, align 4
  %68 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier120 = bitcast %union.tree_node* %68 to %struct.tree_identifier*
  %id121 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier120, i32 0, i32 1
  %str122 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id121, i32 0, i32 1
  %69 = load i8*, i8** %str122, align 8
  call void (i8*, i32, i8*, ...) @pedwarn_with_file_and_line(i8* %63, i32 %67, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0), i8* %69)
  %70 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common123 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common123, i32 0, i32 2
  %bf.load124 = load i32, i32* %volatile_flag, align 8
  %bf.clear125 = and i32 %bf.load124, -2049
  %bf.set = or i32 %bf.clear125, 2048
  store i32 %bf.set, i32* %volatile_flag, align 8
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.112, %land.lhs.true.109, %lor.lhs.false.107, %land.lhs.true.94, %land.lhs.true.87, %if.end.85
  %71 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp127 = icmp ne %union.tree_node* %71, null
  br i1 %cmp127, label %land.lhs.true.128, label %if.end.148

land.lhs.true.128:                                ; preds = %if.end.126
  %72 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %73 = load %union.tree_node*, %union.tree_node** %t, align 8
  %74 = load i32, i32* %different_binding_level, align 4
  %call129 = call i32 @duplicate_decls(%union.tree_node* %72, %union.tree_node* %73, i32 %74)
  %tobool130 = icmp ne i32 %call129, 0
  br i1 %tobool130, label %if.then.131, label %if.end.148

if.then.131:                                      ; preds = %land.lhs.true.128
  %75 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common132 = bitcast %union.tree_node* %75 to %struct.tree_common*
  %code133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 2
  %bf.load134 = load i32, i32* %code133, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 35
  br i1 %cmp136, label %if.then.137, label %if.end.147

if.then.137:                                      ; preds = %if.then.131
  %76 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common138 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 2
  %bf.load139 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr140 = lshr i32 %bf.load139, 14
  %bf.clear141 = and i32 %bf.lshr140, 1
  %77 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common142 = bitcast %union.tree_node* %77 to %struct.tree_common*
  %asm_written_flag143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common142, i32 0, i32 2
  %bf.load144 = load i32, i32* %asm_written_flag143, align 8
  %bf.value = and i32 %bf.clear141, 1
  %bf.shl = shl i32 %bf.value, 14
  %bf.clear145 = and i32 %bf.load144, -16385
  %bf.set146 = or i32 %bf.clear145, %bf.shl
  store i32 %bf.set146, i32* %asm_written_flag143, align 8
  %78 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %78, %union.tree_node** %retval
  br label %return

if.end.147:                                       ; preds = %if.then.131
  %79 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %79, %union.tree_node** %retval
  br label %return

if.end.148:                                       ; preds = %land.lhs.true.128, %if.end.126
  %80 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common149 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %code150 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common149, i32 0, i32 2
  %bf.load151 = load i32, i32* %code150, align 8
  %bf.clear152 = and i32 %bf.load151, 255
  %cmp153 = icmp eq i32 %bf.clear152, 33
  br i1 %cmp153, label %if.then.154, label %if.end.198

if.then.154:                                      ; preds = %if.end.148
  %81 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl155 = bitcast %union.tree_node* %81 to %struct.tree_decl*
  %linenum156 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl155, i32 0, i32 2
  %82 = load i32, i32* %linenum156, align 4
  %cmp157 = icmp eq i32 %82, 0
  br i1 %cmp157, label %if.then.158, label %if.else

if.then.158:                                      ; preds = %if.then.154
  %83 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common159 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common159, i32 0, i32 1
  %84 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type160 = bitcast %union.tree_node* %84 to %struct.tree_type*
  %name161 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type160, i32 0, i32 11
  %85 = load %union.tree_node*, %union.tree_node** %name161, align 8
  %cmp162 = icmp eq %union.tree_node* %85, null
  br i1 %cmp162, label %if.then.163, label %if.end.168

if.then.163:                                      ; preds = %if.then.158
  %86 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %87 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common164 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %type165 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common164, i32 0, i32 1
  %88 = load %union.tree_node*, %union.tree_node** %type165, align 8
  %type166 = bitcast %union.tree_node* %88 to %struct.tree_type*
  %name167 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type166, i32 0, i32 11
  store %union.tree_node* %86, %union.tree_node** %name167, align 8
  br label %if.end.168

if.end.168:                                       ; preds = %if.then.163, %if.then.158
  br label %if.end.197

if.else:                                          ; preds = %if.then.154
  %89 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common169 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %type170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common169, i32 0, i32 1
  %90 = load %union.tree_node*, %union.tree_node** %type170, align 8
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp171 = icmp ne %union.tree_node* %90, %91
  br i1 %cmp171, label %land.lhs.true.172, label %if.end.196

land.lhs.true.172:                                ; preds = %if.else
  %92 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl173 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl173, i32 0, i32 11
  %93 = load %union.tree_node*, %union.tree_node** %result, align 8
  %cmp174 = icmp eq %union.tree_node* %93, null
  br i1 %cmp174, label %if.then.175, label %if.end.196

if.then.175:                                      ; preds = %land.lhs.true.172
  %94 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common176 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common176, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type177, align 8
  store %union.tree_node* %95, %union.tree_node** %tt, align 8
  %96 = load %union.tree_node*, %union.tree_node** %tt, align 8
  %97 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl178 = bitcast %union.tree_node* %97 to %struct.tree_decl*
  %result179 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl178, i32 0, i32 11
  store %union.tree_node* %96, %union.tree_node** %result179, align 8
  %98 = load %union.tree_node*, %union.tree_node** %tt, align 8
  %call180 = call %union.tree_node* @build_type_copy(%union.tree_node* %98)
  store %union.tree_node* %call180, %union.tree_node** %tt, align 8
  %99 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %100 = load %union.tree_node*, %union.tree_node** %tt, align 8
  %type181 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %name182 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type181, i32 0, i32 11
  store %union.tree_node* %99, %union.tree_node** %name182, align 8
  %101 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common183 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 2
  %bf.load184 = load i32, i32* %used_flag, align 8
  %bf.lshr185 = lshr i32 %bf.load184, 16
  %bf.clear186 = and i32 %bf.lshr185, 1
  %102 = load %union.tree_node*, %union.tree_node** %tt, align 8
  %common187 = bitcast %union.tree_node* %102 to %struct.tree_common*
  %used_flag188 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common187, i32 0, i32 2
  %bf.load189 = load i32, i32* %used_flag188, align 8
  %bf.value190 = and i32 %bf.clear186, 1
  %bf.shl191 = shl i32 %bf.value190, 16
  %bf.clear192 = and i32 %bf.load189, -65537
  %bf.set193 = or i32 %bf.clear192, %bf.shl191
  store i32 %bf.set193, i32* %used_flag188, align 8
  %103 = load %union.tree_node*, %union.tree_node** %tt, align 8
  %104 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common194 = bitcast %union.tree_node* %104 to %struct.tree_common*
  %type195 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common194, i32 0, i32 1
  store %union.tree_node* %103, %union.tree_node** %type195, align 8
  br label %if.end.196

if.end.196:                                       ; preds = %if.then.175, %land.lhs.true.172, %if.else
  br label %if.end.197

if.end.197:                                       ; preds = %if.end.196, %if.end.168
  br label %if.end.198

if.end.198:                                       ; preds = %if.end.197, %if.end.148
  %105 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common199 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %public_flag200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common199, i32 0, i32 2
  %bf.load201 = load i32, i32* %public_flag200, align 8
  %bf.lshr202 = lshr i32 %bf.load201, 19
  %bf.clear203 = and i32 %bf.lshr202, 1
  %tobool204 = icmp ne i32 %bf.clear203, 0
  br i1 %tobool204, label %land.lhs.true.205, label %if.end.268

land.lhs.true.205:                                ; preds = %if.end.198
  %106 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common206 = bitcast %union.tree_node* %106 to %struct.tree_common*
  %code207 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common206, i32 0, i32 2
  %bf.load208 = load i32, i32* %code207, align 8
  %bf.clear209 = and i32 %bf.load208, 255
  %cmp210 = icmp eq i32 %bf.clear209, 30
  br i1 %cmp210, label %land.lhs.true.211, label %if.then.218

land.lhs.true.211:                                ; preds = %land.lhs.true.205
  %107 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl212 = bitcast %union.tree_node* %107 to %struct.tree_decl*
  %inline_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl212, i32 0, i32 5
  %108 = bitcast i48* %inline_flag to i64*
  %bf.load213 = load i64, i64* %108, align 8
  %bf.lshr214 = lshr i64 %bf.load213, 11
  %bf.clear215 = and i64 %bf.lshr214, 1
  %bf.cast216 = trunc i64 %bf.clear215 to i32
  %tobool217 = icmp ne i32 %bf.cast216, 0
  br i1 %tobool217, label %if.end.268, label %if.then.218

if.then.218:                                      ; preds = %land.lhs.true.211, %land.lhs.true.205
  %109 = load i32, i32* @flag_traditional, align 4
  %tobool220 = icmp ne i32 %109, 0
  br i1 %tobool220, label %land.lhs.true.221, label %if.else.243

land.lhs.true.221:                                ; preds = %if.then.218
  %110 = load %union.tree_node*, %union.tree_node** %name, align 8
  %111 = bitcast %union.tree_node* %110 to %struct.lang_identifier*
  %global_value222 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %111, i32 0, i32 1
  %112 = load %union.tree_node*, %union.tree_node** %global_value222, align 8
  %cmp223 = icmp ne %union.tree_node* %112, null
  br i1 %cmp223, label %land.lhs.true.224, label %if.else.243

land.lhs.true.224:                                ; preds = %land.lhs.true.221
  %113 = load %union.tree_node*, %union.tree_node** %name, align 8
  %114 = bitcast %union.tree_node* %113 to %struct.lang_identifier*
  %global_value225 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %114, i32 0, i32 1
  %115 = load %union.tree_node*, %union.tree_node** %global_value225, align 8
  %decl226 = bitcast %union.tree_node* %115 to %struct.tree_decl*
  %external_flag227 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl226, i32 0, i32 5
  %116 = bitcast i48* %external_flag227 to i64*
  %bf.load228 = load i64, i64* %116, align 8
  %bf.lshr229 = lshr i64 %bf.load228, 8
  %bf.clear230 = and i64 %bf.lshr229, 1
  %bf.cast231 = trunc i64 %bf.clear230 to i32
  %tobool232 = icmp ne i32 %bf.cast231, 0
  br i1 %tobool232, label %if.then.241, label %lor.lhs.false.233

lor.lhs.false.233:                                ; preds = %land.lhs.true.224
  %117 = load %union.tree_node*, %union.tree_node** %name, align 8
  %118 = bitcast %union.tree_node* %117 to %struct.lang_identifier*
  %global_value234 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %118, i32 0, i32 1
  %119 = load %union.tree_node*, %union.tree_node** %global_value234, align 8
  %common235 = bitcast %union.tree_node* %119 to %struct.tree_common*
  %public_flag236 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common235, i32 0, i32 2
  %bf.load237 = load i32, i32* %public_flag236, align 8
  %bf.lshr238 = lshr i32 %bf.load237, 19
  %bf.clear239 = and i32 %bf.lshr238, 1
  %tobool240 = icmp ne i32 %bf.clear239, 0
  br i1 %tobool240, label %if.then.241, label %if.else.243

if.then.241:                                      ; preds = %lor.lhs.false.233, %land.lhs.true.224
  %120 = load %union.tree_node*, %union.tree_node** %name, align 8
  %121 = bitcast %union.tree_node* %120 to %struct.lang_identifier*
  %global_value242 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %121, i32 0, i32 1
  %122 = load %union.tree_node*, %union.tree_node** %global_value242, align 8
  store %union.tree_node* %122, %union.tree_node** %decl219, align 8
  br label %if.end.250

if.else.243:                                      ; preds = %lor.lhs.false.233, %land.lhs.true.221, %if.then.218
  %123 = load %union.tree_node*, %union.tree_node** %name, align 8
  %124 = bitcast %union.tree_node* %123 to %struct.lang_identifier*
  %limbo_value244 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %124, i32 0, i32 6
  %125 = load %union.tree_node*, %union.tree_node** %limbo_value244, align 8
  %cmp245 = icmp ne %union.tree_node* %125, null
  br i1 %cmp245, label %if.then.246, label %if.else.248

if.then.246:                                      ; preds = %if.else.243
  %126 = load %union.tree_node*, %union.tree_node** %name, align 8
  %127 = bitcast %union.tree_node* %126 to %struct.lang_identifier*
  %limbo_value247 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %127, i32 0, i32 6
  %128 = load %union.tree_node*, %union.tree_node** %limbo_value247, align 8
  store %union.tree_node* %128, %union.tree_node** %decl219, align 8
  br label %if.end.249

if.else.248:                                      ; preds = %if.else.243
  store %union.tree_node* null, %union.tree_node** %decl219, align 8
  br label %if.end.249

if.end.249:                                       ; preds = %if.else.248, %if.then.246
  br label %if.end.250

if.end.250:                                       ; preds = %if.end.249, %if.then.241
  %129 = load %union.tree_node*, %union.tree_node** %decl219, align 8
  %tobool251 = icmp ne %union.tree_node* %129, null
  br i1 %tobool251, label %land.lhs.true.252, label %if.end.267

land.lhs.true.252:                                ; preds = %if.end.250
  %130 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common253 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %type254 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common253, i32 0, i32 1
  %131 = load %union.tree_node*, %union.tree_node** %type254, align 8
  %132 = load %union.tree_node*, %union.tree_node** %decl219, align 8
  %common255 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %type256 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common255, i32 0, i32 1
  %133 = load %union.tree_node*, %union.tree_node** %type256, align 8
  %call257 = call i32 @comptypes(%union.tree_node* %131, %union.tree_node* %133)
  %tobool258 = icmp ne i32 %call257, 0
  br i1 %tobool258, label %if.end.267, label %land.lhs.true.259

land.lhs.true.259:                                ; preds = %land.lhs.true.252
  %134 = load %union.tree_node*, %union.tree_node** %decl219, align 8
  %decl260 = bitcast %union.tree_node* %134 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl260, i32 0, i32 5
  %135 = bitcast i48* %built_in_class to i64*
  %bf.load261 = load i64, i64* %135, align 8
  %bf.lshr262 = lshr i64 %bf.load261, 29
  %bf.clear263 = and i64 %bf.lshr262, 3
  %bf.cast264 = trunc i64 %bf.clear263 to i32
  %cmp265 = icmp ne i32 %bf.cast264, 0
  br i1 %cmp265, label %if.end.267, label %if.then.266

if.then.266:                                      ; preds = %land.lhs.true.259
  %136 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %136, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.140, i32 0, i32 0))
  %137 = load %union.tree_node*, %union.tree_node** %decl219, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %137, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i32 0, i32 0))
  br label %if.end.267

if.end.267:                                       ; preds = %if.then.266, %land.lhs.true.259, %land.lhs.true.252, %if.end.250
  br label %if.end.268

if.end.268:                                       ; preds = %if.end.267, %land.lhs.true.211, %if.end.198
  %138 = load %union.tree_node*, %union.tree_node** %name, align 8
  %139 = bitcast %union.tree_node* %138 to %struct.lang_identifier*
  %implicit_decl269 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %139, i32 0, i32 4
  %140 = load %union.tree_node*, %union.tree_node** %implicit_decl269, align 8
  %cmp270 = icmp ne %union.tree_node* %140, null
  br i1 %cmp270, label %land.lhs.true.271, label %if.end.290

land.lhs.true.271:                                ; preds = %if.end.268
  %141 = load %union.tree_node*, %union.tree_node** %name, align 8
  %142 = bitcast %union.tree_node* %141 to %struct.lang_identifier*
  %global_value272 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %142, i32 0, i32 1
  %143 = load %union.tree_node*, %union.tree_node** %global_value272, align 8
  %cmp273 = icmp eq %union.tree_node* %143, null
  br i1 %cmp273, label %land.lhs.true.274, label %if.end.290

land.lhs.true.274:                                ; preds = %land.lhs.true.271
  %144 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common275 = bitcast %union.tree_node* %144 to %struct.tree_common*
  %code276 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common275, i32 0, i32 2
  %bf.load277 = load i32, i32* %code276, align 8
  %bf.clear278 = and i32 %bf.load277, 255
  %cmp279 = icmp eq i32 %bf.clear278, 30
  br i1 %cmp279, label %land.lhs.true.280, label %if.end.290

land.lhs.true.280:                                ; preds = %land.lhs.true.274
  %145 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common281 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %type282 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common281, i32 0, i32 1
  %146 = load %union.tree_node*, %union.tree_node** %type282, align 8
  %147 = load %union.tree_node*, %union.tree_node** %name, align 8
  %148 = bitcast %union.tree_node* %147 to %struct.lang_identifier*
  %implicit_decl283 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %148, i32 0, i32 4
  %149 = load %union.tree_node*, %union.tree_node** %implicit_decl283, align 8
  %common284 = bitcast %union.tree_node* %149 to %struct.tree_common*
  %type285 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common284, i32 0, i32 1
  %150 = load %union.tree_node*, %union.tree_node** %type285, align 8
  %call286 = call i32 @comptypes(%union.tree_node* %146, %union.tree_node* %150)
  %tobool287 = icmp ne i32 %call286, 0
  br i1 %tobool287, label %if.end.290, label %if.then.288

if.then.288:                                      ; preds = %land.lhs.true.280
  %151 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %151, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.142, i32 0, i32 0))
  %152 = load %union.tree_node*, %union.tree_node** %name, align 8
  %153 = bitcast %union.tree_node* %152 to %struct.lang_identifier*
  %implicit_decl289 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %153, i32 0, i32 4
  %154 = load %union.tree_node*, %union.tree_node** %implicit_decl289, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %154, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.143, i32 0, i32 0))
  br label %if.end.290

if.end.290:                                       ; preds = %if.then.288, %land.lhs.true.280, %land.lhs.true.274, %land.lhs.true.271, %if.end.268
  %155 = load i32, i32* @flag_traditional, align 4
  %tobool291 = icmp ne i32 %155, 0
  br i1 %tobool291, label %land.lhs.true.292, label %if.end.332

land.lhs.true.292:                                ; preds = %if.end.290
  %156 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl293 = bitcast %union.tree_node* %156 to %struct.tree_decl*
  %external_flag294 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl293, i32 0, i32 5
  %157 = bitcast i48* %external_flag294 to i64*
  %bf.load295 = load i64, i64* %157, align 8
  %bf.lshr296 = lshr i64 %bf.load295, 8
  %bf.clear297 = and i64 %bf.lshr296, 1
  %bf.cast298 = trunc i64 %bf.clear297 to i32
  %tobool299 = icmp ne i32 %bf.cast298, 0
  br i1 %tobool299, label %land.lhs.true.300, label %if.end.332

land.lhs.true.300:                                ; preds = %land.lhs.true.292
  %158 = load %union.tree_node*, %union.tree_node** %name, align 8
  %call301 = call %union.tree_node* @lookup_name(%union.tree_node* %158)
  %cmp302 = icmp eq %union.tree_node* %call301, null
  br i1 %cmp302, label %if.then.303, label %if.end.332

if.then.303:                                      ; preds = %land.lhs.true.300
  %159 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common305 = bitcast %union.tree_node* %159 to %struct.tree_common*
  %type306 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common305, i32 0, i32 1
  %160 = load %union.tree_node*, %union.tree_node** %type306, align 8
  store %union.tree_node* %160, %union.tree_node** %type304, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.326, %if.then.303
  %161 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %tobool307 = icmp ne %union.tree_node* %161, null
  br i1 %tobool307, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %162 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %163 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp308 = icmp eq %union.tree_node* %162, %163
  br i1 %cmp308, label %if.then.309, label %if.end.310

if.then.309:                                      ; preds = %while.body
  br label %while.end

if.end.310:                                       ; preds = %while.body
  %164 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %type311 = bitcast %union.tree_node* %164 to %struct.tree_type*
  %context312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type311, i32 0, i32 17
  %165 = load %union.tree_node*, %union.tree_node** %context312, align 8
  %tobool313 = icmp ne %union.tree_node* %165, null
  br i1 %tobool313, label %if.then.314, label %if.else.315

if.then.314:                                      ; preds = %if.end.310
  %166 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %166, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.144, i32 0, i32 0))
  br label %while.end

if.else.315:                                      ; preds = %if.end.310
  %167 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %common316 = bitcast %union.tree_node* %167 to %struct.tree_common*
  %code317 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common316, i32 0, i32 2
  %bf.load318 = load i32, i32* %code317, align 8
  %bf.clear319 = and i32 %bf.load318, 255
  %cmp320 = icmp eq i32 %bf.clear319, 23
  br i1 %cmp320, label %land.lhs.true.321, label %if.end.325

land.lhs.true.321:                                ; preds = %if.else.315
  %168 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %type322 = bitcast %union.tree_node* %168 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type322, i32 0, i32 1
  %169 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp323 = icmp ne %union.tree_node* %169, null
  br i1 %cmp323, label %if.then.324, label %if.end.325

if.then.324:                                      ; preds = %land.lhs.true.321
  br label %while.end

if.end.325:                                       ; preds = %land.lhs.true.321, %if.else.315
  br label %if.end.326

if.end.326:                                       ; preds = %if.end.325
  %170 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %common327 = bitcast %union.tree_node* %170 to %struct.tree_common*
  %type328 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common327, i32 0, i32 1
  %171 = load %union.tree_node*, %union.tree_node** %type328, align 8
  store %union.tree_node* %171, %union.tree_node** %type304, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then.324, %if.then.314, %if.then.309, %while.cond
  %172 = load %union.tree_node*, %union.tree_node** %type304, align 8
  %cmp329 = icmp eq %union.tree_node* %172, null
  br i1 %cmp329, label %if.then.330, label %if.end.331

if.then.330:                                      ; preds = %while.end
  %173 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  store %struct.binding_level* %173, %struct.binding_level** %b, align 8
  br label %if.end.331

if.end.331:                                       ; preds = %if.then.330, %while.end
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331, %land.lhs.true.300, %land.lhs.true.292, %if.end.290
  %174 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %175 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp333 = icmp eq %struct.binding_level* %174, %175
  br i1 %cmp333, label %if.then.334, label %if.else.483

if.then.334:                                      ; preds = %if.end.332
  %176 = load %union.tree_node*, %union.tree_node** %name, align 8
  %177 = bitcast %union.tree_node* %176 to %struct.lang_identifier*
  %global_value335 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %177, i32 0, i32 1
  %178 = load %union.tree_node*, %union.tree_node** %global_value335, align 8
  %cmp336 = icmp eq %union.tree_node* %178, null
  br i1 %cmp336, label %land.lhs.true.337, label %if.end.350

land.lhs.true.337:                                ; preds = %if.then.334
  %179 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common338 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %public_flag339 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common338, i32 0, i32 2
  %bf.load340 = load i32, i32* %public_flag339, align 8
  %bf.lshr341 = lshr i32 %bf.load340, 19
  %bf.clear342 = and i32 %bf.lshr341, 1
  %tobool343 = icmp ne i32 %bf.clear342, 0
  br i1 %tobool343, label %if.then.344, label %if.end.350

if.then.344:                                      ; preds = %land.lhs.true.337
  %180 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common345 = bitcast %union.tree_node* %180 to %struct.tree_common*
  %public_flag346 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common345, i32 0, i32 2
  %bf.load347 = load i32, i32* %public_flag346, align 8
  %bf.clear348 = and i32 %bf.load347, -524289
  %bf.set349 = or i32 %bf.clear348, 524288
  store i32 %bf.set349, i32* %public_flag346, align 8
  br label %if.end.350

if.end.350:                                       ; preds = %if.then.344, %land.lhs.true.337, %if.then.334
  %181 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %182 = load %union.tree_node*, %union.tree_node** %name, align 8
  %183 = bitcast %union.tree_node* %182 to %struct.lang_identifier*
  %global_value351 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %183, i32 0, i32 1
  store %union.tree_node* %181, %union.tree_node** %global_value351, align 8
  %184 = load %union.tree_node*, %union.tree_node** %name, align 8
  %185 = bitcast %union.tree_node* %184 to %struct.lang_identifier*
  %limbo_value352 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %185, i32 0, i32 6
  store %union.tree_node* null, %union.tree_node** %limbo_value352, align 8
  %186 = load %union.tree_node*, %union.tree_node** %name, align 8
  %187 = bitcast %union.tree_node* %186 to %struct.lang_identifier*
  %implicit_decl353 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %187, i32 0, i32 4
  %188 = load %union.tree_node*, %union.tree_node** %implicit_decl353, align 8
  %tobool354 = icmp ne %union.tree_node* %188, null
  br i1 %tobool354, label %land.lhs.true.355, label %if.end.374

land.lhs.true.355:                                ; preds = %if.end.350
  %189 = load %union.tree_node*, %union.tree_node** %name, align 8
  %190 = bitcast %union.tree_node* %189 to %struct.lang_identifier*
  %implicit_decl356 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %190, i32 0, i32 4
  %191 = load %union.tree_node*, %union.tree_node** %implicit_decl356, align 8
  %common357 = bitcast %union.tree_node* %191 to %struct.tree_common*
  %used_flag358 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common357, i32 0, i32 2
  %bf.load359 = load i32, i32* %used_flag358, align 8
  %bf.lshr360 = lshr i32 %bf.load359, 16
  %bf.clear361 = and i32 %bf.lshr360, 1
  %tobool362 = icmp ne i32 %bf.clear361, 0
  br i1 %tobool362, label %if.then.363, label %if.end.374

if.then.363:                                      ; preds = %land.lhs.true.355
  %192 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common364 = bitcast %union.tree_node* %192 to %struct.tree_common*
  %used_flag365 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common364, i32 0, i32 2
  %bf.load366 = load i32, i32* %used_flag365, align 8
  %bf.clear367 = and i32 %bf.load366, -65537
  %bf.set368 = or i32 %bf.clear367, 65536
  store i32 %bf.set368, i32* %used_flag365, align 8
  %193 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common369 = bitcast %union.tree_node* %193 to %struct.tree_common*
  %used_flag370 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common369, i32 0, i32 2
  %bf.load371 = load i32, i32* %used_flag370, align 8
  %bf.clear372 = and i32 %bf.load371, -65537
  %bf.set373 = or i32 %bf.clear372, 65536
  store i32 %bf.set373, i32* %used_flag370, align 8
  br label %if.end.374

if.end.374:                                       ; preds = %if.then.363, %land.lhs.true.355, %if.end.350
  %194 = load %union.tree_node*, %union.tree_node** %name, align 8
  %195 = bitcast %union.tree_node* %194 to %struct.lang_identifier*
  %implicit_decl375 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %195, i32 0, i32 4
  %196 = load %union.tree_node*, %union.tree_node** %implicit_decl375, align 8
  %tobool376 = icmp ne %union.tree_node* %196, null
  br i1 %tobool376, label %land.lhs.true.377, label %if.end.390

land.lhs.true.377:                                ; preds = %if.end.374
  %197 = load %union.tree_node*, %union.tree_node** %name, align 8
  %198 = bitcast %union.tree_node* %197 to %struct.lang_identifier*
  %implicit_decl378 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %198, i32 0, i32 4
  %199 = load %union.tree_node*, %union.tree_node** %implicit_decl378, align 8
  %common379 = bitcast %union.tree_node* %199 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common379, i32 0, i32 2
  %bf.load380 = load i32, i32* %addressable_flag, align 8
  %bf.lshr381 = lshr i32 %bf.load380, 10
  %bf.clear382 = and i32 %bf.lshr381, 1
  %tobool383 = icmp ne i32 %bf.clear382, 0
  br i1 %tobool383, label %if.then.384, label %if.end.390

if.then.384:                                      ; preds = %land.lhs.true.377
  %200 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common385 = bitcast %union.tree_node* %200 to %struct.tree_common*
  %addressable_flag386 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common385, i32 0, i32 2
  %bf.load387 = load i32, i32* %addressable_flag386, align 8
  %bf.clear388 = and i32 %bf.load387, -1025
  %bf.set389 = or i32 %bf.clear388, 1024
  store i32 %bf.set389, i32* %addressable_flag386, align 8
  br label %if.end.390

if.end.390:                                       ; preds = %if.then.384, %land.lhs.true.377, %if.end.374
  %201 = load %union.tree_node*, %union.tree_node** %name, align 8
  %202 = bitcast %union.tree_node* %201 to %struct.lang_identifier*
  %implicit_decl391 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %202, i32 0, i32 4
  %203 = load %union.tree_node*, %union.tree_node** %implicit_decl391, align 8
  %cmp392 = icmp ne %union.tree_node* %203, null
  br i1 %cmp392, label %land.lhs.true.393, label %if.end.410

land.lhs.true.393:                                ; preds = %if.end.390
  %204 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common394 = bitcast %union.tree_node* %204 to %struct.tree_common*
  %code395 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common394, i32 0, i32 2
  %bf.load396 = load i32, i32* %code395, align 8
  %bf.clear397 = and i32 %bf.load396, 255
  %cmp398 = icmp eq i32 %bf.clear397, 30
  br i1 %cmp398, label %land.lhs.true.399, label %if.then.406

land.lhs.true.399:                                ; preds = %land.lhs.true.393
  %205 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common400 = bitcast %union.tree_node* %205 to %struct.tree_common*
  %type401 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common400, i32 0, i32 1
  %206 = load %union.tree_node*, %union.tree_node** %type401, align 8
  %common402 = bitcast %union.tree_node* %206 to %struct.tree_common*
  %type403 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common402, i32 0, i32 1
  %207 = load %union.tree_node*, %union.tree_node** %type403, align 8
  %type404 = bitcast %union.tree_node* %207 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type404, i32 0, i32 15
  %208 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %209 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp405 = icmp eq %union.tree_node* %208, %209
  br i1 %cmp405, label %if.end.410, label %if.then.406

if.then.406:                                      ; preds = %land.lhs.true.399, %land.lhs.true.393
  %210 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier407 = bitcast %union.tree_node* %210 to %struct.tree_identifier*
  %id408 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier407, i32 0, i32 1
  %str409 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id408, i32 0, i32 1
  %211 = load i8*, i8** %str409, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.145, i32 0, i32 0), i8* %211)
  br label %if.end.410

if.end.410:                                       ; preds = %if.then.406, %land.lhs.true.399, %if.end.390
  %212 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common411 = bitcast %union.tree_node* %212 to %struct.tree_common*
  %public_flag412 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common411, i32 0, i32 2
  %bf.load413 = load i32, i32* %public_flag412, align 8
  %bf.lshr414 = lshr i32 %bf.load413, 19
  %bf.clear415 = and i32 %bf.lshr414, 1
  %tobool416 = icmp ne i32 %bf.clear415, 0
  br i1 %tobool416, label %land.lhs.true.417, label %if.end.482

land.lhs.true.417:                                ; preds = %if.end.410
  %213 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common418 = bitcast %union.tree_node* %213 to %struct.tree_common*
  %public_flag419 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common418, i32 0, i32 2
  %bf.load420 = load i32, i32* %public_flag419, align 8
  %bf.lshr421 = lshr i32 %bf.load420, 19
  %bf.clear422 = and i32 %bf.lshr421, 1
  %tobool423 = icmp ne i32 %bf.clear422, 0
  br i1 %tobool423, label %if.end.482, label %land.lhs.true.424

land.lhs.true.424:                                ; preds = %land.lhs.true.417
  %214 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl425 = bitcast %union.tree_node* %214 to %struct.tree_decl*
  %external_flag426 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl425, i32 0, i32 5
  %215 = bitcast i48* %external_flag426 to i64*
  %bf.load427 = load i64, i64* %215, align 8
  %bf.lshr428 = lshr i64 %bf.load427, 8
  %bf.clear429 = and i64 %bf.lshr428, 1
  %bf.cast430 = trunc i64 %bf.clear429 to i32
  %tobool431 = icmp ne i32 %bf.cast430, 0
  br i1 %tobool431, label %if.end.482, label %if.then.432

if.then.432:                                      ; preds = %land.lhs.true.424
  %216 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp433 = icmp ne %union.tree_node* %216, null
  br i1 %cmp433, label %land.lhs.true.434, label %if.else.443

land.lhs.true.434:                                ; preds = %if.then.432
  %217 = load %union.tree_node*, %union.tree_node** %t, align 8
  %decl435 = bitcast %union.tree_node* %217 to %struct.tree_decl*
  %built_in_class436 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl435, i32 0, i32 5
  %218 = bitcast i48* %built_in_class436 to i64*
  %bf.load437 = load i64, i64* %218, align 8
  %bf.lshr438 = lshr i64 %bf.load437, 29
  %bf.clear439 = and i64 %bf.lshr438, 3
  %bf.cast440 = trunc i64 %bf.clear439 to i32
  %cmp441 = icmp ne i32 %bf.cast440, 0
  br i1 %cmp441, label %if.then.442, label %if.else.443

if.then.442:                                      ; preds = %land.lhs.true.434
  br label %if.end.481

if.else.443:                                      ; preds = %land.lhs.true.434, %if.then.432
  %219 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp444 = icmp ne %union.tree_node* %219, null
  br i1 %cmp444, label %land.lhs.true.445, label %if.else.452

land.lhs.true.445:                                ; preds = %if.else.443
  %220 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common446 = bitcast %union.tree_node* %220 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common446, i32 0, i32 2
  %bf.load447 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr448 = lshr i32 %bf.load447, 13
  %bf.clear449 = and i32 %bf.lshr448, 1
  %tobool450 = icmp ne i32 %bf.clear449, 0
  br i1 %tobool450, label %if.then.451, label %if.else.452

if.then.451:                                      ; preds = %land.lhs.true.445
  br label %if.end.480

if.else.452:                                      ; preds = %land.lhs.true.445, %if.else.443
  %221 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common453 = bitcast %union.tree_node* %221 to %struct.tree_common*
  %code454 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common453, i32 0, i32 2
  %bf.load455 = load i32, i32* %code454, align 8
  %bf.clear456 = and i32 %bf.load455, 255
  %cmp457 = icmp eq i32 %bf.clear456, 33
  br i1 %cmp457, label %if.then.458, label %if.else.459

if.then.458:                                      ; preds = %if.else.452
  br label %if.end.479

if.else.459:                                      ; preds = %if.else.452
  %222 = load %union.tree_node*, %union.tree_node** %name, align 8
  %223 = bitcast %union.tree_node* %222 to %struct.lang_identifier*
  %implicit_decl460 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %223, i32 0, i32 4
  %224 = load %union.tree_node*, %union.tree_node** %implicit_decl460, align 8
  %tobool461 = icmp ne %union.tree_node* %224, null
  br i1 %tobool461, label %if.then.462, label %if.else.474

if.then.462:                                      ; preds = %if.else.459
  %225 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common463 = bitcast %union.tree_node* %225 to %struct.tree_common*
  %volatile_flag464 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common463, i32 0, i32 2
  %bf.load465 = load i32, i32* %volatile_flag464, align 8
  %bf.lshr466 = lshr i32 %bf.load465, 11
  %bf.clear467 = and i32 %bf.lshr466, 1
  %tobool468 = icmp ne i32 %bf.clear467, 0
  br i1 %tobool468, label %if.end.473, label %if.then.469

if.then.469:                                      ; preds = %if.then.462
  %226 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier470 = bitcast %union.tree_node* %226 to %struct.tree_identifier*
  %id471 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier470, i32 0, i32 1
  %str472 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id471, i32 0, i32 1
  %227 = load i8*, i8** %str472, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.138, i32 0, i32 0), i8* %227)
  br label %if.end.473

if.end.473:                                       ; preds = %if.then.469, %if.then.462
  br label %if.end.478

if.else.474:                                      ; preds = %if.else.459
  %228 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier475 = bitcast %union.tree_node* %228 to %struct.tree_identifier*
  %id476 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier475, i32 0, i32 1
  %str477 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id476, i32 0, i32 1
  %229 = load i8*, i8** %str477, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.146, i32 0, i32 0), i8* %229)
  br label %if.end.478

if.end.478:                                       ; preds = %if.else.474, %if.end.473
  br label %if.end.479

if.end.479:                                       ; preds = %if.end.478, %if.then.458
  br label %if.end.480

if.end.480:                                       ; preds = %if.end.479, %if.then.451
  br label %if.end.481

if.end.481:                                       ; preds = %if.end.480, %if.then.442
  br label %if.end.482

if.end.482:                                       ; preds = %if.end.481, %land.lhs.true.424, %land.lhs.true.417, %if.end.410
  br label %if.end.685

if.else.483:                                      ; preds = %if.end.332
  %230 = load %union.tree_node*, %union.tree_node** %name, align 8
  %231 = bitcast %union.tree_node* %230 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %231, i32 0, i32 2
  %232 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  store %union.tree_node* %232, %union.tree_node** %oldlocal, align 8
  %233 = load %union.tree_node*, %union.tree_node** %name, align 8
  %234 = bitcast %union.tree_node* %233 to %struct.lang_identifier*
  %global_value484 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %234, i32 0, i32 1
  %235 = load %union.tree_node*, %union.tree_node** %global_value484, align 8
  store %union.tree_node* %235, %union.tree_node** %oldglobal, align 8
  %236 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %237 = load %union.tree_node*, %union.tree_node** %name, align 8
  %238 = bitcast %union.tree_node* %237 to %struct.lang_identifier*
  %local_value485 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %238, i32 0, i32 2
  store %union.tree_node* %236, %union.tree_node** %local_value485, align 8
  %239 = load %union.tree_node*, %union.tree_node** %oldlocal, align 8
  %cmp486 = icmp eq %union.tree_node* %239, null
  br i1 %cmp486, label %land.lhs.true.487, label %if.end.648

land.lhs.true.487:                                ; preds = %if.else.483
  %240 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %cmp488 = icmp ne %union.tree_node* %240, null
  br i1 %cmp488, label %land.lhs.true.489, label %if.end.648

land.lhs.true.489:                                ; preds = %land.lhs.true.487
  %241 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common490 = bitcast %union.tree_node* %241 to %struct.tree_common*
  %code491 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common490, i32 0, i32 2
  %bf.load492 = load i32, i32* %code491, align 8
  %bf.clear493 = and i32 %bf.load492, 255
  %cmp494 = icmp eq i32 %bf.clear493, 30
  br i1 %cmp494, label %land.lhs.true.495, label %if.end.648

land.lhs.true.495:                                ; preds = %land.lhs.true.489
  %242 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %common496 = bitcast %union.tree_node* %242 to %struct.tree_common*
  %code497 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common496, i32 0, i32 2
  %bf.load498 = load i32, i32* %code497, align 8
  %bf.clear499 = and i32 %bf.load498, 255
  %cmp500 = icmp eq i32 %bf.clear499, 30
  br i1 %cmp500, label %land.lhs.true.501, label %if.end.648

land.lhs.true.501:                                ; preds = %land.lhs.true.495
  %243 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl502 = bitcast %union.tree_node* %243 to %struct.tree_decl*
  %external_flag503 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl502, i32 0, i32 5
  %244 = bitcast i48* %external_flag503 to i64*
  %bf.load504 = load i64, i64* %244, align 8
  %bf.lshr505 = lshr i64 %bf.load504, 8
  %bf.clear506 = and i64 %bf.lshr505, 1
  %bf.cast507 = trunc i64 %bf.clear506 to i32
  %tobool508 = icmp ne i32 %bf.cast507, 0
  br i1 %tobool508, label %land.lhs.true.509, label %if.end.648

land.lhs.true.509:                                ; preds = %land.lhs.true.501
  %245 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl510 = bitcast %union.tree_node* %245 to %struct.tree_decl*
  %lang_specific511 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl510, i32 0, i32 24
  %246 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific511, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %246, i32 0, i32 0
  %247 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load512 = load i8, i8* %247, align 4
  %bf.clear513 = and i8 %bf.load512, 1
  %bf.cast514 = zext i8 %bf.clear513 to i32
  %tobool515 = icmp ne i32 %bf.cast514, 0
  br i1 %tobool515, label %if.end.648, label %if.then.516

if.then.516:                                      ; preds = %land.lhs.true.509
  %248 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common517 = bitcast %union.tree_node* %248 to %struct.tree_common*
  %type518 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common517, i32 0, i32 1
  %249 = load %union.tree_node*, %union.tree_node** %type518, align 8
  %250 = load %union.tree_node*, %union.tree_node** %name, align 8
  %251 = bitcast %union.tree_node* %250 to %struct.lang_identifier*
  %global_value519 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %251, i32 0, i32 1
  %252 = load %union.tree_node*, %union.tree_node** %global_value519, align 8
  %common520 = bitcast %union.tree_node* %252 to %struct.tree_common*
  %type521 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common520, i32 0, i32 1
  %253 = load %union.tree_node*, %union.tree_node** %type521, align 8
  %call522 = call i32 @comptypes(%union.tree_node* %249, %union.tree_node* %253)
  %tobool523 = icmp ne i32 %call522, 0
  br i1 %tobool523, label %if.else.525, label %if.then.524

if.then.524:                                      ; preds = %if.then.516
  %254 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %254, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.147, i32 0, i32 0))
  br label %if.end.647

if.else.525:                                      ; preds = %if.then.516
  %255 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl526 = bitcast %union.tree_node* %255 to %struct.tree_decl*
  %lang_specific527 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl526, i32 0, i32 24
  %256 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific527, align 8
  %base528 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %256, i32 0, i32 0
  %257 = bitcast %struct.c_lang_decl* %base528 to i8*
  %bf.load529 = load i8, i8* %257, align 4
  %bf.clear530 = and i8 %bf.load529, 1
  %bf.cast531 = zext i8 %bf.clear530 to i32
  %tobool532 = icmp ne i32 %bf.cast531, 0
  br i1 %tobool532, label %if.then.533, label %if.end.596

if.then.533:                                      ; preds = %if.else.525
  %258 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl534 = bitcast %union.tree_node* %258 to %struct.tree_decl*
  %lang_specific535 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl534, i32 0, i32 24
  %259 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific535, align 8
  %base536 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %259, i32 0, i32 0
  %260 = bitcast %struct.c_lang_decl* %base536 to i8*
  %bf.load537 = load i8, i8* %260, align 4
  %bf.clear538 = and i8 %bf.load537, 1
  %bf.cast539 = zext i8 %bf.clear538 to i32
  %261 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl540 = bitcast %union.tree_node* %261 to %struct.tree_decl*
  %lang_specific541 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl540, i32 0, i32 24
  %262 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific541, align 8
  %base542 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %262, i32 0, i32 0
  %263 = bitcast %struct.c_lang_decl* %base542 to i8*
  %264 = trunc i32 %bf.cast539 to i8
  %bf.load543 = load i8, i8* %263, align 4
  %bf.value544 = and i8 %264, 1
  %bf.clear545 = and i8 %bf.load543, -2
  %bf.set546 = or i8 %bf.clear545, %bf.value544
  store i8 %bf.set546, i8* %263, align 4
  %bf.result.cast = zext i8 %bf.value544 to i32
  %265 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl547 = bitcast %union.tree_node* %265 to %struct.tree_decl*
  %inline_flag548 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl547, i32 0, i32 5
  %266 = bitcast i48* %inline_flag548 to i64*
  %bf.load549 = load i64, i64* %266, align 8
  %bf.lshr550 = lshr i64 %bf.load549, 11
  %bf.clear551 = and i64 %bf.lshr550, 1
  %bf.cast552 = trunc i64 %bf.clear551 to i32
  %267 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl553 = bitcast %union.tree_node* %267 to %struct.tree_decl*
  %inline_flag554 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl553, i32 0, i32 5
  %268 = bitcast i48* %inline_flag554 to i64*
  %269 = zext i32 %bf.cast552 to i64
  %bf.load555 = load i64, i64* %268, align 8
  %bf.value556 = and i64 %269, 1
  %bf.shl557 = shl i64 %bf.value556, 11
  %bf.clear558 = and i64 %bf.load555, -2049
  %bf.set559 = or i64 %bf.clear558, %bf.shl557
  store i64 %bf.set559, i64* %268, align 8
  %bf.result.cast560 = trunc i64 %bf.value556 to i32
  %270 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %271 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %cmp561 = icmp eq %union.tree_node* %270, %271
  br i1 %cmp561, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.533
  br label %cond.end

cond.false:                                       ; preds = %if.then.533
  %272 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl562 = bitcast %union.tree_node* %272 to %struct.tree_decl*
  %initial563 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl562, i32 0, i32 12
  %273 = load %union.tree_node*, %union.tree_node** %initial563, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %273, %cond.false ]
  %274 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl564 = bitcast %union.tree_node* %274 to %struct.tree_decl*
  %initial565 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl564, i32 0, i32 12
  store %union.tree_node* %cond, %union.tree_node** %initial565, align 8
  %275 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl566 = bitcast %union.tree_node* %275 to %struct.tree_decl*
  %u2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl566, i32 0, i32 19
  %f = bitcast %union.anon.1* %u2 to %struct.function**
  %276 = load %struct.function*, %struct.function** %f, align 8
  %277 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl567 = bitcast %union.tree_node* %277 to %struct.tree_decl*
  %u2568 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl567, i32 0, i32 19
  %f569 = bitcast %union.anon.1* %u2568 to %struct.function**
  store %struct.function* %276, %struct.function** %f569, align 8
  %278 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl570 = bitcast %union.tree_node* %278 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl570, i32 0, i32 6
  %i = bitcast %union.anon* %u1 to i64*
  %279 = load i64, i64* %i, align 8
  %280 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl571 = bitcast %union.tree_node* %280 to %struct.tree_decl*
  %u1572 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl571, i32 0, i32 6
  %i573 = bitcast %union.anon* %u1572 to i64*
  store i64 %279, i64* %i573, align 8
  %281 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl574 = bitcast %union.tree_node* %281 to %struct.tree_decl*
  %arguments = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl574, i32 0, i32 10
  %282 = load %union.tree_node*, %union.tree_node** %arguments, align 8
  %283 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl575 = bitcast %union.tree_node* %283 to %struct.tree_decl*
  %arguments576 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl575, i32 0, i32 10
  store %union.tree_node* %282, %union.tree_node** %arguments576, align 8
  %284 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl577 = bitcast %union.tree_node* %284 to %struct.tree_decl*
  %result578 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl577, i32 0, i32 11
  %285 = load %union.tree_node*, %union.tree_node** %result578, align 8
  %286 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl579 = bitcast %union.tree_node* %286 to %struct.tree_decl*
  %result580 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl579, i32 0, i32 11
  store %union.tree_node* %285, %union.tree_node** %result580, align 8
  %287 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %common581 = bitcast %union.tree_node* %287 to %struct.tree_common*
  %asm_written_flag582 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common581, i32 0, i32 2
  %bf.load583 = load i32, i32* %asm_written_flag582, align 8
  %bf.lshr584 = lshr i32 %bf.load583, 14
  %bf.clear585 = and i32 %bf.lshr584, 1
  %288 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common586 = bitcast %union.tree_node* %288 to %struct.tree_common*
  %asm_written_flag587 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common586, i32 0, i32 2
  %bf.load588 = load i32, i32* %asm_written_flag587, align 8
  %bf.value589 = and i32 %bf.clear585, 1
  %bf.shl590 = shl i32 %bf.value589, 14
  %bf.clear591 = and i32 %bf.load588, -16385
  %bf.set592 = or i32 %bf.clear591, %bf.shl590
  store i32 %bf.set592, i32* %asm_written_flag587, align 8
  %289 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl593 = bitcast %union.tree_node* %289 to %struct.tree_decl*
  %abstract_origin = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl593, i32 0, i32 13
  %290 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8
  %291 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl594 = bitcast %union.tree_node* %291 to %struct.tree_decl*
  %abstract_origin595 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl594, i32 0, i32 13
  store %union.tree_node* %290, %union.tree_node** %abstract_origin595, align 8
  br label %if.end.596

if.end.596:                                       ; preds = %cond.end, %if.else.525
  %292 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl597 = bitcast %union.tree_node* %292 to %struct.tree_decl*
  %built_in_class598 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl597, i32 0, i32 5
  %293 = bitcast i48* %built_in_class598 to i64*
  %bf.load599 = load i64, i64* %293, align 8
  %bf.lshr600 = lshr i64 %bf.load599, 29
  %bf.clear601 = and i64 %bf.lshr600, 3
  %bf.cast602 = trunc i64 %bf.clear601 to i32
  %cmp603 = icmp ne i32 %bf.cast602, 0
  br i1 %cmp603, label %if.then.604, label %if.end.625

if.then.604:                                      ; preds = %if.end.596
  %294 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl605 = bitcast %union.tree_node* %294 to %struct.tree_decl*
  %built_in_class606 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl605, i32 0, i32 5
  %295 = bitcast i48* %built_in_class606 to i64*
  %bf.load607 = load i64, i64* %295, align 8
  %bf.lshr608 = lshr i64 %bf.load607, 29
  %bf.clear609 = and i64 %bf.lshr608, 3
  %bf.cast610 = trunc i64 %bf.clear609 to i32
  %296 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl611 = bitcast %union.tree_node* %296 to %struct.tree_decl*
  %built_in_class612 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl611, i32 0, i32 5
  %297 = bitcast i48* %built_in_class612 to i64*
  %298 = zext i32 %bf.cast610 to i64
  %bf.load613 = load i64, i64* %297, align 8
  %bf.value614 = and i64 %298, 3
  %bf.shl615 = shl i64 %bf.value614, 29
  %bf.clear616 = and i64 %bf.load613, -1610612737
  %bf.set617 = or i64 %bf.clear616, %bf.shl615
  store i64 %bf.set617, i64* %297, align 8
  %bf.result.cast618 = trunc i64 %bf.value614 to i32
  %299 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl619 = bitcast %union.tree_node* %299 to %struct.tree_decl*
  %u1620 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl619, i32 0, i32 6
  %f621 = bitcast %union.anon* %u1620 to i32*
  %300 = load i32, i32* %f621, align 4
  %301 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl622 = bitcast %union.tree_node* %301 to %struct.tree_decl*
  %u1623 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl622, i32 0, i32 6
  %f624 = bitcast %union.anon* %u1623 to i32*
  store i32 %300, i32* %f624, align 4
  br label %if.end.625

if.end.625:                                       ; preds = %if.then.604, %if.end.596
  %302 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %common626 = bitcast %union.tree_node* %302 to %struct.tree_common*
  %type627 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common626, i32 0, i32 1
  %303 = load %union.tree_node*, %union.tree_node** %type627, align 8
  %type628 = bitcast %union.tree_node* %303 to %struct.tree_type*
  %values629 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type628, i32 0, i32 1
  %304 = load %union.tree_node*, %union.tree_node** %values629, align 8
  %cmp630 = icmp ne %union.tree_node* %304, null
  br i1 %cmp630, label %land.lhs.true.631, label %if.end.646

land.lhs.true.631:                                ; preds = %if.end.625
  %305 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %decl632 = bitcast %union.tree_node* %305 to %struct.tree_decl*
  %initial633 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl632, i32 0, i32 12
  %306 = load %union.tree_node*, %union.tree_node** %initial633, align 8
  %tobool634 = icmp ne %union.tree_node* %306, null
  br i1 %tobool634, label %land.lhs.true.635, label %if.end.646

land.lhs.true.635:                                ; preds = %land.lhs.true.631
  %307 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common636 = bitcast %union.tree_node* %307 to %struct.tree_common*
  %type637 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common636, i32 0, i32 1
  %308 = load %union.tree_node*, %union.tree_node** %type637, align 8
  %type638 = bitcast %union.tree_node* %308 to %struct.tree_type*
  %values639 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type638, i32 0, i32 1
  %309 = load %union.tree_node*, %union.tree_node** %values639, align 8
  %cmp640 = icmp eq %union.tree_node* %309, null
  br i1 %cmp640, label %if.then.641, label %if.end.646

if.then.641:                                      ; preds = %land.lhs.true.635
  %310 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %common642 = bitcast %union.tree_node* %310 to %struct.tree_common*
  %type643 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common642, i32 0, i32 1
  %311 = load %union.tree_node*, %union.tree_node** %type643, align 8
  %312 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common644 = bitcast %union.tree_node* %312 to %struct.tree_common*
  %type645 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common644, i32 0, i32 1
  store %union.tree_node* %311, %union.tree_node** %type645, align 8
  br label %if.end.646

if.end.646:                                       ; preds = %if.then.641, %land.lhs.true.635, %land.lhs.true.631, %if.end.625
  br label %if.end.647

if.end.647:                                       ; preds = %if.end.646, %if.then.524
  br label %if.end.648

if.end.648:                                       ; preds = %if.end.647, %land.lhs.true.509, %land.lhs.true.501, %land.lhs.true.495, %land.lhs.true.489, %land.lhs.true.487, %if.else.483
  %313 = load %union.tree_node*, %union.tree_node** %oldlocal, align 8
  %cmp649 = icmp eq %union.tree_node* %313, null
  br i1 %cmp649, label %land.lhs.true.650, label %if.end.679

land.lhs.true.650:                                ; preds = %if.end.648
  %314 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl651 = bitcast %union.tree_node* %314 to %struct.tree_decl*
  %external_flag652 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl651, i32 0, i32 5
  %315 = bitcast i48* %external_flag652 to i64*
  %bf.load653 = load i64, i64* %315, align 8
  %bf.lshr654 = lshr i64 %bf.load653, 8
  %bf.clear655 = and i64 %bf.lshr654, 1
  %bf.cast656 = trunc i64 %bf.clear655 to i32
  %tobool657 = icmp ne i32 %bf.cast656, 0
  br i1 %tobool657, label %land.lhs.true.658, label %if.end.679

land.lhs.true.658:                                ; preds = %land.lhs.true.650
  %316 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common659 = bitcast %union.tree_node* %316 to %struct.tree_common*
  %public_flag660 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common659, i32 0, i32 2
  %bf.load661 = load i32, i32* %public_flag660, align 8
  %bf.lshr662 = lshr i32 %bf.load661, 19
  %bf.clear663 = and i32 %bf.lshr662, 1
  %tobool664 = icmp ne i32 %bf.clear663, 0
  br i1 %tobool664, label %if.then.665, label %if.end.679

if.then.665:                                      ; preds = %land.lhs.true.658
  %317 = load %union.tree_node*, %union.tree_node** %oldglobal, align 8
  %cmp666 = icmp eq %union.tree_node* %317, null
  br i1 %cmp666, label %if.then.667, label %if.end.673

if.then.667:                                      ; preds = %if.then.665
  %318 = load %union.tree_node*, %union.tree_node** %name, align 8
  %common668 = bitcast %union.tree_node* %318 to %struct.tree_common*
  %public_flag669 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common668, i32 0, i32 2
  %bf.load670 = load i32, i32* %public_flag669, align 8
  %bf.clear671 = and i32 %bf.load670, -524289
  %bf.set672 = or i32 %bf.clear671, 524288
  store i32 %bf.set672, i32* %public_flag669, align 8
  br label %if.end.673

if.end.673:                                       ; preds = %if.then.667, %if.then.665
  %319 = load %union.tree_node*, %union.tree_node** %name, align 8
  %320 = bitcast %union.tree_node* %319 to %struct.lang_identifier*
  %limbo_value674 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %320, i32 0, i32 6
  %321 = load %union.tree_node*, %union.tree_node** %limbo_value674, align 8
  %cmp675 = icmp eq %union.tree_node* %321, null
  br i1 %cmp675, label %if.then.676, label %if.end.678

if.then.676:                                      ; preds = %if.end.673
  %322 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %323 = load %union.tree_node*, %union.tree_node** %name, align 8
  %324 = bitcast %union.tree_node* %323 to %struct.lang_identifier*
  %limbo_value677 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %324, i32 0, i32 6
  store %union.tree_node* %322, %union.tree_node** %limbo_value677, align 8
  br label %if.end.678

if.end.678:                                       ; preds = %if.then.676, %if.end.673
  br label %if.end.679

if.end.679:                                       ; preds = %if.end.678, %land.lhs.true.658, %land.lhs.true.650, %if.end.648
  %325 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %326 = load %union.tree_node*, %union.tree_node** %oldlocal, align 8
  call void @warn_if_shadowing(%union.tree_node* %325, %union.tree_node* %326)
  %327 = load %union.tree_node*, %union.tree_node** %oldlocal, align 8
  %cmp680 = icmp ne %union.tree_node* %327, null
  br i1 %cmp680, label %if.then.681, label %if.end.684

if.then.681:                                      ; preds = %if.end.679
  %328 = load %union.tree_node*, %union.tree_node** %name, align 8
  %329 = load %union.tree_node*, %union.tree_node** %oldlocal, align 8
  %330 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %330, i32 0, i32 2
  %331 = load %union.tree_node*, %union.tree_node** %shadowed, align 8
  %call682 = call %union.tree_node* @tree_cons(%union.tree_node* %328, %union.tree_node* %329, %union.tree_node* %331)
  %332 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %shadowed683 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %332, i32 0, i32 2
  store %union.tree_node* %call682, %union.tree_node** %shadowed683, align 8
  br label %if.end.684

if.end.684:                                       ; preds = %if.then.681, %if.end.679
  br label %if.end.685

if.end.685:                                       ; preds = %if.end.684, %if.end.482
  %333 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common686 = bitcast %union.tree_node* %333 to %struct.tree_common*
  %type687 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common686, i32 0, i32 1
  %334 = load %union.tree_node*, %union.tree_node** %type687, align 8
  %335 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp688 = icmp ne %union.tree_node* %334, %335
  br i1 %cmp688, label %land.lhs.true.689, label %if.end.720

land.lhs.true.689:                                ; preds = %if.end.685
  %336 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common690 = bitcast %union.tree_node* %336 to %struct.tree_common*
  %type691 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common690, i32 0, i32 1
  %337 = load %union.tree_node*, %union.tree_node** %type691, align 8
  %type692 = bitcast %union.tree_node* %337 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type692, i32 0, i32 2
  %338 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp693 = icmp ne %union.tree_node* %338, null
  br i1 %cmp693, label %if.end.720, label %if.then.694

if.then.694:                                      ; preds = %land.lhs.true.689
  %339 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common695 = bitcast %union.tree_node* %339 to %struct.tree_common*
  %type696 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common695, i32 0, i32 1
  %340 = load %union.tree_node*, %union.tree_node** %type696, align 8
  store %union.tree_node* %340, %union.tree_node** %element, align 8
  br label %while.cond.697

while.cond.697:                                   ; preds = %while.body.703, %if.then.694
  %341 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common698 = bitcast %union.tree_node* %341 to %struct.tree_common*
  %code699 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common698, i32 0, i32 2
  %bf.load700 = load i32, i32* %code699, align 8
  %bf.clear701 = and i32 %bf.load700, 255
  %cmp702 = icmp eq i32 %bf.clear701, 18
  br i1 %cmp702, label %while.body.703, label %while.end.706

while.body.703:                                   ; preds = %while.cond.697
  %342 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common704 = bitcast %union.tree_node* %342 to %struct.tree_common*
  %type705 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common704, i32 0, i32 1
  %343 = load %union.tree_node*, %union.tree_node** %type705, align 8
  store %union.tree_node* %343, %union.tree_node** %element, align 8
  br label %while.cond.697

while.end.706:                                    ; preds = %while.cond.697
  %344 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common707 = bitcast %union.tree_node* %344 to %struct.tree_common*
  %code708 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common707, i32 0, i32 2
  %bf.load709 = load i32, i32* %code708, align 8
  %bf.clear710 = and i32 %bf.load709, 255
  %cmp711 = icmp eq i32 %bf.clear710, 20
  br i1 %cmp711, label %if.then.718, label %lor.lhs.false.712

lor.lhs.false.712:                                ; preds = %while.end.706
  %345 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common713 = bitcast %union.tree_node* %345 to %struct.tree_common*
  %code714 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common713, i32 0, i32 2
  %bf.load715 = load i32, i32* %code714, align 8
  %bf.clear716 = and i32 %bf.load715, 255
  %cmp717 = icmp eq i32 %bf.clear716, 21
  br i1 %cmp717, label %if.then.718, label %if.end.719

if.then.718:                                      ; preds = %lor.lhs.false.712, %while.end.706
  %346 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %n_incomplete = getelementptr inbounds %struct.binding_level, %struct.binding_level* %346, i32 0, i32 11
  %347 = load i32, i32* %n_incomplete, align 4
  %inc = add nsw i32 %347, 1
  store i32 %inc, i32* %n_incomplete, align 4
  br label %if.end.719

if.end.719:                                       ; preds = %if.then.718, %lor.lhs.false.712
  br label %if.end.720

if.end.720:                                       ; preds = %if.end.719, %land.lhs.true.689, %if.end.685
  br label %if.end.721

if.end.721:                                       ; preds = %if.end.720, %if.end.27
  %348 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %348, i32 0, i32 0
  %349 = load %union.tree_node*, %union.tree_node** %names, align 8
  %350 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common722 = bitcast %union.tree_node* %350 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common722, i32 0, i32 0
  store %union.tree_node* %349, %union.tree_node** %chain, align 8
  %351 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %352 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  %names723 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %352, i32 0, i32 0
  store %union.tree_node* %351, %union.tree_node** %names723, align 8
  %353 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  store %union.tree_node* %353, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.721, %if.end.147, %if.then.137
  %354 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %354
}

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare i8* @ggc_alloc_cleared(i64) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @lookup_name_current_level(%union.tree_node* %name) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %name.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %3 = bitcast %union.tree_node* %2 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %3, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  store %union.tree_node* %4, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %6 = bitcast %union.tree_node* %5 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %6, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  %cmp1 = icmp eq %union.tree_node* %7, null
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %8 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %8, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %names, align 8
  store %union.tree_node* %9, %union.tree_node** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.3
  %10 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool = icmp ne %union.tree_node* %10, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %union.tree_node*, %union.tree_node** %t, align 8
  %decl = bitcast %union.tree_node* %11 to %struct.tree_decl*
  %name4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %12 = load %union.tree_node*, %union.tree_node** %name4, align 8
  %13 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %cmp5 = icmp eq %union.tree_node* %12, %13
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %for.body
  br label %for.end

if.end.7:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.7
  %14 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common = bitcast %union.tree_node* %14 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %15, %union.tree_node** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.6, %for.cond
  %16 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %16, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.2, %if.then
  %17 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %17
}

declare void @pedwarn(i8*, ...) #1

declare void @pedwarn_with_file_and_line(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @duplicate_decls(%union.tree_node* %newdecl, %union.tree_node* %olddecl, i32 %different_binding_level) #0 {
entry:
  %retval = alloca i32, align 4
  %newdecl.addr = alloca %union.tree_node*, align 8
  %olddecl.addr = alloca %union.tree_node*, align 8
  %different_binding_level.addr = alloca i32, align 4
  %types_match = alloca i32, align 4
  %new_is_definition = alloca i32, align 4
  %oldtype = alloca %union.tree_node*, align 8
  %newtype = alloca %union.tree_node*, align 8
  %errmsg = alloca i32, align 4
  %oldreturntype = alloca %union.tree_node*, align 8
  %newreturntype = alloca %union.tree_node*, align 8
  %trytype = alloca %union.tree_node*, align 8
  %trytype373 = alloca %union.tree_node*, align 8
  %trytype409 = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %type652 = alloca %union.tree_node*, align 8
  %type748 = alloca %union.tree_node*, align 8
  %parm = alloca %union.tree_node*, align 8
  %nargs = alloca i32, align 4
  %write_olddecl = alloca %union.tree_node*, align 8
  %olddecl_uid = alloca i32, align 4
  store %union.tree_node* %newdecl, %union.tree_node** %newdecl.addr, align 8
  store %union.tree_node* %olddecl, %union.tree_node** %olddecl.addr, align 8
  store i32 %different_binding_level, i32* %different_binding_level.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8
  %call = call i32 @comptypes(%union.tree_node* %1, %union.tree_node* %3)
  store i32 %call, i32* %types_match, align 4
  %4 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common3 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common3, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 12
  %6 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp4 = icmp ne %union.tree_node* %6, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  store i32 %land.ext, i32* %new_is_definition, align 4
  %8 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common5 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %type6, align 8
  store %union.tree_node* %9, %union.tree_node** %oldtype, align 8
  %10 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common7 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type8, align 8
  store %union.tree_node* %11, %union.tree_node** %newtype, align 8
  store i32 0, i32* %errmsg, align 4
  %12 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common9 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load11 = load i32, i32* %code10, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %idxprom = sext i32 %bf.clear12 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %13 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %13 to i32
  %cmp13 = icmp eq i32 %conv, 100
  br i1 %cmp13, label %if.then, label %if.end.137

if.then:                                          ; preds = %land.end
  %14 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common15 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common15, i32 0, i32 2
  %bf.load17 = load i32, i32* %code16, align 8
  %bf.clear18 = and i32 %bf.load17, 255
  %cmp19 = icmp eq i32 %bf.clear18, 30
  br i1 %cmp19, label %land.lhs.true, label %if.end.133

land.lhs.true:                                    ; preds = %if.then
  %15 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common21 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp eq i32 %bf.clear24, 30
  br i1 %cmp25, label %land.lhs.true.27, label %if.end.133

land.lhs.true.27:                                 ; preds = %land.lhs.true
  %16 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl28 = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %uninlinable = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl28, i32 0, i32 5
  %17 = bitcast i48* %uninlinable to i64*
  %bf.load29 = load i64, i64* %17, align 8
  %bf.lshr = lshr i64 %bf.load29, 36
  %bf.clear30 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear30 to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.then.38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.27
  %18 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl31 = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %uninlinable32 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl31, i32 0, i32 5
  %19 = bitcast i48* %uninlinable32 to i64*
  %bf.load33 = load i64, i64* %19, align 8
  %bf.lshr34 = lshr i64 %bf.load33, 36
  %bf.clear35 = and i64 %bf.lshr34, 1
  %bf.cast36 = trunc i64 %bf.clear35 to i32
  %tobool37 = icmp ne i32 %bf.cast36, 0
  br i1 %tobool37, label %if.then.38, label %if.end.133

if.then.38:                                       ; preds = %lor.lhs.false, %land.lhs.true.27
  %20 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl39 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl39, i32 0, i32 24
  %21 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %21, i32 0, i32 0
  %22 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load40 = load i8, i8* %22, align 4
  %bf.clear41 = and i8 %bf.load40, 1
  %bf.cast42 = zext i8 %bf.clear41 to i32
  %tobool43 = icmp ne i32 %bf.cast42, 0
  br i1 %tobool43, label %land.lhs.true.44, label %if.else

land.lhs.true.44:                                 ; preds = %if.then.38
  %23 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl45 = bitcast %union.tree_node* %23 to %struct.tree_decl*
  %uninlinable46 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl45, i32 0, i32 5
  %24 = bitcast i48* %uninlinable46 to i64*
  %bf.load47 = load i64, i64* %24, align 8
  %bf.lshr48 = lshr i64 %bf.load47, 36
  %bf.clear49 = and i64 %bf.lshr48, 1
  %bf.cast50 = trunc i64 %bf.clear49 to i32
  %tobool51 = icmp ne i32 %bf.cast50, 0
  br i1 %tobool51, label %land.lhs.true.52, label %if.else

land.lhs.true.52:                                 ; preds = %land.lhs.true.44
  %25 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl53 = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %attributes = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl53, i32 0, i32 16
  %26 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  %call54 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %26)
  %tobool55 = icmp ne %union.tree_node* %call54, null
  br i1 %tobool55, label %if.then.56, label %if.else

if.then.56:                                       ; preds = %land.lhs.true.52
  br label %if.end.132

if.else:                                          ; preds = %land.lhs.true.52, %land.lhs.true.44, %if.then.38
  %27 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl57 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %lang_specific58 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl57, i32 0, i32 24
  %28 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific58, align 8
  %base59 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %28, i32 0, i32 0
  %29 = bitcast %struct.c_lang_decl* %base59 to i8*
  %bf.load60 = load i8, i8* %29, align 4
  %bf.clear61 = and i8 %bf.load60, 1
  %bf.cast62 = zext i8 %bf.clear61 to i32
  %tobool63 = icmp ne i32 %bf.cast62, 0
  br i1 %tobool63, label %land.lhs.true.64, label %if.else.78

land.lhs.true.64:                                 ; preds = %if.else
  %30 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl65 = bitcast %union.tree_node* %30 to %struct.tree_decl*
  %uninlinable66 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl65, i32 0, i32 5
  %31 = bitcast i48* %uninlinable66 to i64*
  %bf.load67 = load i64, i64* %31, align 8
  %bf.lshr68 = lshr i64 %bf.load67, 36
  %bf.clear69 = and i64 %bf.lshr68, 1
  %bf.cast70 = trunc i64 %bf.clear69 to i32
  %tobool71 = icmp ne i32 %bf.cast70, 0
  br i1 %tobool71, label %land.lhs.true.72, label %if.else.78

land.lhs.true.72:                                 ; preds = %land.lhs.true.64
  %32 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl73 = bitcast %union.tree_node* %32 to %struct.tree_decl*
  %attributes74 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl73, i32 0, i32 16
  %33 = load %union.tree_node*, %union.tree_node** %attributes74, align 8
  %call75 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %33)
  %tobool76 = icmp ne %union.tree_node* %call75, null
  br i1 %tobool76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %land.lhs.true.72
  br label %if.end.131

if.else.78:                                       ; preds = %land.lhs.true.72, %land.lhs.true.64, %if.else
  %34 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl79 = bitcast %union.tree_node* %34 to %struct.tree_decl*
  %lang_specific80 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl79, i32 0, i32 24
  %35 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific80, align 8
  %base81 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %35, i32 0, i32 0
  %36 = bitcast %struct.c_lang_decl* %base81 to i8*
  %bf.load82 = load i8, i8* %36, align 4
  %bf.clear83 = and i8 %bf.load82, 1
  %bf.cast84 = zext i8 %bf.clear83 to i32
  %tobool85 = icmp ne i32 %bf.cast84, 0
  br i1 %tobool85, label %land.lhs.true.86, label %if.else.108

land.lhs.true.86:                                 ; preds = %if.else.78
  %37 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl87 = bitcast %union.tree_node* %37 to %struct.tree_decl*
  %lang_specific88 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl87, i32 0, i32 24
  %38 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific88, align 8
  %base89 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %38, i32 0, i32 0
  %39 = bitcast %struct.c_lang_decl* %base89 to i8*
  %bf.load90 = load i8, i8* %39, align 4
  %bf.clear91 = and i8 %bf.load90, 1
  %bf.cast92 = zext i8 %bf.clear91 to i32
  %tobool93 = icmp ne i32 %bf.cast92, 0
  br i1 %tobool93, label %if.else.108, label %land.lhs.true.94

land.lhs.true.94:                                 ; preds = %land.lhs.true.86
  %40 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl95 = bitcast %union.tree_node* %40 to %struct.tree_decl*
  %uninlinable96 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl95, i32 0, i32 5
  %41 = bitcast i48* %uninlinable96 to i64*
  %bf.load97 = load i64, i64* %41, align 8
  %bf.lshr98 = lshr i64 %bf.load97, 36
  %bf.clear99 = and i64 %bf.lshr98, 1
  %bf.cast100 = trunc i64 %bf.clear99 to i32
  %tobool101 = icmp ne i32 %bf.cast100, 0
  br i1 %tobool101, label %land.lhs.true.102, label %if.else.108

land.lhs.true.102:                                ; preds = %land.lhs.true.94
  %42 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl103 = bitcast %union.tree_node* %42 to %struct.tree_decl*
  %attributes104 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl103, i32 0, i32 16
  %43 = load %union.tree_node*, %union.tree_node** %attributes104, align 8
  %call105 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %43)
  %tobool106 = icmp ne %union.tree_node* %call105, null
  br i1 %tobool106, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %land.lhs.true.102
  %44 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %44, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.259, i32 0, i32 0))
  %45 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.260, i32 0, i32 0))
  br label %if.end.130

if.else.108:                                      ; preds = %land.lhs.true.102, %land.lhs.true.94, %land.lhs.true.86, %if.else.78
  %46 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl109 = bitcast %union.tree_node* %46 to %struct.tree_decl*
  %lang_specific110 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl109, i32 0, i32 24
  %47 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific110, align 8
  %base111 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %47, i32 0, i32 0
  %48 = bitcast %struct.c_lang_decl* %base111 to i8*
  %bf.load112 = load i8, i8* %48, align 4
  %bf.clear113 = and i8 %bf.load112, 1
  %bf.cast114 = zext i8 %bf.clear113 to i32
  %tobool115 = icmp ne i32 %bf.cast114, 0
  br i1 %tobool115, label %land.lhs.true.116, label %if.end

land.lhs.true.116:                                ; preds = %if.else.108
  %49 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl117 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %uninlinable118 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl117, i32 0, i32 5
  %50 = bitcast i48* %uninlinable118 to i64*
  %bf.load119 = load i64, i64* %50, align 8
  %bf.lshr120 = lshr i64 %bf.load119, 36
  %bf.clear121 = and i64 %bf.lshr120, 1
  %bf.cast122 = trunc i64 %bf.clear121 to i32
  %tobool123 = icmp ne i32 %bf.cast122, 0
  br i1 %tobool123, label %land.lhs.true.124, label %if.end

land.lhs.true.124:                                ; preds = %land.lhs.true.116
  %51 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl125 = bitcast %union.tree_node* %51 to %struct.tree_decl*
  %attributes126 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl125, i32 0, i32 16
  %52 = load %union.tree_node*, %union.tree_node** %attributes126, align 8
  %call127 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %52)
  %tobool128 = icmp ne %union.tree_node* %call127, null
  br i1 %tobool128, label %if.then.129, label %if.end

if.then.129:                                      ; preds = %land.lhs.true.124
  %53 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %53, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.261, i32 0, i32 0))
  %54 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %54, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.262, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.129, %land.lhs.true.124, %land.lhs.true.116, %if.else.108
  br label %if.end.130

if.end.130:                                       ; preds = %if.end, %if.then.107
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.then.77
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.then.56
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %lor.lhs.false, %land.lhs.true, %if.then
  %55 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 2), align 8
  %56 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %57 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %call134 = call %union.tree_node* %55(%union.tree_node* %56, %union.tree_node* %57)
  %58 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl135 = bitcast %union.tree_node* %58 to %struct.tree_decl*
  %attributes136 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl135, i32 0, i32 16
  store %union.tree_node* %call134, %union.tree_node** %attributes136, align 8
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.133, %land.end
  %59 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common138 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %code139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 2
  %bf.load140 = load i32, i32* %code139, align 8
  %bf.clear141 = and i32 %bf.load140, 255
  %cmp142 = icmp eq i32 %bf.clear141, 0
  br i1 %cmp142, label %if.then.151, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %if.end.137
  %60 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common145 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code146 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 2
  %bf.load147 = load i32, i32* %code146, align 8
  %bf.clear148 = and i32 %bf.load147, 255
  %cmp149 = icmp eq i32 %bf.clear148, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %lor.lhs.false.144, %if.end.137
  store i32 0, i32* %types_match, align 4
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.151, %lor.lhs.false.144
  %61 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common153 = bitcast %union.tree_node* %61 to %struct.tree_common*
  %code154 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common153, i32 0, i32 2
  %bf.load155 = load i32, i32* %code154, align 8
  %bf.clear156 = and i32 %bf.load155, 255
  %62 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common157 = bitcast %union.tree_node* %62 to %struct.tree_common*
  %code158 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common157, i32 0, i32 2
  %bf.load159 = load i32, i32* %code158, align 8
  %bf.clear160 = and i32 %bf.load159, 255
  %cmp161 = icmp ne i32 %bf.clear156, %bf.clear160
  br i1 %cmp161, label %if.then.163, label %if.end.230

if.then.163:                                      ; preds = %if.end.152
  %63 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common164 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %code165 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common164, i32 0, i32 2
  %bf.load166 = load i32, i32* %code165, align 8
  %bf.clear167 = and i32 %bf.load166, 255
  %cmp168 = icmp eq i32 %bf.clear167, 30
  br i1 %cmp168, label %land.lhs.true.170, label %if.else.228

land.lhs.true.170:                                ; preds = %if.then.163
  %64 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl171 = bitcast %union.tree_node* %64 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl171, i32 0, i32 5
  %65 = bitcast i48* %built_in_class to i64*
  %bf.load172 = load i64, i64* %65, align 8
  %bf.lshr173 = lshr i64 %bf.load172, 29
  %bf.clear174 = and i64 %bf.lshr173, 3
  %bf.cast175 = trunc i64 %bf.clear174 to i32
  %cmp176 = icmp ne i32 %bf.cast175, 0
  br i1 %cmp176, label %if.then.184, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %land.lhs.true.170
  %66 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common179 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common179, i32 0, i32 2
  %bf.load180 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 13
  %bf.clear182 = and i32 %bf.lshr181, 1
  %tobool183 = icmp ne i32 %bf.clear182, 0
  br i1 %tobool183, label %if.then.184, label %if.else.228

if.then.184:                                      ; preds = %lor.lhs.false.178, %land.lhs.true.170
  %67 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common185 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common185, i32 0, i32 2
  %bf.load186 = load i32, i32* %public_flag, align 8
  %bf.lshr187 = lshr i32 %bf.load186, 19
  %bf.clear188 = and i32 %bf.lshr187, 1
  %tobool189 = icmp ne i32 %bf.clear188, 0
  br i1 %tobool189, label %if.else.206, label %if.then.190

if.then.190:                                      ; preds = %if.then.184
  %68 = load i32, i32* @warn_shadow, align 4
  %tobool191 = icmp ne i32 %68, 0
  br i1 %tobool191, label %if.else.193, label %if.then.192

if.then.192:                                      ; preds = %if.then.190
  br label %if.end.205

if.else.193:                                      ; preds = %if.then.190
  %69 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl194 = bitcast %union.tree_node* %69 to %struct.tree_decl*
  %built_in_class195 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl194, i32 0, i32 5
  %70 = bitcast i48* %built_in_class195 to i64*
  %bf.load196 = load i64, i64* %70, align 8
  %bf.lshr197 = lshr i64 %bf.load196, 29
  %bf.clear198 = and i64 %bf.lshr197, 3
  %bf.cast199 = trunc i64 %bf.clear198 to i32
  %cmp200 = icmp ne i32 %bf.cast199, 0
  br i1 %cmp200, label %if.then.202, label %if.else.203

if.then.202:                                      ; preds = %if.else.193
  %71 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %71, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.263, i32 0, i32 0))
  br label %if.end.204

if.else.203:                                      ; preds = %if.else.193
  %72 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %72, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.264, i32 0, i32 0))
  br label %if.end.204

if.end.204:                                       ; preds = %if.else.203, %if.then.202
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204, %if.then.192
  br label %if.end.227

if.else.206:                                      ; preds = %if.then.184
  %73 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl207 = bitcast %union.tree_node* %73 to %struct.tree_decl*
  %built_in_class208 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl207, i32 0, i32 5
  %74 = bitcast i48* %built_in_class208 to i64*
  %bf.load209 = load i64, i64* %74, align 8
  %bf.lshr210 = lshr i64 %bf.load209, 29
  %bf.clear211 = and i64 %bf.lshr210, 3
  %bf.cast212 = trunc i64 %bf.clear211 to i32
  %cmp213 = icmp ne i32 %bf.cast212, 0
  br i1 %cmp213, label %if.else.216, label %if.then.215

if.then.215:                                      ; preds = %if.else.206
  %75 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %75, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.265, i32 0, i32 0))
  br label %if.end.226

if.else.216:                                      ; preds = %if.else.206
  %76 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common217 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %unsigned_flag218 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common217, i32 0, i32 2
  %bf.load219 = load i32, i32* %unsigned_flag218, align 8
  %bf.lshr220 = lshr i32 %bf.load219, 13
  %bf.clear221 = and i32 %bf.lshr220, 1
  %tobool222 = icmp ne i32 %bf.clear221, 0
  br i1 %tobool222, label %if.then.223, label %if.else.224

if.then.223:                                      ; preds = %if.else.216
  %77 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %77, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.266, i32 0, i32 0))
  br label %if.end.225

if.else.224:                                      ; preds = %if.else.216
  %78 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %78, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.266, i32 0, i32 0))
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.224, %if.then.223
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.225, %if.then.215
  br label %if.end.227

if.end.227:                                       ; preds = %if.end.226, %if.end.205
  br label %if.end.229

if.else.228:                                      ; preds = %lor.lhs.false.178, %if.then.163
  %79 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %79, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.267, i32 0, i32 0))
  %80 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %80, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0))
  br label %if.end.229

if.end.229:                                       ; preds = %if.else.228, %if.end.227
  store i32 0, i32* %retval
  br label %return

if.end.230:                                       ; preds = %if.end.152
  %81 = load i32, i32* %types_match, align 4
  %tobool231 = icmp ne i32 %81, 0
  br i1 %tobool231, label %land.lhs.true.232, label %if.end.253

land.lhs.true.232:                                ; preds = %if.end.230
  %82 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common233 = bitcast %union.tree_node* %82 to %struct.tree_common*
  %code234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common233, i32 0, i32 2
  %bf.load235 = load i32, i32* %code234, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 35
  br i1 %cmp237, label %land.lhs.true.239, label %if.end.253

land.lhs.true.239:                                ; preds = %land.lhs.true.232
  %83 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common240 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common240, i32 0, i32 2
  %bf.load241 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr242 = lshr i32 %bf.load241, 14
  %bf.clear243 = and i32 %bf.lshr242, 1
  %tobool244 = icmp ne i32 %bf.clear243, 0
  br i1 %tobool244, label %land.lhs.true.245, label %if.end.253

land.lhs.true.245:                                ; preds = %land.lhs.true.239
  %84 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common246 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %asm_written_flag247 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common246, i32 0, i32 2
  %bf.load248 = load i32, i32* %asm_written_flag247, align 8
  %bf.lshr249 = lshr i32 %bf.load248, 14
  %bf.clear250 = and i32 %bf.lshr249, 1
  %tobool251 = icmp ne i32 %bf.clear250, 0
  br i1 %tobool251, label %if.end.253, label %if.then.252

if.then.252:                                      ; preds = %land.lhs.true.245
  store i32 1, i32* %retval
  br label %return

if.end.253:                                       ; preds = %land.lhs.true.245, %land.lhs.true.239, %land.lhs.true.232, %if.end.230
  %85 = load i32, i32* @flag_traditional, align 4
  %tobool254 = icmp ne i32 %85, 0
  br i1 %tobool254, label %land.lhs.true.255, label %if.else.272

land.lhs.true.255:                                ; preds = %if.end.253
  %86 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common256 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %code257 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common256, i32 0, i32 2
  %bf.load258 = load i32, i32* %code257, align 8
  %bf.clear259 = and i32 %bf.load258, 255
  %cmp260 = icmp eq i32 %bf.clear259, 30
  br i1 %cmp260, label %land.lhs.true.262, label %if.else.272

land.lhs.true.262:                                ; preds = %land.lhs.true.255
  %87 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl263 = bitcast %union.tree_node* %87 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl263, i32 0, i32 8
  %88 = load %union.tree_node*, %union.tree_node** %name, align 8
  %89 = bitcast %union.tree_node* %88 to %struct.lang_identifier*
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %89, i32 0, i32 4
  %90 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  %91 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %cmp264 = icmp eq %union.tree_node* %90, %91
  br i1 %cmp264, label %land.lhs.true.266, label %if.else.272

land.lhs.true.266:                                ; preds = %land.lhs.true.262
  %92 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl267 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %initial268 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl267, i32 0, i32 12
  %93 = load %union.tree_node*, %union.tree_node** %initial268, align 8
  %cmp269 = icmp eq %union.tree_node* %93, null
  br i1 %cmp269, label %if.then.271, label %if.else.272

if.then.271:                                      ; preds = %land.lhs.true.266
  br label %if.end.989

if.else.272:                                      ; preds = %land.lhs.true.266, %land.lhs.true.262, %land.lhs.true.255, %if.end.253
  %94 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common273 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %code274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 2
  %bf.load275 = load i32, i32* %code274, align 8
  %bf.clear276 = and i32 %bf.load275, 255
  %cmp277 = icmp eq i32 %bf.clear276, 30
  br i1 %cmp277, label %land.lhs.true.279, label %if.else.429

land.lhs.true.279:                                ; preds = %if.else.272
  %95 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl280 = bitcast %union.tree_node* %95 to %struct.tree_decl*
  %built_in_class281 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl280, i32 0, i32 5
  %96 = bitcast i48* %built_in_class281 to i64*
  %bf.load282 = load i64, i64* %96, align 8
  %bf.lshr283 = lshr i64 %bf.load282, 29
  %bf.clear284 = and i64 %bf.lshr283, 3
  %bf.cast285 = trunc i64 %bf.clear284 to i32
  %cmp286 = icmp ne i32 %bf.cast285, 0
  br i1 %cmp286, label %if.then.288, label %if.else.429

if.then.288:                                      ; preds = %land.lhs.true.279
  %97 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common289 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %public_flag290 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common289, i32 0, i32 2
  %bf.load291 = load i32, i32* %public_flag290, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 19
  %bf.clear293 = and i32 %bf.lshr292, 1
  %tobool294 = icmp ne i32 %bf.clear293, 0
  br i1 %tobool294, label %if.else.299, label %if.then.295

if.then.295:                                      ; preds = %if.then.288
  %98 = load i32, i32* @warn_shadow, align 4
  %tobool296 = icmp ne i32 %98, 0
  br i1 %tobool296, label %if.then.297, label %if.end.298

if.then.297:                                      ; preds = %if.then.295
  %99 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %99, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.263, i32 0, i32 0))
  br label %if.end.298

if.end.298:                                       ; preds = %if.then.297, %if.then.295
  store i32 0, i32* %retval
  br label %return

if.else.299:                                      ; preds = %if.then.288
  %100 = load i32, i32* %types_match, align 4
  %tobool300 = icmp ne i32 %100, 0
  br i1 %tobool300, label %if.else.398, label %if.then.301

if.then.301:                                      ; preds = %if.else.299
  %101 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common302 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %type303 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common302, i32 0, i32 1
  %102 = load %union.tree_node*, %union.tree_node** %type303, align 8
  store %union.tree_node* %102, %union.tree_node** %oldreturntype, align 8
  %103 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common304 = bitcast %union.tree_node* %103 to %struct.tree_common*
  %type305 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common304, i32 0, i32 1
  %104 = load %union.tree_node*, %union.tree_node** %type305, align 8
  store %union.tree_node* %104, %union.tree_node** %newreturntype, align 8
  %105 = load %union.tree_node*, %union.tree_node** %oldreturntype, align 8
  %type306 = bitcast %union.tree_node* %105 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type306, i32 0, i32 6
  %bf.load307 = load i32, i32* %mode, align 4
  %bf.lshr308 = lshr i32 %bf.load307, 9
  %bf.clear309 = and i32 %bf.lshr308, 127
  %106 = load %union.tree_node*, %union.tree_node** %newreturntype, align 8
  %type310 = bitcast %union.tree_node* %106 to %struct.tree_type*
  %mode311 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type310, i32 0, i32 6
  %bf.load312 = load i32, i32* %mode311, align 4
  %bf.lshr313 = lshr i32 %bf.load312, 9
  %bf.clear314 = and i32 %bf.lshr313, 127
  %cmp315 = icmp eq i32 %bf.clear309, %bf.clear314
  br i1 %cmp315, label %if.then.317, label %if.end.327

if.then.317:                                      ; preds = %if.then.301
  %107 = load %union.tree_node*, %union.tree_node** %newreturntype, align 8
  %108 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type318 = bitcast %union.tree_node* %108 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type318, i32 0, i32 1
  %109 = load %union.tree_node*, %union.tree_node** %values, align 8
  %call319 = call %union.tree_node* @build_function_type(%union.tree_node* %107, %union.tree_node* %109)
  store %union.tree_node* %call319, %union.tree_node** %trytype, align 8
  %110 = load %union.tree_node*, %union.tree_node** %trytype, align 8
  %111 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type320 = bitcast %union.tree_node* %111 to %struct.tree_type*
  %attributes321 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type320, i32 0, i32 4
  %112 = load %union.tree_node*, %union.tree_node** %attributes321, align 8
  %call322 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %110, %union.tree_node* %112)
  store %union.tree_node* %call322, %union.tree_node** %trytype, align 8
  %113 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %114 = load %union.tree_node*, %union.tree_node** %trytype, align 8
  %call323 = call i32 @comptypes(%union.tree_node* %113, %union.tree_node* %114)
  store i32 %call323, i32* %types_match, align 4
  %115 = load i32, i32* %types_match, align 4
  %tobool324 = icmp ne i32 %115, 0
  br i1 %tobool324, label %if.then.325, label %if.end.326

if.then.325:                                      ; preds = %if.then.317
  %116 = load %union.tree_node*, %union.tree_node** %trytype, align 8
  store %union.tree_node* %116, %union.tree_node** %oldtype, align 8
  br label %if.end.326

if.end.326:                                       ; preds = %if.then.325, %if.then.317
  br label %if.end.327

if.end.327:                                       ; preds = %if.end.326, %if.then.301
  %117 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common328 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %type329 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common328, i32 0, i32 1
  %118 = load %union.tree_node*, %union.tree_node** %type329, align 8
  %type330 = bitcast %union.tree_node* %118 to %struct.tree_type*
  %values331 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type330, i32 0, i32 1
  %119 = load %union.tree_node*, %union.tree_node** %values331, align 8
  %cmp332 = icmp ne %union.tree_node* %119, null
  br i1 %cmp332, label %land.lhs.true.334, label %if.end.392

land.lhs.true.334:                                ; preds = %if.end.327
  %120 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type335 = bitcast %union.tree_node* %120 to %struct.tree_type*
  %values336 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type335, i32 0, i32 1
  %121 = load %union.tree_node*, %union.tree_node** %values336, align 8
  %cmp337 = icmp ne %union.tree_node* %121, null
  br i1 %cmp337, label %land.lhs.true.339, label %if.end.392

land.lhs.true.339:                                ; preds = %land.lhs.true.334
  %122 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type340 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %values341 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type340, i32 0, i32 1
  %123 = load %union.tree_node*, %union.tree_node** %values341, align 8
  %list = bitcast %union.tree_node* %123 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %124 = load %union.tree_node*, %union.tree_node** %value, align 8
  %cmp342 = icmp ne %union.tree_node* %124, null
  br i1 %cmp342, label %land.lhs.true.344, label %if.end.392

land.lhs.true.344:                                ; preds = %land.lhs.true.339
  %125 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type345 = bitcast %union.tree_node* %125 to %struct.tree_type*
  %values346 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type345, i32 0, i32 1
  %126 = load %union.tree_node*, %union.tree_node** %values346, align 8
  %list347 = bitcast %union.tree_node* %126 to %struct.tree_list*
  %value348 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list347, i32 0, i32 2
  %127 = load %union.tree_node*, %union.tree_node** %value348, align 8
  %cmp349 = icmp ne %union.tree_node* %127, null
  br i1 %cmp349, label %land.lhs.true.351, label %if.end.392

land.lhs.true.351:                                ; preds = %land.lhs.true.344
  %128 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type352 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %values353 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type352, i32 0, i32 1
  %129 = load %union.tree_node*, %union.tree_node** %values353, align 8
  %list354 = bitcast %union.tree_node* %129 to %struct.tree_list*
  %value355 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list354, i32 0, i32 2
  %130 = load %union.tree_node*, %union.tree_node** %value355, align 8
  %type356 = bitcast %union.tree_node* %130 to %struct.tree_type*
  %mode357 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type356, i32 0, i32 6
  %bf.load358 = load i32, i32* %mode357, align 4
  %bf.lshr359 = lshr i32 %bf.load358, 9
  %bf.clear360 = and i32 %bf.lshr359, 127
  %131 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type361 = bitcast %union.tree_node* %131 to %struct.tree_type*
  %values362 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type361, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %values362, align 8
  %list363 = bitcast %union.tree_node* %132 to %struct.tree_list*
  %value364 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list363, i32 0, i32 2
  %133 = load %union.tree_node*, %union.tree_node** %value364, align 8
  %type365 = bitcast %union.tree_node* %133 to %struct.tree_type*
  %mode366 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type365, i32 0, i32 6
  %bf.load367 = load i32, i32* %mode366, align 4
  %bf.lshr368 = lshr i32 %bf.load367, 9
  %bf.clear369 = and i32 %bf.lshr368, 127
  %cmp370 = icmp eq i32 %bf.clear360, %bf.clear369
  br i1 %cmp370, label %if.then.372, label %if.end.392

if.then.372:                                      ; preds = %land.lhs.true.351
  %134 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common374 = bitcast %union.tree_node* %134 to %struct.tree_common*
  %type375 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common374, i32 0, i32 1
  %135 = load %union.tree_node*, %union.tree_node** %type375, align 8
  %136 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type376 = bitcast %union.tree_node* %136 to %struct.tree_type*
  %values377 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type376, i32 0, i32 1
  %137 = load %union.tree_node*, %union.tree_node** %values377, align 8
  %list378 = bitcast %union.tree_node* %137 to %struct.tree_list*
  %value379 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list378, i32 0, i32 2
  %138 = load %union.tree_node*, %union.tree_node** %value379, align 8
  %139 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type380 = bitcast %union.tree_node* %139 to %struct.tree_type*
  %values381 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type380, i32 0, i32 1
  %140 = load %union.tree_node*, %union.tree_node** %values381, align 8
  %common382 = bitcast %union.tree_node* %140 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common382, i32 0, i32 0
  %141 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %call383 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %138, %union.tree_node* %141)
  %call384 = call %union.tree_node* @build_function_type(%union.tree_node* %135, %union.tree_node* %call383)
  store %union.tree_node* %call384, %union.tree_node** %trytype373, align 8
  %142 = load %union.tree_node*, %union.tree_node** %trytype373, align 8
  %143 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type385 = bitcast %union.tree_node* %143 to %struct.tree_type*
  %attributes386 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type385, i32 0, i32 4
  %144 = load %union.tree_node*, %union.tree_node** %attributes386, align 8
  %call387 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %142, %union.tree_node* %144)
  store %union.tree_node* %call387, %union.tree_node** %trytype373, align 8
  %145 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %146 = load %union.tree_node*, %union.tree_node** %trytype373, align 8
  %call388 = call i32 @comptypes(%union.tree_node* %145, %union.tree_node* %146)
  store i32 %call388, i32* %types_match, align 4
  %147 = load i32, i32* %types_match, align 4
  %tobool389 = icmp ne i32 %147, 0
  br i1 %tobool389, label %if.then.390, label %if.end.391

if.then.390:                                      ; preds = %if.then.372
  %148 = load %union.tree_node*, %union.tree_node** %trytype373, align 8
  store %union.tree_node* %148, %union.tree_node** %oldtype, align 8
  br label %if.end.391

if.end.391:                                       ; preds = %if.then.390, %if.then.372
  br label %if.end.392

if.end.392:                                       ; preds = %if.end.391, %land.lhs.true.351, %land.lhs.true.344, %land.lhs.true.339, %land.lhs.true.334, %if.end.327
  %149 = load i32, i32* %different_binding_level.addr, align 4
  %tobool393 = icmp ne i32 %149, 0
  br i1 %tobool393, label %if.end.397, label %if.then.394

if.then.394:                                      ; preds = %if.end.392
  %150 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %151 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common395 = bitcast %union.tree_node* %151 to %struct.tree_common*
  %type396 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common395, i32 0, i32 1
  store %union.tree_node* %150, %union.tree_node** %type396, align 8
  br label %if.end.397

if.end.397:                                       ; preds = %if.then.394, %if.end.392
  br label %if.end.424

if.else.398:                                      ; preds = %if.else.299
  %152 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type399 = bitcast %union.tree_node* %152 to %struct.tree_type*
  %values400 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type399, i32 0, i32 1
  %153 = load %union.tree_node*, %union.tree_node** %values400, align 8
  %cmp401 = icmp eq %union.tree_node* %153, null
  br i1 %cmp401, label %land.lhs.true.403, label %if.end.423

land.lhs.true.403:                                ; preds = %if.else.398
  %154 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type404 = bitcast %union.tree_node* %154 to %struct.tree_type*
  %values405 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type404, i32 0, i32 1
  %155 = load %union.tree_node*, %union.tree_node** %values405, align 8
  %cmp406 = icmp ne %union.tree_node* %155, null
  br i1 %cmp406, label %if.then.408, label %if.end.423

if.then.408:                                      ; preds = %land.lhs.true.403
  %156 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common410 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %type411 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common410, i32 0, i32 1
  %157 = load %union.tree_node*, %union.tree_node** %type411, align 8
  %158 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type412 = bitcast %union.tree_node* %158 to %struct.tree_type*
  %values413 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type412, i32 0, i32 1
  %159 = load %union.tree_node*, %union.tree_node** %values413, align 8
  %call414 = call %union.tree_node* @build_function_type(%union.tree_node* %157, %union.tree_node* %159)
  store %union.tree_node* %call414, %union.tree_node** %trytype409, align 8
  %160 = load %union.tree_node*, %union.tree_node** %trytype409, align 8
  %161 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type415 = bitcast %union.tree_node* %161 to %struct.tree_type*
  %attributes416 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type415, i32 0, i32 4
  %162 = load %union.tree_node*, %union.tree_node** %attributes416, align 8
  %call417 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %160, %union.tree_node* %162)
  store %union.tree_node* %call417, %union.tree_node** %trytype409, align 8
  %163 = load %union.tree_node*, %union.tree_node** %trytype409, align 8
  store %union.tree_node* %163, %union.tree_node** %oldtype, align 8
  %164 = load i32, i32* %different_binding_level.addr, align 4
  %tobool418 = icmp ne i32 %164, 0
  br i1 %tobool418, label %if.end.422, label %if.then.419

if.then.419:                                      ; preds = %if.then.408
  %165 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %166 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common420 = bitcast %union.tree_node* %166 to %struct.tree_common*
  %type421 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common420, i32 0, i32 1
  store %union.tree_node* %165, %union.tree_node** %type421, align 8
  br label %if.end.422

if.end.422:                                       ; preds = %if.then.419, %if.then.408
  br label %if.end.423

if.end.423:                                       ; preds = %if.end.422, %land.lhs.true.403, %if.else.398
  br label %if.end.424

if.end.424:                                       ; preds = %if.end.423, %if.end.397
  br label %if.end.425

if.end.425:                                       ; preds = %if.end.424
  %167 = load i32, i32* %types_match, align 4
  %tobool426 = icmp ne i32 %167, 0
  br i1 %tobool426, label %if.end.428, label %if.then.427

if.then.427:                                      ; preds = %if.end.425
  %168 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %168, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.268, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end.428:                                       ; preds = %if.end.425
  br label %if.end.988

if.else.429:                                      ; preds = %land.lhs.true.279, %if.else.272
  %169 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common430 = bitcast %union.tree_node* %169 to %struct.tree_common*
  %code431 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common430, i32 0, i32 2
  %bf.load432 = load i32, i32* %code431, align 8
  %bf.clear433 = and i32 %bf.load432, 255
  %cmp434 = icmp eq i32 %bf.clear433, 30
  br i1 %cmp434, label %land.lhs.true.436, label %if.else.464

land.lhs.true.436:                                ; preds = %if.else.429
  %170 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl437 = bitcast %union.tree_node* %170 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl437, i32 0, i32 2
  %171 = load i32, i32* %linenum, align 4
  %cmp438 = icmp eq i32 %171, 0
  br i1 %cmp438, label %if.then.440, label %if.else.464

if.then.440:                                      ; preds = %land.lhs.true.436
  %172 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common441 = bitcast %union.tree_node* %172 to %struct.tree_common*
  %public_flag442 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common441, i32 0, i32 2
  %bf.load443 = load i32, i32* %public_flag442, align 8
  %bf.lshr444 = lshr i32 %bf.load443, 19
  %bf.clear445 = and i32 %bf.lshr444, 1
  %tobool446 = icmp ne i32 %bf.clear445, 0
  br i1 %tobool446, label %if.else.448, label %if.then.447

if.then.447:                                      ; preds = %if.then.440
  store i32 0, i32* %retval
  br label %return

if.else.448:                                      ; preds = %if.then.440
  %173 = load i32, i32* %types_match, align 4
  %tobool449 = icmp ne i32 %173, 0
  br i1 %tobool449, label %if.end.462, label %if.then.450

if.then.450:                                      ; preds = %if.else.448
  %174 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common451 = bitcast %union.tree_node* %174 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common451, i32 0, i32 2
  %bf.load452 = load i32, i32* %volatile_flag, align 8
  %bf.lshr453 = lshr i32 %bf.load452, 11
  %bf.clear454 = and i32 %bf.lshr453, 1
  %175 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common455 = bitcast %union.tree_node* %175 to %struct.tree_common*
  %volatile_flag456 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common455, i32 0, i32 2
  %bf.load457 = load i32, i32* %volatile_flag456, align 8
  %bf.lshr458 = lshr i32 %bf.load457, 11
  %bf.clear459 = and i32 %bf.lshr458, 1
  %or = or i32 %bf.clear459, %bf.clear454
  %bf.load460 = load i32, i32* %volatile_flag456, align 8
  %bf.value = and i32 %or, 1
  %bf.shl = shl i32 %bf.value, 11
  %bf.clear461 = and i32 %bf.load460, -2049
  %bf.set = or i32 %bf.clear461, %bf.shl
  store i32 %bf.set, i32* %volatile_flag456, align 8
  br label %if.end.462

if.end.462:                                       ; preds = %if.then.450, %if.else.448
  br label %if.end.463

if.end.463:                                       ; preds = %if.end.462
  br label %if.end.987

if.else.464:                                      ; preds = %land.lhs.true.436, %if.else.429
  %176 = load i32, i32* %types_match, align 4
  %tobool465 = icmp ne i32 %176, 0
  br i1 %tobool465, label %if.else.585, label %land.lhs.true.466

land.lhs.true.466:                                ; preds = %if.else.464
  %177 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common467 = bitcast %union.tree_node* %177 to %struct.tree_common*
  %code468 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common467, i32 0, i32 2
  %bf.load469 = load i32, i32* %code468, align 8
  %bf.clear470 = and i32 %bf.load469, 255
  %cmp471 = icmp eq i32 %bf.clear470, 30
  br i1 %cmp471, label %land.lhs.true.473, label %if.else.585

land.lhs.true.473:                                ; preds = %land.lhs.true.466
  %178 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common474 = bitcast %union.tree_node* %178 to %struct.tree_common*
  %code475 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common474, i32 0, i32 2
  %bf.load476 = load i32, i32* %code475, align 8
  %bf.clear477 = and i32 %bf.load476, 255
  %cmp478 = icmp eq i32 %bf.clear477, 30
  br i1 %cmp478, label %land.lhs.true.480, label %if.else.585

land.lhs.true.480:                                ; preds = %land.lhs.true.473
  %179 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common481 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %type482 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common481, i32 0, i32 1
  %180 = load %union.tree_node*, %union.tree_node** %type482, align 8
  %common483 = bitcast %union.tree_node* %180 to %struct.tree_common*
  %code484 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common483, i32 0, i32 2
  %bf.load485 = load i32, i32* %code484, align 8
  %bf.clear486 = and i32 %bf.load485, 255
  %cmp487 = icmp eq i32 %bf.clear486, 13
  br i1 %cmp487, label %land.lhs.true.489, label %if.else.585

land.lhs.true.489:                                ; preds = %land.lhs.true.480
  %181 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common490 = bitcast %union.tree_node* %181 to %struct.tree_common*
  %type491 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common490, i32 0, i32 1
  %182 = load %union.tree_node*, %union.tree_node** %type491, align 8
  %common492 = bitcast %union.tree_node* %182 to %struct.tree_common*
  %code493 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common492, i32 0, i32 2
  %bf.load494 = load i32, i32* %code493, align 8
  %bf.clear495 = and i32 %bf.load494, 255
  %cmp496 = icmp eq i32 %bf.clear495, 13
  br i1 %cmp496, label %land.lhs.true.498, label %if.else.585

land.lhs.true.498:                                ; preds = %land.lhs.true.489
  %183 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl499 = bitcast %union.tree_node* %183 to %struct.tree_decl*
  %in_system_header_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl499, i32 0, i32 5
  %184 = bitcast i48* %in_system_header_flag to i64*
  %bf.load500 = load i64, i64* %184, align 8
  %bf.lshr501 = lshr i64 %bf.load500, 16
  %bf.clear502 = and i64 %bf.lshr501, 1
  %bf.cast503 = trunc i64 %bf.clear502 to i32
  %tobool504 = icmp ne i32 %bf.cast503, 0
  br i1 %tobool504, label %land.lhs.true.513, label %lor.lhs.false.505

lor.lhs.false.505:                                ; preds = %land.lhs.true.498
  %185 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl506 = bitcast %union.tree_node* %185 to %struct.tree_decl*
  %in_system_header_flag507 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl506, i32 0, i32 5
  %186 = bitcast i48* %in_system_header_flag507 to i64*
  %bf.load508 = load i64, i64* %186, align 8
  %bf.lshr509 = lshr i64 %bf.load508, 16
  %bf.clear510 = and i64 %bf.lshr509, 1
  %bf.cast511 = trunc i64 %bf.clear510 to i32
  %tobool512 = icmp ne i32 %bf.cast511, 0
  br i1 %tobool512, label %land.lhs.true.513, label %if.else.585

land.lhs.true.513:                                ; preds = %lor.lhs.false.505, %land.lhs.true.498
  %187 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common514 = bitcast %union.tree_node* %187 to %struct.tree_common*
  %type515 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common514, i32 0, i32 1
  %188 = load %union.tree_node*, %union.tree_node** %type515, align 8
  %common516 = bitcast %union.tree_node* %188 to %struct.tree_common*
  %type517 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common516, i32 0, i32 1
  %189 = load %union.tree_node*, %union.tree_node** %type517, align 8
  %type518 = bitcast %union.tree_node* %189 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type518, i32 0, i32 15
  %190 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp519 = icmp eq %union.tree_node* %190, %191
  br i1 %cmp519, label %land.lhs.true.521, label %lor.lhs.false.538

land.lhs.true.521:                                ; preds = %land.lhs.true.513
  %192 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type522 = bitcast %union.tree_node* %192 to %struct.tree_type*
  %values523 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type522, i32 0, i32 1
  %193 = load %union.tree_node*, %union.tree_node** %values523, align 8
  %cmp524 = icmp eq %union.tree_node* %193, null
  br i1 %cmp524, label %land.lhs.true.526, label %lor.lhs.false.538

land.lhs.true.526:                                ; preds = %land.lhs.true.521
  %194 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type527 = bitcast %union.tree_node* %194 to %struct.tree_type*
  %values528 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type527, i32 0, i32 1
  %195 = load %union.tree_node*, %union.tree_node** %values528, align 8
  %call529 = call i32 @self_promoting_args_p(%union.tree_node* %195)
  %tobool530 = icmp ne i32 %call529, 0
  br i1 %tobool530, label %land.lhs.true.531, label %lor.lhs.false.538

land.lhs.true.531:                                ; preds = %land.lhs.true.526
  %196 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common532 = bitcast %union.tree_node* %196 to %struct.tree_common*
  %type533 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common532, i32 0, i32 1
  %197 = load %union.tree_node*, %union.tree_node** %type533, align 8
  %common534 = bitcast %union.tree_node* %197 to %struct.tree_common*
  %type535 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common534, i32 0, i32 1
  %198 = load %union.tree_node*, %union.tree_node** %type535, align 8
  %199 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp536 = icmp eq %union.tree_node* %198, %199
  br i1 %cmp536, label %if.then.564, label %lor.lhs.false.538

lor.lhs.false.538:                                ; preds = %land.lhs.true.531, %land.lhs.true.526, %land.lhs.true.521, %land.lhs.true.513
  %200 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common539 = bitcast %union.tree_node* %200 to %struct.tree_common*
  %type540 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common539, i32 0, i32 1
  %201 = load %union.tree_node*, %union.tree_node** %type540, align 8
  %common541 = bitcast %union.tree_node* %201 to %struct.tree_common*
  %type542 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common541, i32 0, i32 1
  %202 = load %union.tree_node*, %union.tree_node** %type542, align 8
  %203 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp543 = icmp eq %union.tree_node* %202, %203
  br i1 %cmp543, label %land.lhs.true.545, label %if.else.585

land.lhs.true.545:                                ; preds = %lor.lhs.false.538
  %204 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type546 = bitcast %union.tree_node* %204 to %struct.tree_type*
  %values547 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type546, i32 0, i32 1
  %205 = load %union.tree_node*, %union.tree_node** %values547, align 8
  %cmp548 = icmp eq %union.tree_node* %205, null
  br i1 %cmp548, label %land.lhs.true.550, label %if.else.585

land.lhs.true.550:                                ; preds = %land.lhs.true.545
  %206 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type551 = bitcast %union.tree_node* %206 to %struct.tree_type*
  %values552 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type551, i32 0, i32 1
  %207 = load %union.tree_node*, %union.tree_node** %values552, align 8
  %call553 = call i32 @self_promoting_args_p(%union.tree_node* %207)
  %tobool554 = icmp ne i32 %call553, 0
  br i1 %tobool554, label %land.lhs.true.555, label %if.else.585

land.lhs.true.555:                                ; preds = %land.lhs.true.550
  %208 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common556 = bitcast %union.tree_node* %208 to %struct.tree_common*
  %type557 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common556, i32 0, i32 1
  %209 = load %union.tree_node*, %union.tree_node** %type557, align 8
  %common558 = bitcast %union.tree_node* %209 to %struct.tree_common*
  %type559 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common558, i32 0, i32 1
  %210 = load %union.tree_node*, %union.tree_node** %type559, align 8
  %type560 = bitcast %union.tree_node* %210 to %struct.tree_type*
  %main_variant561 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type560, i32 0, i32 15
  %211 = load %union.tree_node*, %union.tree_node** %main_variant561, align 8
  %212 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp562 = icmp eq %union.tree_node* %211, %212
  br i1 %cmp562, label %if.then.564, label %if.else.585

if.then.564:                                      ; preds = %land.lhs.true.555, %land.lhs.true.531
  %213 = load i32, i32* @pedantic, align 4
  %tobool565 = icmp ne i32 %213, 0
  br i1 %tobool565, label %if.then.566, label %if.end.567

if.then.566:                                      ; preds = %if.then.564
  %214 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %214, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.269, i32 0, i32 0))
  br label %if.end.567

if.end.567:                                       ; preds = %if.then.566, %if.then.564
  %215 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common568 = bitcast %union.tree_node* %215 to %struct.tree_common*
  %type569 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common568, i32 0, i32 1
  %216 = load %union.tree_node*, %union.tree_node** %type569, align 8
  %common570 = bitcast %union.tree_node* %216 to %struct.tree_common*
  %type571 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common570, i32 0, i32 1
  %217 = load %union.tree_node*, %union.tree_node** %type571, align 8
  %type572 = bitcast %union.tree_node* %217 to %struct.tree_type*
  %main_variant573 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type572, i32 0, i32 15
  %218 = load %union.tree_node*, %union.tree_node** %main_variant573, align 8
  %219 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp574 = icmp eq %union.tree_node* %218, %219
  br i1 %cmp574, label %if.then.576, label %if.end.579

if.then.576:                                      ; preds = %if.end.567
  %220 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  store %union.tree_node* %220, %union.tree_node** %newtype, align 8
  %221 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common577 = bitcast %union.tree_node* %221 to %struct.tree_common*
  %type578 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common577, i32 0, i32 1
  store %union.tree_node* %220, %union.tree_node** %type578, align 8
  br label %if.end.579

if.end.579:                                       ; preds = %if.then.576, %if.end.567
  %222 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl580 = bitcast %union.tree_node* %222 to %struct.tree_decl*
  %in_system_header_flag581 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl580, i32 0, i32 5
  %223 = bitcast i48* %in_system_header_flag581 to i64*
  %bf.load582 = load i64, i64* %223, align 8
  %bf.clear583 = and i64 %bf.load582, -65537
  %bf.set584 = or i64 %bf.clear583, 65536
  store i64 %bf.set584, i64* %223, align 8
  br label %if.end.986

if.else.585:                                      ; preds = %land.lhs.true.555, %land.lhs.true.550, %land.lhs.true.545, %lor.lhs.false.538, %lor.lhs.false.505, %land.lhs.true.489, %land.lhs.true.480, %land.lhs.true.473, %land.lhs.true.466, %if.else.464
  %224 = load i32, i32* %types_match, align 4
  %tobool586 = icmp ne i32 %224, 0
  br i1 %tobool586, label %if.else.674, label %land.lhs.true.587

land.lhs.true.587:                                ; preds = %if.else.585
  %225 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common588 = bitcast %union.tree_node* %225 to %struct.tree_common*
  %code589 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common588, i32 0, i32 2
  %bf.load590 = load i32, i32* %code589, align 8
  %bf.clear591 = and i32 %bf.load590, 255
  %cmp592 = icmp eq i32 %bf.clear591, 30
  br i1 %cmp592, label %land.lhs.true.594, label %if.then.608

land.lhs.true.594:                                ; preds = %land.lhs.true.587
  %226 = load i32, i32* @pedantic, align 4
  %tobool595 = icmp ne i32 %226, 0
  br i1 %tobool595, label %if.then.608, label %land.lhs.true.596

land.lhs.true.596:                                ; preds = %land.lhs.true.594
  %227 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common597 = bitcast %union.tree_node* %227 to %struct.tree_common*
  %type598 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common597, i32 0, i32 1
  %228 = load %union.tree_node*, %union.tree_node** %type598, align 8
  %229 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common599 = bitcast %union.tree_node* %229 to %struct.tree_common*
  %type600 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common599, i32 0, i32 1
  %230 = load %union.tree_node*, %union.tree_node** %type600, align 8
  %call601 = call i32 @comptypes(%union.tree_node* %228, %union.tree_node* %230)
  %tobool602 = icmp ne i32 %call601, 0
  br i1 %tobool602, label %land.lhs.true.603, label %if.then.608

land.lhs.true.603:                                ; preds = %land.lhs.true.596
  %231 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type604 = bitcast %union.tree_node* %231 to %struct.tree_type*
  %values605 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type604, i32 0, i32 1
  %232 = load %union.tree_node*, %union.tree_node** %values605, align 8
  %cmp606 = icmp eq %union.tree_node* %232, null
  br i1 %cmp606, label %if.else.674, label %if.then.608

if.then.608:                                      ; preds = %land.lhs.true.603, %land.lhs.true.596, %land.lhs.true.594, %land.lhs.true.587
  %233 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %233, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.269, i32 0, i32 0))
  %234 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common609 = bitcast %union.tree_node* %234 to %struct.tree_common*
  %code610 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common609, i32 0, i32 2
  %bf.load611 = load i32, i32* %code610, align 8
  %bf.clear612 = and i32 %bf.load611, 255
  %cmp613 = icmp eq i32 %bf.clear612, 30
  br i1 %cmp613, label %land.lhs.true.615, label %if.end.673

land.lhs.true.615:                                ; preds = %if.then.608
  %235 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %common616 = bitcast %union.tree_node* %235 to %struct.tree_common*
  %type617 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common616, i32 0, i32 1
  %236 = load %union.tree_node*, %union.tree_node** %type617, align 8
  %237 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %common618 = bitcast %union.tree_node* %237 to %struct.tree_common*
  %type619 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common618, i32 0, i32 1
  %238 = load %union.tree_node*, %union.tree_node** %type619, align 8
  %call620 = call i32 @comptypes(%union.tree_node* %236, %union.tree_node* %238)
  %tobool621 = icmp ne i32 %call620, 0
  br i1 %tobool621, label %land.lhs.true.622, label %if.end.673

land.lhs.true.622:                                ; preds = %land.lhs.true.615
  %239 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type623 = bitcast %union.tree_node* %239 to %struct.tree_type*
  %values624 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type623, i32 0, i32 1
  %240 = load %union.tree_node*, %union.tree_node** %values624, align 8
  %cmp625 = icmp eq %union.tree_node* %240, null
  br i1 %cmp625, label %land.lhs.true.627, label %lor.lhs.false.632

land.lhs.true.627:                                ; preds = %land.lhs.true.622
  %241 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl628 = bitcast %union.tree_node* %241 to %struct.tree_decl*
  %initial629 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl628, i32 0, i32 12
  %242 = load %union.tree_node*, %union.tree_node** %initial629, align 8
  %cmp630 = icmp eq %union.tree_node* %242, null
  br i1 %cmp630, label %if.then.642, label %lor.lhs.false.632

lor.lhs.false.632:                                ; preds = %land.lhs.true.627, %land.lhs.true.622
  %243 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type633 = bitcast %union.tree_node* %243 to %struct.tree_type*
  %values634 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type633, i32 0, i32 1
  %244 = load %union.tree_node*, %union.tree_node** %values634, align 8
  %cmp635 = icmp eq %union.tree_node* %244, null
  br i1 %cmp635, label %land.lhs.true.637, label %if.end.673

land.lhs.true.637:                                ; preds = %lor.lhs.false.632
  %245 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl638 = bitcast %union.tree_node* %245 to %struct.tree_decl*
  %initial639 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl638, i32 0, i32 12
  %246 = load %union.tree_node*, %union.tree_node** %initial639, align 8
  %cmp640 = icmp eq %union.tree_node* %246, null
  br i1 %cmp640, label %if.then.642, label %if.end.673

if.then.642:                                      ; preds = %land.lhs.true.637, %land.lhs.true.627
  %247 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type643 = bitcast %union.tree_node* %247 to %struct.tree_type*
  %values644 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type643, i32 0, i32 1
  %248 = load %union.tree_node*, %union.tree_node** %values644, align 8
  store %union.tree_node* %248, %union.tree_node** %t, align 8
  %249 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp645 = icmp eq %union.tree_node* %249, null
  br i1 %cmp645, label %if.then.647, label %if.end.650

if.then.647:                                      ; preds = %if.then.642
  %250 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type648 = bitcast %union.tree_node* %250 to %struct.tree_type*
  %values649 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type648, i32 0, i32 1
  %251 = load %union.tree_node*, %union.tree_node** %values649, align 8
  store %union.tree_node* %251, %union.tree_node** %t, align 8
  br label %if.end.650

if.end.650:                                       ; preds = %if.then.647, %if.then.642
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.650
  %252 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool651 = icmp ne %union.tree_node* %252, null
  br i1 %tobool651, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %253 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list653 = bitcast %union.tree_node* %253 to %struct.tree_list*
  %value654 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list653, i32 0, i32 2
  %254 = load %union.tree_node*, %union.tree_node** %value654, align 8
  store %union.tree_node* %254, %union.tree_node** %type652, align 8
  %255 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common655 = bitcast %union.tree_node* %255 to %struct.tree_common*
  %chain656 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common655, i32 0, i32 0
  %256 = load %union.tree_node*, %union.tree_node** %chain656, align 8
  %cmp657 = icmp eq %union.tree_node* %256, null
  br i1 %cmp657, label %land.lhs.true.659, label %if.end.665

land.lhs.true.659:                                ; preds = %for.body
  %257 = load %union.tree_node*, %union.tree_node** %type652, align 8
  %type660 = bitcast %union.tree_node* %257 to %struct.tree_type*
  %main_variant661 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type660, i32 0, i32 15
  %258 = load %union.tree_node*, %union.tree_node** %main_variant661, align 8
  %259 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp662 = icmp ne %union.tree_node* %258, %259
  br i1 %cmp662, label %if.then.664, label %if.end.665

if.then.664:                                      ; preds = %land.lhs.true.659
  call void (i8*, ...) @error(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.270, i32 0, i32 0))
  br label %for.end

if.end.665:                                       ; preds = %land.lhs.true.659, %for.body
  %260 = load %union.tree_node*, %union.tree_node** %type652, align 8
  %call666 = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %260)
  %cmp667 = icmp ne %union.tree_node* %call666, null
  br i1 %cmp667, label %if.then.669, label %if.end.670

if.then.669:                                      ; preds = %if.end.665
  call void (i8*, ...) @error(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.271, i32 0, i32 0))
  br label %for.end

if.end.670:                                       ; preds = %if.end.665
  br label %for.inc

for.inc:                                          ; preds = %if.end.670
  %261 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common671 = bitcast %union.tree_node* %261 to %struct.tree_common*
  %chain672 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common671, i32 0, i32 0
  %262 = load %union.tree_node*, %union.tree_node** %chain672, align 8
  store %union.tree_node* %262, %union.tree_node** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.669, %if.then.664, %for.cond
  br label %if.end.673

if.end.673:                                       ; preds = %for.end, %land.lhs.true.637, %lor.lhs.false.632, %land.lhs.true.615, %if.then.608
  %263 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %263, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0))
  br label %if.end.985

if.else.674:                                      ; preds = %land.lhs.true.603, %if.else.585
  %264 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %265 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %call675 = call i32 @redeclaration_error_message(%union.tree_node* %264, %union.tree_node* %265)
  store i32 %call675, i32* %errmsg, align 4
  %266 = load i32, i32* %errmsg, align 4
  %tobool676 = icmp ne i32 %266, 0
  br i1 %tobool676, label %if.then.677, label %if.else.688

if.then.677:                                      ; preds = %if.else.674
  %267 = load i32, i32* %errmsg, align 4
  switch i32 %267, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.678
    i32 3, label %sw.bb.679
  ]

sw.bb:                                            ; preds = %if.then.677
  %268 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %268, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.272, i32 0, i32 0))
  br label %sw.epilog

sw.bb.678:                                        ; preds = %if.then.677
  %269 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %269, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.273, i32 0, i32 0))
  br label %sw.epilog

sw.bb.679:                                        ; preds = %if.then.677
  %270 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %270, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.274, i32 0, i32 0))
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.677
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), i32 1686, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.duplicate_decls, i32 0, i32 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb.679, %sw.bb.678, %sw.bb
  %271 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %272 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl680 = bitcast %union.tree_node* %272 to %struct.tree_decl*
  %initial681 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl680, i32 0, i32 12
  %273 = load %union.tree_node*, %union.tree_node** %initial681, align 8
  %tobool682 = icmp ne %union.tree_node* %273, null
  br i1 %tobool682, label %land.rhs.683, label %land.end.686

land.rhs.683:                                     ; preds = %sw.epilog
  %274 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %275 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp684 = icmp eq %struct.binding_level* %274, %275
  br label %land.end.686

land.end.686:                                     ; preds = %land.rhs.683, %sw.epilog
  %276 = phi i1 [ false, %sw.epilog ], [ %cmp684, %land.rhs.683 ]
  %cond = select i1 %276, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.276, i32 0, i32 0)
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %271, i8* %cond)
  store i32 0, i32* %retval
  br label %return

if.else.688:                                      ; preds = %if.else.674
  %277 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common689 = bitcast %union.tree_node* %277 to %struct.tree_common*
  %code690 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common689, i32 0, i32 2
  %bf.load691 = load i32, i32* %code690, align 8
  %bf.clear692 = and i32 %bf.load691, 255
  %cmp693 = icmp eq i32 %bf.clear692, 33
  br i1 %cmp693, label %land.lhs.true.695, label %if.else.721

land.lhs.true.695:                                ; preds = %if.else.688
  %278 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl696 = bitcast %union.tree_node* %278 to %struct.tree_decl*
  %in_system_header_flag697 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl696, i32 0, i32 5
  %279 = bitcast i48* %in_system_header_flag697 to i64*
  %bf.load698 = load i64, i64* %279, align 8
  %bf.lshr699 = lshr i64 %bf.load698, 16
  %bf.clear700 = and i64 %bf.lshr699, 1
  %bf.cast701 = trunc i64 %bf.clear700 to i32
  %tobool702 = icmp ne i32 %bf.cast701, 0
  br i1 %tobool702, label %if.then.711, label %lor.lhs.false.703

lor.lhs.false.703:                                ; preds = %land.lhs.true.695
  %280 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl704 = bitcast %union.tree_node* %280 to %struct.tree_decl*
  %in_system_header_flag705 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl704, i32 0, i32 5
  %281 = bitcast i48* %in_system_header_flag705 to i64*
  %bf.load706 = load i64, i64* %281, align 8
  %bf.lshr707 = lshr i64 %bf.load706, 16
  %bf.clear708 = and i64 %bf.lshr707, 1
  %bf.cast709 = trunc i64 %bf.clear708 to i32
  %tobool710 = icmp ne i32 %bf.cast709, 0
  br i1 %tobool710, label %if.then.711, label %if.else.721

if.then.711:                                      ; preds = %lor.lhs.false.703, %land.lhs.true.695
  %282 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %282, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.272, i32 0, i32 0))
  %283 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %284 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl712 = bitcast %union.tree_node* %284 to %struct.tree_decl*
  %initial713 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl712, i32 0, i32 12
  %285 = load %union.tree_node*, %union.tree_node** %initial713, align 8
  %tobool714 = icmp ne %union.tree_node* %285, null
  br i1 %tobool714, label %land.rhs.715, label %land.end.718

land.rhs.715:                                     ; preds = %if.then.711
  %286 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %287 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp716 = icmp eq %struct.binding_level* %286, %287
  br label %land.end.718

land.end.718:                                     ; preds = %land.rhs.715, %if.then.711
  %288 = phi i1 [ false, %if.then.711 ], [ %cmp716, %land.rhs.715 ]
  %cond720 = select i1 %288, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.276, i32 0, i32 0)
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %283, i8* %cond720)
  br label %if.end.983

if.else.721:                                      ; preds = %lor.lhs.false.703, %if.else.688
  %289 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common722 = bitcast %union.tree_node* %289 to %struct.tree_common*
  %code723 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common722, i32 0, i32 2
  %bf.load724 = load i32, i32* %code723, align 8
  %bf.clear725 = and i32 %bf.load724, 255
  %cmp726 = icmp eq i32 %bf.clear725, 30
  br i1 %cmp726, label %land.lhs.true.728, label %if.else.814

land.lhs.true.728:                                ; preds = %if.else.721
  %290 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl729 = bitcast %union.tree_node* %290 to %struct.tree_decl*
  %initial730 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl729, i32 0, i32 12
  %291 = load %union.tree_node*, %union.tree_node** %initial730, align 8
  %cmp731 = icmp ne %union.tree_node* %291, null
  br i1 %cmp731, label %land.lhs.true.733, label %if.else.814

land.lhs.true.733:                                ; preds = %land.lhs.true.728
  %292 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type734 = bitcast %union.tree_node* %292 to %struct.tree_type*
  %values735 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type734, i32 0, i32 1
  %293 = load %union.tree_node*, %union.tree_node** %values735, align 8
  %cmp736 = icmp eq %union.tree_node* %293, null
  br i1 %cmp736, label %land.lhs.true.738, label %if.else.814

land.lhs.true.738:                                ; preds = %land.lhs.true.733
  %294 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type739 = bitcast %union.tree_node* %294 to %struct.tree_type*
  %values740 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type739, i32 0, i32 1
  %295 = load %union.tree_node*, %union.tree_node** %values740, align 8
  %cmp741 = icmp ne %union.tree_node* %295, null
  br i1 %cmp741, label %land.lhs.true.743, label %if.else.814

land.lhs.true.743:                                ; preds = %land.lhs.true.738
  %296 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type744 = bitcast %union.tree_node* %296 to %struct.tree_type*
  %binfo = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type744, i32 0, i32 16
  %297 = load %union.tree_node*, %union.tree_node** %binfo, align 8
  %cmp745 = icmp ne %union.tree_node* %297, null
  br i1 %cmp745, label %if.then.747, label %if.else.814

if.then.747:                                      ; preds = %land.lhs.true.743
  %298 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type749 = bitcast %union.tree_node* %298 to %struct.tree_type*
  %binfo750 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type749, i32 0, i32 16
  %299 = load %union.tree_node*, %union.tree_node** %binfo750, align 8
  store %union.tree_node* %299, %union.tree_node** %parm, align 8
  %300 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type751 = bitcast %union.tree_node* %300 to %struct.tree_type*
  %values752 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type751, i32 0, i32 1
  %301 = load %union.tree_node*, %union.tree_node** %values752, align 8
  store %union.tree_node* %301, %union.tree_node** %type748, align 8
  store i32 1, i32* %nargs, align 4
  br label %for.cond.753

for.cond.753:                                     ; preds = %for.inc.808, %if.then.747
  %302 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list754 = bitcast %union.tree_node* %302 to %struct.tree_list*
  %value755 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list754, i32 0, i32 2
  %303 = load %union.tree_node*, %union.tree_node** %value755, align 8
  %type756 = bitcast %union.tree_node* %303 to %struct.tree_type*
  %main_variant757 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type756, i32 0, i32 15
  %304 = load %union.tree_node*, %union.tree_node** %main_variant757, align 8
  %305 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp758 = icmp eq %union.tree_node* %304, %305
  br i1 %cmp758, label %land.lhs.true.760, label %if.end.768

land.lhs.true.760:                                ; preds = %for.cond.753
  %306 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %list761 = bitcast %union.tree_node* %306 to %struct.tree_list*
  %value762 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list761, i32 0, i32 2
  %307 = load %union.tree_node*, %union.tree_node** %value762, align 8
  %type763 = bitcast %union.tree_node* %307 to %struct.tree_type*
  %main_variant764 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type763, i32 0, i32 15
  %308 = load %union.tree_node*, %union.tree_node** %main_variant764, align 8
  %309 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp765 = icmp eq %union.tree_node* %308, %309
  br i1 %cmp765, label %if.then.767, label %if.end.768

if.then.767:                                      ; preds = %land.lhs.true.760
  %310 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %310, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.277, i32 0, i32 0))
  %311 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %311, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.278, i32 0, i32 0))
  br label %for.end.813

if.end.768:                                       ; preds = %land.lhs.true.760, %for.cond.753
  %312 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list769 = bitcast %union.tree_node* %312 to %struct.tree_list*
  %value770 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list769, i32 0, i32 2
  %313 = load %union.tree_node*, %union.tree_node** %value770, align 8
  %type771 = bitcast %union.tree_node* %313 to %struct.tree_type*
  %main_variant772 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type771, i32 0, i32 15
  %314 = load %union.tree_node*, %union.tree_node** %main_variant772, align 8
  %315 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp773 = icmp eq %union.tree_node* %314, %315
  br i1 %cmp773, label %if.then.782, label %lor.lhs.false.775

lor.lhs.false.775:                                ; preds = %if.end.768
  %316 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %list776 = bitcast %union.tree_node* %316 to %struct.tree_list*
  %value777 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list776, i32 0, i32 2
  %317 = load %union.tree_node*, %union.tree_node** %value777, align 8
  %type778 = bitcast %union.tree_node* %317 to %struct.tree_type*
  %main_variant779 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type778, i32 0, i32 15
  %318 = load %union.tree_node*, %union.tree_node** %main_variant779, align 8
  %319 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp780 = icmp eq %union.tree_node* %318, %319
  br i1 %cmp780, label %if.then.782, label %if.end.783

if.then.782:                                      ; preds = %lor.lhs.false.775, %if.end.768
  %320 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %320, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.279, i32 0, i32 0))
  %321 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %321, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.278, i32 0, i32 0))
  store i32 1, i32* %errmsg, align 4
  br label %for.end.813

if.end.783:                                       ; preds = %lor.lhs.false.775
  %322 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list784 = bitcast %union.tree_node* %322 to %struct.tree_list*
  %value785 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list784, i32 0, i32 2
  %323 = load %union.tree_node*, %union.tree_node** %value785, align 8
  %324 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %list786 = bitcast %union.tree_node* %324 to %struct.tree_list*
  %value787 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list786, i32 0, i32 2
  %325 = load %union.tree_node*, %union.tree_node** %value787, align 8
  %call788 = call i32 @comptypes(%union.tree_node* %323, %union.tree_node* %325)
  %tobool789 = icmp ne i32 %call788, 0
  br i1 %tobool789, label %if.end.807, label %land.lhs.true.790

land.lhs.true.790:                                ; preds = %if.end.783
  %326 = load i32, i32* @flag_traditional, align 4
  %tobool791 = icmp ne i32 %326, 0
  br i1 %tobool791, label %land.lhs.true.792, label %if.then.806

land.lhs.true.792:                                ; preds = %land.lhs.true.790
  %327 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list793 = bitcast %union.tree_node* %327 to %struct.tree_list*
  %value794 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list793, i32 0, i32 2
  %328 = load %union.tree_node*, %union.tree_node** %value794, align 8
  %type795 = bitcast %union.tree_node* %328 to %struct.tree_type*
  %main_variant796 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type795, i32 0, i32 15
  %329 = load %union.tree_node*, %union.tree_node** %main_variant796, align 8
  %330 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp797 = icmp eq %union.tree_node* %329, %330
  br i1 %cmp797, label %land.lhs.true.799, label %if.then.806

land.lhs.true.799:                                ; preds = %land.lhs.true.792
  %331 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %list800 = bitcast %union.tree_node* %331 to %struct.tree_list*
  %value801 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list800, i32 0, i32 2
  %332 = load %union.tree_node*, %union.tree_node** %value801, align 8
  %type802 = bitcast %union.tree_node* %332 to %struct.tree_type*
  %main_variant803 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type802, i32 0, i32 15
  %333 = load %union.tree_node*, %union.tree_node** %main_variant803, align 8
  %334 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %cmp804 = icmp eq %union.tree_node* %333, %334
  br i1 %cmp804, label %if.end.807, label %if.then.806

if.then.806:                                      ; preds = %land.lhs.true.799, %land.lhs.true.792, %land.lhs.true.790
  %335 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %336 = load i32, i32* %nargs, align 4
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %335, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.280, i32 0, i32 0), i32 %336)
  %337 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %337, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.278, i32 0, i32 0))
  store i32 1, i32* %errmsg, align 4
  br label %for.end.813

if.end.807:                                       ; preds = %land.lhs.true.799, %if.end.783
  br label %for.inc.808

for.inc.808:                                      ; preds = %if.end.807
  %338 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common809 = bitcast %union.tree_node* %338 to %struct.tree_common*
  %chain810 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common809, i32 0, i32 0
  %339 = load %union.tree_node*, %union.tree_node** %chain810, align 8
  store %union.tree_node* %339, %union.tree_node** %parm, align 8
  %340 = load %union.tree_node*, %union.tree_node** %type748, align 8
  %common811 = bitcast %union.tree_node* %340 to %struct.tree_common*
  %chain812 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common811, i32 0, i32 0
  %341 = load %union.tree_node*, %union.tree_node** %chain812, align 8
  store %union.tree_node* %341, %union.tree_node** %type748, align 8
  %342 = load i32, i32* %nargs, align 4
  %inc = add nsw i32 %342, 1
  store i32 %inc, i32* %nargs, align 4
  br label %for.cond.753

for.end.813:                                      ; preds = %if.then.806, %if.then.782, %if.then.767
  br label %if.end.982

if.else.814:                                      ; preds = %land.lhs.true.743, %land.lhs.true.738, %land.lhs.true.733, %land.lhs.true.728, %if.else.721
  %343 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common815 = bitcast %union.tree_node* %343 to %struct.tree_common*
  %code816 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common815, i32 0, i32 2
  %bf.load817 = load i32, i32* %code816, align 8
  %bf.clear818 = and i32 %bf.load817, 255
  %cmp819 = icmp eq i32 %bf.clear818, 30
  br i1 %cmp819, label %land.lhs.true.821, label %if.end.844

land.lhs.true.821:                                ; preds = %if.else.814
  %344 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl822 = bitcast %union.tree_node* %344 to %struct.tree_decl*
  %lang_specific823 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl822, i32 0, i32 24
  %345 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific823, align 8
  %base824 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %345, i32 0, i32 0
  %346 = bitcast %struct.c_lang_decl* %base824 to i8*
  %bf.load825 = load i8, i8* %346, align 4
  %bf.clear826 = and i8 %bf.load825, 1
  %bf.cast827 = zext i8 %bf.clear826 to i32
  %tobool828 = icmp ne i32 %bf.cast827, 0
  br i1 %tobool828, label %if.end.844, label %land.lhs.true.829

land.lhs.true.829:                                ; preds = %land.lhs.true.821
  %347 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl830 = bitcast %union.tree_node* %347 to %struct.tree_decl*
  %lang_specific831 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl830, i32 0, i32 24
  %348 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific831, align 8
  %base832 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %348, i32 0, i32 0
  %349 = bitcast %struct.c_lang_decl* %base832 to i8*
  %bf.load833 = load i8, i8* %349, align 4
  %bf.clear834 = and i8 %bf.load833, 1
  %bf.cast835 = zext i8 %bf.clear834 to i32
  %tobool836 = icmp ne i32 %bf.cast835, 0
  br i1 %tobool836, label %land.lhs.true.837, label %if.end.844

land.lhs.true.837:                                ; preds = %land.lhs.true.829
  %350 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common838 = bitcast %union.tree_node* %350 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common838, i32 0, i32 2
  %bf.load839 = load i32, i32* %used_flag, align 8
  %bf.lshr840 = lshr i32 %bf.load839, 16
  %bf.clear841 = and i32 %bf.lshr840, 1
  %tobool842 = icmp ne i32 %bf.clear841, 0
  br i1 %tobool842, label %if.then.843, label %if.end.844

if.then.843:                                      ; preds = %land.lhs.true.837
  %351 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %351, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.281, i32 0, i32 0))
  br label %if.end.844

if.end.844:                                       ; preds = %if.then.843, %land.lhs.true.837, %land.lhs.true.829, %land.lhs.true.821, %if.else.814
  %352 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common845 = bitcast %union.tree_node* %352 to %struct.tree_common*
  %code846 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common845, i32 0, i32 2
  %bf.load847 = load i32, i32* %code846, align 8
  %bf.clear848 = and i32 %bf.load847, 255
  %cmp849 = icmp eq i32 %bf.clear848, 30
  br i1 %cmp849, label %land.lhs.true.851, label %if.end.873

land.lhs.true.851:                                ; preds = %if.end.844
  %353 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl852 = bitcast %union.tree_node* %353 to %struct.tree_decl*
  %lang_specific853 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl852, i32 0, i32 24
  %354 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific853, align 8
  %base854 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %354, i32 0, i32 0
  %355 = bitcast %struct.c_lang_decl* %base854 to i8*
  %bf.load855 = load i8, i8* %355, align 4
  %bf.clear856 = and i8 %bf.load855, 1
  %bf.cast857 = zext i8 %bf.clear856 to i32
  %tobool858 = icmp ne i32 %bf.cast857, 0
  br i1 %tobool858, label %if.end.873, label %land.lhs.true.859

land.lhs.true.859:                                ; preds = %land.lhs.true.851
  %356 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl860 = bitcast %union.tree_node* %356 to %struct.tree_decl*
  %lang_specific861 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl860, i32 0, i32 24
  %357 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific861, align 8
  %base862 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %357, i32 0, i32 0
  %358 = bitcast %struct.c_lang_decl* %base862 to i8*
  %bf.load863 = load i8, i8* %358, align 4
  %bf.clear864 = and i8 %bf.load863, 1
  %bf.cast865 = zext i8 %bf.clear864 to i32
  %tobool866 = icmp ne i32 %bf.cast865, 0
  br i1 %tobool866, label %land.lhs.true.867, label %if.end.873

land.lhs.true.867:                                ; preds = %land.lhs.true.859
  %359 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl868 = bitcast %union.tree_node* %359 to %struct.tree_decl*
  %initial869 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl868, i32 0, i32 12
  %360 = load %union.tree_node*, %union.tree_node** %initial869, align 8
  %cmp870 = icmp ne %union.tree_node* %360, null
  br i1 %cmp870, label %if.then.872, label %if.end.873

if.then.872:                                      ; preds = %land.lhs.true.867
  %361 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %361, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.282, i32 0, i32 0))
  br label %if.end.873

if.end.873:                                       ; preds = %if.then.872, %land.lhs.true.867, %land.lhs.true.859, %land.lhs.true.851, %if.end.844
  %362 = load i32, i32* @pedantic, align 4
  %tobool874 = icmp ne i32 %362, 0
  br i1 %tobool874, label %land.lhs.true.882, label %lor.lhs.false.875

lor.lhs.false.875:                                ; preds = %if.end.873
  %363 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common876 = bitcast %union.tree_node* %363 to %struct.tree_common*
  %code877 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common876, i32 0, i32 2
  %bf.load878 = load i32, i32* %code877, align 8
  %bf.clear879 = and i32 %bf.load878, 255
  %cmp880 = icmp eq i32 %bf.clear879, 30
  br i1 %cmp880, label %land.lhs.true.882, label %if.end.897

land.lhs.true.882:                                ; preds = %lor.lhs.false.875, %if.end.873
  %364 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common883 = bitcast %union.tree_node* %364 to %struct.tree_common*
  %public_flag884 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common883, i32 0, i32 2
  %bf.load885 = load i32, i32* %public_flag884, align 8
  %bf.lshr886 = lshr i32 %bf.load885, 19
  %bf.clear887 = and i32 %bf.lshr886, 1
  %tobool888 = icmp ne i32 %bf.clear887, 0
  br i1 %tobool888, label %land.lhs.true.889, label %if.end.897

land.lhs.true.889:                                ; preds = %land.lhs.true.882
  %365 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common890 = bitcast %union.tree_node* %365 to %struct.tree_common*
  %public_flag891 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common890, i32 0, i32 2
  %bf.load892 = load i32, i32* %public_flag891, align 8
  %bf.lshr893 = lshr i32 %bf.load892, 19
  %bf.clear894 = and i32 %bf.lshr893, 1
  %tobool895 = icmp ne i32 %bf.clear894, 0
  br i1 %tobool895, label %if.end.897, label %if.then.896

if.then.896:                                      ; preds = %land.lhs.true.889
  %366 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %366, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.283, i32 0, i32 0))
  br label %if.end.897

if.end.897:                                       ; preds = %if.then.896, %land.lhs.true.889, %land.lhs.true.882, %lor.lhs.false.875
  %367 = load i32, i32* @warn_traditional, align 4
  %tobool898 = icmp ne i32 %367, 0
  br i1 %tobool898, label %land.lhs.true.899, label %if.end.923

land.lhs.true.899:                                ; preds = %if.end.897
  %368 = load i32, i32* @in_system_header, align 4
  %tobool900 = icmp ne i32 %368, 0
  br i1 %tobool900, label %if.end.923, label %land.lhs.true.901

land.lhs.true.901:                                ; preds = %land.lhs.true.899
  %369 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common902 = bitcast %union.tree_node* %369 to %struct.tree_common*
  %code903 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common902, i32 0, i32 2
  %bf.load904 = load i32, i32* %code903, align 8
  %bf.clear905 = and i32 %bf.load904, 255
  %cmp906 = icmp eq i32 %bf.clear905, 30
  br i1 %cmp906, label %land.lhs.true.908, label %if.end.923

land.lhs.true.908:                                ; preds = %land.lhs.true.901
  %370 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common909 = bitcast %union.tree_node* %370 to %struct.tree_common*
  %public_flag910 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common909, i32 0, i32 2
  %bf.load911 = load i32, i32* %public_flag910, align 8
  %bf.lshr912 = lshr i32 %bf.load911, 19
  %bf.clear913 = and i32 %bf.lshr912, 1
  %tobool914 = icmp ne i32 %bf.clear913, 0
  br i1 %tobool914, label %if.end.923, label %land.lhs.true.915

land.lhs.true.915:                                ; preds = %land.lhs.true.908
  %371 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common916 = bitcast %union.tree_node* %371 to %struct.tree_common*
  %public_flag917 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common916, i32 0, i32 2
  %bf.load918 = load i32, i32* %public_flag917, align 8
  %bf.lshr919 = lshr i32 %bf.load918, 19
  %bf.clear920 = and i32 %bf.lshr919, 1
  %tobool921 = icmp ne i32 %bf.clear920, 0
  br i1 %tobool921, label %if.then.922, label %if.end.923

if.then.922:                                      ; preds = %land.lhs.true.915
  %372 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %372, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.284, i32 0, i32 0))
  br label %if.end.923

if.end.923:                                       ; preds = %if.then.922, %land.lhs.true.915, %land.lhs.true.908, %land.lhs.true.901, %land.lhs.true.899, %if.end.897
  %373 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common924 = bitcast %union.tree_node* %373 to %struct.tree_common*
  %code925 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common924, i32 0, i32 2
  %bf.load926 = load i32, i32* %code925, align 8
  %bf.clear927 = and i32 %bf.load926, 255
  %cmp928 = icmp ne i32 %bf.clear927, 30
  br i1 %cmp928, label %land.lhs.true.930, label %if.else.944

land.lhs.true.930:                                ; preds = %if.end.923
  %374 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common931 = bitcast %union.tree_node* %374 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common931, i32 0, i32 2
  %bf.load932 = load i32, i32* %readonly_flag, align 8
  %bf.lshr933 = lshr i32 %bf.load932, 12
  %bf.clear934 = and i32 %bf.lshr933, 1
  %tobool935 = icmp ne i32 %bf.clear934, 0
  br i1 %tobool935, label %if.else.944, label %land.lhs.true.936

land.lhs.true.936:                                ; preds = %land.lhs.true.930
  %375 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common937 = bitcast %union.tree_node* %375 to %struct.tree_common*
  %readonly_flag938 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common937, i32 0, i32 2
  %bf.load939 = load i32, i32* %readonly_flag938, align 8
  %bf.lshr940 = lshr i32 %bf.load939, 12
  %bf.clear941 = and i32 %bf.lshr940, 1
  %tobool942 = icmp ne i32 %bf.clear941, 0
  br i1 %tobool942, label %if.then.943, label %if.else.944

if.then.943:                                      ; preds = %land.lhs.true.936
  %376 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %376, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.285, i32 0, i32 0))
  br label %if.end.981

if.else.944:                                      ; preds = %land.lhs.true.936, %land.lhs.true.930, %if.end.923
  %377 = load i32, i32* @pedantic, align 4
  %tobool945 = icmp ne i32 %377, 0
  br i1 %tobool945, label %land.lhs.true.946, label %if.end.980

land.lhs.true.946:                                ; preds = %if.else.944
  %378 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common947 = bitcast %union.tree_node* %378 to %struct.tree_common*
  %code948 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common947, i32 0, i32 2
  %bf.load949 = load i32, i32* %code948, align 8
  %bf.clear950 = and i32 %bf.load949, 255
  %cmp951 = icmp ne i32 %bf.clear950, 30
  br i1 %cmp951, label %land.lhs.true.953, label %if.end.980

land.lhs.true.953:                                ; preds = %land.lhs.true.946
  %379 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common954 = bitcast %union.tree_node* %379 to %struct.tree_common*
  %readonly_flag955 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common954, i32 0, i32 2
  %bf.load956 = load i32, i32* %readonly_flag955, align 8
  %bf.lshr957 = lshr i32 %bf.load956, 12
  %bf.clear958 = and i32 %bf.lshr957, 1
  %380 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common959 = bitcast %union.tree_node* %380 to %struct.tree_common*
  %readonly_flag960 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common959, i32 0, i32 2
  %bf.load961 = load i32, i32* %readonly_flag960, align 8
  %bf.lshr962 = lshr i32 %bf.load961, 12
  %bf.clear963 = and i32 %bf.lshr962, 1
  %cmp964 = icmp ne i32 %bf.clear958, %bf.clear963
  br i1 %cmp964, label %if.then.979, label %lor.lhs.false.966

lor.lhs.false.966:                                ; preds = %land.lhs.true.953
  %381 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common967 = bitcast %union.tree_node* %381 to %struct.tree_common*
  %volatile_flag968 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common967, i32 0, i32 2
  %bf.load969 = load i32, i32* %volatile_flag968, align 8
  %bf.lshr970 = lshr i32 %bf.load969, 11
  %bf.clear971 = and i32 %bf.lshr970, 1
  %382 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common972 = bitcast %union.tree_node* %382 to %struct.tree_common*
  %volatile_flag973 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common972, i32 0, i32 2
  %bf.load974 = load i32, i32* %volatile_flag973, align 8
  %bf.lshr975 = lshr i32 %bf.load974, 11
  %bf.clear976 = and i32 %bf.lshr975, 1
  %cmp977 = icmp ne i32 %bf.clear971, %bf.clear976
  br i1 %cmp977, label %if.then.979, label %if.end.980

if.then.979:                                      ; preds = %lor.lhs.false.966, %land.lhs.true.953
  %383 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %383, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.286, i32 0, i32 0))
  br label %if.end.980

if.end.980:                                       ; preds = %if.then.979, %lor.lhs.false.966, %land.lhs.true.946, %if.else.944
  br label %if.end.981

if.end.981:                                       ; preds = %if.end.980, %if.then.943
  br label %if.end.982

if.end.982:                                       ; preds = %if.end.981, %for.end.813
  br label %if.end.983

if.end.983:                                       ; preds = %if.end.982, %land.end.718
  br label %if.end.984

if.end.984:                                       ; preds = %if.end.983
  br label %if.end.985

if.end.985:                                       ; preds = %if.end.984, %if.end.673
  br label %if.end.986

if.end.986:                                       ; preds = %if.end.985, %if.end.579
  br label %if.end.987

if.end.987:                                       ; preds = %if.end.986, %if.end.463
  br label %if.end.988

if.end.988:                                       ; preds = %if.end.987, %if.end.428
  br label %if.end.989

if.end.989:                                       ; preds = %if.end.988, %if.then.271
  %384 = load i32, i32* %errmsg, align 4
  %cmp990 = icmp eq i32 %384, 0
  br i1 %cmp990, label %land.lhs.true.992, label %if.end.1032

land.lhs.true.992:                                ; preds = %if.end.989
  %385 = load i32, i32* @warn_redundant_decls, align 4
  %tobool993 = icmp ne i32 %385, 0
  br i1 %tobool993, label %land.lhs.true.994, label %if.end.1032

land.lhs.true.994:                                ; preds = %land.lhs.true.992
  %386 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl995 = bitcast %union.tree_node* %386 to %struct.tree_decl*
  %linenum996 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl995, i32 0, i32 2
  %387 = load i32, i32* %linenum996, align 4
  %cmp997 = icmp ne i32 %387, 0
  br i1 %cmp997, label %land.lhs.true.999, label %if.end.1032

land.lhs.true.999:                                ; preds = %land.lhs.true.994
  %388 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1000 = bitcast %union.tree_node* %388 to %struct.tree_common*
  %code1001 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1000, i32 0, i32 2
  %bf.load1002 = load i32, i32* %code1001, align 8
  %bf.clear1003 = and i32 %bf.load1002, 255
  %cmp1004 = icmp eq i32 %bf.clear1003, 30
  br i1 %cmp1004, label %land.lhs.true.1006, label %land.lhs.true.1016

land.lhs.true.1006:                               ; preds = %land.lhs.true.999
  %389 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1007 = bitcast %union.tree_node* %389 to %struct.tree_decl*
  %initial1008 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1007, i32 0, i32 12
  %390 = load %union.tree_node*, %union.tree_node** %initial1008, align 8
  %cmp1009 = icmp ne %union.tree_node* %390, null
  br i1 %cmp1009, label %land.lhs.true.1011, label %land.lhs.true.1016

land.lhs.true.1011:                               ; preds = %land.lhs.true.1006
  %391 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1012 = bitcast %union.tree_node* %391 to %struct.tree_decl*
  %initial1013 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1012, i32 0, i32 12
  %392 = load %union.tree_node*, %union.tree_node** %initial1013, align 8
  %cmp1014 = icmp eq %union.tree_node* %392, null
  br i1 %cmp1014, label %if.end.1032, label %land.lhs.true.1016

land.lhs.true.1016:                               ; preds = %land.lhs.true.1011, %land.lhs.true.1006, %land.lhs.true.999
  %393 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1017 = bitcast %union.tree_node* %393 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1017, i32 0, i32 5
  %394 = bitcast i48* %external_flag to i64*
  %bf.load1018 = load i64, i64* %394, align 8
  %bf.lshr1019 = lshr i64 %bf.load1018, 8
  %bf.clear1020 = and i64 %bf.lshr1019, 1
  %bf.cast1021 = trunc i64 %bf.clear1020 to i32
  %tobool1022 = icmp ne i32 %bf.cast1021, 0
  br i1 %tobool1022, label %land.lhs.true.1023, label %if.then.1031

land.lhs.true.1023:                               ; preds = %land.lhs.true.1016
  %395 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1024 = bitcast %union.tree_node* %395 to %struct.tree_decl*
  %external_flag1025 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1024, i32 0, i32 5
  %396 = bitcast i48* %external_flag1025 to i64*
  %bf.load1026 = load i64, i64* %396, align 8
  %bf.lshr1027 = lshr i64 %bf.load1026, 8
  %bf.clear1028 = and i64 %bf.lshr1027, 1
  %bf.cast1029 = trunc i64 %bf.clear1028 to i32
  %tobool1030 = icmp ne i32 %bf.cast1029, 0
  br i1 %tobool1030, label %if.then.1031, label %if.end.1032

if.then.1031:                                     ; preds = %land.lhs.true.1023, %land.lhs.true.1016
  %397 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %397, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.287, i32 0, i32 0))
  %398 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %398, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0))
  br label %if.end.1032

if.end.1032:                                      ; preds = %if.then.1031, %land.lhs.true.1023, %land.lhs.true.1011, %land.lhs.true.994, %land.lhs.true.992, %if.end.989
  %399 = load i32, i32* %types_match, align 4
  %tobool1033 = icmp ne i32 %399, 0
  br i1 %tobool1033, label %if.then.1034, label %if.else.1429

if.then.1034:                                     ; preds = %if.end.1032
  %400 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1035 = icmp ne i32 %400, 0
  br i1 %tobool1035, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.1034
  %401 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.1034
  %402 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond1036 = phi %union.tree_node* [ %401, %cond.true ], [ %402, %cond.false ]
  store %union.tree_node* %cond1036, %union.tree_node** %write_olddecl, align 8
  %403 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1037 = bitcast %union.tree_node* %403 to %struct.tree_common*
  %code1038 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1037, i32 0, i32 2
  %bf.load1039 = load i32, i32* %code1038, align 8
  %bf.clear1040 = and i32 %bf.load1039, 255
  %cmp1041 = icmp ne i32 %bf.clear1040, 30
  br i1 %cmp1041, label %if.then.1052, label %lor.lhs.false.1043

lor.lhs.false.1043:                               ; preds = %cond.end
  %404 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1044 = bitcast %union.tree_node* %404 to %struct.tree_decl*
  %built_in_class1045 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1044, i32 0, i32 5
  %405 = bitcast i48* %built_in_class1045 to i64*
  %bf.load1046 = load i64, i64* %405, align 8
  %bf.lshr1047 = lshr i64 %bf.load1046, 29
  %bf.clear1048 = and i64 %bf.lshr1047, 3
  %bf.cast1049 = trunc i64 %bf.clear1048 to i32
  %cmp1050 = icmp ne i32 %bf.cast1049, 0
  br i1 %cmp1050, label %if.end.1085, label %if.then.1052

if.then.1052:                                     ; preds = %lor.lhs.false.1043, %cond.end
  %406 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1053 = icmp ne i32 %406, 0
  br i1 %tobool1053, label %if.then.1054, label %if.else.1078

if.then.1054:                                     ; preds = %if.then.1052
  %407 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type1055 = bitcast %union.tree_node* %407 to %struct.tree_type*
  %values1056 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1055, i32 0, i32 1
  %408 = load %union.tree_node*, %union.tree_node** %values1056, align 8
  %cmp1057 = icmp ne %union.tree_node* %408, null
  br i1 %cmp1057, label %land.lhs.true.1059, label %if.else.1068

land.lhs.true.1059:                               ; preds = %if.then.1054
  %409 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type1060 = bitcast %union.tree_node* %409 to %struct.tree_type*
  %values1061 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1060, i32 0, i32 1
  %410 = load %union.tree_node*, %union.tree_node** %values1061, align 8
  %cmp1062 = icmp eq %union.tree_node* %410, null
  br i1 %cmp1062, label %if.then.1064, label %if.else.1068

if.then.1064:                                     ; preds = %land.lhs.true.1059
  %411 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %412 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %call1065 = call %union.tree_node* @common_type(%union.tree_node* %411, %union.tree_node* %412)
  %413 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1066 = bitcast %union.tree_node* %413 to %struct.tree_common*
  %type1067 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1066, i32 0, i32 1
  store %union.tree_node* %call1065, %union.tree_node** %type1067, align 8
  br label %if.end.1077

if.else.1068:                                     ; preds = %land.lhs.true.1059, %if.then.1054
  %414 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %415 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %type1069 = bitcast %union.tree_node* %415 to %struct.tree_type*
  %attributes1070 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1069, i32 0, i32 4
  %416 = load %union.tree_node*, %union.tree_node** %attributes1070, align 8
  %417 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %type1071 = bitcast %union.tree_node* %417 to %struct.tree_type*
  %attributes1072 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1071, i32 0, i32 4
  %418 = load %union.tree_node*, %union.tree_node** %attributes1072, align 8
  %call1073 = call %union.tree_node* @merge_attributes(%union.tree_node* %416, %union.tree_node* %418)
  %call1074 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %414, %union.tree_node* %call1073)
  %419 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1075 = bitcast %union.tree_node* %419 to %struct.tree_common*
  %type1076 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1075, i32 0, i32 1
  store %union.tree_node* %call1074, %union.tree_node** %type1076, align 8
  br label %if.end.1077

if.end.1077:                                      ; preds = %if.else.1068, %if.then.1064
  br label %if.end.1084

if.else.1078:                                     ; preds = %if.then.1052
  %420 = load %union.tree_node*, %union.tree_node** %newtype, align 8
  %421 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %call1079 = call %union.tree_node* @common_type(%union.tree_node* %420, %union.tree_node* %421)
  %422 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1080 = bitcast %union.tree_node* %422 to %struct.tree_common*
  %type1081 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1080, i32 0, i32 1
  store %union.tree_node* %call1079, %union.tree_node** %type1081, align 8
  %423 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1082 = bitcast %union.tree_node* %423 to %struct.tree_common*
  %type1083 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1082, i32 0, i32 1
  store %union.tree_node* %call1079, %union.tree_node** %type1083, align 8
  br label %if.end.1084

if.end.1084:                                      ; preds = %if.else.1078, %if.end.1077
  br label %if.end.1085

if.end.1085:                                      ; preds = %if.end.1084, %lor.lhs.false.1043
  %424 = load %union.tree_node*, %union.tree_node** %oldtype, align 8
  %425 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1086 = bitcast %union.tree_node* %425 to %struct.tree_common*
  %type1087 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1086, i32 0, i32 1
  %426 = load %union.tree_node*, %union.tree_node** %type1087, align 8
  %cmp1088 = icmp ne %union.tree_node* %424, %426
  br i1 %cmp1088, label %if.then.1090, label %if.else.1121

if.then.1090:                                     ; preds = %if.end.1085
  %427 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1091 = bitcast %union.tree_node* %427 to %struct.tree_common*
  %type1092 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1091, i32 0, i32 1
  %428 = load %union.tree_node*, %union.tree_node** %type1092, align 8
  %429 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1093 = icmp ne %union.tree_node* %428, %429
  br i1 %cmp1093, label %if.then.1095, label %if.end.1098

if.then.1095:                                     ; preds = %if.then.1090
  %430 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1096 = bitcast %union.tree_node* %430 to %struct.tree_common*
  %type1097 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1096, i32 0, i32 1
  %431 = load %union.tree_node*, %union.tree_node** %type1097, align 8
  call void @layout_type(%union.tree_node* %431)
  br label %if.end.1098

if.end.1098:                                      ; preds = %if.then.1095, %if.then.1090
  %432 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1099 = bitcast %union.tree_node* %432 to %struct.tree_common*
  %code1100 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1099, i32 0, i32 2
  %bf.load1101 = load i32, i32* %code1100, align 8
  %bf.clear1102 = and i32 %bf.load1101, 255
  %cmp1103 = icmp ne i32 %bf.clear1102, 30
  br i1 %cmp1103, label %land.lhs.true.1105, label %if.end.1120

land.lhs.true.1105:                               ; preds = %if.end.1098
  %433 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1106 = bitcast %union.tree_node* %433 to %struct.tree_common*
  %code1107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1106, i32 0, i32 2
  %bf.load1108 = load i32, i32* %code1107, align 8
  %bf.clear1109 = and i32 %bf.load1108, 255
  %cmp1110 = icmp ne i32 %bf.clear1109, 33
  br i1 %cmp1110, label %land.lhs.true.1112, label %if.end.1120

land.lhs.true.1112:                               ; preds = %land.lhs.true.1105
  %434 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1113 = bitcast %union.tree_node* %434 to %struct.tree_common*
  %code1114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1113, i32 0, i32 2
  %bf.load1115 = load i32, i32* %code1114, align 8
  %bf.clear1116 = and i32 %bf.load1115, 255
  %cmp1117 = icmp ne i32 %bf.clear1116, 32
  br i1 %cmp1117, label %if.then.1119, label %if.end.1120

if.then.1119:                                     ; preds = %land.lhs.true.1112
  %435 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void @layout_decl(%union.tree_node* %435, i32 0)
  br label %if.end.1120

if.end.1120:                                      ; preds = %if.then.1119, %land.lhs.true.1112, %land.lhs.true.1105, %if.end.1098
  br label %if.end.1188

if.else.1121:                                     ; preds = %if.end.1085
  %436 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1122 = bitcast %union.tree_node* %436 to %struct.tree_decl*
  %size = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1122, i32 0, i32 4
  %437 = load %union.tree_node*, %union.tree_node** %size, align 8
  %438 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1123 = bitcast %union.tree_node* %438 to %struct.tree_decl*
  %size1124 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1123, i32 0, i32 4
  store %union.tree_node* %437, %union.tree_node** %size1124, align 8
  %439 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1125 = bitcast %union.tree_node* %439 to %struct.tree_decl*
  %size_unit = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1125, i32 0, i32 7
  %440 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %441 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1126 = bitcast %union.tree_node* %441 to %struct.tree_decl*
  %size_unit1127 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1126, i32 0, i32 7
  store %union.tree_node* %440, %union.tree_node** %size_unit1127, align 8
  %442 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1128 = bitcast %union.tree_node* %442 to %struct.tree_decl*
  %mode1129 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1128, i32 0, i32 5
  %443 = bitcast i48* %mode1129 to i64*
  %bf.load1130 = load i64, i64* %443, align 8
  %bf.clear1131 = and i64 %bf.load1130, 255
  %bf.cast1132 = trunc i64 %bf.clear1131 to i32
  %444 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1133 = bitcast %union.tree_node* %444 to %struct.tree_decl*
  %mode1134 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1133, i32 0, i32 5
  %445 = bitcast i48* %mode1134 to i64*
  %446 = zext i32 %bf.cast1132 to i64
  %bf.load1135 = load i64, i64* %445, align 8
  %bf.value1136 = and i64 %446, 255
  %bf.clear1137 = and i64 %bf.load1135, -256
  %bf.set1138 = or i64 %bf.clear1137, %bf.value1136
  store i64 %bf.set1138, i64* %445, align 8
  %bf.result.cast = trunc i64 %bf.value1136 to i32
  %447 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1139 = bitcast %union.tree_node* %447 to %struct.tree_common*
  %code1140 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1139, i32 0, i32 2
  %bf.load1141 = load i32, i32* %code1140, align 8
  %bf.clear1142 = and i32 %bf.load1141, 255
  %cmp1143 = icmp ne i32 %bf.clear1142, 30
  br i1 %cmp1143, label %if.then.1145, label %if.end.1187

if.then.1145:                                     ; preds = %if.else.1121
  %448 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1146 = bitcast %union.tree_node* %448 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1146, i32 0, i32 6
  %a = bitcast %union.anon* %u1 to %struct.anon.0*
  %449 = bitcast %struct.anon.0* %a to i32*
  %bf.load1147 = load i32, i32* %449, align 4
  %bf.clear1148 = and i32 %bf.load1147, 16777215
  %450 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1149 = bitcast %union.tree_node* %450 to %struct.tree_decl*
  %u11150 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1149, i32 0, i32 6
  %a1151 = bitcast %union.anon* %u11150 to %struct.anon.0*
  %451 = bitcast %struct.anon.0* %a1151 to i32*
  %bf.load1152 = load i32, i32* %451, align 4
  %bf.clear1153 = and i32 %bf.load1152, 16777215
  %cmp1154 = icmp sgt i32 %bf.clear1148, %bf.clear1153
  br i1 %cmp1154, label %if.then.1156, label %if.end.1186

if.then.1156:                                     ; preds = %if.then.1145
  %452 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1157 = bitcast %union.tree_node* %452 to %struct.tree_decl*
  %u11158 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1157, i32 0, i32 6
  %a1159 = bitcast %union.anon* %u11158 to %struct.anon.0*
  %453 = bitcast %struct.anon.0* %a1159 to i32*
  %bf.load1160 = load i32, i32* %453, align 4
  %bf.clear1161 = and i32 %bf.load1160, 16777215
  %454 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1162 = bitcast %union.tree_node* %454 to %struct.tree_decl*
  %u11163 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1162, i32 0, i32 6
  %a1164 = bitcast %union.anon* %u11163 to %struct.anon.0*
  %455 = bitcast %struct.anon.0* %a1164 to i32*
  %bf.load1165 = load i32, i32* %455, align 4
  %bf.value1166 = and i32 %bf.clear1161, 16777215
  %bf.clear1167 = and i32 %bf.load1165, -16777216
  %bf.set1168 = or i32 %bf.clear1167, %bf.value1166
  store i32 %bf.set1168, i32* %455, align 4
  %456 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1169 = bitcast %union.tree_node* %456 to %struct.tree_decl*
  %u11170 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1169, i32 0, i32 6
  %a1171 = bitcast %union.anon* %u11170 to %struct.anon.0*
  %457 = bitcast %struct.anon.0* %a1171 to i32*
  %bf.load1172 = load i32, i32* %457, align 4
  %bf.clear1173 = and i32 %bf.load1172, 16777215
  %458 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1174 = bitcast %union.tree_node* %458 to %struct.tree_decl*
  %user_align = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1174, i32 0, i32 5
  %459 = bitcast i48* %user_align to i64*
  %bf.load1175 = load i64, i64* %459, align 8
  %bf.lshr1176 = lshr i64 %bf.load1175, 35
  %bf.clear1177 = and i64 %bf.lshr1176, 1
  %bf.cast1178 = trunc i64 %bf.clear1177 to i32
  %or1179 = or i32 %bf.cast1178, %bf.clear1173
  %460 = zext i32 %or1179 to i64
  %bf.load1180 = load i64, i64* %459, align 8
  %bf.value1181 = and i64 %460, 1
  %bf.shl1182 = shl i64 %bf.value1181, 35
  %bf.clear1183 = and i64 %bf.load1180, -34359738369
  %bf.set1184 = or i64 %bf.clear1183, %bf.shl1182
  store i64 %bf.set1184, i64* %459, align 8
  %bf.result.cast1185 = trunc i64 %bf.value1181 to i32
  br label %if.end.1186

if.end.1186:                                      ; preds = %if.then.1156, %if.then.1145
  br label %if.end.1187

if.end.1187:                                      ; preds = %if.end.1186, %if.else.1121
  br label %if.end.1188

if.end.1188:                                      ; preds = %if.end.1187, %if.end.1120
  %461 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1189 = bitcast %union.tree_node* %461 to %struct.tree_decl*
  %rtl = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1189, i32 0, i32 17
  %462 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8
  %463 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1190 = bitcast %union.tree_node* %463 to %struct.tree_decl*
  %rtl1191 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1190, i32 0, i32 17
  store %struct.rtx_def* %462, %struct.rtx_def** %rtl1191, align 8
  %464 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1192 = bitcast %union.tree_node* %464 to %struct.tree_common*
  %code1193 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1192, i32 0, i32 2
  %bf.load1194 = load i32, i32* %code1193, align 8
  %bf.clear1195 = and i32 %bf.load1194, 255
  %cmp1196 = icmp eq i32 %bf.clear1195, 30
  br i1 %cmp1196, label %land.lhs.true.1198, label %if.end.1224

land.lhs.true.1198:                               ; preds = %if.end.1188
  %465 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1199 = bitcast %union.tree_node* %465 to %struct.tree_common*
  %unsigned_flag1200 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1199, i32 0, i32 2
  %bf.load1201 = load i32, i32* %unsigned_flag1200, align 8
  %bf.lshr1202 = lshr i32 %bf.load1201, 13
  %bf.clear1203 = and i32 %bf.lshr1202, 1
  %tobool1204 = icmp ne i32 %bf.clear1203, 0
  br i1 %tobool1204, label %land.lhs.true.1205, label %if.end.1224

land.lhs.true.1205:                               ; preds = %land.lhs.true.1198
  %466 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1206 = bitcast %union.tree_node* %466 to %struct.tree_common*
  %volatile_flag1207 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1206, i32 0, i32 2
  %bf.load1208 = load i32, i32* %volatile_flag1207, align 8
  %bf.lshr1209 = lshr i32 %bf.load1208, 11
  %bf.clear1210 = and i32 %bf.lshr1209, 1
  %tobool1211 = icmp ne i32 %bf.clear1210, 0
  br i1 %tobool1211, label %land.lhs.true.1212, label %if.end.1224

land.lhs.true.1212:                               ; preds = %land.lhs.true.1205
  %467 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1213 = bitcast %union.tree_node* %467 to %struct.tree_common*
  %volatile_flag1214 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1213, i32 0, i32 2
  %bf.load1215 = load i32, i32* %volatile_flag1214, align 8
  %bf.lshr1216 = lshr i32 %bf.load1215, 11
  %bf.clear1217 = and i32 %bf.lshr1216, 1
  %tobool1218 = icmp ne i32 %bf.clear1217, 0
  br i1 %tobool1218, label %if.end.1224, label %if.then.1219

if.then.1219:                                     ; preds = %land.lhs.true.1212
  %468 = load %union.tree_node*, %union.tree_node** %write_olddecl, align 8
  %common1220 = bitcast %union.tree_node* %468 to %struct.tree_common*
  %volatile_flag1221 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1220, i32 0, i32 2
  %bf.load1222 = load i32, i32* %volatile_flag1221, align 8
  %bf.clear1223 = and i32 %bf.load1222, -2049
  store i32 %bf.clear1223, i32* %volatile_flag1221, align 8
  br label %if.end.1224

if.end.1224:                                      ; preds = %if.then.1219, %land.lhs.true.1212, %land.lhs.true.1205, %land.lhs.true.1198, %if.end.1188
  %469 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1225 = bitcast %union.tree_node* %469 to %struct.tree_common*
  %readonly_flag1226 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1225, i32 0, i32 2
  %bf.load1227 = load i32, i32* %readonly_flag1226, align 8
  %bf.lshr1228 = lshr i32 %bf.load1227, 12
  %bf.clear1229 = and i32 %bf.lshr1228, 1
  %tobool1230 = icmp ne i32 %bf.clear1229, 0
  br i1 %tobool1230, label %if.then.1231, label %if.end.1237

if.then.1231:                                     ; preds = %if.end.1224
  %470 = load %union.tree_node*, %union.tree_node** %write_olddecl, align 8
  %common1232 = bitcast %union.tree_node* %470 to %struct.tree_common*
  %readonly_flag1233 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1232, i32 0, i32 2
  %bf.load1234 = load i32, i32* %readonly_flag1233, align 8
  %bf.clear1235 = and i32 %bf.load1234, -4097
  %bf.set1236 = or i32 %bf.clear1235, 4096
  store i32 %bf.set1236, i32* %readonly_flag1233, align 8
  br label %if.end.1237

if.end.1237:                                      ; preds = %if.then.1231, %if.end.1224
  %471 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1238 = bitcast %union.tree_node* %471 to %struct.tree_common*
  %volatile_flag1239 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1238, i32 0, i32 2
  %bf.load1240 = load i32, i32* %volatile_flag1239, align 8
  %bf.lshr1241 = lshr i32 %bf.load1240, 11
  %bf.clear1242 = and i32 %bf.lshr1241, 1
  %tobool1243 = icmp ne i32 %bf.clear1242, 0
  br i1 %tobool1243, label %if.then.1244, label %if.end.1261

if.then.1244:                                     ; preds = %if.end.1237
  %472 = load %union.tree_node*, %union.tree_node** %write_olddecl, align 8
  %common1245 = bitcast %union.tree_node* %472 to %struct.tree_common*
  %volatile_flag1246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1245, i32 0, i32 2
  %bf.load1247 = load i32, i32* %volatile_flag1246, align 8
  %bf.clear1248 = and i32 %bf.load1247, -2049
  %bf.set1249 = or i32 %bf.clear1248, 2048
  store i32 %bf.set1249, i32* %volatile_flag1246, align 8
  %473 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1250 = bitcast %union.tree_node* %473 to %struct.tree_common*
  %code1251 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1250, i32 0, i32 2
  %bf.load1252 = load i32, i32* %code1251, align 8
  %bf.clear1253 = and i32 %bf.load1252, 255
  %cmp1254 = icmp eq i32 %bf.clear1253, 34
  br i1 %cmp1254, label %land.lhs.true.1256, label %if.end.1260

land.lhs.true.1256:                               ; preds = %if.then.1244
  %474 = load i32, i32* %errmsg, align 4
  %cmp1257 = icmp eq i32 %474, 0
  br i1 %cmp1257, label %if.then.1259, label %if.end.1260

if.then.1259:                                     ; preds = %land.lhs.true.1256
  %475 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  call void @make_var_volatile(%union.tree_node* %475)
  br label %if.end.1260

if.end.1260:                                      ; preds = %if.then.1259, %land.lhs.true.1256, %if.then.1244
  br label %if.end.1261

if.end.1261:                                      ; preds = %if.end.1260, %if.end.1237
  %476 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1262 = bitcast %union.tree_node* %476 to %struct.tree_decl*
  %initial1263 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1262, i32 0, i32 12
  %477 = load %union.tree_node*, %union.tree_node** %initial1263, align 8
  %cmp1264 = icmp eq %union.tree_node* %477, null
  br i1 %cmp1264, label %land.lhs.true.1266, label %if.end.1281

land.lhs.true.1266:                               ; preds = %if.end.1261
  %478 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1267 = bitcast %union.tree_node* %478 to %struct.tree_decl*
  %initial1268 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1267, i32 0, i32 12
  %479 = load %union.tree_node*, %union.tree_node** %initial1268, align 8
  %cmp1269 = icmp ne %union.tree_node* %479, null
  br i1 %cmp1269, label %land.lhs.true.1271, label %if.end.1281

land.lhs.true.1271:                               ; preds = %land.lhs.true.1266
  %480 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1272 = icmp ne i32 %480, 0
  br i1 %tobool1272, label %if.end.1281, label %if.then.1273

if.then.1273:                                     ; preds = %land.lhs.true.1271
  %481 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1274 = bitcast %union.tree_node* %481 to %struct.tree_decl*
  %linenum1275 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1274, i32 0, i32 2
  %482 = load i32, i32* %linenum1275, align 4
  %483 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1276 = bitcast %union.tree_node* %483 to %struct.tree_decl*
  %linenum1277 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1276, i32 0, i32 2
  store i32 %482, i32* %linenum1277, align 4
  %484 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1278 = bitcast %union.tree_node* %484 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1278, i32 0, i32 1
  %485 = load i8*, i8** %filename, align 8
  %486 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1279 = bitcast %union.tree_node* %486 to %struct.tree_decl*
  %filename1280 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1279, i32 0, i32 1
  store i8* %485, i8** %filename1280, align 8
  br label %if.end.1281

if.end.1281:                                      ; preds = %if.then.1273, %land.lhs.true.1271, %land.lhs.true.1266, %if.end.1261
  %487 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1282 = bitcast %union.tree_node* %487 to %struct.tree_decl*
  %in_system_header_flag1283 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1282, i32 0, i32 5
  %488 = bitcast i48* %in_system_header_flag1283 to i64*
  %bf.load1284 = load i64, i64* %488, align 8
  %bf.lshr1285 = lshr i64 %bf.load1284, 16
  %bf.clear1286 = and i64 %bf.lshr1285, 1
  %bf.cast1287 = trunc i64 %bf.clear1286 to i32
  %tobool1288 = icmp ne i32 %bf.cast1287, 0
  br i1 %tobool1288, label %if.then.1289, label %if.else.1295

if.then.1289:                                     ; preds = %if.end.1281
  %489 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1290 = bitcast %union.tree_node* %489 to %struct.tree_decl*
  %in_system_header_flag1291 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1290, i32 0, i32 5
  %490 = bitcast i48* %in_system_header_flag1291 to i64*
  %bf.load1292 = load i64, i64* %490, align 8
  %bf.clear1293 = and i64 %bf.load1292, -65537
  %bf.set1294 = or i64 %bf.clear1293, 65536
  store i64 %bf.set1294, i64* %490, align 8
  br label %if.end.1310

if.else.1295:                                     ; preds = %if.end.1281
  %491 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1296 = bitcast %union.tree_node* %491 to %struct.tree_decl*
  %in_system_header_flag1297 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1296, i32 0, i32 5
  %492 = bitcast i48* %in_system_header_flag1297 to i64*
  %bf.load1298 = load i64, i64* %492, align 8
  %bf.lshr1299 = lshr i64 %bf.load1298, 16
  %bf.clear1300 = and i64 %bf.lshr1299, 1
  %bf.cast1301 = trunc i64 %bf.clear1300 to i32
  %tobool1302 = icmp ne i32 %bf.cast1301, 0
  br i1 %tobool1302, label %if.then.1303, label %if.end.1309

if.then.1303:                                     ; preds = %if.else.1295
  %493 = load %union.tree_node*, %union.tree_node** %write_olddecl, align 8
  %decl1304 = bitcast %union.tree_node* %493 to %struct.tree_decl*
  %in_system_header_flag1305 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1304, i32 0, i32 5
  %494 = bitcast i48* %in_system_header_flag1305 to i64*
  %bf.load1306 = load i64, i64* %494, align 8
  %bf.clear1307 = and i64 %bf.load1306, -65537
  %bf.set1308 = or i64 %bf.clear1307, 65536
  store i64 %bf.set1308, i64* %494, align 8
  br label %if.end.1309

if.end.1309:                                      ; preds = %if.then.1303, %if.else.1295
  br label %if.end.1310

if.end.1310:                                      ; preds = %if.end.1309, %if.then.1289
  %495 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1311 = bitcast %union.tree_node* %495 to %struct.tree_decl*
  %initial1312 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1311, i32 0, i32 12
  %496 = load %union.tree_node*, %union.tree_node** %initial1312, align 8
  %cmp1313 = icmp eq %union.tree_node* %496, null
  br i1 %cmp1313, label %land.lhs.true.1315, label %if.end.1322

land.lhs.true.1315:                               ; preds = %if.end.1310
  %497 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1316 = icmp ne i32 %497, 0
  br i1 %tobool1316, label %if.end.1322, label %if.then.1317

if.then.1317:                                     ; preds = %land.lhs.true.1315
  %498 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1318 = bitcast %union.tree_node* %498 to %struct.tree_decl*
  %initial1319 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1318, i32 0, i32 12
  %499 = load %union.tree_node*, %union.tree_node** %initial1319, align 8
  %500 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1320 = bitcast %union.tree_node* %500 to %struct.tree_decl*
  %initial1321 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1320, i32 0, i32 12
  store %union.tree_node* %499, %union.tree_node** %initial1321, align 8
  br label %if.end.1322

if.end.1322:                                      ; preds = %if.then.1317, %land.lhs.true.1315, %if.end.1310
  %501 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1323 = bitcast %union.tree_node* %501 to %struct.tree_decl*
  %section_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1323, i32 0, i32 15
  %502 = load %union.tree_node*, %union.tree_node** %section_name, align 8
  %cmp1324 = icmp eq %union.tree_node* %502, null
  br i1 %cmp1324, label %if.then.1326, label %if.end.1331

if.then.1326:                                     ; preds = %if.end.1322
  %503 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1327 = bitcast %union.tree_node* %503 to %struct.tree_decl*
  %section_name1328 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1327, i32 0, i32 15
  %504 = load %union.tree_node*, %union.tree_node** %section_name1328, align 8
  %505 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1329 = bitcast %union.tree_node* %505 to %struct.tree_decl*
  %section_name1330 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1329, i32 0, i32 15
  store %union.tree_node* %504, %union.tree_node** %section_name1330, align 8
  br label %if.end.1331

if.end.1331:                                      ; preds = %if.then.1326, %if.end.1322
  %506 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1332 = bitcast %union.tree_node* %506 to %struct.tree_decl*
  %assembler_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1332, i32 0, i32 14
  %507 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8
  %cmp1333 = icmp ne %union.tree_node* %507, null
  br i1 %cmp1333, label %cond.true.1335, label %cond.false.1347

cond.true.1335:                                   ; preds = %if.end.1331
  %508 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1336 = bitcast %union.tree_node* %508 to %struct.tree_decl*
  %assembler_name1337 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1336, i32 0, i32 14
  %509 = load %union.tree_node*, %union.tree_node** %assembler_name1337, align 8
  %cmp1338 = icmp ne %union.tree_node* %509, null
  br i1 %cmp1338, label %cond.true.1340, label %cond.false.1341

cond.true.1340:                                   ; preds = %cond.true.1335
  br label %cond.end.1342

cond.false.1341:                                  ; preds = %cond.true.1335
  %510 = load void (%union.tree_node*)*, void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8
  %511 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void %510(%union.tree_node* %511)
  br label %cond.end.1342

cond.end.1342:                                    ; preds = %cond.false.1341, %cond.true.1340
  %512 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1343 = bitcast %union.tree_node* %512 to %struct.tree_decl*
  %assembler_name1344 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1343, i32 0, i32 14
  %513 = load %union.tree_node*, %union.tree_node** %assembler_name1344, align 8
  %514 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1345 = bitcast %union.tree_node* %514 to %struct.tree_decl*
  %assembler_name1346 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1345, i32 0, i32 14
  store %union.tree_node* %513, %union.tree_node** %assembler_name1346, align 8
  br label %cond.end.1348

cond.false.1347:                                  ; preds = %if.end.1331
  br label %cond.end.1348

cond.end.1348:                                    ; preds = %cond.false.1347, %cond.end.1342
  %515 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1349 = bitcast %union.tree_node* %515 to %struct.tree_common*
  %code1350 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1349, i32 0, i32 2
  %bf.load1351 = load i32, i32* %code1350, align 8
  %bf.clear1352 = and i32 %bf.load1351, 255
  %cmp1353 = icmp eq i32 %bf.clear1352, 30
  br i1 %cmp1353, label %if.then.1355, label %if.end.1428

if.then.1355:                                     ; preds = %cond.end.1348
  %516 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1356 = bitcast %union.tree_node* %516 to %struct.tree_decl*
  %static_ctor_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1356, i32 0, i32 5
  %517 = bitcast i48* %static_ctor_flag to i64*
  %bf.load1357 = load i64, i64* %517, align 8
  %bf.lshr1358 = lshr i64 %bf.load1357, 20
  %bf.clear1359 = and i64 %bf.lshr1358, 1
  %bf.cast1360 = trunc i64 %bf.clear1359 to i32
  %518 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1361 = bitcast %union.tree_node* %518 to %struct.tree_decl*
  %static_ctor_flag1362 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1361, i32 0, i32 5
  %519 = bitcast i48* %static_ctor_flag1362 to i64*
  %bf.load1363 = load i64, i64* %519, align 8
  %bf.lshr1364 = lshr i64 %bf.load1363, 20
  %bf.clear1365 = and i64 %bf.lshr1364, 1
  %bf.cast1366 = trunc i64 %bf.clear1365 to i32
  %or1367 = or i32 %bf.cast1366, %bf.cast1360
  %520 = zext i32 %or1367 to i64
  %bf.load1368 = load i64, i64* %519, align 8
  %bf.value1369 = and i64 %520, 1
  %bf.shl1370 = shl i64 %bf.value1369, 20
  %bf.clear1371 = and i64 %bf.load1368, -1048577
  %bf.set1372 = or i64 %bf.clear1371, %bf.shl1370
  store i64 %bf.set1372, i64* %519, align 8
  %bf.result.cast1373 = trunc i64 %bf.value1369 to i32
  %521 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1374 = bitcast %union.tree_node* %521 to %struct.tree_decl*
  %static_dtor_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1374, i32 0, i32 5
  %522 = bitcast i48* %static_dtor_flag to i64*
  %bf.load1375 = load i64, i64* %522, align 8
  %bf.lshr1376 = lshr i64 %bf.load1375, 21
  %bf.clear1377 = and i64 %bf.lshr1376, 1
  %bf.cast1378 = trunc i64 %bf.clear1377 to i32
  %523 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1379 = bitcast %union.tree_node* %523 to %struct.tree_decl*
  %static_dtor_flag1380 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1379, i32 0, i32 5
  %524 = bitcast i48* %static_dtor_flag1380 to i64*
  %bf.load1381 = load i64, i64* %524, align 8
  %bf.lshr1382 = lshr i64 %bf.load1381, 21
  %bf.clear1383 = and i64 %bf.lshr1382, 1
  %bf.cast1384 = trunc i64 %bf.clear1383 to i32
  %or1385 = or i32 %bf.cast1384, %bf.cast1378
  %525 = zext i32 %or1385 to i64
  %bf.load1386 = load i64, i64* %524, align 8
  %bf.value1387 = and i64 %525, 1
  %bf.shl1388 = shl i64 %bf.value1387, 21
  %bf.clear1389 = and i64 %bf.load1386, -2097153
  %bf.set1390 = or i64 %bf.clear1389, %bf.shl1388
  store i64 %bf.set1390, i64* %524, align 8
  %bf.result.cast1391 = trunc i64 %bf.value1387 to i32
  %526 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1392 = bitcast %union.tree_node* %526 to %struct.tree_decl*
  %no_limit_stack = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1392, i32 0, i32 5
  %527 = bitcast i48* %no_limit_stack to i64*
  %bf.load1393 = load i64, i64* %527, align 8
  %bf.lshr1394 = lshr i64 %bf.load1393, 28
  %bf.clear1395 = and i64 %bf.lshr1394, 1
  %bf.cast1396 = trunc i64 %bf.clear1395 to i32
  %528 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1397 = bitcast %union.tree_node* %528 to %struct.tree_decl*
  %no_limit_stack1398 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1397, i32 0, i32 5
  %529 = bitcast i48* %no_limit_stack1398 to i64*
  %bf.load1399 = load i64, i64* %529, align 8
  %bf.lshr1400 = lshr i64 %bf.load1399, 28
  %bf.clear1401 = and i64 %bf.lshr1400, 1
  %bf.cast1402 = trunc i64 %bf.clear1401 to i32
  %or1403 = or i32 %bf.cast1402, %bf.cast1396
  %530 = zext i32 %or1403 to i64
  %bf.load1404 = load i64, i64* %529, align 8
  %bf.value1405 = and i64 %530, 1
  %bf.shl1406 = shl i64 %bf.value1405, 28
  %bf.clear1407 = and i64 %bf.load1404, -268435457
  %bf.set1408 = or i64 %bf.clear1407, %bf.shl1406
  store i64 %bf.set1408, i64* %529, align 8
  %bf.result.cast1409 = trunc i64 %bf.value1405 to i32
  %531 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1410 = bitcast %union.tree_node* %531 to %struct.tree_decl*
  %no_instrument_function_entry_exit = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1410, i32 0, i32 5
  %532 = bitcast i48* %no_instrument_function_entry_exit to i64*
  %bf.load1411 = load i64, i64* %532, align 8
  %bf.lshr1412 = lshr i64 %bf.load1411, 25
  %bf.clear1413 = and i64 %bf.lshr1412, 1
  %bf.cast1414 = trunc i64 %bf.clear1413 to i32
  %533 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1415 = bitcast %union.tree_node* %533 to %struct.tree_decl*
  %no_instrument_function_entry_exit1416 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1415, i32 0, i32 5
  %534 = bitcast i48* %no_instrument_function_entry_exit1416 to i64*
  %bf.load1417 = load i64, i64* %534, align 8
  %bf.lshr1418 = lshr i64 %bf.load1417, 25
  %bf.clear1419 = and i64 %bf.lshr1418, 1
  %bf.cast1420 = trunc i64 %bf.clear1419 to i32
  %or1421 = or i32 %bf.cast1420, %bf.cast1414
  %535 = zext i32 %or1421 to i64
  %bf.load1422 = load i64, i64* %534, align 8
  %bf.value1423 = and i64 %535, 1
  %bf.shl1424 = shl i64 %bf.value1423, 25
  %bf.clear1425 = and i64 %bf.load1422, -33554433
  %bf.set1426 = or i64 %bf.clear1425, %bf.shl1424
  store i64 %bf.set1426, i64* %534, align 8
  %bf.result.cast1427 = trunc i64 %bf.value1423 to i32
  br label %if.end.1428

if.end.1428:                                      ; preds = %if.then.1355, %cond.end.1348
  br label %if.end.1472

if.else.1429:                                     ; preds = %if.end.1032
  %536 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1430 = icmp ne i32 %536, 0
  br i1 %tobool1430, label %if.end.1471, label %if.then.1431

if.then.1431:                                     ; preds = %if.else.1429
  %537 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1432 = bitcast %union.tree_node* %537 to %struct.tree_common*
  %type1433 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1432, i32 0, i32 1
  %538 = load %union.tree_node*, %union.tree_node** %type1433, align 8
  %539 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1434 = bitcast %union.tree_node* %539 to %struct.tree_common*
  %type1435 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1434, i32 0, i32 1
  store %union.tree_node* %538, %union.tree_node** %type1435, align 8
  %540 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1436 = bitcast %union.tree_node* %540 to %struct.tree_common*
  %readonly_flag1437 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1436, i32 0, i32 2
  %bf.load1438 = load i32, i32* %readonly_flag1437, align 8
  %bf.lshr1439 = lshr i32 %bf.load1438, 12
  %bf.clear1440 = and i32 %bf.lshr1439, 1
  %541 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1441 = bitcast %union.tree_node* %541 to %struct.tree_common*
  %readonly_flag1442 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1441, i32 0, i32 2
  %bf.load1443 = load i32, i32* %readonly_flag1442, align 8
  %bf.value1444 = and i32 %bf.clear1440, 1
  %bf.shl1445 = shl i32 %bf.value1444, 12
  %bf.clear1446 = and i32 %bf.load1443, -4097
  %bf.set1447 = or i32 %bf.clear1446, %bf.shl1445
  store i32 %bf.set1447, i32* %readonly_flag1442, align 8
  %542 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1448 = bitcast %union.tree_node* %542 to %struct.tree_common*
  %volatile_flag1449 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1448, i32 0, i32 2
  %bf.load1450 = load i32, i32* %volatile_flag1449, align 8
  %bf.lshr1451 = lshr i32 %bf.load1450, 11
  %bf.clear1452 = and i32 %bf.lshr1451, 1
  %543 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1453 = bitcast %union.tree_node* %543 to %struct.tree_common*
  %volatile_flag1454 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1453, i32 0, i32 2
  %bf.load1455 = load i32, i32* %volatile_flag1454, align 8
  %bf.value1456 = and i32 %bf.clear1452, 1
  %bf.shl1457 = shl i32 %bf.value1456, 11
  %bf.clear1458 = and i32 %bf.load1455, -2049
  %bf.set1459 = or i32 %bf.clear1458, %bf.shl1457
  store i32 %bf.set1459, i32* %volatile_flag1454, align 8
  %544 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1460 = bitcast %union.tree_node* %544 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1460, i32 0, i32 2
  %bf.load1461 = load i32, i32* %side_effects_flag, align 8
  %bf.lshr1462 = lshr i32 %bf.load1461, 8
  %bf.clear1463 = and i32 %bf.lshr1462, 1
  %545 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1464 = bitcast %union.tree_node* %545 to %struct.tree_common*
  %side_effects_flag1465 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1464, i32 0, i32 2
  %bf.load1466 = load i32, i32* %side_effects_flag1465, align 8
  %bf.value1467 = and i32 %bf.clear1463, 1
  %bf.shl1468 = shl i32 %bf.value1467, 8
  %bf.clear1469 = and i32 %bf.load1466, -257
  %bf.set1470 = or i32 %bf.clear1469, %bf.shl1468
  store i32 %bf.set1470, i32* %side_effects_flag1465, align 8
  br label %if.end.1471

if.end.1471:                                      ; preds = %if.then.1431, %if.else.1429
  br label %if.end.1472

if.end.1472:                                      ; preds = %if.end.1471, %if.end.1428
  %546 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %547 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void @merge_weak(%union.tree_node* %546, %union.tree_node* %547)
  %548 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1473 = bitcast %union.tree_node* %548 to %struct.tree_common*
  %code1474 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1473, i32 0, i32 2
  %bf.load1475 = load i32, i32* %code1474, align 8
  %bf.clear1476 = and i32 %bf.load1475, 255
  %cmp1477 = icmp eq i32 %bf.clear1476, 30
  br i1 %cmp1477, label %if.then.1479, label %if.end.1521

if.then.1479:                                     ; preds = %if.end.1472
  %549 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1480 = bitcast %union.tree_node* %549 to %struct.tree_common*
  %public_flag1481 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1480, i32 0, i32 2
  %bf.load1482 = load i32, i32* %public_flag1481, align 8
  %bf.lshr1483 = lshr i32 %bf.load1482, 19
  %bf.clear1484 = and i32 %bf.lshr1483, 1
  %550 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1485 = bitcast %union.tree_node* %550 to %struct.tree_common*
  %public_flag1486 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1485, i32 0, i32 2
  %bf.load1487 = load i32, i32* %public_flag1486, align 8
  %bf.lshr1488 = lshr i32 %bf.load1487, 19
  %bf.clear1489 = and i32 %bf.lshr1488, 1
  %and = and i32 %bf.clear1489, %bf.clear1484
  %bf.load1490 = load i32, i32* %public_flag1486, align 8
  %bf.value1491 = and i32 %and, 1
  %bf.shl1492 = shl i32 %bf.value1491, 19
  %bf.clear1493 = and i32 %bf.load1490, -524289
  %bf.set1494 = or i32 %bf.clear1493, %bf.shl1492
  store i32 %bf.set1494, i32* %public_flag1486, align 8
  %551 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1495 = bitcast %union.tree_node* %551 to %struct.tree_common*
  %public_flag1496 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1495, i32 0, i32 2
  %bf.load1497 = load i32, i32* %public_flag1496, align 8
  %bf.lshr1498 = lshr i32 %bf.load1497, 19
  %bf.clear1499 = and i32 %bf.lshr1498, 1
  %552 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1500 = bitcast %union.tree_node* %552 to %struct.tree_common*
  %public_flag1501 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1500, i32 0, i32 2
  %bf.load1502 = load i32, i32* %public_flag1501, align 8
  %bf.value1503 = and i32 %bf.clear1499, 1
  %bf.shl1504 = shl i32 %bf.value1503, 19
  %bf.clear1505 = and i32 %bf.load1502, -524289
  %bf.set1506 = or i32 %bf.clear1505, %bf.shl1504
  store i32 %bf.set1506, i32* %public_flag1501, align 8
  %553 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1507 = bitcast %union.tree_node* %553 to %struct.tree_common*
  %public_flag1508 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1507, i32 0, i32 2
  %bf.load1509 = load i32, i32* %public_flag1508, align 8
  %bf.lshr1510 = lshr i32 %bf.load1509, 19
  %bf.clear1511 = and i32 %bf.lshr1510, 1
  %tobool1512 = icmp ne i32 %bf.clear1511, 0
  br i1 %tobool1512, label %if.end.1520, label %if.then.1513

if.then.1513:                                     ; preds = %if.then.1479
  %554 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1514 = bitcast %union.tree_node* %554 to %struct.tree_decl*
  %name1515 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1514, i32 0, i32 8
  %555 = load %union.tree_node*, %union.tree_node** %name1515, align 8
  %common1516 = bitcast %union.tree_node* %555 to %struct.tree_common*
  %public_flag1517 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1516, i32 0, i32 2
  %bf.load1518 = load i32, i32* %public_flag1517, align 8
  %bf.clear1519 = and i32 %bf.load1518, -524289
  store i32 %bf.clear1519, i32* %public_flag1517, align 8
  br label %if.end.1520

if.end.1520:                                      ; preds = %if.then.1513, %if.then.1479
  br label %if.end.1521

if.end.1521:                                      ; preds = %if.end.1520, %if.end.1472
  %556 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1522 = bitcast %union.tree_node* %556 to %struct.tree_decl*
  %external_flag1523 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1522, i32 0, i32 5
  %557 = bitcast i48* %external_flag1523 to i64*
  %bf.load1524 = load i64, i64* %557, align 8
  %bf.lshr1525 = lshr i64 %bf.load1524, 8
  %bf.clear1526 = and i64 %bf.lshr1525, 1
  %bf.cast1527 = trunc i64 %bf.clear1526 to i32
  %tobool1528 = icmp ne i32 %bf.cast1527, 0
  br i1 %tobool1528, label %if.then.1529, label %if.else.1582

if.then.1529:                                     ; preds = %if.end.1521
  %558 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1530 = icmp ne i32 %558, 0
  br i1 %tobool1530, label %if.end.1557, label %if.then.1531

if.then.1531:                                     ; preds = %if.then.1529
  %559 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1532 = bitcast %union.tree_node* %559 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1532, i32 0, i32 2
  %bf.load1533 = load i32, i32* %static_flag, align 8
  %bf.lshr1534 = lshr i32 %bf.load1533, 18
  %bf.clear1535 = and i32 %bf.lshr1534, 1
  %560 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1536 = bitcast %union.tree_node* %560 to %struct.tree_common*
  %static_flag1537 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1536, i32 0, i32 2
  %bf.load1538 = load i32, i32* %static_flag1537, align 8
  %bf.value1539 = and i32 %bf.clear1535, 1
  %bf.shl1540 = shl i32 %bf.value1539, 18
  %bf.clear1541 = and i32 %bf.load1538, -262145
  %bf.set1542 = or i32 %bf.clear1541, %bf.shl1540
  store i32 %bf.set1542, i32* %static_flag1537, align 8
  %561 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1543 = bitcast %union.tree_node* %561 to %struct.tree_decl*
  %external_flag1544 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1543, i32 0, i32 5
  %562 = bitcast i48* %external_flag1544 to i64*
  %bf.load1545 = load i64, i64* %562, align 8
  %bf.lshr1546 = lshr i64 %bf.load1545, 8
  %bf.clear1547 = and i64 %bf.lshr1546, 1
  %bf.cast1548 = trunc i64 %bf.clear1547 to i32
  %563 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1549 = bitcast %union.tree_node* %563 to %struct.tree_decl*
  %external_flag1550 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1549, i32 0, i32 5
  %564 = bitcast i48* %external_flag1550 to i64*
  %565 = zext i32 %bf.cast1548 to i64
  %bf.load1551 = load i64, i64* %564, align 8
  %bf.value1552 = and i64 %565, 1
  %bf.shl1553 = shl i64 %bf.value1552, 8
  %bf.clear1554 = and i64 %bf.load1551, -257
  %bf.set1555 = or i64 %bf.clear1554, %bf.shl1553
  store i64 %bf.set1555, i64* %564, align 8
  %bf.result.cast1556 = trunc i64 %bf.value1552 to i32
  br label %if.end.1557

if.end.1557:                                      ; preds = %if.then.1531, %if.then.1529
  %566 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1558 = bitcast %union.tree_node* %566 to %struct.tree_common*
  %public_flag1559 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1558, i32 0, i32 2
  %bf.load1560 = load i32, i32* %public_flag1559, align 8
  %bf.lshr1561 = lshr i32 %bf.load1560, 19
  %bf.clear1562 = and i32 %bf.lshr1561, 1
  %567 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1563 = bitcast %union.tree_node* %567 to %struct.tree_common*
  %public_flag1564 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1563, i32 0, i32 2
  %bf.load1565 = load i32, i32* %public_flag1564, align 8
  %bf.value1566 = and i32 %bf.clear1562, 1
  %bf.shl1567 = shl i32 %bf.value1566, 19
  %bf.clear1568 = and i32 %bf.load1565, -524289
  %bf.set1569 = or i32 %bf.clear1568, %bf.shl1567
  store i32 %bf.set1569, i32* %public_flag1564, align 8
  %568 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1570 = bitcast %union.tree_node* %568 to %struct.tree_decl*
  %external_flag1571 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1570, i32 0, i32 5
  %569 = bitcast i48* %external_flag1571 to i64*
  %bf.load1572 = load i64, i64* %569, align 8
  %bf.lshr1573 = lshr i64 %bf.load1572, 8
  %bf.clear1574 = and i64 %bf.lshr1573, 1
  %bf.cast1575 = trunc i64 %bf.clear1574 to i32
  %tobool1576 = icmp ne i32 %bf.cast1575, 0
  br i1 %tobool1576, label %if.end.1581, label %if.then.1577

if.then.1577:                                     ; preds = %if.end.1557
  %570 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1578 = bitcast %union.tree_node* %570 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1578, i32 0, i32 9
  %571 = load %union.tree_node*, %union.tree_node** %context, align 8
  %572 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1579 = bitcast %union.tree_node* %572 to %struct.tree_decl*
  %context1580 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1579, i32 0, i32 9
  store %union.tree_node* %571, %union.tree_node** %context1580, align 8
  br label %if.end.1581

if.end.1581:                                      ; preds = %if.then.1577, %if.end.1557
  br label %if.end.1607

if.else.1582:                                     ; preds = %if.end.1521
  %573 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1583 = bitcast %union.tree_node* %573 to %struct.tree_common*
  %static_flag1584 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1583, i32 0, i32 2
  %bf.load1585 = load i32, i32* %static_flag1584, align 8
  %bf.lshr1586 = lshr i32 %bf.load1585, 18
  %bf.clear1587 = and i32 %bf.lshr1586, 1
  %574 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1588 = bitcast %union.tree_node* %574 to %struct.tree_common*
  %static_flag1589 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1588, i32 0, i32 2
  %bf.load1590 = load i32, i32* %static_flag1589, align 8
  %bf.value1591 = and i32 %bf.clear1587, 1
  %bf.shl1592 = shl i32 %bf.value1591, 18
  %bf.clear1593 = and i32 %bf.load1590, -262145
  %bf.set1594 = or i32 %bf.clear1593, %bf.shl1592
  store i32 %bf.set1594, i32* %static_flag1589, align 8
  %575 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1595 = bitcast %union.tree_node* %575 to %struct.tree_common*
  %public_flag1596 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1595, i32 0, i32 2
  %bf.load1597 = load i32, i32* %public_flag1596, align 8
  %bf.lshr1598 = lshr i32 %bf.load1597, 19
  %bf.clear1599 = and i32 %bf.lshr1598, 1
  %576 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1600 = bitcast %union.tree_node* %576 to %struct.tree_common*
  %public_flag1601 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1600, i32 0, i32 2
  %bf.load1602 = load i32, i32* %public_flag1601, align 8
  %bf.value1603 = and i32 %bf.clear1599, 1
  %bf.shl1604 = shl i32 %bf.value1603, 19
  %bf.clear1605 = and i32 %bf.load1602, -524289
  %bf.set1606 = or i32 %bf.clear1605, %bf.shl1604
  store i32 %bf.set1606, i32* %public_flag1601, align 8
  br label %if.end.1607

if.end.1607:                                      ; preds = %if.else.1582, %if.end.1581
  %577 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1608 = bitcast %union.tree_node* %577 to %struct.tree_common*
  %code1609 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1608, i32 0, i32 2
  %bf.load1610 = load i32, i32* %code1609, align 8
  %bf.clear1611 = and i32 %bf.load1610, 255
  %cmp1612 = icmp eq i32 %bf.clear1611, 30
  br i1 %cmp1612, label %if.then.1614, label %if.end.1828

if.then.1614:                                     ; preds = %if.end.1607
  %578 = load i32, i32* %new_is_definition, align 4
  %tobool1615 = icmp ne i32 %578, 0
  br i1 %tobool1615, label %land.lhs.true.1616, label %if.else.1636

land.lhs.true.1616:                               ; preds = %if.then.1614
  %579 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1617 = bitcast %union.tree_node* %579 to %struct.tree_decl*
  %initial1618 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1617, i32 0, i32 12
  %580 = load %union.tree_node*, %union.tree_node** %initial1618, align 8
  %tobool1619 = icmp ne %union.tree_node* %580, null
  br i1 %tobool1619, label %land.lhs.true.1620, label %if.else.1636

land.lhs.true.1620:                               ; preds = %land.lhs.true.1616
  %581 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1621 = bitcast %union.tree_node* %581 to %struct.tree_common*
  %used_flag1622 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1621, i32 0, i32 2
  %bf.load1623 = load i32, i32* %used_flag1622, align 8
  %bf.lshr1624 = lshr i32 %bf.load1623, 16
  %bf.clear1625 = and i32 %bf.lshr1624, 1
  %tobool1626 = icmp ne i32 %bf.clear1625, 0
  br i1 %tobool1626, label %if.then.1627, label %if.else.1636

if.then.1627:                                     ; preds = %land.lhs.true.1620
  %582 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8
  %outlining_inline_function = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %582, i32 0, i32 18
  %583 = load void (%union.tree_node*)*, void (%union.tree_node*)** %outlining_inline_function, align 8
  %584 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  call void %583(%union.tree_node* %584)
  %585 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1628 = bitcast %union.tree_node* %585 to %struct.tree_decl*
  %inline_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1628, i32 0, i32 5
  %586 = bitcast i48* %inline_flag to i64*
  %bf.load1629 = load i64, i64* %586, align 8
  %bf.clear1630 = and i64 %bf.load1629, -2049
  store i64 %bf.clear1630, i64* %586, align 8
  %587 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1631 = bitcast %union.tree_node* %587 to %struct.tree_decl*
  %uninlinable1632 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1631, i32 0, i32 5
  %588 = bitcast i48* %uninlinable1632 to i64*
  %bf.load1633 = load i64, i64* %588, align 8
  %bf.clear1634 = and i64 %bf.load1633, -68719476737
  %bf.set1635 = or i64 %bf.clear1634, 68719476736
  store i64 %bf.set1635, i64* %588, align 8
  br label %if.end.1690

if.else.1636:                                     ; preds = %land.lhs.true.1620, %land.lhs.true.1616, %if.then.1614
  %589 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1637 = bitcast %union.tree_node* %589 to %struct.tree_decl*
  %lang_specific1638 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1637, i32 0, i32 24
  %590 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1638, align 8
  %base1639 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %590, i32 0, i32 0
  %591 = bitcast %struct.c_lang_decl* %base1639 to i8*
  %bf.load1640 = load i8, i8* %591, align 4
  %bf.clear1641 = and i8 %bf.load1640, 1
  %bf.cast1642 = zext i8 %bf.clear1641 to i32
  %tobool1643 = icmp ne i32 %bf.cast1642, 0
  br i1 %tobool1643, label %if.then.1652, label %lor.lhs.false.1644

lor.lhs.false.1644:                               ; preds = %if.else.1636
  %592 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1645 = bitcast %union.tree_node* %592 to %struct.tree_decl*
  %lang_specific1646 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1645, i32 0, i32 24
  %593 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1646, align 8
  %base1647 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %593, i32 0, i32 0
  %594 = bitcast %struct.c_lang_decl* %base1647 to i8*
  %bf.load1648 = load i8, i8* %594, align 4
  %bf.clear1649 = and i8 %bf.load1648, 1
  %bf.cast1650 = zext i8 %bf.clear1649 to i32
  %tobool1651 = icmp ne i32 %bf.cast1650, 0
  br i1 %tobool1651, label %if.then.1652, label %if.end.1659

if.then.1652:                                     ; preds = %lor.lhs.false.1644, %if.else.1636
  %595 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1653 = bitcast %union.tree_node* %595 to %struct.tree_decl*
  %lang_specific1654 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1653, i32 0, i32 24
  %596 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1654, align 8
  %base1655 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %596, i32 0, i32 0
  %597 = bitcast %struct.c_lang_decl* %base1655 to i8*
  %bf.load1656 = load i8, i8* %597, align 4
  %bf.clear1657 = and i8 %bf.load1656, -2
  %bf.set1658 = or i8 %bf.clear1657, 1
  store i8 %bf.set1658, i8* %597, align 4
  br label %if.end.1659

if.end.1659:                                      ; preds = %if.then.1652, %lor.lhs.false.1644
  %598 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1660 = bitcast %union.tree_node* %598 to %struct.tree_decl*
  %uninlinable1661 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1660, i32 0, i32 5
  %599 = bitcast i48* %uninlinable1661 to i64*
  %bf.load1662 = load i64, i64* %599, align 8
  %bf.lshr1663 = lshr i64 %bf.load1662, 36
  %bf.clear1664 = and i64 %bf.lshr1663, 1
  %bf.cast1665 = trunc i64 %bf.clear1664 to i32
  %tobool1666 = icmp ne i32 %bf.cast1665, 0
  br i1 %tobool1666, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.1659
  %600 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1667 = bitcast %union.tree_node* %600 to %struct.tree_decl*
  %uninlinable1668 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1667, i32 0, i32 5
  %601 = bitcast i48* %uninlinable1668 to i64*
  %bf.load1669 = load i64, i64* %601, align 8
  %bf.lshr1670 = lshr i64 %bf.load1669, 36
  %bf.clear1671 = and i64 %bf.lshr1670, 1
  %bf.cast1672 = trunc i64 %bf.clear1671 to i32
  %tobool1673 = icmp ne i32 %bf.cast1672, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.1659
  %602 = phi i1 [ true, %if.end.1659 ], [ %tobool1673, %lor.rhs ]
  %lor.ext = zext i1 %602 to i32
  %603 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1674 = bitcast %union.tree_node* %603 to %struct.tree_decl*
  %uninlinable1675 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1674, i32 0, i32 5
  %604 = bitcast i48* %uninlinable1675 to i64*
  %605 = zext i32 %lor.ext to i64
  %bf.load1676 = load i64, i64* %604, align 8
  %bf.value1677 = and i64 %605, 1
  %bf.shl1678 = shl i64 %bf.value1677, 36
  %bf.clear1679 = and i64 %bf.load1676, -68719476737
  %bf.set1680 = or i64 %bf.clear1679, %bf.shl1678
  store i64 %bf.set1680, i64* %604, align 8
  %bf.result.cast1681 = trunc i64 %bf.value1677 to i32
  %606 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1682 = bitcast %union.tree_node* %606 to %struct.tree_decl*
  %uninlinable1683 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1682, i32 0, i32 5
  %607 = bitcast i48* %uninlinable1683 to i64*
  %608 = zext i32 %bf.result.cast1681 to i64
  %bf.load1684 = load i64, i64* %607, align 8
  %bf.value1685 = and i64 %608, 1
  %bf.shl1686 = shl i64 %bf.value1685, 36
  %bf.clear1687 = and i64 %bf.load1684, -68719476737
  %bf.set1688 = or i64 %bf.clear1687, %bf.shl1686
  store i64 %bf.set1688, i64* %607, align 8
  %bf.result.cast1689 = trunc i64 %bf.value1685 to i32
  br label %if.end.1690

if.end.1690:                                      ; preds = %lor.end, %if.then.1627
  %609 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1691 = bitcast %union.tree_node* %609 to %struct.tree_decl*
  %built_in_class1692 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1691, i32 0, i32 5
  %610 = bitcast i48* %built_in_class1692 to i64*
  %bf.load1693 = load i64, i64* %610, align 8
  %bf.lshr1694 = lshr i64 %bf.load1693, 29
  %bf.clear1695 = and i64 %bf.lshr1694, 3
  %bf.cast1696 = trunc i64 %bf.clear1695 to i32
  %cmp1697 = icmp ne i32 %bf.cast1696, 0
  br i1 %cmp1697, label %if.then.1699, label %if.end.1736

if.then.1699:                                     ; preds = %if.end.1690
  %611 = load i32, i32* %types_match, align 4
  %tobool1700 = icmp ne i32 %611, 0
  br i1 %tobool1700, label %lor.lhs.false.1701, label %if.then.1703

lor.lhs.false.1701:                               ; preds = %if.then.1699
  %612 = load i32, i32* %new_is_definition, align 4
  %tobool1702 = icmp ne i32 %612, 0
  br i1 %tobool1702, label %if.then.1703, label %if.else.1715

if.then.1703:                                     ; preds = %lor.lhs.false.1701, %if.then.1699
  %613 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1704 = icmp ne i32 %613, 0
  br i1 %tobool1704, label %if.end.1714, label %if.then.1705

if.then.1705:                                     ; preds = %if.then.1703
  %614 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1706 = bitcast %union.tree_node* %614 to %struct.tree_common*
  %type1707 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1706, i32 0, i32 1
  %615 = load %union.tree_node*, %union.tree_node** %type1707, align 8
  %616 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common1708 = bitcast %union.tree_node* %616 to %struct.tree_common*
  %type1709 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1708, i32 0, i32 1
  store %union.tree_node* %615, %union.tree_node** %type1709, align 8
  %617 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1710 = bitcast %union.tree_node* %617 to %struct.tree_decl*
  %built_in_class1711 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1710, i32 0, i32 5
  %618 = bitcast i48* %built_in_class1711 to i64*
  %bf.load1712 = load i64, i64* %618, align 8
  %bf.clear1713 = and i64 %bf.load1712, -1610612737
  store i64 %bf.clear1713, i64* %618, align 8
  br label %if.end.1714

if.end.1714:                                      ; preds = %if.then.1705, %if.then.1703
  br label %if.end.1735

if.else.1715:                                     ; preds = %lor.lhs.false.1701
  %619 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1716 = bitcast %union.tree_node* %619 to %struct.tree_decl*
  %built_in_class1717 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1716, i32 0, i32 5
  %620 = bitcast i48* %built_in_class1717 to i64*
  %bf.load1718 = load i64, i64* %620, align 8
  %bf.lshr1719 = lshr i64 %bf.load1718, 29
  %bf.clear1720 = and i64 %bf.lshr1719, 3
  %bf.cast1721 = trunc i64 %bf.clear1720 to i32
  %621 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1722 = bitcast %union.tree_node* %621 to %struct.tree_decl*
  %built_in_class1723 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1722, i32 0, i32 5
  %622 = bitcast i48* %built_in_class1723 to i64*
  %623 = zext i32 %bf.cast1721 to i64
  %bf.load1724 = load i64, i64* %622, align 8
  %bf.value1725 = and i64 %623, 3
  %bf.shl1726 = shl i64 %bf.value1725, 29
  %bf.clear1727 = and i64 %bf.load1724, -1610612737
  %bf.set1728 = or i64 %bf.clear1727, %bf.shl1726
  store i64 %bf.set1728, i64* %622, align 8
  %bf.result.cast1729 = trunc i64 %bf.value1725 to i32
  %624 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1730 = bitcast %union.tree_node* %624 to %struct.tree_decl*
  %u11731 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1730, i32 0, i32 6
  %f = bitcast %union.anon* %u11731 to i32*
  %625 = load i32, i32* %f, align 4
  %626 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1732 = bitcast %union.tree_node* %626 to %struct.tree_decl*
  %u11733 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1732, i32 0, i32 6
  %f1734 = bitcast %union.anon* %u11733 to i32*
  store i32 %625, i32* %f1734, align 4
  br label %if.end.1735

if.end.1735:                                      ; preds = %if.else.1715, %if.end.1714
  br label %if.end.1736

if.end.1736:                                      ; preds = %if.end.1735, %if.end.1690
  %627 = load i32, i32* %new_is_definition, align 4
  %tobool1737 = icmp ne i32 %627, 0
  br i1 %tobool1737, label %if.else.1804, label %if.then.1738

if.then.1738:                                     ; preds = %if.end.1736
  %628 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1739 = bitcast %union.tree_node* %628 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1739, i32 0, i32 11
  %629 = load %union.tree_node*, %union.tree_node** %result, align 8
  %630 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1740 = bitcast %union.tree_node* %630 to %struct.tree_decl*
  %result1741 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1740, i32 0, i32 11
  store %union.tree_node* %629, %union.tree_node** %result1741, align 8
  %631 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1742 = icmp ne i32 %631, 0
  br i1 %tobool1742, label %if.end.1748, label %if.then.1743

if.then.1743:                                     ; preds = %if.then.1738
  %632 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1744 = bitcast %union.tree_node* %632 to %struct.tree_decl*
  %initial1745 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1744, i32 0, i32 12
  %633 = load %union.tree_node*, %union.tree_node** %initial1745, align 8
  %634 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1746 = bitcast %union.tree_node* %634 to %struct.tree_decl*
  %initial1747 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1746, i32 0, i32 12
  store %union.tree_node* %633, %union.tree_node** %initial1747, align 8
  br label %if.end.1748

if.end.1748:                                      ; preds = %if.then.1743, %if.then.1738
  %635 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1749 = bitcast %union.tree_node* %635 to %struct.tree_decl*
  %u2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1749, i32 0, i32 19
  %f1750 = bitcast %union.anon.1* %u2 to %struct.function**
  %636 = load %struct.function*, %struct.function** %f1750, align 8
  %637 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1751 = bitcast %union.tree_node* %637 to %struct.tree_decl*
  %u21752 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1751, i32 0, i32 19
  %f1753 = bitcast %union.anon.1* %u21752 to %struct.function**
  store %struct.function* %636, %struct.function** %f1753, align 8
  %638 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1754 = bitcast %union.tree_node* %638 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1754, i32 0, i32 20
  %639 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8
  %640 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1755 = bitcast %union.tree_node* %640 to %struct.tree_decl*
  %saved_tree1756 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1755, i32 0, i32 20
  store %union.tree_node* %639, %union.tree_node** %saved_tree1756, align 8
  %641 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1757 = bitcast %union.tree_node* %641 to %struct.tree_decl*
  %u11758 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1757, i32 0, i32 6
  %i = bitcast %union.anon* %u11758 to i64*
  %642 = load i64, i64* %i, align 8
  %643 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1759 = bitcast %union.tree_node* %643 to %struct.tree_decl*
  %u11760 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1759, i32 0, i32 6
  %i1761 = bitcast %union.anon* %u11760 to i64*
  store i64 %642, i64* %i1761, align 8
  %644 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1762 = bitcast %union.tree_node* %644 to %struct.tree_decl*
  %arguments = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1762, i32 0, i32 10
  %645 = load %union.tree_node*, %union.tree_node** %arguments, align 8
  %646 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1763 = bitcast %union.tree_node* %646 to %struct.tree_decl*
  %arguments1764 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1763, i32 0, i32 10
  store %union.tree_node* %645, %union.tree_node** %arguments1764, align 8
  %647 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1765 = bitcast %union.tree_node* %647 to %struct.tree_decl*
  %inline_flag1766 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1765, i32 0, i32 5
  %648 = bitcast i48* %inline_flag1766 to i64*
  %bf.load1767 = load i64, i64* %648, align 8
  %bf.lshr1768 = lshr i64 %bf.load1767, 11
  %bf.clear1769 = and i64 %bf.lshr1768, 1
  %bf.cast1770 = trunc i64 %bf.clear1769 to i32
  %tobool1771 = icmp ne i32 %bf.cast1770, 0
  br i1 %tobool1771, label %land.lhs.true.1772, label %if.end.1803

land.lhs.true.1772:                               ; preds = %if.end.1748
  %649 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1773 = bitcast %union.tree_node* %649 to %struct.tree_decl*
  %uninlinable1774 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1773, i32 0, i32 5
  %650 = bitcast i48* %uninlinable1774 to i64*
  %bf.load1775 = load i64, i64* %650, align 8
  %bf.lshr1776 = lshr i64 %bf.load1775, 36
  %bf.clear1777 = and i64 %bf.lshr1776, 1
  %bf.cast1778 = trunc i64 %bf.clear1777 to i32
  %tobool1779 = icmp ne i32 %bf.cast1778, 0
  br i1 %tobool1779, label %if.end.1803, label %if.then.1780

if.then.1780:                                     ; preds = %land.lhs.true.1772
  %651 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1781 = bitcast %union.tree_node* %651 to %struct.tree_decl*
  %inline_flag1782 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1781, i32 0, i32 5
  %652 = bitcast i48* %inline_flag1782 to i64*
  %bf.load1783 = load i64, i64* %652, align 8
  %bf.clear1784 = and i64 %bf.load1783, -2049
  %bf.set1785 = or i64 %bf.clear1784, 2048
  store i64 %bf.set1785, i64* %652, align 8
  %653 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1786 = icmp ne i32 %653, 0
  br i1 %tobool1786, label %cond.true.1787, label %cond.false.1796

cond.true.1787:                                   ; preds = %if.then.1780
  %654 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1788 = bitcast %union.tree_node* %654 to %struct.tree_decl*
  %abstract_origin = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1788, i32 0, i32 13
  %655 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8
  %tobool1789 = icmp ne %union.tree_node* %655, null
  br i1 %tobool1789, label %cond.true.1790, label %cond.false.1793

cond.true.1790:                                   ; preds = %cond.true.1787
  %656 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1791 = bitcast %union.tree_node* %656 to %struct.tree_decl*
  %abstract_origin1792 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1791, i32 0, i32 13
  %657 = load %union.tree_node*, %union.tree_node** %abstract_origin1792, align 8
  br label %cond.end.1794

cond.false.1793:                                  ; preds = %cond.true.1787
  %658 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  br label %cond.end.1794

cond.end.1794:                                    ; preds = %cond.false.1793, %cond.true.1790
  %cond1795 = phi %union.tree_node* [ %657, %cond.true.1790 ], [ %658, %cond.false.1793 ]
  br label %cond.end.1799

cond.false.1796:                                  ; preds = %if.then.1780
  %659 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1797 = bitcast %union.tree_node* %659 to %struct.tree_decl*
  %abstract_origin1798 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1797, i32 0, i32 13
  %660 = load %union.tree_node*, %union.tree_node** %abstract_origin1798, align 8
  br label %cond.end.1799

cond.end.1799:                                    ; preds = %cond.false.1796, %cond.end.1794
  %cond1800 = phi %union.tree_node* [ %cond1795, %cond.end.1794 ], [ %660, %cond.false.1796 ]
  %661 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1801 = bitcast %union.tree_node* %661 to %struct.tree_decl*
  %abstract_origin1802 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1801, i32 0, i32 13
  store %union.tree_node* %cond1800, %union.tree_node** %abstract_origin1802, align 8
  br label %if.end.1803

if.end.1803:                                      ; preds = %cond.end.1799, %land.lhs.true.1772, %if.end.1748
  br label %if.end.1827

if.else.1804:                                     ; preds = %if.end.1736
  %662 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1805 = bitcast %union.tree_node* %662 to %struct.tree_decl*
  %lang_specific1806 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1805, i32 0, i32 24
  %663 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1806, align 8
  %base1807 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %663, i32 0, i32 0
  %664 = bitcast %struct.c_lang_decl* %base1807 to i8*
  %bf.load1808 = load i8, i8* %664, align 4
  %bf.clear1809 = and i8 %bf.load1808, 1
  %bf.cast1810 = zext i8 %bf.clear1809 to i32
  %tobool1811 = icmp ne i32 %bf.cast1810, 0
  br i1 %tobool1811, label %land.lhs.true.1812, label %if.end.1826

land.lhs.true.1812:                               ; preds = %if.else.1804
  %665 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1813 = bitcast %union.tree_node* %665 to %struct.tree_decl*
  %uninlinable1814 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1813, i32 0, i32 5
  %666 = bitcast i48* %uninlinable1814 to i64*
  %bf.load1815 = load i64, i64* %666, align 8
  %bf.lshr1816 = lshr i64 %bf.load1815, 36
  %bf.clear1817 = and i64 %bf.lshr1816, 1
  %bf.cast1818 = trunc i64 %bf.clear1817 to i32
  %tobool1819 = icmp ne i32 %bf.cast1818, 0
  br i1 %tobool1819, label %if.end.1826, label %if.then.1820

if.then.1820:                                     ; preds = %land.lhs.true.1812
  %667 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1821 = bitcast %union.tree_node* %667 to %struct.tree_decl*
  %inline_flag1822 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1821, i32 0, i32 5
  %668 = bitcast i48* %inline_flag1822 to i64*
  %bf.load1823 = load i64, i64* %668, align 8
  %bf.clear1824 = and i64 %bf.load1823, -2049
  %bf.set1825 = or i64 %bf.clear1824, 2048
  store i64 %bf.set1825, i64* %668, align 8
  br label %if.end.1826

if.end.1826:                                      ; preds = %if.then.1820, %land.lhs.true.1812, %if.else.1804
  br label %if.end.1827

if.end.1827:                                      ; preds = %if.end.1826, %if.end.1803
  br label %if.end.1828

if.end.1828:                                      ; preds = %if.end.1827, %if.end.1607
  %669 = load i32, i32* %different_binding_level.addr, align 4
  %tobool1829 = icmp ne i32 %669, 0
  br i1 %tobool1829, label %if.then.1830, label %if.end.1831

if.then.1830:                                     ; preds = %if.end.1828
  store i32 0, i32* %retval
  br label %return

if.end.1831:                                      ; preds = %if.end.1828
  %670 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1832 = bitcast %union.tree_node* %670 to %struct.tree_decl*
  %uid = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1832, i32 0, i32 3
  %671 = load i32, i32* %uid, align 4
  store i32 %671, i32* %olddecl_uid, align 4
  %672 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %673 = bitcast %union.tree_node* %672 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %673, i64 24
  %674 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %675 = bitcast %union.tree_node* %674 to i8*
  %add.ptr1833 = getelementptr inbounds i8, i8* %675, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr1833, i64 184, i32 1, i1 false)
  %676 = load i32, i32* %olddecl_uid, align 4
  %677 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1834 = bitcast %union.tree_node* %677 to %struct.tree_decl*
  %uid1835 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1834, i32 0, i32 3
  store i32 %676, i32* %uid1835, align 4
  %678 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl1836 = bitcast %union.tree_node* %678 to %struct.tree_decl*
  %attributes1837 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1836, i32 0, i32 16
  %679 = load %union.tree_node*, %union.tree_node** %attributes1837, align 8
  %680 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl1838 = bitcast %union.tree_node* %680 to %struct.tree_decl*
  %attributes1839 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1838, i32 0, i32 16
  store %union.tree_node* %679, %union.tree_node** %attributes1839, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.1831, %if.then.1830, %land.end.686, %if.then.447, %if.then.427, %if.end.298, %if.then.252, %if.end.229
  %681 = load i32, i32* %retval
  ret i32 %681
}

declare %union.tree_node* @build_type_copy(%union.tree_node*) #1

declare i32 @comptypes(%union.tree_node*, %union.tree_node*) #1

declare void @pedwarn_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @lookup_name(%union.tree_node* %name) #0 {
entry:
  %name.addr = alloca %union.tree_node*, align 8
  %val = alloca %union.tree_node*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp = icmp ne %struct.binding_level* %0, %1
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %3 = bitcast %union.tree_node* %2 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %3, i32 0, i32 2
  %4 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  %tobool = icmp ne %union.tree_node* %4, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %6 = bitcast %union.tree_node* %5 to %struct.lang_identifier*
  %local_value1 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %6, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %local_value1, align 8
  store %union.tree_node* %7, %union.tree_node** %val, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %9 = bitcast %union.tree_node* %8 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %9, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  store %union.tree_node* %10, %union.tree_node** %val, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %union.tree_node*, %union.tree_node** %val, align 8
  ret %union.tree_node* %11
}

; Function Attrs: nounwind uwtable
define internal void @warn_if_shadowing(%union.tree_node* %x, %union.tree_node* %oldlocal) #0 {
entry:
  %x.addr = alloca %union.tree_node*, align 8
  %oldlocal.addr = alloca %union.tree_node*, align 8
  %name = alloca %union.tree_node*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  store %union.tree_node* %oldlocal, %union.tree_node** %oldlocal.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %1 = bitcast i48* %external_flag to i64*
  %bf.load = load i64, i64* %1, align 8
  %bf.lshr = lshr i64 %bf.load, 8
  %bf.clear = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.73

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl1 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %name2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 8
  %3 = load %union.tree_node*, %union.tree_node** %name2, align 8
  store %union.tree_node* %3, %union.tree_node** %name, align 8
  %4 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  %cmp = icmp ne %union.tree_node* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.else.20

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_flag = getelementptr inbounds %struct.binding_level, %struct.binding_level* %5, i32 0, i32 6
  %6 = load i8, i8* %parm_flag, align 1
  %tobool3 = icmp ne i8 %6, 0
  br i1 %tobool3, label %if.else.20, label %land.lhs.true.4

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %7 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %7, i32 0, i32 5
  %8 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  %parm_flag5 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %8, i32 0, i32 6
  %9 = load i8, i8* %parm_flag5, align 1
  %conv = sext i8 %9 to i32
  %tobool6 = icmp ne i32 %conv, 0
  br i1 %tobool6, label %land.lhs.true.7, label %if.else.20

land.lhs.true.7:                                  ; preds = %land.lhs.true.4
  %10 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  %11 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %level_chain8 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %11, i32 0, i32 5
  %12 = load %struct.binding_level*, %struct.binding_level** %level_chain8, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %12, i32 0, i32 0
  %13 = load %union.tree_node*, %union.tree_node** %names, align 8
  %call = call i32 @chain_member(%union.tree_node* %10, %union.tree_node* %13)
  %tobool9 = icmp ne i32 %call, 0
  br i1 %tobool9, label %if.then.10, label %if.else.20

if.then.10:                                       ; preds = %land.lhs.true.7
  %14 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  %common = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load11 = load i32, i32* %code, align 8
  %bf.clear12 = and i32 %bf.load11, 255
  %cmp13 = icmp eq i32 %bf.clear12, 35
  br i1 %cmp13, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %if.then.10
  %15 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %16 = load i8*, i8** %str, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.288, i32 0, i32 0), i8* %16)
  br label %if.end.19

if.else:                                          ; preds = %if.then.10
  %17 = load %union.tree_node*, %union.tree_node** %name, align 8
  %identifier16 = bitcast %union.tree_node* %17 to %struct.tree_identifier*
  %id17 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier16, i32 0, i32 1
  %str18 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id17, i32 0, i32 1
  %18 = load i8*, i8** %str18, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.289, i32 0, i32 0), i8* %18)
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.15
  br label %if.end.73

if.else.20:                                       ; preds = %land.lhs.true.7, %land.lhs.true.4, %land.lhs.true, %if.end
  %19 = load i32, i32* @warn_shadow, align 4
  %tobool21 = icmp ne i32 %19, 0
  br i1 %tobool21, label %land.lhs.true.22, label %if.end.72

land.lhs.true.22:                                 ; preds = %if.else.20
  %20 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl23 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl23, i32 0, i32 2
  %21 = load i32, i32* %linenum, align 4
  %cmp24 = icmp ne i32 %21, 0
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.72

land.lhs.true.26:                                 ; preds = %land.lhs.true.22
  %22 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl27 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %abstract_origin = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl27, i32 0, i32 13
  %23 = load %union.tree_node*, %union.tree_node** %abstract_origin, align 8
  %cmp28 = icmp ne %union.tree_node* %23, null
  br i1 %cmp28, label %land.lhs.true.30, label %if.then.35

land.lhs.true.30:                                 ; preds = %land.lhs.true.26
  %24 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %decl31 = bitcast %union.tree_node* %24 to %struct.tree_decl*
  %abstract_origin32 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl31, i32 0, i32 13
  %25 = load %union.tree_node*, %union.tree_node** %abstract_origin32, align 8
  %26 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %cmp33 = icmp ne %union.tree_node* %25, %26
  br i1 %cmp33, label %if.end.72, label %if.then.35

if.then.35:                                       ; preds = %land.lhs.true.30, %land.lhs.true.26
  %27 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %common36 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 35
  br i1 %cmp40, label %land.lhs.true.42, label %if.else.48

land.lhs.true.42:                                 ; preds = %if.then.35
  %28 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %level_chain43 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %28, i32 0, i32 5
  %29 = load %struct.binding_level*, %struct.binding_level** %level_chain43, align 8
  %parm_flag44 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %29, i32 0, i32 6
  %30 = load i8, i8* %parm_flag44, align 1
  %conv45 = sext i8 %30 to i32
  %tobool46 = icmp ne i32 %conv45, 0
  br i1 %tobool46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %land.lhs.true.42
  br label %if.end.71

if.else.48:                                       ; preds = %land.lhs.true.42, %if.then.35
  %31 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  %tobool49 = icmp ne %union.tree_node* %31, null
  br i1 %tobool49, label %if.then.50, label %if.else.60

if.then.50:                                       ; preds = %if.else.48
  %32 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  %common51 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %code52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common51, i32 0, i32 2
  %bf.load53 = load i32, i32* %code52, align 8
  %bf.clear54 = and i32 %bf.load53, 255
  %cmp55 = icmp eq i32 %bf.clear54, 35
  br i1 %cmp55, label %if.then.57, label %if.else.58

if.then.57:                                       ; preds = %if.then.50
  %33 = load %union.tree_node*, %union.tree_node** %name, align 8
  %34 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  call void @shadow_warning(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.290, i32 0, i32 0), %union.tree_node* %33, %union.tree_node* %34)
  br label %if.end.59

if.else.58:                                       ; preds = %if.then.50
  %35 = load %union.tree_node*, %union.tree_node** %name, align 8
  %36 = load %union.tree_node*, %union.tree_node** %oldlocal.addr, align 8
  call void @shadow_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.291, i32 0, i32 0), %union.tree_node* %35, %union.tree_node* %36)
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.58, %if.then.57
  br label %if.end.70

if.else.60:                                       ; preds = %if.else.48
  %37 = load %union.tree_node*, %union.tree_node** %name, align 8
  %38 = bitcast %union.tree_node* %37 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %38, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  %cmp61 = icmp ne %union.tree_node* %39, null
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.69

land.lhs.true.63:                                 ; preds = %if.else.60
  %40 = load %union.tree_node*, %union.tree_node** %name, align 8
  %41 = bitcast %union.tree_node* %40 to %struct.lang_identifier*
  %global_value64 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %41, i32 0, i32 1
  %42 = load %union.tree_node*, %union.tree_node** %global_value64, align 8
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp65 = icmp ne %union.tree_node* %42, %43
  br i1 %cmp65, label %if.then.67, label %if.end.69

if.then.67:                                       ; preds = %land.lhs.true.63
  %44 = load %union.tree_node*, %union.tree_node** %name, align 8
  %45 = load %union.tree_node*, %union.tree_node** %name, align 8
  %46 = bitcast %union.tree_node* %45 to %struct.lang_identifier*
  %global_value68 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %46, i32 0, i32 1
  %47 = load %union.tree_node*, %union.tree_node** %global_value68, align 8
  call void @shadow_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.292, i32 0, i32 0), %union.tree_node* %44, %union.tree_node* %47)
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.67, %land.lhs.true.63, %if.else.60
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.end.59
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %if.then.47
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71, %land.lhs.true.30, %land.lhs.true.22, %if.else.20
  br label %if.end.73

if.end.73:                                        ; preds = %if.then, %if.end.72, %if.end.19
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @pushdecl_top_level(%union.tree_node* %x) #0 {
entry:
  %x.addr = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %b = alloca %struct.binding_level*, align 8
  store %union.tree_node* %x, %union.tree_node** %x.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %0, %struct.binding_level** %b, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  store %struct.binding_level* %1, %struct.binding_level** @current_binding_level, align 8
  %2 = load %union.tree_node*, %union.tree_node** %x.addr, align 8
  %call = call %union.tree_node* @pushdecl(%union.tree_node* %2)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %3 = load %struct.binding_level*, %struct.binding_level** %b, align 8
  store %struct.binding_level* %3, %struct.binding_level** @current_binding_level, align 8
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8
  ret %union.tree_node* %4
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @implicitly_declare(%union.tree_node* %functionid) #0 {
entry:
  %functionid.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %traditional_warning = alloca i32, align 4
  %implicit_warning = alloca i32, align 4
  store %union.tree_node* %functionid, %union.tree_node** %functionid.addr, align 8
  store i32 0, i32* %traditional_warning, align 4
  %0 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 22), align 8
  %call = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %0, %union.tree_node* %1)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %2 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %4 = bitcast %union.tree_node* %3 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %4, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  %cmp = icmp eq %union.tree_node* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %traditional_warning, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %7 = bitcast %union.tree_node* %6 to %struct.lang_identifier*
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %7, i32 0, i32 4
  %8 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  %cmp1 = icmp eq %union.tree_node* %8, null
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, i32* %implicit_warning, align 4
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl2 = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 5
  %10 = bitcast i48* %external_flag to i64*
  %bf.load3 = load i64, i64* %10, align 8
  %bf.clear4 = and i64 %bf.load3, -257
  %bf.set = or i64 %bf.clear4, 256
  store i64 %bf.set, i64* %10, align 8
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common5 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %public_flag6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 2
  %bf.load7 = load i32, i32* %public_flag6, align 8
  %bf.clear8 = and i32 %bf.load7, -524289
  %bf.set9 = or i32 %bf.clear8, 524288
  store i32 %bf.set9, i32* %public_flag6, align 8
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %13 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %14 = bitcast %union.tree_node* %13 to %struct.lang_identifier*
  %implicit_decl10 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %14, i32 0, i32 4
  store %union.tree_node* %12, %union.tree_node** %implicit_decl10, align 8
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call11 = call %union.tree_node* @pushdecl(%union.tree_node* %15)
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %16)
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @rest_of_decl_compilation(%union.tree_node* %17, i8* null, i32 0, i32 0)
  %18 = load i32, i32* %implicit_warning, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %if.end
  %19 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  call void @implicit_decl_warning(%union.tree_node* %19)
  br label %if.end.19

if.else:                                          ; preds = %if.end
  %20 = load i32, i32* @warn_traditional, align 4
  %tobool14 = icmp ne i32 %20, 0
  br i1 %tobool14, label %land.lhs.true.15, label %if.end.18

land.lhs.true.15:                                 ; preds = %if.else
  %21 = load i32, i32* %traditional_warning, align 4
  %tobool16 = icmp ne i32 %21, 0
  br i1 %tobool16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %land.lhs.true.15
  %22 = load %union.tree_node*, %union.tree_node** %functionid.addr, align 8
  %identifier = bitcast %union.tree_node* %22 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %23 = load i8*, i8** %str, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.148, i32 0, i32 0), i8* %23)
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.17, %land.lhs.true.15, %if.else
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.13
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @gen_aux_info_record(%union.tree_node* %24, i32 0, i32 1, i32 0)
  %call20 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* null, i32 0)
  %25 = load %union.tree_node*, %union.tree_node** %decl, align 8
  ret %union.tree_node* %25
}

declare void @maybe_objc_check_decl(%union.tree_node*) #1

declare void @rest_of_decl_compilation(%union.tree_node*, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @implicit_decl_warning(%union.tree_node* %id) #0 {
entry:
  %id.addr = alloca %union.tree_node*, align 8
  %name = alloca i8*, align 8
  store %union.tree_node* %id, %union.tree_node** %id.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %identifier = bitcast %union.tree_node* %0 to %struct.tree_identifier*
  %id1 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id1, i32 0, i32 1
  %1 = load i8*, i8** %str, align 8
  store i8* %1, i8** %name, align 8
  %2 = load i32, i32* @mesg_implicit_function_declaration, align 4
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.149, i32 0, i32 0), i8* %3)
  br label %if.end.4

if.else:                                          ; preds = %entry
  %4 = load i32, i32* @mesg_implicit_function_declaration, align 4
  %cmp2 = icmp eq i32 %4, 1
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.else
  %5 = load i8*, i8** %name, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.149, i32 0, i32 0), i8* %5)
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  ret void
}

declare void @gen_aux_info_record(%union.tree_node*, i32, i32, i32) #1

declare %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @lookup_label(%union.tree_node* %id) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %id.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store %union.tree_node* %id, %union.tree_node** %id.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %1 = bitcast %union.tree_node* %0 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %1, i32 0, i32 3
  %2 = load %union.tree_node*, %union.tree_node** %label_value, align 8
  store %union.tree_node* %2, %union.tree_node** %decl, align 8
  %3 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp = icmp eq %union.tree_node* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %identifier = bitcast %union.tree_node* %4 to %struct.tree_identifier*
  %id1 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id1, i32 0, i32 1
  %5 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.150, i32 0, i32 0), i8* %5)
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %cmp2 = icmp ne %union.tree_node* %6, null
  br i1 %cmp2, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl4 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4, i32 0, i32 9
  %8 = load %union.tree_node*, %union.tree_node** %context, align 8
  %9 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp5 = icmp ne %union.tree_node* %8, %9
  br i1 %cmp5, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.then.3
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*
  %lang_flag_1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %lang_flag_1, align 8
  %bf.lshr = lshr i32 %bf.load, 25
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %land.lhs.true
  %11 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %call = call %union.tree_node* @shadow_label(%union.tree_node* %11)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end.7:                                         ; preds = %land.lhs.true, %if.then.3
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %12, %union.tree_node** %retval
  br label %return

if.end.8:                                         ; preds = %if.end
  %13 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %call9 = call %union.tree_node* @build_decl(i32 31, %union.tree_node* %13, %union.tree_node* %14)
  store %union.tree_node* %call9, %union.tree_node** %decl, align 8
  %15 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl10 = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %context11 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl10, i32 0, i32 9
  store %union.tree_node* %15, %union.tree_node** %context11, align 8
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl12 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %mode = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl12, i32 0, i32 5
  %18 = bitcast i48* %mode to i64*
  %bf.load13 = load i64, i64* %18, align 8
  %bf.clear14 = and i64 %bf.load13, -256
  store i64 %bf.clear14, i64* %18, align 8
  %19 = load i32, i32* @lineno, align 4
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl15 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl15, i32 0, i32 2
  store i32 %19, i32* %linenum, align 4
  %21 = load i8*, i8** @input_filename, align 8
  %22 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl16 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl16, i32 0, i32 1
  store i8* %21, i8** %filename, align 8
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %24 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %25 = bitcast %union.tree_node* %24 to %struct.lang_identifier*
  %label_value17 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %25, i32 0, i32 3
  store %union.tree_node* %23, %union.tree_node** %label_value17, align 8
  %26 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %27 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  %call18 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %27)
  store %union.tree_node* %call18, %union.tree_node** @named_labels, align 8
  %28 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %28, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.8, %if.end.7, %if.then.6, %if.then
  %29 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %29
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @shadow_label(%union.tree_node* %name) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %name.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %dup = alloca %union.tree_node*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %1 = bitcast %union.tree_node* %0 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %1, i32 0, i32 3
  %2 = load %union.tree_node*, %union.tree_node** %label_value, align 8
  store %union.tree_node* %2, %union.tree_node** %decl, align 8
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %cmp = icmp ne %union.tree_node* %3, null
  br i1 %cmp, label %if.then, label %if.end.7

if.then:                                          ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  store %union.tree_node* %4, %union.tree_node** %dup, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %union.tree_node*, %union.tree_node** %dup, align 8
  %tobool = icmp ne %union.tree_node* %5, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %union.tree_node*, %union.tree_node** %dup, align 8
  %list = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %cmp1 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %for.body
  %9 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %9 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %10 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.151, i32 0, i32 0), i8* %10)
  %11 = load %union.tree_node*, %union.tree_node** %dup, align 8
  %list3 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %value4 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list3, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %value4, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.152, i32 0, i32 0))
  %13 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %call = call %union.tree_node* @lookup_label(%union.tree_node* %13)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load %union.tree_node*, %union.tree_node** %dup, align 8
  %common = bitcast %union.tree_node* %14 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %15, %union.tree_node** %dup, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %17 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  %call5 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %16, %union.tree_node* %17)
  store %union.tree_node* %call5, %union.tree_node** @shadowed_labels, align 8
  store %union.tree_node* null, %union.tree_node** %decl, align 8
  %18 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %19 = bitcast %union.tree_node* %18 to %struct.lang_identifier*
  %label_value6 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %19, i32 0, i32 3
  store %union.tree_node* null, %union.tree_node** %label_value6, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %for.end, %entry
  %20 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %call8 = call %union.tree_node* @lookup_label(%union.tree_node* %20)
  store %union.tree_node* %call8, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.2
  %21 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %21
}

declare void @warning_with_file_and_line(i8*, i32, i8*, ...) #1

declare void @error_with_file_and_line(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @gettags() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %tags, align 8
  ret %union.tree_node* %1
}

; Function Attrs: nounwind uwtable
define void @pending_xref_error() #0 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @pending_invalid_xref, align 8
  %cmp = icmp ne %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @pending_invalid_xref_file, align 8
  %2 = load i32, i32* @pending_invalid_xref_line, align 4
  %3 = load %union.tree_node*, %union.tree_node** @pending_invalid_xref, align 8
  %identifier = bitcast %union.tree_node* %3 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %4 = load i8*, i8** %str, align 8
  call void (i8*, i32, i8*, ...) @error_with_file_and_line(i8* %1, i32 %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.155, i32 0, i32 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_init_decl_processing() #0 {
entry:
  %endlink = alloca %union.tree_node*, align 8
  %ptr_ftype_void = alloca %union.tree_node*, align 8
  %ptr_ftype_ptr = alloca %union.tree_node*, align 8
  call void @c_parse_init()
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8
  store %struct.binding_level* null, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* null, %struct.binding_level** @free_binding_level, align 8
  call void @pushlevel(i32 0)
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %0, %struct.binding_level** @global_binding_level, align 8
  %1 = load i32, i32* @flag_signed_char, align 4
  call void @build_common_tree_nodes(i32 %1)
  call void @c_common_nodes_and_builtins()
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %2, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 16), align 8
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %3, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 17), align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %4, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 18), align 8
  %call = call %union.tree_node* @make_unsigned_type(i32 8)
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, -256
  %bf.set = or i32 %bf.clear, 11
  store i32 %bf.set, i32* %code, align 8
  %call1 = call %union.tree_node* @build_int_2_wide(i64 1, i64 0)
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %type = bitcast %union.tree_node* %6 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 13
  store %union.tree_node* %call1, %union.tree_node** %maxval, align 8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %type2 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %maxval3 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i32 0, i32 13
  %9 = load %union.tree_node*, %union.tree_node** %maxval3, align 8
  %common4 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 1
  store %union.tree_node* %7, %union.tree_node** %type5, align 8
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %type6 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i32 0, i32 6
  %bf.load7 = load i32, i32* %precision, align 4
  %bf.clear8 = and i32 %bf.load7, -512
  %bf.set9 = or i32 %bf.clear8, 1
  store i32 %bf.set9, i32* %precision, align 4
  %call10 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0))
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %call11 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call10, %union.tree_node* %11)
  %call12 = call %union.tree_node* @pushdecl(%union.tree_node* %call11)
  %call13 = call %union.tree_node* @build_int_2_wide(i64 0, i64 0)
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 21), align 8
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 21), align 8
  %common14 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %type15 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 1
  store %union.tree_node* %12, %union.tree_node** %type15, align 8
  %call16 = call %union.tree_node* @build_int_2_wide(i64 1, i64 0)
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 20), align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 20), align 8
  %common17 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  store %union.tree_node* %14, %union.tree_node** %type18, align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 32), align 8
  store %union.tree_node* %16, %union.tree_node** %endlink, align 8
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  %18 = load %union.tree_node*, %union.tree_node** %endlink, align 8
  %call19 = call %union.tree_node* @build_function_type(%union.tree_node* %17, %union.tree_node* %18)
  store %union.tree_node* %call19, %union.tree_node** %ptr_ftype_void, align 8
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 28), align 8
  %21 = load %union.tree_node*, %union.tree_node** %endlink, align 8
  %call20 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %20, %union.tree_node* %21)
  %call21 = call %union.tree_node* @build_function_type(%union.tree_node* %19, %union.tree_node* %call20)
  store %union.tree_node* %call21, %union.tree_node** %ptr_ftype_ptr, align 8
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type22 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %precision23 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i32 0, i32 6
  %bf.load24 = load i32, i32* %precision23, align 4
  %bf.clear25 = and i32 %bf.load24, 511
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %type26 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %precision27 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i32 0, i32 6
  %bf.load28 = load i32, i32* %precision27, align 4
  %bf.clear29 = and i32 %bf.load28, 511
  %cmp = icmp eq i32 %bf.clear25, %bf.clear29
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  store %union.tree_node* %24, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 23), align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  store %union.tree_node* %25, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 24), align 8
  br label %if.end.41

if.else:                                          ; preds = %entry
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type30 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %precision31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 6
  %bf.load32 = load i32, i32* %precision31, align 4
  %bf.clear33 = and i32 %bf.load32, 511
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type34 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %precision35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i32 0, i32 6
  %bf.load36 = load i32, i32* %precision35, align 4
  %bf.clear37 = and i32 %bf.load36, 511
  %cmp38 = icmp eq i32 %bf.clear33, %bf.clear37
  br i1 %cmp38, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %if.else
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %28, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 23), align 8
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  store %union.tree_node* %29, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 24), align 8
  br label %if.end

if.else.40:                                       ; preds = %if.else
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 24), align 8
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 23), align 8
  br label %if.end

if.end:                                           ; preds = %if.else.40, %if.then.39
  br label %if.end.41

if.end.41:                                        ; preds = %if.end, %if.then
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 23), align 8
  %cmp42 = icmp ne %union.tree_node* %30, null
  br i1 %cmp42, label %if.then.43, label %if.end.50

if.then.43:                                       ; preds = %if.end.41
  %call44 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0))
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 23), align 8
  %call45 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call44, %union.tree_node* %31)
  %call46 = call %union.tree_node* @pushdecl(%union.tree_node* %call45)
  %call47 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i32 0, i32 0))
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 24), align 8
  %call48 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call47, %union.tree_node* %32)
  %call49 = call %union.tree_node* @pushdecl(%union.tree_node* %call48)
  br label %if.end.50

if.end.50:                                        ; preds = %if.then.43, %if.end.41
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type51 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %precision52 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i32 0, i32 6
  %bf.load53 = load i32, i32* %precision52, align 4
  %bf.clear54 = and i32 %bf.load53, 511
  %mul = mul nsw i32 %bf.clear54, 2
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  %type55 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %precision56 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type55, i32 0, i32 6
  %bf.load57 = load i32, i32* %precision56, align 4
  %bf.clear58 = and i32 %bf.load57, 511
  %cmp59 = icmp eq i32 %mul, %bf.clear58
  br i1 %cmp59, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %if.end.50
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  store %union.tree_node* %35, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 25), align 8
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  store %union.tree_node* %36, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 26), align 8
  br label %if.end.75

if.else.61:                                       ; preds = %if.end.50
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %type62 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %precision63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type62, i32 0, i32 6
  %bf.load64 = load i32, i32* %precision63, align 4
  %bf.clear65 = and i32 %bf.load64, 511
  %mul66 = mul nsw i32 %bf.clear65, 2
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  %type67 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %precision68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i32 0, i32 6
  %bf.load69 = load i32, i32* %precision68, align 4
  %bf.clear70 = and i32 %bf.load69, 511
  %cmp71 = icmp eq i32 %mul66, %bf.clear70
  br i1 %cmp71, label %if.then.72, label %if.else.73

if.then.72:                                       ; preds = %if.else.61
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  store %union.tree_node* %39, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 25), align 8
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  store %union.tree_node* %40, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 26), align 8
  br label %if.end.74

if.else.73:                                       ; preds = %if.else.61
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 26), align 8
  store %union.tree_node* null, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 25), align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.73, %if.then.72
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.then.60
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 25), align 8
  %cmp76 = icmp ne %union.tree_node* %41, null
  br i1 %cmp76, label %if.then.77, label %if.end.84

if.then.77:                                       ; preds = %if.end.75
  %call78 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0))
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 25), align 8
  %call79 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call78, %union.tree_node* %42)
  %call80 = call %union.tree_node* @pushdecl(%union.tree_node* %call79)
  %call81 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.160, i32 0, i32 0))
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 26), align 8
  %call82 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call81, %union.tree_node* %43)
  %call83 = call %union.tree_node* @pushdecl(%union.tree_node* %call82)
  br label %if.end.84

if.end.84:                                        ; preds = %if.then.77, %if.end.75
  %44 = load i32, i32* @pedantic, align 4
  store i32 %44, i32* @pedantic_lvalues, align 4
  store %union.tree_node* (%union.tree_node*, i32)* @c_make_fname_decl, %union.tree_node* (%union.tree_node*, i32)** @make_fname_decl, align 8
  call void @start_fname_decls()
  store void (%union.tree_node*)* @finish_incomplete_decl, void (%union.tree_node*)** @incomplete_decl_finalize_hook, align 8
  call void @ggc_add_tree_root(%union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0), i32 32)
  call void @ggc_add_root(i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i32 1, i32 32, void (i8*)* @mark_stmt_tree)
  call void @ggc_add_tree_root(%union.tree_node** @c_scope_stmt_stack, i32 1)
  call void @ggc_add_tree_root(%union.tree_node** @named_labels, i32 1)
  call void @ggc_add_tree_root(%union.tree_node** @shadowed_labels, i32 1)
  call void @ggc_add_root(i8* bitcast (%struct.binding_level** @current_binding_level to i8*), i32 1, i32 8, void (i8*)* @mark_binding_level)
  call void @ggc_add_root(i8* bitcast (%struct.binding_level** @label_level_chain to i8*), i32 1, i32 8, void (i8*)* @mark_binding_level)
  call void @ggc_add_tree_root(%union.tree_node** @static_ctors, i32 1)
  call void @ggc_add_tree_root(%union.tree_node** @static_dtors, i32 1)
  ret void
}

declare void @c_parse_init() #1

declare void @build_common_tree_nodes(i32) #1

declare void @c_common_nodes_and_builtins() #1

declare %union.tree_node* @make_unsigned_type(i32) #1

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

declare %union.tree_node* @get_identifier(i8*) #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @c_make_fname_decl(%union.tree_node* %id, i32 %type_dep) #0 {
entry:
  %id.addr = alloca %union.tree_node*, align 8
  %type_dep.addr = alloca i32, align 4
  %name = alloca i8*, align 8
  %decl = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %init = alloca %union.tree_node*, align 8
  %length = alloca i64, align 8
  store %union.tree_node* %id, %union.tree_node** %id.addr, align 8
  store i32 %type_dep, i32* %type_dep.addr, align 4
  %0 = load i32, i32* %type_dep.addr, align 4
  %call = call i8* @fname_as_string(i32 %0)
  store i8* %call, i8** %name, align 8
  %1 = load i8*, i8** %name, align 8
  %call1 = call i64 @strlen(i8* %1) #6
  store i64 %call1, i64* %length, align 8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %call2 = call %union.tree_node* @build_qualified_type(%union.tree_node* %2, i32 1)
  %3 = load i64, i64* %length, align 8
  %call3 = call %union.tree_node* @size_int_wide(i64 %3, i32 0)
  %call4 = call %union.tree_node* @build_index_type(%union.tree_node* %call3)
  %call5 = call %union.tree_node* @build_array_type(%union.tree_node* %call2, %union.tree_node* %call4)
  store %union.tree_node* %call5, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %id.addr, align 8
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call6 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* %4, %union.tree_node* %5)
  store %union.tree_node* %call6, %union.tree_node** %decl, align 8
  %6 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl7 = bitcast %union.tree_node* %7 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7, i32 0, i32 9
  store %union.tree_node* %6, %union.tree_node** %context, align 8
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %static_flag, align 8
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, 262144
  store i32 %bf.set, i32* %static_flag, align 8
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common8 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load9 = load i32, i32* %readonly_flag, align 8
  %bf.clear10 = and i32 %bf.load9, -4097
  %bf.set11 = or i32 %bf.clear10, 4096
  store i32 %bf.set11, i32* %readonly_flag, align 8
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl12 = bitcast %union.tree_node* %10 to %struct.tree_decl*
  %artificial_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl12, i32 0, i32 5
  %11 = bitcast i48* %artificial_flag to i64*
  %bf.load13 = load i64, i64* %11, align 8
  %bf.clear14 = and i64 %bf.load13, -4194305
  %bf.set15 = or i64 %bf.clear14, 4194304
  store i64 %bf.set15, i64* %11, align 8
  %12 = load i64, i64* %length, align 8
  %add = add i64 %12, 1
  %conv = trunc i64 %add to i32
  %13 = load i8*, i8** %name, align 8
  %call16 = call %union.tree_node* @build_string(i32 %conv, i8* %13)
  store %union.tree_node* %call16, %union.tree_node** %init, align 8
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8
  %15 = load %union.tree_node*, %union.tree_node** %init, align 8
  %common17 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  store %union.tree_node* %14, %union.tree_node** %type18, align 8
  %16 = load %union.tree_node*, %union.tree_node** %init, align 8
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl19 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl19, i32 0, i32 12
  store %union.tree_node* %16, %union.tree_node** %initial, align 8
  %18 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common20 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load21 = load i32, i32* %used_flag, align 8
  %bf.clear22 = and i32 %bf.load21, -65537
  %bf.set23 = or i32 %bf.clear22, 65536
  store i32 %bf.set23, i32* %used_flag, align 8
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %20 = load %union.tree_node*, %union.tree_node** %init, align 8
  call void @finish_decl(%union.tree_node* %19, %union.tree_node* %20, %union.tree_node* null)
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8
  ret %union.tree_node* %21
}

declare void @start_fname_decls() #1

declare void @ggc_add_tree_root(%union.tree_node**, i32) #1

declare void @ggc_add_root(i8*, i32, i32, void (i8*)*) #1

declare void @mark_stmt_tree(i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mark_binding_level(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %level = alloca %struct.binding_level*, align 8
  %t__ = alloca %union.tree_node*, align 8
  %t__11 = alloca %union.tree_node*, align 8
  %t__35 = alloca %union.tree_node*, align 8
  %t__59 = alloca %union.tree_node*, align 8
  %t__83 = alloca %union.tree_node*, align 8
  %t__107 = alloca %union.tree_node*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8*, i8** %arg.addr, align 8
  %1 = bitcast i8* %0 to %struct.binding_level**
  %2 = load %struct.binding_level*, %struct.binding_level** %1, align 8
  store %struct.binding_level* %2, %struct.binding_level** %level, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %cmp = icmp ne %struct.binding_level* %3, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.body
  %4 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %4, i32 0, i32 0
  %5 = load %union.tree_node*, %union.tree_node** %names, align 8
  store %union.tree_node* %5, %union.tree_node** %t__, align 8
  %6 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %cmp1 = icmp ne %union.tree_node* %6, null
  br i1 %cmp1, label %land.lhs.true, label %if.end.8

land.lhs.true:                                    ; preds = %do.body
  %7 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %8 = bitcast %union.tree_node* %7 to i8*
  %call = call i32 @ggc_set_mark(i8* %8)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.8, label %if.then

if.then:                                          ; preds = %land.lhs.true
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %9 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %9, i32 0, i32 1
  %10 = load i64, i64* %elements_used, align 8
  %11 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %11, i32 0, i32 0
  %12 = load i64, i64* %num_elements, align 8
  %cmp3 = icmp uge i64 %10, %12
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %do.body.2
  %13 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %14 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements5 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %14, i32 0, i32 0
  %15 = load i64, i64* %num_elements5, align 8
  %mul = mul i64 2, %15
  %call6 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %13, i64 %mul)
  store %struct.varray_head_tag* %call6, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.4, %do.body.2
  %16 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %17 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used7 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %17, i32 0, i32 1
  %18 = load i64, i64* %elements_used7, align 8
  %inc = add i64 %18, 1
  store i64 %inc, i64* %elements_used7, align 8
  %19 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %19, i32 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree, i32 0, i64 %18
  store %union.tree_node* %16, %union.tree_node** %arrayidx, align 8
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.8

if.end.8:                                         ; preds = %do.end, %land.lhs.true, %do.body
  br label %do.end.9

do.end.9:                                         ; preds = %if.end.8
  br label %do.body.10

do.body.10:                                       ; preds = %do.end.9
  %20 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %20, i32 0, i32 1
  %21 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %21, %union.tree_node** %t__11, align 8
  %22 = load %union.tree_node*, %union.tree_node** %t__11, align 8
  %cmp12 = icmp ne %union.tree_node* %22, null
  br i1 %cmp12, label %land.lhs.true.13, label %if.end.32

land.lhs.true.13:                                 ; preds = %do.body.10
  %23 = load %union.tree_node*, %union.tree_node** %t__11, align 8
  %24 = bitcast %union.tree_node* %23 to i8*
  %call14 = call i32 @ggc_set_mark(i8* %24)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.32, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true.13
  br label %do.body.17

do.body.17:                                       ; preds = %if.then.16
  %25 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used18 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %25, i32 0, i32 1
  %26 = load i64, i64* %elements_used18, align 8
  %27 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements19 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %27, i32 0, i32 0
  %28 = load i64, i64* %num_elements19, align 8
  %cmp20 = icmp uge i64 %26, %28
  br i1 %cmp20, label %if.then.21, label %if.end.25

if.then.21:                                       ; preds = %do.body.17
  %29 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %30 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements22 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %30, i32 0, i32 0
  %31 = load i64, i64* %num_elements22, align 8
  %mul23 = mul i64 2, %31
  %call24 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %29, i64 %mul23)
  store %struct.varray_head_tag* %call24, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.21, %do.body.17
  %32 = load %union.tree_node*, %union.tree_node** %t__11, align 8
  %33 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used26 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %33, i32 0, i32 1
  %34 = load i64, i64* %elements_used26, align 8
  %inc27 = add i64 %34, 1
  store i64 %inc27, i64* %elements_used26, align 8
  %35 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data28 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %35, i32 0, i32 4
  %tree29 = bitcast %union.varray_data_tag* %data28 to [1 x %union.tree_node*]*
  %arrayidx30 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree29, i32 0, i64 %34
  store %union.tree_node* %32, %union.tree_node** %arrayidx30, align 8
  br label %do.end.31

do.end.31:                                        ; preds = %if.end.25
  br label %if.end.32

if.end.32:                                        ; preds = %do.end.31, %land.lhs.true.13, %do.body.10
  br label %do.end.33

do.end.33:                                        ; preds = %if.end.32
  br label %do.body.34

do.body.34:                                       ; preds = %do.end.33
  %36 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %36, i32 0, i32 2
  %37 = load %union.tree_node*, %union.tree_node** %shadowed, align 8
  store %union.tree_node* %37, %union.tree_node** %t__35, align 8
  %38 = load %union.tree_node*, %union.tree_node** %t__35, align 8
  %cmp36 = icmp ne %union.tree_node* %38, null
  br i1 %cmp36, label %land.lhs.true.37, label %if.end.56

land.lhs.true.37:                                 ; preds = %do.body.34
  %39 = load %union.tree_node*, %union.tree_node** %t__35, align 8
  %40 = bitcast %union.tree_node* %39 to i8*
  %call38 = call i32 @ggc_set_mark(i8* %40)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.56, label %if.then.40

if.then.40:                                       ; preds = %land.lhs.true.37
  br label %do.body.41

do.body.41:                                       ; preds = %if.then.40
  %41 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used42 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %41, i32 0, i32 1
  %42 = load i64, i64* %elements_used42, align 8
  %43 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements43 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %43, i32 0, i32 0
  %44 = load i64, i64* %num_elements43, align 8
  %cmp44 = icmp uge i64 %42, %44
  br i1 %cmp44, label %if.then.45, label %if.end.49

if.then.45:                                       ; preds = %do.body.41
  %45 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %46 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements46 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %46, i32 0, i32 0
  %47 = load i64, i64* %num_elements46, align 8
  %mul47 = mul i64 2, %47
  %call48 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %45, i64 %mul47)
  store %struct.varray_head_tag* %call48, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.45, %do.body.41
  %48 = load %union.tree_node*, %union.tree_node** %t__35, align 8
  %49 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used50 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %49, i32 0, i32 1
  %50 = load i64, i64* %elements_used50, align 8
  %inc51 = add i64 %50, 1
  store i64 %inc51, i64* %elements_used50, align 8
  %51 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data52 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %51, i32 0, i32 4
  %tree53 = bitcast %union.varray_data_tag* %data52 to [1 x %union.tree_node*]*
  %arrayidx54 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree53, i32 0, i64 %50
  store %union.tree_node* %48, %union.tree_node** %arrayidx54, align 8
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.49
  br label %if.end.56

if.end.56:                                        ; preds = %do.end.55, %land.lhs.true.37, %do.body.34
  br label %do.end.57

do.end.57:                                        ; preds = %if.end.56
  br label %do.body.58

do.body.58:                                       ; preds = %do.end.57
  %52 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %blocks = getelementptr inbounds %struct.binding_level, %struct.binding_level* %52, i32 0, i32 3
  %53 = load %union.tree_node*, %union.tree_node** %blocks, align 8
  store %union.tree_node* %53, %union.tree_node** %t__59, align 8
  %54 = load %union.tree_node*, %union.tree_node** %t__59, align 8
  %cmp60 = icmp ne %union.tree_node* %54, null
  br i1 %cmp60, label %land.lhs.true.61, label %if.end.80

land.lhs.true.61:                                 ; preds = %do.body.58
  %55 = load %union.tree_node*, %union.tree_node** %t__59, align 8
  %56 = bitcast %union.tree_node* %55 to i8*
  %call62 = call i32 @ggc_set_mark(i8* %56)
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.end.80, label %if.then.64

if.then.64:                                       ; preds = %land.lhs.true.61
  br label %do.body.65

do.body.65:                                       ; preds = %if.then.64
  %57 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used66 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %57, i32 0, i32 1
  %58 = load i64, i64* %elements_used66, align 8
  %59 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements67 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %59, i32 0, i32 0
  %60 = load i64, i64* %num_elements67, align 8
  %cmp68 = icmp uge i64 %58, %60
  br i1 %cmp68, label %if.then.69, label %if.end.73

if.then.69:                                       ; preds = %do.body.65
  %61 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %62 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements70 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %62, i32 0, i32 0
  %63 = load i64, i64* %num_elements70, align 8
  %mul71 = mul i64 2, %63
  %call72 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %61, i64 %mul71)
  store %struct.varray_head_tag* %call72, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.69, %do.body.65
  %64 = load %union.tree_node*, %union.tree_node** %t__59, align 8
  %65 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used74 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %65, i32 0, i32 1
  %66 = load i64, i64* %elements_used74, align 8
  %inc75 = add i64 %66, 1
  store i64 %inc75, i64* %elements_used74, align 8
  %67 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data76 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %67, i32 0, i32 4
  %tree77 = bitcast %union.varray_data_tag* %data76 to [1 x %union.tree_node*]*
  %arrayidx78 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree77, i32 0, i64 %66
  store %union.tree_node* %64, %union.tree_node** %arrayidx78, align 8
  br label %do.end.79

do.end.79:                                        ; preds = %if.end.73
  br label %if.end.80

if.end.80:                                        ; preds = %do.end.79, %land.lhs.true.61, %do.body.58
  br label %do.end.81

do.end.81:                                        ; preds = %if.end.80
  br label %do.body.82

do.body.82:                                       ; preds = %do.end.81
  %68 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %this_block = getelementptr inbounds %struct.binding_level, %struct.binding_level* %68, i32 0, i32 4
  %69 = load %union.tree_node*, %union.tree_node** %this_block, align 8
  store %union.tree_node* %69, %union.tree_node** %t__83, align 8
  %70 = load %union.tree_node*, %union.tree_node** %t__83, align 8
  %cmp84 = icmp ne %union.tree_node* %70, null
  br i1 %cmp84, label %land.lhs.true.85, label %if.end.104

land.lhs.true.85:                                 ; preds = %do.body.82
  %71 = load %union.tree_node*, %union.tree_node** %t__83, align 8
  %72 = bitcast %union.tree_node* %71 to i8*
  %call86 = call i32 @ggc_set_mark(i8* %72)
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.end.104, label %if.then.88

if.then.88:                                       ; preds = %land.lhs.true.85
  br label %do.body.89

do.body.89:                                       ; preds = %if.then.88
  %73 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used90 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %73, i32 0, i32 1
  %74 = load i64, i64* %elements_used90, align 8
  %75 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements91 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %75, i32 0, i32 0
  %76 = load i64, i64* %num_elements91, align 8
  %cmp92 = icmp uge i64 %74, %76
  br i1 %cmp92, label %if.then.93, label %if.end.97

if.then.93:                                       ; preds = %do.body.89
  %77 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %78 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements94 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %78, i32 0, i32 0
  %79 = load i64, i64* %num_elements94, align 8
  %mul95 = mul i64 2, %79
  %call96 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %77, i64 %mul95)
  store %struct.varray_head_tag* %call96, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.93, %do.body.89
  %80 = load %union.tree_node*, %union.tree_node** %t__83, align 8
  %81 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used98 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %81, i32 0, i32 1
  %82 = load i64, i64* %elements_used98, align 8
  %inc99 = add i64 %82, 1
  store i64 %inc99, i64* %elements_used98, align 8
  %83 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data100 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %83, i32 0, i32 4
  %tree101 = bitcast %union.varray_data_tag* %data100 to [1 x %union.tree_node*]*
  %arrayidx102 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree101, i32 0, i64 %82
  store %union.tree_node* %80, %union.tree_node** %arrayidx102, align 8
  br label %do.end.103

do.end.103:                                       ; preds = %if.end.97
  br label %if.end.104

if.end.104:                                       ; preds = %do.end.103, %land.lhs.true.85, %do.body.82
  br label %do.end.105

do.end.105:                                       ; preds = %if.end.104
  br label %do.body.106

do.body.106:                                      ; preds = %do.end.105
  %84 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %parm_order = getelementptr inbounds %struct.binding_level, %struct.binding_level* %84, i32 0, i32 12
  %85 = load %union.tree_node*, %union.tree_node** %parm_order, align 8
  store %union.tree_node* %85, %union.tree_node** %t__107, align 8
  %86 = load %union.tree_node*, %union.tree_node** %t__107, align 8
  %cmp108 = icmp ne %union.tree_node* %86, null
  br i1 %cmp108, label %land.lhs.true.109, label %if.end.128

land.lhs.true.109:                                ; preds = %do.body.106
  %87 = load %union.tree_node*, %union.tree_node** %t__107, align 8
  %88 = bitcast %union.tree_node* %87 to i8*
  %call110 = call i32 @ggc_set_mark(i8* %88)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %if.end.128, label %if.then.112

if.then.112:                                      ; preds = %land.lhs.true.109
  br label %do.body.113

do.body.113:                                      ; preds = %if.then.112
  %89 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used114 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %89, i32 0, i32 1
  %90 = load i64, i64* %elements_used114, align 8
  %91 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements115 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %91, i32 0, i32 0
  %92 = load i64, i64* %num_elements115, align 8
  %cmp116 = icmp uge i64 %90, %92
  br i1 %cmp116, label %if.then.117, label %if.end.121

if.then.117:                                      ; preds = %do.body.113
  %93 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %94 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements118 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %94, i32 0, i32 0
  %95 = load i64, i64* %num_elements118, align 8
  %mul119 = mul i64 2, %95
  %call120 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %93, i64 %mul119)
  store %struct.varray_head_tag* %call120, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.121

if.end.121:                                       ; preds = %if.then.117, %do.body.113
  %96 = load %union.tree_node*, %union.tree_node** %t__107, align 8
  %97 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used122 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %97, i32 0, i32 1
  %98 = load i64, i64* %elements_used122, align 8
  %inc123 = add i64 %98, 1
  store i64 %inc123, i64* %elements_used122, align 8
  %99 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data124 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %99, i32 0, i32 4
  %tree125 = bitcast %union.varray_data_tag* %data124 to [1 x %union.tree_node*]*
  %arrayidx126 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree125, i32 0, i64 %98
  store %union.tree_node* %96, %union.tree_node** %arrayidx126, align 8
  br label %do.end.127

do.end.127:                                       ; preds = %if.end.121
  br label %if.end.128

if.end.128:                                       ; preds = %do.end.127, %land.lhs.true.109, %do.body.106
  br label %do.end.129

do.end.129:                                       ; preds = %if.end.128
  br label %for.inc

for.inc:                                          ; preds = %do.end.129
  %100 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %100, i32 0, i32 5
  %101 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %101, %struct.binding_level** %level, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @builtin_function(i8* %name, %union.tree_node* %type, i32 %function_code, i32 %class, i8* %library_name) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %function_code.addr = alloca i32, align 4
  %class.addr = alloca i32, align 4
  %library_name.addr = alloca i8*, align 8
  %decl = alloca %union.tree_node*, align 8
  store i8* %name, i8** %name.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store i32 %function_code, i32* %function_code.addr, align 4
  store i32 %class, i32* %class.addr, align 4
  store i8* %library_name, i8** %library_name.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %call = call %union.tree_node* @get_identifier(i8* %0)
  %1 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call1 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call, %union.tree_node* %1)
  store %union.tree_node* %call1, %union.tree_node** %decl, align 8
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl2 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 5
  %3 = bitcast i48* %external_flag to i64*
  %bf.load = load i64, i64* %3, align 8
  %bf.clear = and i64 %bf.load, -257
  %bf.set = or i64 %bf.clear, 256
  store i64 %bf.set, i64* %3, align 8
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load3 = load i32, i32* %public_flag, align 8
  %bf.clear4 = and i32 %bf.load3, -524289
  %bf.set5 = or i32 %bf.clear4, 524288
  store i32 %bf.set5, i32* %public_flag, align 8
  %5 = load i32, i32* @flag_traditional, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load i8*, i8** %name.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0
  %7 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %7 to i32
  %cmp = icmp ne i32 %conv, 95
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common7 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load8 = load i32, i32* %unsigned_flag, align 8
  %bf.clear9 = and i32 %bf.load8, -8193
  %bf.set10 = or i32 %bf.clear9, 8192
  store i32 %bf.set10, i32* %unsigned_flag, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load i8*, i8** %library_name.addr, align 8
  %tobool11 = icmp ne i8* %9, null
  br i1 %tobool11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %if.end
  %10 = load i8*, i8** %library_name.addr, align 8
  %call13 = call %union.tree_node* @get_identifier(i8* %10)
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl14 = bitcast %union.tree_node* %11 to %struct.tree_decl*
  %assembler_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl14, i32 0, i32 14
  store %union.tree_node* %call13, %union.tree_node** %assembler_name, align 8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @make_decl_rtl(%union.tree_node* %12, i8* null)
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call16 = call %union.tree_node* @pushdecl(%union.tree_node* %13)
  %14 = load i32, i32* %class.addr, align 4
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl17 = bitcast %union.tree_node* %15 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl17, i32 0, i32 5
  %16 = bitcast i48* %built_in_class to i64*
  %17 = zext i32 %14 to i64
  %bf.load18 = load i64, i64* %16, align 8
  %bf.value = and i64 %17, 3
  %bf.shl = shl i64 %bf.value, 29
  %bf.clear19 = and i64 %bf.load18, -1610612737
  %bf.set20 = or i64 %bf.clear19, %bf.shl
  store i64 %bf.set20, i64* %16, align 8
  %bf.result.cast = trunc i64 %bf.value to i32
  %18 = load i32, i32* %function_code.addr, align 4
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl21 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl21, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  store i32 %18, i32* %f, align 4
  %20 = load i32, i32* %function_code.addr, align 4
  %cmp22 = icmp eq i32 %20, 57
  br i1 %cmp22, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.15
  %21 = load i32, i32* %function_code.addr, align 4
  %cmp24 = icmp eq i32 %21, 88
  br i1 %cmp24, label %if.then.26, label %if.end.31

if.then.26:                                       ; preds = %lor.lhs.false, %if.end.15
  %22 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common27 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 2
  %bf.load28 = load i32, i32* %volatile_flag, align 8
  %bf.clear29 = and i32 %bf.load28, -2049
  %bf.set30 = or i32 %bf.clear29, 2048
  store i32 %bf.set30, i32* %volatile_flag, align 8
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.26, %lor.lhs.false
  %23 = load i8*, i8** %name.addr, align 8
  %arrayidx32 = getelementptr inbounds i8, i8* %23, i64 0
  %24 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %24 to i32
  %cmp34 = icmp ne i32 %conv33, 95
  br i1 %cmp34, label %if.then.41, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %if.end.31
  %25 = load i8*, i8** %name.addr, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %26 to i32
  %cmp39 = icmp ne i32 %conv38, 95
  br i1 %cmp39, label %if.then.41, label %if.end.46

if.then.41:                                       ; preds = %lor.lhs.false.36, %if.end.31
  %27 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl42 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %lang_flag_3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl42, i32 0, i32 5
  %28 = bitcast i48* %lang_flag_3 to i64*
  %bf.load43 = load i64, i64* %28, align 8
  %bf.clear44 = and i64 %bf.load43, -1099511627777
  %bf.set45 = or i64 %bf.clear44, 1099511627776
  store i64 %bf.set45, i64* %28, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.41, %lor.lhs.false.36
  %call47 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* null, i32 0)
  %29 = load %union.tree_node*, %union.tree_node** %decl, align 8
  ret %union.tree_node* %29
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: nounwind uwtable
define void @insert_default_attributes(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %public_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @c_common_insert_default_attributes(%union.tree_node* %1)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare void @c_common_insert_default_attributes(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @shadow_tag(%union.tree_node* %declspecs) #0 {
entry:
  %declspecs.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  call void @shadow_tag_warned(%union.tree_node* %0, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @shadow_tag_warned(%union.tree_node* %declspecs, i32 %warned) #0 {
entry:
  %declspecs.addr = alloca %union.tree_node*, align 8
  %warned.addr = alloca i32, align 4
  %found_tag = alloca i32, align 4
  %link = alloca %union.tree_node*, align 8
  %specs = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %name = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  store i32 %warned, i32* %warned.addr, align 4
  store i32 0, i32* %found_tag, align 4
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8
  %0 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  call void @split_specs_attrs(%union.tree_node* %0, %union.tree_node** %specs, %union.tree_node** %attrs)
  %1 = load %union.tree_node*, %union.tree_node** %specs, align 8
  store %union.tree_node* %1, %union.tree_node** %link, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list = bitcast %union.tree_node* %3 to %struct.tree_list*
  %value1 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %4 = load %union.tree_node*, %union.tree_node** %value1, align 8
  store %union.tree_node* %4, %union.tree_node** %value, align 8
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code2, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %6 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %6, 20
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %7 = load i32, i32* %code, align 4
  %cmp3 = icmp eq i32 %7, 21
  br i1 %cmp3, label %if.then, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %8 = load i32, i32* %code, align 4
  %cmp5 = icmp eq i32 %8, 10
  br i1 %cmp5, label %if.then, label %if.else.17

if.then:                                          ; preds = %lor.lhs.false.4, %lor.lhs.false, %for.body
  %9 = load %union.tree_node*, %union.tree_node** %value, align 8
  %call = call %union.tree_node* @lookup_tag_reverse(%union.tree_node* %9)
  store %union.tree_node* %call, %union.tree_node** %name, align 8
  %10 = load i32, i32* %found_tag, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %found_tag, align 4
  %11 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp6 = icmp eq %union.tree_node* %11, null
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.then
  %12 = load i32, i32* %warned.addr, align 4
  %cmp8 = icmp ne i32 %12, 1
  br i1 %cmp8, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then.7
  %13 = load i32, i32* %code, align 4
  %cmp9 = icmp ne i32 %13, 10
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.161, i32 0, i32 0))
  store i32 1, i32* %warned.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.10, %land.lhs.true, %if.then.7
  br label %if.end.16

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %code, align 4
  %15 = load %union.tree_node*, %union.tree_node** %name, align 8
  %16 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %call11 = call %union.tree_node* @lookup_tag(i32 %14, %union.tree_node* %15, %struct.binding_level* %16, i32 1)
  store %union.tree_node* %call11, %union.tree_node** %t, align 8
  %17 = load %union.tree_node*, %union.tree_node** %t, align 8
  %cmp12 = icmp eq %union.tree_node* %17, null
  br i1 %cmp12, label %if.then.13, label %if.end.15

if.then.13:                                       ; preds = %if.else
  %18 = load i32, i32* %code, align 4
  %call14 = call %union.tree_node* @make_node(i32 %18)
  store %union.tree_node* %call14, %union.tree_node** %t, align 8
  %19 = load %union.tree_node*, %union.tree_node** %name, align 8
  %20 = load %union.tree_node*, %union.tree_node** %t, align 8
  call void @pushtag(%union.tree_node* %19, %union.tree_node* %20)
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.13, %if.else
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.end
  br label %if.end.23

if.else.17:                                       ; preds = %lor.lhs.false.4
  %21 = load i32, i32* %warned.addr, align 4
  %tobool18 = icmp ne i32 %21, 0
  br i1 %tobool18, label %if.end.22, label %land.lhs.true.19

land.lhs.true.19:                                 ; preds = %if.else.17
  %22 = load i32, i32* @in_system_header, align 4
  %tobool20 = icmp ne i32 %22, 0
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %land.lhs.true.19
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.162, i32 0, i32 0))
  store i32 2, i32* %warned.addr, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.21, %land.lhs.true.19, %if.else.17
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end.16
  br label %for.inc

for.inc:                                          ; preds = %if.end.23
  %23 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common24 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 0
  %24 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %24, %union.tree_node** %link, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %found_tag, align 4
  %cmp25 = icmp sgt i32 %25, 1
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %for.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.163, i32 0, i32 0))
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %for.end
  %26 = load i32, i32* %warned.addr, align 4
  %cmp28 = icmp ne i32 %26, 1
  br i1 %cmp28, label %if.then.29, label %if.end.33

if.then.29:                                       ; preds = %if.end.27
  %27 = load i32, i32* %found_tag, align 4
  %cmp30 = icmp eq i32 %27, 0
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.then.29
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.164, i32 0, i32 0))
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.then.29
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.end.27
  ret void
}

declare void @split_specs_attrs(%union.tree_node*, %union.tree_node**, %union.tree_node**) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @lookup_tag_reverse(%union.tree_node* %type) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %level = alloca %struct.binding_level*, align 8
  %tail = alloca %union.tree_node*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  store %struct.binding_level* %0, %struct.binding_level** %level, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.5, %entry
  %1 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tobool = icmp ne %struct.binding_level* %1, null
  br i1 %tobool, label %for.body, label %for.end.6

for.body:                                         ; preds = %for.cond
  %2 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %3, %union.tree_node** %tail, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %4 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool2 = icmp ne %union.tree_node* %4, null
  br i1 %tobool2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %5 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %value, align 8
  %7 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %cmp = icmp eq %union.tree_node* %6, %7
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.3
  %8 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list4 = bitcast %union.tree_node* %8 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list4, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  store %union.tree_node* %9, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %for.body.3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %11 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %11, %union.tree_node** %tail, align 8
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.5

for.inc.5:                                        ; preds = %for.end
  %12 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %12, i32 0, i32 5
  %13 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %13, %struct.binding_level** %level, align 8
  br label %for.cond

for.end.6:                                        ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %for.end.6, %if.then
  %14 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %14
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @lookup_tag(i32 %code, %union.tree_node* %name, %struct.binding_level* %binding_level, i32 %thislevel_only) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %name.addr = alloca %union.tree_node*, align 8
  %binding_level.addr = alloca %struct.binding_level*, align 8
  %thislevel_only.addr = alloca i32, align 4
  %level = alloca %struct.binding_level*, align 8
  %thislevel = alloca i32, align 4
  %tail = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %struct.binding_level* %binding_level, %struct.binding_level** %binding_level.addr, align 8
  store i32 %thislevel_only, i32* %thislevel_only.addr, align 4
  store i32 1, i32* %thislevel, align 4
  %0 = load %struct.binding_level*, %struct.binding_level** %binding_level.addr, align 8
  store %struct.binding_level* %0, %struct.binding_level** %level, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.21, %entry
  %1 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tobool = icmp ne %struct.binding_level* %1, null
  br i1 %tobool, label %for.body, label %for.end.22

for.body:                                         ; preds = %for.cond
  %2 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %3, %union.tree_node** %tail, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %4 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool2 = icmp ne %union.tree_node* %4, null
  br i1 %tobool2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %5 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list = bitcast %union.tree_node* %5 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %7 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %cmp = icmp eq %union.tree_node* %6, %7
  br i1 %cmp, label %if.then, label %if.end.13

if.then:                                          ; preds = %for.body.3
  %8 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list4 = bitcast %union.tree_node* %8 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list4, i32 0, i32 2
  %9 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code5, align 8
  %bf.clear = and i32 %bf.load, 255
  %10 = load i32, i32* %code.addr, align 4
  %cmp6 = icmp ne i32 %bf.clear, %10
  br i1 %cmp6, label %if.then.7, label %if.end.10

if.then.7:                                        ; preds = %if.then
  %11 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  store %union.tree_node* %11, %union.tree_node** @pending_invalid_xref, align 8
  %12 = load i8*, i8** @input_filename, align 8
  store i8* %12, i8** @pending_invalid_xref_file, align 8
  %13 = load i32, i32* @lineno, align 4
  store i32 %13, i32* @pending_invalid_xref_line, align 4
  %14 = load i32, i32* %thislevel, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then.9, label %if.end

if.then.9:                                        ; preds = %if.then.7
  call void @pending_xref_error()
  br label %if.end

if.end:                                           ; preds = %if.then.9, %if.then.7
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.then
  %15 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %list11 = bitcast %union.tree_node* %15 to %struct.tree_list*
  %value12 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list11, i32 0, i32 2
  %16 = load %union.tree_node*, %union.tree_node** %value12, align 8
  store %union.tree_node* %16, %union.tree_node** %retval
  br label %return

if.end.13:                                        ; preds = %for.body.3
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %17 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common14 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %18, %union.tree_node** %tail, align 8
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  %19 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %tag_transparent = getelementptr inbounds %struct.binding_level, %struct.binding_level* %19, i32 0, i32 7
  %20 = load i8, i8* %tag_transparent, align 1
  %tobool15 = icmp ne i8 %20, 0
  br i1 %tobool15, label %if.end.20, label %if.then.16

if.then.16:                                       ; preds = %for.end
  %21 = load i32, i32* %thislevel_only.addr, align 4
  %tobool17 = icmp ne i32 %21, 0
  br i1 %tobool17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.then.16
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.19:                                        ; preds = %if.then.16
  store i32 0, i32* %thislevel, align 4
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %for.end
  br label %for.inc.21

for.inc.21:                                       ; preds = %if.end.20
  %22 = load %struct.binding_level*, %struct.binding_level** %level, align 8
  %level_chain = getelementptr inbounds %struct.binding_level, %struct.binding_level* %22, i32 0, i32 5
  %23 = load %struct.binding_level*, %struct.binding_level** %level_chain, align 8
  store %struct.binding_level* %23, %struct.binding_level** %level, align 8
  br label %for.cond

for.end.22:                                       ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %for.end.22, %if.then.18, %if.end.10
  %24 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %24
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_array_declarator(%union.tree_node* %expr, %union.tree_node* %quals, i32 %static_p, i32 %vla_unspec_p) #0 {
entry:
  %expr.addr = alloca %union.tree_node*, align 8
  %quals.addr = alloca %union.tree_node*, align 8
  %static_p.addr = alloca i32, align 4
  %vla_unspec_p.addr = alloca i32, align 4
  %decl = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  store %union.tree_node* %quals, %union.tree_node** %quals.addr, align 8
  store i32 %static_p, i32* %static_p.addr, align 4
  store i32 %vla_unspec_p, i32* %vla_unspec_p.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8
  %call = call %union.tree_node* (i32, ...) @build_nt(i32 43, %union.tree_node* null, %union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %1 = load %union.tree_node*, %union.tree_node** %quals.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %3 = load i32, i32* %static_p.addr, align 4
  %tobool = icmp ne i32 %3, 0
  %cond = select i1 %tobool, i32 1, i32 0
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common1 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %static_flag, align 8
  %bf.value = and i32 %cond, 1
  %bf.shl = shl i32 %bf.value, 18
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %static_flag, align 8
  %5 = load i32, i32* @pedantic, align 4
  %tobool2 = icmp ne i32 %5, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end.9

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* @flag_isoc99, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.end.9, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %static_p.addr, align 4
  %tobool4 = icmp ne i32 %7, 0
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %quals.addr, align 8
  %cmp = icmp ne %union.tree_node* %8, null
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %lor.lhs.false, %if.then
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.165, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then.5, %lor.lhs.false
  %9 = load i32, i32* %vla_unspec_p.addr, align 4
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.166, i32 0, i32 0))
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8, %land.lhs.true, %entry
  %10 = load i32, i32* %vla_unspec_p.addr, align 4
  %tobool10 = icmp ne i32 %10, 0
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.9
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.167, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.end.9
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  ret %union.tree_node* %11
}

declare %union.tree_node* @build_nt(i32, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @set_array_declarator_type(%union.tree_node* %decl, %union.tree_node* %type, i32 %abstract_p) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %abstract_p.addr = alloca i32, align 4
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store i32 %abstract_p, i32* %abstract_p.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %exp = bitcast %union.tree_node* %1 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  store %union.tree_node* %0, %union.tree_node** %arrayidx, align 8
  %2 = load i32, i32* %abstract_p.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8
  %cmp = icmp ne %union.tree_node* %4, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common2 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 2
  %bf.load = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 18
  %bf.clear = and i32 %bf.lshr, 1
  %tobool3 = icmp ne i32 %bf.clear, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.168, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  ret %union.tree_node* %6
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @groktypename(%union.tree_node* %typename) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %typename.addr = alloca %union.tree_node*, align 8
  %specs = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* %typename, %union.tree_node** %typename.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  call void @split_specs_attrs(%union.tree_node* %3, %union.tree_node** %specs, %union.tree_node** %attrs)
  %4 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %list1 = bitcast %union.tree_node* %4 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1, i32 0, i32 2
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8
  %6 = load %union.tree_node*, %union.tree_node** %specs, align 8
  %call = call %union.tree_node* @grokdeclarator(%union.tree_node* %5, %union.tree_node* %6, i32 5, i32 0)
  store %union.tree_node* %call, %union.tree_node** %typename.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %attrs, align 8
  %call2 = call %union.tree_node* @decl_attributes(%union.tree_node** %typename.addr, %union.tree_node* %7, i32 0)
  %8 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  store %union.tree_node* %8, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %9
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %decl_context, i32 %initialized) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %declarator.addr = alloca %union.tree_node*, align 8
  %declspecs.addr = alloca %union.tree_node*, align 8
  %decl_context.addr = alloca i32, align 4
  %initialized.addr = alloca i32, align 4
  %specbits = alloca i32, align 4
  %spec = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %longlong = alloca i32, align 4
  %constp = alloca i32, align 4
  %restrictp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %type_quals = alloca i32, align 4
  %inlinep = alloca i32, align 4
  %explicit_int = alloca i32, align 4
  %explicit_char = alloca i32, align 4
  %defaulted_int = alloca i32, align 4
  %typedef_decl = alloca %union.tree_node*, align 8
  %name = alloca i8*, align 8
  %typedef_type = alloca %union.tree_node*, align 8
  %funcdef_flag = alloca i32, align 4
  %innermost_code = alloca i32, align 4
  %bitfield = alloca i32, align 4
  %size_varies = alloca i32, align 4
  %decl_attr = alloca %union.tree_node*, align 8
  %array_ptr_quals = alloca %union.tree_node*, align 8
  %array_parm_static = alloca i32, align 4
  %returned_attrs = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %id25 = alloca %union.tree_node*, align 8
  %i = alloca i32, align 4
  %t = alloca %union.tree_node*, align 8
  %ok = alloca i32, align 4
  %nclasses = alloca i32, align 4
  %attrs = alloca %union.tree_node*, align 8
  %inner_decl = alloca %union.tree_node*, align 8
  %attr_flags = alloca i32, align 4
  %itype = alloca %union.tree_node*, align 8
  %size = alloca %union.tree_node*, align 8
  %index_type = alloca %union.tree_node*, align 8
  %arg_types = alloca %union.tree_node*, align 8
  %link = alloca %union.tree_node*, align 8
  %typemodlist = alloca %union.tree_node*, align 8
  %erred = alloca i32, align 4
  %qualifier = alloca %union.tree_node*, align 8
  %decl1200 = alloca %union.tree_node*, align 8
  %decl1326 = alloca %union.tree_node*, align 8
  %type_as_written = alloca %union.tree_node*, align 8
  %promoted_type = alloca %union.tree_node*, align 8
  %new_ptr_quals = alloca %union.tree_node*, align 8
  %new_ptr_attrs = alloca %union.tree_node*, align 8
  %erred1346 = alloca i32, align 4
  %qualifier1354 = alloca %union.tree_node*, align 8
  %extern_ref = alloca i32, align 4
  %extern_ref1657 = alloca i32, align 4
  %saved_align = alloca i32, align 4
  store %union.tree_node* %declarator, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  store i32 %decl_context, i32* %decl_context.addr, align 4
  store i32 %initialized, i32* %initialized.addr, align 4
  store i32 0, i32* %specbits, align 4
  store %union.tree_node* null, %union.tree_node** %type, align 8
  store i32 0, i32* %longlong, align 4
  store i32 0, i32* %type_quals, align 4
  store i32 0, i32* %explicit_int, align 4
  store i32 0, i32* %explicit_char, align 4
  store i32 0, i32* %defaulted_int, align 4
  store %union.tree_node* null, %union.tree_node** %typedef_decl, align 8
  store %union.tree_node* null, %union.tree_node** %typedef_type, align 8
  store i32 0, i32* %funcdef_flag, align 4
  store i32 0, i32* %innermost_code, align 4
  store i32 0, i32* %bitfield, align 4
  store i32 0, i32* %size_varies, align 4
  store %union.tree_node* null, %union.tree_node** %decl_attr, align 8
  store %union.tree_node* null, %union.tree_node** %array_ptr_quals, align 8
  store i32 0, i32* %array_parm_static, align 4
  store %union.tree_node* null, %union.tree_node** %returned_attrs, align 8
  %0 = load i32, i32* %decl_context.addr, align 4
  %cmp = icmp eq i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %bitfield, align 4
  store i32 3, i32* %decl_context.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %decl_context.addr, align 4
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 1, i32* %funcdef_flag, align 4
  store i32 0, i32* %decl_context.addr, align 4
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %2 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %2, %union.tree_node** %decl, align 8
  store i8* null, i8** %name, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %if.end.3
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool = icmp ne %union.tree_node* %3, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 43, label %sw.bb
    i32 41, label %sw.bb
    i32 53, label %sw.bb
    i32 2, label %sw.bb.8
    i32 1, label %sw.bb.9
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common4 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load6 = load i32, i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  store i32 %bf.clear7, i32* %innermost_code, align 4
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %exp = bitcast %union.tree_node* %6 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %7, %union.tree_node** %decl, align 8
  br label %sw.epilog

sw.bb.8:                                          ; preds = %while.body
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %list = bitcast %union.tree_node* %8 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %9 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %9, %union.tree_node** %decl, align 8
  br label %sw.epilog

sw.bb.9:                                          ; preds = %while.body
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %identifier = bitcast %union.tree_node* %10 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %11 = load i8*, i8** %str, align 8
  store i8* %11, i8** %name, align 8
  store %union.tree_node* null, %union.tree_node** %decl, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), i32 4116, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.grokdeclarator, i32 0, i32 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb.9, %sw.bb.8, %sw.bb
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = load i8*, i8** %name, align 8
  %cmp10 = icmp eq i8* %12, null
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %while.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.293, i32 0, i32 0), i8** %name, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %while.end
  %13 = load i32, i32* %funcdef_flag, align 4
  %tobool13 = icmp ne i32 %13, 0
  br i1 %tobool13, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %if.end.12
  %14 = load i32, i32* %innermost_code, align 4
  %cmp14 = icmp ne i32 %14, 53
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %land.lhs.true
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.16:                                        ; preds = %land.lhs.true, %if.end.12
  %15 = load i32, i32* %decl_context.addr, align 4
  %cmp17 = icmp eq i32 %15, 0
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.23

land.lhs.true.18:                                 ; preds = %if.end.16
  %16 = load i32, i32* %funcdef_flag, align 4
  %tobool19 = icmp ne i32 %16, 0
  br i1 %tobool19, label %if.end.23, label %land.lhs.true.20

land.lhs.true.20:                                 ; preds = %land.lhs.true.18
  %17 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_flag = getelementptr inbounds %struct.binding_level, %struct.binding_level* %17, i32 0, i32 6
  %18 = load i8, i8* %parm_flag, align 1
  %conv = sext i8 %18 to i32
  %tobool21 = icmp ne i32 %conv, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %land.lhs.true.20
  store i32 2, i32* %decl_context.addr, align 4
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %land.lhs.true.20, %land.lhs.true.18, %if.end.16
  %19 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  store %union.tree_node* %19, %union.tree_node** %spec, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.23
  %20 = load %union.tree_node*, %union.tree_node** %spec, align 8
  %tobool24 = icmp ne %union.tree_node* %20, null
  br i1 %tobool24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load %union.tree_node*, %union.tree_node** %spec, align 8
  %list26 = bitcast %union.tree_node* %21 to %struct.tree_list*
  %value27 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list26, i32 0, i32 2
  %22 = load %union.tree_node*, %union.tree_node** %value27, align 8
  store %union.tree_node* %22, %union.tree_node** %id25, align 8
  %23 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %tobool28 = icmp ne %union.tree_node* %23, null
  br i1 %tobool28, label %land.lhs.true.29, label %if.end.39

land.lhs.true.29:                                 ; preds = %for.body
  %24 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common30 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %deprecated_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load31 = load i32, i32* %deprecated_flag, align 8
  %bf.lshr = lshr i32 %bf.load31, 23
  %bf.clear32 = and i32 %bf.lshr, 1
  %tobool33 = icmp ne i32 %bf.clear32, 0
  br i1 %tobool33, label %if.then.34, label %if.end.39

if.then.34:                                       ; preds = %land.lhs.true.29
  %25 = load i32, i32* @deprecated_state, align 4
  %cmp35 = icmp ne i32 %25, 1
  br i1 %cmp35, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.then.34
  %26 = load %union.tree_node*, %union.tree_node** %id25, align 8
  call void @warn_deprecated_use(%union.tree_node* %26)
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.37, %if.then.34
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %land.lhs.true.29, %for.body
  %27 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %28 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8
  %arrayidx40 = getelementptr inbounds %union.tree_node*, %union.tree_node** %28, i64 27
  %29 = load %union.tree_node*, %union.tree_node** %arrayidx40, align 8
  %cmp41 = icmp eq %union.tree_node* %27, %29
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.39
  store i32 1, i32* %explicit_int, align 4
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.43, %if.end.39
  %30 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %31 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8
  %arrayidx45 = getelementptr inbounds %union.tree_node*, %union.tree_node** %31, i64 28
  %32 = load %union.tree_node*, %union.tree_node** %arrayidx45, align 8
  %cmp46 = icmp eq %union.tree_node* %30, %32
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.44
  store i32 1, i32* %explicit_char, align 4
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.48, %if.end.44
  %33 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common50 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %code51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load52 = load i32, i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 1
  br i1 %cmp54, label %land.lhs.true.56, label %if.end.96

land.lhs.true.56:                                 ; preds = %if.end.49
  %34 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common57 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %lang_flag_0 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common57, i32 0, i32 2
  %bf.load58 = load i32, i32* %lang_flag_0, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 24
  %bf.clear60 = and i32 %bf.lshr59, 1
  %tobool61 = icmp ne i32 %bf.clear60, 0
  br i1 %tobool61, label %if.then.62, label %if.end.96

if.then.62:                                       ; preds = %land.lhs.true.56
  %35 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %36 = bitcast %union.tree_node* %35 to %struct.c_common_identifier*
  %node = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %36, i32 0, i32 1
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node, i32 0, i32 3
  %37 = load i8, i8* %rid_code, align 1
  %conv63 = zext i8 %37 to i32
  store i32 %conv63, i32* %i, align 4
  %38 = load i32, i32* %i, align 4
  %cmp64 = icmp sle i32 %38, 26
  br i1 %cmp64, label %if.then.66, label %if.end.95

if.then.66:                                       ; preds = %if.then.62
  %39 = load i32, i32* %i, align 4
  %cmp67 = icmp eq i32 %39, 2
  br i1 %cmp67, label %land.lhs.true.69, label %if.else.84

land.lhs.true.69:                                 ; preds = %if.then.66
  %40 = load i32, i32* %specbits, align 4
  %41 = load i32, i32* %i, align 4
  %shl = shl i32 1, %41
  %and = and i32 %40, %shl
  %tobool70 = icmp ne i32 %and, 0
  br i1 %tobool70, label %if.then.71, label %if.else.84

if.then.71:                                       ; preds = %land.lhs.true.69
  %42 = load i32, i32* %longlong, align 4
  %tobool72 = icmp ne i32 %42, 0
  br i1 %tobool72, label %if.then.73, label %if.else

if.then.73:                                       ; preds = %if.then.71
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.294, i32 0, i32 0))
  br label %if.end.83

if.else:                                          ; preds = %if.then.71
  %43 = load i32, i32* @pedantic, align 4
  %tobool74 = icmp ne i32 %43, 0
  br i1 %tobool74, label %land.lhs.true.75, label %if.end.82

land.lhs.true.75:                                 ; preds = %if.else
  %44 = load i32, i32* @flag_isoc99, align 4
  %tobool76 = icmp ne i32 %44, 0
  br i1 %tobool76, label %if.end.82, label %land.lhs.true.77

land.lhs.true.77:                                 ; preds = %land.lhs.true.75
  %45 = load i32, i32* @in_system_header, align 4
  %tobool78 = icmp ne i32 %45, 0
  br i1 %tobool78, label %if.end.82, label %land.lhs.true.79

land.lhs.true.79:                                 ; preds = %land.lhs.true.77
  %46 = load i32, i32* @warn_long_long, align 4
  %tobool80 = icmp ne i32 %46, 0
  br i1 %tobool80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %land.lhs.true.79
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.295, i32 0, i32 0))
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %land.lhs.true.79, %land.lhs.true.77, %land.lhs.true.75, %if.else
  store i32 1, i32* %longlong, align 4
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82, %if.then.73
  br label %if.end.93

if.else.84:                                       ; preds = %land.lhs.true.69, %if.then.66
  %47 = load i32, i32* %specbits, align 4
  %48 = load i32, i32* %i, align 4
  %shl85 = shl i32 1, %48
  %and86 = and i32 %47, %shl85
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then.88, label %if.end.92

if.then.88:                                       ; preds = %if.else.84
  %49 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %identifier89 = bitcast %union.tree_node* %49 to %struct.tree_identifier*
  %id90 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier89, i32 0, i32 1
  %str91 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id90, i32 0, i32 1
  %50 = load i8*, i8** %str91, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i32 0, i32 0), i8* %50)
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.88, %if.else.84
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.end.83
  %51 = load i32, i32* %i, align 4
  %shl94 = shl i32 1, %51
  %52 = load i32, i32* %specbits, align 4
  %or = or i32 %52, %shl94
  store i32 %or, i32* %specbits, align 4
  br label %found

if.end.95:                                        ; preds = %if.then.62
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %land.lhs.true.56, %if.end.49
  %53 = load %union.tree_node*, %union.tree_node** %type, align 8
  %tobool97 = icmp ne %union.tree_node* %53, null
  br i1 %tobool97, label %if.then.98, label %if.else.99

if.then.98:                                       ; preds = %if.end.96
  %54 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.297, i32 0, i32 0), i8* %54)
  br label %if.end.158

if.else.99:                                       ; preds = %if.end.96
  %55 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common100 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 2
  %bf.load102 = load i32, i32* %code101, align 8
  %bf.clear103 = and i32 %bf.load102, 255
  %cmp104 = icmp eq i32 %bf.clear103, 33
  br i1 %cmp104, label %if.then.106, label %if.else.117

if.then.106:                                      ; preds = %if.else.99
  %56 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common107 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common107, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type108, align 8
  %58 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp109 = icmp eq %union.tree_node* %57, %58
  br i1 %cmp109, label %if.then.111, label %if.else.112

if.then.111:                                      ; preds = %if.then.106
  br label %if.end.116

if.else.112:                                      ; preds = %if.then.106
  %59 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common113 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %type114 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common113, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %type114, align 8
  store %union.tree_node* %60, %union.tree_node** %type, align 8
  %61 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %decl115 = bitcast %union.tree_node* %61 to %struct.tree_decl*
  %attributes = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl115, i32 0, i32 16
  %62 = load %union.tree_node*, %union.tree_node** %attributes, align 8
  store %union.tree_node* %62, %union.tree_node** %decl_attr, align 8
  %63 = load %union.tree_node*, %union.tree_node** %id25, align 8
  store %union.tree_node* %63, %union.tree_node** %typedef_decl, align 8
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.112, %if.then.111
  br label %if.end.157

if.else.117:                                      ; preds = %if.else.99
  %64 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common118 = bitcast %union.tree_node* %64 to %struct.tree_common*
  %code119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common118, i32 0, i32 2
  %bf.load120 = load i32, i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 1
  br i1 %cmp122, label %if.then.124, label %if.else.147

if.then.124:                                      ; preds = %if.else.117
  %65 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %call = call %union.tree_node* @lookup_name(%union.tree_node* %65)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %66 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common125 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type126 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common125, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type126, align 8
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp127 = icmp eq %union.tree_node* %67, %68
  br i1 %cmp127, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %if.then.124
  br label %if.end.146

if.else.130:                                      ; preds = %if.then.124
  %69 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool131 = icmp ne %union.tree_node* %69, null
  br i1 %tobool131, label %lor.lhs.false, label %if.then.138

lor.lhs.false:                                    ; preds = %if.else.130
  %70 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common132 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %code133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 2
  %bf.load134 = load i32, i32* %code133, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp ne i32 %bf.clear135, 33
  br i1 %cmp136, label %if.then.138, label %if.else.142

if.then.138:                                      ; preds = %lor.lhs.false, %if.else.130
  %71 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %identifier139 = bitcast %union.tree_node* %71 to %struct.tree_identifier*
  %id140 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier139, i32 0, i32 1
  %str141 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id140, i32 0, i32 1
  %72 = load i8*, i8** %str141, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.298, i32 0, i32 0), i8* %72)
  br label %if.end.145

if.else.142:                                      ; preds = %lor.lhs.false
  %73 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common143 = bitcast %union.tree_node* %73 to %struct.tree_common*
  %type144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common143, i32 0, i32 1
  %74 = load %union.tree_node*, %union.tree_node** %type144, align 8
  store %union.tree_node* %74, %union.tree_node** %type, align 8
  %75 = load %union.tree_node*, %union.tree_node** %t, align 8
  store %union.tree_node* %75, %union.tree_node** %typedef_decl, align 8
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.142, %if.then.138
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.then.129
  br label %if.end.156

if.else.147:                                      ; preds = %if.else.117
  %76 = load %union.tree_node*, %union.tree_node** %id25, align 8
  %common148 = bitcast %union.tree_node* %76 to %struct.tree_common*
  %code149 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 2
  %bf.load150 = load i32, i32* %code149, align 8
  %bf.clear151 = and i32 %bf.load150, 255
  %cmp152 = icmp ne i32 %bf.clear151, 0
  br i1 %cmp152, label %if.then.154, label %if.end.155

if.then.154:                                      ; preds = %if.else.147
  %77 = load %union.tree_node*, %union.tree_node** %id25, align 8
  store %union.tree_node* %77, %union.tree_node** %type, align 8
  br label %if.end.155

if.end.155:                                       ; preds = %if.then.154, %if.else.147
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.155, %if.end.146
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %if.end.116
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.157, %if.then.98
  br label %found

found:                                            ; preds = %if.end.158, %if.end.93
  br label %for.inc

for.inc:                                          ; preds = %found
  %78 = load %union.tree_node*, %union.tree_node** %spec, align 8
  %common159 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common159, i32 0, i32 0
  %79 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %79, %union.tree_node** %spec, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %80 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %80, %union.tree_node** %typedef_type, align 8
  %81 = load %union.tree_node*, %union.tree_node** %type, align 8
  %tobool160 = icmp ne %union.tree_node* %81, null
  br i1 %tobool160, label %if.then.161, label %if.end.166

if.then.161:                                      ; preds = %for.end
  %82 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type162 = bitcast %union.tree_node* %82 to %struct.tree_type*
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162, i32 0, i32 6
  %bf.load163 = load i32, i32* %lang_flag_1, align 4
  %bf.lshr164 = lshr i32 %bf.load163, 25
  %bf.clear165 = and i32 %bf.lshr164, 1
  store i32 %bf.clear165, i32* %size_varies, align 4
  br label %if.end.166

if.end.166:                                       ; preds = %if.then.161, %for.end
  %83 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp167 = icmp eq %union.tree_node* %83, null
  br i1 %cmp167, label %if.then.169, label %if.end.196

if.then.169:                                      ; preds = %if.end.166
  %84 = load i32, i32* %specbits, align 4
  %and170 = and i32 %84, 33926
  %tobool171 = icmp ne i32 %and170, 0
  br i1 %tobool171, label %if.end.195, label %land.lhs.true.172

land.lhs.true.172:                                ; preds = %if.then.169
  %85 = load i32, i32* %specbits, align 4
  %and173 = and i32 %85, 64
  %tobool174 = icmp ne i32 %and173, 0
  br i1 %tobool174, label %land.lhs.true.175, label %land.lhs.true.177

land.lhs.true.175:                                ; preds = %land.lhs.true.172
  %86 = load i32, i32* %initialized.addr, align 4
  %tobool176 = icmp ne i32 %86, 0
  br i1 %tobool176, label %if.end.195, label %land.lhs.true.177

land.lhs.true.177:                                ; preds = %land.lhs.true.175, %land.lhs.true.172
  %87 = load i32, i32* @in_system_header, align 4
  %tobool178 = icmp ne i32 %87, 0
  br i1 %tobool178, label %if.end.195, label %if.then.179

if.then.179:                                      ; preds = %land.lhs.true.177
  %88 = load i32, i32* @warn_implicit_int, align 4
  %tobool180 = icmp ne i32 %88, 0
  br i1 %tobool180, label %land.lhs.true.185, label %lor.lhs.false.181

lor.lhs.false.181:                                ; preds = %if.then.179
  %89 = load i32, i32* @warn_return_type, align 4
  %tobool182 = icmp ne i32 %89, 0
  br i1 %tobool182, label %land.lhs.true.185, label %lor.lhs.false.183

lor.lhs.false.183:                                ; preds = %lor.lhs.false.181
  %90 = load i32, i32* @flag_isoc99, align 4
  %tobool184 = icmp ne i32 %90, 0
  br i1 %tobool184, label %land.lhs.true.185, label %if.else.188

land.lhs.true.185:                                ; preds = %lor.lhs.false.183, %lor.lhs.false.181, %if.then.179
  %91 = load i32, i32* %funcdef_flag, align 4
  %tobool186 = icmp ne i32 %91, 0
  br i1 %tobool186, label %if.then.187, label %if.else.188

if.then.187:                                      ; preds = %land.lhs.true.185
  store i32 1, i32* @warn_about_return_type, align 4
  br label %if.end.194

if.else.188:                                      ; preds = %land.lhs.true.185, %lor.lhs.false.183
  %92 = load i32, i32* @warn_implicit_int, align 4
  %tobool189 = icmp ne i32 %92, 0
  br i1 %tobool189, label %if.then.192, label %lor.lhs.false.190

lor.lhs.false.190:                                ; preds = %if.else.188
  %93 = load i32, i32* @flag_isoc99, align 4
  %tobool191 = icmp ne i32 %93, 0
  br i1 %tobool191, label %if.then.192, label %if.end.193

if.then.192:                                      ; preds = %lor.lhs.false.190, %if.else.188
  %94 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn_c99(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.299, i32 0, i32 0), i8* %94)
  br label %if.end.193

if.end.193:                                       ; preds = %if.then.192, %lor.lhs.false.190
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.then.187
  br label %if.end.195

if.end.195:                                       ; preds = %if.end.194, %land.lhs.true.177, %land.lhs.true.175, %if.then.169
  store i32 1, i32* %defaulted_int, align 4
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %95, %union.tree_node** %type, align 8
  br label %if.end.196

if.end.196:                                       ; preds = %if.end.195, %if.end.166
  %96 = load i32, i32* %specbits, align 4
  %and197 = and i32 %96, 4
  %tobool198 = icmp ne i32 %and197, 0
  br i1 %tobool198, label %land.lhs.true.199, label %if.end.207

land.lhs.true.199:                                ; preds = %if.end.196
  %97 = load i32, i32* %longlong, align 4
  %tobool200 = icmp ne i32 %97, 0
  br i1 %tobool200, label %if.end.207, label %land.lhs.true.201

land.lhs.true.201:                                ; preds = %land.lhs.true.199
  %98 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type202 = bitcast %union.tree_node* %98 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type202, i32 0, i32 15
  %99 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %cmp203 = icmp eq %union.tree_node* %99, %100
  br i1 %cmp203, label %if.then.205, label %if.end.207

if.then.205:                                      ; preds = %land.lhs.true.201
  %101 = load i32, i32* %specbits, align 4
  %and206 = and i32 %101, -5
  store i32 %and206, i32* %specbits, align 4
  %102 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  store %union.tree_node* %102, %union.tree_node** %type, align 8
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.205, %land.lhs.true.201, %land.lhs.true.199, %if.end.196
  %103 = load i32, i32* %specbits, align 4
  %and208 = and i32 %103, 1158
  %tobool209 = icmp ne i32 %and208, 0
  br i1 %tobool209, label %if.then.210, label %if.end.282

if.then.210:                                      ; preds = %if.end.207
  store i32 0, i32* %ok, align 4
  %104 = load i32, i32* %specbits, align 4
  %and211 = and i32 %104, 4
  %tobool212 = icmp ne i32 %and211, 0
  br i1 %tobool212, label %land.lhs.true.213, label %if.else.217

land.lhs.true.213:                                ; preds = %if.then.210
  %105 = load i32, i32* %specbits, align 4
  %and214 = and i32 %105, 128
  %tobool215 = icmp ne i32 %and214, 0
  br i1 %tobool215, label %if.then.216, label %if.else.217

if.then.216:                                      ; preds = %land.lhs.true.213
  %106 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.300, i32 0, i32 0), i8* %106)
  br label %if.end.277

if.else.217:                                      ; preds = %land.lhs.true.213, %if.then.210
  %107 = load i32, i32* %specbits, align 4
  %and218 = and i32 %107, 4
  %tobool219 = icmp ne i32 %and218, 0
  br i1 %tobool219, label %land.lhs.true.223, label %lor.lhs.false.220

lor.lhs.false.220:                                ; preds = %if.else.217
  %108 = load i32, i32* %specbits, align 4
  %and221 = and i32 %108, 128
  %tobool222 = icmp ne i32 %and221, 0
  br i1 %tobool222, label %land.lhs.true.223, label %if.else.226

land.lhs.true.223:                                ; preds = %lor.lhs.false.220, %if.else.217
  %109 = load i32, i32* %explicit_char, align 4
  %tobool224 = icmp ne i32 %109, 0
  br i1 %tobool224, label %if.then.225, label %if.else.226

if.then.225:                                      ; preds = %land.lhs.true.223
  %110 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.301, i32 0, i32 0), i8* %110)
  br label %if.end.276

if.else.226:                                      ; preds = %land.lhs.true.223, %lor.lhs.false.220
  %111 = load i32, i32* %specbits, align 4
  %and227 = and i32 %111, 4
  %tobool228 = icmp ne i32 %and227, 0
  br i1 %tobool228, label %land.lhs.true.232, label %lor.lhs.false.229

lor.lhs.false.229:                                ; preds = %if.else.226
  %112 = load i32, i32* %specbits, align 4
  %and230 = and i32 %112, 128
  %tobool231 = icmp ne i32 %and230, 0
  br i1 %tobool231, label %land.lhs.true.232, label %if.else.245

land.lhs.true.232:                                ; preds = %lor.lhs.false.229, %if.else.226
  %113 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common233 = bitcast %union.tree_node* %113 to %struct.tree_common*
  %code234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common233, i32 0, i32 2
  %bf.load235 = load i32, i32* %code234, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 7
  br i1 %cmp237, label %if.then.239, label %if.else.245

if.then.239:                                      ; preds = %land.lhs.true.232
  %114 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.302, i32 0, i32 0), i8* %114)
  %115 = load i32, i32* @grokdeclarator.already, align 4
  %tobool240 = icmp ne i32 %115, 0
  br i1 %tobool240, label %if.end.244, label %land.lhs.true.241

land.lhs.true.241:                                ; preds = %if.then.239
  %116 = load i32, i32* @pedantic, align 4
  %tobool242 = icmp ne i32 %116, 0
  br i1 %tobool242, label %if.end.244, label %if.then.243

if.then.243:                                      ; preds = %land.lhs.true.241
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.303, i32 0, i32 0))
  store i32 1, i32* @grokdeclarator.already, align 4
  br label %if.end.244

if.end.244:                                       ; preds = %if.then.243, %land.lhs.true.241, %if.then.239
  br label %if.end.275

if.else.245:                                      ; preds = %land.lhs.true.232, %lor.lhs.false.229
  %117 = load i32, i32* %specbits, align 4
  %and246 = and i32 %117, 1024
  %tobool247 = icmp ne i32 %and246, 0
  br i1 %tobool247, label %land.lhs.true.248, label %if.else.252

land.lhs.true.248:                                ; preds = %if.else.245
  %118 = load i32, i32* %specbits, align 4
  %and249 = and i32 %118, 2
  %tobool250 = icmp ne i32 %and249, 0
  br i1 %tobool250, label %if.then.251, label %if.else.252

if.then.251:                                      ; preds = %land.lhs.true.248
  %119 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.304, i32 0, i32 0), i8* %119)
  br label %if.end.274

if.else.252:                                      ; preds = %land.lhs.true.248, %if.else.245
  %120 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common253 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %code254 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common253, i32 0, i32 2
  %bf.load255 = load i32, i32* %code254, align 8
  %bf.clear256 = and i32 %bf.load255, 255
  %cmp257 = icmp ne i32 %bf.clear256, 6
  br i1 %cmp257, label %if.then.259, label %if.else.260

if.then.259:                                      ; preds = %if.else.252
  %121 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.305, i32 0, i32 0), i8* %121)
  br label %if.end.273

if.else.260:                                      ; preds = %if.else.252
  store i32 1, i32* %ok, align 4
  %122 = load i32, i32* %explicit_int, align 4
  %tobool261 = icmp ne i32 %122, 0
  br i1 %tobool261, label %if.end.272, label %land.lhs.true.262

land.lhs.true.262:                                ; preds = %if.else.260
  %123 = load i32, i32* %defaulted_int, align 4
  %tobool263 = icmp ne i32 %123, 0
  br i1 %tobool263, label %if.end.272, label %land.lhs.true.264

land.lhs.true.264:                                ; preds = %land.lhs.true.262
  %124 = load i32, i32* %explicit_char, align 4
  %tobool265 = icmp ne i32 %124, 0
  br i1 %tobool265, label %if.end.272, label %land.lhs.true.266

land.lhs.true.266:                                ; preds = %land.lhs.true.264
  %125 = load i32, i32* @pedantic, align 4
  %tobool267 = icmp ne i32 %125, 0
  br i1 %tobool267, label %if.then.268, label %if.end.272

if.then.268:                                      ; preds = %land.lhs.true.266
  %126 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.306, i32 0, i32 0), i8* %126)
  %127 = load i32, i32* @flag_pedantic_errors, align 4
  %tobool269 = icmp ne i32 %127, 0
  br i1 %tobool269, label %if.then.270, label %if.end.271

if.then.270:                                      ; preds = %if.then.268
  store i32 0, i32* %ok, align 4
  br label %if.end.271

if.end.271:                                       ; preds = %if.then.270, %if.then.268
  br label %if.end.272

if.end.272:                                       ; preds = %if.end.271, %land.lhs.true.266, %land.lhs.true.264, %land.lhs.true.262, %if.else.260
  br label %if.end.273

if.end.273:                                       ; preds = %if.end.272, %if.then.259
  br label %if.end.274

if.end.274:                                       ; preds = %if.end.273, %if.then.251
  br label %if.end.275

if.end.275:                                       ; preds = %if.end.274, %if.end.244
  br label %if.end.276

if.end.276:                                       ; preds = %if.end.275, %if.then.225
  br label %if.end.277

if.end.277:                                       ; preds = %if.end.276, %if.then.216
  %128 = load i32, i32* %ok, align 4
  %tobool278 = icmp ne i32 %128, 0
  br i1 %tobool278, label %if.end.281, label %if.then.279

if.then.279:                                      ; preds = %if.end.277
  %129 = load i32, i32* %specbits, align 4
  %and280 = and i32 %129, -1159
  store i32 %and280, i32* %specbits, align 4
  store i32 0, i32* %longlong, align 4
  br label %if.end.281

if.end.281:                                       ; preds = %if.then.279, %if.end.277
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.281, %if.end.207
  %130 = load i32, i32* %specbits, align 4
  %and283 = and i32 %130, 32768
  %tobool284 = icmp ne i32 %and283, 0
  br i1 %tobool284, label %land.lhs.true.285, label %if.end.301

land.lhs.true.285:                                ; preds = %if.end.282
  %131 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common286 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %code287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common286, i32 0, i32 2
  %bf.load288 = load i32, i32* %code287, align 8
  %bf.clear289 = and i32 %bf.load288, 255
  %cmp290 = icmp ne i32 %bf.clear289, 6
  br i1 %cmp290, label %land.lhs.true.292, label %if.end.301

land.lhs.true.292:                                ; preds = %land.lhs.true.285
  %132 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common293 = bitcast %union.tree_node* %132 to %struct.tree_common*
  %code294 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common293, i32 0, i32 2
  %bf.load295 = load i32, i32* %code294, align 8
  %bf.clear296 = and i32 %bf.load295, 255
  %cmp297 = icmp ne i32 %bf.clear296, 7
  br i1 %cmp297, label %if.then.299, label %if.end.301

if.then.299:                                      ; preds = %land.lhs.true.292
  %133 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.307, i32 0, i32 0), i8* %133)
  %134 = load i32, i32* %specbits, align 4
  %and300 = and i32 %134, -32769
  store i32 %and300, i32* %specbits, align 4
  br label %if.end.301

if.end.301:                                       ; preds = %if.then.299, %land.lhs.true.292, %land.lhs.true.285, %if.end.282
  %135 = load i32, i32* %specbits, align 4
  %and302 = and i32 %135, 2
  %tobool303 = icmp ne i32 %and302, 0
  br i1 %tobool303, label %if.then.342, label %lor.lhs.false.304

lor.lhs.false.304:                                ; preds = %if.end.301
  %136 = load i32, i32* %bitfield, align 4
  %tobool305 = icmp ne i32 %136, 0
  br i1 %tobool305, label %land.lhs.true.306, label %lor.lhs.false.312

land.lhs.true.306:                                ; preds = %lor.lhs.false.304
  %137 = load i32, i32* @flag_traditional, align 4
  %tobool307 = icmp ne i32 %137, 0
  br i1 %tobool307, label %land.lhs.true.308, label %lor.lhs.false.312

land.lhs.true.308:                                ; preds = %land.lhs.true.306
  %138 = load i32, i32* @explicit_flag_signed_bitfields, align 4
  %tobool309 = icmp ne i32 %138, 0
  br i1 %tobool309, label %lor.lhs.false.310, label %if.then.342

lor.lhs.false.310:                                ; preds = %land.lhs.true.308
  %139 = load i32, i32* @flag_signed_bitfields, align 4
  %tobool311 = icmp ne i32 %139, 0
  br i1 %tobool311, label %lor.lhs.false.312, label %if.then.342

lor.lhs.false.312:                                ; preds = %lor.lhs.false.310, %land.lhs.true.306, %lor.lhs.false.304
  %140 = load i32, i32* %bitfield, align 4
  %tobool313 = icmp ne i32 %140, 0
  br i1 %tobool313, label %land.lhs.true.314, label %if.else.367

land.lhs.true.314:                                ; preds = %lor.lhs.false.312
  %141 = load i32, i32* @flag_signed_bitfields, align 4
  %tobool315 = icmp ne i32 %141, 0
  br i1 %tobool315, label %if.else.367, label %land.lhs.true.316

land.lhs.true.316:                                ; preds = %land.lhs.true.314
  %142 = load i32, i32* %explicit_int, align 4
  %tobool317 = icmp ne i32 %142, 0
  br i1 %tobool317, label %land.lhs.true.332, label %lor.lhs.false.318

lor.lhs.false.318:                                ; preds = %land.lhs.true.316
  %143 = load i32, i32* %defaulted_int, align 4
  %tobool319 = icmp ne i32 %143, 0
  br i1 %tobool319, label %land.lhs.true.332, label %lor.lhs.false.320

lor.lhs.false.320:                                ; preds = %lor.lhs.false.318
  %144 = load i32, i32* %explicit_char, align 4
  %tobool321 = icmp ne i32 %144, 0
  br i1 %tobool321, label %land.lhs.true.332, label %lor.lhs.false.322

lor.lhs.false.322:                                ; preds = %lor.lhs.false.320
  %145 = load %union.tree_node*, %union.tree_node** %typedef_decl, align 8
  %cmp323 = icmp ne %union.tree_node* %145, null
  br i1 %cmp323, label %land.lhs.true.325, label %land.lhs.true.332

land.lhs.true.325:                                ; preds = %lor.lhs.false.322
  %146 = load %union.tree_node*, %union.tree_node** %typedef_decl, align 8
  %decl326 = bitcast %union.tree_node* %146 to %struct.tree_decl*
  %lang_flag_1327 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl326, i32 0, i32 5
  %147 = bitcast i48* %lang_flag_1327 to i64*
  %bf.load328 = load i64, i64* %147, align 8
  %bf.lshr329 = lshr i64 %bf.load328, 38
  %bf.clear330 = and i64 %bf.lshr329, 1
  %bf.cast = trunc i64 %bf.clear330 to i32
  %tobool331 = icmp ne i32 %bf.cast, 0
  br i1 %tobool331, label %if.else.367, label %land.lhs.true.332

land.lhs.true.332:                                ; preds = %land.lhs.true.325, %lor.lhs.false.322, %lor.lhs.false.320, %lor.lhs.false.318, %land.lhs.true.316
  %148 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common333 = bitcast %union.tree_node* %148 to %struct.tree_common*
  %code334 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common333, i32 0, i32 2
  %bf.load335 = load i32, i32* %code334, align 8
  %bf.clear336 = and i32 %bf.load335, 255
  %cmp337 = icmp ne i32 %bf.clear336, 10
  br i1 %cmp337, label %land.lhs.true.339, label %if.else.367

land.lhs.true.339:                                ; preds = %land.lhs.true.332
  %149 = load i32, i32* %specbits, align 4
  %and340 = and i32 %149, 1024
  %tobool341 = icmp ne i32 %and340, 0
  br i1 %tobool341, label %if.else.367, label %if.then.342

if.then.342:                                      ; preds = %land.lhs.true.339, %lor.lhs.false.310, %land.lhs.true.308, %if.end.301
  %150 = load i32, i32* %longlong, align 4
  %tobool343 = icmp ne i32 %150, 0
  br i1 %tobool343, label %if.then.344, label %if.else.345

if.then.344:                                      ; preds = %if.then.342
  %151 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 10), align 8
  store %union.tree_node* %151, %union.tree_node** %type, align 8
  br label %if.end.366

if.else.345:                                      ; preds = %if.then.342
  %152 = load i32, i32* %specbits, align 4
  %and346 = and i32 %152, 4
  %tobool347 = icmp ne i32 %and346, 0
  br i1 %tobool347, label %if.then.348, label %if.else.349

if.then.348:                                      ; preds = %if.else.345
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 8), align 8
  store %union.tree_node* %153, %union.tree_node** %type, align 8
  br label %if.end.365

if.else.349:                                      ; preds = %if.else.345
  %154 = load i32, i32* %specbits, align 4
  %and350 = and i32 %154, 128
  %tobool351 = icmp ne i32 %and350, 0
  br i1 %tobool351, label %if.then.352, label %if.else.353

if.then.352:                                      ; preds = %if.else.349
  %155 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 4), align 8
  store %union.tree_node* %155, %union.tree_node** %type, align 8
  br label %if.end.364

if.else.353:                                      ; preds = %if.else.349
  %156 = load %union.tree_node*, %union.tree_node** %type, align 8
  %157 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp354 = icmp eq %union.tree_node* %156, %157
  br i1 %cmp354, label %if.then.356, label %if.else.357

if.then.356:                                      ; preds = %if.else.353
  %158 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 2), align 8
  store %union.tree_node* %158, %union.tree_node** %type, align 8
  br label %if.end.363

if.else.357:                                      ; preds = %if.else.353
  %159 = load %union.tree_node*, %union.tree_node** %typedef_decl, align 8
  %tobool358 = icmp ne %union.tree_node* %159, null
  br i1 %tobool358, label %if.then.359, label %if.else.361

if.then.359:                                      ; preds = %if.else.357
  %160 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call360 = call %union.tree_node* @unsigned_type(%union.tree_node* %160)
  store %union.tree_node* %call360, %union.tree_node** %type, align 8
  br label %if.end.362

if.else.361:                                      ; preds = %if.else.357
  %161 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  store %union.tree_node* %161, %union.tree_node** %type, align 8
  br label %if.end.362

if.end.362:                                       ; preds = %if.else.361, %if.then.359
  br label %if.end.363

if.end.363:                                       ; preds = %if.end.362, %if.then.356
  br label %if.end.364

if.end.364:                                       ; preds = %if.end.363, %if.then.352
  br label %if.end.365

if.end.365:                                       ; preds = %if.end.364, %if.then.348
  br label %if.end.366

if.end.366:                                       ; preds = %if.end.365, %if.then.344
  br label %if.end.389

if.else.367:                                      ; preds = %land.lhs.true.339, %land.lhs.true.332, %land.lhs.true.325, %land.lhs.true.314, %lor.lhs.false.312
  %162 = load i32, i32* %specbits, align 4
  %and368 = and i32 %162, 1024
  %tobool369 = icmp ne i32 %and368, 0
  br i1 %tobool369, label %land.lhs.true.370, label %if.else.374

land.lhs.true.370:                                ; preds = %if.else.367
  %163 = load %union.tree_node*, %union.tree_node** %type, align 8
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp371 = icmp eq %union.tree_node* %163, %164
  br i1 %cmp371, label %if.then.373, label %if.else.374

if.then.373:                                      ; preds = %land.lhs.true.370
  %165 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 1), align 8
  store %union.tree_node* %165, %union.tree_node** %type, align 8
  br label %if.end.388

if.else.374:                                      ; preds = %land.lhs.true.370, %if.else.367
  %166 = load i32, i32* %longlong, align 4
  %tobool375 = icmp ne i32 %166, 0
  br i1 %tobool375, label %if.then.376, label %if.else.377

if.then.376:                                      ; preds = %if.else.374
  %167 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  store %union.tree_node* %167, %union.tree_node** %type, align 8
  br label %if.end.387

if.else.377:                                      ; preds = %if.else.374
  %168 = load i32, i32* %specbits, align 4
  %and378 = and i32 %168, 4
  %tobool379 = icmp ne i32 %and378, 0
  br i1 %tobool379, label %if.then.380, label %if.else.381

if.then.380:                                      ; preds = %if.else.377
  %169 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 7), align 8
  store %union.tree_node* %169, %union.tree_node** %type, align 8
  br label %if.end.386

if.else.381:                                      ; preds = %if.else.377
  %170 = load i32, i32* %specbits, align 4
  %and382 = and i32 %170, 128
  %tobool383 = icmp ne i32 %and382, 0
  br i1 %tobool383, label %if.then.384, label %if.end.385

if.then.384:                                      ; preds = %if.else.381
  %171 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 3), align 8
  store %union.tree_node* %171, %union.tree_node** %type, align 8
  br label %if.end.385

if.end.385:                                       ; preds = %if.then.384, %if.else.381
  br label %if.end.386

if.end.386:                                       ; preds = %if.end.385, %if.then.380
  br label %if.end.387

if.end.387:                                       ; preds = %if.end.386, %if.then.376
  br label %if.end.388

if.end.388:                                       ; preds = %if.end.387, %if.then.373
  br label %if.end.389

if.end.389:                                       ; preds = %if.end.388, %if.end.366
  %172 = load i32, i32* %specbits, align 4
  %and390 = and i32 %172, 32768
  %tobool391 = icmp ne i32 %and390, 0
  br i1 %tobool391, label %if.then.392, label %if.end.437

if.then.392:                                      ; preds = %if.end.389
  %173 = load i32, i32* @pedantic, align 4
  %tobool393 = icmp ne i32 %173, 0
  br i1 %tobool393, label %land.lhs.true.394, label %if.end.397

land.lhs.true.394:                                ; preds = %if.then.392
  %174 = load i32, i32* @flag_isoc99, align 4
  %tobool395 = icmp ne i32 %174, 0
  br i1 %tobool395, label %if.end.397, label %if.then.396

if.then.396:                                      ; preds = %land.lhs.true.394
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.308, i32 0, i32 0))
  br label %if.end.397

if.end.397:                                       ; preds = %if.then.396, %land.lhs.true.394, %if.then.392
  %175 = load i32, i32* %defaulted_int, align 4
  %tobool398 = icmp ne i32 %175, 0
  br i1 %tobool398, label %land.lhs.true.399, label %if.else.408

land.lhs.true.399:                                ; preds = %if.end.397
  %176 = load i32, i32* %longlong, align 4
  %tobool400 = icmp ne i32 %176, 0
  br i1 %tobool400, label %if.else.408, label %land.lhs.true.401

land.lhs.true.401:                                ; preds = %land.lhs.true.399
  %177 = load i32, i32* %specbits, align 4
  %and402 = and i32 %177, 1158
  %tobool403 = icmp ne i32 %and402, 0
  br i1 %tobool403, label %if.else.408, label %if.then.404

if.then.404:                                      ; preds = %land.lhs.true.401
  %178 = load i32, i32* @pedantic, align 4
  %tobool405 = icmp ne i32 %178, 0
  br i1 %tobool405, label %if.then.406, label %if.end.407

if.then.406:                                      ; preds = %if.then.404
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.309, i32 0, i32 0))
  br label %if.end.407

if.end.407:                                       ; preds = %if.then.406, %if.then.404
  %179 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 22), align 8
  store %union.tree_node* %179, %union.tree_node** %type, align 8
  br label %if.end.436

if.else.408:                                      ; preds = %land.lhs.true.401, %land.lhs.true.399, %if.end.397
  %180 = load %union.tree_node*, %union.tree_node** %type, align 8
  %181 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp409 = icmp eq %union.tree_node* %180, %181
  br i1 %cmp409, label %if.then.411, label %if.else.415

if.then.411:                                      ; preds = %if.else.408
  %182 = load i32, i32* @pedantic, align 4
  %tobool412 = icmp ne i32 %182, 0
  br i1 %tobool412, label %if.then.413, label %if.end.414

if.then.413:                                      ; preds = %if.then.411
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.310, i32 0, i32 0))
  br label %if.end.414

if.end.414:                                       ; preds = %if.then.413, %if.then.411
  %183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 20), align 8
  store %union.tree_node* %183, %union.tree_node** %type, align 8
  br label %if.end.435

if.else.415:                                      ; preds = %if.else.408
  %184 = load %union.tree_node*, %union.tree_node** %type, align 8
  %185 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp416 = icmp eq %union.tree_node* %184, %185
  br i1 %cmp416, label %if.then.418, label %if.else.419

if.then.418:                                      ; preds = %if.else.415
  %186 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 21), align 8
  store %union.tree_node* %186, %union.tree_node** %type, align 8
  br label %if.end.434

if.else.419:                                      ; preds = %if.else.415
  %187 = load %union.tree_node*, %union.tree_node** %type, align 8
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %cmp420 = icmp eq %union.tree_node* %187, %188
  br i1 %cmp420, label %if.then.422, label %if.else.423

if.then.422:                                      ; preds = %if.else.419
  %189 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 22), align 8
  store %union.tree_node* %189, %union.tree_node** %type, align 8
  br label %if.end.433

if.else.423:                                      ; preds = %if.else.419
  %190 = load %union.tree_node*, %union.tree_node** %type, align 8
  %191 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 26), align 8
  %cmp424 = icmp eq %union.tree_node* %190, %191
  br i1 %cmp424, label %if.then.426, label %if.else.427

if.then.426:                                      ; preds = %if.else.423
  %192 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 23), align 8
  store %union.tree_node* %192, %union.tree_node** %type, align 8
  br label %if.end.432

if.else.427:                                      ; preds = %if.else.423
  %193 = load i32, i32* @pedantic, align 4
  %tobool428 = icmp ne i32 %193, 0
  br i1 %tobool428, label %if.then.429, label %if.end.430

if.then.429:                                      ; preds = %if.else.427
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.310, i32 0, i32 0))
  br label %if.end.430

if.end.430:                                       ; preds = %if.then.429, %if.else.427
  %194 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call431 = call %union.tree_node* @build_complex_type(%union.tree_node* %194)
  store %union.tree_node* %call431, %union.tree_node** %type, align 8
  br label %if.end.432

if.end.432:                                       ; preds = %if.end.430, %if.then.426
  br label %if.end.433

if.end.433:                                       ; preds = %if.end.432, %if.then.422
  br label %if.end.434

if.end.434:                                       ; preds = %if.end.433, %if.then.418
  br label %if.end.435

if.end.435:                                       ; preds = %if.end.434, %if.end.414
  br label %if.end.436

if.end.436:                                       ; preds = %if.end.435, %if.end.407
  br label %if.end.437

if.end.437:                                       ; preds = %if.end.436, %if.end.389
  %195 = load i32, i32* %specbits, align 4
  %and438 = and i32 %195, 8
  %tobool439 = icmp ne i32 %and438, 0
  %lnot = xor i1 %tobool439, true
  %lnot440 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot440 to i32
  %196 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common441 = bitcast %union.tree_node* %196 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common441, i32 0, i32 2
  %bf.load442 = load i32, i32* %readonly_flag, align 8
  %bf.lshr443 = lshr i32 %bf.load442, 12
  %bf.clear444 = and i32 %bf.lshr443, 1
  %add = add nsw i32 %lnot.ext, %bf.clear444
  store i32 %add, i32* %constp, align 4
  %197 = load i32, i32* %specbits, align 4
  %and445 = and i32 %197, 4096
  %tobool446 = icmp ne i32 %and445, 0
  %lnot447 = xor i1 %tobool446, true
  %lnot449 = xor i1 %lnot447, true
  %lnot.ext450 = zext i1 %lnot449 to i32
  %198 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type451 = bitcast %union.tree_node* %198 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type451, i32 0, i32 6
  %bf.load452 = load i32, i32* %restrict_flag, align 4
  %bf.lshr453 = lshr i32 %bf.load452, 21
  %bf.clear454 = and i32 %bf.lshr453, 1
  %add455 = add nsw i32 %lnot.ext450, %bf.clear454
  store i32 %add455, i32* %restrictp, align 4
  %199 = load i32, i32* %specbits, align 4
  %and456 = and i32 %199, 512
  %tobool457 = icmp ne i32 %and456, 0
  %lnot458 = xor i1 %tobool457, true
  %lnot460 = xor i1 %lnot458, true
  %lnot.ext461 = zext i1 %lnot460 to i32
  %200 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common462 = bitcast %union.tree_node* %200 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common462, i32 0, i32 2
  %bf.load463 = load i32, i32* %volatile_flag, align 8
  %bf.lshr464 = lshr i32 %bf.load463, 11
  %bf.clear465 = and i32 %bf.lshr464, 1
  %add466 = add nsw i32 %lnot.ext461, %bf.clear465
  store i32 %add466, i32* %volatilep, align 4
  %201 = load i32, i32* %specbits, align 4
  %and467 = and i32 %201, 256
  %tobool468 = icmp ne i32 %and467, 0
  %lnot469 = xor i1 %tobool468, true
  %lnot471 = xor i1 %lnot469, true
  %lnot.ext472 = zext i1 %lnot471 to i32
  store i32 %lnot.ext472, i32* %inlinep, align 4
  %202 = load i32, i32* %constp, align 4
  %cmp473 = icmp sgt i32 %202, 1
  br i1 %cmp473, label %land.lhs.true.475, label %if.end.478

land.lhs.true.475:                                ; preds = %if.end.437
  %203 = load i32, i32* @flag_isoc99, align 4
  %tobool476 = icmp ne i32 %203, 0
  br i1 %tobool476, label %if.end.478, label %if.then.477

if.then.477:                                      ; preds = %land.lhs.true.475
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.311, i32 0, i32 0))
  br label %if.end.478

if.end.478:                                       ; preds = %if.then.477, %land.lhs.true.475, %if.end.437
  %204 = load i32, i32* %restrictp, align 4
  %cmp479 = icmp sgt i32 %204, 1
  br i1 %cmp479, label %land.lhs.true.481, label %if.end.484

land.lhs.true.481:                                ; preds = %if.end.478
  %205 = load i32, i32* @flag_isoc99, align 4
  %tobool482 = icmp ne i32 %205, 0
  br i1 %tobool482, label %if.end.484, label %if.then.483

if.then.483:                                      ; preds = %land.lhs.true.481
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.312, i32 0, i32 0))
  br label %if.end.484

if.end.484:                                       ; preds = %if.then.483, %land.lhs.true.481, %if.end.478
  %206 = load i32, i32* %volatilep, align 4
  %cmp485 = icmp sgt i32 %206, 1
  br i1 %cmp485, label %land.lhs.true.487, label %if.end.490

land.lhs.true.487:                                ; preds = %if.end.484
  %207 = load i32, i32* @flag_isoc99, align 4
  %tobool488 = icmp ne i32 %207, 0
  br i1 %tobool488, label %if.end.490, label %if.then.489

if.then.489:                                      ; preds = %land.lhs.true.487
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.313, i32 0, i32 0))
  br label %if.end.490

if.end.490:                                       ; preds = %if.then.489, %land.lhs.true.487, %if.end.484
  %208 = load i32, i32* @flag_gen_aux_info, align 4
  %tobool491 = icmp ne i32 %208, 0
  br i1 %tobool491, label %if.end.527, label %land.lhs.true.492

land.lhs.true.492:                                ; preds = %if.end.490
  %209 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common493 = bitcast %union.tree_node* %209 to %struct.tree_common*
  %readonly_flag494 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common493, i32 0, i32 2
  %bf.load495 = load i32, i32* %readonly_flag494, align 8
  %bf.lshr496 = lshr i32 %bf.load495, 12
  %bf.clear497 = and i32 %bf.lshr496, 1
  %mul = mul nsw i32 %bf.clear497, 1
  %210 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common498 = bitcast %union.tree_node* %210 to %struct.tree_common*
  %volatile_flag499 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common498, i32 0, i32 2
  %bf.load500 = load i32, i32* %volatile_flag499, align 8
  %bf.lshr501 = lshr i32 %bf.load500, 11
  %bf.clear502 = and i32 %bf.lshr501, 1
  %mul503 = mul nsw i32 %bf.clear502, 2
  %or504 = or i32 %mul, %mul503
  %211 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type505 = bitcast %union.tree_node* %211 to %struct.tree_type*
  %restrict_flag506 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type505, i32 0, i32 6
  %bf.load507 = load i32, i32* %restrict_flag506, align 4
  %bf.lshr508 = lshr i32 %bf.load507, 21
  %bf.clear509 = and i32 %bf.lshr508, 1
  %mul510 = mul nsw i32 %bf.clear509, 4
  %or511 = or i32 %or504, %mul510
  %212 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common512 = bitcast %union.tree_node* %212 to %struct.tree_common*
  %code513 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common512, i32 0, i32 2
  %bf.load514 = load i32, i32* %code513, align 8
  %bf.clear515 = and i32 %bf.load514, 255
  %cmp516 = icmp eq i32 %bf.clear515, 20
  br i1 %cmp516, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.492
  %213 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common518 = bitcast %union.tree_node* %213 to %struct.tree_common*
  %type519 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common518, i32 0, i32 1
  %214 = load %union.tree_node*, %union.tree_node** %type519, align 8
  %tobool520 = icmp ne %union.tree_node* %214, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.492
  %215 = phi i1 [ false, %land.lhs.true.492 ], [ %tobool520, %land.rhs ]
  %land.ext = zext i1 %215 to i32
  %mul521 = mul nsw i32 %land.ext, 8
  %or522 = or i32 %or511, %mul521
  %tobool523 = icmp ne i32 %or522, 0
  br i1 %tobool523, label %if.then.524, label %if.end.527

if.then.524:                                      ; preds = %land.end
  %216 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type525 = bitcast %union.tree_node* %216 to %struct.tree_type*
  %main_variant526 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type525, i32 0, i32 15
  %217 = load %union.tree_node*, %union.tree_node** %main_variant526, align 8
  store %union.tree_node* %217, %union.tree_node** %type, align 8
  br label %if.end.527

if.end.527:                                       ; preds = %if.then.524, %land.end, %if.end.490
  %218 = load i32, i32* %constp, align 4
  %tobool528 = icmp ne i32 %218, 0
  %cond = select i1 %tobool528, i32 1, i32 0
  %219 = load i32, i32* %restrictp, align 4
  %tobool529 = icmp ne i32 %219, 0
  %cond530 = select i1 %tobool529, i32 4, i32 0
  %or531 = or i32 %cond, %cond530
  %220 = load i32, i32* %volatilep, align 4
  %tobool532 = icmp ne i32 %220, 0
  %cond533 = select i1 %tobool532, i32 2, i32 0
  %or534 = or i32 %or531, %cond533
  store i32 %or534, i32* %type_quals, align 4
  store i32 0, i32* %nclasses, align 4
  %221 = load i32, i32* %specbits, align 4
  %and535 = and i32 %221, 2048
  %tobool536 = icmp ne i32 %and535, 0
  br i1 %tobool536, label %if.then.537, label %if.end.538

if.then.537:                                      ; preds = %if.end.527
  %222 = load i32, i32* %nclasses, align 4
  %inc = add nsw i32 %222, 1
  store i32 %inc, i32* %nclasses, align 4
  br label %if.end.538

if.end.538:                                       ; preds = %if.then.537, %if.end.527
  %223 = load i32, i32* %specbits, align 4
  %and539 = and i32 %223, 1
  %tobool540 = icmp ne i32 %and539, 0
  br i1 %tobool540, label %if.then.541, label %if.end.543

if.then.541:                                      ; preds = %if.end.538
  %224 = load i32, i32* %nclasses, align 4
  %inc542 = add nsw i32 %224, 1
  store i32 %inc542, i32* %nclasses, align 4
  br label %if.end.543

if.end.543:                                       ; preds = %if.then.541, %if.end.538
  %225 = load i32, i32* %specbits, align 4
  %and544 = and i32 %225, 16
  %tobool545 = icmp ne i32 %and544, 0
  br i1 %tobool545, label %if.then.546, label %if.end.548

if.then.546:                                      ; preds = %if.end.543
  %226 = load i32, i32* %nclasses, align 4
  %inc547 = add nsw i32 %226, 1
  store i32 %inc547, i32* %nclasses, align 4
  br label %if.end.548

if.end.548:                                       ; preds = %if.then.546, %if.end.543
  %227 = load i32, i32* %specbits, align 4
  %and549 = and i32 %227, 32
  %tobool550 = icmp ne i32 %and549, 0
  br i1 %tobool550, label %if.then.551, label %if.end.553

if.then.551:                                      ; preds = %if.end.548
  %228 = load i32, i32* %nclasses, align 4
  %inc552 = add nsw i32 %228, 1
  store i32 %inc552, i32* %nclasses, align 4
  br label %if.end.553

if.end.553:                                       ; preds = %if.then.551, %if.end.548
  %229 = load i32, i32* %specbits, align 4
  %and554 = and i32 %229, 64
  %tobool555 = icmp ne i32 %and554, 0
  br i1 %tobool555, label %if.then.556, label %if.end.558

if.then.556:                                      ; preds = %if.end.553
  %230 = load i32, i32* %nclasses, align 4
  %inc557 = add nsw i32 %230, 1
  store i32 %inc557, i32* %nclasses, align 4
  br label %if.end.558

if.end.558:                                       ; preds = %if.then.556, %if.end.553
  %231 = load i32, i32* %nclasses, align 4
  %cmp559 = icmp sgt i32 %231, 1
  br i1 %cmp559, label %if.then.561, label %if.else.562

if.then.561:                                      ; preds = %if.end.558
  %232 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.314, i32 0, i32 0), i8* %232)
  br label %if.end.640

if.else.562:                                      ; preds = %if.end.558
  %233 = load i32, i32* %funcdef_flag, align 4
  %tobool563 = icmp ne i32 %233, 0
  br i1 %tobool563, label %land.lhs.true.564, label %if.else.586

land.lhs.true.564:                                ; preds = %if.else.562
  %234 = load i32, i32* %specbits, align 4
  %and565 = and i32 %234, 2144
  %tobool566 = icmp ne i32 %and565, 0
  br i1 %tobool566, label %if.then.567, label %if.else.586

if.then.567:                                      ; preds = %land.lhs.true.564
  %235 = load i32, i32* %specbits, align 4
  %and568 = and i32 %235, 2048
  %tobool569 = icmp ne i32 %and568, 0
  br i1 %tobool569, label %land.lhs.true.570, label %if.end.576

land.lhs.true.570:                                ; preds = %if.then.567
  %236 = load i32, i32* @pedantic, align 4
  %tobool571 = icmp ne i32 %236, 0
  br i1 %tobool571, label %if.then.575, label %lor.lhs.false.572

lor.lhs.false.572:                                ; preds = %land.lhs.true.570
  %237 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %238 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp573 = icmp eq %struct.binding_level* %237, %238
  br i1 %cmp573, label %if.then.575, label %if.end.576

if.then.575:                                      ; preds = %lor.lhs.false.572, %land.lhs.true.570
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.315, i32 0, i32 0))
  br label %if.end.576

if.end.576:                                       ; preds = %if.then.575, %lor.lhs.false.572, %if.then.567
  %239 = load i32, i32* %specbits, align 4
  %and577 = and i32 %239, 32
  %tobool578 = icmp ne i32 %and577, 0
  br i1 %tobool578, label %if.then.579, label %if.end.580

if.then.579:                                      ; preds = %if.end.576
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.316, i32 0, i32 0))
  br label %if.end.580

if.end.580:                                       ; preds = %if.then.579, %if.end.576
  %240 = load i32, i32* %specbits, align 4
  %and581 = and i32 %240, 64
  %tobool582 = icmp ne i32 %and581, 0
  br i1 %tobool582, label %if.then.583, label %if.end.584

if.then.583:                                      ; preds = %if.end.580
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.317, i32 0, i32 0))
  br label %if.end.584

if.end.584:                                       ; preds = %if.then.583, %if.end.580
  %241 = load i32, i32* %specbits, align 4
  %and585 = and i32 %241, -2145
  store i32 %and585, i32* %specbits, align 4
  br label %if.end.639

if.else.586:                                      ; preds = %land.lhs.true.564, %if.else.562
  %242 = load i32, i32* %decl_context.addr, align 4
  %cmp587 = icmp ne i32 %242, 0
  br i1 %cmp587, label %land.lhs.true.589, label %if.else.606

land.lhs.true.589:                                ; preds = %if.else.586
  %243 = load i32, i32* %nclasses, align 4
  %cmp590 = icmp sgt i32 %243, 0
  br i1 %cmp590, label %if.then.592, label %if.else.606

if.then.592:                                      ; preds = %land.lhs.true.589
  %244 = load i32, i32* %decl_context.addr, align 4
  %cmp593 = icmp eq i32 %244, 2
  br i1 %cmp593, label %land.lhs.true.595, label %if.else.599

land.lhs.true.595:                                ; preds = %if.then.592
  %245 = load i32, i32* %specbits, align 4
  %and596 = and i32 %245, 32
  %tobool597 = icmp ne i32 %and596, 0
  br i1 %tobool597, label %if.then.598, label %if.else.599

if.then.598:                                      ; preds = %land.lhs.true.595
  br label %if.end.605

if.else.599:                                      ; preds = %land.lhs.true.595, %if.then.592
  %246 = load i32, i32* %decl_context.addr, align 4
  switch i32 %246, label %sw.default.602 [
    i32 3, label %sw.bb.600
    i32 2, label %sw.bb.601
  ]

sw.bb.600:                                        ; preds = %if.else.599
  %247 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.318, i32 0, i32 0), i8* %247)
  br label %sw.epilog.603

sw.bb.601:                                        ; preds = %if.else.599
  %248 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.319, i32 0, i32 0), i8* %248)
  br label %sw.epilog.603

sw.default.602:                                   ; preds = %if.else.599
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.320, i32 0, i32 0))
  br label %sw.epilog.603

sw.epilog.603:                                    ; preds = %sw.default.602, %sw.bb.601, %sw.bb.600
  %249 = load i32, i32* %specbits, align 4
  %and604 = and i32 %249, -2162
  store i32 %and604, i32* %specbits, align 4
  br label %if.end.605

if.end.605:                                       ; preds = %sw.epilog.603, %if.then.598
  br label %if.end.638

if.else.606:                                      ; preds = %land.lhs.true.589, %if.else.586
  %250 = load i32, i32* %specbits, align 4
  %and607 = and i32 %250, 16
  %tobool608 = icmp ne i32 %and607, 0
  br i1 %tobool608, label %land.lhs.true.609, label %if.else.619

land.lhs.true.609:                                ; preds = %if.else.606
  %251 = load i32, i32* %initialized.addr, align 4
  %tobool610 = icmp ne i32 %251, 0
  br i1 %tobool610, label %land.lhs.true.611, label %if.else.619

land.lhs.true.611:                                ; preds = %land.lhs.true.609
  %252 = load i32, i32* %funcdef_flag, align 4
  %tobool612 = icmp ne i32 %252, 0
  br i1 %tobool612, label %if.else.619, label %if.then.613

if.then.613:                                      ; preds = %land.lhs.true.611
  %253 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %254 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp614 = icmp eq %struct.binding_level* %253, %254
  br i1 %cmp614, label %if.then.616, label %if.else.617

if.then.616:                                      ; preds = %if.then.613
  %255 = load i8*, i8** %name, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.321, i32 0, i32 0), i8* %255)
  br label %if.end.618

if.else.617:                                      ; preds = %if.then.613
  %256 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.322, i32 0, i32 0), i8* %256)
  br label %if.end.618

if.end.618:                                       ; preds = %if.else.617, %if.then.616
  br label %if.end.637

if.else.619:                                      ; preds = %land.lhs.true.611, %land.lhs.true.609, %if.else.606
  %257 = load i32, i32* %specbits, align 4
  %and620 = and i32 %257, 16
  %tobool621 = icmp ne i32 %and620, 0
  br i1 %tobool621, label %land.lhs.true.622, label %if.else.628

land.lhs.true.622:                                ; preds = %if.else.619
  %258 = load i32, i32* %funcdef_flag, align 4
  %tobool623 = icmp ne i32 %258, 0
  br i1 %tobool623, label %land.lhs.true.624, label %if.else.628

land.lhs.true.624:                                ; preds = %land.lhs.true.622
  %259 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %260 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp625 = icmp ne %struct.binding_level* %259, %260
  br i1 %cmp625, label %if.then.627, label %if.else.628

if.then.627:                                      ; preds = %land.lhs.true.624
  %261 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.323, i32 0, i32 0), i8* %261)
  br label %if.end.636

if.else.628:                                      ; preds = %land.lhs.true.624, %land.lhs.true.622, %if.else.619
  %262 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %263 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp629 = icmp eq %struct.binding_level* %262, %263
  br i1 %cmp629, label %land.lhs.true.631, label %if.end.635

land.lhs.true.631:                                ; preds = %if.else.628
  %264 = load i32, i32* %specbits, align 4
  %and632 = and i32 %264, 2048
  %tobool633 = icmp ne i32 %and632, 0
  br i1 %tobool633, label %if.then.634, label %if.end.635

if.then.634:                                      ; preds = %land.lhs.true.631
  %265 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.324, i32 0, i32 0), i8* %265)
  br label %if.end.635

if.end.635:                                       ; preds = %if.then.634, %land.lhs.true.631, %if.else.628
  br label %if.end.636

if.end.636:                                       ; preds = %if.end.635, %if.then.627
  br label %if.end.637

if.end.637:                                       ; preds = %if.end.636, %if.end.618
  br label %if.end.638

if.end.638:                                       ; preds = %if.end.637, %if.end.605
  br label %if.end.639

if.end.639:                                       ; preds = %if.end.638, %if.end.584
  br label %if.end.640

if.end.640:                                       ; preds = %if.end.639, %if.then.561
  br label %while.cond.641

while.cond.641:                                   ; preds = %if.end.1173, %if.then.971, %if.then.901, %if.then.769, %if.then.655, %if.end.640
  %266 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %tobool642 = icmp ne %union.tree_node* %266, null
  br i1 %tobool642, label %land.rhs.643, label %land.end.650

land.rhs.643:                                     ; preds = %while.cond.641
  %267 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common644 = bitcast %union.tree_node* %267 to %struct.tree_common*
  %code645 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common644, i32 0, i32 2
  %bf.load646 = load i32, i32* %code645, align 8
  %bf.clear647 = and i32 %bf.load646, 255
  %cmp648 = icmp ne i32 %bf.clear647, 1
  br label %land.end.650

land.end.650:                                     ; preds = %land.rhs.643, %while.cond.641
  %268 = phi i1 [ false, %while.cond.641 ], [ %cmp648, %land.rhs.643 ]
  br i1 %268, label %while.body.652, label %while.end.1174

while.body.652:                                   ; preds = %land.end.650
  %269 = load %union.tree_node*, %union.tree_node** %type, align 8
  %270 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp653 = icmp eq %union.tree_node* %269, %270
  br i1 %cmp653, label %if.then.655, label %if.end.659

if.then.655:                                      ; preds = %while.body.652
  %271 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp656 = bitcast %union.tree_node* %271 to %struct.tree_exp*
  %operands657 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp656, i32 0, i32 2
  %arrayidx658 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands657, i32 0, i64 0
  %272 = load %union.tree_node*, %union.tree_node** %arrayidx658, align 8
  store %union.tree_node* %272, %union.tree_node** %declarator.addr, align 8
  br label %while.cond.641

if.end.659:                                       ; preds = %while.body.652
  %273 = load %union.tree_node*, %union.tree_node** %array_ptr_quals, align 8
  %cmp660 = icmp ne %union.tree_node* %273, null
  br i1 %cmp660, label %if.then.664, label %lor.lhs.false.662

lor.lhs.false.662:                                ; preds = %if.end.659
  %274 = load i32, i32* %array_parm_static, align 4
  %tobool663 = icmp ne i32 %274, 0
  br i1 %tobool663, label %if.then.664, label %if.end.665

if.then.664:                                      ; preds = %lor.lhs.false.662, %if.end.659
  call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.325, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %array_ptr_quals, align 8
  store i32 0, i32* %array_parm_static, align 4
  br label %if.end.665

if.end.665:                                       ; preds = %if.then.664, %lor.lhs.false.662
  %275 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common666 = bitcast %union.tree_node* %275 to %struct.tree_common*
  %code667 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common666, i32 0, i32 2
  %bf.load668 = load i32, i32* %code667, align 8
  %bf.clear669 = and i32 %bf.load668, 255
  %cmp670 = icmp eq i32 %bf.clear669, 2
  br i1 %cmp670, label %if.then.672, label %if.else.726

if.then.672:                                      ; preds = %if.end.665
  %276 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %list673 = bitcast %union.tree_node* %276 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list673, i32 0, i32 1
  %277 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  store %union.tree_node* %277, %union.tree_node** %attrs, align 8
  store i32 0, i32* %attr_flags, align 4
  %278 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %list674 = bitcast %union.tree_node* %278 to %struct.tree_list*
  %value675 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list674, i32 0, i32 2
  %279 = load %union.tree_node*, %union.tree_node** %value675, align 8
  store %union.tree_node* %279, %union.tree_node** %declarator.addr, align 8
  %280 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %280, %union.tree_node** %inner_decl, align 8
  br label %while.cond.676

while.cond.676:                                   ; preds = %while.body.688, %if.then.672
  %281 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %cmp677 = icmp ne %union.tree_node* %281, null
  br i1 %cmp677, label %land.rhs.679, label %land.end.686

land.rhs.679:                                     ; preds = %while.cond.676
  %282 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %common680 = bitcast %union.tree_node* %282 to %struct.tree_common*
  %code681 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common680, i32 0, i32 2
  %bf.load682 = load i32, i32* %code681, align 8
  %bf.clear683 = and i32 %bf.load682, 255
  %cmp684 = icmp eq i32 %bf.clear683, 2
  br label %land.end.686

land.end.686:                                     ; preds = %land.rhs.679, %while.cond.676
  %283 = phi i1 [ false, %while.cond.676 ], [ %cmp684, %land.rhs.679 ]
  br i1 %283, label %while.body.688, label %while.end.691

while.body.688:                                   ; preds = %land.end.686
  %284 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %list689 = bitcast %union.tree_node* %284 to %struct.tree_list*
  %value690 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list689, i32 0, i32 2
  %285 = load %union.tree_node*, %union.tree_node** %value690, align 8
  store %union.tree_node* %285, %union.tree_node** %inner_decl, align 8
  br label %while.cond.676

while.end.691:                                    ; preds = %land.end.686
  %286 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %cmp692 = icmp eq %union.tree_node* %286, null
  br i1 %cmp692, label %if.then.701, label %lor.lhs.false.694

lor.lhs.false.694:                                ; preds = %while.end.691
  %287 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %common695 = bitcast %union.tree_node* %287 to %struct.tree_common*
  %code696 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common695, i32 0, i32 2
  %bf.load697 = load i32, i32* %code696, align 8
  %bf.clear698 = and i32 %bf.load697, 255
  %cmp699 = icmp eq i32 %bf.clear698, 1
  br i1 %cmp699, label %if.then.701, label %if.else.703

if.then.701:                                      ; preds = %lor.lhs.false.694, %while.end.691
  %288 = load i32, i32* %attr_flags, align 4
  %or702 = or i32 %288, 1
  store i32 %or702, i32* %attr_flags, align 4
  br label %if.end.723

if.else.703:                                      ; preds = %lor.lhs.false.694
  %289 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %common704 = bitcast %union.tree_node* %289 to %struct.tree_common*
  %code705 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common704, i32 0, i32 2
  %bf.load706 = load i32, i32* %code705, align 8
  %bf.clear707 = and i32 %bf.load706, 255
  %cmp708 = icmp eq i32 %bf.clear707, 53
  br i1 %cmp708, label %if.then.710, label %if.else.712

if.then.710:                                      ; preds = %if.else.703
  %290 = load i32, i32* %attr_flags, align 4
  %or711 = or i32 %290, 2
  store i32 %or711, i32* %attr_flags, align 4
  br label %if.end.722

if.else.712:                                      ; preds = %if.else.703
  %291 = load %union.tree_node*, %union.tree_node** %inner_decl, align 8
  %common713 = bitcast %union.tree_node* %291 to %struct.tree_common*
  %code714 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common713, i32 0, i32 2
  %bf.load715 = load i32, i32* %code714, align 8
  %bf.clear716 = and i32 %bf.load715, 255
  %cmp717 = icmp eq i32 %bf.clear716, 43
  br i1 %cmp717, label %if.then.719, label %if.end.721

if.then.719:                                      ; preds = %if.else.712
  %292 = load i32, i32* %attr_flags, align 4
  %or720 = or i32 %292, 4
  store i32 %or720, i32* %attr_flags, align 4
  br label %if.end.721

if.end.721:                                       ; preds = %if.then.719, %if.else.712
  br label %if.end.722

if.end.722:                                       ; preds = %if.end.721, %if.then.710
  br label %if.end.723

if.end.723:                                       ; preds = %if.end.722, %if.then.701
  %293 = load %union.tree_node*, %union.tree_node** %returned_attrs, align 8
  %294 = load %union.tree_node*, %union.tree_node** %attrs, align 8
  %call724 = call %union.tree_node* @chainon(%union.tree_node* %293, %union.tree_node* %294)
  %295 = load i32, i32* %attr_flags, align 4
  %call725 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %call724, i32 %295)
  store %union.tree_node* %call725, %union.tree_node** %returned_attrs, align 8
  br label %if.end.1173

if.else.726:                                      ; preds = %if.end.665
  %296 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common727 = bitcast %union.tree_node* %296 to %struct.tree_common*
  %code728 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common727, i32 0, i32 2
  %bf.load729 = load i32, i32* %code728, align 8
  %bf.clear730 = and i32 %bf.load729, 255
  %cmp731 = icmp eq i32 %bf.clear730, 43
  br i1 %cmp731, label %if.then.733, label %if.else.961

if.then.733:                                      ; preds = %if.else.726
  store %union.tree_node* null, %union.tree_node** %itype, align 8
  %297 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp734 = bitcast %union.tree_node* %297 to %struct.tree_exp*
  %operands735 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp734, i32 0, i32 2
  %arrayidx736 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands735, i32 0, i64 1
  %298 = load %union.tree_node*, %union.tree_node** %arrayidx736, align 8
  store %union.tree_node* %298, %union.tree_node** %size, align 8
  %299 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %call737 = call %union.tree_node* @signed_type(%union.tree_node* %299)
  store %union.tree_node* %call737, %union.tree_node** %index_type, align 8
  %300 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common738 = bitcast %union.tree_node* %300 to %struct.tree_common*
  %type739 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common738, i32 0, i32 1
  %301 = load %union.tree_node*, %union.tree_node** %type739, align 8
  store %union.tree_node* %301, %union.tree_node** %array_ptr_quals, align 8
  %302 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common740 = bitcast %union.tree_node* %302 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common740, i32 0, i32 2
  %bf.load741 = load i32, i32* %static_flag, align 8
  %bf.lshr742 = lshr i32 %bf.load741, 18
  %bf.clear743 = and i32 %bf.lshr742, 1
  store i32 %bf.clear743, i32* %array_parm_static, align 4
  %303 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp744 = bitcast %union.tree_node* %303 to %struct.tree_exp*
  %operands745 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp744, i32 0, i32 2
  %arrayidx746 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands745, i32 0, i64 0
  %304 = load %union.tree_node*, %union.tree_node** %arrayidx746, align 8
  store %union.tree_node* %304, %union.tree_node** %declarator.addr, align 8
  %305 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common747 = bitcast %union.tree_node* %305 to %struct.tree_common*
  %code748 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common747, i32 0, i32 2
  %bf.load749 = load i32, i32* %code748, align 8
  %bf.clear750 = and i32 %bf.load749, 255
  %cmp751 = icmp eq i32 %bf.clear750, 5
  br i1 %cmp751, label %if.then.753, label %if.end.754

if.then.753:                                      ; preds = %if.then.733
  %306 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.326, i32 0, i32 0), i8* %306)
  %307 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %307, %union.tree_node** %type, align 8
  br label %if.end.754

if.end.754:                                       ; preds = %if.then.753, %if.then.733
  %308 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common755 = bitcast %union.tree_node* %308 to %struct.tree_common*
  %code756 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common755, i32 0, i32 2
  %bf.load757 = load i32, i32* %code756, align 8
  %bf.clear758 = and i32 %bf.load757, 255
  %cmp759 = icmp eq i32 %bf.clear758, 23
  br i1 %cmp759, label %if.then.761, label %if.end.762

if.then.761:                                      ; preds = %if.end.754
  %309 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.327, i32 0, i32 0), i8* %309)
  %310 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %310, %union.tree_node** %type, align 8
  br label %if.end.762

if.end.762:                                       ; preds = %if.then.761, %if.end.754
  %311 = load %union.tree_node*, %union.tree_node** %size, align 8
  %312 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp763 = icmp eq %union.tree_node* %311, %312
  br i1 %cmp763, label %if.then.765, label %if.end.766

if.then.765:                                      ; preds = %if.end.762
  %313 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %313, %union.tree_node** %type, align 8
  br label %if.end.766

if.end.766:                                       ; preds = %if.then.765, %if.end.762
  %314 = load %union.tree_node*, %union.tree_node** %type, align 8
  %315 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp767 = icmp eq %union.tree_node* %314, %315
  br i1 %cmp767, label %if.then.769, label %if.end.770

if.then.769:                                      ; preds = %if.end.766
  br label %while.cond.641

if.end.770:                                       ; preds = %if.end.766
  %316 = load %union.tree_node*, %union.tree_node** %size, align 8
  %tobool771 = icmp ne %union.tree_node* %316, null
  br i1 %tobool771, label %if.then.772, label %if.else.909

if.then.772:                                      ; preds = %if.end.770
  br label %while.cond.773

while.cond.773:                                   ; preds = %while.body.812, %if.then.772
  %317 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common774 = bitcast %union.tree_node* %317 to %struct.tree_common*
  %code775 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common774, i32 0, i32 2
  %bf.load776 = load i32, i32* %code775, align 8
  %bf.clear777 = and i32 %bf.load776, 255
  %cmp778 = icmp eq i32 %bf.clear777, 115
  br i1 %cmp778, label %land.lhs.true.794, label %lor.lhs.false.780

lor.lhs.false.780:                                ; preds = %while.cond.773
  %318 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common781 = bitcast %union.tree_node* %318 to %struct.tree_common*
  %code782 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common781, i32 0, i32 2
  %bf.load783 = load i32, i32* %code782, align 8
  %bf.clear784 = and i32 %bf.load783, 255
  %cmp785 = icmp eq i32 %bf.clear784, 114
  br i1 %cmp785, label %land.lhs.true.794, label %lor.lhs.false.787

lor.lhs.false.787:                                ; preds = %lor.lhs.false.780
  %319 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common788 = bitcast %union.tree_node* %319 to %struct.tree_common*
  %code789 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common788, i32 0, i32 2
  %bf.load790 = load i32, i32* %code789, align 8
  %bf.clear791 = and i32 %bf.load790, 255
  %cmp792 = icmp eq i32 %bf.clear791, 116
  br i1 %cmp792, label %land.lhs.true.794, label %land.end.810

land.lhs.true.794:                                ; preds = %lor.lhs.false.787, %lor.lhs.false.780, %while.cond.773
  %320 = load %union.tree_node*, %union.tree_node** %size, align 8
  %exp795 = bitcast %union.tree_node* %320 to %struct.tree_exp*
  %operands796 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp795, i32 0, i32 2
  %arrayidx797 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands796, i32 0, i64 0
  %321 = load %union.tree_node*, %union.tree_node** %arrayidx797, align 8
  %322 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp798 = icmp ne %union.tree_node* %321, %322
  br i1 %cmp798, label %land.rhs.800, label %land.end.810

land.rhs.800:                                     ; preds = %land.lhs.true.794
  %323 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common801 = bitcast %union.tree_node* %323 to %struct.tree_common*
  %type802 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common801, i32 0, i32 1
  %324 = load %union.tree_node*, %union.tree_node** %type802, align 8
  %325 = load %union.tree_node*, %union.tree_node** %size, align 8
  %exp803 = bitcast %union.tree_node* %325 to %struct.tree_exp*
  %operands804 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp803, i32 0, i32 2
  %arrayidx805 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands804, i32 0, i64 0
  %326 = load %union.tree_node*, %union.tree_node** %arrayidx805, align 8
  %common806 = bitcast %union.tree_node* %326 to %struct.tree_common*
  %type807 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common806, i32 0, i32 1
  %327 = load %union.tree_node*, %union.tree_node** %type807, align 8
  %cmp808 = icmp eq %union.tree_node* %324, %327
  br label %land.end.810

land.end.810:                                     ; preds = %land.rhs.800, %land.lhs.true.794, %lor.lhs.false.787
  %328 = phi i1 [ false, %land.lhs.true.794 ], [ false, %lor.lhs.false.787 ], [ %cmp808, %land.rhs.800 ]
  br i1 %328, label %while.body.812, label %while.end.816

while.body.812:                                   ; preds = %land.end.810
  %329 = load %union.tree_node*, %union.tree_node** %size, align 8
  %exp813 = bitcast %union.tree_node* %329 to %struct.tree_exp*
  %operands814 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp813, i32 0, i32 2
  %arrayidx815 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands814, i32 0, i64 0
  %330 = load %union.tree_node*, %union.tree_node** %arrayidx815, align 8
  store %union.tree_node* %330, %union.tree_node** %size, align 8
  br label %while.cond.773

while.end.816:                                    ; preds = %land.end.810
  %331 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common817 = bitcast %union.tree_node* %331 to %struct.tree_common*
  %type818 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common817, i32 0, i32 1
  %332 = load %union.tree_node*, %union.tree_node** %type818, align 8
  %common819 = bitcast %union.tree_node* %332 to %struct.tree_common*
  %code820 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common819, i32 0, i32 2
  %bf.load821 = load i32, i32* %code820, align 8
  %bf.clear822 = and i32 %bf.load821, 255
  %cmp823 = icmp eq i32 %bf.clear822, 6
  br i1 %cmp823, label %if.end.853, label %lor.lhs.false.825

lor.lhs.false.825:                                ; preds = %while.end.816
  %333 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common826 = bitcast %union.tree_node* %333 to %struct.tree_common*
  %type827 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common826, i32 0, i32 1
  %334 = load %union.tree_node*, %union.tree_node** %type827, align 8
  %common828 = bitcast %union.tree_node* %334 to %struct.tree_common*
  %code829 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common828, i32 0, i32 2
  %bf.load830 = load i32, i32* %code829, align 8
  %bf.clear831 = and i32 %bf.load830, 255
  %cmp832 = icmp eq i32 %bf.clear831, 10
  br i1 %cmp832, label %if.end.853, label %lor.lhs.false.834

lor.lhs.false.834:                                ; preds = %lor.lhs.false.825
  %335 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common835 = bitcast %union.tree_node* %335 to %struct.tree_common*
  %type836 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common835, i32 0, i32 1
  %336 = load %union.tree_node*, %union.tree_node** %type836, align 8
  %common837 = bitcast %union.tree_node* %336 to %struct.tree_common*
  %code838 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common837, i32 0, i32 2
  %bf.load839 = load i32, i32* %code838, align 8
  %bf.clear840 = and i32 %bf.load839, 255
  %cmp841 = icmp eq i32 %bf.clear840, 11
  br i1 %cmp841, label %if.end.853, label %lor.lhs.false.843

lor.lhs.false.843:                                ; preds = %lor.lhs.false.834
  %337 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common844 = bitcast %union.tree_node* %337 to %struct.tree_common*
  %type845 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common844, i32 0, i32 1
  %338 = load %union.tree_node*, %union.tree_node** %type845, align 8
  %common846 = bitcast %union.tree_node* %338 to %struct.tree_common*
  %code847 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common846, i32 0, i32 2
  %bf.load848 = load i32, i32* %code847, align 8
  %bf.clear849 = and i32 %bf.load848, 255
  %cmp850 = icmp eq i32 %bf.clear849, 12
  br i1 %cmp850, label %if.end.853, label %if.then.852

if.then.852:                                      ; preds = %lor.lhs.false.843
  %339 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.328, i32 0, i32 0), i8* %339)
  %340 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %340, %union.tree_node** %size, align 8
  br label %if.end.853

if.end.853:                                       ; preds = %if.then.852, %lor.lhs.false.843, %lor.lhs.false.834, %lor.lhs.false.825, %while.end.816
  %341 = load i32, i32* @pedantic, align 4
  %tobool854 = icmp ne i32 %341, 0
  br i1 %tobool854, label %land.lhs.true.855, label %if.end.859

land.lhs.true.855:                                ; preds = %if.end.853
  %342 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call856 = call i32 @integer_zerop(%union.tree_node* %342)
  %tobool857 = icmp ne i32 %call856, 0
  br i1 %tobool857, label %if.then.858, label %if.end.859

if.then.858:                                      ; preds = %land.lhs.true.855
  %343 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.329, i32 0, i32 0), i8* %343)
  br label %if.end.859

if.end.859:                                       ; preds = %if.then.858, %land.lhs.true.855, %if.end.853
  %344 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common860 = bitcast %union.tree_node* %344 to %struct.tree_common*
  %code861 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common860, i32 0, i32 2
  %bf.load862 = load i32, i32* %code861, align 8
  %bf.clear863 = and i32 %bf.load862, 255
  %cmp864 = icmp eq i32 %bf.clear863, 25
  br i1 %cmp864, label %if.then.866, label %if.else.872

if.then.866:                                      ; preds = %if.end.859
  %345 = load %union.tree_node*, %union.tree_node** %size, align 8
  call void @constant_expression_warning(%union.tree_node* %345)
  %346 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call867 = call i32 @tree_int_cst_sgn(%union.tree_node* %346)
  %cmp868 = icmp slt i32 %call867, 0
  br i1 %cmp868, label %if.then.870, label %if.end.871

if.then.870:                                      ; preds = %if.then.866
  %347 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.330, i32 0, i32 0), i8* %347)
  %348 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  store %union.tree_node* %348, %union.tree_node** %size, align 8
  br label %if.end.871

if.end.871:                                       ; preds = %if.then.870, %if.then.866
  br label %if.end.886

if.else.872:                                      ; preds = %if.end.859
  store i32 1, i32* %size_varies, align 4
  %349 = load i32, i32* @flag_isoc99, align 4
  %tobool873 = icmp ne i32 %349, 0
  br i1 %tobool873, label %if.end.885, label %land.lhs.true.874

land.lhs.true.874:                                ; preds = %if.else.872
  %350 = load i32, i32* @pedantic, align 4
  %tobool875 = icmp ne i32 %350, 0
  br i1 %tobool875, label %if.then.876, label %if.end.885

if.then.876:                                      ; preds = %land.lhs.true.874
  %351 = load %union.tree_node*, %union.tree_node** %size, align 8
  %common877 = bitcast %union.tree_node* %351 to %struct.tree_common*
  %constant_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common877, i32 0, i32 2
  %bf.load878 = load i32, i32* %constant_flag, align 8
  %bf.lshr879 = lshr i32 %bf.load878, 9
  %bf.clear880 = and i32 %bf.lshr879, 1
  %tobool881 = icmp ne i32 %bf.clear880, 0
  br i1 %tobool881, label %if.then.882, label %if.else.883

if.then.882:                                      ; preds = %if.then.876
  %352 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.331, i32 0, i32 0), i8* %352)
  br label %if.end.884

if.else.883:                                      ; preds = %if.then.876
  %353 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.332, i32 0, i32 0), i8* %353)
  br label %if.end.884

if.end.884:                                       ; preds = %if.else.883, %if.then.882
  br label %if.end.885

if.end.885:                                       ; preds = %if.end.884, %land.lhs.true.874, %if.else.872
  br label %if.end.886

if.end.886:                                       ; preds = %if.end.885, %if.end.871
  %354 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call887 = call i32 @integer_zerop(%union.tree_node* %354)
  %tobool888 = icmp ne i32 %call887, 0
  br i1 %tobool888, label %if.then.889, label %if.else.891

if.then.889:                                      ; preds = %if.end.886
  %355 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %356 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call890 = call %union.tree_node* @build_range_type(%union.tree_node* %355, %union.tree_node* %356, %union.tree_node* null)
  store %union.tree_node* %call890, %union.tree_node** %itype, align 8
  br label %if.end.908

if.else.891:                                      ; preds = %if.end.886
  %357 = load %union.tree_node*, %union.tree_node** %index_type, align 8
  %358 = load %union.tree_node*, %union.tree_node** %index_type, align 8
  %359 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call892 = call %union.tree_node* @convert(%union.tree_node* %358, %union.tree_node* %359)
  %360 = load %union.tree_node*, %union.tree_node** %index_type, align 8
  %361 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 16), align 8
  %call893 = call %union.tree_node* @convert(%union.tree_node* %360, %union.tree_node* %361)
  %call894 = call %union.tree_node* (i32, %union.tree_node*, ...) @build(i32 60, %union.tree_node* %357, %union.tree_node* %call892, %union.tree_node* %call893)
  %call895 = call %union.tree_node* @fold(%union.tree_node* %call894)
  store %union.tree_node* %call895, %union.tree_node** %itype, align 8
  %362 = load %union.tree_node*, %union.tree_node** %itype, align 8
  %common896 = bitcast %union.tree_node* %362 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common896, i32 0, i32 2
  %bf.load897 = load i32, i32* %public_flag, align 8
  %bf.lshr898 = lshr i32 %bf.load897, 19
  %bf.clear899 = and i32 %bf.lshr898, 1
  %tobool900 = icmp ne i32 %bf.clear899, 0
  br i1 %tobool900, label %if.then.901, label %if.end.902

if.then.901:                                      ; preds = %if.else.891
  %363 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.333, i32 0, i32 0), i8* %363)
  %364 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %364, %union.tree_node** %type, align 8
  br label %while.cond.641

if.end.902:                                       ; preds = %if.else.891
  %365 = load i32, i32* %size_varies, align 4
  %tobool903 = icmp ne i32 %365, 0
  br i1 %tobool903, label %if.then.904, label %if.end.906

if.then.904:                                      ; preds = %if.end.902
  %366 = load %union.tree_node*, %union.tree_node** %itype, align 8
  %call905 = call %union.tree_node* @variable_size(%union.tree_node* %366)
  store %union.tree_node* %call905, %union.tree_node** %itype, align 8
  br label %if.end.906

if.end.906:                                       ; preds = %if.then.904, %if.end.902
  %367 = load %union.tree_node*, %union.tree_node** %itype, align 8
  %call907 = call %union.tree_node* @build_index_type(%union.tree_node* %367)
  store %union.tree_node* %call907, %union.tree_node** %itype, align 8
  br label %if.end.908

if.end.908:                                       ; preds = %if.end.906, %if.then.889
  br label %if.end.922

if.else.909:                                      ; preds = %if.end.770
  %368 = load i32, i32* %decl_context.addr, align 4
  %cmp910 = icmp eq i32 %368, 3
  br i1 %cmp910, label %if.then.912, label %if.end.921

if.then.912:                                      ; preds = %if.else.909
  %369 = load i32, i32* @pedantic, align 4
  %tobool913 = icmp ne i32 %369, 0
  br i1 %tobool913, label %land.lhs.true.914, label %if.end.919

land.lhs.true.914:                                ; preds = %if.then.912
  %370 = load i32, i32* @flag_isoc99, align 4
  %tobool915 = icmp ne i32 %370, 0
  br i1 %tobool915, label %if.end.919, label %land.lhs.true.916

land.lhs.true.916:                                ; preds = %land.lhs.true.914
  %371 = load i32, i32* @in_system_header, align 4
  %tobool917 = icmp ne i32 %371, 0
  br i1 %tobool917, label %if.end.919, label %if.then.918

if.then.918:                                      ; preds = %land.lhs.true.916
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.334, i32 0, i32 0))
  br label %if.end.919

if.end.919:                                       ; preds = %if.then.918, %land.lhs.true.916, %land.lhs.true.914, %if.then.912
  %372 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*], [6 x %union.tree_node*]* @sizetype_tab, i32 0, i64 0), align 8
  %373 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 15), align 8
  %call920 = call %union.tree_node* @build_range_type(%union.tree_node* %372, %union.tree_node* %373, %union.tree_node* null)
  store %union.tree_node* %call920, %union.tree_node** %itype, align 8
  br label %if.end.921

if.end.921:                                       ; preds = %if.end.919, %if.else.909
  br label %if.end.922

if.end.922:                                       ; preds = %if.end.921, %if.end.908
  %374 = load i32, i32* @pedantic, align 4
  %tobool923 = icmp ne i32 %374, 0
  br i1 %tobool923, label %land.lhs.true.924, label %if.end.930

land.lhs.true.924:                                ; preds = %if.end.922
  %375 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type925 = bitcast %union.tree_node* %375 to %struct.tree_type*
  %size926 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type925, i32 0, i32 2
  %376 = load %union.tree_node*, %union.tree_node** %size926, align 8
  %cmp927 = icmp ne %union.tree_node* %376, null
  br i1 %cmp927, label %if.end.930, label %if.then.929

if.then.929:                                      ; preds = %land.lhs.true.924
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.335, i32 0, i32 0))
  br label %if.end.930

if.end.930:                                       ; preds = %if.then.929, %land.lhs.true.924, %if.end.922
  %377 = load %union.tree_node*, %union.tree_node** %type, align 8
  %378 = load %union.tree_node*, %union.tree_node** %itype, align 8
  %call931 = call %union.tree_node* @build_array_type(%union.tree_node* %377, %union.tree_node* %378)
  store %union.tree_node* %call931, %union.tree_node** %type, align 8
  %379 = load i32, i32* %type_quals, align 4
  %tobool932 = icmp ne i32 %379, 0
  br i1 %tobool932, label %if.then.933, label %if.end.935

if.then.933:                                      ; preds = %if.end.930
  %380 = load %union.tree_node*, %union.tree_node** %type, align 8
  %381 = load i32, i32* %type_quals, align 4
  %call934 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %380, i32 %381)
  store %union.tree_node* %call934, %union.tree_node** %type, align 8
  br label %if.end.935

if.end.935:                                       ; preds = %if.then.933, %if.end.930
  %382 = load i32, i32* %size_varies, align 4
  %tobool936 = icmp ne i32 %382, 0
  br i1 %tobool936, label %if.then.937, label %if.end.942

if.then.937:                                      ; preds = %if.end.935
  %383 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type938 = bitcast %union.tree_node* %383 to %struct.tree_type*
  %lang_flag_1939 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type938, i32 0, i32 6
  %bf.load940 = load i32, i32* %lang_flag_1939, align 4
  %bf.clear941 = and i32 %bf.load940, -33554433
  %bf.set = or i32 %bf.clear941, 33554432
  store i32 %bf.set, i32* %lang_flag_1939, align 4
  br label %if.end.942

if.end.942:                                       ; preds = %if.then.937, %if.end.935
  %384 = load %union.tree_node*, %union.tree_node** %size, align 8
  %tobool943 = icmp ne %union.tree_node* %384, null
  br i1 %tobool943, label %land.lhs.true.944, label %if.end.951

land.lhs.true.944:                                ; preds = %if.end.942
  %385 = load %union.tree_node*, %union.tree_node** %size, align 8
  %call945 = call i32 @integer_zerop(%union.tree_node* %385)
  %tobool946 = icmp ne i32 %call945, 0
  br i1 %tobool946, label %if.then.947, label %if.end.951

if.then.947:                                      ; preds = %land.lhs.true.944
  %386 = load %union.tree_node*, %union.tree_node** %type, align 8
  call void @layout_type(%union.tree_node* %386)
  %387 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 17), align 8
  %388 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type948 = bitcast %union.tree_node* %388 to %struct.tree_type*
  %size949 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type948, i32 0, i32 2
  store %union.tree_node* %387, %union.tree_node** %size949, align 8
  %389 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 15), align 8
  %390 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type950 = bitcast %union.tree_node* %390 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type950, i32 0, i32 3
  store %union.tree_node* %389, %union.tree_node** %size_unit, align 8
  br label %if.end.951

if.end.951:                                       ; preds = %if.then.947, %land.lhs.true.944, %if.end.942
  %391 = load i32, i32* %decl_context.addr, align 4
  %cmp952 = icmp ne i32 %391, 2
  br i1 %cmp952, label %land.lhs.true.954, label %if.end.960

land.lhs.true.954:                                ; preds = %if.end.951
  %392 = load %union.tree_node*, %union.tree_node** %array_ptr_quals, align 8
  %cmp955 = icmp ne %union.tree_node* %392, null
  br i1 %cmp955, label %if.then.959, label %lor.lhs.false.957

lor.lhs.false.957:                                ; preds = %land.lhs.true.954
  %393 = load i32, i32* %array_parm_static, align 4
  %tobool958 = icmp ne i32 %393, 0
  br i1 %tobool958, label %if.then.959, label %if.end.960

if.then.959:                                      ; preds = %lor.lhs.false.957, %land.lhs.true.954
  call void (i8*, ...) @error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.325, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %array_ptr_quals, align 8
  store i32 0, i32* %array_parm_static, align 4
  br label %if.end.960

if.end.960:                                       ; preds = %if.then.959, %lor.lhs.false.957, %if.end.951
  br label %if.end.1172

if.else.961:                                      ; preds = %if.else.726
  %394 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common962 = bitcast %union.tree_node* %394 to %struct.tree_common*
  %code963 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common962, i32 0, i32 2
  %bf.load964 = load i32, i32* %code963, align 8
  %bf.clear965 = and i32 %bf.load964, 255
  %cmp966 = icmp eq i32 %bf.clear965, 53
  br i1 %cmp966, label %if.then.968, label %if.else.1058

if.then.968:                                      ; preds = %if.else.961
  %395 = load %union.tree_node*, %union.tree_node** %type, align 8
  %396 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp969 = icmp eq %union.tree_node* %395, %396
  br i1 %cmp969, label %if.then.971, label %if.end.972

if.then.971:                                      ; preds = %if.then.968
  br label %while.cond.641

if.end.972:                                       ; preds = %if.then.968
  store i32 0, i32* %size_varies, align 4
  %397 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common973 = bitcast %union.tree_node* %397 to %struct.tree_common*
  %code974 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common973, i32 0, i32 2
  %bf.load975 = load i32, i32* %code974, align 8
  %bf.clear976 = and i32 %bf.load975, 255
  %cmp977 = icmp eq i32 %bf.clear976, 23
  br i1 %cmp977, label %if.then.979, label %if.end.980

if.then.979:                                      ; preds = %if.end.972
  %398 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.336, i32 0, i32 0), i8* %398)
  %399 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %399, %union.tree_node** %type, align 8
  br label %if.end.980

if.end.980:                                       ; preds = %if.then.979, %if.end.972
  %400 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common981 = bitcast %union.tree_node* %400 to %struct.tree_common*
  %code982 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common981, i32 0, i32 2
  %bf.load983 = load i32, i32* %code982, align 8
  %bf.clear984 = and i32 %bf.load983, 255
  %cmp985 = icmp eq i32 %bf.clear984, 18
  br i1 %cmp985, label %if.then.987, label %if.end.988

if.then.987:                                      ; preds = %if.end.980
  %401 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.337, i32 0, i32 0), i8* %401)
  %402 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %402, %union.tree_node** %type, align 8
  br label %if.end.988

if.end.988:                                       ; preds = %if.then.987, %if.end.980
  %403 = load i32, i32* @flag_traditional, align 4
  %tobool989 = icmp ne i32 %403, 0
  br i1 %tobool989, label %land.lhs.true.990, label %if.end.996

land.lhs.true.990:                                ; preds = %if.end.988
  %404 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type991 = bitcast %union.tree_node* %404 to %struct.tree_type*
  %main_variant992 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type991, i32 0, i32 15
  %405 = load %union.tree_node*, %union.tree_node** %main_variant992, align 8
  %406 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp993 = icmp eq %union.tree_node* %405, %406
  br i1 %cmp993, label %if.then.995, label %if.end.996

if.then.995:                                      ; preds = %land.lhs.true.990
  %407 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  store %union.tree_node* %407, %union.tree_node** %type, align 8
  br label %if.end.996

if.end.996:                                       ; preds = %if.then.995, %land.lhs.true.990, %if.end.988
  %408 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp997 = bitcast %union.tree_node* %408 to %struct.tree_exp*
  %operands998 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp997, i32 0, i32 2
  %arrayidx999 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands998, i32 0, i64 1
  %409 = load %union.tree_node*, %union.tree_node** %arrayidx999, align 8
  %410 = load i32, i32* %funcdef_flag, align 4
  %tobool1000 = icmp ne i32 %410, 0
  br i1 %tobool1000, label %land.rhs.1001, label %land.end.1011

land.rhs.1001:                                    ; preds = %if.end.996
  %411 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp1002 = bitcast %union.tree_node* %411 to %struct.tree_exp*
  %operands1003 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1002, i32 0, i32 2
  %arrayidx1004 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1003, i32 0, i64 0
  %412 = load %union.tree_node*, %union.tree_node** %arrayidx1004, align 8
  %common1005 = bitcast %union.tree_node* %412 to %struct.tree_common*
  %code1006 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1005, i32 0, i32 2
  %bf.load1007 = load i32, i32* %code1006, align 8
  %bf.clear1008 = and i32 %bf.load1007, 255
  %cmp1009 = icmp eq i32 %bf.clear1008, 1
  br label %land.end.1011

land.end.1011:                                    ; preds = %land.rhs.1001, %if.end.996
  %413 = phi i1 [ false, %if.end.996 ], [ %cmp1009, %land.rhs.1001 ]
  %land.ext1012 = zext i1 %413 to i32
  %call1013 = call %union.tree_node* @grokparms(%union.tree_node* %409, i32 %land.ext1012)
  store %union.tree_node* %call1013, %union.tree_node** %arg_types, align 8
  %414 = load i32, i32* %type_quals, align 4
  %tobool1014 = icmp ne i32 %414, 0
  br i1 %tobool1014, label %if.then.1015, label %if.end.1043

if.then.1015:                                     ; preds = %land.end.1011
  %415 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1016 = bitcast %union.tree_node* %415 to %struct.tree_common*
  %code1017 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1016, i32 0, i32 2
  %bf.load1018 = load i32, i32* %code1017, align 8
  %bf.clear1019 = and i32 %bf.load1018, 255
  %cmp1020 = icmp eq i32 %bf.clear1019, 5
  br i1 %cmp1020, label %land.lhs.true.1022, label %if.else.1027

land.lhs.true.1022:                               ; preds = %if.then.1015
  %416 = load i32, i32* @pedantic, align 4
  %tobool1023 = icmp ne i32 %416, 0
  br i1 %tobool1023, label %land.lhs.true.1024, label %if.else.1027

land.lhs.true.1024:                               ; preds = %land.lhs.true.1022
  %417 = load i32, i32* @in_system_header, align 4
  %tobool1025 = icmp ne i32 %417, 0
  br i1 %tobool1025, label %if.else.1027, label %if.then.1026

if.then.1026:                                     ; preds = %land.lhs.true.1024
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.338, i32 0, i32 0))
  br label %if.end.1041

if.else.1027:                                     ; preds = %land.lhs.true.1024, %land.lhs.true.1022, %if.then.1015
  %418 = load i32, i32* @extra_warnings, align 4
  %tobool1028 = icmp ne i32 %418, 0
  br i1 %tobool1028, label %land.lhs.true.1029, label %if.end.1040

land.lhs.true.1029:                               ; preds = %if.else.1027
  %419 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1030 = bitcast %union.tree_node* %419 to %struct.tree_common*
  %code1031 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1030, i32 0, i32 2
  %bf.load1032 = load i32, i32* %code1031, align 8
  %bf.clear1033 = and i32 %bf.load1032, 255
  %cmp1034 = icmp eq i32 %bf.clear1033, 5
  br i1 %cmp1034, label %land.lhs.true.1036, label %if.then.1039

land.lhs.true.1036:                               ; preds = %land.lhs.true.1029
  %420 = load i32, i32* %type_quals, align 4
  %cmp1037 = icmp eq i32 %420, 2
  br i1 %cmp1037, label %if.end.1040, label %if.then.1039

if.then.1039:                                     ; preds = %land.lhs.true.1036, %land.lhs.true.1029
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.339, i32 0, i32 0))
  br label %if.end.1040

if.end.1040:                                      ; preds = %if.then.1039, %land.lhs.true.1036, %if.else.1027
  br label %if.end.1041

if.end.1041:                                      ; preds = %if.end.1040, %if.then.1026
  %421 = load %union.tree_node*, %union.tree_node** %type, align 8
  %422 = load i32, i32* %type_quals, align 4
  %call1042 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %421, i32 %422)
  store %union.tree_node* %call1042, %union.tree_node** %type, align 8
  br label %if.end.1043

if.end.1043:                                      ; preds = %if.end.1041, %land.end.1011
  store i32 0, i32* %type_quals, align 4
  %423 = load %union.tree_node*, %union.tree_node** %type, align 8
  %424 = load %union.tree_node*, %union.tree_node** %arg_types, align 8
  %call1044 = call %union.tree_node* @build_function_type(%union.tree_node* %423, %union.tree_node* %424)
  store %union.tree_node* %call1044, %union.tree_node** %type, align 8
  %425 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp1045 = bitcast %union.tree_node* %425 to %struct.tree_exp*
  %operands1046 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1045, i32 0, i32 2
  %arrayidx1047 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1046, i32 0, i64 0
  %426 = load %union.tree_node*, %union.tree_node** %arrayidx1047, align 8
  store %union.tree_node* %426, %union.tree_node** %declarator.addr, align 8
  %427 = load %union.tree_node*, %union.tree_node** @last_function_parm_tags, align 8
  store %union.tree_node* %427, %union.tree_node** %link, align 8
  br label %for.cond.1048

for.cond.1048:                                    ; preds = %for.inc.1054, %if.end.1043
  %428 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool1049 = icmp ne %union.tree_node* %428, null
  br i1 %tobool1049, label %for.body.1050, label %for.end.1057

for.body.1050:                                    ; preds = %for.cond.1048
  %429 = load %union.tree_node*, %union.tree_node** %type, align 8
  %430 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list1051 = bitcast %union.tree_node* %430 to %struct.tree_list*
  %value1052 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1051, i32 0, i32 2
  %431 = load %union.tree_node*, %union.tree_node** %value1052, align 8
  %type1053 = bitcast %union.tree_node* %431 to %struct.tree_type*
  %context = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1053, i32 0, i32 17
  store %union.tree_node* %429, %union.tree_node** %context, align 8
  br label %for.inc.1054

for.inc.1054:                                     ; preds = %for.body.1050
  %432 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common1055 = bitcast %union.tree_node* %432 to %struct.tree_common*
  %chain1056 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1055, i32 0, i32 0
  %433 = load %union.tree_node*, %union.tree_node** %chain1056, align 8
  store %union.tree_node* %433, %union.tree_node** %link, align 8
  br label %for.cond.1048

for.end.1057:                                     ; preds = %for.cond.1048
  br label %if.end.1171

if.else.1058:                                     ; preds = %if.else.961
  %434 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common1059 = bitcast %union.tree_node* %434 to %struct.tree_common*
  %code1060 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1059, i32 0, i32 2
  %bf.load1061 = load i32, i32* %code1060, align 8
  %bf.clear1062 = and i32 %bf.load1061, 255
  %cmp1063 = icmp eq i32 %bf.clear1062, 41
  br i1 %cmp1063, label %if.then.1065, label %if.else.1169

if.then.1065:                                     ; preds = %if.else.1058
  %435 = load i32, i32* @pedantic, align 4
  %tobool1066 = icmp ne i32 %435, 0
  br i1 %tobool1066, label %land.lhs.true.1067, label %if.end.1077

land.lhs.true.1067:                               ; preds = %if.then.1065
  %436 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1068 = bitcast %union.tree_node* %436 to %struct.tree_common*
  %code1069 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1068, i32 0, i32 2
  %bf.load1070 = load i32, i32* %code1069, align 8
  %bf.clear1071 = and i32 %bf.load1070, 255
  %cmp1072 = icmp eq i32 %bf.clear1071, 23
  br i1 %cmp1072, label %land.lhs.true.1074, label %if.end.1077

land.lhs.true.1074:                               ; preds = %land.lhs.true.1067
  %437 = load i32, i32* %type_quals, align 4
  %tobool1075 = icmp ne i32 %437, 0
  br i1 %tobool1075, label %if.then.1076, label %if.end.1077

if.then.1076:                                     ; preds = %land.lhs.true.1074
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.340, i32 0, i32 0))
  br label %if.end.1077

if.end.1077:                                      ; preds = %if.then.1076, %land.lhs.true.1074, %land.lhs.true.1067, %if.then.1065
  %438 = load i32, i32* %type_quals, align 4
  %tobool1078 = icmp ne i32 %438, 0
  br i1 %tobool1078, label %if.then.1079, label %if.end.1081

if.then.1079:                                     ; preds = %if.end.1077
  %439 = load %union.tree_node*, %union.tree_node** %type, align 8
  %440 = load i32, i32* %type_quals, align 4
  %call1080 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %439, i32 %440)
  store %union.tree_node* %call1080, %union.tree_node** %type, align 8
  br label %if.end.1081

if.end.1081:                                      ; preds = %if.then.1079, %if.end.1077
  store i32 0, i32* %type_quals, align 4
  store i32 0, i32* %size_varies, align 4
  %441 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1082 = call %union.tree_node* @build_pointer_type(%union.tree_node* %441)
  store %union.tree_node* %call1082, %union.tree_node** %type, align 8
  %442 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common1083 = bitcast %union.tree_node* %442 to %struct.tree_common*
  %type1084 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1083, i32 0, i32 1
  %443 = load %union.tree_node*, %union.tree_node** %type1084, align 8
  %tobool1085 = icmp ne %union.tree_node* %443, null
  br i1 %tobool1085, label %if.then.1086, label %if.end.1165

if.then.1086:                                     ; preds = %if.end.1081
  store i32 0, i32* %erred, align 4
  store i32 0, i32* %constp, align 4
  store i32 0, i32* %volatilep, align 4
  store i32 0, i32* %restrictp, align 4
  %444 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %common1087 = bitcast %union.tree_node* %444 to %struct.tree_common*
  %type1088 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1087, i32 0, i32 1
  %445 = load %union.tree_node*, %union.tree_node** %type1088, align 8
  store %union.tree_node* %445, %union.tree_node** %typemodlist, align 8
  br label %for.cond.1089

for.cond.1089:                                    ; preds = %for.inc.1132, %if.then.1086
  %446 = load %union.tree_node*, %union.tree_node** %typemodlist, align 8
  %tobool1090 = icmp ne %union.tree_node* %446, null
  br i1 %tobool1090, label %for.body.1091, label %for.end.1135

for.body.1091:                                    ; preds = %for.cond.1089
  %447 = load %union.tree_node*, %union.tree_node** %typemodlist, align 8
  %list1092 = bitcast %union.tree_node* %447 to %struct.tree_list*
  %value1093 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1092, i32 0, i32 2
  %448 = load %union.tree_node*, %union.tree_node** %value1093, align 8
  store %union.tree_node* %448, %union.tree_node** %qualifier, align 8
  %449 = load %union.tree_node*, %union.tree_node** %qualifier, align 8
  %common1094 = bitcast %union.tree_node* %449 to %struct.tree_common*
  %lang_flag_01095 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1094, i32 0, i32 2
  %bf.load1096 = load i32, i32* %lang_flag_01095, align 8
  %bf.lshr1097 = lshr i32 %bf.load1096, 24
  %bf.clear1098 = and i32 %bf.lshr1097, 1
  %tobool1099 = icmp ne i32 %bf.clear1098, 0
  br i1 %tobool1099, label %if.then.1100, label %if.else.1129

if.then.1100:                                     ; preds = %for.body.1091
  %450 = load %union.tree_node*, %union.tree_node** %qualifier, align 8
  %451 = bitcast %union.tree_node* %450 to %struct.c_common_identifier*
  %node1101 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %451, i32 0, i32 1
  %rid_code1102 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1101, i32 0, i32 3
  %452 = load i8, i8* %rid_code1102, align 1
  %conv1103 = zext i8 %452 to i32
  %cmp1104 = icmp eq i32 %conv1103, 3
  br i1 %cmp1104, label %if.then.1106, label %if.else.1108

if.then.1106:                                     ; preds = %if.then.1100
  %453 = load i32, i32* %constp, align 4
  %inc1107 = add nsw i32 %453, 1
  store i32 %inc1107, i32* %constp, align 4
  br label %if.end.1128

if.else.1108:                                     ; preds = %if.then.1100
  %454 = load %union.tree_node*, %union.tree_node** %qualifier, align 8
  %455 = bitcast %union.tree_node* %454 to %struct.c_common_identifier*
  %node1109 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %455, i32 0, i32 1
  %rid_code1110 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1109, i32 0, i32 3
  %456 = load i8, i8* %rid_code1110, align 1
  %conv1111 = zext i8 %456 to i32
  %cmp1112 = icmp eq i32 %conv1111, 9
  br i1 %cmp1112, label %if.then.1114, label %if.else.1116

if.then.1114:                                     ; preds = %if.else.1108
  %457 = load i32, i32* %volatilep, align 4
  %inc1115 = add nsw i32 %457, 1
  store i32 %inc1115, i32* %volatilep, align 4
  br label %if.end.1127

if.else.1116:                                     ; preds = %if.else.1108
  %458 = load %union.tree_node*, %union.tree_node** %qualifier, align 8
  %459 = bitcast %union.tree_node* %458 to %struct.c_common_identifier*
  %node1117 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %459, i32 0, i32 1
  %rid_code1118 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1117, i32 0, i32 3
  %460 = load i8, i8* %rid_code1118, align 1
  %conv1119 = zext i8 %460 to i32
  %cmp1120 = icmp eq i32 %conv1119, 12
  br i1 %cmp1120, label %if.then.1122, label %if.else.1124

if.then.1122:                                     ; preds = %if.else.1116
  %461 = load i32, i32* %restrictp, align 4
  %inc1123 = add nsw i32 %461, 1
  store i32 %inc1123, i32* %restrictp, align 4
  br label %if.end.1126

if.else.1124:                                     ; preds = %if.else.1116
  %462 = load i32, i32* %erred, align 4
  %inc1125 = add nsw i32 %462, 1
  store i32 %inc1125, i32* %erred, align 4
  br label %if.end.1126

if.end.1126:                                      ; preds = %if.else.1124, %if.then.1122
  br label %if.end.1127

if.end.1127:                                      ; preds = %if.end.1126, %if.then.1114
  br label %if.end.1128

if.end.1128:                                      ; preds = %if.end.1127, %if.then.1106
  br label %if.end.1131

if.else.1129:                                     ; preds = %for.body.1091
  %463 = load i32, i32* %erred, align 4
  %inc1130 = add nsw i32 %463, 1
  store i32 %inc1130, i32* %erred, align 4
  br label %if.end.1131

if.end.1131:                                      ; preds = %if.else.1129, %if.end.1128
  br label %for.inc.1132

for.inc.1132:                                     ; preds = %if.end.1131
  %464 = load %union.tree_node*, %union.tree_node** %typemodlist, align 8
  %common1133 = bitcast %union.tree_node* %464 to %struct.tree_common*
  %chain1134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1133, i32 0, i32 0
  %465 = load %union.tree_node*, %union.tree_node** %chain1134, align 8
  store %union.tree_node* %465, %union.tree_node** %typemodlist, align 8
  br label %for.cond.1089

for.end.1135:                                     ; preds = %for.cond.1089
  %466 = load i32, i32* %erred, align 4
  %tobool1136 = icmp ne i32 %466, 0
  br i1 %tobool1136, label %if.then.1137, label %if.end.1138

if.then.1137:                                     ; preds = %for.end.1135
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.341, i32 0, i32 0))
  br label %if.end.1138

if.end.1138:                                      ; preds = %if.then.1137, %for.end.1135
  %467 = load i32, i32* %constp, align 4
  %cmp1139 = icmp sgt i32 %467, 1
  br i1 %cmp1139, label %land.lhs.true.1141, label %if.end.1144

land.lhs.true.1141:                               ; preds = %if.end.1138
  %468 = load i32, i32* @flag_isoc99, align 4
  %tobool1142 = icmp ne i32 %468, 0
  br i1 %tobool1142, label %if.end.1144, label %if.then.1143

if.then.1143:                                     ; preds = %land.lhs.true.1141
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.311, i32 0, i32 0))
  br label %if.end.1144

if.end.1144:                                      ; preds = %if.then.1143, %land.lhs.true.1141, %if.end.1138
  %469 = load i32, i32* %volatilep, align 4
  %cmp1145 = icmp sgt i32 %469, 1
  br i1 %cmp1145, label %land.lhs.true.1147, label %if.end.1150

land.lhs.true.1147:                               ; preds = %if.end.1144
  %470 = load i32, i32* @flag_isoc99, align 4
  %tobool1148 = icmp ne i32 %470, 0
  br i1 %tobool1148, label %if.end.1150, label %if.then.1149

if.then.1149:                                     ; preds = %land.lhs.true.1147
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.313, i32 0, i32 0))
  br label %if.end.1150

if.end.1150:                                      ; preds = %if.then.1149, %land.lhs.true.1147, %if.end.1144
  %471 = load i32, i32* %restrictp, align 4
  %cmp1151 = icmp sgt i32 %471, 1
  br i1 %cmp1151, label %land.lhs.true.1153, label %if.end.1156

land.lhs.true.1153:                               ; preds = %if.end.1150
  %472 = load i32, i32* @flag_isoc99, align 4
  %tobool1154 = icmp ne i32 %472, 0
  br i1 %tobool1154, label %if.end.1156, label %if.then.1155

if.then.1155:                                     ; preds = %land.lhs.true.1153
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.312, i32 0, i32 0))
  br label %if.end.1156

if.end.1156:                                      ; preds = %if.then.1155, %land.lhs.true.1153, %if.end.1150
  %473 = load i32, i32* %constp, align 4
  %tobool1157 = icmp ne i32 %473, 0
  %cond1158 = select i1 %tobool1157, i32 1, i32 0
  %474 = load i32, i32* %restrictp, align 4
  %tobool1159 = icmp ne i32 %474, 0
  %cond1160 = select i1 %tobool1159, i32 4, i32 0
  %or1161 = or i32 %cond1158, %cond1160
  %475 = load i32, i32* %volatilep, align 4
  %tobool1162 = icmp ne i32 %475, 0
  %cond1163 = select i1 %tobool1162, i32 2, i32 0
  %or1164 = or i32 %or1161, %cond1163
  store i32 %or1164, i32* %type_quals, align 4
  br label %if.end.1165

if.end.1165:                                      ; preds = %if.end.1156, %if.end.1081
  %476 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %exp1166 = bitcast %union.tree_node* %476 to %struct.tree_exp*
  %operands1167 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp1166, i32 0, i32 2
  %arrayidx1168 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands1167, i32 0, i64 0
  %477 = load %union.tree_node*, %union.tree_node** %arrayidx1168, align 8
  store %union.tree_node* %477, %union.tree_node** %declarator.addr, align 8
  br label %if.end.1170

if.else.1169:                                     ; preds = %if.else.1058
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), i32 4868, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.grokdeclarator, i32 0, i32 0)) #7
  unreachable

if.end.1170:                                      ; preds = %if.end.1165
  br label %if.end.1171

if.end.1171:                                      ; preds = %if.end.1170, %for.end.1057
  br label %if.end.1172

if.end.1172:                                      ; preds = %if.end.1171, %if.end.960
  br label %if.end.1173

if.end.1173:                                      ; preds = %if.end.1172, %if.end.723
  br label %while.cond.641

while.end.1174:                                   ; preds = %land.end.650
  %478 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1175 = bitcast %union.tree_node* %478 to %struct.tree_common*
  %code1176 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1175, i32 0, i32 2
  %bf.load1177 = load i32, i32* %code1176, align 8
  %bf.clear1178 = and i32 %bf.load1177, 255
  %cmp1179 = icmp eq i32 %bf.clear1178, 18
  br i1 %cmp1179, label %land.lhs.true.1181, label %if.end.1196

land.lhs.true.1181:                               ; preds = %while.end.1174
  %479 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1182 = bitcast %union.tree_node* %479 to %struct.tree_type*
  %size1183 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1182, i32 0, i32 2
  %480 = load %union.tree_node*, %union.tree_node** %size1183, align 8
  %cmp1184 = icmp ne %union.tree_node* %480, null
  br i1 %cmp1184, label %land.lhs.true.1186, label %if.end.1196

land.lhs.true.1186:                               ; preds = %land.lhs.true.1181
  %481 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1187 = bitcast %union.tree_node* %481 to %struct.tree_type*
  %size1188 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1187, i32 0, i32 2
  %482 = load %union.tree_node*, %union.tree_node** %size1188, align 8
  %common1189 = bitcast %union.tree_node* %482 to %struct.tree_common*
  %public_flag1190 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1189, i32 0, i32 2
  %bf.load1191 = load i32, i32* %public_flag1190, align 8
  %bf.lshr1192 = lshr i32 %bf.load1191, 19
  %bf.clear1193 = and i32 %bf.lshr1192, 1
  %tobool1194 = icmp ne i32 %bf.clear1193, 0
  br i1 %tobool1194, label %if.then.1195, label %if.end.1196

if.then.1195:                                     ; preds = %land.lhs.true.1186
  %483 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.333, i32 0, i32 0), i8* %483)
  %484 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %484, %union.tree_node** %type, align 8
  br label %if.end.1196

if.end.1196:                                      ; preds = %if.then.1195, %land.lhs.true.1186, %land.lhs.true.1181, %while.end.1174
  %485 = load i32, i32* %specbits, align 4
  %and1197 = and i32 %485, 64
  %tobool1198 = icmp ne i32 %and1197, 0
  br i1 %tobool1198, label %if.then.1199, label %if.end.1238

if.then.1199:                                     ; preds = %if.end.1196
  %486 = load i32, i32* @pedantic, align 4
  %tobool1201 = icmp ne i32 %486, 0
  br i1 %tobool1201, label %land.lhs.true.1202, label %if.end.1212

land.lhs.true.1202:                               ; preds = %if.then.1199
  %487 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1203 = bitcast %union.tree_node* %487 to %struct.tree_common*
  %code1204 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1203, i32 0, i32 2
  %bf.load1205 = load i32, i32* %code1204, align 8
  %bf.clear1206 = and i32 %bf.load1205, 255
  %cmp1207 = icmp eq i32 %bf.clear1206, 23
  br i1 %cmp1207, label %land.lhs.true.1209, label %if.end.1212

land.lhs.true.1209:                               ; preds = %land.lhs.true.1202
  %488 = load i32, i32* %type_quals, align 4
  %tobool1210 = icmp ne i32 %488, 0
  br i1 %tobool1210, label %if.then.1211, label %if.end.1212

if.then.1211:                                     ; preds = %land.lhs.true.1209
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.340, i32 0, i32 0))
  br label %if.end.1212

if.end.1212:                                      ; preds = %if.then.1211, %land.lhs.true.1209, %land.lhs.true.1202, %if.then.1199
  %489 = load i32, i32* %type_quals, align 4
  %tobool1213 = icmp ne i32 %489, 0
  br i1 %tobool1213, label %if.then.1214, label %if.end.1216

if.then.1214:                                     ; preds = %if.end.1212
  %490 = load %union.tree_node*, %union.tree_node** %type, align 8
  %491 = load i32, i32* %type_quals, align 4
  %call1215 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %490, i32 %491)
  store %union.tree_node* %call1215, %union.tree_node** %type, align 8
  br label %if.end.1216

if.end.1216:                                      ; preds = %if.then.1214, %if.end.1212
  %492 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %493 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1217 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %492, %union.tree_node* %493)
  store %union.tree_node* %call1217, %union.tree_node** %decl1200, align 8
  %494 = load i32, i32* %specbits, align 4
  %and1218 = and i32 %494, 1024
  %tobool1219 = icmp ne i32 %and1218, 0
  br i1 %tobool1219, label %if.then.1230, label %lor.lhs.false.1220

lor.lhs.false.1220:                               ; preds = %if.end.1216
  %495 = load %union.tree_node*, %union.tree_node** %typedef_decl, align 8
  %tobool1221 = icmp ne %union.tree_node* %495, null
  br i1 %tobool1221, label %land.lhs.true.1222, label %if.end.1236

land.lhs.true.1222:                               ; preds = %lor.lhs.false.1220
  %496 = load %union.tree_node*, %union.tree_node** %typedef_decl, align 8
  %decl1223 = bitcast %union.tree_node* %496 to %struct.tree_decl*
  %lang_flag_11224 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1223, i32 0, i32 5
  %497 = bitcast i48* %lang_flag_11224 to i64*
  %bf.load1225 = load i64, i64* %497, align 8
  %bf.lshr1226 = lshr i64 %bf.load1225, 38
  %bf.clear1227 = and i64 %bf.lshr1226, 1
  %bf.cast1228 = trunc i64 %bf.clear1227 to i32
  %tobool1229 = icmp ne i32 %bf.cast1228, 0
  br i1 %tobool1229, label %if.then.1230, label %if.end.1236

if.then.1230:                                     ; preds = %land.lhs.true.1222, %if.end.1216
  %498 = load %union.tree_node*, %union.tree_node** %decl1200, align 8
  %decl1231 = bitcast %union.tree_node* %498 to %struct.tree_decl*
  %lang_flag_11232 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1231, i32 0, i32 5
  %499 = bitcast i48* %lang_flag_11232 to i64*
  %bf.load1233 = load i64, i64* %499, align 8
  %bf.clear1234 = and i64 %bf.load1233, -274877906945
  %bf.set1235 = or i64 %bf.clear1234, 274877906944
  store i64 %bf.set1235, i64* %499, align 8
  br label %if.end.1236

if.end.1236:                                      ; preds = %if.then.1230, %land.lhs.true.1222, %lor.lhs.false.1220
  %500 = load %union.tree_node*, %union.tree_node** %returned_attrs, align 8
  %call1237 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1200, %union.tree_node* %500, i32 0)
  %501 = load %union.tree_node*, %union.tree_node** %decl1200, align 8
  store %union.tree_node* %501, %union.tree_node** %retval
  br label %return

if.end.1238:                                      ; preds = %if.end.1196
  %502 = load %union.tree_node*, %union.tree_node** %type, align 8
  %cmp1239 = icmp ne %union.tree_node* %502, null
  br i1 %cmp1239, label %land.lhs.true.1241, label %if.end.1274

land.lhs.true.1241:                               ; preds = %if.end.1238
  %503 = load %union.tree_node*, %union.tree_node** %typedef_type, align 8
  %cmp1242 = icmp ne %union.tree_node* %503, null
  br i1 %cmp1242, label %land.lhs.true.1244, label %if.end.1274

land.lhs.true.1244:                               ; preds = %land.lhs.true.1241
  %504 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1245 = bitcast %union.tree_node* %504 to %struct.tree_common*
  %code1246 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1245, i32 0, i32 2
  %bf.load1247 = load i32, i32* %code1246, align 8
  %bf.clear1248 = and i32 %bf.load1247, 255
  %cmp1249 = icmp eq i32 %bf.clear1248, 18
  br i1 %cmp1249, label %land.lhs.true.1251, label %if.end.1274

land.lhs.true.1251:                               ; preds = %land.lhs.true.1244
  %505 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1252 = bitcast %union.tree_node* %505 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1252, i32 0, i32 1
  %506 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp1253 = icmp eq %union.tree_node* %506, null
  br i1 %cmp1253, label %land.lhs.true.1255, label %if.end.1274

land.lhs.true.1255:                               ; preds = %land.lhs.true.1251
  %507 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1256 = bitcast %union.tree_node* %507 to %struct.tree_type*
  %main_variant1257 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1256, i32 0, i32 15
  %508 = load %union.tree_node*, %union.tree_node** %main_variant1257, align 8
  %509 = load %union.tree_node*, %union.tree_node** %typedef_type, align 8
  %type1258 = bitcast %union.tree_node* %509 to %struct.tree_type*
  %main_variant1259 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1258, i32 0, i32 15
  %510 = load %union.tree_node*, %union.tree_node** %main_variant1259, align 8
  %cmp1260 = icmp eq %union.tree_node* %508, %510
  br i1 %cmp1260, label %if.then.1262, label %if.end.1274

if.then.1262:                                     ; preds = %land.lhs.true.1255
  %511 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1263 = bitcast %union.tree_node* %511 to %struct.tree_common*
  %type1264 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1263, i32 0, i32 1
  %512 = load %union.tree_node*, %union.tree_node** %type1264, align 8
  %call1265 = call %union.tree_node* @build_array_type(%union.tree_node* %512, %union.tree_node* null)
  store %union.tree_node* %call1265, %union.tree_node** %type, align 8
  %513 = load i32, i32* %size_varies, align 4
  %tobool1266 = icmp ne i32 %513, 0
  br i1 %tobool1266, label %if.then.1267, label %if.end.1273

if.then.1267:                                     ; preds = %if.then.1262
  %514 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1268 = bitcast %union.tree_node* %514 to %struct.tree_type*
  %lang_flag_11269 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1268, i32 0, i32 6
  %bf.load1270 = load i32, i32* %lang_flag_11269, align 4
  %bf.clear1271 = and i32 %bf.load1270, -33554433
  %bf.set1272 = or i32 %bf.clear1271, 33554432
  store i32 %bf.set1272, i32* %lang_flag_11269, align 4
  br label %if.end.1273

if.end.1273:                                      ; preds = %if.then.1267, %if.then.1262
  br label %if.end.1274

if.end.1274:                                      ; preds = %if.end.1273, %land.lhs.true.1255, %land.lhs.true.1251, %land.lhs.true.1244, %land.lhs.true.1241, %if.end.1238
  %515 = load i32, i32* %decl_context.addr, align 4
  %cmp1275 = icmp eq i32 %515, 5
  br i1 %cmp1275, label %if.then.1277, label %if.end.1295

if.then.1277:                                     ; preds = %if.end.1274
  %516 = load i32, i32* @pedantic, align 4
  %tobool1278 = icmp ne i32 %516, 0
  br i1 %tobool1278, label %land.lhs.true.1279, label %if.end.1289

land.lhs.true.1279:                               ; preds = %if.then.1277
  %517 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1280 = bitcast %union.tree_node* %517 to %struct.tree_common*
  %code1281 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1280, i32 0, i32 2
  %bf.load1282 = load i32, i32* %code1281, align 8
  %bf.clear1283 = and i32 %bf.load1282, 255
  %cmp1284 = icmp eq i32 %bf.clear1283, 23
  br i1 %cmp1284, label %land.lhs.true.1286, label %if.end.1289

land.lhs.true.1286:                               ; preds = %land.lhs.true.1279
  %518 = load i32, i32* %type_quals, align 4
  %tobool1287 = icmp ne i32 %518, 0
  br i1 %tobool1287, label %if.then.1288, label %if.end.1289

if.then.1288:                                     ; preds = %land.lhs.true.1286
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.342, i32 0, i32 0))
  br label %if.end.1289

if.end.1289:                                      ; preds = %if.then.1288, %land.lhs.true.1286, %land.lhs.true.1279, %if.then.1277
  %519 = load i32, i32* %type_quals, align 4
  %tobool1290 = icmp ne i32 %519, 0
  br i1 %tobool1290, label %if.then.1291, label %if.end.1293

if.then.1291:                                     ; preds = %if.end.1289
  %520 = load %union.tree_node*, %union.tree_node** %type, align 8
  %521 = load i32, i32* %type_quals, align 4
  %call1292 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %520, i32 %521)
  store %union.tree_node* %call1292, %union.tree_node** %type, align 8
  br label %if.end.1293

if.end.1293:                                      ; preds = %if.then.1291, %if.end.1289
  %522 = load %union.tree_node*, %union.tree_node** %returned_attrs, align 8
  %call1294 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %522, i32 0)
  %523 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %523, %union.tree_node** %retval
  br label %return

if.end.1295:                                      ; preds = %if.end.1274
  %524 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1296 = bitcast %union.tree_node* %524 to %struct.tree_common*
  %code1297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1296, i32 0, i32 2
  %bf.load1298 = load i32, i32* %code1297, align 8
  %bf.clear1299 = and i32 %bf.load1298, 255
  %cmp1300 = icmp eq i32 %bf.clear1299, 5
  br i1 %cmp1300, label %land.lhs.true.1302, label %if.end.1325

land.lhs.true.1302:                               ; preds = %if.end.1295
  %525 = load i32, i32* %decl_context.addr, align 4
  %cmp1303 = icmp ne i32 %525, 2
  br i1 %cmp1303, label %land.lhs.true.1305, label %if.end.1325

land.lhs.true.1305:                               ; preds = %land.lhs.true.1302
  %526 = load i32, i32* %decl_context.addr, align 4
  %cmp1306 = icmp ne i32 %526, 3
  br i1 %cmp1306, label %land.lhs.true.1308, label %if.then.1324

land.lhs.true.1308:                               ; preds = %land.lhs.true.1305
  %527 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1309 = bitcast %union.tree_node* %527 to %struct.tree_common*
  %code1310 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1309, i32 0, i32 2
  %bf.load1311 = load i32, i32* %code1310, align 8
  %bf.clear1312 = and i32 %bf.load1311, 255
  %cmp1313 = icmp ne i32 %bf.clear1312, 23
  br i1 %cmp1313, label %land.lhs.true.1315, label %if.then.1324

land.lhs.true.1315:                               ; preds = %land.lhs.true.1308
  %528 = load i32, i32* %specbits, align 4
  %and1316 = and i32 %528, 16
  %tobool1317 = icmp ne i32 %and1316, 0
  br i1 %tobool1317, label %if.end.1325, label %lor.lhs.false.1318

lor.lhs.false.1318:                               ; preds = %land.lhs.true.1315
  %529 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %530 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp1319 = icmp eq %struct.binding_level* %529, %530
  br i1 %cmp1319, label %land.lhs.true.1321, label %if.then.1324

land.lhs.true.1321:                               ; preds = %lor.lhs.false.1318
  %531 = load i32, i32* %specbits, align 4
  %and1322 = and i32 %531, 33
  %tobool1323 = icmp ne i32 %and1322, 0
  br i1 %tobool1323, label %if.then.1324, label %if.end.1325

if.then.1324:                                     ; preds = %land.lhs.true.1321, %lor.lhs.false.1318, %land.lhs.true.1308, %land.lhs.true.1305
  %532 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.343, i32 0, i32 0), i8* %532)
  %533 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %533, %union.tree_node** %type, align 8
  br label %if.end.1325

if.end.1325:                                      ; preds = %if.then.1324, %land.lhs.true.1321, %land.lhs.true.1315, %land.lhs.true.1302, %if.end.1295
  %534 = load i32, i32* %decl_context.addr, align 4
  %cmp1327 = icmp eq i32 %534, 2
  br i1 %cmp1327, label %if.then.1329, label %if.else.1456

if.then.1329:                                     ; preds = %if.end.1325
  %535 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1330 = bitcast %union.tree_node* %535 to %struct.tree_common*
  %code1331 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1330, i32 0, i32 2
  %bf.load1332 = load i32, i32* %code1331, align 8
  %bf.clear1333 = and i32 %bf.load1332, 255
  %cmp1334 = icmp eq i32 %bf.clear1333, 18
  br i1 %cmp1334, label %if.then.1336, label %if.else.1411

if.then.1336:                                     ; preds = %if.then.1329
  %536 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1337 = bitcast %union.tree_node* %536 to %struct.tree_common*
  %type1338 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1337, i32 0, i32 1
  %537 = load %union.tree_node*, %union.tree_node** %type1338, align 8
  store %union.tree_node* %537, %union.tree_node** %type, align 8
  %538 = load i32, i32* %type_quals, align 4
  %tobool1339 = icmp ne i32 %538, 0
  br i1 %tobool1339, label %if.then.1340, label %if.end.1342

if.then.1340:                                     ; preds = %if.then.1336
  %539 = load %union.tree_node*, %union.tree_node** %type, align 8
  %540 = load i32, i32* %type_quals, align 4
  %call1341 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %539, i32 %540)
  store %union.tree_node* %call1341, %union.tree_node** %type, align 8
  br label %if.end.1342

if.end.1342:                                      ; preds = %if.then.1340, %if.then.1336
  %541 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1343 = call %union.tree_node* @build_pointer_type(%union.tree_node* %541)
  store %union.tree_node* %call1343, %union.tree_node** %type, align 8
  store i32 0, i32* %type_quals, align 4
  %542 = load %union.tree_node*, %union.tree_node** %array_ptr_quals, align 8
  %tobool1344 = icmp ne %union.tree_node* %542, null
  br i1 %tobool1344, label %if.then.1345, label %if.end.1410

if.then.1345:                                     ; preds = %if.end.1342
  store i32 0, i32* %erred1346, align 4
  %543 = load %union.tree_node*, %union.tree_node** %array_ptr_quals, align 8
  call void @split_specs_attrs(%union.tree_node* %543, %union.tree_node** %new_ptr_quals, %union.tree_node** %new_ptr_attrs)
  %544 = load %union.tree_node*, %union.tree_node** %new_ptr_attrs, align 8
  %cmp1347 = icmp ne %union.tree_node* %544, null
  br i1 %cmp1347, label %if.then.1349, label %if.end.1350

if.then.1349:                                     ; preds = %if.then.1345
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.344, i32 0, i32 0))
  br label %if.end.1350

if.end.1350:                                      ; preds = %if.then.1349, %if.then.1345
  store i32 0, i32* %constp, align 4
  store i32 0, i32* %volatilep, align 4
  store i32 0, i32* %restrictp, align 4
  br label %for.cond.1351

for.cond.1351:                                    ; preds = %for.inc.1395, %if.end.1350
  %545 = load %union.tree_node*, %union.tree_node** %new_ptr_quals, align 8
  %tobool1352 = icmp ne %union.tree_node* %545, null
  br i1 %tobool1352, label %for.body.1353, label %for.end.1398

for.body.1353:                                    ; preds = %for.cond.1351
  %546 = load %union.tree_node*, %union.tree_node** %new_ptr_quals, align 8
  %list1355 = bitcast %union.tree_node* %546 to %struct.tree_list*
  %value1356 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1355, i32 0, i32 2
  %547 = load %union.tree_node*, %union.tree_node** %value1356, align 8
  store %union.tree_node* %547, %union.tree_node** %qualifier1354, align 8
  %548 = load %union.tree_node*, %union.tree_node** %qualifier1354, align 8
  %common1357 = bitcast %union.tree_node* %548 to %struct.tree_common*
  %lang_flag_01358 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1357, i32 0, i32 2
  %bf.load1359 = load i32, i32* %lang_flag_01358, align 8
  %bf.lshr1360 = lshr i32 %bf.load1359, 24
  %bf.clear1361 = and i32 %bf.lshr1360, 1
  %tobool1362 = icmp ne i32 %bf.clear1361, 0
  br i1 %tobool1362, label %if.then.1363, label %if.else.1392

if.then.1363:                                     ; preds = %for.body.1353
  %549 = load %union.tree_node*, %union.tree_node** %qualifier1354, align 8
  %550 = bitcast %union.tree_node* %549 to %struct.c_common_identifier*
  %node1364 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %550, i32 0, i32 1
  %rid_code1365 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1364, i32 0, i32 3
  %551 = load i8, i8* %rid_code1365, align 1
  %conv1366 = zext i8 %551 to i32
  %cmp1367 = icmp eq i32 %conv1366, 3
  br i1 %cmp1367, label %if.then.1369, label %if.else.1371

if.then.1369:                                     ; preds = %if.then.1363
  %552 = load i32, i32* %constp, align 4
  %inc1370 = add nsw i32 %552, 1
  store i32 %inc1370, i32* %constp, align 4
  br label %if.end.1391

if.else.1371:                                     ; preds = %if.then.1363
  %553 = load %union.tree_node*, %union.tree_node** %qualifier1354, align 8
  %554 = bitcast %union.tree_node* %553 to %struct.c_common_identifier*
  %node1372 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %554, i32 0, i32 1
  %rid_code1373 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1372, i32 0, i32 3
  %555 = load i8, i8* %rid_code1373, align 1
  %conv1374 = zext i8 %555 to i32
  %cmp1375 = icmp eq i32 %conv1374, 9
  br i1 %cmp1375, label %if.then.1377, label %if.else.1379

if.then.1377:                                     ; preds = %if.else.1371
  %556 = load i32, i32* %volatilep, align 4
  %inc1378 = add nsw i32 %556, 1
  store i32 %inc1378, i32* %volatilep, align 4
  br label %if.end.1390

if.else.1379:                                     ; preds = %if.else.1371
  %557 = load %union.tree_node*, %union.tree_node** %qualifier1354, align 8
  %558 = bitcast %union.tree_node* %557 to %struct.c_common_identifier*
  %node1380 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %558, i32 0, i32 1
  %rid_code1381 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %node1380, i32 0, i32 3
  %559 = load i8, i8* %rid_code1381, align 1
  %conv1382 = zext i8 %559 to i32
  %cmp1383 = icmp eq i32 %conv1382, 12
  br i1 %cmp1383, label %if.then.1385, label %if.else.1387

if.then.1385:                                     ; preds = %if.else.1379
  %560 = load i32, i32* %restrictp, align 4
  %inc1386 = add nsw i32 %560, 1
  store i32 %inc1386, i32* %restrictp, align 4
  br label %if.end.1389

if.else.1387:                                     ; preds = %if.else.1379
  %561 = load i32, i32* %erred1346, align 4
  %inc1388 = add nsw i32 %561, 1
  store i32 %inc1388, i32* %erred1346, align 4
  br label %if.end.1389

if.end.1389:                                      ; preds = %if.else.1387, %if.then.1385
  br label %if.end.1390

if.end.1390:                                      ; preds = %if.end.1389, %if.then.1377
  br label %if.end.1391

if.end.1391:                                      ; preds = %if.end.1390, %if.then.1369
  br label %if.end.1394

if.else.1392:                                     ; preds = %for.body.1353
  %562 = load i32, i32* %erred1346, align 4
  %inc1393 = add nsw i32 %562, 1
  store i32 %inc1393, i32* %erred1346, align 4
  br label %if.end.1394

if.end.1394:                                      ; preds = %if.else.1392, %if.end.1391
  br label %for.inc.1395

for.inc.1395:                                     ; preds = %if.end.1394
  %563 = load %union.tree_node*, %union.tree_node** %new_ptr_quals, align 8
  %common1396 = bitcast %union.tree_node* %563 to %struct.tree_common*
  %chain1397 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1396, i32 0, i32 0
  %564 = load %union.tree_node*, %union.tree_node** %chain1397, align 8
  store %union.tree_node* %564, %union.tree_node** %new_ptr_quals, align 8
  br label %for.cond.1351

for.end.1398:                                     ; preds = %for.cond.1351
  %565 = load i32, i32* %erred1346, align 4
  %tobool1399 = icmp ne i32 %565, 0
  br i1 %tobool1399, label %if.then.1400, label %if.end.1401

if.then.1400:                                     ; preds = %for.end.1398
  call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.345, i32 0, i32 0))
  br label %if.end.1401

if.end.1401:                                      ; preds = %if.then.1400, %for.end.1398
  %566 = load i32, i32* %constp, align 4
  %tobool1402 = icmp ne i32 %566, 0
  %cond1403 = select i1 %tobool1402, i32 1, i32 0
  %567 = load i32, i32* %restrictp, align 4
  %tobool1404 = icmp ne i32 %567, 0
  %cond1405 = select i1 %tobool1404, i32 4, i32 0
  %or1406 = or i32 %cond1403, %cond1405
  %568 = load i32, i32* %volatilep, align 4
  %tobool1407 = icmp ne i32 %568, 0
  %cond1408 = select i1 %tobool1407, i32 2, i32 0
  %or1409 = or i32 %or1406, %cond1408
  store i32 %or1409, i32* %type_quals, align 4
  br label %if.end.1410

if.end.1410:                                      ; preds = %if.end.1401, %if.end.1342
  store i32 0, i32* %size_varies, align 4
  br label %if.end.1435

if.else.1411:                                     ; preds = %if.then.1329
  %569 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1412 = bitcast %union.tree_node* %569 to %struct.tree_common*
  %code1413 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1412, i32 0, i32 2
  %bf.load1414 = load i32, i32* %code1413, align 8
  %bf.clear1415 = and i32 %bf.load1414, 255
  %cmp1416 = icmp eq i32 %bf.clear1415, 23
  br i1 %cmp1416, label %if.then.1418, label %if.else.1429

if.then.1418:                                     ; preds = %if.else.1411
  %570 = load i32, i32* @pedantic, align 4
  %tobool1419 = icmp ne i32 %570, 0
  br i1 %tobool1419, label %land.lhs.true.1420, label %if.end.1423

land.lhs.true.1420:                               ; preds = %if.then.1418
  %571 = load i32, i32* %type_quals, align 4
  %tobool1421 = icmp ne i32 %571, 0
  br i1 %tobool1421, label %if.then.1422, label %if.end.1423

if.then.1422:                                     ; preds = %land.lhs.true.1420
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.340, i32 0, i32 0))
  br label %if.end.1423

if.end.1423:                                      ; preds = %if.then.1422, %land.lhs.true.1420, %if.then.1418
  %572 = load i32, i32* %type_quals, align 4
  %tobool1424 = icmp ne i32 %572, 0
  br i1 %tobool1424, label %if.then.1425, label %if.end.1427

if.then.1425:                                     ; preds = %if.end.1423
  %573 = load %union.tree_node*, %union.tree_node** %type, align 8
  %574 = load i32, i32* %type_quals, align 4
  %call1426 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %573, i32 %574)
  store %union.tree_node* %call1426, %union.tree_node** %type, align 8
  br label %if.end.1427

if.end.1427:                                      ; preds = %if.then.1425, %if.end.1423
  %575 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1428 = call %union.tree_node* @build_pointer_type(%union.tree_node* %575)
  store %union.tree_node* %call1428, %union.tree_node** %type, align 8
  store i32 0, i32* %type_quals, align 4
  br label %if.end.1434

if.else.1429:                                     ; preds = %if.else.1411
  %576 = load i32, i32* %type_quals, align 4
  %tobool1430 = icmp ne i32 %576, 0
  br i1 %tobool1430, label %if.then.1431, label %if.end.1433

if.then.1431:                                     ; preds = %if.else.1429
  %577 = load %union.tree_node*, %union.tree_node** %type, align 8
  %578 = load i32, i32* %type_quals, align 4
  %call1432 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %577, i32 %578)
  store %union.tree_node* %call1432, %union.tree_node** %type, align 8
  br label %if.end.1433

if.end.1433:                                      ; preds = %if.then.1431, %if.else.1429
  br label %if.end.1434

if.end.1434:                                      ; preds = %if.end.1433, %if.end.1427
  br label %if.end.1435

if.end.1435:                                      ; preds = %if.end.1434, %if.end.1410
  %579 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %579, %union.tree_node** %type_as_written, align 8
  %580 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %581 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1436 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %580, %union.tree_node* %581)
  store %union.tree_node* %call1436, %union.tree_node** %decl1326, align 8
  %582 = load i32, i32* %size_varies, align 4
  %tobool1437 = icmp ne i32 %582, 0
  br i1 %tobool1437, label %if.then.1438, label %if.end.1444

if.then.1438:                                     ; preds = %if.end.1435
  %583 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1439 = bitcast %union.tree_node* %583 to %struct.tree_decl*
  %lang_flag_01440 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1439, i32 0, i32 5
  %584 = bitcast i48* %lang_flag_01440 to i64*
  %bf.load1441 = load i64, i64* %584, align 8
  %bf.clear1442 = and i64 %bf.load1441, -137438953473
  %bf.set1443 = or i64 %bf.clear1442, 137438953472
  store i64 %bf.set1443, i64* %584, align 8
  br label %if.end.1444

if.end.1444:                                      ; preds = %if.then.1438, %if.end.1435
  %585 = load %union.tree_node*, %union.tree_node** %type, align 8
  %586 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp1445 = icmp eq %union.tree_node* %585, %586
  br i1 %cmp1445, label %if.then.1447, label %if.else.1448

if.then.1447:                                     ; preds = %if.end.1444
  %587 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %587, %union.tree_node** %promoted_type, align 8
  br label %if.end.1453

if.else.1448:                                     ; preds = %if.end.1444
  %588 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1449 = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %588)
  store %union.tree_node* %call1449, %union.tree_node** %promoted_type, align 8
  %589 = load %union.tree_node*, %union.tree_node** %promoted_type, align 8
  %tobool1450 = icmp ne %union.tree_node* %589, null
  br i1 %tobool1450, label %if.end.1452, label %if.then.1451

if.then.1451:                                     ; preds = %if.else.1448
  %590 = load %union.tree_node*, %union.tree_node** %type, align 8
  store %union.tree_node* %590, %union.tree_node** %promoted_type, align 8
  br label %if.end.1452

if.end.1452:                                      ; preds = %if.then.1451, %if.else.1448
  br label %if.end.1453

if.end.1453:                                      ; preds = %if.end.1452, %if.then.1447
  %591 = load %union.tree_node*, %union.tree_node** %promoted_type, align 8
  %592 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1454 = bitcast %union.tree_node* %592 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1454, i32 0, i32 12
  store %union.tree_node* %591, %union.tree_node** %initial, align 8
  %593 = load %union.tree_node*, %union.tree_node** %type_as_written, align 8
  %594 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1455 = bitcast %union.tree_node* %594 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1455, i32 0, i32 11
  store %union.tree_node* %593, %union.tree_node** %result, align 8
  br label %if.end.1765

if.else.1456:                                     ; preds = %if.end.1325
  %595 = load i32, i32* %decl_context.addr, align 4
  %cmp1457 = icmp eq i32 %595, 3
  br i1 %cmp1457, label %if.then.1459, label %if.else.1521

if.then.1459:                                     ; preds = %if.else.1456
  %596 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1460 = bitcast %union.tree_node* %596 to %struct.tree_common*
  %code1461 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1460, i32 0, i32 2
  %bf.load1462 = load i32, i32* %code1461, align 8
  %bf.clear1463 = and i32 %bf.load1462, 255
  %cmp1464 = icmp eq i32 %bf.clear1463, 23
  br i1 %cmp1464, label %if.then.1466, label %if.else.1468

if.then.1466:                                     ; preds = %if.then.1459
  %597 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.346, i32 0, i32 0), i8* %597)
  %598 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1467 = call %union.tree_node* @build_pointer_type(%union.tree_node* %598)
  store %union.tree_node* %call1467, %union.tree_node** %type, align 8
  br label %if.end.1491

if.else.1468:                                     ; preds = %if.then.1459
  %599 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1469 = bitcast %union.tree_node* %599 to %struct.tree_common*
  %code1470 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1469, i32 0, i32 2
  %bf.load1471 = load i32, i32* %code1470, align 8
  %bf.clear1472 = and i32 %bf.load1471, 255
  %cmp1473 = icmp ne i32 %bf.clear1472, 0
  br i1 %cmp1473, label %land.lhs.true.1475, label %if.end.1490

land.lhs.true.1475:                               ; preds = %if.else.1468
  %600 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1476 = bitcast %union.tree_node* %600 to %struct.tree_common*
  %code1477 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1476, i32 0, i32 2
  %bf.load1478 = load i32, i32* %code1477, align 8
  %bf.clear1479 = and i32 %bf.load1478, 255
  %cmp1480 = icmp eq i32 %bf.clear1479, 18
  br i1 %cmp1480, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.1475
  %601 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1482 = bitcast %union.tree_node* %601 to %struct.tree_common*
  %type1483 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1482, i32 0, i32 1
  %602 = load %union.tree_node*, %union.tree_node** %type1483, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.1475
  %603 = load %union.tree_node*, %union.tree_node** %type, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond1484 = phi %union.tree_node* [ %602, %cond.true ], [ %603, %cond.false ]
  %type1485 = bitcast %union.tree_node* %cond1484 to %struct.tree_type*
  %size1486 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1485, i32 0, i32 2
  %604 = load %union.tree_node*, %union.tree_node** %size1486, align 8
  %cmp1487 = icmp ne %union.tree_node* %604, null
  br i1 %cmp1487, label %if.end.1490, label %if.then.1489

if.then.1489:                                     ; preds = %cond.end
  %605 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.347, i32 0, i32 0), i8* %605)
  %606 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %606, %union.tree_node** %type, align 8
  br label %if.end.1490

if.end.1490:                                      ; preds = %if.then.1489, %cond.end, %if.else.1468
  br label %if.end.1491

if.end.1491:                                      ; preds = %if.end.1490, %if.then.1466
  %607 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1492 = bitcast %union.tree_node* %607 to %struct.tree_common*
  %code1493 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1492, i32 0, i32 2
  %bf.load1494 = load i32, i32* %code1493, align 8
  %bf.clear1495 = and i32 %bf.load1494, 255
  %cmp1496 = icmp eq i32 %bf.clear1495, 18
  br i1 %cmp1496, label %land.lhs.true.1498, label %if.end.1507

land.lhs.true.1498:                               ; preds = %if.end.1491
  %608 = load i32, i32* %type_quals, align 4
  %tobool1499 = icmp ne i32 %608, 0
  br i1 %tobool1499, label %if.then.1500, label %if.end.1507

if.then.1500:                                     ; preds = %land.lhs.true.1498
  %609 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1501 = bitcast %union.tree_node* %609 to %struct.tree_common*
  %type1502 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1501, i32 0, i32 1
  %610 = load %union.tree_node*, %union.tree_node** %type1502, align 8
  %611 = load i32, i32* %type_quals, align 4
  %call1503 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %610, i32 %611)
  %612 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1504 = bitcast %union.tree_node* %612 to %struct.tree_type*
  %values1505 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1504, i32 0, i32 1
  %613 = load %union.tree_node*, %union.tree_node** %values1505, align 8
  %call1506 = call %union.tree_node* @build_array_type(%union.tree_node* %call1503, %union.tree_node* %613)
  store %union.tree_node* %call1506, %union.tree_node** %type, align 8
  br label %if.end.1507

if.end.1507:                                      ; preds = %if.then.1500, %land.lhs.true.1498, %if.end.1491
  %614 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %615 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1508 = call %union.tree_node* @build_decl(i32 37, %union.tree_node* %614, %union.tree_node* %615)
  store %union.tree_node* %call1508, %union.tree_node** %decl1326, align 8
  %616 = load i32, i32* %bitfield, align 4
  %617 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1509 = bitcast %union.tree_node* %617 to %struct.tree_decl*
  %non_addressable = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1509, i32 0, i32 5
  %618 = bitcast i48* %non_addressable to i64*
  %619 = zext i32 %616 to i64
  %bf.load1510 = load i64, i64* %618, align 8
  %bf.value = and i64 %619, 1
  %bf.shl = shl i64 %bf.value, 34
  %bf.clear1511 = and i64 %bf.load1510, -17179869185
  %bf.set1512 = or i64 %bf.clear1511, %bf.shl
  store i64 %bf.set1512, i64* %618, align 8
  %bf.result.cast = trunc i64 %bf.value to i32
  %620 = load i32, i32* %size_varies, align 4
  %tobool1513 = icmp ne i32 %620, 0
  br i1 %tobool1513, label %if.then.1514, label %if.end.1520

if.then.1514:                                     ; preds = %if.end.1507
  %621 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1515 = bitcast %union.tree_node* %621 to %struct.tree_decl*
  %lang_flag_01516 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1515, i32 0, i32 5
  %622 = bitcast i48* %lang_flag_01516 to i64*
  %bf.load1517 = load i64, i64* %622, align 8
  %bf.clear1518 = and i64 %bf.load1517, -137438953473
  %bf.set1519 = or i64 %bf.clear1518, 137438953472
  store i64 %bf.set1519, i64* %622, align 8
  br label %if.end.1520

if.end.1520:                                      ; preds = %if.then.1514, %if.end.1507
  br label %if.end.1764

if.else.1521:                                     ; preds = %if.else.1456
  %623 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1522 = bitcast %union.tree_node* %623 to %struct.tree_common*
  %code1523 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1522, i32 0, i32 2
  %bf.load1524 = load i32, i32* %code1523, align 8
  %bf.clear1525 = and i32 %bf.load1524, 255
  %cmp1526 = icmp eq i32 %bf.clear1525, 23
  br i1 %cmp1526, label %if.then.1528, label %if.else.1656

if.then.1528:                                     ; preds = %if.else.1521
  %624 = load i32, i32* %specbits, align 4
  %and1529 = and i32 %624, 2048
  %tobool1530 = icmp ne i32 %and1529, 0
  br i1 %tobool1530, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.then.1528
  %625 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %626 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp1531 = icmp eq %struct.binding_level* %625, %626
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then.1528
  %627 = phi i1 [ true, %if.then.1528 ], [ %cmp1531, %lor.rhs ]
  %lor.ext = zext i1 %627 to i32
  store i32 %lor.ext, i32* %extern_ref, align 4
  %628 = load i32, i32* %specbits, align 4
  %and1533 = and i32 %628, 2048
  %tobool1534 = icmp ne i32 %and1533, 0
  br i1 %tobool1534, label %land.lhs.true.1535, label %if.end.1541

land.lhs.true.1535:                               ; preds = %lor.end
  %629 = load i32, i32* @pedantic, align 4
  %tobool1536 = icmp ne i32 %629, 0
  br i1 %tobool1536, label %if.then.1540, label %lor.lhs.false.1537

lor.lhs.false.1537:                               ; preds = %land.lhs.true.1535
  %630 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %631 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp1538 = icmp eq %struct.binding_level* %630, %631
  br i1 %cmp1538, label %if.then.1540, label %if.end.1541

if.then.1540:                                     ; preds = %lor.lhs.false.1537, %land.lhs.true.1535
  %632 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.348, i32 0, i32 0), i8* %632)
  br label %if.end.1541

if.end.1541:                                      ; preds = %if.then.1540, %lor.lhs.false.1537, %lor.end
  %633 = load i32, i32* %specbits, align 4
  %and1542 = and i32 %633, 32
  %tobool1543 = icmp ne i32 %and1542, 0
  br i1 %tobool1543, label %if.then.1544, label %if.end.1545

if.then.1544:                                     ; preds = %if.end.1541
  %634 = load i8*, i8** %name, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.348, i32 0, i32 0), i8* %634)
  br label %if.end.1545

if.end.1545:                                      ; preds = %if.then.1544, %if.end.1541
  %635 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %636 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp1546 = icmp ne %struct.binding_level* %635, %636
  br i1 %cmp1546, label %land.lhs.true.1548, label %if.end.1554

land.lhs.true.1548:                               ; preds = %if.end.1545
  %637 = load i32, i32* %specbits, align 4
  %and1549 = and i32 %637, 257
  %tobool1550 = icmp ne i32 %and1549, 0
  br i1 %tobool1550, label %land.lhs.true.1551, label %if.end.1554

land.lhs.true.1551:                               ; preds = %land.lhs.true.1548
  %638 = load i32, i32* @pedantic, align 4
  %tobool1552 = icmp ne i32 %638, 0
  br i1 %tobool1552, label %if.then.1553, label %if.end.1554

if.then.1553:                                     ; preds = %land.lhs.true.1551
  %639 = load i8*, i8** %name, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.348, i32 0, i32 0), i8* %639)
  br label %if.end.1554

if.end.1554:                                      ; preds = %if.then.1553, %land.lhs.true.1551, %land.lhs.true.1548, %if.end.1545
  %640 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %641 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1555 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %640, %union.tree_node* %641)
  store %union.tree_node* %call1555, %union.tree_node** %decl1326, align 8
  %642 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %643 = load %union.tree_node*, %union.tree_node** %decl_attr, align 8
  %call1556 = call %union.tree_node* @build_decl_attribute_variant(%union.tree_node* %642, %union.tree_node* %643)
  store %union.tree_node* %call1556, %union.tree_node** %decl1326, align 8
  %call1557 = call i8* @ggc_alloc_cleared(i64 16)
  %644 = bitcast i8* %call1557 to %struct.lang_decl*
  %645 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1558 = bitcast %union.tree_node* %645 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1558, i32 0, i32 24
  store %struct.lang_decl* %644, %struct.lang_decl** %lang_specific, align 8
  %646 = load i32, i32* @pedantic, align 4
  %tobool1559 = icmp ne i32 %646, 0
  br i1 %tobool1559, label %land.lhs.true.1560, label %if.end.1570

land.lhs.true.1560:                               ; preds = %if.end.1554
  %647 = load i32, i32* %type_quals, align 4
  %tobool1561 = icmp ne i32 %647, 0
  br i1 %tobool1561, label %land.lhs.true.1562, label %if.end.1570

land.lhs.true.1562:                               ; preds = %land.lhs.true.1560
  %648 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1563 = bitcast %union.tree_node* %648 to %struct.tree_decl*
  %in_system_header_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1563, i32 0, i32 5
  %649 = bitcast i48* %in_system_header_flag to i64*
  %bf.load1564 = load i64, i64* %649, align 8
  %bf.lshr1565 = lshr i64 %bf.load1564, 16
  %bf.clear1566 = and i64 %bf.lshr1565, 1
  %bf.cast1567 = trunc i64 %bf.clear1566 to i32
  %tobool1568 = icmp ne i32 %bf.cast1567, 0
  br i1 %tobool1568, label %if.end.1570, label %if.then.1569

if.then.1569:                                     ; preds = %land.lhs.true.1562
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.340, i32 0, i32 0))
  br label %if.end.1570

if.end.1570:                                      ; preds = %if.then.1569, %land.lhs.true.1562, %land.lhs.true.1560, %if.end.1554
  %650 = load i32, i32* %type_quals, align 4
  %and1571 = and i32 %650, 2
  %tobool1572 = icmp ne i32 %and1571, 0
  br i1 %tobool1572, label %land.lhs.true.1573, label %if.end.1585

land.lhs.true.1573:                               ; preds = %if.end.1570
  %651 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1574 = bitcast %union.tree_node* %651 to %struct.tree_common*
  %type1575 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1574, i32 0, i32 1
  %652 = load %union.tree_node*, %union.tree_node** %type1575, align 8
  %common1576 = bitcast %union.tree_node* %652 to %struct.tree_common*
  %type1577 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1576, i32 0, i32 1
  %653 = load %union.tree_node*, %union.tree_node** %type1577, align 8
  %common1578 = bitcast %union.tree_node* %653 to %struct.tree_common*
  %code1579 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1578, i32 0, i32 2
  %bf.load1580 = load i32, i32* %code1579, align 8
  %bf.clear1581 = and i32 %bf.load1580, 255
  %cmp1582 = icmp eq i32 %bf.clear1581, 5
  br i1 %cmp1582, label %if.end.1585, label %if.then.1584

if.then.1584:                                     ; preds = %land.lhs.true.1573
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.349, i32 0, i32 0))
  br label %if.end.1585

if.end.1585:                                      ; preds = %if.then.1584, %land.lhs.true.1573, %if.end.1570
  %654 = load i32, i32* %extern_ref, align 4
  %tobool1586 = icmp ne i32 %654, 0
  br i1 %tobool1586, label %if.then.1587, label %if.end.1592

if.then.1587:                                     ; preds = %if.end.1585
  %655 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1588 = bitcast %union.tree_node* %655 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1588, i32 0, i32 5
  %656 = bitcast i48* %external_flag to i64*
  %bf.load1589 = load i64, i64* %656, align 8
  %bf.clear1590 = and i64 %bf.load1589, -257
  %bf.set1591 = or i64 %bf.clear1590, 256
  store i64 %bf.set1591, i64* %656, align 8
  br label %if.end.1592

if.end.1592:                                      ; preds = %if.then.1587, %if.end.1585
  %657 = load i32, i32* %specbits, align 4
  %and1593 = and i32 %657, 2049
  %tobool1594 = icmp ne i32 %and1593, 0
  %lnot1595 = xor i1 %tobool1594, true
  %lnot.ext1596 = zext i1 %lnot1595 to i32
  %658 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1597 = bitcast %union.tree_node* %658 to %struct.tree_common*
  %public_flag1598 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1597, i32 0, i32 2
  %bf.load1599 = load i32, i32* %public_flag1598, align 8
  %bf.value1600 = and i32 %lnot.ext1596, 1
  %bf.shl1601 = shl i32 %bf.value1600, 19
  %bf.clear1602 = and i32 %bf.load1599, -524289
  %bf.set1603 = or i32 %bf.clear1602, %bf.shl1601
  store i32 %bf.set1603, i32* %public_flag1598, align 8
  %659 = load i32, i32* %defaulted_int, align 4
  %tobool1604 = icmp ne i32 %659, 0
  br i1 %tobool1604, label %if.then.1605, label %if.end.1611

if.then.1605:                                     ; preds = %if.end.1592
  %660 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1606 = bitcast %union.tree_node* %660 to %struct.tree_decl*
  %lang_flag_11607 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1606, i32 0, i32 5
  %661 = bitcast i48* %lang_flag_11607 to i64*
  %bf.load1608 = load i64, i64* %661, align 8
  %bf.clear1609 = and i64 %bf.load1608, -274877906945
  %bf.set1610 = or i64 %bf.clear1609, 274877906944
  store i64 %bf.set1610, i64* %661, align 8
  br label %if.end.1611

if.end.1611:                                      ; preds = %if.then.1605, %if.end.1592
  %662 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %663 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp1612 = icmp eq %union.tree_node* %662, %663
  br i1 %cmp1612, label %if.then.1614, label %if.else.1618

if.then.1614:                                     ; preds = %if.end.1611
  %664 = load i32, i32* %inlinep, align 4
  %tobool1615 = icmp ne i32 %664, 0
  br i1 %tobool1615, label %if.then.1616, label %if.end.1617

if.then.1616:                                     ; preds = %if.then.1614
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.350, i32 0, i32 0))
  br label %if.end.1617

if.end.1617:                                      ; preds = %if.then.1616, %if.then.1614
  br label %if.end.1655

if.else.1618:                                     ; preds = %if.end.1611
  %665 = load i32, i32* %inlinep, align 4
  %tobool1619 = icmp ne i32 %665, 0
  br i1 %tobool1619, label %if.then.1620, label %if.else.1637

if.then.1620:                                     ; preds = %if.else.1618
  %666 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1621 = bitcast %union.tree_node* %666 to %struct.tree_decl*
  %lang_specific1622 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1621, i32 0, i32 24
  %667 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1622, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %667, i32 0, i32 0
  %668 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load1623 = load i8, i8* %668, align 4
  %bf.clear1624 = and i8 %bf.load1623, -2
  %bf.set1625 = or i8 %bf.clear1624, 1
  store i8 %bf.set1625, i8* %668, align 4
  %669 = load i32, i32* %initialized.addr, align 4
  %tobool1626 = icmp ne i32 %669, 0
  br i1 %tobool1626, label %if.then.1627, label %if.end.1636

if.then.1627:                                     ; preds = %if.then.1620
  %670 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1628 = bitcast %union.tree_node* %670 to %struct.tree_decl*
  %inline_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1628, i32 0, i32 5
  %671 = bitcast i48* %inline_flag to i64*
  %bf.load1629 = load i64, i64* %671, align 8
  %bf.clear1630 = and i64 %bf.load1629, -2049
  %bf.set1631 = or i64 %bf.clear1630, 2048
  store i64 %bf.set1631, i64* %671, align 8
  %672 = load i32, i32* %specbits, align 4
  %and1632 = and i32 %672, 16
  %tobool1633 = icmp ne i32 %and1632, 0
  br i1 %tobool1633, label %if.then.1634, label %if.end.1635

if.then.1634:                                     ; preds = %if.then.1627
  store i32 1, i32* @current_extern_inline, align 4
  br label %if.end.1635

if.end.1635:                                      ; preds = %if.then.1634, %if.then.1627
  br label %if.end.1636

if.end.1636:                                      ; preds = %if.end.1635, %if.then.1620
  br label %if.end.1654

if.else.1637:                                     ; preds = %if.else.1618
  %673 = load i32, i32* @flag_inline_trees, align 4
  %cmp1638 = icmp eq i32 %673, 2
  br i1 %cmp1638, label %land.lhs.true.1640, label %if.end.1653

land.lhs.true.1640:                               ; preds = %if.else.1637
  %674 = load i32, i32* %initialized.addr, align 4
  %tobool1641 = icmp ne i32 %674, 0
  br i1 %tobool1641, label %if.then.1642, label %if.end.1653

if.then.1642:                                     ; preds = %land.lhs.true.1640
  %675 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1643 = bitcast %union.tree_node* %675 to %struct.tree_decl*
  %inline_flag1644 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1643, i32 0, i32 5
  %676 = bitcast i48* %inline_flag1644 to i64*
  %bf.load1645 = load i64, i64* %676, align 8
  %bf.clear1646 = and i64 %bf.load1645, -2049
  %bf.set1647 = or i64 %bf.clear1646, 2048
  store i64 %bf.set1647, i64* %676, align 8
  %677 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1648 = bitcast %union.tree_node* %677 to %struct.tree_decl*
  %lang_specific1649 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1648, i32 0, i32 24
  %678 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific1649, align 8
  %base1650 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %678, i32 0, i32 0
  %679 = bitcast %struct.c_lang_decl* %base1650 to i8*
  %bf.load1651 = load i8, i8* %679, align 4
  %bf.clear1652 = and i8 %bf.load1651, -2
  store i8 %bf.clear1652, i8* %679, align 4
  br label %if.end.1653

if.end.1653:                                      ; preds = %if.then.1642, %land.lhs.true.1640, %if.else.1637
  br label %if.end.1654

if.end.1654:                                      ; preds = %if.end.1653, %if.end.1636
  br label %if.end.1655

if.end.1655:                                      ; preds = %if.end.1654, %if.end.1617
  br label %if.end.1763

if.else.1656:                                     ; preds = %if.else.1521
  %680 = load i32, i32* %initialized.addr, align 4
  %tobool1658 = icmp ne i32 %680, 0
  br i1 %tobool1658, label %land.end.1662, label %land.rhs.1659

land.rhs.1659:                                    ; preds = %if.else.1656
  %681 = load i32, i32* %specbits, align 4
  %and1660 = and i32 %681, 16
  %tobool1661 = icmp ne i32 %and1660, 0
  br label %land.end.1662

land.end.1662:                                    ; preds = %land.rhs.1659, %if.else.1656
  %682 = phi i1 [ false, %if.else.1656 ], [ %tobool1661, %land.rhs.1659 ]
  %land.ext1663 = zext i1 %682 to i32
  store i32 %land.ext1663, i32* %extern_ref1657, align 4
  %683 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1664 = bitcast %union.tree_node* %683 to %struct.tree_common*
  %code1665 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1664, i32 0, i32 2
  %bf.load1666 = load i32, i32* %code1665, align 8
  %bf.clear1667 = and i32 %bf.load1666, 255
  %cmp1668 = icmp eq i32 %bf.clear1667, 18
  br i1 %cmp1668, label %land.lhs.true.1670, label %if.else.1682

land.lhs.true.1670:                               ; preds = %land.end.1662
  %684 = load i32, i32* %type_quals, align 4
  %tobool1671 = icmp ne i32 %684, 0
  br i1 %tobool1671, label %if.then.1672, label %if.else.1682

if.then.1672:                                     ; preds = %land.lhs.true.1670
  %685 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1673 = bitcast %union.tree_node* %685 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1673, i32 0, i32 7
  %686 = load i32, i32* %align, align 4
  store i32 %686, i32* %saved_align, align 4
  %687 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1674 = bitcast %union.tree_node* %687 to %struct.tree_common*
  %type1675 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1674, i32 0, i32 1
  %688 = load %union.tree_node*, %union.tree_node** %type1675, align 8
  %689 = load i32, i32* %type_quals, align 4
  %call1676 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %688, i32 %689)
  %690 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1677 = bitcast %union.tree_node* %690 to %struct.tree_type*
  %values1678 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1677, i32 0, i32 1
  %691 = load %union.tree_node*, %union.tree_node** %values1678, align 8
  %call1679 = call %union.tree_node* @build_array_type(%union.tree_node* %call1676, %union.tree_node* %691)
  store %union.tree_node* %call1679, %union.tree_node** %type, align 8
  %692 = load i32, i32* %saved_align, align 4
  %693 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type1680 = bitcast %union.tree_node* %693 to %struct.tree_type*
  %align1681 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1680, i32 0, i32 7
  store i32 %692, i32* %align1681, align 4
  br label %if.end.1687

if.else.1682:                                     ; preds = %land.lhs.true.1670, %land.end.1662
  %694 = load i32, i32* %type_quals, align 4
  %tobool1683 = icmp ne i32 %694, 0
  br i1 %tobool1683, label %if.then.1684, label %if.end.1686

if.then.1684:                                     ; preds = %if.else.1682
  %695 = load %union.tree_node*, %union.tree_node** %type, align 8
  %696 = load i32, i32* %type_quals, align 4
  %call1685 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %695, i32 %696)
  store %union.tree_node* %call1685, %union.tree_node** %type, align 8
  br label %if.end.1686

if.end.1686:                                      ; preds = %if.then.1684, %if.else.1682
  br label %if.end.1687

if.end.1687:                                      ; preds = %if.end.1686, %if.then.1672
  %697 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %698 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call1688 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* %697, %union.tree_node* %698)
  store %union.tree_node* %call1688, %union.tree_node** %decl1326, align 8
  %699 = load i32, i32* %size_varies, align 4
  %tobool1689 = icmp ne i32 %699, 0
  br i1 %tobool1689, label %if.then.1690, label %if.end.1696

if.then.1690:                                     ; preds = %if.end.1687
  %700 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1691 = bitcast %union.tree_node* %700 to %struct.tree_decl*
  %lang_flag_01692 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1691, i32 0, i32 5
  %701 = bitcast i48* %lang_flag_01692 to i64*
  %bf.load1693 = load i64, i64* %701, align 8
  %bf.clear1694 = and i64 %bf.load1693, -137438953473
  %bf.set1695 = or i64 %bf.clear1694, 137438953472
  store i64 %bf.set1695, i64* %701, align 8
  br label %if.end.1696

if.end.1696:                                      ; preds = %if.then.1690, %if.end.1687
  %702 = load i32, i32* %inlinep, align 4
  %tobool1697 = icmp ne i32 %702, 0
  br i1 %tobool1697, label %if.then.1698, label %if.end.1699

if.then.1698:                                     ; preds = %if.end.1696
  %703 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %703, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.351, i32 0, i32 0))
  br label %if.end.1699

if.end.1699:                                      ; preds = %if.then.1698, %if.end.1696
  %704 = load i32, i32* %extern_ref1657, align 4
  %705 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1700 = bitcast %union.tree_node* %705 to %struct.tree_decl*
  %external_flag1701 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1700, i32 0, i32 5
  %706 = bitcast i48* %external_flag1701 to i64*
  %707 = zext i32 %704 to i64
  %bf.load1702 = load i64, i64* %706, align 8
  %bf.value1703 = and i64 %707, 1
  %bf.shl1704 = shl i64 %bf.value1703, 8
  %bf.clear1705 = and i64 %bf.load1702, -257
  %bf.set1706 = or i64 %bf.clear1705, %bf.shl1704
  store i64 %bf.set1706, i64* %706, align 8
  %bf.result.cast1707 = trunc i64 %bf.value1703 to i32
  %708 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %709 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp1708 = icmp eq %struct.binding_level* %708, %709
  br i1 %cmp1708, label %if.then.1710, label %if.else.1738

if.then.1710:                                     ; preds = %if.end.1699
  %710 = load i32, i32* %specbits, align 4
  %and1711 = and i32 %710, 33
  %tobool1712 = icmp ne i32 %and1711, 0
  %lnot1713 = xor i1 %tobool1712, true
  %lnot.ext1714 = zext i1 %lnot1713 to i32
  %711 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1715 = bitcast %union.tree_node* %711 to %struct.tree_common*
  %public_flag1716 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1715, i32 0, i32 2
  %bf.load1717 = load i32, i32* %public_flag1716, align 8
  %bf.value1718 = and i32 %lnot.ext1714, 1
  %bf.shl1719 = shl i32 %bf.value1718, 19
  %bf.clear1720 = and i32 %bf.load1717, -524289
  %bf.set1721 = or i32 %bf.clear1720, %bf.shl1719
  store i32 %bf.set1721, i32* %public_flag1716, align 8
  %712 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1722 = bitcast %union.tree_node* %712 to %struct.tree_decl*
  %external_flag1723 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1722, i32 0, i32 5
  %713 = bitcast i48* %external_flag1723 to i64*
  %bf.load1724 = load i64, i64* %713, align 8
  %bf.lshr1725 = lshr i64 %bf.load1724, 8
  %bf.clear1726 = and i64 %bf.lshr1725, 1
  %bf.cast1727 = trunc i64 %bf.clear1726 to i32
  %tobool1728 = icmp ne i32 %bf.cast1727, 0
  %lnot1729 = xor i1 %tobool1728, true
  %lnot.ext1730 = zext i1 %lnot1729 to i32
  %714 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1731 = bitcast %union.tree_node* %714 to %struct.tree_common*
  %static_flag1732 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1731, i32 0, i32 2
  %bf.load1733 = load i32, i32* %static_flag1732, align 8
  %bf.value1734 = and i32 %lnot.ext1730, 1
  %bf.shl1735 = shl i32 %bf.value1734, 18
  %bf.clear1736 = and i32 %bf.load1733, -262145
  %bf.set1737 = or i32 %bf.clear1736, %bf.shl1735
  store i32 %bf.set1737, i32* %static_flag1732, align 8
  br label %if.end.1762

if.else.1738:                                     ; preds = %if.end.1699
  %715 = load i32, i32* %specbits, align 4
  %and1739 = and i32 %715, 1
  %cmp1740 = icmp ne i32 %and1739, 0
  %conv1741 = zext i1 %cmp1740 to i32
  %716 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1742 = bitcast %union.tree_node* %716 to %struct.tree_common*
  %static_flag1743 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1742, i32 0, i32 2
  %bf.load1744 = load i32, i32* %static_flag1743, align 8
  %bf.value1745 = and i32 %conv1741, 1
  %bf.shl1746 = shl i32 %bf.value1745, 18
  %bf.clear1747 = and i32 %bf.load1744, -262145
  %bf.set1748 = or i32 %bf.clear1747, %bf.shl1746
  store i32 %bf.set1748, i32* %static_flag1743, align 8
  %717 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1749 = bitcast %union.tree_node* %717 to %struct.tree_decl*
  %external_flag1750 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1749, i32 0, i32 5
  %718 = bitcast i48* %external_flag1750 to i64*
  %bf.load1751 = load i64, i64* %718, align 8
  %bf.lshr1752 = lshr i64 %bf.load1751, 8
  %bf.clear1753 = and i64 %bf.lshr1752, 1
  %bf.cast1754 = trunc i64 %bf.clear1753 to i32
  %719 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1755 = bitcast %union.tree_node* %719 to %struct.tree_common*
  %public_flag1756 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1755, i32 0, i32 2
  %bf.load1757 = load i32, i32* %public_flag1756, align 8
  %bf.value1758 = and i32 %bf.cast1754, 1
  %bf.shl1759 = shl i32 %bf.value1758, 19
  %bf.clear1760 = and i32 %bf.load1757, -524289
  %bf.set1761 = or i32 %bf.clear1760, %bf.shl1759
  store i32 %bf.set1761, i32* %public_flag1756, align 8
  br label %if.end.1762

if.end.1762:                                      ; preds = %if.else.1738, %if.then.1710
  br label %if.end.1763

if.end.1763:                                      ; preds = %if.end.1762, %if.end.1655
  br label %if.end.1764

if.end.1764:                                      ; preds = %if.end.1763, %if.end.1520
  br label %if.end.1765

if.end.1765:                                      ; preds = %if.end.1764, %if.end.1453
  %720 = load i32, i32* %specbits, align 4
  %and1766 = and i32 %720, 32
  %tobool1767 = icmp ne i32 %and1766, 0
  br i1 %tobool1767, label %if.then.1768, label %if.end.1773

if.then.1768:                                     ; preds = %if.end.1765
  %721 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %decl1769 = bitcast %union.tree_node* %721 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1769, i32 0, i32 5
  %722 = bitcast i48* %regdecl_flag to i64*
  %bf.load1770 = load i64, i64* %722, align 8
  %bf.clear1771 = and i64 %bf.load1770, -1025
  %bf.set1772 = or i64 %bf.clear1771, 1024
  store i64 %bf.set1772, i64* %722, align 8
  br label %if.end.1773

if.end.1773:                                      ; preds = %if.then.1768, %if.end.1765
  %723 = load i32, i32* %type_quals, align 4
  %724 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  call void @c_apply_type_quals_to_decl(i32 %723, %union.tree_node* %724)
  %725 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %common1774 = bitcast %union.tree_node* %725 to %struct.tree_common*
  %type1775 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1774, i32 0, i32 1
  %726 = load %union.tree_node*, %union.tree_node** %type1775, align 8
  %common1776 = bitcast %union.tree_node* %726 to %struct.tree_common*
  %lang_flag_2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1776, i32 0, i32 2
  %bf.load1777 = load i32, i32* %lang_flag_2, align 8
  %bf.lshr1778 = lshr i32 %bf.load1777, 26
  %bf.clear1779 = and i32 %bf.lshr1778, 1
  %tobool1780 = icmp ne i32 %bf.clear1779, 0
  br i1 %tobool1780, label %if.then.1781, label %if.end.1783

if.then.1781:                                     ; preds = %if.end.1773
  %727 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  %call1782 = call i32 @mark_addressable(%union.tree_node* %727)
  br label %if.end.1783

if.end.1783:                                      ; preds = %if.then.1781, %if.end.1773
  %728 = load %union.tree_node*, %union.tree_node** %returned_attrs, align 8
  %call1784 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1326, %union.tree_node* %728, i32 0)
  %729 = load %union.tree_node*, %union.tree_node** %decl1326, align 8
  store %union.tree_node* %729, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.1783, %if.end.1293, %if.end.1236, %if.then.15
  %730 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %730
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @groktypename_in_parm_context(%union.tree_node* %typename) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %typename.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %typename, %union.tree_node** %typename.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp ne i32 %bf.clear, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  store %union.tree_node* %1, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8
  %4 = load %union.tree_node*, %union.tree_node** %typename.addr, align 8
  %list1 = bitcast %union.tree_node* %4 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %call = call %union.tree_node* @grokdeclarator(%union.tree_node* %3, %union.tree_node* %5, i32 2, i32 0)
  store %union.tree_node* %call, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %6
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_decl(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %initialized, %union.tree_node* %attributes) #0 {
entry:
  %declarator.addr = alloca %union.tree_node*, align 8
  %declspecs.addr = alloca %union.tree_node*, align 8
  %initialized.addr = alloca i32, align 4
  %attributes.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  store %union.tree_node* %declarator, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  store i32 %initialized, i32* %initialized.addr, align 4
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8
  %call = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.169, i32 0, i32 0), %union.tree_node* %0)
  %tobool = icmp ne %union.tree_node* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* @deprecated_state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  %3 = load i32, i32* %initialized.addr, align 4
  %call1 = call %union.tree_node* @grokdeclarator(%union.tree_node* %1, %union.tree_node* %2, i32 0, i32 %3)
  store %union.tree_node* %call1, %union.tree_node** %decl, align 8
  store i32 0, i32* @deprecated_state, align 4
  %4 = load i32, i32* @warn_main, align 4
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp ne i32 %bf.clear, 30
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.7

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl4 = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4, i32 0, i32 8
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp5 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.lhs.true.3
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.170, i32 0, i32 0))
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %land.lhs.true.3, %land.lhs.true, %if.end
  %10 = load i32, i32* %initialized.addr, align 4
  %tobool8 = icmp ne i32 %10, 0
  br i1 %tobool8, label %if.then.9, label %if.end.89

if.then.9:                                        ; preds = %if.end.7
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common10 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load12 = load i32, i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  switch i32 %bf.clear13, label %sw.default [
    i32 33, label %sw.bb
    i32 30, label %sw.bb.21
    i32 35, label %sw.bb.27
  ]

sw.bb:                                            ; preds = %if.then.9
  %12 = load i32, i32* @pedantic, align 4
  %tobool14 = icmp ne i32 %12, 0
  br i1 %tobool14, label %if.then.17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %13 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  %call15 = call i32 @list_length(%union.tree_node* %13)
  %cmp16 = icmp sgt i32 %call15, 1
  br i1 %cmp16, label %if.then.17, label %if.end.20

if.then.17:                                       ; preds = %lor.lhs.false, %sw.bb
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl18 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %name19 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl18, i32 0, i32 8
  %15 = load %union.tree_node*, %union.tree_node** %name19, align 8
  %identifier = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %16 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.171, i32 0, i32 0), i8* %16)
  store i32 0, i32* %initialized.addr, align 4
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.17, %lor.lhs.false
  br label %sw.epilog

sw.bb.21:                                         ; preds = %if.then.9
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl22 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %name23 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl22, i32 0, i32 8
  %18 = load %union.tree_node*, %union.tree_node** %name23, align 8
  %identifier24 = bitcast %union.tree_node* %18 to %struct.tree_identifier*
  %id25 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier24, i32 0, i32 1
  %str26 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id25, i32 0, i32 1
  %19 = load i8*, i8** %str26, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.172, i32 0, i32 0), i8* %19)
  store i32 0, i32* %initialized.addr, align 4
  br label %sw.epilog

sw.bb.27:                                         ; preds = %if.then.9
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl28 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %name29 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl28, i32 0, i32 8
  %21 = load %union.tree_node*, %union.tree_node** %name29, align 8
  %identifier30 = bitcast %union.tree_node* %21 to %struct.tree_identifier*
  %id31 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier30, i32 0, i32 1
  %str32 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id31, i32 0, i32 1
  %22 = load i8*, i8** %str32, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.173, i32 0, i32 0), i8* %22)
  store i32 0, i32* %initialized.addr, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.9
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common33 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp34 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp34, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %sw.default
  store i32 0, i32* %initialized.addr, align 4
  br label %if.end.88

if.else:                                          ; preds = %sw.default
  %26 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common36 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type37, align 8
  %type38 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type38, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp39 = icmp ne %union.tree_node* %28, null
  br i1 %cmp39, label %if.then.40, label %if.else.57

if.then.40:                                       ; preds = %if.else
  %29 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common41 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 1
  %30 = load %union.tree_node*, %union.tree_node** %type42, align 8
  %type43 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %size44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i32 0, i32 2
  %31 = load %union.tree_node*, %union.tree_node** %size44, align 8
  %common45 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %code46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 2
  %bf.load47 = load i32, i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp ne i32 %bf.clear48, 25
  br i1 %cmp49, label %if.then.55, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %if.then.40
  %32 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl51 = bitcast %union.tree_node* %32 to %struct.tree_decl*
  %lang_flag_0 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl51, i32 0, i32 5
  %33 = bitcast i48* %lang_flag_0 to i64*
  %bf.load52 = load i64, i64* %33, align 8
  %bf.lshr = lshr i64 %bf.load52, 37
  %bf.clear53 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear53 to i32
  %tobool54 = icmp ne i32 %bf.cast, 0
  br i1 %tobool54, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %lor.lhs.false.50, %if.then.40
  call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.174, i32 0, i32 0))
  store i32 0, i32* %initialized.addr, align 4
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.55, %lor.lhs.false.50
  br label %if.end.87

if.else.57:                                       ; preds = %if.else
  %34 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common58 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %type59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 1
  %35 = load %union.tree_node*, %union.tree_node** %type59, align 8
  %common60 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %code61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 2
  %bf.load62 = load i32, i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp ne i32 %bf.clear63, 18
  br i1 %cmp64, label %if.then.65, label %if.else.71

if.then.65:                                       ; preds = %if.else.57
  %36 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl66 = bitcast %union.tree_node* %36 to %struct.tree_decl*
  %name67 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl66, i32 0, i32 8
  %37 = load %union.tree_node*, %union.tree_node** %name67, align 8
  %identifier68 = bitcast %union.tree_node* %37 to %struct.tree_identifier*
  %id69 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier68, i32 0, i32 1
  %str70 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id69, i32 0, i32 1
  %38 = load i8*, i8** %str70, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.175, i32 0, i32 0), i8* %38)
  store i32 0, i32* %initialized.addr, align 4
  br label %if.end.86

if.else.71:                                       ; preds = %if.else.57
  %39 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common72 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %type73 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common72, i32 0, i32 1
  %40 = load %union.tree_node*, %union.tree_node** %type73, align 8
  %common74 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type75 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common74, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type75, align 8
  %type76 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %size77 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type76, i32 0, i32 2
  %42 = load %union.tree_node*, %union.tree_node** %size77, align 8
  %cmp78 = icmp ne %union.tree_node* %42, null
  br i1 %cmp78, label %if.end.85, label %if.then.79

if.then.79:                                       ; preds = %if.else.71
  %43 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl80 = bitcast %union.tree_node* %43 to %struct.tree_decl*
  %name81 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl80, i32 0, i32 8
  %44 = load %union.tree_node*, %union.tree_node** %name81, align 8
  %identifier82 = bitcast %union.tree_node* %44 to %struct.tree_identifier*
  %id83 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier82, i32 0, i32 1
  %str84 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id83, i32 0, i32 1
  %45 = load i8*, i8** %str84, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.176, i32 0, i32 0), i8* %45)
  store i32 0, i32* %initialized.addr, align 4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.79, %if.else.71
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %if.then.65
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %if.end.56
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %if.then.35
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.88, %sw.bb.27, %sw.bb.21, %if.end.20
  br label %if.end.89

if.end.89:                                        ; preds = %sw.epilog, %if.end.7
  %46 = load i32, i32* %initialized.addr, align 4
  %tobool90 = icmp ne i32 %46, 0
  br i1 %tobool90, label %if.then.91, label %if.end.102

if.then.91:                                       ; preds = %if.end.89
  %47 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl92 = bitcast %union.tree_node* %47 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl92, i32 0, i32 5
  %48 = bitcast i48* %external_flag to i64*
  %bf.load93 = load i64, i64* %48, align 8
  %bf.clear94 = and i64 %bf.load93, -257
  store i64 %bf.clear94, i64* %48, align 8
  %49 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %50 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp95 = icmp eq %struct.binding_level* %49, %50
  br i1 %cmp95, label %if.then.96, label %if.end.100

if.then.96:                                       ; preds = %if.then.91
  %51 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common97 = bitcast %union.tree_node* %51 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common97, i32 0, i32 2
  %bf.load98 = load i32, i32* %static_flag, align 8
  %bf.clear99 = and i32 %bf.load98, -262145
  %bf.set = or i32 %bf.clear99, 262144
  store i32 %bf.set, i32* %static_flag, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.96, %if.then.91
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %53 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl101 = bitcast %union.tree_node* %53 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl101, i32 0, i32 12
  store %union.tree_node* %52, %union.tree_node** %initial, align 8
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.100, %if.end.89
  %54 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common103 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %code104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common103, i32 0, i32 2
  %bf.load105 = load i32, i32* %code104, align 8
  %bf.clear106 = and i32 %bf.load105, 255
  %cmp107 = icmp eq i32 %bf.clear106, 30
  br i1 %cmp107, label %if.then.108, label %if.end.113

if.then.108:                                      ; preds = %if.end.102
  %55 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %56 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common109 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %type110 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common109, i32 0, i32 1
  %57 = load %union.tree_node*, %union.tree_node** %type110, align 8
  %type111 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type111, i32 0, i32 1
  %58 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp112 = icmp ne %union.tree_node* %58, null
  %conv = zext i1 %cmp112 to i32
  call void @gen_aux_info_record(%union.tree_node* %55, i32 0, i32 0, i32 %conv)
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.108, %if.end.102
  %59 = load i32, i32* @flag_no_common, align 4
  %tobool114 = icmp ne i32 %59, 0
  br i1 %tobool114, label %lor.lhs.false.115, label %if.then.121

lor.lhs.false.115:                                ; preds = %if.end.113
  %60 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common116 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 2
  %bf.load117 = load i32, i32* %public_flag, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 19
  %bf.clear119 = and i32 %bf.lshr118, 1
  %tobool120 = icmp ne i32 %bf.clear119, 0
  br i1 %tobool120, label %if.end.126, label %if.then.121

if.then.121:                                      ; preds = %lor.lhs.false.115, %if.end.113
  %61 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl122 = bitcast %union.tree_node* %61 to %struct.tree_decl*
  %common_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl122, i32 0, i32 5
  %62 = bitcast i48* %common_flag to i64*
  %bf.load123 = load i64, i64* %62, align 8
  %bf.clear124 = and i64 %bf.load123, -131073
  %bf.set125 = or i64 %bf.clear124, 131072
  store i64 %bf.set125, i64* %62, align 8
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.121, %lor.lhs.false.115
  %63 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8
  %call127 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* %63, i32 0)
  %64 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %65 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp128 = icmp eq %struct.binding_level* %64, %65
  br i1 %cmp128, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.126
  %66 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @maybe_apply_pragma_weak(%union.tree_node* %66)
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.130, %if.end.126
  %67 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common132 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %code133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 2
  %bf.load134 = load i32, i32* %code133, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 30
  br i1 %cmp136, label %land.lhs.true.138, label %if.end.157

land.lhs.true.138:                                ; preds = %if.end.131
  %68 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl139 = bitcast %union.tree_node* %68 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl139, i32 0, i32 24
  %69 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %69, i32 0, i32 0
  %70 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load140 = load i8, i8* %70, align 4
  %bf.clear141 = and i8 %bf.load140, 1
  %bf.cast142 = zext i8 %bf.clear141 to i32
  %tobool143 = icmp ne i32 %bf.cast142, 0
  br i1 %tobool143, label %land.lhs.true.144, label %if.end.157

land.lhs.true.144:                                ; preds = %land.lhs.true.138
  %71 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl145 = bitcast %union.tree_node* %71 to %struct.tree_decl*
  %uninlinable = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl145, i32 0, i32 5
  %72 = bitcast i48* %uninlinable to i64*
  %bf.load146 = load i64, i64* %72, align 8
  %bf.lshr147 = lshr i64 %bf.load146, 36
  %bf.clear148 = and i64 %bf.lshr147, 1
  %bf.cast149 = trunc i64 %bf.clear148 to i32
  %tobool150 = icmp ne i32 %bf.cast149, 0
  br i1 %tobool150, label %land.lhs.true.151, label %if.end.157

land.lhs.true.151:                                ; preds = %land.lhs.true.144
  %73 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl152 = bitcast %union.tree_node* %73 to %struct.tree_decl*
  %attributes153 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl152, i32 0, i32 16
  %74 = load %union.tree_node*, %union.tree_node** %attributes153, align 8
  %call154 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %74)
  %tobool155 = icmp ne %union.tree_node* %call154, null
  br i1 %tobool155, label %if.then.156, label %if.end.157

if.then.156:                                      ; preds = %land.lhs.true.151
  %75 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %75, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.178, i32 0, i32 0))
  br label %if.end.157

if.end.157:                                       ; preds = %if.then.156, %land.lhs.true.151, %land.lhs.true.144, %land.lhs.true.138, %if.end.131
  %76 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call158 = call %union.tree_node* @pushdecl(%union.tree_node* %76)
  store %union.tree_node* %call158, %union.tree_node** %tem, align 8
  %77 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %78 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp159 = icmp ne %struct.binding_level* %77, %78
  br i1 %cmp159, label %land.lhs.true.161, label %if.end.198

land.lhs.true.161:                                ; preds = %if.end.157
  %79 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %decl162 = bitcast %union.tree_node* %79 to %struct.tree_decl*
  %rtl = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl162, i32 0, i32 17
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8
  %cmp163 = icmp ne %struct.rtx_def* %80, null
  br i1 %cmp163, label %if.end.198, label %land.lhs.true.165

land.lhs.true.165:                                ; preds = %land.lhs.true.161
  %81 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %decl166 = bitcast %union.tree_node* %81 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl166, i32 0, i32 9
  %82 = load %union.tree_node*, %union.tree_node** %context, align 8
  %tobool167 = icmp ne %union.tree_node* %82, null
  br i1 %tobool167, label %if.end.198, label %if.then.168

if.then.168:                                      ; preds = %land.lhs.true.165
  %83 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common169 = bitcast %union.tree_node* %83 to %struct.tree_common*
  %type170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common169, i32 0, i32 1
  %84 = load %union.tree_node*, %union.tree_node** %type170, align 8
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp171 = icmp ne %union.tree_node* %84, %85
  br i1 %cmp171, label %land.lhs.true.173, label %if.else.181

land.lhs.true.173:                                ; preds = %if.then.168
  %86 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common174 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type175 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common174, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type175, align 8
  %type176 = bitcast %union.tree_node* %87 to %struct.tree_type*
  %size177 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type176, i32 0, i32 2
  %88 = load %union.tree_node*, %union.tree_node** %size177, align 8
  %cmp178 = icmp ne %union.tree_node* %88, null
  br i1 %cmp178, label %if.then.180, label %if.else.181

if.then.180:                                      ; preds = %land.lhs.true.173
  %89 = load %union.tree_node*, %union.tree_node** %tem, align 8
  call void @expand_decl(%union.tree_node* %89)
  br label %if.end.197

if.else.181:                                      ; preds = %land.lhs.true.173, %if.then.168
  %90 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common182 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %type183 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common182, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %type183, align 8
  %common184 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %code185 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common184, i32 0, i32 2
  %bf.load186 = load i32, i32* %code185, align 8
  %bf.clear187 = and i32 %bf.load186, 255
  %cmp188 = icmp eq i32 %bf.clear187, 18
  br i1 %cmp188, label %land.lhs.true.190, label %if.end.196

land.lhs.true.190:                                ; preds = %if.else.181
  %92 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %decl191 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %initial192 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl191, i32 0, i32 12
  %93 = load %union.tree_node*, %union.tree_node** %initial192, align 8
  %cmp193 = icmp ne %union.tree_node* %93, null
  br i1 %cmp193, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %land.lhs.true.190
  %94 = load %union.tree_node*, %union.tree_node** %tem, align 8
  call void @expand_decl(%union.tree_node* %94)
  br label %if.end.196

if.end.196:                                       ; preds = %if.then.195, %land.lhs.true.190, %if.else.181
  br label %if.end.197

if.end.197:                                       ; preds = %if.end.196, %if.then.180
  br label %if.end.198

if.end.198:                                       ; preds = %if.end.197, %land.lhs.true.165, %land.lhs.true.161, %if.end.157
  %95 = load %union.tree_node*, %union.tree_node** %tem, align 8
  ret %union.tree_node* %95
}

declare %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) #1

declare i32 @list_length(%union.tree_node*) #1

declare void @maybe_apply_pragma_weak(%union.tree_node*) #1

declare void @expand_decl(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @finish_decl(%union.tree_node* %decl, %union.tree_node* %init, %union.tree_node* %asmspec_tree) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %init.addr = alloca %union.tree_node*, align 8
  %asmspec_tree.addr = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  %was_incomplete = alloca i32, align 4
  %asmspec = alloca i8*, align 8
  %do_default = alloca i32, align 4
  %failure = alloca i32, align 4
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  store %union.tree_node* %init, %union.tree_node** %init.addr, align 8
  store %union.tree_node* %asmspec_tree, %union.tree_node** %asmspec_tree.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8
  store %union.tree_node* %1, %union.tree_node** %type, align 8
  %2 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl2 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %size = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 4
  %3 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp = icmp eq %union.tree_node* %3, null
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %was_incomplete, align 4
  store i8* null, i8** %asmspec, align 8
  %4 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %5 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp3 = icmp eq %struct.binding_level* %4, %5
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %7 = load %union.tree_node*, %union.tree_node** %asmspec_tree.addr, align 8
  %call = call %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node* %6, %union.tree_node* %7)
  store %union.tree_node* %call, %union.tree_node** %asmspec_tree.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %union.tree_node*, %union.tree_node** %asmspec_tree.addr, align 8
  %tobool = icmp ne %union.tree_node* %8, null
  br i1 %tobool, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** %asmspec_tree.addr, align 8
  %string = bitcast %union.tree_node* %9 to %struct.tree_string*
  %pointer = getelementptr inbounds %struct.tree_string, %struct.tree_string* %string, i32 0, i32 3
  %10 = load i8*, i8** %pointer, align 8
  store i8* %10, i8** %asmspec, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end
  %11 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %cmp7 = icmp ne %union.tree_node* %11, null
  br i1 %cmp7, label %land.lhs.true, label %if.end.13

land.lhs.true:                                    ; preds = %if.end.6
  %12 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl9 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl9, i32 0, i32 12
  %13 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp10 = icmp eq %union.tree_node* %13, null
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %land.lhs.true
  store %union.tree_node* null, %union.tree_node** %init.addr, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.12, %land.lhs.true, %if.end.6
  %14 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common14 = bitcast %union.tree_node* %14 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp15 = icmp eq i32 %bf.clear, 35
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  store %union.tree_node* null, %union.tree_node** %init.addr, align 8
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.17, %if.end.13
  %15 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %tobool19 = icmp ne %union.tree_node* %15, null
  br i1 %tobool19, label %if.then.20, label %if.end.35

if.then.20:                                       ; preds = %if.end.18
  %16 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common21 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 2
  %bf.load23 = load i32, i32* %code22, align 8
  %bf.clear24 = and i32 %bf.load23, 255
  %cmp25 = icmp ne i32 %bf.clear24, 33
  br i1 %cmp25, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %if.then.20
  %17 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  call void @store_init_value(%union.tree_node* %17, %union.tree_node* %18)
  br label %if.end.34

if.else:                                          ; preds = %if.then.20
  %19 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  %common28 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type29, align 8
  %21 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common30 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  store %union.tree_node* %20, %union.tree_node** %type31, align 8
  store %union.tree_node* null, %union.tree_node** %init.addr, align 8
  %22 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl32 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %initial33 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl32, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.else, %if.then.27
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.end.18
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common36 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %code37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 2
  %bf.load38 = load i32, i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 18
  br i1 %cmp40, label %land.lhs.true.42, label %if.end.125

land.lhs.true.42:                                 ; preds = %if.end.35
  %24 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type43 = bitcast %union.tree_node* %24 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp44 = icmp eq %union.tree_node* %25, null
  br i1 %cmp44, label %land.lhs.true.46, label %if.end.125

land.lhs.true.46:                                 ; preds = %land.lhs.true.42
  %26 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common47 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %code48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 2
  %bf.load49 = load i32, i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp ne i32 %bf.clear50, 33
  br i1 %cmp51, label %if.then.53, label %if.end.125

if.then.53:                                       ; preds = %land.lhs.true.46
  %27 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common54 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load55 = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load55, 18
  %bf.clear56 = and i32 %bf.lshr, 1
  %tobool57 = icmp ne i32 %bf.clear56, 0
  br i1 %tobool57, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.53
  %28 = load i32, i32* @pedantic, align 4
  %tobool58 = icmp ne i32 %28, 0
  br i1 %tobool58, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.true
  %29 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common59 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common59, i32 0, i32 2
  %bf.load60 = load i32, i32* %public_flag, align 8
  %bf.lshr61 = lshr i32 %bf.load60, 19
  %bf.clear62 = and i32 %bf.lshr61, 1
  %tobool63 = icmp ne i32 %bf.clear62, 0
  %lnot = xor i1 %tobool63, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.true
  %30 = phi i1 [ false, %cond.true ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %30 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then.53
  %31 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl64 = bitcast %union.tree_node* %31 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl64, i32 0, i32 5
  %32 = bitcast i48* %external_flag to i64*
  %bf.load65 = load i64, i64* %32, align 8
  %bf.lshr66 = lshr i64 %bf.load65, 8
  %bf.clear67 = and i64 %bf.lshr66, 1
  %bf.cast = trunc i64 %bf.clear67 to i32
  %tobool68 = icmp ne i32 %bf.cast, 0
  %lnot69 = xor i1 %tobool68, true
  %lnot.ext = zext i1 %lnot69 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %land.end
  %cond = phi i32 [ %land.ext, %land.end ], [ %lnot.ext, %cond.false ]
  store i32 %cond, i32* %do_default, align 4
  %33 = load %union.tree_node*, %union.tree_node** %type, align 8
  %34 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl70 = bitcast %union.tree_node* %34 to %struct.tree_decl*
  %initial71 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl70, i32 0, i32 12
  %35 = load %union.tree_node*, %union.tree_node** %initial71, align 8
  %36 = load i32, i32* %do_default, align 4
  %call72 = call i32 @complete_array_type(%union.tree_node* %33, %union.tree_node* %35, i32 %36)
  store i32 %call72, i32* %failure, align 4
  %37 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common73 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %38 = load %union.tree_node*, %union.tree_node** %type74, align 8
  store %union.tree_node* %38, %union.tree_node** %type, align 8
  %39 = load i32, i32* %failure, align 4
  %cmp75 = icmp eq i32 %39, 1
  br i1 %cmp75, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %cond.end
  %40 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %40, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.179, i32 0, i32 0))
  br label %if.end.124

if.else.78:                                       ; preds = %cond.end
  %41 = load i32, i32* %failure, align 4
  %cmp79 = icmp eq i32 %41, 2
  br i1 %cmp79, label %if.then.81, label %if.else.107

if.then.81:                                       ; preds = %if.else.78
  %42 = load i32, i32* %do_default, align 4
  %tobool82 = icmp ne i32 %42, 0
  br i1 %tobool82, label %if.then.83, label %if.else.84

if.then.83:                                       ; preds = %if.then.81
  %43 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %43, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.180, i32 0, i32 0))
  br label %if.end.106

if.else.84:                                       ; preds = %if.then.81
  %44 = load i32, i32* @pedantic, align 4
  %tobool85 = icmp ne i32 %44, 0
  br i1 %tobool85, label %if.end.105, label %land.lhs.true.86

land.lhs.true.86:                                 ; preds = %if.else.84
  %45 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common87 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %static_flag88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %static_flag88, align 8
  %bf.lshr90 = lshr i32 %bf.load89, 18
  %bf.clear91 = and i32 %bf.lshr90, 1
  %tobool92 = icmp ne i32 %bf.clear91, 0
  br i1 %tobool92, label %land.lhs.true.93, label %if.end.105

land.lhs.true.93:                                 ; preds = %land.lhs.true.86
  %46 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common94 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %public_flag95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common94, i32 0, i32 2
  %bf.load96 = load i32, i32* %public_flag95, align 8
  %bf.lshr97 = lshr i32 %bf.load96, 19
  %bf.clear98 = and i32 %bf.lshr97, 1
  %tobool99 = icmp ne i32 %bf.clear98, 0
  br i1 %tobool99, label %if.end.105, label %if.then.100

if.then.100:                                      ; preds = %land.lhs.true.93
  %47 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl101 = bitcast %union.tree_node* %47 to %struct.tree_decl*
  %external_flag102 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl101, i32 0, i32 5
  %48 = bitcast i48* %external_flag102 to i64*
  %bf.load103 = load i64, i64* %48, align 8
  %bf.clear104 = and i64 %bf.load103, -257
  %bf.set = or i64 %bf.clear104, 256
  store i64 %bf.set, i64* %48, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.100, %land.lhs.true.93, %land.lhs.true.86, %if.else.84
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.then.83
  br label %if.end.123

if.else.107:                                      ; preds = %if.else.78
  %49 = load i32, i32* @pedantic, align 4
  %tobool108 = icmp ne i32 %49, 0
  br i1 %tobool108, label %land.lhs.true.109, label %if.end.122

land.lhs.true.109:                                ; preds = %if.else.107
  %50 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type110 = bitcast %union.tree_node* %50 to %struct.tree_type*
  %values111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %values111, align 8
  %cmp112 = icmp ne %union.tree_node* %51, null
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.122

land.lhs.true.114:                                ; preds = %land.lhs.true.109
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type115 = bitcast %union.tree_node* %52 to %struct.tree_type*
  %values116 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type115, i32 0, i32 1
  %53 = load %union.tree_node*, %union.tree_node** %values116, align 8
  %type117 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type117, i32 0, i32 13
  %54 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %call118 = call i32 @tree_int_cst_sgn(%union.tree_node* %54)
  %cmp119 = icmp slt i32 %call118, 0
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %land.lhs.true.114
  %55 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %55, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.181, i32 0, i32 0))
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.121, %land.lhs.true.114, %land.lhs.true.109, %if.else.107
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.end.106
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.then.77
  %56 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @layout_decl(%union.tree_node* %56, i32 0)
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %land.lhs.true.46, %land.lhs.true.42, %if.end.35
  %57 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common126 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %code127 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common126, i32 0, i32 2
  %bf.load128 = load i32, i32* %code127, align 8
  %bf.clear129 = and i32 %bf.load128, 255
  %cmp130 = icmp eq i32 %bf.clear129, 34
  br i1 %cmp130, label %if.then.132, label %if.end.233

if.then.132:                                      ; preds = %if.end.125
  %58 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl133 = bitcast %union.tree_node* %58 to %struct.tree_decl*
  %size134 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl133, i32 0, i32 4
  %59 = load %union.tree_node*, %union.tree_node** %size134, align 8
  %cmp135 = icmp eq %union.tree_node* %59, null
  br i1 %cmp135, label %land.lhs.true.137, label %if.end.150

land.lhs.true.137:                                ; preds = %if.then.132
  %60 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common138 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %61 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp140 = icmp ne %union.tree_node* %61, %62
  br i1 %cmp140, label %land.lhs.true.142, label %if.end.150

land.lhs.true.142:                                ; preds = %land.lhs.true.137
  %63 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common143 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type144 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common143, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type144, align 8
  %type145 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %size146 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type145, i32 0, i32 2
  %65 = load %union.tree_node*, %union.tree_node** %size146, align 8
  %cmp147 = icmp ne %union.tree_node* %65, null
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %land.lhs.true.142
  %66 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @layout_decl(%union.tree_node* %66, i32 0)
  br label %if.end.150

if.end.150:                                       ; preds = %if.then.149, %land.lhs.true.142, %land.lhs.true.137, %if.then.132
  %67 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl151 = bitcast %union.tree_node* %67 to %struct.tree_decl*
  %size152 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl151, i32 0, i32 4
  %68 = load %union.tree_node*, %union.tree_node** %size152, align 8
  %cmp153 = icmp eq %union.tree_node* %68, null
  br i1 %cmp153, label %land.lhs.true.155, label %if.end.186

land.lhs.true.155:                                ; preds = %if.end.150
  %69 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common156 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %type157 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common156, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %type157, align 8
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp158 = icmp ne %union.tree_node* %70, %71
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.186

land.lhs.true.160:                                ; preds = %land.lhs.true.155
  %72 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common161 = bitcast %union.tree_node* %72 to %struct.tree_common*
  %static_flag162 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common161, i32 0, i32 2
  %bf.load163 = load i32, i32* %static_flag162, align 8
  %bf.lshr164 = lshr i32 %bf.load163, 18
  %bf.clear165 = and i32 %bf.lshr164, 1
  %tobool166 = icmp ne i32 %bf.clear165, 0
  br i1 %tobool166, label %cond.true.167, label %cond.false.175

cond.true.167:                                    ; preds = %land.lhs.true.160
  %73 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl168 = bitcast %union.tree_node* %73 to %struct.tree_decl*
  %initial169 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl168, i32 0, i32 12
  %74 = load %union.tree_node*, %union.tree_node** %initial169, align 8
  %cmp170 = icmp ne %union.tree_node* %74, null
  br i1 %cmp170, label %if.then.183, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true.167
  %75 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl172 = bitcast %union.tree_node* %75 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl172, i32 0, i32 9
  %76 = load %union.tree_node*, %union.tree_node** %context, align 8
  %cmp173 = icmp ne %union.tree_node* %76, null
  br i1 %cmp173, label %if.then.183, label %if.end.186

cond.false.175:                                   ; preds = %land.lhs.true.160
  %77 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl176 = bitcast %union.tree_node* %77 to %struct.tree_decl*
  %external_flag177 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl176, i32 0, i32 5
  %78 = bitcast i48* %external_flag177 to i64*
  %bf.load178 = load i64, i64* %78, align 8
  %bf.lshr179 = lshr i64 %bf.load178, 8
  %bf.clear180 = and i64 %bf.lshr179, 1
  %bf.cast181 = trunc i64 %bf.clear180 to i32
  %tobool182 = icmp ne i32 %bf.cast181, 0
  br i1 %tobool182, label %if.end.186, label %if.then.183

if.then.183:                                      ; preds = %cond.false.175, %lor.lhs.false, %cond.true.167
  %79 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %79, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.182, i32 0, i32 0))
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %81 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common184 = bitcast %union.tree_node* %81 to %struct.tree_common*
  %type185 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common184, i32 0, i32 1
  store %union.tree_node* %80, %union.tree_node** %type185, align 8
  br label %if.end.186

if.end.186:                                       ; preds = %if.then.183, %cond.false.175, %lor.lhs.false, %land.lhs.true.155, %if.end.150
  %82 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl187 = bitcast %union.tree_node* %82 to %struct.tree_decl*
  %external_flag188 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl187, i32 0, i32 5
  %83 = bitcast i48* %external_flag188 to i64*
  %bf.load189 = load i64, i64* %83, align 8
  %bf.lshr190 = lshr i64 %bf.load189, 8
  %bf.clear191 = and i64 %bf.lshr190, 1
  %bf.cast192 = trunc i64 %bf.clear191 to i32
  %tobool193 = icmp ne i32 %bf.cast192, 0
  br i1 %tobool193, label %land.lhs.true.201, label %lor.lhs.false.194

lor.lhs.false.194:                                ; preds = %if.end.186
  %84 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common195 = bitcast %union.tree_node* %84 to %struct.tree_common*
  %static_flag196 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common195, i32 0, i32 2
  %bf.load197 = load i32, i32* %static_flag196, align 8
  %bf.lshr198 = lshr i32 %bf.load197, 18
  %bf.clear199 = and i32 %bf.lshr198, 1
  %tobool200 = icmp ne i32 %bf.clear199, 0
  br i1 %tobool200, label %land.lhs.true.201, label %if.end.220

land.lhs.true.201:                                ; preds = %lor.lhs.false.194, %if.end.186
  %85 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl202 = bitcast %union.tree_node* %85 to %struct.tree_decl*
  %size203 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl202, i32 0, i32 4
  %86 = load %union.tree_node*, %union.tree_node** %size203, align 8
  %cmp204 = icmp ne %union.tree_node* %86, null
  br i1 %cmp204, label %if.then.206, label %if.end.220

if.then.206:                                      ; preds = %land.lhs.true.201
  %87 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl207 = bitcast %union.tree_node* %87 to %struct.tree_decl*
  %size208 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl207, i32 0, i32 4
  %88 = load %union.tree_node*, %union.tree_node** %size208, align 8
  %common209 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %code210 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common209, i32 0, i32 2
  %bf.load211 = load i32, i32* %code210, align 8
  %bf.clear212 = and i32 %bf.load211, 255
  %cmp213 = icmp eq i32 %bf.clear212, 25
  br i1 %cmp213, label %if.then.215, label %if.else.218

if.then.215:                                      ; preds = %if.then.206
  %89 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl216 = bitcast %union.tree_node* %89 to %struct.tree_decl*
  %size217 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl216, i32 0, i32 4
  %90 = load %union.tree_node*, %union.tree_node** %size217, align 8
  call void @constant_expression_warning(%union.tree_node* %90)
  br label %if.end.219

if.else.218:                                      ; preds = %if.then.206
  %91 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %91, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.183, i32 0, i32 0))
  br label %if.end.219

if.end.219:                                       ; preds = %if.else.218, %if.then.215
  br label %if.end.220

if.end.220:                                       ; preds = %if.end.219, %land.lhs.true.201, %lor.lhs.false.194
  %92 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common221 = bitcast %union.tree_node* %92 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common221, i32 0, i32 2
  %bf.load222 = load i32, i32* %used_flag, align 8
  %bf.lshr223 = lshr i32 %bf.load222, 16
  %bf.clear224 = and i32 %bf.lshr223, 1
  %tobool225 = icmp ne i32 %bf.clear224, 0
  br i1 %tobool225, label %if.then.226, label %if.end.232

if.then.226:                                      ; preds = %if.end.220
  %93 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common227 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %used_flag228 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common227, i32 0, i32 2
  %bf.load229 = load i32, i32* %used_flag228, align 8
  %bf.clear230 = and i32 %bf.load229, -65537
  %bf.set231 = or i32 %bf.clear230, 65536
  store i32 %bf.set231, i32* %used_flag228, align 8
  br label %if.end.232

if.end.232:                                       ; preds = %if.then.226, %if.end.220
  br label %if.end.233

if.end.233:                                       ; preds = %if.end.232, %if.end.125
  %94 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common234 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %code235 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common234, i32 0, i32 2
  %bf.load236 = load i32, i32* %code235, align 8
  %bf.clear237 = and i32 %bf.load236, 255
  %cmp238 = icmp eq i32 %bf.clear237, 30
  br i1 %cmp238, label %land.lhs.true.240, label %if.end.249

land.lhs.true.240:                                ; preds = %if.end.233
  %95 = load i8*, i8** %asmspec, align 8
  %tobool241 = icmp ne i8* %95, null
  br i1 %tobool241, label %if.then.242, label %if.end.249

if.then.242:                                      ; preds = %land.lhs.true.240
  %96 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl243 = bitcast %union.tree_node* %96 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl243, i32 0, i32 5
  %97 = bitcast i48* %built_in_class to i64*
  %bf.load244 = load i64, i64* %97, align 8
  %bf.clear245 = and i64 %bf.load244, -1610612737
  store i64 %bf.clear245, i64* %97, align 8
  %98 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl246 = bitcast %union.tree_node* %98 to %struct.tree_decl*
  %rtl = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl246, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl, align 8
  %99 = load i8*, i8** %asmspec, align 8
  %call247 = call %union.tree_node* @get_identifier(i8* %99)
  %100 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl248 = bitcast %union.tree_node* %100 to %struct.tree_decl*
  %assembler_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl248, i32 0, i32 14
  store %union.tree_node* %call247, %union.tree_node** %assembler_name, align 8
  br label %if.end.249

if.end.249:                                       ; preds = %if.then.242, %land.lhs.true.240, %if.end.233
  %101 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common250 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %code251 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common250, i32 0, i32 2
  %bf.load252 = load i32, i32* %code251, align 8
  %bf.clear253 = and i32 %bf.load252, 255
  %cmp254 = icmp eq i32 %bf.clear253, 34
  br i1 %cmp254, label %if.then.263, label %lor.lhs.false.256

lor.lhs.false.256:                                ; preds = %if.end.249
  %102 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common257 = bitcast %union.tree_node* %102 to %struct.tree_common*
  %code258 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common257, i32 0, i32 2
  %bf.load259 = load i32, i32* %code258, align 8
  %bf.clear260 = and i32 %bf.load259, 255
  %cmp261 = icmp eq i32 %bf.clear260, 30
  br i1 %cmp261, label %if.then.263, label %if.end.385

if.then.263:                                      ; preds = %lor.lhs.false.256, %if.end.249
  %103 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %103)
  %104 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl264 = bitcast %union.tree_node* %104 to %struct.tree_decl*
  %context265 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl264, i32 0, i32 9
  %105 = load %union.tree_node*, %union.tree_node** %context265, align 8
  %tobool266 = icmp ne %union.tree_node* %105, null
  br i1 %tobool266, label %if.else.292, label %if.then.267

if.then.267:                                      ; preds = %if.then.263
  %106 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl268 = bitcast %union.tree_node* %106 to %struct.tree_decl*
  %initial269 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl268, i32 0, i32 12
  %107 = load %union.tree_node*, %union.tree_node** %initial269, align 8
  %cmp270 = icmp eq %union.tree_node* %107, null
  br i1 %cmp270, label %if.then.277, label %lor.lhs.false.272

lor.lhs.false.272:                                ; preds = %if.then.267
  %108 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl273 = bitcast %union.tree_node* %108 to %struct.tree_decl*
  %initial274 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl273, i32 0, i32 12
  %109 = load %union.tree_node*, %union.tree_node** %initial274, align 8
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp275 = icmp eq %union.tree_node* %109, %110
  br i1 %cmp275, label %if.then.277, label %if.end.282

if.then.277:                                      ; preds = %lor.lhs.false.272, %if.then.267
  %111 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl278 = bitcast %union.tree_node* %111 to %struct.tree_decl*
  %defer_output = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl278, i32 0, i32 5
  %112 = bitcast i48* %defer_output to i64*
  %bf.load279 = load i64, i64* %112, align 8
  %bf.clear280 = and i64 %bf.load279, -262145
  %bf.set281 = or i64 %bf.clear280, 262144
  store i64 %bf.set281, i64* %112, align 8
  br label %if.end.282

if.end.282:                                       ; preds = %if.then.277, %lor.lhs.false.272
  %113 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %114 = load i8*, i8** %asmspec, align 8
  %115 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl283 = bitcast %union.tree_node* %115 to %struct.tree_decl*
  %context284 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl283, i32 0, i32 9
  %116 = load %union.tree_node*, %union.tree_node** %context284, align 8
  %cmp285 = icmp eq %union.tree_node* %116, null
  br i1 %cmp285, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.282
  %117 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common287 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common287, i32 0, i32 2
  %bf.load288 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr289 = lshr i32 %bf.load288, 14
  %bf.clear290 = and i32 %bf.lshr289, 1
  %tobool291 = icmp ne i32 %bf.clear290, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.282
  %118 = phi i1 [ true, %if.end.282 ], [ %tobool291, %lor.rhs ]
  %lor.ext = zext i1 %118 to i32
  call void @rest_of_decl_compilation(%union.tree_node* %113, i8* %114, i32 %lor.ext, i32 0)
  br label %if.end.343

if.else.292:                                      ; preds = %if.then.263
  %119 = load i8*, i8** %asmspec, align 8
  %tobool293 = icmp ne i8* %119, null
  br i1 %tobool293, label %if.then.294, label %if.end.334

if.then.294:                                      ; preds = %if.else.292
  %120 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl295 = bitcast %union.tree_node* %120 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl295, i32 0, i32 5
  %121 = bitcast i48* %regdecl_flag to i64*
  %bf.load296 = load i64, i64* %121, align 8
  %bf.lshr297 = lshr i64 %bf.load296, 10
  %bf.clear298 = and i64 %bf.lshr297, 1
  %bf.cast299 = trunc i64 %bf.clear298 to i32
  %tobool300 = icmp ne i32 %bf.cast299, 0
  br i1 %tobool300, label %if.then.301, label %if.end.306

if.then.301:                                      ; preds = %if.then.294
  %122 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl302 = bitcast %union.tree_node* %122 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl302, i32 0, i32 5
  %123 = bitcast i48* %lang_flag_4 to i64*
  %bf.load303 = load i64, i64* %123, align 8
  %bf.clear304 = and i64 %bf.load303, -2199023255553
  %bf.set305 = or i64 %bf.clear304, 2199023255552
  store i64 %bf.set305, i64* %123, align 8
  br label %if.end.306

if.end.306:                                       ; preds = %if.then.301, %if.then.294
  %124 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common307 = bitcast %union.tree_node* %124 to %struct.tree_common*
  %code308 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common307, i32 0, i32 2
  %bf.load309 = load i32, i32* %code308, align 8
  %bf.clear310 = and i32 %bf.load309, 255
  %cmp311 = icmp eq i32 %bf.clear310, 34
  br i1 %cmp311, label %land.lhs.true.313, label %if.else.329

land.lhs.true.313:                                ; preds = %if.end.306
  %125 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl314 = bitcast %union.tree_node* %125 to %struct.tree_decl*
  %regdecl_flag315 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl314, i32 0, i32 5
  %126 = bitcast i48* %regdecl_flag315 to i64*
  %bf.load316 = load i64, i64* %126, align 8
  %bf.lshr317 = lshr i64 %bf.load316, 10
  %bf.clear318 = and i64 %bf.lshr317, 1
  %bf.cast319 = trunc i64 %bf.clear318 to i32
  %tobool320 = icmp ne i32 %bf.cast319, 0
  br i1 %tobool320, label %if.else.329, label %land.lhs.true.321

land.lhs.true.321:                                ; preds = %land.lhs.true.313
  %127 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common322 = bitcast %union.tree_node* %127 to %struct.tree_common*
  %static_flag323 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common322, i32 0, i32 2
  %bf.load324 = load i32, i32* %static_flag323, align 8
  %bf.lshr325 = lshr i32 %bf.load324, 18
  %bf.clear326 = and i32 %bf.lshr325, 1
  %tobool327 = icmp ne i32 %bf.clear326, 0
  br i1 %tobool327, label %if.else.329, label %if.then.328

if.then.328:                                      ; preds = %land.lhs.true.321
  %128 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.184, i32 0, i32 0))
  br label %if.end.333

if.else.329:                                      ; preds = %land.lhs.true.321, %land.lhs.true.313, %if.end.306
  %129 = load i8*, i8** %asmspec, align 8
  %call330 = call %union.tree_node* @get_identifier(i8* %129)
  %130 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl331 = bitcast %union.tree_node* %130 to %struct.tree_decl*
  %assembler_name332 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl331, i32 0, i32 14
  store %union.tree_node* %call330, %union.tree_node** %assembler_name332, align 8
  br label %if.end.333

if.end.333:                                       ; preds = %if.else.329, %if.then.328
  br label %if.end.334

if.end.334:                                       ; preds = %if.end.333, %if.else.292
  %131 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common335 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %code336 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common335, i32 0, i32 2
  %bf.load337 = load i32, i32* %code336, align 8
  %bf.clear338 = and i32 %bf.load337, 255
  %cmp339 = icmp ne i32 %bf.clear338, 30
  br i1 %cmp339, label %if.then.341, label %if.end.342

if.then.341:                                      ; preds = %if.end.334
  %132 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @add_decl_stmt(%union.tree_node* %132)
  br label %if.end.342

if.end.342:                                       ; preds = %if.then.341, %if.end.334
  br label %if.end.343

if.end.343:                                       ; preds = %if.end.342, %lor.end
  %133 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl344 = bitcast %union.tree_node* %133 to %struct.tree_decl*
  %context345 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl344, i32 0, i32 9
  %134 = load %union.tree_node*, %union.tree_node** %context345, align 8
  %cmp346 = icmp ne %union.tree_node* %134, null
  br i1 %cmp346, label %if.then.348, label %if.end.384

if.then.348:                                      ; preds = %if.end.343
  %135 = load i32, i32* %was_incomplete, align 4
  %tobool349 = icmp ne i32 %135, 0
  br i1 %tobool349, label %land.lhs.true.350, label %if.end.383

land.lhs.true.350:                                ; preds = %if.then.348
  %136 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common351 = bitcast %union.tree_node* %136 to %struct.tree_common*
  %static_flag352 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common351, i32 0, i32 2
  %bf.load353 = load i32, i32* %static_flag352, align 8
  %bf.lshr354 = lshr i32 %bf.load353, 18
  %bf.clear355 = and i32 %bf.lshr354, 1
  %tobool356 = icmp ne i32 %bf.clear355, 0
  br i1 %tobool356, label %if.end.383, label %land.lhs.true.357

land.lhs.true.357:                                ; preds = %land.lhs.true.350
  %137 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl358 = bitcast %union.tree_node* %137 to %struct.tree_decl*
  %external_flag359 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl358, i32 0, i32 5
  %138 = bitcast i48* %external_flag359 to i64*
  %bf.load360 = load i64, i64* %138, align 8
  %bf.lshr361 = lshr i64 %bf.load360, 8
  %bf.clear362 = and i64 %bf.lshr361, 1
  %bf.cast363 = trunc i64 %bf.clear362 to i32
  %tobool364 = icmp ne i32 %bf.cast363, 0
  br i1 %tobool364, label %if.end.383, label %if.then.365

if.then.365:                                      ; preds = %land.lhs.true.357
  %139 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common366 = bitcast %union.tree_node* %139 to %struct.tree_common*
  %used_flag367 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common366, i32 0, i32 2
  %bf.load368 = load i32, i32* %used_flag367, align 8
  %bf.lshr369 = lshr i32 %bf.load368, 16
  %bf.clear370 = and i32 %bf.lshr369, 1
  %140 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common371 = bitcast %union.tree_node* %140 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common371, i32 0, i32 2
  %bf.load372 = load i32, i32* %addressable_flag, align 8
  %bf.value = and i32 %bf.clear370, 1
  %bf.shl = shl i32 %bf.value, 10
  %bf.clear373 = and i32 %bf.load372, -1025
  %bf.set374 = or i32 %bf.clear373, %bf.shl
  store i32 %bf.set374, i32* %addressable_flag, align 8
  %141 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl375 = bitcast %union.tree_node* %141 to %struct.tree_decl*
  %size376 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl375, i32 0, i32 4
  %142 = load %union.tree_node*, %union.tree_node** %size376, align 8
  %cmp377 = icmp eq %union.tree_node* %142, null
  br i1 %cmp377, label %if.then.379, label %if.end.382

if.then.379:                                      ; preds = %if.then.365
  %143 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl380 = bitcast %union.tree_node* %143 to %struct.tree_decl*
  %initial381 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl380, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial381, align 8
  br label %if.end.382

if.end.382:                                       ; preds = %if.then.379, %if.then.365
  br label %if.end.383

if.end.383:                                       ; preds = %if.end.382, %land.lhs.true.357, %land.lhs.true.350, %if.then.348
  br label %if.end.384

if.end.384:                                       ; preds = %if.end.383, %if.end.343
  br label %if.end.385

if.end.385:                                       ; preds = %if.end.384, %lor.lhs.false.256
  %144 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %common386 = bitcast %union.tree_node* %144 to %struct.tree_common*
  %code387 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common386, i32 0, i32 2
  %bf.load388 = load i32, i32* %code387, align 8
  %bf.clear389 = and i32 %bf.load388, 255
  %cmp390 = icmp eq i32 %bf.clear389, 33
  br i1 %cmp390, label %if.then.392, label %if.end.397

if.then.392:                                      ; preds = %if.end.385
  %145 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %145)
  %146 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %147 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl393 = bitcast %union.tree_node* %147 to %struct.tree_decl*
  %context394 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl393, i32 0, i32 9
  %148 = load %union.tree_node*, %union.tree_node** %context394, align 8
  %cmp395 = icmp eq %union.tree_node* %148, null
  %conv396 = zext i1 %cmp395 to i32
  call void @rest_of_decl_compilation(%union.tree_node* %146, i8* null, i32 %conv396, i32 0)
  br label %if.end.397

if.end.397:                                       ; preds = %if.then.392, %if.end.385
  %149 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %150 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp398 = icmp eq %struct.binding_level* %149, %150
  br i1 %cmp398, label %if.then.400, label %if.end.402

if.then.400:                                      ; preds = %if.end.397
  %call401 = call %union.tree_node* @get_pending_sizes()
  br label %if.end.402

if.end.402:                                       ; preds = %if.then.400, %if.end.397
  ret void
}

declare %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node*, %union.tree_node*) #1

declare void @store_init_value(%union.tree_node*, %union.tree_node*) #1

declare i32 @tree_int_cst_sgn(%union.tree_node*) #1

declare void @constant_expression_warning(%union.tree_node*) #1

declare void @add_decl_stmt(%union.tree_node*) #1

declare %union.tree_node* @get_pending_sizes() #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @maybe_build_cleanup(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define void @push_parm_decl(%union.tree_node* %parm) #0 {
entry:
  %parm.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %old_immediate_size_expand = alloca i32, align 4
  store %union.tree_node* %parm, %union.tree_node** %parm.addr, align 8
  %0 = load i32, i32* @immediate_size_expand, align 4
  store i32 %0, i32* %old_immediate_size_expand, align 4
  store i32 0, i32* @immediate_size_expand, align 4
  %1 = load %union.tree_node*, %union.tree_node** %parm.addr, align 8
  %list = bitcast %union.tree_node* %1 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %list1 = bitcast %union.tree_node* %2 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8
  %4 = load %union.tree_node*, %union.tree_node** %parm.addr, align 8
  %list2 = bitcast %union.tree_node* %4 to %struct.tree_list*
  %purpose3 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %purpose3, align 8
  %list4 = bitcast %union.tree_node* %5 to %struct.tree_list*
  %purpose5 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list4, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %purpose5, align 8
  %call = call %union.tree_node* @grokdeclarator(%union.tree_node* %3, %union.tree_node* %6, i32 2, i32 0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %7 = load %union.tree_node*, %union.tree_node** %parm.addr, align 8
  %list6 = bitcast %union.tree_node* %7 to %struct.tree_list*
  %value7 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6, i32 0, i32 2
  %8 = load %union.tree_node*, %union.tree_node** %value7, align 8
  %call8 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* %8, i32 0)
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call9 = call %union.tree_node* @pushdecl(%union.tree_node* %9)
  store %union.tree_node* %call9, %union.tree_node** %decl, align 8
  %10 = load i32, i32* %old_immediate_size_expand, align 4
  store i32 %10, i32* @immediate_size_expand, align 4
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %12 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_order = getelementptr inbounds %struct.binding_level, %struct.binding_level* %12, i32 0, i32 12
  %13 = load %union.tree_node*, %union.tree_node** %parm_order, align 8
  %call10 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %11, %union.tree_node* %13)
  %14 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_order11 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %14, i32 0, i32 12
  store %union.tree_node* %call10, %union.tree_node** %parm_order11, align 8
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @finish_decl(%union.tree_node* %15, %union.tree_node* null, %union.tree_node* null)
  ret void
}

; Function Attrs: nounwind uwtable
define void @clear_parm_order() #0 {
entry:
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_order = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %parm_order, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_compound_literal(%union.tree_node* %type, %union.tree_node* %init) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %init.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %complit = alloca %union.tree_node*, align 8
  %stmt = alloca %union.tree_node*, align 8
  %failure = alloca i32, align 4
  %name = alloca i8*, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  store %union.tree_node* %init, %union.tree_node** %init.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call = call %union.tree_node* @build_decl(i32 34, %union.tree_node* null, %union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl1 = bitcast %union.tree_node* %1 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 5
  %2 = bitcast i48* %external_flag to i64*
  %bf.load = load i64, i64* %2, align 8
  %bf.clear = and i64 %bf.load, -257
  store i64 %bf.clear, i64* %2, align 8
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %3 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load2 = load i32, i32* %public_flag, align 8
  %bf.clear3 = and i32 %bf.load2, -524289
  store i32 %bf.clear3, i32* %public_flag, align 8
  %4 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %5 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %4, %5
  %conv = zext i1 %cmp to i32
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common4 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common4, i32 0, i32 2
  %bf.load5 = load i32, i32* %static_flag, align 8
  %bf.value = and i32 %conv, 1
  %bf.shl = shl i32 %bf.value, 18
  %bf.clear6 = and i32 %bf.load5, -262145
  %bf.set = or i32 %bf.clear6, %bf.shl
  store i32 %bf.set, i32* %static_flag, align 8
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl7 = bitcast %union.tree_node* %8 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7, i32 0, i32 9
  store %union.tree_node* %7, %union.tree_node** %context, align 8
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common8 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 2
  %bf.load9 = load i32, i32* %used_flag, align 8
  %bf.clear10 = and i32 %bf.load9, -65537
  %bf.set11 = or i32 %bf.clear10, 65536
  store i32 %bf.set11, i32* %used_flag, align 8
  %10 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common12 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 1
  store %union.tree_node* %10, %union.tree_node** %type13, align 8
  %12 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common14 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load15 = load i32, i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load15, 12
  %bf.clear16 = and i32 %bf.lshr, 1
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common17 = bitcast %union.tree_node* %13 to %struct.tree_common*
  %readonly_flag18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %readonly_flag18, align 8
  %bf.value20 = and i32 %bf.clear16, 1
  %bf.shl21 = shl i32 %bf.value20, 12
  %bf.clear22 = and i32 %bf.load19, -4097
  %bf.set23 = or i32 %bf.clear22, %bf.shl21
  store i32 %bf.set23, i32* %readonly_flag18, align 8
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %15 = load %union.tree_node*, %union.tree_node** %init.addr, align 8
  call void @store_init_value(%union.tree_node* %14, %union.tree_node* %15)
  %16 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %common24 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common24, i32 0, i32 2
  %bf.load25 = load i32, i32* %code, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 18
  br i1 %cmp27, label %land.lhs.true, label %if.end.35

land.lhs.true:                                    ; preds = %entry
  %17 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type29 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type29, i32 0, i32 2
  %18 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp30 = icmp ne %union.tree_node* %18, null
  br i1 %cmp30, label %if.end.35, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %19 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl32 = bitcast %union.tree_node* %20 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl32, i32 0, i32 12
  %21 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %call33 = call i32 @complete_array_type(%union.tree_node* %19, %union.tree_node* %21, i32 1)
  store i32 %call33, i32* %failure, align 4
  %22 = load i32, i32* %failure, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then.34, label %if.end

if.then.34:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), i32 3921, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.build_compound_literal, i32 0, i32 0)) #7
  unreachable

if.end:                                           ; preds = %if.then
  br label %if.end.35

if.end.35:                                        ; preds = %if.end, %land.lhs.true, %entry
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common36 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type37 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common36, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type37, align 8
  store %union.tree_node* %24, %union.tree_node** %type.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp38 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp38, label %if.then.44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.35
  %27 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %type40 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %size41 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type40, i32 0, i32 2
  %28 = load %union.tree_node*, %union.tree_node** %size41, align 8
  %cmp42 = icmp ne %union.tree_node* %28, null
  br i1 %cmp42, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %lor.lhs.false, %if.end.35
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  store %union.tree_node* %29, %union.tree_node** %retval
  br label %return

if.end.45:                                        ; preds = %lor.lhs.false
  %30 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call46 = call %union.tree_node* (i32, ...) @build_stmt(i32 154, %union.tree_node* %30)
  store %union.tree_node* %call46, %union.tree_node** %stmt, align 8
  %31 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common47 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 1
  %32 = load %union.tree_node*, %union.tree_node** %type48, align 8
  %33 = load %union.tree_node*, %union.tree_node** %stmt, align 8
  %call49 = call %union.tree_node* @build1(i32 170, %union.tree_node* %32, %union.tree_node* %33)
  store %union.tree_node* %call49, %union.tree_node** %complit, align 8
  %34 = load %union.tree_node*, %union.tree_node** %complit, align 8
  %common50 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %side_effects_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 2
  %bf.load51 = load i32, i32* %side_effects_flag, align 8
  %bf.clear52 = and i32 %bf.load51, -257
  %bf.set53 = or i32 %bf.clear52, 256
  store i32 %bf.set53, i32* %side_effects_flag, align 8
  %35 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @layout_decl(%union.tree_node* %35, i32 0)
  %36 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common54 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %static_flag55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 2
  %bf.load56 = load i32, i32* %static_flag55, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 18
  %bf.clear58 = and i32 %bf.lshr57, 1
  %tobool59 = icmp ne i32 %bf.clear58, 0
  br i1 %tobool59, label %if.then.60, label %if.end.78

if.then.60:                                       ; preds = %if.end.45
  %37 = alloca i8, i64 28
  store i8* %37, i8** %name, align 8
  %38 = load i8*, i8** %name, align 8
  %39 = load i32, i32* @var_labelno, align 4
  %call61 = call i32 (i8*, i8*, ...) @sprintf(i8* %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.187, i32 0, i32 0), i32 %39) #3
  %40 = load i32, i32* @var_labelno, align 4
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* @var_labelno, align 4
  %41 = load i8*, i8** %name, align 8
  %call62 = call %union.tree_node* @get_identifier(i8* %41)
  %42 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl63 = bitcast %union.tree_node* %42 to %struct.tree_decl*
  %name64 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl63, i32 0, i32 8
  store %union.tree_node* %call62, %union.tree_node** %name64, align 8
  %43 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl65 = bitcast %union.tree_node* %43 to %struct.tree_decl*
  %defer_output = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl65, i32 0, i32 5
  %44 = bitcast i48* %defer_output to i64*
  %bf.load66 = load i64, i64* %44, align 8
  %bf.clear67 = and i64 %bf.load66, -262145
  %bf.set68 = or i64 %bf.clear67, 262144
  store i64 %bf.set68, i64* %44, align 8
  %45 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl69 = bitcast %union.tree_node* %45 to %struct.tree_decl*
  %comdat_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl69, i32 0, i32 5
  %46 = bitcast i48* %comdat_flag to i64*
  %bf.load70 = load i64, i64* %46, align 8
  %bf.clear71 = and i64 %bf.load70, -67108865
  %bf.set72 = or i64 %bf.clear71, 67108864
  store i64 %bf.set72, i64* %46, align 8
  %47 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl73 = bitcast %union.tree_node* %47 to %struct.tree_decl*
  %artificial_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl73, i32 0, i32 5
  %48 = bitcast i48* %artificial_flag to i64*
  %bf.load74 = load i64, i64* %48, align 8
  %bf.clear75 = and i64 %bf.load74, -4194305
  %bf.set76 = or i64 %bf.clear75, 4194304
  store i64 %bf.set76, i64* %48, align 8
  %49 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call77 = call %union.tree_node* @pushdecl(%union.tree_node* %49)
  %50 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @rest_of_decl_compilation(%union.tree_node* %50, i8* null, i32 1, i32 0)
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.60, %if.end.45
  %51 = load %union.tree_node*, %union.tree_node** %complit, align 8
  store %union.tree_node* %51, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.78, %if.then.44
  %52 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %52
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

declare %union.tree_node* @build_stmt(i32, ...) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #5

declare i64 @int_size_in_bytes(%union.tree_node*) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

declare %union.tree_node* @build_index_type(%union.tree_node*) #1

declare void @layout_type(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @get_parm_info(i32 %void_at_end) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %void_at_end.addr = alloca i32, align 4
  %decl = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %types = alloca %union.tree_node*, align 8
  %erred = alloca i32, align 4
  %tags = alloca %union.tree_node*, align 8
  %parms = alloca %union.tree_node*, align 8
  %new_parms = alloca %union.tree_node*, align 8
  %order = alloca %union.tree_node*, align 8
  %next = alloca %union.tree_node*, align 8
  %type87 = alloca %union.tree_node*, align 8
  store i32 %void_at_end, i32* %void_at_end.addr, align 4
  store %union.tree_node* null, %union.tree_node** %types, align 8
  store i32 0, i32* %erred, align 4
  %call = call %union.tree_node* @gettags()
  store %union.tree_node* %call, %union.tree_node** %tags, align 8
  %call1 = call %union.tree_node* @getdecls()
  store %union.tree_node* %call1, %union.tree_node** %parms, align 8
  store %union.tree_node* null, %union.tree_node** %new_parms, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_order = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 12
  %1 = load %union.tree_node*, %union.tree_node** %parm_order, align 8
  store %union.tree_node* %1, %union.tree_node** %order, align 8
  %2 = load i32, i32* %void_at_end.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %cmp = icmp ne %union.tree_node* %3, null
  br i1 %cmp, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8
  %cmp3 = icmp eq %union.tree_node* %5, null
  br i1 %cmp3, label %land.lhs.true.4, label %if.end

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %6 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %common5 = bitcast %union.tree_node* %6 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common6 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common6, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp7 = icmp eq i32 %bf.clear, 5
  br i1 %cmp7, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %land.lhs.true.4
  %8 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %common9 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common9, i32 0, i32 2
  %bf.load10 = load i32, i32* %volatile_flag, align 8
  %bf.lshr = lshr i32 %bf.load10, 11
  %bf.clear11 = and i32 %bf.lshr, 1
  %tobool12 = icmp ne i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end, label %land.lhs.true.13

land.lhs.true.13:                                 ; preds = %land.lhs.true.8
  %9 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %common14 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common14, i32 0, i32 2
  %bf.load15 = load i32, i32* %readonly_flag, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 12
  %bf.clear17 = and i32 %bf.lshr16, 1
  %tobool18 = icmp ne i32 %bf.clear17, 0
  br i1 %tobool18, label %if.end, label %land.lhs.true.19

land.lhs.true.19:                                 ; preds = %land.lhs.true.13
  %10 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %decl20 = bitcast %union.tree_node* %10 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl20, i32 0, i32 5
  %11 = bitcast i48* %regdecl_flag to i64*
  %bf.load21 = load i64, i64* %11, align 8
  %bf.lshr22 = lshr i64 %bf.load21, 10
  %bf.clear23 = and i64 %bf.lshr22, 1
  %bf.cast = trunc i64 %bf.clear23 to i32
  %tobool24 = icmp ne i32 %bf.cast, 0
  br i1 %tobool24, label %if.end, label %land.lhs.true.25

land.lhs.true.25:                                 ; preds = %land.lhs.true.19
  %12 = load %union.tree_node*, %union.tree_node** %parms, align 8
  %decl26 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl26, i32 0, i32 8
  %13 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp27 = icmp eq %union.tree_node* %13, null
  br i1 %cmp27, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.25
  store %union.tree_node* null, %union.tree_node** %parms, align 8
  call void @storedecls(%union.tree_node* null)
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %call28 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %14, %union.tree_node* null)
  %call29 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %call28)
  store %union.tree_node* %call29, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.25, %land.lhs.true.19, %land.lhs.true.13, %land.lhs.true.8, %land.lhs.true.4, %land.lhs.true.2, %land.lhs.true, %entry
  %15 = load %union.tree_node*, %union.tree_node** %parms, align 8
  store %union.tree_node* %15, %union.tree_node** %decl, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.50, %if.end
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool30 = icmp ne %union.tree_node* %16, null
  br i1 %tobool30, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common31 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain32, align 8
  store %union.tree_node* %18, %union.tree_node** %next, align 8
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common33 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %code34 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common33, i32 0, i32 2
  %bf.load35 = load i32, i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp ne i32 %bf.clear36, 35
  br i1 %cmp37, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %for.body
  %20 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common39 = bitcast %union.tree_node* %21 to %struct.tree_common*
  %chain40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 0
  store %union.tree_node* %20, %union.tree_node** %chain40, align 8
  %22 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %22, %union.tree_node** %new_parms, align 8
  br label %if.end.50

if.else:                                          ; preds = %for.body
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common41 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common41, i32 0, i32 2
  %bf.load42 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr43 = lshr i32 %bf.load42, 14
  %bf.clear44 = and i32 %bf.lshr43, 1
  %tobool45 = icmp ne i32 %bf.clear44, 0
  br i1 %tobool45, label %if.then.46, label %if.end.49

if.then.46:                                       ; preds = %if.else
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.188, i32 0, i32 0))
  %25 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  %26 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common47 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %chain48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 0
  store %union.tree_node* %25, %union.tree_node** %chain48, align 8
  %27 = load %union.tree_node*, %union.tree_node** %decl, align 8
  store %union.tree_node* %27, %union.tree_node** %new_parms, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.46, %if.else
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.then.38
  %28 = load %union.tree_node*, %union.tree_node** %next, align 8
  store %union.tree_node* %28, %union.tree_node** %decl, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load %union.tree_node*, %union.tree_node** %order, align 8
  store %union.tree_node* %29, %union.tree_node** %t, align 8
  br label %for.cond.51

for.cond.51:                                      ; preds = %for.inc, %for.end
  %30 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool52 = icmp ne %union.tree_node* %30, null
  br i1 %tobool52, label %for.body.53, label %for.end.72

for.body.53:                                      ; preds = %for.cond.51
  %31 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common54 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %chain55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 0
  %32 = load %union.tree_node*, %union.tree_node** %chain55, align 8
  %tobool56 = icmp ne %union.tree_node* %32, null
  br i1 %tobool56, label %if.then.57, label %if.else.64

if.then.57:                                       ; preds = %for.body.53
  %33 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common58 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %chain59 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common58, i32 0, i32 0
  %34 = load %union.tree_node*, %union.tree_node** %chain59, align 8
  %list = bitcast %union.tree_node* %34 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %35 = load %union.tree_node*, %union.tree_node** %value, align 8
  %36 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list60 = bitcast %union.tree_node* %36 to %struct.tree_list*
  %value61 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list60, i32 0, i32 2
  %37 = load %union.tree_node*, %union.tree_node** %value61, align 8
  %common62 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %chain63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 0
  store %union.tree_node* %35, %union.tree_node** %chain63, align 8
  br label %if.end.69

if.else.64:                                       ; preds = %for.body.53
  %38 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list65 = bitcast %union.tree_node* %38 to %struct.tree_list*
  %value66 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list65, i32 0, i32 2
  %39 = load %union.tree_node*, %union.tree_node** %value66, align 8
  %common67 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %chain68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain68, align 8
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.64, %if.then.57
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %40 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common70 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %chain71 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common70, i32 0, i32 0
  %41 = load %union.tree_node*, %union.tree_node** %chain71, align 8
  store %union.tree_node* %41, %union.tree_node** %t, align 8
  br label %for.cond.51

for.end.72:                                       ; preds = %for.cond.51
  %42 = load %union.tree_node*, %union.tree_node** %order, align 8
  %tobool73 = icmp ne %union.tree_node* %42, null
  br i1 %tobool73, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end.72
  %43 = load %union.tree_node*, %union.tree_node** %order, align 8
  %list74 = bitcast %union.tree_node* %43 to %struct.tree_list*
  %value75 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list74, i32 0, i32 2
  %44 = load %union.tree_node*, %union.tree_node** %value75, align 8
  %call76 = call %union.tree_node* @nreverse(%union.tree_node* %44)
  br label %cond.end

cond.false:                                       ; preds = %for.end.72
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %call76, %cond.true ], [ null, %cond.false ]
  %45 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  %call77 = call %union.tree_node* @chainon(%union.tree_node* %cond, %union.tree_node* %45)
  store %union.tree_node* %call77, %union.tree_node** %new_parms, align 8
  %46 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  call void @storedecls(%union.tree_node* %46)
  %47 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  store %union.tree_node* %47, %union.tree_node** %decl, align 8
  br label %for.cond.78

for.cond.78:                                      ; preds = %for.inc.147, %cond.end
  %48 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool79 = icmp ne %union.tree_node* %48, null
  br i1 %tobool79, label %for.body.80, label %for.end.150

for.body.80:                                      ; preds = %for.cond.78
  %49 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common81 = bitcast %union.tree_node* %49 to %struct.tree_common*
  %code82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 2
  %bf.load83 = load i32, i32* %code82, align 8
  %bf.clear84 = and i32 %bf.load83, 255
  %cmp85 = icmp eq i32 %bf.clear84, 35
  br i1 %cmp85, label %if.then.86, label %if.end.146

if.then.86:                                       ; preds = %for.body.80
  %50 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common88 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type89 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common88, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type89, align 8
  store %union.tree_node* %51, %union.tree_node** %type87, align 8
  %52 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %53 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl90 = bitcast %union.tree_node* %53 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl90, i32 0, i32 12
  store %union.tree_node* %52, %union.tree_node** %initial, align 8
  %54 = load i32, i32* @target_flags, align 4
  %and = and i32 %54, 33554432
  %tobool91 = icmp ne i32 %and, 0
  br i1 %tobool91, label %if.end.127, label %land.lhs.true.92

land.lhs.true.92:                                 ; preds = %if.then.86
  %55 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common93 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 6
  br i1 %cmp97, label %land.lhs.true.115, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.92
  %56 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common98 = bitcast %union.tree_node* %56 to %struct.tree_common*
  %code99 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common98, i32 0, i32 2
  %bf.load100 = load i32, i32* %code99, align 8
  %bf.clear101 = and i32 %bf.load100, 255
  %cmp102 = icmp eq i32 %bf.clear101, 10
  br i1 %cmp102, label %land.lhs.true.115, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %lor.lhs.false
  %57 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common104 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %code105 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common104, i32 0, i32 2
  %bf.load106 = load i32, i32* %code105, align 8
  %bf.clear107 = and i32 %bf.load106, 255
  %cmp108 = icmp eq i32 %bf.clear107, 11
  br i1 %cmp108, label %land.lhs.true.115, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %lor.lhs.false.103
  %58 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %common110 = bitcast %union.tree_node* %58 to %struct.tree_common*
  %code111 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common110, i32 0, i32 2
  %bf.load112 = load i32, i32* %code111, align 8
  %bf.clear113 = and i32 %bf.load112, 255
  %cmp114 = icmp eq i32 %bf.clear113, 12
  br i1 %cmp114, label %land.lhs.true.115, label %if.end.127

land.lhs.true.115:                                ; preds = %lor.lhs.false.109, %lor.lhs.false.103, %lor.lhs.false, %land.lhs.true.92
  %59 = load %union.tree_node*, %union.tree_node** %type87, align 8
  %type116 = bitcast %union.tree_node* %59 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type116, i32 0, i32 6
  %bf.load117 = load i32, i32* %precision, align 4
  %bf.clear118 = and i32 %bf.load117, 511
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type119 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %precision120 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type119, i32 0, i32 6
  %bf.load121 = load i32, i32* %precision120, align 4
  %bf.clear122 = and i32 %bf.load121, 511
  %cmp123 = icmp slt i32 %bf.clear118, %bf.clear122
  br i1 %cmp123, label %if.then.124, label %if.end.127

if.then.124:                                      ; preds = %land.lhs.true.115
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %62 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl125 = bitcast %union.tree_node* %62 to %struct.tree_decl*
  %initial126 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl125, i32 0, i32 12
  store %union.tree_node* %61, %union.tree_node** %initial126, align 8
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.124, %land.lhs.true.115, %lor.lhs.false.109, %if.then.86
  %63 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common128 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %type129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common128, i32 0, i32 1
  %64 = load %union.tree_node*, %union.tree_node** %type129, align 8
  %65 = load %union.tree_node*, %union.tree_node** %types, align 8
  %call130 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %64, %union.tree_node* %65)
  store %union.tree_node* %call130, %union.tree_node** %types, align 8
  %66 = load %union.tree_node*, %union.tree_node** %types, align 8
  %list131 = bitcast %union.tree_node* %66 to %struct.tree_list*
  %value132 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list131, i32 0, i32 2
  %67 = load %union.tree_node*, %union.tree_node** %value132, align 8
  %common133 = bitcast %union.tree_node* %67 to %struct.tree_common*
  %code134 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common133, i32 0, i32 2
  %bf.load135 = load i32, i32* %code134, align 8
  %bf.clear136 = and i32 %bf.load135, 255
  %cmp137 = icmp eq i32 %bf.clear136, 5
  br i1 %cmp137, label %land.lhs.true.138, label %if.end.145

land.lhs.true.138:                                ; preds = %if.end.127
  %68 = load i32, i32* %erred, align 4
  %tobool139 = icmp ne i32 %68, 0
  br i1 %tobool139, label %if.end.145, label %land.lhs.true.140

land.lhs.true.140:                                ; preds = %land.lhs.true.138
  %69 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl141 = bitcast %union.tree_node* %69 to %struct.tree_decl*
  %name142 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl141, i32 0, i32 8
  %70 = load %union.tree_node*, %union.tree_node** %name142, align 8
  %cmp143 = icmp eq %union.tree_node* %70, null
  br i1 %cmp143, label %if.then.144, label %if.end.145

if.then.144:                                      ; preds = %land.lhs.true.140
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.189, i32 0, i32 0))
  store i32 1, i32* %erred, align 4
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.144, %land.lhs.true.140, %land.lhs.true.138, %if.end.127
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %for.body.80
  br label %for.inc.147

for.inc.147:                                      ; preds = %if.end.146
  %71 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common148 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %chain149 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common148, i32 0, i32 0
  %72 = load %union.tree_node*, %union.tree_node** %chain149, align 8
  store %union.tree_node* %72, %union.tree_node** %decl, align 8
  br label %for.cond.78

for.end.150:                                      ; preds = %for.cond.78
  %73 = load i32, i32* %void_at_end.addr, align 4
  %tobool151 = icmp ne i32 %73, 0
  br i1 %tobool151, label %if.then.152, label %if.end.156

if.then.152:                                      ; preds = %for.end.150
  %74 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  %75 = load %union.tree_node*, %union.tree_node** %tags, align 8
  %76 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %77 = load %union.tree_node*, %union.tree_node** %types, align 8
  %call153 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %76, %union.tree_node* %77)
  %call154 = call %union.tree_node* @nreverse(%union.tree_node* %call153)
  %call155 = call %union.tree_node* @tree_cons(%union.tree_node* %74, %union.tree_node* %75, %union.tree_node* %call154)
  store %union.tree_node* %call155, %union.tree_node** %retval
  br label %return

if.end.156:                                       ; preds = %for.end.150
  %78 = load %union.tree_node*, %union.tree_node** %new_parms, align 8
  %79 = load %union.tree_node*, %union.tree_node** %tags, align 8
  %80 = load %union.tree_node*, %union.tree_node** %types, align 8
  %call157 = call %union.tree_node* @nreverse(%union.tree_node* %80)
  %call158 = call %union.tree_node* @tree_cons(%union.tree_node* %78, %union.tree_node* %79, %union.tree_node* %call157)
  store %union.tree_node* %call158, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.156, %if.then.152, %if.then
  %81 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %81
}

; Function Attrs: nounwind uwtable
define internal void @storedecls(%union.tree_node* %decls) #0 {
entry:
  %decls.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decls, %union.tree_node** %decls.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decls.addr, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %1, i32 0, i32 0
  store %union.tree_node* %0, %union.tree_node** %names, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @parmlist_tags_warning() #0 {
entry:
  %elt = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %0 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tags = getelementptr inbounds %struct.binding_level, %struct.binding_level* %0, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %tags, align 8
  store %union.tree_node* %1, %union.tree_node** %elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %tobool = icmp ne %union.tree_node* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list = bitcast %union.tree_node* %3 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %5 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %5, 21
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %6 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list2 = bitcast %union.tree_node* %6 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list2, i32 0, i32 1
  %7 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %cmp3 = icmp eq %union.tree_node* %7, null
  br i1 %cmp3, label %land.lhs.true.4, label %if.end

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %8 = load i32, i32* @pedantic, align 4
  %tobool5 = icmp ne i32 %8, 0
  br i1 %tobool5, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.4
  br label %for.inc

if.end:                                           ; preds = %land.lhs.true.4, %land.lhs.true, %for.body
  %9 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list6 = bitcast %union.tree_node* %9 to %struct.tree_list*
  %purpose7 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list6, i32 0, i32 1
  %10 = load %union.tree_node*, %union.tree_node** %purpose7, align 8
  %cmp8 = icmp ne %union.tree_node* %10, null
  br i1 %cmp8, label %if.then.9, label %if.else.29

if.then.9:                                        ; preds = %if.end
  %11 = load i32, i32* %code, align 4
  %cmp10 = icmp eq i32 %11, 20
  br i1 %cmp10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.9
  %12 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list12 = bitcast %union.tree_node* %12 to %struct.tree_list*
  %purpose13 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list12, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %purpose13, align 8
  %identifier = bitcast %union.tree_node* %13 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %14 = load i8*, i8** %str, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.190, i32 0, i32 0), i8* %14)
  br label %if.end.28

if.else:                                          ; preds = %if.then.9
  %15 = load i32, i32* %code, align 4
  %cmp14 = icmp eq i32 %15, 21
  br i1 %cmp14, label %if.then.15, label %if.else.21

if.then.15:                                       ; preds = %if.else
  %16 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list16 = bitcast %union.tree_node* %16 to %struct.tree_list*
  %purpose17 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list16, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %purpose17, align 8
  %identifier18 = bitcast %union.tree_node* %17 to %struct.tree_identifier*
  %id19 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier18, i32 0, i32 1
  %str20 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id19, i32 0, i32 1
  %18 = load i8*, i8** %str20, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.191, i32 0, i32 0), i8* %18)
  br label %if.end.27

if.else.21:                                       ; preds = %if.else
  %19 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %list22 = bitcast %union.tree_node* %19 to %struct.tree_list*
  %purpose23 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list22, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %purpose23, align 8
  %identifier24 = bitcast %union.tree_node* %20 to %struct.tree_identifier*
  %id25 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier24, i32 0, i32 1
  %str26 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id25, i32 0, i32 1
  %21 = load i8*, i8** %str26, align 8
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.192, i32 0, i32 0), i8* %21)
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.21, %if.then.15
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.11
  br label %if.end.38

if.else.29:                                       ; preds = %if.end
  %22 = load i32, i32* %code, align 4
  %cmp30 = icmp eq i32 %22, 20
  br i1 %cmp30, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %if.else.29
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.193, i32 0, i32 0))
  br label %if.end.37

if.else.32:                                       ; preds = %if.else.29
  %23 = load i32, i32* %code, align 4
  %cmp33 = icmp eq i32 %23, 21
  br i1 %cmp33, label %if.then.34, label %if.else.35

if.then.34:                                       ; preds = %if.else.32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.194, i32 0, i32 0))
  br label %if.end.36

if.else.35:                                       ; preds = %if.else.32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.195, i32 0, i32 0))
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.then.31
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.end.28
  %24 = load i32, i32* @parmlist_tags_warning.already, align 4
  %tobool39 = icmp ne i32 %24, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.38
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.196, i32 0, i32 0))
  store i32 1, i32* @parmlist_tags_warning.already, align 4
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %if.end.38
  br label %for.inc

for.inc:                                          ; preds = %if.end.41, %if.then
  %25 = load %union.tree_node*, %union.tree_node** %elt, align 8
  %common42 = bitcast %union.tree_node* %25 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 0
  %26 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %26, %union.tree_node** %elt, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @xref_tag(i32 %code, %union.tree_node* %name) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %name.addr = alloca %union.tree_node*, align 8
  %ref = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  %0 = load i32, i32* %code.addr, align 4
  %1 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %call = call %union.tree_node* @lookup_tag(i32 %0, %union.tree_node* %1, %struct.binding_level* %2, i32 0)
  store %union.tree_node* %call, %union.tree_node** %ref, align 8
  %3 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %tobool = icmp ne %union.tree_node* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %5 = load i32, i32* %code.addr, align 4
  %cmp = icmp eq i32 %bf.clear, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %6, %union.tree_node** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* %code.addr, align 4
  %call2 = call %union.tree_node* @make_node(i32 %7)
  store %union.tree_node* %call2, %union.tree_node** %ref, align 8
  %8 = load i32, i32* %code.addr, align 4
  %cmp3 = icmp eq i32 %8, 10
  br i1 %cmp3, label %if.then.4, label %if.end.36

if.then.4:                                        ; preds = %if.end
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %type = bitcast %union.tree_node* %9 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load5 = load i32, i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load5, 9
  %bf.clear6 = and i32 %bf.lshr, 127
  %10 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type7 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %mode8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type7, i32 0, i32 6
  %bf.load9 = load i32, i32* %mode8, align 4
  %bf.value = and i32 %bf.clear6, 127
  %bf.shl = shl i32 %bf.value, 9
  %bf.clear10 = and i32 %bf.load9, -65025
  %bf.set = or i32 %bf.clear10, %bf.shl
  store i32 %bf.set, i32* %mode8, align 4
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %type11 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i32 0, i32 7
  %12 = load i32, i32* %align, align 4
  %13 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type12 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %align13 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i32 0, i32 7
  store i32 %12, i32* %align13, align 4
  %14 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type14 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i32 0, i32 6
  %bf.load15 = load i32, i32* %user_align, align 4
  %bf.clear16 = and i32 %bf.load15, 2147483647
  store i32 %bf.clear16, i32* %user_align, align 4
  %15 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common17 = bitcast %union.tree_node* %15 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load18 = load i32, i32* %unsigned_flag, align 8
  %bf.clear19 = and i32 %bf.load18, -8193
  %bf.set20 = or i32 %bf.clear19, 8192
  store i32 %bf.set20, i32* %unsigned_flag, align 8
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %type21 = bitcast %union.tree_node* %16 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type21, i32 0, i32 6
  %bf.load22 = load i32, i32* %precision, align 4
  %bf.clear23 = and i32 %bf.load22, 511
  %17 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type24 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision25 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type24, i32 0, i32 6
  %bf.load26 = load i32, i32* %precision25, align 4
  %bf.value27 = and i32 %bf.clear23, 511
  %bf.clear28 = and i32 %bf.load26, -512
  %bf.set29 = or i32 %bf.clear28, %bf.value27
  store i32 %bf.set29, i32* %precision25, align 4
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %type30 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 12
  %19 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %20 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type31 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %minval32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i32 0, i32 12
  store %union.tree_node* %19, %union.tree_node** %minval32, align 8
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %type33 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i32 0, i32 13
  %22 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %23 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type34 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %maxval35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i32 0, i32 13
  store %union.tree_node* %22, %union.tree_node** %maxval35, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.4, %if.end
  %24 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %ref, align 8
  call void @pushtag(%union.tree_node* %24, %union.tree_node* %25)
  %26 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %26, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.36, %if.then
  %27 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %27
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_struct(i32 %code, %union.tree_node* %name) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %code.addr = alloca i32, align 4
  %name.addr = alloca %union.tree_node*, align 8
  %ref = alloca %union.tree_node*, align 8
  store i32 %code, i32* %code.addr, align 4
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* null, %union.tree_node** %ref, align 8
  %0 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %cmp = icmp ne %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4
  %2 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %3 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %call = call %union.tree_node* @lookup_tag(i32 %1, %union.tree_node* %2, %struct.binding_level* %3, i32 1)
  store %union.tree_node* %call, %union.tree_node** %ref, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %tobool = icmp ne %union.tree_node* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %6 = load i32, i32* %code.addr, align 4
  %cmp2 = icmp eq i32 %bf.clear, %6
  br i1 %cmp2, label %if.then.3, label %if.end.20

if.then.3:                                        ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type = bitcast %union.tree_node* %7 to %struct.tree_type*
  %lang_flag_0 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load4 = load i32, i32* %lang_flag_0, align 4
  %bf.clear5 = and i32 %bf.load4, -16777217
  %bf.set = or i32 %bf.clear5, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 4
  %8 = load i32, i32* @flag_pack_struct, align 4
  %9 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type6 = bitcast %union.tree_node* %9 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i32 0, i32 6
  %bf.load7 = load i32, i32* %packed_flag, align 4
  %bf.value = and i32 %8, 1
  %bf.shl = shl i32 %bf.value, 20
  %bf.clear8 = and i32 %bf.load7, -1048577
  %bf.set9 = or i32 %bf.clear8, %bf.shl
  store i32 %bf.set9, i32* %packed_flag, align 4
  %10 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type10 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool11 = icmp ne %union.tree_node* %11, null
  br i1 %tobool11, label %if.then.12, label %if.end.19

if.then.12:                                       ; preds = %if.then.3
  %12 = load i32, i32* %code.addr, align 4
  %cmp13 = icmp eq i32 %12, 21
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %if.then.12
  %13 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %13 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %14 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.197, i32 0, i32 0), i8* %14)
  br label %if.end.18

if.else:                                          ; preds = %if.then.12
  %15 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier15 = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id16 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier15, i32 0, i32 1
  %str17 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id16, i32 0, i32 1
  %16 = load i8*, i8** %str17, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.198, i32 0, i32 0), i8* %16)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.14
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.3
  %17 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %17, %union.tree_node** %retval
  br label %return

if.end.20:                                        ; preds = %land.lhs.true, %if.end
  %18 = load i32, i32* %code.addr, align 4
  %call21 = call %union.tree_node* @make_node(i32 %18)
  store %union.tree_node* %call21, %union.tree_node** %ref, align 8
  %19 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %20 = load %union.tree_node*, %union.tree_node** %ref, align 8
  call void @pushtag(%union.tree_node* %19, %union.tree_node* %20)
  %21 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type22 = bitcast %union.tree_node* %21 to %struct.tree_type*
  %lang_flag_023 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i32 0, i32 6
  %bf.load24 = load i32, i32* %lang_flag_023, align 4
  %bf.clear25 = and i32 %bf.load24, -16777217
  %bf.set26 = or i32 %bf.clear25, 16777216
  store i32 %bf.set26, i32* %lang_flag_023, align 4
  %22 = load i32, i32* @flag_pack_struct, align 4
  %23 = load %union.tree_node*, %union.tree_node** %ref, align 8
  %type27 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %packed_flag28 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i32 0, i32 6
  %bf.load29 = load i32, i32* %packed_flag28, align 4
  %bf.value30 = and i32 %22, 1
  %bf.shl31 = shl i32 %bf.value30, 20
  %bf.clear32 = and i32 %bf.load29, -1048577
  %bf.set33 = or i32 %bf.clear32, %bf.shl31
  store i32 %bf.set33, i32* %packed_flag28, align 4
  %24 = load %union.tree_node*, %union.tree_node** %ref, align 8
  store %union.tree_node* %24, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.20, %if.end.19
  %25 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %25
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @grokfield(i8* %filename, i32 %line, %union.tree_node* %declarator, %union.tree_node* %declspecs, %union.tree_node* %width) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %filename.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %declarator.addr = alloca %union.tree_node*, align 8
  %declspecs.addr = alloca %union.tree_node*, align 8
  %width.addr = alloca %union.tree_node*, align 8
  %value = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %line, i32* %line.addr, align 4
  store %union.tree_node* %declarator, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  store %union.tree_node* %width, %union.tree_node** %width.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %width.addr, align 8
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %if.then, label %if.end.20

if.then:                                          ; preds = %land.lhs.true
  %2 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %value2 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %3 = load %union.tree_node*, %union.tree_node** %value2, align 8
  store %union.tree_node* %3, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp3 = icmp eq i32 %bf.clear, 33
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common5 = bitcast %union.tree_node* %5 to %struct.tree_common*
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common5, i32 0, i32 1
  %6 = load %union.tree_node*, %union.tree_node** %type6, align 8
  store %union.tree_node* %6, %union.tree_node** %type, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.4, %if.then
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common7 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp ne i32 %bf.clear10, 20
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.19

land.lhs.true.12:                                 ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common13 = bitcast %union.tree_node* %8 to %struct.tree_common*
  %code14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 2
  %bf.load15 = load i32, i32* %code14, align 8
  %bf.clear16 = and i32 %bf.load15, 255
  %cmp17 = icmp ne i32 %bf.clear16, 21
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %land.lhs.true.12
  call void (i8*, ...) @error(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.199, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.end.19:                                        ; preds = %land.lhs.true.12, %if.end
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %land.lhs.true, %entry
  %9 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %10 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  %11 = load %union.tree_node*, %union.tree_node** %width.addr, align 8
  %tobool = icmp ne %union.tree_node* %11, null
  %cond = select i1 %tobool, i32 4, i32 3
  %call = call %union.tree_node* @grokdeclarator(%union.tree_node* %9, %union.tree_node* %10, i32 %cond, i32 0)
  store %union.tree_node* %call, %union.tree_node** %value, align 8
  %12 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @finish_decl(%union.tree_node* %12, %union.tree_node* null, %union.tree_node* null)
  %13 = load %union.tree_node*, %union.tree_node** %width.addr, align 8
  %14 = load %union.tree_node*, %union.tree_node** %value, align 8
  %decl = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 12
  store %union.tree_node* %13, %union.tree_node** %initial, align 8
  %15 = load %union.tree_node*, %union.tree_node** %value, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %15)
  %16 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %16, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %if.end.20, %if.then.18
  %17 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %17
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @finish_struct(%union.tree_node* %t, %union.tree_node* %fieldlist, %union.tree_node* %attributes) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  %fieldlist.addr = alloca %union.tree_node*, align 8
  %attributes.addr = alloca %union.tree_node*, align 8
  %x = alloca %union.tree_node*, align 8
  %toplevel = alloca i32, align 4
  %saw_named_field = alloca i32, align 4
  %t1 = alloca %union.tree_node*, align 8
  %max_width = alloca i32, align 4
  %width = alloca i64, align 8
  %min_align = alloca i32, align 4
  %y = alloca %union.tree_node*, align 8
  %fieldlistp = alloca %union.tree_node**, align 8
  %decl781 = alloca %union.tree_node*, align 8
  %element = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  store %union.tree_node* %fieldlist, %union.tree_node** %fieldlist.addr, align 8
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %toplevel, align 4
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type = bitcast %union.tree_node* %2 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %size, align 8
  %3 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8
  %call = call %union.tree_node* @decl_attributes(%union.tree_node** %t.addr, %union.tree_node* %3, i32 8)
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 21
  br i1 %cmp1, label %land.lhs.true, label %land.lhs.true.6

land.lhs.true:                                    ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type3 = bitcast %union.tree_node* %5 to %struct.tree_type*
  %name = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type3, i32 0, i32 11
  %6 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp4 = icmp eq %union.tree_node* %6, null
  br i1 %cmp4, label %if.end.29, label %land.lhs.true.6

land.lhs.true.6:                                  ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* @pedantic, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end.29, label %if.then

if.then:                                          ; preds = %land.lhs.true.6
  %call7 = call i32 @in_parm_level_p()
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then.9, label %if.end.28

if.then.9:                                        ; preds = %if.then
  %8 = load i32, i32* @pedantic, align 4
  %tobool10 = icmp ne i32 %8, 0
  br i1 %tobool10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.9
  %9 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common12 = bitcast %union.tree_node* %9 to %struct.tree_common*
  %code13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common12, i32 0, i32 2
  %bf.load14 = load i32, i32* %code13, align 8
  %bf.clear15 = and i32 %bf.load14, 255
  %cmp16 = icmp eq i32 %bf.clear15, 21
  %cond = select i1 %cmp16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i32 0, i32 0)
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.200, i32 0, i32 0), i8* %cond)
  br label %if.end.27

if.else:                                          ; preds = %if.then.9
  %10 = load i32, i32* @flag_traditional, align 4
  %tobool18 = icmp ne i32 %10, 0
  br i1 %tobool18, label %if.end, label %if.then.19

if.then.19:                                       ; preds = %if.else
  %11 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common20 = bitcast %union.tree_node* %11 to %struct.tree_common*
  %code21 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common20, i32 0, i32 2
  %bf.load22 = load i32, i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %cmp24 = icmp eq i32 %bf.clear23, 21
  %cond26 = select i1 %cmp24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.202, i32 0, i32 0)
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.200, i32 0, i32 0), i8* %cond26)
  br label %if.end

if.end:                                           ; preds = %if.then.19, %if.else
  br label %if.end.27

if.end.27:                                        ; preds = %if.end, %if.then.11
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %land.lhs.true.6, %land.lhs.true
  %12 = load i32, i32* @pedantic, align 4
  %tobool30 = icmp ne i32 %12, 0
  br i1 %tobool30, label %if.then.31, label %if.end.52

if.then.31:                                       ; preds = %if.end.29
  %13 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  store %union.tree_node* %13, %union.tree_node** %x, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.31
  %14 = load %union.tree_node*, %union.tree_node** %x, align 8
  %tobool32 = icmp ne %union.tree_node* %14, null
  br i1 %tobool32, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl = bitcast %union.tree_node* %15 to %struct.tree_decl*
  %name33 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %16 = load %union.tree_node*, %union.tree_node** %name33, align 8
  %cmp34 = icmp ne %union.tree_node* %16, null
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %for.body
  br label %for.end

if.end.37:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.37
  %17 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common38 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %18, %union.tree_node** %x, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.36, %for.cond
  %19 = load %union.tree_node*, %union.tree_node** %x, align 8
  %cmp39 = icmp eq %union.tree_node* %19, null
  br i1 %cmp39, label %if.then.41, label %if.end.51

if.then.41:                                       ; preds = %for.end
  %20 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common42 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code43 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common42, i32 0, i32 2
  %bf.load44 = load i32, i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  %cmp46 = icmp eq i32 %bf.clear45, 21
  %cond48 = select i1 %cmp46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0)
  %21 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  %tobool49 = icmp ne %union.tree_node* %21, null
  %cond50 = select i1 %tobool49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.206, i32 0, i32 0)
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.203, i32 0, i32 0), i8* %cond48, i8* %cond50)
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.41, %for.end
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.end.29
  store i32 0, i32* %saw_named_field, align 4
  %22 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  store %union.tree_node* %22, %union.tree_node** %x, align 8
  br label %for.cond.53

for.cond.53:                                      ; preds = %for.inc.626, %if.end.52
  %23 = load %union.tree_node*, %union.tree_node** %x, align 8
  %tobool54 = icmp ne %union.tree_node* %23, null
  br i1 %tobool54, label %for.body.55, label %for.end.629

for.body.55:                                      ; preds = %for.cond.53
  %24 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %25 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl56 = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl56, i32 0, i32 9
  store %union.tree_node* %24, %union.tree_node** %context, align 8
  %26 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type57 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type57, i32 0, i32 6
  %bf.load58 = load i32, i32* %packed_flag, align 4
  %bf.lshr = lshr i32 %bf.load58, 20
  %bf.clear59 = and i32 %bf.lshr, 1
  %27 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl60 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %regdecl_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl60, i32 0, i32 5
  %28 = bitcast i48* %regdecl_flag to i64*
  %bf.load61 = load i64, i64* %28, align 8
  %bf.lshr62 = lshr i64 %bf.load61, 10
  %bf.clear63 = and i64 %bf.lshr62, 1
  %bf.cast = trunc i64 %bf.clear63 to i32
  %or = or i32 %bf.cast, %bf.clear59
  %29 = zext i32 %or to i64
  %bf.load64 = load i64, i64* %28, align 8
  %bf.value = and i64 %29, 1
  %bf.shl = shl i64 %bf.value, 10
  %bf.clear65 = and i64 %bf.load64, -1025
  %bf.set = or i64 %bf.clear65, %bf.shl
  store i64 %bf.set, i64* %28, align 8
  %bf.result.cast = trunc i64 %bf.value to i32
  %30 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common66 = bitcast %union.tree_node* %30 to %struct.tree_common*
  %readonly_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 2
  %bf.load67 = load i32, i32* %readonly_flag, align 8
  %bf.lshr68 = lshr i32 %bf.load67, 12
  %bf.clear69 = and i32 %bf.lshr68, 1
  %tobool70 = icmp ne i32 %bf.clear69, 0
  br i1 %tobool70, label %if.then.71, label %if.else.76

if.then.71:                                       ; preds = %for.body.55
  %31 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common72 = bitcast %union.tree_node* %31 to %struct.tree_common*
  %lang_flag_1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common72, i32 0, i32 2
  %bf.load73 = load i32, i32* %lang_flag_1, align 8
  %bf.clear74 = and i32 %bf.load73, -33554433
  %bf.set75 = or i32 %bf.clear74, 33554432
  store i32 %bf.set75, i32* %lang_flag_1, align 8
  br label %if.end.113

if.else.76:                                       ; preds = %for.body.55
  %32 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common77 = bitcast %union.tree_node* %32 to %struct.tree_common*
  %type78 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common77, i32 0, i32 1
  %33 = load %union.tree_node*, %union.tree_node** %type78, align 8
  store %union.tree_node* %33, %union.tree_node** %t1, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else.76
  %34 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common79 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %code80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 2
  %bf.load81 = load i32, i32* %code80, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  %cmp83 = icmp eq i32 %bf.clear82, 18
  br i1 %cmp83, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %35 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common85 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type86 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common85, i32 0, i32 1
  %36 = load %union.tree_node*, %union.tree_node** %type86, align 8
  store %union.tree_node* %36, %union.tree_node** %t1, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %37 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common87 = bitcast %union.tree_node* %37 to %struct.tree_common*
  %code88 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common87, i32 0, i32 2
  %bf.load89 = load i32, i32* %code88, align 8
  %bf.clear90 = and i32 %bf.load89, 255
  %cmp91 = icmp eq i32 %bf.clear90, 20
  br i1 %cmp91, label %land.lhs.true.99, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end
  %38 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common93 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %code94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 2
  %bf.load95 = load i32, i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 21
  br i1 %cmp97, label %land.lhs.true.99, label %if.end.112

land.lhs.true.99:                                 ; preds = %lor.lhs.false, %while.end
  %39 = load %union.tree_node*, %union.tree_node** %t1, align 8
  %common100 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %lang_flag_1101 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common100, i32 0, i32 2
  %bf.load102 = load i32, i32* %lang_flag_1101, align 8
  %bf.lshr103 = lshr i32 %bf.load102, 25
  %bf.clear104 = and i32 %bf.lshr103, 1
  %tobool105 = icmp ne i32 %bf.clear104, 0
  br i1 %tobool105, label %if.then.106, label %if.end.112

if.then.106:                                      ; preds = %land.lhs.true.99
  %40 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common107 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %lang_flag_1108 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common107, i32 0, i32 2
  %bf.load109 = load i32, i32* %lang_flag_1108, align 8
  %bf.clear110 = and i32 %bf.load109, -33554433
  %bf.set111 = or i32 %bf.clear110, 33554432
  store i32 %bf.set111, i32* %lang_flag_1108, align 8
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.106, %land.lhs.true.99, %lor.lhs.false
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.then.71
  %41 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common114 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %volatile_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common114, i32 0, i32 2
  %bf.load115 = load i32, i32* %volatile_flag, align 8
  %bf.lshr116 = lshr i32 %bf.load115, 11
  %bf.clear117 = and i32 %bf.lshr116, 1
  %tobool118 = icmp ne i32 %bf.clear117, 0
  br i1 %tobool118, label %if.then.119, label %if.end.124

if.then.119:                                      ; preds = %if.end.113
  %42 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common120 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %lang_flag_2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common120, i32 0, i32 2
  %bf.load121 = load i32, i32* %lang_flag_2, align 8
  %bf.clear122 = and i32 %bf.load121, -67108865
  %bf.set123 = or i32 %bf.clear122, 67108864
  store i32 %bf.set123, i32* %lang_flag_2, align 8
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.119, %if.end.113
  %43 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl125 = bitcast %union.tree_node* %43 to %struct.tree_decl*
  %lang_flag_0 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl125, i32 0, i32 5
  %44 = bitcast i48* %lang_flag_0 to i64*
  %bf.load126 = load i64, i64* %44, align 8
  %bf.lshr127 = lshr i64 %bf.load126, 37
  %bf.clear128 = and i64 %bf.lshr127, 1
  %bf.cast129 = trunc i64 %bf.clear128 to i32
  %tobool130 = icmp ne i32 %bf.cast129, 0
  br i1 %tobool130, label %if.then.131, label %if.end.137

if.then.131:                                      ; preds = %if.end.124
  %45 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type132 = bitcast %union.tree_node* %45 to %struct.tree_type*
  %lang_flag_1133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i32 0, i32 6
  %bf.load134 = load i32, i32* %lang_flag_1133, align 4
  %bf.clear135 = and i32 %bf.load134, -33554433
  %bf.set136 = or i32 %bf.clear135, 33554432
  store i32 %bf.set136, i32* %lang_flag_1133, align 4
  br label %if.end.137

if.end.137:                                       ; preds = %if.then.131, %if.end.124
  %46 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common138 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %type139 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common138, i32 0, i32 1
  %47 = load %union.tree_node*, %union.tree_node** %type139, align 8
  %48 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %cmp140 = icmp eq %union.tree_node* %47, %48
  br i1 %cmp140, label %if.then.142, label %if.end.145

if.then.142:                                      ; preds = %if.end.137
  %49 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type143 = bitcast %union.tree_node* %49 to %struct.tree_type*
  %name144 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type143, i32 0, i32 11
  %50 = load %union.tree_node*, %union.tree_node** %name144, align 8
  %identifier = bitcast %union.tree_node* %50 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %51 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.207, i32 0, i32 0), i8* %51)
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.142, %if.end.137
  %52 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl146 = bitcast %union.tree_node* %52 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl146, i32 0, i32 12
  %53 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %tobool147 = icmp ne %union.tree_node* %53, null
  br i1 %tobool147, label %if.then.148, label %if.end.212

if.then.148:                                      ; preds = %if.end.145
  br label %while.cond.149

while.cond.149:                                   ; preds = %while.body.203, %if.then.148
  %54 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl150 = bitcast %union.tree_node* %54 to %struct.tree_decl*
  %initial151 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl150, i32 0, i32 12
  %55 = load %union.tree_node*, %union.tree_node** %initial151, align 8
  %common152 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %code153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 2
  %bf.load154 = load i32, i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %cmp156 = icmp eq i32 %bf.clear155, 115
  br i1 %cmp156, label %land.lhs.true.176, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %while.cond.149
  %56 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl159 = bitcast %union.tree_node* %56 to %struct.tree_decl*
  %initial160 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl159, i32 0, i32 12
  %57 = load %union.tree_node*, %union.tree_node** %initial160, align 8
  %common161 = bitcast %union.tree_node* %57 to %struct.tree_common*
  %code162 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common161, i32 0, i32 2
  %bf.load163 = load i32, i32* %code162, align 8
  %bf.clear164 = and i32 %bf.load163, 255
  %cmp165 = icmp eq i32 %bf.clear164, 114
  br i1 %cmp165, label %land.lhs.true.176, label %lor.lhs.false.167

lor.lhs.false.167:                                ; preds = %lor.lhs.false.158
  %58 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl168 = bitcast %union.tree_node* %58 to %struct.tree_decl*
  %initial169 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl168, i32 0, i32 12
  %59 = load %union.tree_node*, %union.tree_node** %initial169, align 8
  %common170 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %code171 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common170, i32 0, i32 2
  %bf.load172 = load i32, i32* %code171, align 8
  %bf.clear173 = and i32 %bf.load172, 255
  %cmp174 = icmp eq i32 %bf.clear173, 116
  br i1 %cmp174, label %land.lhs.true.176, label %land.end

land.lhs.true.176:                                ; preds = %lor.lhs.false.167, %lor.lhs.false.158, %while.cond.149
  %60 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl177 = bitcast %union.tree_node* %60 to %struct.tree_decl*
  %initial178 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl177, i32 0, i32 12
  %61 = load %union.tree_node*, %union.tree_node** %initial178, align 8
  %exp = bitcast %union.tree_node* %61 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %62 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp179 = icmp ne %union.tree_node* %62, %63
  br i1 %cmp179, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.176
  %64 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl181 = bitcast %union.tree_node* %64 to %struct.tree_decl*
  %initial182 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl181, i32 0, i32 12
  %65 = load %union.tree_node*, %union.tree_node** %initial182, align 8
  %common183 = bitcast %union.tree_node* %65 to %struct.tree_common*
  %type184 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common183, i32 0, i32 1
  %66 = load %union.tree_node*, %union.tree_node** %type184, align 8
  %type185 = bitcast %union.tree_node* %66 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type185, i32 0, i32 6
  %bf.load186 = load i32, i32* %mode, align 4
  %bf.lshr187 = lshr i32 %bf.load186, 9
  %bf.clear188 = and i32 %bf.lshr187, 127
  %67 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl189 = bitcast %union.tree_node* %67 to %struct.tree_decl*
  %initial190 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl189, i32 0, i32 12
  %68 = load %union.tree_node*, %union.tree_node** %initial190, align 8
  %exp191 = bitcast %union.tree_node* %68 to %struct.tree_exp*
  %operands192 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp191, i32 0, i32 2
  %arrayidx193 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands192, i32 0, i64 0
  %69 = load %union.tree_node*, %union.tree_node** %arrayidx193, align 8
  %common194 = bitcast %union.tree_node* %69 to %struct.tree_common*
  %type195 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common194, i32 0, i32 1
  %70 = load %union.tree_node*, %union.tree_node** %type195, align 8
  %type196 = bitcast %union.tree_node* %70 to %struct.tree_type*
  %mode197 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type196, i32 0, i32 6
  %bf.load198 = load i32, i32* %mode197, align 4
  %bf.lshr199 = lshr i32 %bf.load198, 9
  %bf.clear200 = and i32 %bf.lshr199, 127
  %cmp201 = icmp eq i32 %bf.clear188, %bf.clear200
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.176, %lor.lhs.false.167
  %71 = phi i1 [ false, %land.lhs.true.176 ], [ false, %lor.lhs.false.167 ], [ %cmp201, %land.rhs ]
  br i1 %71, label %while.body.203, label %while.end.211

while.body.203:                                   ; preds = %land.end
  %72 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl204 = bitcast %union.tree_node* %72 to %struct.tree_decl*
  %initial205 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl204, i32 0, i32 12
  %73 = load %union.tree_node*, %union.tree_node** %initial205, align 8
  %exp206 = bitcast %union.tree_node* %73 to %struct.tree_exp*
  %operands207 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp206, i32 0, i32 2
  %arrayidx208 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands207, i32 0, i64 0
  %74 = load %union.tree_node*, %union.tree_node** %arrayidx208, align 8
  %75 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl209 = bitcast %union.tree_node* %75 to %struct.tree_decl*
  %initial210 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl209, i32 0, i32 12
  store %union.tree_node* %74, %union.tree_node** %initial210, align 8
  br label %while.cond.149

while.end.211:                                    ; preds = %land.end
  br label %if.end.212

if.end.212:                                       ; preds = %while.end.211, %if.end.145
  %76 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl213 = bitcast %union.tree_node* %76 to %struct.tree_decl*
  %initial214 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl213, i32 0, i32 12
  %77 = load %union.tree_node*, %union.tree_node** %initial214, align 8
  %tobool215 = icmp ne %union.tree_node* %77, null
  br i1 %tobool215, label %if.then.216, label %if.end.232

if.then.216:                                      ; preds = %if.end.212
  %78 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl217 = bitcast %union.tree_node* %78 to %struct.tree_decl*
  %initial218 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl217, i32 0, i32 12
  %79 = load %union.tree_node*, %union.tree_node** %initial218, align 8
  %common219 = bitcast %union.tree_node* %79 to %struct.tree_common*
  %code220 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common219, i32 0, i32 2
  %bf.load221 = load i32, i32* %code220, align 8
  %bf.clear222 = and i32 %bf.load221, 255
  %cmp223 = icmp eq i32 %bf.clear222, 25
  br i1 %cmp223, label %if.then.225, label %if.else.228

if.then.225:                                      ; preds = %if.then.216
  %80 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl226 = bitcast %union.tree_node* %80 to %struct.tree_decl*
  %initial227 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl226, i32 0, i32 12
  %81 = load %union.tree_node*, %union.tree_node** %initial227, align 8
  call void @constant_expression_warning(%union.tree_node* %81)
  br label %if.end.231

if.else.228:                                      ; preds = %if.then.216
  %82 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %82, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.208, i32 0, i32 0))
  %83 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl229 = bitcast %union.tree_node* %83 to %struct.tree_decl*
  %initial230 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl229, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial230, align 8
  br label %if.end.231

if.end.231:                                       ; preds = %if.else.228, %if.then.225
  br label %if.end.232

if.end.232:                                       ; preds = %if.end.231, %if.end.212
  %84 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl233 = bitcast %union.tree_node* %84 to %struct.tree_decl*
  %initial234 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl233, i32 0, i32 12
  %85 = load %union.tree_node*, %union.tree_node** %initial234, align 8
  %tobool235 = icmp ne %union.tree_node* %85, null
  br i1 %tobool235, label %land.lhs.true.236, label %if.end.266

land.lhs.true.236:                                ; preds = %if.end.232
  %86 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common237 = bitcast %union.tree_node* %86 to %struct.tree_common*
  %type238 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common237, i32 0, i32 1
  %87 = load %union.tree_node*, %union.tree_node** %type238, align 8
  %common239 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %code240 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common239, i32 0, i32 2
  %bf.load241 = load i32, i32* %code240, align 8
  %bf.clear242 = and i32 %bf.load241, 255
  %cmp243 = icmp ne i32 %bf.clear242, 6
  br i1 %cmp243, label %land.lhs.true.245, label %if.end.266

land.lhs.true.245:                                ; preds = %land.lhs.true.236
  %88 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common246 = bitcast %union.tree_node* %88 to %struct.tree_common*
  %type247 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common246, i32 0, i32 1
  %89 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common248 = bitcast %union.tree_node* %89 to %struct.tree_common*
  %code249 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common248, i32 0, i32 2
  %bf.load250 = load i32, i32* %code249, align 8
  %bf.clear251 = and i32 %bf.load250, 255
  %cmp252 = icmp ne i32 %bf.clear251, 11
  br i1 %cmp252, label %land.lhs.true.254, label %if.end.266

land.lhs.true.254:                                ; preds = %land.lhs.true.245
  %90 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common255 = bitcast %union.tree_node* %90 to %struct.tree_common*
  %type256 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common255, i32 0, i32 1
  %91 = load %union.tree_node*, %union.tree_node** %type256, align 8
  %common257 = bitcast %union.tree_node* %91 to %struct.tree_common*
  %code258 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common257, i32 0, i32 2
  %bf.load259 = load i32, i32* %code258, align 8
  %bf.clear260 = and i32 %bf.load259, 255
  %cmp261 = icmp ne i32 %bf.clear260, 10
  br i1 %cmp261, label %if.then.263, label %if.end.266

if.then.263:                                      ; preds = %land.lhs.true.254
  %92 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %92, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.209, i32 0, i32 0))
  %93 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl264 = bitcast %union.tree_node* %93 to %struct.tree_decl*
  %initial265 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl264, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial265, align 8
  br label %if.end.266

if.end.266:                                       ; preds = %if.then.263, %land.lhs.true.254, %land.lhs.true.245, %land.lhs.true.236, %if.end.232
  %94 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl267 = bitcast %union.tree_node* %94 to %struct.tree_decl*
  %initial268 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl267, i32 0, i32 12
  %95 = load %union.tree_node*, %union.tree_node** %initial268, align 8
  %tobool269 = icmp ne %union.tree_node* %95, null
  br i1 %tobool269, label %land.lhs.true.270, label %if.end.314

land.lhs.true.270:                                ; preds = %if.end.266
  %96 = load i32, i32* @pedantic, align 4
  %tobool271 = icmp ne i32 %96, 0
  br i1 %tobool271, label %land.lhs.true.272, label %if.end.314

land.lhs.true.272:                                ; preds = %land.lhs.true.270
  %97 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common273 = bitcast %union.tree_node* %97 to %struct.tree_common*
  %type274 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common273, i32 0, i32 1
  %98 = load %union.tree_node*, %union.tree_node** %type274, align 8
  %type275 = bitcast %union.tree_node* %98 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type275, i32 0, i32 15
  %99 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %100 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp276 = icmp ne %union.tree_node* %99, %100
  br i1 %cmp276, label %land.lhs.true.278, label %if.end.314

land.lhs.true.278:                                ; preds = %land.lhs.true.272
  %101 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common279 = bitcast %union.tree_node* %101 to %struct.tree_common*
  %type280 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common279, i32 0, i32 1
  %102 = load %union.tree_node*, %union.tree_node** %type280, align 8
  %type281 = bitcast %union.tree_node* %102 to %struct.tree_type*
  %main_variant282 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type281, i32 0, i32 15
  %103 = load %union.tree_node*, %union.tree_node** %main_variant282, align 8
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %cmp283 = icmp ne %union.tree_node* %103, %104
  br i1 %cmp283, label %land.lhs.true.285, label %if.end.314

land.lhs.true.285:                                ; preds = %land.lhs.true.278
  %105 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common286 = bitcast %union.tree_node* %105 to %struct.tree_common*
  %type287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common286, i32 0, i32 1
  %106 = load %union.tree_node*, %union.tree_node** %type287, align 8
  %type288 = bitcast %union.tree_node* %106 to %struct.tree_type*
  %main_variant289 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type288, i32 0, i32 15
  %107 = load %union.tree_node*, %union.tree_node** %main_variant289, align 8
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %cmp290 = icmp ne %union.tree_node* %107, %108
  br i1 %cmp290, label %land.lhs.true.292, label %if.end.314

land.lhs.true.292:                                ; preds = %land.lhs.true.285
  %109 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common293 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %type294 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common293, i32 0, i32 1
  %110 = load %union.tree_node*, %union.tree_node** %type294, align 8
  %common295 = bitcast %union.tree_node* %110 to %struct.tree_common*
  %code296 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common295, i32 0, i32 2
  %bf.load297 = load i32, i32* %code296, align 8
  %bf.clear298 = and i32 %bf.load297, 255
  %cmp299 = icmp eq i32 %bf.clear298, 10
  br i1 %cmp299, label %land.lhs.true.301, label %if.then.313

land.lhs.true.301:                                ; preds = %land.lhs.true.292
  %111 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common302 = bitcast %union.tree_node* %111 to %struct.tree_common*
  %type303 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common302, i32 0, i32 1
  %112 = load %union.tree_node*, %union.tree_node** %type303, align 8
  %type304 = bitcast %union.tree_node* %112 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type304, i32 0, i32 6
  %bf.load305 = load i32, i32* %precision, align 4
  %bf.clear306 = and i32 %bf.load305, 511
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type307 = bitcast %union.tree_node* %113 to %struct.tree_type*
  %precision308 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type307, i32 0, i32 6
  %bf.load309 = load i32, i32* %precision308, align 4
  %bf.clear310 = and i32 %bf.load309, 511
  %cmp311 = icmp eq i32 %bf.clear306, %bf.clear310
  br i1 %cmp311, label %if.end.314, label %if.then.313

if.then.313:                                      ; preds = %land.lhs.true.301, %land.lhs.true.292
  %114 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %114, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.210, i32 0, i32 0))
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.313, %land.lhs.true.301, %land.lhs.true.285, %land.lhs.true.278, %land.lhs.true.272, %land.lhs.true.270, %if.end.266
  %115 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl315 = bitcast %union.tree_node* %115 to %struct.tree_decl*
  %initial316 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl315, i32 0, i32 12
  %116 = load %union.tree_node*, %union.tree_node** %initial316, align 8
  %tobool317 = icmp ne %union.tree_node* %116, null
  br i1 %tobool317, label %if.then.318, label %if.else.494

if.then.318:                                      ; preds = %if.end.314
  %117 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common319 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %type320 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common319, i32 0, i32 1
  %118 = load %union.tree_node*, %union.tree_node** %type320, align 8
  %type321 = bitcast %union.tree_node* %118 to %struct.tree_type*
  %main_variant322 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type321, i32 0, i32 15
  %119 = load %union.tree_node*, %union.tree_node** %main_variant322, align 8
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*], [32 x %union.tree_node*]* @c_global_trees, i32 0, i64 19), align 8
  %cmp323 = icmp eq %union.tree_node* %119, %120
  br i1 %cmp323, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.318
  br label %cond.end

cond.false:                                       ; preds = %if.then.318
  %121 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common325 = bitcast %union.tree_node* %121 to %struct.tree_common*
  %type326 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common325, i32 0, i32 1
  %122 = load %union.tree_node*, %union.tree_node** %type326, align 8
  %type327 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %precision328 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type327, i32 0, i32 6
  %bf.load329 = load i32, i32* %precision328, align 4
  %bf.clear330 = and i32 %bf.load329, 511
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond331 = phi i32 [ 8, %cond.true ], [ %bf.clear330, %cond.false ]
  store i32 %cond331, i32* %max_width, align 4
  %123 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl332 = bitcast %union.tree_node* %123 to %struct.tree_decl*
  %initial333 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl332, i32 0, i32 12
  %124 = load %union.tree_node*, %union.tree_node** %initial333, align 8
  %call334 = call i32 @tree_int_cst_sgn(%union.tree_node* %124)
  %cmp335 = icmp slt i32 %call334, 0
  br i1 %cmp335, label %if.then.337, label %if.else.338

if.then.337:                                      ; preds = %cond.end
  %125 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %125, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.211, i32 0, i32 0))
  br label %if.end.493

if.else.338:                                      ; preds = %cond.end
  %126 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl339 = bitcast %union.tree_node* %126 to %struct.tree_decl*
  %initial340 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl339, i32 0, i32 12
  %127 = load %union.tree_node*, %union.tree_node** %initial340, align 8
  %128 = load i32, i32* %max_width, align 4
  %conv341 = sext i32 %128 to i64
  %call342 = call i32 @compare_tree_int(%union.tree_node* %127, i64 %conv341)
  %cmp343 = icmp slt i32 0, %call342
  br i1 %cmp343, label %if.then.345, label %if.else.346

if.then.345:                                      ; preds = %if.else.338
  %129 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %129, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.212, i32 0, i32 0))
  br label %if.end.492

if.else.346:                                      ; preds = %if.else.338
  %130 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl347 = bitcast %union.tree_node* %130 to %struct.tree_decl*
  %initial348 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl347, i32 0, i32 12
  %131 = load %union.tree_node*, %union.tree_node** %initial348, align 8
  %call349 = call i32 @integer_zerop(%union.tree_node* %131)
  %tobool350 = icmp ne i32 %call349, 0
  br i1 %tobool350, label %land.lhs.true.351, label %if.else.357

land.lhs.true.351:                                ; preds = %if.else.346
  %132 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl352 = bitcast %union.tree_node* %132 to %struct.tree_decl*
  %name353 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl352, i32 0, i32 8
  %133 = load %union.tree_node*, %union.tree_node** %name353, align 8
  %cmp354 = icmp ne %union.tree_node* %133, null
  br i1 %cmp354, label %if.then.356, label %if.else.357

if.then.356:                                      ; preds = %land.lhs.true.351
  %134 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %134, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.213, i32 0, i32 0))
  br label %if.end.491

if.else.357:                                      ; preds = %land.lhs.true.351, %if.else.346
  %135 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl358 = bitcast %union.tree_node* %135 to %struct.tree_decl*
  %initial359 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl358, i32 0, i32 12
  %136 = load %union.tree_node*, %union.tree_node** %initial359, align 8
  %call360 = call i64 @tree_low_cst(%union.tree_node* %136, i32 1)
  store i64 %call360, i64* %width, align 8
  %137 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common361 = bitcast %union.tree_node* %137 to %struct.tree_common*
  %type362 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common361, i32 0, i32 1
  %138 = load %union.tree_node*, %union.tree_node** %type362, align 8
  %common363 = bitcast %union.tree_node* %138 to %struct.tree_common*
  %code364 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common363, i32 0, i32 2
  %bf.load365 = load i32, i32* %code364, align 8
  %bf.clear366 = and i32 %bf.load365, 255
  %cmp367 = icmp eq i32 %bf.clear366, 10
  br i1 %cmp367, label %land.lhs.true.369, label %if.end.399

land.lhs.true.369:                                ; preds = %if.else.357
  %139 = load i64, i64* %width, align 8
  %140 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common370 = bitcast %union.tree_node* %140 to %struct.tree_common*
  %type371 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common370, i32 0, i32 1
  %141 = load %union.tree_node*, %union.tree_node** %type371, align 8
  %type372 = bitcast %union.tree_node* %141 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type372, i32 0, i32 12
  %142 = load %union.tree_node*, %union.tree_node** %minval, align 8
  %143 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common373 = bitcast %union.tree_node* %143 to %struct.tree_common*
  %type374 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common373, i32 0, i32 1
  %144 = load %union.tree_node*, %union.tree_node** %type374, align 8
  %common375 = bitcast %union.tree_node* %144 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common375, i32 0, i32 2
  %bf.load376 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr377 = lshr i32 %bf.load376, 13
  %bf.clear378 = and i32 %bf.lshr377, 1
  %call379 = call i32 @min_precision(%union.tree_node* %142, i32 %bf.clear378)
  %conv380 = zext i32 %call379 to i64
  %cmp381 = icmp ult i64 %139, %conv380
  br i1 %cmp381, label %if.then.398, label %lor.lhs.false.383

lor.lhs.false.383:                                ; preds = %land.lhs.true.369
  %145 = load i64, i64* %width, align 8
  %146 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common384 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %type385 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common384, i32 0, i32 1
  %147 = load %union.tree_node*, %union.tree_node** %type385, align 8
  %type386 = bitcast %union.tree_node* %147 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type386, i32 0, i32 13
  %148 = load %union.tree_node*, %union.tree_node** %maxval, align 8
  %149 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common387 = bitcast %union.tree_node* %149 to %struct.tree_common*
  %type388 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common387, i32 0, i32 1
  %150 = load %union.tree_node*, %union.tree_node** %type388, align 8
  %common389 = bitcast %union.tree_node* %150 to %struct.tree_common*
  %unsigned_flag390 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common389, i32 0, i32 2
  %bf.load391 = load i32, i32* %unsigned_flag390, align 8
  %bf.lshr392 = lshr i32 %bf.load391, 13
  %bf.clear393 = and i32 %bf.lshr392, 1
  %call394 = call i32 @min_precision(%union.tree_node* %148, i32 %bf.clear393)
  %conv395 = zext i32 %call394 to i64
  %cmp396 = icmp ult i64 %145, %conv395
  br i1 %cmp396, label %if.then.398, label %if.end.399

if.then.398:                                      ; preds = %lor.lhs.false.383, %land.lhs.true.369
  %151 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %151, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.214, i32 0, i32 0))
  br label %if.end.399

if.end.399:                                       ; preds = %if.then.398, %lor.lhs.false.383, %if.else.357
  %152 = load i64, i64* %width, align 8
  %call400 = call %union.tree_node* @size_int_wide(i64 %152, i32 3)
  %153 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl401 = bitcast %union.tree_node* %153 to %struct.tree_decl*
  %size402 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl401, i32 0, i32 4
  store %union.tree_node* %call400, %union.tree_node** %size402, align 8
  %154 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl403 = bitcast %union.tree_node* %154 to %struct.tree_decl*
  %bit_field_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl403, i32 0, i32 5
  %155 = bitcast i48* %bit_field_flag to i64*
  %bf.load404 = load i64, i64* %155, align 8
  %bf.clear405 = and i64 %bf.load404, -4097
  %bf.set406 = or i64 %bf.clear405, 4096
  store i64 %bf.set406, i64* %155, align 8
  %156 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl407 = bitcast %union.tree_node* %156 to %struct.tree_decl*
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl407, i32 0, i32 5
  %157 = bitcast i48* %lang_flag_4 to i64*
  %bf.load408 = load i64, i64* %157, align 8
  %bf.clear409 = and i64 %bf.load408, -2199023255553
  %bf.set410 = or i64 %bf.clear409, 2199023255552
  store i64 %bf.set410, i64* %157, align 8
  %158 = load i64, i64* %width, align 8
  %cmp411 = icmp eq i64 %158, 0
  br i1 %cmp411, label %land.lhs.true.413, label %if.end.490

land.lhs.true.413:                                ; preds = %if.end.399
  %159 = load i1 (%union.tree_node*)*, i1 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 9), align 8
  %160 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %call414 = call zeroext i1 %159(%union.tree_node* %160)
  br i1 %call414, label %if.end.490, label %if.then.415

if.then.415:                                      ; preds = %land.lhs.true.413
  %161 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl416 = bitcast %union.tree_node* %161 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl416, i32 0, i32 6
  %a = bitcast %union.anon* %u1 to %struct.anon.0*
  %162 = bitcast %struct.anon.0* %a to i32*
  %bf.load417 = load i32, i32* %162, align 4
  %bf.clear418 = and i32 %bf.load417, 16777215
  %163 = load i32, i32* @target_flags, align 4
  %and = and i32 %163, 33554432
  %tobool419 = icmp ne i32 %and, 0
  %cond420 = select i1 %tobool419, i32 64, i32 32
  %cmp421 = icmp sgt i32 %bf.clear418, %cond420
  br i1 %cmp421, label %cond.true.423, label %cond.false.429

cond.true.423:                                    ; preds = %if.then.415
  %164 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl424 = bitcast %union.tree_node* %164 to %struct.tree_decl*
  %u1425 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl424, i32 0, i32 6
  %a426 = bitcast %union.anon* %u1425 to %struct.anon.0*
  %165 = bitcast %struct.anon.0* %a426 to i32*
  %bf.load427 = load i32, i32* %165, align 4
  %bf.clear428 = and i32 %bf.load427, 16777215
  br label %cond.end.433

cond.false.429:                                   ; preds = %if.then.415
  %166 = load i32, i32* @target_flags, align 4
  %and430 = and i32 %166, 33554432
  %tobool431 = icmp ne i32 %and430, 0
  %cond432 = select i1 %tobool431, i32 64, i32 32
  br label %cond.end.433

cond.end.433:                                     ; preds = %cond.false.429, %cond.true.423
  %cond434 = phi i32 [ %bf.clear428, %cond.true.423 ], [ %cond432, %cond.false.429 ]
  %167 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl435 = bitcast %union.tree_node* %167 to %struct.tree_decl*
  %u1436 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl435, i32 0, i32 6
  %a437 = bitcast %union.anon* %u1436 to %struct.anon.0*
  %168 = bitcast %struct.anon.0* %a437 to i32*
  %bf.load438 = load i32, i32* %168, align 4
  %bf.value439 = and i32 %cond434, 16777215
  %bf.clear440 = and i32 %bf.load438, -16777216
  %bf.set441 = or i32 %bf.clear440, %bf.value439
  store i32 %bf.set441, i32* %168, align 4
  %169 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl442 = bitcast %union.tree_node* %169 to %struct.tree_decl*
  %u1443 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl442, i32 0, i32 6
  %a444 = bitcast %union.anon* %u1443 to %struct.anon.0*
  %170 = bitcast %struct.anon.0* %a444 to i32*
  %bf.load445 = load i32, i32* %170, align 4
  %bf.clear446 = and i32 %bf.load445, 16777215
  %171 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common447 = bitcast %union.tree_node* %171 to %struct.tree_common*
  %type448 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common447, i32 0, i32 1
  %172 = load %union.tree_node*, %union.tree_node** %type448, align 8
  %type449 = bitcast %union.tree_node* %172 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type449, i32 0, i32 7
  %173 = load i32, i32* %align, align 4
  %cmp450 = icmp ugt i32 %bf.clear446, %173
  br i1 %cmp450, label %cond.true.452, label %cond.false.458

cond.true.452:                                    ; preds = %cond.end.433
  %174 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl453 = bitcast %union.tree_node* %174 to %struct.tree_decl*
  %u1454 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl453, i32 0, i32 6
  %a455 = bitcast %union.anon* %u1454 to %struct.anon.0*
  %175 = bitcast %struct.anon.0* %a455 to i32*
  %bf.load456 = load i32, i32* %175, align 4
  %bf.clear457 = and i32 %bf.load456, 16777215
  br label %cond.end.463

cond.false.458:                                   ; preds = %cond.end.433
  %176 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common459 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %type460 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common459, i32 0, i32 1
  %177 = load %union.tree_node*, %union.tree_node** %type460, align 8
  %type461 = bitcast %union.tree_node* %177 to %struct.tree_type*
  %align462 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type461, i32 0, i32 7
  %178 = load i32, i32* %align462, align 4
  br label %cond.end.463

cond.end.463:                                     ; preds = %cond.false.458, %cond.true.452
  %cond464 = phi i32 [ %bf.clear457, %cond.true.452 ], [ %178, %cond.false.458 ]
  %179 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl465 = bitcast %union.tree_node* %179 to %struct.tree_decl*
  %u1466 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl465, i32 0, i32 6
  %a467 = bitcast %union.anon* %u1466 to %struct.anon.0*
  %180 = bitcast %struct.anon.0* %a467 to i32*
  %bf.load468 = load i32, i32* %180, align 4
  %bf.value469 = and i32 %cond464, 16777215
  %bf.clear470 = and i32 %bf.load468, -16777216
  %bf.set471 = or i32 %bf.clear470, %bf.value469
  store i32 %bf.set471, i32* %180, align 4
  %181 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common472 = bitcast %union.tree_node* %181 to %struct.tree_common*
  %type473 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common472, i32 0, i32 1
  %182 = load %union.tree_node*, %union.tree_node** %type473, align 8
  %type474 = bitcast %union.tree_node* %182 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type474, i32 0, i32 6
  %bf.load475 = load i32, i32* %user_align, align 4
  %bf.lshr476 = lshr i32 %bf.load475, 31
  %183 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl477 = bitcast %union.tree_node* %183 to %struct.tree_decl*
  %user_align478 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl477, i32 0, i32 5
  %184 = bitcast i48* %user_align478 to i64*
  %bf.load479 = load i64, i64* %184, align 8
  %bf.lshr480 = lshr i64 %bf.load479, 35
  %bf.clear481 = and i64 %bf.lshr480, 1
  %bf.cast482 = trunc i64 %bf.clear481 to i32
  %or483 = or i32 %bf.cast482, %bf.lshr476
  %185 = zext i32 %or483 to i64
  %bf.load484 = load i64, i64* %184, align 8
  %bf.value485 = and i64 %185, 1
  %bf.shl486 = shl i64 %bf.value485, 35
  %bf.clear487 = and i64 %bf.load484, -34359738369
  %bf.set488 = or i64 %bf.clear487, %bf.shl486
  store i64 %bf.set488, i64* %184, align 8
  %bf.result.cast489 = trunc i64 %bf.value485 to i32
  br label %if.end.490

if.end.490:                                       ; preds = %cond.end.463, %land.lhs.true.413, %if.end.399
  br label %if.end.491

if.end.491:                                       ; preds = %if.end.490, %if.then.356
  br label %if.end.492

if.end.492:                                       ; preds = %if.end.491, %if.then.345
  br label %if.end.493

if.end.493:                                       ; preds = %if.end.492, %if.then.337
  br label %if.end.567

if.else.494:                                      ; preds = %if.end.314
  %186 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common495 = bitcast %union.tree_node* %186 to %struct.tree_common*
  %type496 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common495, i32 0, i32 1
  %187 = load %union.tree_node*, %union.tree_node** %type496, align 8
  %188 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp497 = icmp ne %union.tree_node* %187, %188
  br i1 %cmp497, label %if.then.499, label %if.end.566

if.then.499:                                      ; preds = %if.else.494
  %189 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl500 = bitcast %union.tree_node* %189 to %struct.tree_decl*
  %regdecl_flag501 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl500, i32 0, i32 5
  %190 = bitcast i48* %regdecl_flag501 to i64*
  %bf.load502 = load i64, i64* %190, align 8
  %bf.lshr503 = lshr i64 %bf.load502, 10
  %bf.clear504 = and i64 %bf.lshr503, 1
  %bf.cast505 = trunc i64 %bf.clear504 to i32
  %tobool506 = icmp ne i32 %bf.cast505, 0
  br i1 %tobool506, label %cond.true.507, label %cond.false.508

cond.true.507:                                    ; preds = %if.then.499
  br label %cond.end.513

cond.false.508:                                   ; preds = %if.then.499
  %191 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common509 = bitcast %union.tree_node* %191 to %struct.tree_common*
  %type510 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common509, i32 0, i32 1
  %192 = load %union.tree_node*, %union.tree_node** %type510, align 8
  %type511 = bitcast %union.tree_node* %192 to %struct.tree_type*
  %align512 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type511, i32 0, i32 7
  %193 = load i32, i32* %align512, align 4
  br label %cond.end.513

cond.end.513:                                     ; preds = %cond.false.508, %cond.true.507
  %cond514 = phi i32 [ 8, %cond.true.507 ], [ %193, %cond.false.508 ]
  store i32 %cond514, i32* %min_align, align 4
  %194 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl515 = bitcast %union.tree_node* %194 to %struct.tree_decl*
  %u1516 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl515, i32 0, i32 6
  %a517 = bitcast %union.anon* %u1516 to %struct.anon.0*
  %195 = bitcast %struct.anon.0* %a517 to i32*
  %bf.load518 = load i32, i32* %195, align 4
  %bf.clear519 = and i32 %bf.load518, 16777215
  %196 = load i32, i32* %min_align, align 4
  %cmp520 = icmp ugt i32 %bf.clear519, %196
  br i1 %cmp520, label %cond.true.522, label %cond.false.528

cond.true.522:                                    ; preds = %cond.end.513
  %197 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl523 = bitcast %union.tree_node* %197 to %struct.tree_decl*
  %u1524 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl523, i32 0, i32 6
  %a525 = bitcast %union.anon* %u1524 to %struct.anon.0*
  %198 = bitcast %struct.anon.0* %a525 to i32*
  %bf.load526 = load i32, i32* %198, align 4
  %bf.clear527 = and i32 %bf.load526, 16777215
  br label %cond.end.529

cond.false.528:                                   ; preds = %cond.end.513
  %199 = load i32, i32* %min_align, align 4
  br label %cond.end.529

cond.end.529:                                     ; preds = %cond.false.528, %cond.true.522
  %cond530 = phi i32 [ %bf.clear527, %cond.true.522 ], [ %199, %cond.false.528 ]
  %200 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl531 = bitcast %union.tree_node* %200 to %struct.tree_decl*
  %u1532 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl531, i32 0, i32 6
  %a533 = bitcast %union.anon* %u1532 to %struct.anon.0*
  %201 = bitcast %struct.anon.0* %a533 to i32*
  %bf.load534 = load i32, i32* %201, align 4
  %bf.value535 = and i32 %cond530, 16777215
  %bf.clear536 = and i32 %bf.load534, -16777216
  %bf.set537 = or i32 %bf.clear536, %bf.value535
  store i32 %bf.set537, i32* %201, align 4
  %202 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl538 = bitcast %union.tree_node* %202 to %struct.tree_decl*
  %regdecl_flag539 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl538, i32 0, i32 5
  %203 = bitcast i48* %regdecl_flag539 to i64*
  %bf.load540 = load i64, i64* %203, align 8
  %bf.lshr541 = lshr i64 %bf.load540, 10
  %bf.clear542 = and i64 %bf.lshr541, 1
  %bf.cast543 = trunc i64 %bf.clear542 to i32
  %tobool544 = icmp ne i32 %bf.cast543, 0
  br i1 %tobool544, label %if.end.565, label %if.then.545

if.then.545:                                      ; preds = %cond.end.529
  %204 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common546 = bitcast %union.tree_node* %204 to %struct.tree_common*
  %type547 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common546, i32 0, i32 1
  %205 = load %union.tree_node*, %union.tree_node** %type547, align 8
  %type548 = bitcast %union.tree_node* %205 to %struct.tree_type*
  %user_align549 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type548, i32 0, i32 6
  %bf.load550 = load i32, i32* %user_align549, align 4
  %bf.lshr551 = lshr i32 %bf.load550, 31
  %206 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl552 = bitcast %union.tree_node* %206 to %struct.tree_decl*
  %user_align553 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl552, i32 0, i32 5
  %207 = bitcast i48* %user_align553 to i64*
  %bf.load554 = load i64, i64* %207, align 8
  %bf.lshr555 = lshr i64 %bf.load554, 35
  %bf.clear556 = and i64 %bf.lshr555, 1
  %bf.cast557 = trunc i64 %bf.clear556 to i32
  %or558 = or i32 %bf.cast557, %bf.lshr551
  %208 = zext i32 %or558 to i64
  %bf.load559 = load i64, i64* %207, align 8
  %bf.value560 = and i64 %208, 1
  %bf.shl561 = shl i64 %bf.value560, 35
  %bf.clear562 = and i64 %bf.load559, -34359738369
  %bf.set563 = or i64 %bf.clear562, %bf.shl561
  store i64 %bf.set563, i64* %207, align 8
  %bf.result.cast564 = trunc i64 %bf.value560 to i32
  br label %if.end.565

if.end.565:                                       ; preds = %if.then.545, %cond.end.529
  br label %if.end.566

if.end.566:                                       ; preds = %if.end.565, %if.else.494
  br label %if.end.567

if.end.567:                                       ; preds = %if.end.566, %if.end.493
  %209 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl568 = bitcast %union.tree_node* %209 to %struct.tree_decl*
  %initial569 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl568, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial569, align 8
  %210 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common570 = bitcast %union.tree_node* %210 to %struct.tree_common*
  %type571 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common570, i32 0, i32 1
  %211 = load %union.tree_node*, %union.tree_node** %type571, align 8
  %common572 = bitcast %union.tree_node* %211 to %struct.tree_common*
  %code573 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common572, i32 0, i32 2
  %bf.load574 = load i32, i32* %code573, align 8
  %bf.clear575 = and i32 %bf.load574, 255
  %cmp576 = icmp eq i32 %bf.clear575, 18
  br i1 %cmp576, label %land.lhs.true.578, label %if.end.620

land.lhs.true.578:                                ; preds = %if.end.567
  %212 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common579 = bitcast %union.tree_node* %212 to %struct.tree_common*
  %type580 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common579, i32 0, i32 1
  %213 = load %union.tree_node*, %union.tree_node** %type580, align 8
  %type581 = bitcast %union.tree_node* %213 to %struct.tree_type*
  %size582 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type581, i32 0, i32 2
  %214 = load %union.tree_node*, %union.tree_node** %size582, align 8
  %cmp583 = icmp eq %union.tree_node* %214, null
  br i1 %cmp583, label %land.lhs.true.585, label %if.end.620

land.lhs.true.585:                                ; preds = %land.lhs.true.578
  %215 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common586 = bitcast %union.tree_node* %215 to %struct.tree_common*
  %type587 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common586, i32 0, i32 1
  %216 = load %union.tree_node*, %union.tree_node** %type587, align 8
  %type588 = bitcast %union.tree_node* %216 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type588, i32 0, i32 1
  %217 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp589 = icmp ne %union.tree_node* %217, null
  br i1 %cmp589, label %land.lhs.true.591, label %if.end.620

land.lhs.true.591:                                ; preds = %land.lhs.true.585
  %218 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common592 = bitcast %union.tree_node* %218 to %struct.tree_common*
  %type593 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common592, i32 0, i32 1
  %219 = load %union.tree_node*, %union.tree_node** %type593, align 8
  %type594 = bitcast %union.tree_node* %219 to %struct.tree_type*
  %values595 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type594, i32 0, i32 1
  %220 = load %union.tree_node*, %union.tree_node** %values595, align 8
  %type596 = bitcast %union.tree_node* %220 to %struct.tree_type*
  %maxval597 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type596, i32 0, i32 13
  %221 = load %union.tree_node*, %union.tree_node** %maxval597, align 8
  %cmp598 = icmp eq %union.tree_node* %221, null
  br i1 %cmp598, label %if.then.600, label %if.end.620

if.then.600:                                      ; preds = %land.lhs.true.591
  %222 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common601 = bitcast %union.tree_node* %222 to %struct.tree_common*
  %code602 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common601, i32 0, i32 2
  %bf.load603 = load i32, i32* %code602, align 8
  %bf.clear604 = and i32 %bf.load603, 255
  %cmp605 = icmp eq i32 %bf.clear604, 21
  br i1 %cmp605, label %if.then.607, label %if.else.608

if.then.607:                                      ; preds = %if.then.600
  %223 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %223, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.215, i32 0, i32 0))
  br label %if.end.619

if.else.608:                                      ; preds = %if.then.600
  %224 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common609 = bitcast %union.tree_node* %224 to %struct.tree_common*
  %chain610 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common609, i32 0, i32 0
  %225 = load %union.tree_node*, %union.tree_node** %chain610, align 8
  %cmp611 = icmp ne %union.tree_node* %225, null
  br i1 %cmp611, label %if.then.613, label %if.else.614

if.then.613:                                      ; preds = %if.else.608
  %226 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %226, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.216, i32 0, i32 0))
  br label %if.end.618

if.else.614:                                      ; preds = %if.else.608
  %227 = load i32, i32* %saw_named_field, align 4
  %tobool615 = icmp ne i32 %227, 0
  br i1 %tobool615, label %if.end.617, label %if.then.616

if.then.616:                                      ; preds = %if.else.614
  %228 = load %union.tree_node*, %union.tree_node** %x, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %228, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.217, i32 0, i32 0))
  br label %if.end.617

if.end.617:                                       ; preds = %if.then.616, %if.else.614
  br label %if.end.618

if.end.618:                                       ; preds = %if.end.617, %if.then.613
  br label %if.end.619

if.end.619:                                       ; preds = %if.end.618, %if.then.607
  br label %if.end.620

if.end.620:                                       ; preds = %if.end.619, %land.lhs.true.591, %land.lhs.true.585, %land.lhs.true.578, %if.end.567
  %229 = load %union.tree_node*, %union.tree_node** %x, align 8
  %decl621 = bitcast %union.tree_node* %229 to %struct.tree_decl*
  %name622 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl621, i32 0, i32 8
  %230 = load %union.tree_node*, %union.tree_node** %name622, align 8
  %tobool623 = icmp ne %union.tree_node* %230, null
  br i1 %tobool623, label %if.then.624, label %if.end.625

if.then.624:                                      ; preds = %if.end.620
  store i32 1, i32* %saw_named_field, align 4
  br label %if.end.625

if.end.625:                                       ; preds = %if.then.624, %if.end.620
  br label %for.inc.626

for.inc.626:                                      ; preds = %if.end.625
  %231 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common627 = bitcast %union.tree_node* %231 to %struct.tree_common*
  %chain628 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common627, i32 0, i32 0
  %232 = load %union.tree_node*, %union.tree_node** %chain628, align 8
  store %union.tree_node* %232, %union.tree_node** %x, align 8
  br label %for.cond.53

for.end.629:                                      ; preds = %for.cond.53
  %233 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  store %union.tree_node* %233, %union.tree_node** %x, align 8
  br label %for.cond.630

for.cond.630:                                     ; preds = %if.end.688, %for.end.629
  %234 = load %union.tree_node*, %union.tree_node** %x, align 8
  %tobool631 = icmp ne %union.tree_node* %234, null
  br i1 %tobool631, label %land.rhs.632, label %land.end.636

land.rhs.632:                                     ; preds = %for.cond.630
  %235 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common633 = bitcast %union.tree_node* %235 to %struct.tree_common*
  %chain634 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common633, i32 0, i32 0
  %236 = load %union.tree_node*, %union.tree_node** %chain634, align 8
  %tobool635 = icmp ne %union.tree_node* %236, null
  br label %land.end.636

land.end.636:                                     ; preds = %land.rhs.632, %for.cond.630
  %237 = phi i1 [ false, %for.cond.630 ], [ %tobool635, %land.rhs.632 ]
  br i1 %237, label %for.body.637, label %for.end.689

for.body.637:                                     ; preds = %land.end.636
  %238 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common638 = bitcast %union.tree_node* %238 to %struct.tree_common*
  %chain639 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common638, i32 0, i32 0
  %239 = load %union.tree_node*, %union.tree_node** %chain639, align 8
  %decl640 = bitcast %union.tree_node* %239 to %struct.tree_decl*
  %name641 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl640, i32 0, i32 8
  %240 = load %union.tree_node*, %union.tree_node** %name641, align 8
  %cmp642 = icmp eq %union.tree_node* %240, null
  br i1 %cmp642, label %if.then.644, label %if.else.647

if.then.644:                                      ; preds = %for.body.637
  %241 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common645 = bitcast %union.tree_node* %241 to %struct.tree_common*
  %chain646 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common645, i32 0, i32 0
  %242 = load %union.tree_node*, %union.tree_node** %chain646, align 8
  store %union.tree_node* %242, %union.tree_node** %x, align 8
  br label %if.end.688

if.else.647:                                      ; preds = %for.body.637
  %243 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  store %union.tree_node* %243, %union.tree_node** %y, align 8
  br label %while.body.649

while.body.649:                                   ; preds = %if.else.647, %if.end.663
  %244 = load %union.tree_node*, %union.tree_node** %y, align 8
  %decl650 = bitcast %union.tree_node* %244 to %struct.tree_decl*
  %name651 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl650, i32 0, i32 8
  %245 = load %union.tree_node*, %union.tree_node** %name651, align 8
  %246 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common652 = bitcast %union.tree_node* %246 to %struct.tree_common*
  %chain653 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common652, i32 0, i32 0
  %247 = load %union.tree_node*, %union.tree_node** %chain653, align 8
  %decl654 = bitcast %union.tree_node* %247 to %struct.tree_decl*
  %name655 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl654, i32 0, i32 8
  %248 = load %union.tree_node*, %union.tree_node** %name655, align 8
  %cmp656 = icmp eq %union.tree_node* %245, %248
  br i1 %cmp656, label %if.then.658, label %if.end.659

if.then.658:                                      ; preds = %while.body.649
  br label %while.end.666

if.end.659:                                       ; preds = %while.body.649
  %249 = load %union.tree_node*, %union.tree_node** %y, align 8
  %250 = load %union.tree_node*, %union.tree_node** %x, align 8
  %cmp660 = icmp eq %union.tree_node* %249, %250
  br i1 %cmp660, label %if.then.662, label %if.end.663

if.then.662:                                      ; preds = %if.end.659
  br label %while.end.666

if.end.663:                                       ; preds = %if.end.659
  %251 = load %union.tree_node*, %union.tree_node** %y, align 8
  %common664 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %chain665 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common664, i32 0, i32 0
  %252 = load %union.tree_node*, %union.tree_node** %chain665, align 8
  store %union.tree_node* %252, %union.tree_node** %y, align 8
  br label %while.body.649

while.end.666:                                    ; preds = %if.then.662, %if.then.658
  %253 = load %union.tree_node*, %union.tree_node** %y, align 8
  %decl667 = bitcast %union.tree_node* %253 to %struct.tree_decl*
  %name668 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl667, i32 0, i32 8
  %254 = load %union.tree_node*, %union.tree_node** %name668, align 8
  %255 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common669 = bitcast %union.tree_node* %255 to %struct.tree_common*
  %chain670 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common669, i32 0, i32 0
  %256 = load %union.tree_node*, %union.tree_node** %chain670, align 8
  %decl671 = bitcast %union.tree_node* %256 to %struct.tree_decl*
  %name672 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl671, i32 0, i32 8
  %257 = load %union.tree_node*, %union.tree_node** %name672, align 8
  %cmp673 = icmp eq %union.tree_node* %254, %257
  br i1 %cmp673, label %if.then.675, label %if.else.684

if.then.675:                                      ; preds = %while.end.666
  %258 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common676 = bitcast %union.tree_node* %258 to %struct.tree_common*
  %chain677 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common676, i32 0, i32 0
  %259 = load %union.tree_node*, %union.tree_node** %chain677, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %259, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.218, i32 0, i32 0))
  %260 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common678 = bitcast %union.tree_node* %260 to %struct.tree_common*
  %chain679 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common678, i32 0, i32 0
  %261 = load %union.tree_node*, %union.tree_node** %chain679, align 8
  %common680 = bitcast %union.tree_node* %261 to %struct.tree_common*
  %chain681 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common680, i32 0, i32 0
  %262 = load %union.tree_node*, %union.tree_node** %chain681, align 8
  %263 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common682 = bitcast %union.tree_node* %263 to %struct.tree_common*
  %chain683 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common682, i32 0, i32 0
  store %union.tree_node* %262, %union.tree_node** %chain683, align 8
  br label %if.end.687

if.else.684:                                      ; preds = %while.end.666
  %264 = load %union.tree_node*, %union.tree_node** %x, align 8
  %common685 = bitcast %union.tree_node* %264 to %struct.tree_common*
  %chain686 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common685, i32 0, i32 0
  %265 = load %union.tree_node*, %union.tree_node** %chain686, align 8
  store %union.tree_node* %265, %union.tree_node** %x, align 8
  br label %if.end.687

if.end.687:                                       ; preds = %if.else.684, %if.then.675
  br label %if.end.688

if.end.688:                                       ; preds = %if.end.687, %if.then.644
  br label %for.cond.630

for.end.689:                                      ; preds = %land.end.636
  %266 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  %267 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type690 = bitcast %union.tree_node* %267 to %struct.tree_type*
  %values691 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type690, i32 0, i32 1
  store %union.tree_node* %266, %union.tree_node** %values691, align 8
  %268 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  call void @layout_type(%union.tree_node* %268)
  store %union.tree_node** %fieldlist.addr, %union.tree_node*** %fieldlistp, align 8
  br label %while.cond.692

while.cond.692:                                   ; preds = %if.end.711, %for.end.689
  %269 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  %270 = load %union.tree_node*, %union.tree_node** %269, align 8
  %tobool693 = icmp ne %union.tree_node* %270, null
  br i1 %tobool693, label %while.body.694, label %while.end.712

while.body.694:                                   ; preds = %while.cond.692
  %271 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  %272 = load %union.tree_node*, %union.tree_node** %271, align 8
  %common695 = bitcast %union.tree_node* %272 to %struct.tree_common*
  %code696 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common695, i32 0, i32 2
  %bf.load697 = load i32, i32* %code696, align 8
  %bf.clear698 = and i32 %bf.load697, 255
  %cmp699 = icmp eq i32 %bf.clear698, 37
  br i1 %cmp699, label %land.lhs.true.701, label %if.else.708

land.lhs.true.701:                                ; preds = %while.body.694
  %273 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  %274 = load %union.tree_node*, %union.tree_node** %273, align 8
  %decl702 = bitcast %union.tree_node* %274 to %struct.tree_decl*
  %initial703 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl702, i32 0, i32 12
  %275 = load %union.tree_node*, %union.tree_node** %initial703, align 8
  %tobool704 = icmp ne %union.tree_node* %275, null
  br i1 %tobool704, label %if.then.705, label %if.else.708

if.then.705:                                      ; preds = %land.lhs.true.701
  %276 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  %277 = load %union.tree_node*, %union.tree_node** %276, align 8
  %common706 = bitcast %union.tree_node* %277 to %struct.tree_common*
  %chain707 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common706, i32 0, i32 0
  %278 = load %union.tree_node*, %union.tree_node** %chain707, align 8
  %279 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  store %union.tree_node* %278, %union.tree_node** %279, align 8
  br label %if.end.711

if.else.708:                                      ; preds = %land.lhs.true.701, %while.body.694
  %280 = load %union.tree_node**, %union.tree_node*** %fieldlistp, align 8
  %281 = load %union.tree_node*, %union.tree_node** %280, align 8
  %common709 = bitcast %union.tree_node* %281 to %struct.tree_common*
  %chain710 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common709, i32 0, i32 0
  store %union.tree_node** %chain710, %union.tree_node*** %fieldlistp, align 8
  br label %if.end.711

if.end.711:                                       ; preds = %if.else.708, %if.then.705
  br label %while.cond.692

while.end.712:                                    ; preds = %while.cond.692
  %282 = load %union.tree_node*, %union.tree_node** %fieldlist.addr, align 8
  %283 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type713 = bitcast %union.tree_node* %283 to %struct.tree_type*
  %values714 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type713, i32 0, i32 1
  store %union.tree_node* %282, %union.tree_node** %values714, align 8
  %284 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type715 = bitcast %union.tree_node* %284 to %struct.tree_type*
  %main_variant716 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type715, i32 0, i32 15
  %285 = load %union.tree_node*, %union.tree_node** %main_variant716, align 8
  store %union.tree_node* %285, %union.tree_node** %x, align 8
  br label %for.cond.717

for.cond.717:                                     ; preds = %for.inc.742, %while.end.712
  %286 = load %union.tree_node*, %union.tree_node** %x, align 8
  %tobool718 = icmp ne %union.tree_node* %286, null
  br i1 %tobool718, label %for.body.719, label %for.end.744

for.body.719:                                     ; preds = %for.cond.717
  %287 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type720 = bitcast %union.tree_node* %287 to %struct.tree_type*
  %values721 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type720, i32 0, i32 1
  %288 = load %union.tree_node*, %union.tree_node** %values721, align 8
  %289 = load %union.tree_node*, %union.tree_node** %x, align 8
  %type722 = bitcast %union.tree_node* %289 to %struct.tree_type*
  %values723 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type722, i32 0, i32 1
  store %union.tree_node* %288, %union.tree_node** %values723, align 8
  %290 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type724 = bitcast %union.tree_node* %290 to %struct.tree_type*
  %lang_specific = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type724, i32 0, i32 19
  %291 = load %struct.lang_type*, %struct.lang_type** %lang_specific, align 8
  %292 = load %union.tree_node*, %union.tree_node** %x, align 8
  %type725 = bitcast %union.tree_node* %292 to %struct.tree_type*
  %lang_specific726 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type725, i32 0, i32 19
  store %struct.lang_type* %291, %struct.lang_type** %lang_specific726, align 8
  %293 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type727 = bitcast %union.tree_node* %293 to %struct.tree_type*
  %align728 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type727, i32 0, i32 7
  %294 = load i32, i32* %align728, align 4
  %295 = load %union.tree_node*, %union.tree_node** %x, align 8
  %type729 = bitcast %union.tree_node* %295 to %struct.tree_type*
  %align730 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type729, i32 0, i32 7
  store i32 %294, i32* %align730, align 4
  %296 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type731 = bitcast %union.tree_node* %296 to %struct.tree_type*
  %user_align732 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type731, i32 0, i32 6
  %bf.load733 = load i32, i32* %user_align732, align 4
  %bf.lshr734 = lshr i32 %bf.load733, 31
  %297 = load %union.tree_node*, %union.tree_node** %x, align 8
  %type735 = bitcast %union.tree_node* %297 to %struct.tree_type*
  %user_align736 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type735, i32 0, i32 6
  %bf.load737 = load i32, i32* %user_align736, align 4
  %bf.value738 = and i32 %bf.lshr734, 1
  %bf.shl739 = shl i32 %bf.value738, 31
  %bf.clear740 = and i32 %bf.load737, 2147483647
  %bf.set741 = or i32 %bf.clear740, %bf.shl739
  store i32 %bf.set741, i32* %user_align736, align 4
  br label %for.inc.742

for.inc.742:                                      ; preds = %for.body.719
  %298 = load %union.tree_node*, %union.tree_node** %x, align 8
  %type743 = bitcast %union.tree_node* %298 to %struct.tree_type*
  %next_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type743, i32 0, i32 14
  %299 = load %union.tree_node*, %union.tree_node** %next_variant, align 8
  store %union.tree_node* %299, %union.tree_node** %x, align 8
  br label %for.cond.717

for.end.744:                                      ; preds = %for.cond.717
  %300 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common745 = bitcast %union.tree_node* %300 to %struct.tree_common*
  %code746 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common745, i32 0, i32 2
  %bf.load747 = load i32, i32* %code746, align 8
  %bf.clear748 = and i32 %bf.load747, 255
  %cmp749 = icmp eq i32 %bf.clear748, 21
  br i1 %cmp749, label %land.lhs.true.751, label %if.end.777

land.lhs.true.751:                                ; preds = %for.end.744
  %301 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type752 = bitcast %union.tree_node* %301 to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type752, i32 0, i32 6
  %bf.load753 = load i32, i32* %transparent_union_flag, align 4
  %bf.lshr754 = lshr i32 %bf.load753, 19
  %bf.clear755 = and i32 %bf.lshr754, 1
  %tobool756 = icmp ne i32 %bf.clear755, 0
  br i1 %tobool756, label %land.lhs.true.757, label %if.end.777

land.lhs.true.757:                                ; preds = %land.lhs.true.751
  %302 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type758 = bitcast %union.tree_node* %302 to %struct.tree_type*
  %mode759 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type758, i32 0, i32 6
  %bf.load760 = load i32, i32* %mode759, align 4
  %bf.lshr761 = lshr i32 %bf.load760, 9
  %bf.clear762 = and i32 %bf.lshr761, 127
  %303 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type763 = bitcast %union.tree_node* %303 to %struct.tree_type*
  %values764 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type763, i32 0, i32 1
  %304 = load %union.tree_node*, %union.tree_node** %values764, align 8
  %decl765 = bitcast %union.tree_node* %304 to %struct.tree_decl*
  %mode766 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl765, i32 0, i32 5
  %305 = bitcast i48* %mode766 to i64*
  %bf.load767 = load i64, i64* %305, align 8
  %bf.clear768 = and i64 %bf.load767, 255
  %bf.cast769 = trunc i64 %bf.clear768 to i32
  %cmp770 = icmp ne i32 %bf.clear762, %bf.cast769
  br i1 %cmp770, label %if.then.772, label %if.end.777

if.then.772:                                      ; preds = %land.lhs.true.757
  %306 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type773 = bitcast %union.tree_node* %306 to %struct.tree_type*
  %transparent_union_flag774 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type773, i32 0, i32 6
  %bf.load775 = load i32, i32* %transparent_union_flag774, align 4
  %bf.clear776 = and i32 %bf.load775, -524289
  store i32 %bf.clear776, i32* %transparent_union_flag774, align 4
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.219, i32 0, i32 0))
  br label %if.end.777

if.end.777:                                       ; preds = %if.then.772, %land.lhs.true.757, %land.lhs.true.751, %for.end.744
  %307 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %n_incomplete = getelementptr inbounds %struct.binding_level, %struct.binding_level* %307, i32 0, i32 11
  %308 = load i32, i32* %n_incomplete, align 4
  %cmp778 = icmp ne i32 %308, 0
  br i1 %cmp778, label %if.then.780, label %if.end.868

if.then.780:                                      ; preds = %if.end.777
  %309 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %309, i32 0, i32 0
  %310 = load %union.tree_node*, %union.tree_node** %names, align 8
  store %union.tree_node* %310, %union.tree_node** %decl781, align 8
  br label %for.cond.782

for.cond.782:                                     ; preds = %for.inc.864, %if.then.780
  %311 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %tobool783 = icmp ne %union.tree_node* %311, null
  br i1 %tobool783, label %for.body.784, label %for.end.867

for.body.784:                                     ; preds = %for.cond.782
  %312 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common785 = bitcast %union.tree_node* %312 to %struct.tree_common*
  %type786 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common785, i32 0, i32 1
  %313 = load %union.tree_node*, %union.tree_node** %type786, align 8
  %type787 = bitcast %union.tree_node* %313 to %struct.tree_type*
  %main_variant788 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type787, i32 0, i32 15
  %314 = load %union.tree_node*, %union.tree_node** %main_variant788, align 8
  %315 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type789 = bitcast %union.tree_node* %315 to %struct.tree_type*
  %main_variant790 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type789, i32 0, i32 15
  %316 = load %union.tree_node*, %union.tree_node** %main_variant790, align 8
  %cmp791 = icmp eq %union.tree_node* %314, %316
  br i1 %cmp791, label %land.lhs.true.793, label %if.else.809

land.lhs.true.793:                                ; preds = %for.body.784
  %317 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common794 = bitcast %union.tree_node* %317 to %struct.tree_common*
  %code795 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common794, i32 0, i32 2
  %bf.load796 = load i32, i32* %code795, align 8
  %bf.clear797 = and i32 %bf.load796, 255
  %cmp798 = icmp ne i32 %bf.clear797, 33
  br i1 %cmp798, label %if.then.800, label %if.else.809

if.then.800:                                      ; preds = %land.lhs.true.793
  %318 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @layout_decl(%union.tree_node* %318, i32 0)
  %319 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %319)
  %320 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %321 = load i32, i32* %toplevel, align 4
  call void @rest_of_decl_compilation(%union.tree_node* %320, i8* null, i32 %321, i32 0)
  %322 = load i32, i32* %toplevel, align 4
  %tobool801 = icmp ne i32 %322, 0
  br i1 %tobool801, label %if.end.803, label %if.then.802

if.then.802:                                      ; preds = %if.then.800
  %323 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @expand_decl(%union.tree_node* %323)
  br label %if.end.803

if.end.803:                                       ; preds = %if.then.802, %if.then.800
  %324 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %n_incomplete804 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %324, i32 0, i32 11
  %325 = load i32, i32* %n_incomplete804, align 4
  %dec = add nsw i32 %325, -1
  store i32 %dec, i32* %n_incomplete804, align 4
  %cmp805 = icmp eq i32 %dec, 0
  br i1 %cmp805, label %if.then.807, label %if.end.808

if.then.807:                                      ; preds = %if.end.803
  br label %for.end.867

if.end.808:                                       ; preds = %if.end.803
  br label %if.end.863

if.else.809:                                      ; preds = %land.lhs.true.793, %for.body.784
  %326 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common810 = bitcast %union.tree_node* %326 to %struct.tree_common*
  %type811 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common810, i32 0, i32 1
  %327 = load %union.tree_node*, %union.tree_node** %type811, align 8
  %type812 = bitcast %union.tree_node* %327 to %struct.tree_type*
  %size813 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type812, i32 0, i32 2
  %328 = load %union.tree_node*, %union.tree_node** %size813, align 8
  %cmp814 = icmp ne %union.tree_node* %328, null
  br i1 %cmp814, label %if.end.862, label %land.lhs.true.816

land.lhs.true.816:                                ; preds = %if.else.809
  %329 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common817 = bitcast %union.tree_node* %329 to %struct.tree_common*
  %type818 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common817, i32 0, i32 1
  %330 = load %union.tree_node*, %union.tree_node** %type818, align 8
  %common819 = bitcast %union.tree_node* %330 to %struct.tree_common*
  %code820 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common819, i32 0, i32 2
  %bf.load821 = load i32, i32* %code820, align 8
  %bf.clear822 = and i32 %bf.load821, 255
  %cmp823 = icmp eq i32 %bf.clear822, 18
  br i1 %cmp823, label %if.then.825, label %if.end.862

if.then.825:                                      ; preds = %land.lhs.true.816
  %331 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common826 = bitcast %union.tree_node* %331 to %struct.tree_common*
  %type827 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common826, i32 0, i32 1
  %332 = load %union.tree_node*, %union.tree_node** %type827, align 8
  store %union.tree_node* %332, %union.tree_node** %element, align 8
  br label %while.cond.828

while.cond.828:                                   ; preds = %while.body.835, %if.then.825
  %333 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common829 = bitcast %union.tree_node* %333 to %struct.tree_common*
  %code830 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common829, i32 0, i32 2
  %bf.load831 = load i32, i32* %code830, align 8
  %bf.clear832 = and i32 %bf.load831, 255
  %cmp833 = icmp eq i32 %bf.clear832, 18
  br i1 %cmp833, label %while.body.835, label %while.end.838

while.body.835:                                   ; preds = %while.cond.828
  %334 = load %union.tree_node*, %union.tree_node** %element, align 8
  %common836 = bitcast %union.tree_node* %334 to %struct.tree_common*
  %type837 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common836, i32 0, i32 1
  %335 = load %union.tree_node*, %union.tree_node** %type837, align 8
  store %union.tree_node* %335, %union.tree_node** %element, align 8
  br label %while.cond.828

while.end.838:                                    ; preds = %while.cond.828
  %336 = load %union.tree_node*, %union.tree_node** %element, align 8
  %337 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %cmp839 = icmp eq %union.tree_node* %336, %337
  br i1 %cmp839, label %if.then.841, label %if.end.861

if.then.841:                                      ; preds = %while.end.838
  %338 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common842 = bitcast %union.tree_node* %338 to %struct.tree_common*
  %type843 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common842, i32 0, i32 1
  %339 = load %union.tree_node*, %union.tree_node** %type843, align 8
  call void @layout_array_type(%union.tree_node* %339)
  %340 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common844 = bitcast %union.tree_node* %340 to %struct.tree_common*
  %code845 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common844, i32 0, i32 2
  %bf.load846 = load i32, i32* %code845, align 8
  %bf.clear847 = and i32 %bf.load846, 255
  %cmp848 = icmp ne i32 %bf.clear847, 33
  br i1 %cmp848, label %if.then.850, label %if.end.854

if.then.850:                                      ; preds = %if.then.841
  %341 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @layout_decl(%union.tree_node* %341, i32 0)
  %342 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @maybe_objc_check_decl(%union.tree_node* %342)
  %343 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %344 = load i32, i32* %toplevel, align 4
  call void @rest_of_decl_compilation(%union.tree_node* %343, i8* null, i32 %344, i32 0)
  %345 = load i32, i32* %toplevel, align 4
  %tobool851 = icmp ne i32 %345, 0
  br i1 %tobool851, label %if.end.853, label %if.then.852

if.then.852:                                      ; preds = %if.then.850
  %346 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  call void @expand_decl(%union.tree_node* %346)
  br label %if.end.853

if.end.853:                                       ; preds = %if.then.852, %if.then.850
  br label %if.end.854

if.end.854:                                       ; preds = %if.end.853, %if.then.841
  %347 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %n_incomplete855 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %347, i32 0, i32 11
  %348 = load i32, i32* %n_incomplete855, align 4
  %dec856 = add nsw i32 %348, -1
  store i32 %dec856, i32* %n_incomplete855, align 4
  %cmp857 = icmp eq i32 %dec856, 0
  br i1 %cmp857, label %if.then.859, label %if.end.860

if.then.859:                                      ; preds = %if.end.854
  br label %for.end.867

if.end.860:                                       ; preds = %if.end.854
  br label %if.end.861

if.end.861:                                       ; preds = %if.end.860, %while.end.838
  br label %if.end.862

if.end.862:                                       ; preds = %if.end.861, %land.lhs.true.816, %if.else.809
  br label %if.end.863

if.end.863:                                       ; preds = %if.end.862, %if.end.808
  br label %for.inc.864

for.inc.864:                                      ; preds = %if.end.863
  %349 = load %union.tree_node*, %union.tree_node** %decl781, align 8
  %common865 = bitcast %union.tree_node* %349 to %struct.tree_common*
  %chain866 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common865, i32 0, i32 0
  %350 = load %union.tree_node*, %union.tree_node** %chain866, align 8
  store %union.tree_node* %350, %union.tree_node** %decl781, align 8
  br label %for.cond.782

for.end.867:                                      ; preds = %if.then.859, %if.then.807, %for.cond.782
  br label %if.end.868

if.end.868:                                       ; preds = %for.end.867, %if.end.777
  %351 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %352 = load i32, i32* %toplevel, align 4
  call void @rest_of_type_compilation(%union.tree_node* %351, i32 %352)
  %353 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  ret %union.tree_node* %353
}

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

declare i32 @integer_zerop(%union.tree_node*) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare i32 @min_precision(%union.tree_node*, i32) #1

declare %union.tree_node* @size_int_wide(i64, i32) #1

; Function Attrs: nounwind uwtable
define internal void @layout_array_type(%union.tree_node* %t) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common1 = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common2 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8
  call void @layout_array_type(%union.tree_node* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  call void @layout_type(%union.tree_node* %4)
  ret void
}

declare void @rest_of_type_compilation(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_enum(%union.tree_node* %name) #0 {
entry:
  %name.addr = alloca %union.tree_node*, align 8
  %enumtype = alloca %union.tree_node*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* null, %union.tree_node** %enumtype, align 8
  %0 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %cmp = icmp ne %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %2 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %call = call %union.tree_node* @lookup_tag(i32 10, %union.tree_node* %1, %struct.binding_level* %2, i32 1)
  store %union.tree_node* %call, %union.tree_node** %enumtype, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %cmp1 = icmp eq %union.tree_node* %3, null
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %common = bitcast %union.tree_node* %4 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp ne i32 %bf.clear, 10
  br i1 %cmp2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %call4 = call %union.tree_node* @make_node(i32 10)
  store %union.tree_node* %call4, %union.tree_node** %enumtype, align 8
  %5 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %6 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  call void @pushtag(%union.tree_node* %5, %union.tree_node* %6)
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %lor.lhs.false
  %7 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %type = bitcast %union.tree_node* %7 to %struct.tree_type*
  %lang_flag_0 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load6 = load i32, i32* %lang_flag_0, align 4
  %bf.clear7 = and i32 %bf.load6, -16777217
  %bf.set = or i32 %bf.clear7, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 4
  %8 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %type8 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type8, i32 0, i32 1
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8
  %cmp9 = icmp ne %union.tree_node* %9, null
  br i1 %cmp9, label %if.then.10, label %if.end.13

if.then.10:                                       ; preds = %if.end.5
  %10 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %10 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %11 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.220, i32 0, i32 0), i8* %11)
  %12 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %type11 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %values12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i32 0, i32 1
  store %union.tree_node* null, %union.tree_node** %values12, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.10, %if.end.5
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %13, %union.tree_node** @enum_next_value, align 8
  store i32 0, i32* @enum_overflow, align 4
  %14 = load i32, i32* @flag_short_enums, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %if.then.14, label %if.end.19

if.then.14:                                       ; preds = %if.end.13
  %15 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  %type15 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i32 0, i32 6
  %bf.load16 = load i32, i32* %packed_flag, align 4
  %bf.clear17 = and i32 %bf.load16, -1048577
  %bf.set18 = or i32 %bf.clear17, 1048576
  store i32 %bf.set18, i32* %packed_flag, align 4
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.14, %if.end.13
  %16 = load %union.tree_node*, %union.tree_node** %enumtype, align 8
  ret %union.tree_node* %16
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @finish_enum(%union.tree_node* %enumtype, %union.tree_node* %values, %union.tree_node* %attributes) #0 {
entry:
  %enumtype.addr = alloca %union.tree_node*, align 8
  %values.addr = alloca %union.tree_node*, align 8
  %attributes.addr = alloca %union.tree_node*, align 8
  %pair = alloca %union.tree_node*, align 8
  %tem = alloca %union.tree_node*, align 8
  %minnode = alloca %union.tree_node*, align 8
  %maxnode = alloca %union.tree_node*, align 8
  %enum_value_type = alloca %union.tree_node*, align 8
  %precision = alloca i32, align 4
  %unsign = alloca i32, align 4
  %toplevel = alloca i32, align 4
  %value6 = alloca %union.tree_node*, align 8
  %narrowest = alloca %union.tree_node*, align 8
  %enu = alloca %union.tree_node*, align 8
  store %union.tree_node* %enumtype, %union.tree_node** %enumtype.addr, align 8
  store %union.tree_node* %values, %union.tree_node** %values.addr, align 8
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  store %union.tree_node* null, %union.tree_node** %minnode, align 8
  store %union.tree_node* null, %union.tree_node** %maxnode, align 8
  %0 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %toplevel, align 4
  %call = call i32 @in_parm_level_p()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.221, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %enumtype.addr, %union.tree_node* %2, i32 8)
  %3 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp2 = icmp eq %union.tree_node* %3, %4
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  store %union.tree_node* %5, %union.tree_node** %maxnode, align 8
  store %union.tree_node* %5, %union.tree_node** %minnode, align 8
  br label %if.end.19

if.else:                                          ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  %list = bitcast %union.tree_node* %6 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %7, %union.tree_node** %maxnode, align 8
  store %union.tree_node* %7, %union.tree_node** %minnode, align 8
  %8 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  %common = bitcast %union.tree_node* %8 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %9 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %9, %union.tree_node** %pair, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %tobool5 = icmp ne %union.tree_node* %10, null
  br i1 %tobool5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %list7 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %value8 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list7, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %value8, align 8
  store %union.tree_node* %12, %union.tree_node** %value6, align 8
  %13 = load %union.tree_node*, %union.tree_node** %maxnode, align 8
  %14 = load %union.tree_node*, %union.tree_node** %value6, align 8
  %call9 = call i32 @tree_int_cst_lt(%union.tree_node* %13, %union.tree_node* %14)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %for.body
  %15 = load %union.tree_node*, %union.tree_node** %value6, align 8
  store %union.tree_node* %15, %union.tree_node** %maxnode, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %for.body
  %16 = load %union.tree_node*, %union.tree_node** %value6, align 8
  %17 = load %union.tree_node*, %union.tree_node** %minnode, align 8
  %call13 = call i32 @tree_int_cst_lt(%union.tree_node* %16, %union.tree_node* %17)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.12
  %18 = load %union.tree_node*, %union.tree_node** %value6, align 8
  store %union.tree_node* %18, %union.tree_node** %minnode, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %if.end.12
  br label %for.inc

for.inc:                                          ; preds = %if.end.16
  %19 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %common17 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %chain18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 0
  %20 = load %union.tree_node*, %union.tree_node** %chain18, align 8
  store %union.tree_node* %20, %union.tree_node** %pair, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.19

if.end.19:                                        ; preds = %for.end, %if.then.4
  %21 = load %union.tree_node*, %union.tree_node** %minnode, align 8
  %call20 = call i32 @tree_int_cst_sgn(%union.tree_node* %21)
  %cmp21 = icmp sge i32 %call20, 0
  %conv22 = zext i1 %cmp21 to i32
  store i32 %conv22, i32* %unsign, align 4
  %22 = load %union.tree_node*, %union.tree_node** %minnode, align 8
  %23 = load i32, i32* %unsign, align 4
  %call23 = call i32 @min_precision(%union.tree_node* %22, i32 %23)
  %24 = load %union.tree_node*, %union.tree_node** %maxnode, align 8
  %25 = load i32, i32* %unsign, align 4
  %call24 = call i32 @min_precision(%union.tree_node* %24, i32 %25)
  %cmp25 = icmp ugt i32 %call23, %call24
  br i1 %cmp25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.19
  %26 = load %union.tree_node*, %union.tree_node** %minnode, align 8
  %27 = load i32, i32* %unsign, align 4
  %call27 = call i32 @min_precision(%union.tree_node* %26, i32 %27)
  br label %cond.end

cond.false:                                       ; preds = %if.end.19
  %28 = load %union.tree_node*, %union.tree_node** %maxnode, align 8
  %29 = load i32, i32* %unsign, align 4
  %call28 = call i32 @min_precision(%union.tree_node* %28, i32 %29)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call27, %cond.true ], [ %call28, %cond.false ]
  store i32 %cond, i32* %precision, align 4
  %30 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type = bitcast %union.tree_node* %30 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 6
  %bf.load = load i32, i32* %packed_flag, align 4
  %bf.lshr = lshr i32 %bf.load, 20
  %bf.clear = and i32 %bf.lshr, 1
  %tobool29 = icmp ne i32 %bf.clear, 0
  br i1 %tobool29, label %if.then.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end
  %31 = load i32, i32* %precision, align 4
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type30 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %precision31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i32 0, i32 6
  %bf.load32 = load i32, i32* %precision31, align 4
  %bf.clear33 = and i32 %bf.load32, 511
  %cmp34 = icmp sgt i32 %31, %bf.clear33
  br i1 %cmp34, label %if.then.36, label %if.else.46

if.then.36:                                       ; preds = %lor.lhs.false, %cond.end
  %33 = load i32, i32* %precision, align 4
  %34 = load i32, i32* %unsign, align 4
  %call37 = call %union.tree_node* @type_for_size(i32 %33, i32 %34)
  store %union.tree_node* %call37, %union.tree_node** %narrowest, align 8
  %35 = load %union.tree_node*, %union.tree_node** %narrowest, align 8
  %cmp38 = icmp eq %union.tree_node* %35, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.then.36
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.222, i32 0, i32 0))
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 9), align 8
  store %union.tree_node* %36, %union.tree_node** %narrowest, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %if.then.36
  %37 = load %union.tree_node*, %union.tree_node** %narrowest, align 8
  %type42 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %precision43 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type42, i32 0, i32 6
  %bf.load44 = load i32, i32* %precision43, align 4
  %bf.clear45 = and i32 %bf.load44, 511
  store i32 %bf.clear45, i32* %precision, align 4
  br label %if.end.51

if.else.46:                                       ; preds = %lor.lhs.false
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type47 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %precision48 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i32 0, i32 6
  %bf.load49 = load i32, i32* %precision48, align 4
  %bf.clear50 = and i32 %bf.load49, 511
  store i32 %bf.clear50, i32* %precision, align 4
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.46, %if.end.41
  %39 = load i32, i32* %precision, align 4
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type52 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %precision53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i32 0, i32 6
  %bf.load54 = load i32, i32* %precision53, align 4
  %bf.clear55 = and i32 %bf.load54, 511
  %cmp56 = icmp eq i32 %39, %bf.clear55
  br i1 %cmp56, label %if.then.58, label %if.else.60

if.then.58:                                       ; preds = %if.end.51
  %41 = load i32, i32* %precision, align 4
  %call59 = call %union.tree_node* @type_for_size(i32 %41, i32 0)
  store %union.tree_node* %call59, %union.tree_node** %enum_value_type, align 8
  br label %if.end.61

if.else.60:                                       ; preds = %if.end.51
  %42 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  store %union.tree_node* %42, %union.tree_node** %enum_value_type, align 8
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.60, %if.then.58
  %43 = load %union.tree_node*, %union.tree_node** %minnode, align 8
  %44 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type62 = bitcast %union.tree_node* %44 to %struct.tree_type*
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type62, i32 0, i32 12
  store %union.tree_node* %43, %union.tree_node** %minval, align 8
  %45 = load %union.tree_node*, %union.tree_node** %maxnode, align 8
  %46 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type63 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %maxval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type63, i32 0, i32 13
  store %union.tree_node* %45, %union.tree_node** %maxval, align 8
  %47 = load i32, i32* %precision, align 4
  %48 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type64 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %precision65 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i32 0, i32 6
  %bf.load66 = load i32, i32* %precision65, align 4
  %bf.value = and i32 %47, 511
  %bf.clear67 = and i32 %bf.load66, -512
  %bf.set = or i32 %bf.clear67, %bf.value
  store i32 %bf.set, i32* %precision65, align 4
  %49 = load i32, i32* %unsign, align 4
  %50 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %common68 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common68, i32 0, i32 2
  %bf.load69 = load i32, i32* %unsigned_flag, align 8
  %bf.value70 = and i32 %49, 1
  %bf.shl = shl i32 %bf.value70, 13
  %bf.clear71 = and i32 %bf.load69, -8193
  %bf.set72 = or i32 %bf.clear71, %bf.shl
  store i32 %bf.set72, i32* %unsigned_flag, align 8
  %51 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type73 = bitcast %union.tree_node* %51 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type73, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %size, align 8
  %52 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  call void @layout_type(%union.tree_node* %52)
  %53 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp74 = icmp ne %union.tree_node* %53, %54
  br i1 %cmp74, label %if.then.76, label %if.end.145

if.then.76:                                       ; preds = %if.end.61
  %55 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  store %union.tree_node* %55, %union.tree_node** %pair, align 8
  br label %for.cond.77

for.cond.77:                                      ; preds = %for.inc.139, %if.then.76
  %56 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %tobool78 = icmp ne %union.tree_node* %56, null
  br i1 %tobool78, label %for.body.79, label %for.end.142

for.body.79:                                      ; preds = %for.cond.77
  %57 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %list80 = bitcast %union.tree_node* %57 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list80, i32 0, i32 1
  %58 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  store %union.tree_node* %58, %union.tree_node** %enu, align 8
  %59 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %60 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %common81 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %type82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 1
  store %union.tree_node* %59, %union.tree_node** %type82, align 8
  %61 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type83 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %size84 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type83, i32 0, i32 2
  %62 = load %union.tree_node*, %union.tree_node** %size84, align 8
  %63 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl = bitcast %union.tree_node* %63 to %struct.tree_decl*
  %size85 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 4
  store %union.tree_node* %62, %union.tree_node** %size85, align 8
  %64 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type86 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type86, i32 0, i32 3
  %65 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %66 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl87 = bitcast %union.tree_node* %66 to %struct.tree_decl*
  %size_unit88 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl87, i32 0, i32 7
  store %union.tree_node* %65, %union.tree_node** %size_unit88, align 8
  %67 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type89 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type89, i32 0, i32 7
  %68 = load i32, i32* %align, align 4
  %69 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl90 = bitcast %union.tree_node* %69 to %struct.tree_decl*
  %u1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl90, i32 0, i32 6
  %a = bitcast %union.anon* %u1 to %struct.anon.0*
  %70 = bitcast %struct.anon.0* %a to i32*
  %bf.load91 = load i32, i32* %70, align 4
  %bf.value92 = and i32 %68, 16777215
  %bf.clear93 = and i32 %bf.load91, -16777216
  %bf.set94 = or i32 %bf.clear93, %bf.value92
  store i32 %bf.set94, i32* %70, align 4
  %71 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type95 = bitcast %union.tree_node* %71 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i32 0, i32 6
  %bf.load96 = load i32, i32* %user_align, align 4
  %bf.lshr97 = lshr i32 %bf.load96, 31
  %72 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl98 = bitcast %union.tree_node* %72 to %struct.tree_decl*
  %user_align99 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl98, i32 0, i32 5
  %73 = bitcast i48* %user_align99 to i64*
  %74 = zext i32 %bf.lshr97 to i64
  %bf.load100 = load i64, i64* %73, align 8
  %bf.value101 = and i64 %74, 1
  %bf.shl102 = shl i64 %bf.value101, 35
  %bf.clear103 = and i64 %bf.load100, -34359738369
  %bf.set104 = or i64 %bf.clear103, %bf.shl102
  store i64 %bf.set104, i64* %73, align 8
  %bf.result.cast = trunc i64 %bf.value101 to i32
  %75 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type105 = bitcast %union.tree_node* %75 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type105, i32 0, i32 6
  %bf.load106 = load i32, i32* %mode, align 4
  %bf.lshr107 = lshr i32 %bf.load106, 9
  %bf.clear108 = and i32 %bf.lshr107, 127
  %76 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl109 = bitcast %union.tree_node* %76 to %struct.tree_decl*
  %mode110 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl109, i32 0, i32 5
  %77 = bitcast i48* %mode110 to i64*
  %78 = zext i32 %bf.clear108 to i64
  %bf.load111 = load i64, i64* %77, align 8
  %bf.value112 = and i64 %78, 255
  %bf.clear113 = and i64 %bf.load111, -256
  %bf.set114 = or i64 %bf.clear113, %bf.value112
  store i64 %bf.set114, i64* %77, align 8
  %bf.result.cast115 = trunc i64 %bf.value112 to i32
  %79 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl116 = bitcast %union.tree_node* %79 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl116, i32 0, i32 12
  %80 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %81 = load %union.tree_node*, %union.tree_node** %enum_value_type, align 8
  %call117 = call i32 @int_fits_type_p(%union.tree_node* %80, %union.tree_node* %81)
  %tobool118 = icmp ne i32 %call117, 0
  br i1 %tobool118, label %if.then.119, label %if.else.125

if.then.119:                                      ; preds = %for.body.79
  %82 = load %union.tree_node*, %union.tree_node** %enum_value_type, align 8
  %83 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl120 = bitcast %union.tree_node* %83 to %struct.tree_decl*
  %initial121 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl120, i32 0, i32 12
  %84 = load %union.tree_node*, %union.tree_node** %initial121, align 8
  %call122 = call %union.tree_node* @convert(%union.tree_node* %82, %union.tree_node* %84)
  %85 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl123 = bitcast %union.tree_node* %85 to %struct.tree_decl*
  %initial124 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl123, i32 0, i32 12
  store %union.tree_node* %call122, %union.tree_node** %initial124, align 8
  br label %if.end.131

if.else.125:                                      ; preds = %for.body.79
  %86 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %87 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl126 = bitcast %union.tree_node* %87 to %struct.tree_decl*
  %initial127 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl126, i32 0, i32 12
  %88 = load %union.tree_node*, %union.tree_node** %initial127, align 8
  %call128 = call %union.tree_node* @convert(%union.tree_node* %86, %union.tree_node* %88)
  %89 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl129 = bitcast %union.tree_node* %89 to %struct.tree_decl*
  %initial130 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl129, i32 0, i32 12
  store %union.tree_node* %call128, %union.tree_node** %initial130, align 8
  br label %if.end.131

if.end.131:                                       ; preds = %if.else.125, %if.then.119
  %90 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl132 = bitcast %union.tree_node* %90 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl132, i32 0, i32 8
  %91 = load %union.tree_node*, %union.tree_node** %name, align 8
  %92 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %list133 = bitcast %union.tree_node* %92 to %struct.tree_list*
  %purpose134 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list133, i32 0, i32 1
  store %union.tree_node* %91, %union.tree_node** %purpose134, align 8
  %93 = load %union.tree_node*, %union.tree_node** %enu, align 8
  %decl135 = bitcast %union.tree_node* %93 to %struct.tree_decl*
  %initial136 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl135, i32 0, i32 12
  %94 = load %union.tree_node*, %union.tree_node** %initial136, align 8
  %95 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %list137 = bitcast %union.tree_node* %95 to %struct.tree_list*
  %value138 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list137, i32 0, i32 2
  store %union.tree_node* %94, %union.tree_node** %value138, align 8
  br label %for.inc.139

for.inc.139:                                      ; preds = %if.end.131
  %96 = load %union.tree_node*, %union.tree_node** %pair, align 8
  %common140 = bitcast %union.tree_node* %96 to %struct.tree_common*
  %chain141 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common140, i32 0, i32 0
  %97 = load %union.tree_node*, %union.tree_node** %chain141, align 8
  store %union.tree_node* %97, %union.tree_node** %pair, align 8
  br label %for.cond.77

for.end.142:                                      ; preds = %for.cond.77
  %98 = load %union.tree_node*, %union.tree_node** %values.addr, align 8
  %99 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type143 = bitcast %union.tree_node* %99 to %struct.tree_type*
  %values144 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type143, i32 0, i32 1
  store %union.tree_node* %98, %union.tree_node** %values144, align 8
  br label %if.end.145

if.end.145:                                       ; preds = %for.end.142, %if.end.61
  %100 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type146 = bitcast %union.tree_node* %100 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type146, i32 0, i32 15
  %101 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  store %union.tree_node* %101, %union.tree_node** %tem, align 8
  br label %for.cond.147

for.cond.147:                                     ; preds = %for.inc.223, %if.end.145
  %102 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %tobool148 = icmp ne %union.tree_node* %102, null
  br i1 %tobool148, label %for.body.149, label %for.end.225

for.body.149:                                     ; preds = %for.cond.147
  %103 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %104 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %cmp150 = icmp eq %union.tree_node* %103, %104
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %for.body.149
  br label %for.inc.223

if.end.153:                                       ; preds = %for.body.149
  %105 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type154 = bitcast %union.tree_node* %105 to %struct.tree_type*
  %values155 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type154, i32 0, i32 1
  %106 = load %union.tree_node*, %union.tree_node** %values155, align 8
  %107 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type156 = bitcast %union.tree_node* %107 to %struct.tree_type*
  %values157 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type156, i32 0, i32 1
  store %union.tree_node* %106, %union.tree_node** %values157, align 8
  %108 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type158 = bitcast %union.tree_node* %108 to %struct.tree_type*
  %minval159 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type158, i32 0, i32 12
  %109 = load %union.tree_node*, %union.tree_node** %minval159, align 8
  %110 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type160 = bitcast %union.tree_node* %110 to %struct.tree_type*
  %minval161 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type160, i32 0, i32 12
  store %union.tree_node* %109, %union.tree_node** %minval161, align 8
  %111 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type162 = bitcast %union.tree_node* %111 to %struct.tree_type*
  %maxval163 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162, i32 0, i32 13
  %112 = load %union.tree_node*, %union.tree_node** %maxval163, align 8
  %113 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type164 = bitcast %union.tree_node* %113 to %struct.tree_type*
  %maxval165 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type164, i32 0, i32 13
  store %union.tree_node* %112, %union.tree_node** %maxval165, align 8
  %114 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type166 = bitcast %union.tree_node* %114 to %struct.tree_type*
  %size167 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type166, i32 0, i32 2
  %115 = load %union.tree_node*, %union.tree_node** %size167, align 8
  %116 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type168 = bitcast %union.tree_node* %116 to %struct.tree_type*
  %size169 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type168, i32 0, i32 2
  store %union.tree_node* %115, %union.tree_node** %size169, align 8
  %117 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type170 = bitcast %union.tree_node* %117 to %struct.tree_type*
  %size_unit171 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type170, i32 0, i32 3
  %118 = load %union.tree_node*, %union.tree_node** %size_unit171, align 8
  %119 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type172 = bitcast %union.tree_node* %119 to %struct.tree_type*
  %size_unit173 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type172, i32 0, i32 3
  store %union.tree_node* %118, %union.tree_node** %size_unit173, align 8
  %120 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type174 = bitcast %union.tree_node* %120 to %struct.tree_type*
  %mode175 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type174, i32 0, i32 6
  %bf.load176 = load i32, i32* %mode175, align 4
  %bf.lshr177 = lshr i32 %bf.load176, 9
  %bf.clear178 = and i32 %bf.lshr177, 127
  %121 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type179 = bitcast %union.tree_node* %121 to %struct.tree_type*
  %mode180 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type179, i32 0, i32 6
  %bf.load181 = load i32, i32* %mode180, align 4
  %bf.value182 = and i32 %bf.clear178, 127
  %bf.shl183 = shl i32 %bf.value182, 9
  %bf.clear184 = and i32 %bf.load181, -65025
  %bf.set185 = or i32 %bf.clear184, %bf.shl183
  store i32 %bf.set185, i32* %mode180, align 4
  %122 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type186 = bitcast %union.tree_node* %122 to %struct.tree_type*
  %precision187 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type186, i32 0, i32 6
  %bf.load188 = load i32, i32* %precision187, align 4
  %bf.clear189 = and i32 %bf.load188, 511
  %123 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type190 = bitcast %union.tree_node* %123 to %struct.tree_type*
  %precision191 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type190, i32 0, i32 6
  %bf.load192 = load i32, i32* %precision191, align 4
  %bf.value193 = and i32 %bf.clear189, 511
  %bf.clear194 = and i32 %bf.load192, -512
  %bf.set195 = or i32 %bf.clear194, %bf.value193
  store i32 %bf.set195, i32* %precision191, align 4
  %124 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type196 = bitcast %union.tree_node* %124 to %struct.tree_type*
  %align197 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type196, i32 0, i32 7
  %125 = load i32, i32* %align197, align 4
  %126 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type198 = bitcast %union.tree_node* %126 to %struct.tree_type*
  %align199 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type198, i32 0, i32 7
  store i32 %125, i32* %align199, align 4
  %127 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %type200 = bitcast %union.tree_node* %127 to %struct.tree_type*
  %user_align201 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type200, i32 0, i32 6
  %bf.load202 = load i32, i32* %user_align201, align 4
  %bf.lshr203 = lshr i32 %bf.load202, 31
  %128 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type204 = bitcast %union.tree_node* %128 to %struct.tree_type*
  %user_align205 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type204, i32 0, i32 6
  %bf.load206 = load i32, i32* %user_align205, align 4
  %bf.value207 = and i32 %bf.lshr203, 1
  %bf.shl208 = shl i32 %bf.value207, 31
  %bf.clear209 = and i32 %bf.load206, 2147483647
  %bf.set210 = or i32 %bf.clear209, %bf.shl208
  store i32 %bf.set210, i32* %user_align205, align 4
  %129 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %common211 = bitcast %union.tree_node* %129 to %struct.tree_common*
  %unsigned_flag212 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common211, i32 0, i32 2
  %bf.load213 = load i32, i32* %unsigned_flag212, align 8
  %bf.lshr214 = lshr i32 %bf.load213, 13
  %bf.clear215 = and i32 %bf.lshr214, 1
  %130 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %common216 = bitcast %union.tree_node* %130 to %struct.tree_common*
  %unsigned_flag217 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common216, i32 0, i32 2
  %bf.load218 = load i32, i32* %unsigned_flag217, align 8
  %bf.value219 = and i32 %bf.clear215, 1
  %bf.shl220 = shl i32 %bf.value219, 13
  %bf.clear221 = and i32 %bf.load218, -8193
  %bf.set222 = or i32 %bf.clear221, %bf.shl220
  store i32 %bf.set222, i32* %unsigned_flag217, align 8
  br label %for.inc.223

for.inc.223:                                      ; preds = %if.end.153, %if.then.152
  %131 = load %union.tree_node*, %union.tree_node** %tem, align 8
  %type224 = bitcast %union.tree_node* %131 to %struct.tree_type*
  %next_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type224, i32 0, i32 14
  %132 = load %union.tree_node*, %union.tree_node** %next_variant, align 8
  store %union.tree_node* %132, %union.tree_node** %tem, align 8
  br label %for.cond.147

for.end.225:                                      ; preds = %for.cond.147
  %133 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  %134 = load i32, i32* %toplevel, align 4
  call void @rest_of_type_compilation(%union.tree_node* %133, i32 %134)
  %135 = load %union.tree_node*, %union.tree_node** %enumtype.addr, align 8
  ret %union.tree_node* %135
}

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @type_for_size(i32, i32) #1

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_enumerator(%union.tree_node* %name, %union.tree_node* %value) #0 {
entry:
  %name.addr = alloca %union.tree_node*, align 8
  %value.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %name, %union.tree_node** %name.addr, align 8
  store %union.tree_node* %value, %union.tree_node** %value.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %tobool = icmp ne %union.tree_node* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common = bitcast %union.tree_node* %1 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 115
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond
  %2 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 2
  %bf.load3 = load i32, i32* %code2, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  %cmp5 = icmp eq i32 %bf.clear4, 114
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false
  %3 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common7 = bitcast %union.tree_node* %3 to %struct.tree_common*
  %code8 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common7, i32 0, i32 2
  %bf.load9 = load i32, i32* %code8, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 116
  br i1 %cmp11, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %lor.lhs.false.6, %lor.lhs.false, %while.cond
  %4 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp = bitcast %union.tree_node* %4 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp12 = icmp ne %union.tree_node* %5, %6
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common13 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common13, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type14, align 8
  %9 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp15 = bitcast %union.tree_node* %9 to %struct.tree_exp*
  %operands16 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp15, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands16, i32 0, i64 0
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8
  %common18 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common18, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type19, align 8
  %cmp20 = icmp eq %union.tree_node* %8, %11
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false.6
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false.6 ], [ %cmp20, %land.rhs ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %13 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %exp21 = bitcast %union.tree_node* %13 to %struct.tree_exp*
  %operands22 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands22, i32 0, i64 0
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx23, align 8
  store %union.tree_node* %14, %union.tree_node** %value.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %15 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp24 = icmp ne %union.tree_node* %15, null
  br i1 %cmp24, label %if.then.25, label %if.end.33

if.then.25:                                       ; preds = %if.end
  %16 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common26 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code27 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common26, i32 0, i32 2
  %bf.load28 = load i32, i32* %code27, align 8
  %bf.clear29 = and i32 %bf.load28, 255
  %cmp30 = icmp eq i32 %bf.clear29, 25
  br i1 %cmp30, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %if.then.25
  %17 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call = call %union.tree_node* @default_conversion(%union.tree_node* %17)
  store %union.tree_node* %call, %union.tree_node** %value.addr, align 8
  %18 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  call void @constant_expression_warning(%union.tree_node* %18)
  br label %if.end.32

if.else:                                          ; preds = %if.then.25
  %19 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %identifier = bitcast %union.tree_node* %19 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %20 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.223, i32 0, i32 0), i8* %20)
  store %union.tree_node* null, %union.tree_node** %value.addr, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.end
  %21 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %cmp34 = icmp eq %union.tree_node* %21, null
  br i1 %cmp34, label %if.then.35, label %if.end.39

if.then.35:                                       ; preds = %if.end.33
  %22 = load %union.tree_node*, %union.tree_node** @enum_next_value, align 8
  store %union.tree_node* %22, %union.tree_node** %value.addr, align 8
  %23 = load i32, i32* @enum_overflow, align 4
  %tobool36 = icmp ne i32 %23, 0
  br i1 %tobool36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.then.35
  call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.224, i32 0, i32 0))
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.37, %if.then.35
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.end.33
  %24 = load i32, i32* @pedantic, align 4
  %tobool40 = icmp ne i32 %24, 0
  br i1 %tobool40, label %land.lhs.true.41, label %if.end.46

land.lhs.true.41:                                 ; preds = %if.end.39
  %25 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %call42 = call i32 @int_fits_type_p(%union.tree_node* %25, %union.tree_node* %26)
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.46, label %if.then.44

if.then.44:                                       ; preds = %land.lhs.true.41
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.225, i32 0, i32 0))
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %28 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call45 = call %union.tree_node* @convert(%union.tree_node* %27, %union.tree_node* %28)
  store %union.tree_node* %call45, %union.tree_node** %value.addr, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.44, %land.lhs.true.41, %if.end.39
  %29 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 12), align 8
  %call47 = call %union.tree_node* @build_binary_op(i32 59, %union.tree_node* %29, %union.tree_node* %30, i32 0)
  store %union.tree_node* %call47, %union.tree_node** @enum_next_value, align 8
  %31 = load %union.tree_node*, %union.tree_node** @enum_next_value, align 8
  %32 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call48 = call i32 @tree_int_cst_lt(%union.tree_node* %31, %union.tree_node* %32)
  store i32 %call48, i32* @enum_overflow, align 4
  %33 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %common49 = bitcast %union.tree_node* %33 to %struct.tree_common*
  %type50 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common49, i32 0, i32 1
  %34 = load %union.tree_node*, %union.tree_node** %type50, align 8
  store %union.tree_node* %34, %union.tree_node** %type, align 8
  %35 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type51 = bitcast %union.tree_node* %35 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i32 0, i32 6
  %bf.load52 = load i32, i32* %precision, align 4
  %bf.clear53 = and i32 %bf.load52, 511
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type54 = bitcast %union.tree_node* %36 to %struct.tree_type*
  %precision55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i32 0, i32 6
  %bf.load56 = load i32, i32* %precision55, align 4
  %bf.clear57 = and i32 %bf.load56, 511
  %cmp58 = icmp sgt i32 %bf.clear53, %bf.clear57
  br i1 %cmp58, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.46
  %37 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type59 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %precision60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i32 0, i32 6
  %bf.load61 = load i32, i32* %precision60, align 4
  %bf.clear62 = and i32 %bf.load61, 511
  br label %cond.end

cond.false:                                       ; preds = %if.end.46
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type63 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %precision64 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type63, i32 0, i32 6
  %bf.load65 = load i32, i32* %precision64, align 4
  %bf.clear66 = and i32 %bf.load65, 511
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear62, %cond.true ], [ %bf.clear66, %cond.false ]
  %39 = load i32, i32* @flag_traditional, align 4
  %tobool67 = icmp ne i32 %39, 0
  br i1 %tobool67, label %land.rhs.78, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %cond.end
  %40 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type69 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %precision70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type69, i32 0, i32 6
  %bf.load71 = load i32, i32* %precision70, align 4
  %bf.clear72 = and i32 %bf.load71, 511
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type73 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %precision74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type73, i32 0, i32 6
  %bf.load75 = load i32, i32* %precision74, align 4
  %bf.clear76 = and i32 %bf.load75, 511
  %cmp77 = icmp sge i32 %bf.clear72, %bf.clear76
  br i1 %cmp77, label %land.rhs.78, label %land.end.83

land.rhs.78:                                      ; preds = %lor.lhs.false.68, %cond.end
  %42 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common79 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 2
  %bf.load80 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load80, 13
  %bf.clear81 = and i32 %bf.lshr, 1
  %tobool82 = icmp ne i32 %bf.clear81, 0
  br label %land.end.83

land.end.83:                                      ; preds = %land.rhs.78, %lor.lhs.false.68
  %43 = phi i1 [ false, %lor.lhs.false.68 ], [ %tobool82, %land.rhs.78 ]
  %land.ext = zext i1 %43 to i32
  %call84 = call %union.tree_node* @type_for_size(i32 %cond, i32 %land.ext)
  store %union.tree_node* %call84, %union.tree_node** %type, align 8
  %44 = load %union.tree_node*, %union.tree_node** %name.addr, align 8
  %45 = load %union.tree_node*, %union.tree_node** %type, align 8
  %call85 = call %union.tree_node* @build_decl(i32 32, %union.tree_node* %44, %union.tree_node* %45)
  store %union.tree_node* %call85, %union.tree_node** %decl, align 8
  %46 = load %union.tree_node*, %union.tree_node** %type, align 8
  %47 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call86 = call %union.tree_node* @convert(%union.tree_node* %46, %union.tree_node* %47)
  %48 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl87 = bitcast %union.tree_node* %48 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl87, i32 0, i32 12
  store %union.tree_node* %call86, %union.tree_node** %initial, align 8
  %49 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %call88 = call %union.tree_node* @pushdecl(%union.tree_node* %49)
  %50 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %51 = load %union.tree_node*, %union.tree_node** %value.addr, align 8
  %call89 = call %union.tree_node* @tree_cons(%union.tree_node* %50, %union.tree_node* %51, %union.tree_node* null)
  ret %union.tree_node* %call89
}

declare %union.tree_node* @default_conversion(%union.tree_node*) #1

declare %union.tree_node* @build_binary_op(i32, %union.tree_node*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @start_function(%union.tree_node* %declspecs, %union.tree_node* %declarator, %union.tree_node* %attributes) #0 {
entry:
  %retval = alloca i32, align 4
  %declspecs.addr = alloca %union.tree_node*, align 8
  %declarator.addr = alloca %union.tree_node*, align 8
  %attributes.addr = alloca %union.tree_node*, align 8
  %decl1 = alloca %union.tree_node*, align 8
  %old_decl = alloca %union.tree_node*, align 8
  %restype = alloca %union.tree_node*, align 8
  %old_immediate_size_expand = alloca i32, align 4
  %args = alloca %union.tree_node*, align 8
  %argct = alloca i32, align 4
  %type247 = alloca %union.tree_node*, align 8
  store %union.tree_node* %declspecs, %union.tree_node** %declspecs.addr, align 8
  store %union.tree_node* %declarator, %union.tree_node** %declarator.addr, align 8
  store %union.tree_node* %attributes, %union.tree_node** %attributes.addr, align 8
  %0 = load i32, i32* @immediate_size_expand, align 4
  store i32 %0, i32* %old_immediate_size_expand, align 4
  store i32 0, i32* @current_function_returns_value, align 4
  store i32 0, i32* @current_function_returns_null, align 4
  store i32 0, i32* @current_function_returns_abnormally, align 4
  store i32 0, i32* @warn_about_return_type, align 4
  store i32 0, i32* @current_extern_inline, align 4
  store i32 0, i32* @c_function_varargs, align 4
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8
  store %union.tree_node* null, %union.tree_node** @shadowed_labels, align 8
  store i32 0, i32* @immediate_size_expand, align 4
  %1 = load %union.tree_node*, %union.tree_node** %declarator.addr, align 8
  %2 = load %union.tree_node*, %union.tree_node** %declspecs.addr, align 8
  %call = call %union.tree_node* @grokdeclarator(%union.tree_node* %1, %union.tree_node* %2, i32 1, i32 1)
  store %union.tree_node* %call, %union.tree_node** %decl1, align 8
  %3 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %cmp = icmp eq %union.tree_node* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %old_immediate_size_expand, align 4
  store i32 %4, i32* @immediate_size_expand, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %union.tree_node*, %union.tree_node** %attributes.addr, align 8
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1, %union.tree_node* %5, i32 0)
  %6 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %7 = load %struct.binding_level*, %struct.binding_level** @global_binding_level, align 8
  %cmp2 = icmp eq %struct.binding_level* %6, %7
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void @maybe_apply_pragma_weak(%union.tree_node* %8)
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %if.end
  %9 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 24
  %10 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %10, i32 0, i32 0
  %11 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load = load i8, i8* %11, align 4
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %if.end.4
  %12 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl5 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %uninlinable = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl5, i32 0, i32 5
  %13 = bitcast i48* %uninlinable to i64*
  %bf.load6 = load i64, i64* %13, align 8
  %bf.lshr = lshr i64 %bf.load6, 36
  %bf.clear7 = and i64 %bf.lshr, 1
  %bf.cast8 = trunc i64 %bf.clear7 to i32
  %tobool9 = icmp ne i32 %bf.cast8, 0
  br i1 %tobool9, label %land.lhs.true.10, label %if.end.16

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %14 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl11 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %attributes12 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl11, i32 0, i32 16
  %15 = load %union.tree_node*, %union.tree_node** %attributes12, align 8
  %call13 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0), %union.tree_node* %15)
  %tobool14 = icmp ne %union.tree_node* %call13, null
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %land.lhs.true.10
  %16 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.178, i32 0, i32 0))
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %land.lhs.true.10, %land.lhs.true, %if.end.4
  %17 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void @announce_function(%union.tree_node* %17)
  %18 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common = bitcast %union.tree_node* %18 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common17 = bitcast %union.tree_node* %19 to %struct.tree_common*
  %type18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 1
  %20 = load %union.tree_node*, %union.tree_node** %type18, align 8
  %type19 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i32 0, i32 2
  %21 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp20 = icmp ne %union.tree_node* %21, null
  br i1 %cmp20, label %if.end.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.16
  %22 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common21 = bitcast %union.tree_node* %22 to %struct.tree_common*
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common21, i32 0, i32 1
  %23 = load %union.tree_node*, %union.tree_node** %type22, align 8
  %common23 = bitcast %union.tree_node* %23 to %struct.tree_common*
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common23, i32 0, i32 1
  %24 = load %union.tree_node*, %union.tree_node** %type24, align 8
  %common25 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 2
  %bf.load26 = load i32, i32* %code, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 5
  br i1 %cmp28, label %if.end.36, label %if.then.29

if.then.29:                                       ; preds = %lor.lhs.false
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.226, i32 0, i32 0))
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %26 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common30 = bitcast %union.tree_node* %26 to %struct.tree_common*
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 1
  %27 = load %union.tree_node*, %union.tree_node** %type31, align 8
  %type32 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type32, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %values, align 8
  %call33 = call %union.tree_node* @build_function_type(%union.tree_node* %25, %union.tree_node* %28)
  %29 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common34 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common34, i32 0, i32 1
  store %union.tree_node* %call33, %union.tree_node** %type35, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.29, %lor.lhs.false, %if.end.16
  %30 = load i32, i32* @warn_about_return_type, align 4
  %tobool37 = icmp ne i32 %30, 0
  br i1 %tobool37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.end.36
  call void (i8*, ...) @pedwarn_c99(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.227, i32 0, i32 0))
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.38, %if.end.36
  %31 = load %union.tree_node*, %union.tree_node** @last_function_parms, align 8
  store %union.tree_node* %31, %union.tree_node** @current_function_parms, align 8
  %32 = load %union.tree_node*, %union.tree_node** @last_function_parm_tags, align 8
  store %union.tree_node* %32, %union.tree_node** @current_function_parm_tags, align 8
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %34 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl40 = bitcast %union.tree_node* %34 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl40, i32 0, i32 12
  store %union.tree_node* %33, %union.tree_node** %initial, align 8
  %35 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl41 = bitcast %union.tree_node* %35 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl41, i32 0, i32 8
  %36 = load %union.tree_node*, %union.tree_node** %name, align 8
  %call42 = call %union.tree_node* @lookup_name_current_level(%union.tree_node* %36)
  store %union.tree_node* %call42, %union.tree_node** %old_decl, align 8
  %37 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp43 = icmp ne %union.tree_node* %37, null
  br i1 %cmp43, label %land.lhs.true.44, label %if.end.85

land.lhs.true.44:                                 ; preds = %if.end.39
  %38 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common45 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %type46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common45, i32 0, i32 1
  %39 = load %union.tree_node*, %union.tree_node** %type46, align 8
  %common47 = bitcast %union.tree_node* %39 to %struct.tree_common*
  %code48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 2
  %bf.load49 = load i32, i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 23
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.85

land.lhs.true.52:                                 ; preds = %land.lhs.true.44
  %40 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl53 = bitcast %union.tree_node* %40 to %struct.tree_decl*
  %built_in_class = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl53, i32 0, i32 5
  %41 = bitcast i48* %built_in_class to i64*
  %bf.load54 = load i64, i64* %41, align 8
  %bf.lshr55 = lshr i64 %bf.load54, 29
  %bf.clear56 = and i64 %bf.lshr55, 3
  %bf.cast57 = trunc i64 %bf.clear56 to i32
  %cmp58 = icmp ne i32 %bf.cast57, 0
  br i1 %cmp58, label %if.end.85, label %land.lhs.true.59

land.lhs.true.59:                                 ; preds = %land.lhs.true.52
  %42 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common60 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type61, align 8
  %common62 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %type63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common62, i32 0, i32 1
  %44 = load %union.tree_node*, %union.tree_node** %type63, align 8
  %type64 = bitcast %union.tree_node* %44 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i32 0, i32 15
  %45 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %46 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common65 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common65, i32 0, i32 1
  %47 = load %union.tree_node*, %union.tree_node** %type66, align 8
  %common67 = bitcast %union.tree_node* %47 to %struct.tree_common*
  %type68 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common67, i32 0, i32 1
  %48 = load %union.tree_node*, %union.tree_node** %type68, align 8
  %type69 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %main_variant70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type69, i32 0, i32 15
  %49 = load %union.tree_node*, %union.tree_node** %main_variant70, align 8
  %cmp71 = icmp eq %union.tree_node* %45, %49
  br i1 %cmp71, label %land.lhs.true.72, label %if.end.85

land.lhs.true.72:                                 ; preds = %land.lhs.true.59
  %50 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common73 = bitcast %union.tree_node* %50 to %struct.tree_common*
  %type74 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common73, i32 0, i32 1
  %51 = load %union.tree_node*, %union.tree_node** %type74, align 8
  %type75 = bitcast %union.tree_node* %51 to %struct.tree_type*
  %values76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i32 0, i32 1
  %52 = load %union.tree_node*, %union.tree_node** %values76, align 8
  %cmp77 = icmp eq %union.tree_node* %52, null
  br i1 %cmp77, label %if.then.78, label %if.end.85

if.then.78:                                       ; preds = %land.lhs.true.72
  %53 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common79 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type80 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common79, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type80, align 8
  %55 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common81 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %type82 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common81, i32 0, i32 1
  store %union.tree_node* %54, %union.tree_node** %type82, align 8
  %56 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl83 = bitcast %union.tree_node* %56 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl83, i32 0, i32 1
  %57 = load i8*, i8** %filename, align 8
  store i8* %57, i8** @current_function_prototype_file, align 8
  %58 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl84 = bitcast %union.tree_node* %58 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl84, i32 0, i32 2
  %59 = load i32, i32* %linenum, align 4
  store i32 %59, i32* @current_function_prototype_line, align 4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.78, %land.lhs.true.72, %land.lhs.true.59, %land.lhs.true.52, %land.lhs.true.44, %if.end.39
  %60 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp86 = icmp eq %union.tree_node* %60, null
  br i1 %cmp86, label %if.then.87, label %if.end.90

if.then.87:                                       ; preds = %if.end.85
  %61 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl88 = bitcast %union.tree_node* %61 to %struct.tree_decl*
  %name89 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl88, i32 0, i32 8
  %62 = load %union.tree_node*, %union.tree_node** %name89, align 8
  %63 = bitcast %union.tree_node* %62 to %struct.lang_identifier*
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %63, i32 0, i32 4
  %64 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  store %union.tree_node* %64, %union.tree_node** %old_decl, align 8
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.87, %if.end.85
  %65 = load i32, i32* @warn_strict_prototypes, align 4
  %tobool91 = icmp ne i32 %65, 0
  br i1 %tobool91, label %land.lhs.true.92, label %if.else

land.lhs.true.92:                                 ; preds = %if.end.90
  %66 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common93 = bitcast %union.tree_node* %66 to %struct.tree_common*
  %type94 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common93, i32 0, i32 1
  %67 = load %union.tree_node*, %union.tree_node** %type94, align 8
  %type95 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %values96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i32 0, i32 1
  %68 = load %union.tree_node*, %union.tree_node** %values96, align 8
  %cmp97 = icmp eq %union.tree_node* %68, null
  br i1 %cmp97, label %land.lhs.true.98, label %if.else

land.lhs.true.98:                                 ; preds = %land.lhs.true.92
  %69 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp99 = icmp ne %union.tree_node* %69, null
  br i1 %cmp99, label %land.lhs.true.100, label %if.then.121

land.lhs.true.100:                                ; preds = %land.lhs.true.98
  %70 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common101 = bitcast %union.tree_node* %70 to %struct.tree_common*
  %type102 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 1
  %71 = load %union.tree_node*, %union.tree_node** %type102, align 8
  %type103 = bitcast %union.tree_node* %71 to %struct.tree_type*
  %values104 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type103, i32 0, i32 1
  %72 = load %union.tree_node*, %union.tree_node** %values104, align 8
  %cmp105 = icmp ne %union.tree_node* %72, null
  br i1 %cmp105, label %if.else, label %lor.lhs.false.106

lor.lhs.false.106:                                ; preds = %land.lhs.true.100
  %73 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl107 = bitcast %union.tree_node* %73 to %struct.tree_decl*
  %built_in_class108 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl107, i32 0, i32 5
  %74 = bitcast i48* %built_in_class108 to i64*
  %bf.load109 = load i64, i64* %74, align 8
  %bf.lshr110 = lshr i64 %bf.load109, 29
  %bf.clear111 = and i64 %bf.lshr110, 3
  %bf.cast112 = trunc i64 %bf.clear111 to i32
  %cmp113 = icmp ne i32 %bf.cast112, 0
  br i1 %cmp113, label %land.lhs.true.114, label %if.then.121

land.lhs.true.114:                                ; preds = %lor.lhs.false.106
  %75 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl115 = bitcast %union.tree_node* %75 to %struct.tree_decl*
  %lang_flag_3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl115, i32 0, i32 5
  %76 = bitcast i48* %lang_flag_3 to i64*
  %bf.load116 = load i64, i64* %76, align 8
  %bf.lshr117 = lshr i64 %bf.load116, 40
  %bf.clear118 = and i64 %bf.lshr117, 1
  %bf.cast119 = trunc i64 %bf.clear118 to i32
  %tobool120 = icmp ne i32 %bf.cast119, 0
  br i1 %tobool120, label %if.then.121, label %if.else

if.then.121:                                      ; preds = %land.lhs.true.114, %lor.lhs.false.106, %land.lhs.true.98
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.228, i32 0, i32 0))
  br label %if.end.212

if.else:                                          ; preds = %land.lhs.true.114, %land.lhs.true.100, %land.lhs.true.92, %if.end.90
  %77 = load i32, i32* @warn_missing_prototypes, align 4
  %tobool122 = icmp ne i32 %77, 0
  br i1 %tobool122, label %land.lhs.true.123, label %if.else.158

land.lhs.true.123:                                ; preds = %if.else
  %78 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common124 = bitcast %union.tree_node* %78 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common124, i32 0, i32 2
  %bf.load125 = load i32, i32* %public_flag, align 8
  %bf.lshr126 = lshr i32 %bf.load125, 19
  %bf.clear127 = and i32 %bf.lshr126, 1
  %tobool128 = icmp ne i32 %bf.clear127, 0
  br i1 %tobool128, label %land.lhs.true.129, label %if.else.158

land.lhs.true.129:                                ; preds = %land.lhs.true.123
  %79 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp130 = icmp ne %union.tree_node* %79, null
  br i1 %cmp130, label %land.lhs.true.131, label %land.lhs.true.153

land.lhs.true.131:                                ; preds = %land.lhs.true.129
  %80 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common132 = bitcast %union.tree_node* %80 to %struct.tree_common*
  %type133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common132, i32 0, i32 1
  %81 = load %union.tree_node*, %union.tree_node** %type133, align 8
  %type134 = bitcast %union.tree_node* %81 to %struct.tree_type*
  %values135 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type134, i32 0, i32 1
  %82 = load %union.tree_node*, %union.tree_node** %values135, align 8
  %cmp136 = icmp ne %union.tree_node* %82, null
  br i1 %cmp136, label %if.else.158, label %lor.lhs.false.137

lor.lhs.false.137:                                ; preds = %land.lhs.true.131
  %83 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl138 = bitcast %union.tree_node* %83 to %struct.tree_decl*
  %built_in_class139 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl138, i32 0, i32 5
  %84 = bitcast i48* %built_in_class139 to i64*
  %bf.load140 = load i64, i64* %84, align 8
  %bf.lshr141 = lshr i64 %bf.load140, 29
  %bf.clear142 = and i64 %bf.lshr141, 3
  %bf.cast143 = trunc i64 %bf.clear142 to i32
  %cmp144 = icmp ne i32 %bf.cast143, 0
  br i1 %cmp144, label %land.lhs.true.145, label %land.lhs.true.153

land.lhs.true.145:                                ; preds = %lor.lhs.false.137
  %85 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %decl146 = bitcast %union.tree_node* %85 to %struct.tree_decl*
  %lang_flag_3147 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl146, i32 0, i32 5
  %86 = bitcast i48* %lang_flag_3147 to i64*
  %bf.load148 = load i64, i64* %86, align 8
  %bf.lshr149 = lshr i64 %bf.load148, 40
  %bf.clear150 = and i64 %bf.lshr149, 1
  %bf.cast151 = trunc i64 %bf.clear150 to i32
  %tobool152 = icmp ne i32 %bf.cast151, 0
  br i1 %tobool152, label %land.lhs.true.153, label %if.else.158

land.lhs.true.153:                                ; preds = %land.lhs.true.145, %lor.lhs.false.137, %land.lhs.true.129
  %87 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl154 = bitcast %union.tree_node* %87 to %struct.tree_decl*
  %name155 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl154, i32 0, i32 8
  %88 = load %union.tree_node*, %union.tree_node** %name155, align 8
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp156 = icmp eq %union.tree_node* %88, %89
  br i1 %cmp156, label %if.else.158, label %if.then.157

if.then.157:                                      ; preds = %land.lhs.true.153
  %90 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %90, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.229, i32 0, i32 0))
  br label %if.end.211

if.else.158:                                      ; preds = %land.lhs.true.153, %land.lhs.true.145, %land.lhs.true.131, %land.lhs.true.123, %if.else
  %91 = load i32, i32* @warn_missing_prototypes, align 4
  %tobool159 = icmp ne i32 %91, 0
  br i1 %tobool159, label %land.lhs.true.160, label %if.else.175

land.lhs.true.160:                                ; preds = %if.else.158
  %92 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp161 = icmp ne %union.tree_node* %92, null
  br i1 %cmp161, label %land.lhs.true.162, label %if.else.175

land.lhs.true.162:                                ; preds = %land.lhs.true.160
  %93 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common163 = bitcast %union.tree_node* %93 to %struct.tree_common*
  %used_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common163, i32 0, i32 2
  %bf.load164 = load i32, i32* %used_flag, align 8
  %bf.lshr165 = lshr i32 %bf.load164, 16
  %bf.clear166 = and i32 %bf.lshr165, 1
  %tobool167 = icmp ne i32 %bf.clear166, 0
  br i1 %tobool167, label %land.lhs.true.168, label %if.else.175

land.lhs.true.168:                                ; preds = %land.lhs.true.162
  %94 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common169 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type170 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common169, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type170, align 8
  %type171 = bitcast %union.tree_node* %95 to %struct.tree_type*
  %values172 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type171, i32 0, i32 1
  %96 = load %union.tree_node*, %union.tree_node** %values172, align 8
  %cmp173 = icmp eq %union.tree_node* %96, null
  br i1 %cmp173, label %if.then.174, label %if.else.175

if.then.174:                                      ; preds = %land.lhs.true.168
  %97 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %97, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.230, i32 0, i32 0))
  br label %if.end.210

if.else.175:                                      ; preds = %land.lhs.true.168, %land.lhs.true.162, %land.lhs.true.160, %if.else.158
  %98 = load i32, i32* @warn_missing_declarations, align 4
  %tobool176 = icmp ne i32 %98, 0
  br i1 %tobool176, label %land.lhs.true.177, label %if.else.191

land.lhs.true.177:                                ; preds = %if.else.175
  %99 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common178 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %public_flag179 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common178, i32 0, i32 2
  %bf.load180 = load i32, i32* %public_flag179, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 19
  %bf.clear182 = and i32 %bf.lshr181, 1
  %tobool183 = icmp ne i32 %bf.clear182, 0
  br i1 %tobool183, label %land.lhs.true.184, label %if.else.191

land.lhs.true.184:                                ; preds = %land.lhs.true.177
  %100 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp185 = icmp eq %union.tree_node* %100, null
  br i1 %cmp185, label %land.lhs.true.186, label %if.else.191

land.lhs.true.186:                                ; preds = %land.lhs.true.184
  %101 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl187 = bitcast %union.tree_node* %101 to %struct.tree_decl*
  %name188 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl187, i32 0, i32 8
  %102 = load %union.tree_node*, %union.tree_node** %name188, align 8
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp189 = icmp eq %union.tree_node* %102, %103
  br i1 %cmp189, label %if.else.191, label %if.then.190

if.then.190:                                      ; preds = %land.lhs.true.186
  %104 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %104, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.231, i32 0, i32 0))
  br label %if.end.209

if.else.191:                                      ; preds = %land.lhs.true.186, %land.lhs.true.184, %land.lhs.true.177, %if.else.175
  %105 = load i32, i32* @warn_missing_declarations, align 4
  %tobool192 = icmp ne i32 %105, 0
  br i1 %tobool192, label %land.lhs.true.193, label %if.end.208

land.lhs.true.193:                                ; preds = %if.else.191
  %106 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %cmp194 = icmp ne %union.tree_node* %106, null
  br i1 %cmp194, label %land.lhs.true.195, label %if.end.208

land.lhs.true.195:                                ; preds = %land.lhs.true.193
  %107 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %common196 = bitcast %union.tree_node* %107 to %struct.tree_common*
  %used_flag197 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common196, i32 0, i32 2
  %bf.load198 = load i32, i32* %used_flag197, align 8
  %bf.lshr199 = lshr i32 %bf.load198, 16
  %bf.clear200 = and i32 %bf.lshr199, 1
  %tobool201 = icmp ne i32 %bf.clear200, 0
  br i1 %tobool201, label %land.lhs.true.202, label %if.end.208

land.lhs.true.202:                                ; preds = %land.lhs.true.195
  %108 = load %union.tree_node*, %union.tree_node** %old_decl, align 8
  %109 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl203 = bitcast %union.tree_node* %109 to %struct.tree_decl*
  %name204 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl203, i32 0, i32 8
  %110 = load %union.tree_node*, %union.tree_node** %name204, align 8
  %111 = bitcast %union.tree_node* %110 to %struct.lang_identifier*
  %implicit_decl205 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %111, i32 0, i32 4
  %112 = load %union.tree_node*, %union.tree_node** %implicit_decl205, align 8
  %cmp206 = icmp eq %union.tree_node* %108, %112
  br i1 %cmp206, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %land.lhs.true.202
  %113 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %113, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.232, i32 0, i32 0))
  br label %if.end.208

if.end.208:                                       ; preds = %if.then.207, %land.lhs.true.202, %land.lhs.true.195, %land.lhs.true.193, %if.else.191
  br label %if.end.209

if.end.209:                                       ; preds = %if.end.208, %if.then.190
  br label %if.end.210

if.end.210:                                       ; preds = %if.end.209, %if.then.174
  br label %if.end.211

if.end.211:                                       ; preds = %if.end.210, %if.then.157
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.211, %if.then.121
  %114 = load i32, i32* @current_extern_inline, align 4
  %115 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl213 = bitcast %union.tree_node* %115 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl213, i32 0, i32 5
  %116 = bitcast i48* %external_flag to i64*
  %117 = zext i32 %114 to i64
  %bf.load214 = load i64, i64* %116, align 8
  %bf.value = and i64 %117, 1
  %bf.shl = shl i64 %bf.value, 8
  %bf.clear215 = and i64 %bf.load214, -257
  %bf.set = or i64 %bf.clear215, %bf.shl
  store i64 %bf.set, i64* %116, align 8
  %bf.result.cast = trunc i64 %bf.value to i32
  %118 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common216 = bitcast %union.tree_node* %118 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common216, i32 0, i32 2
  %bf.load217 = load i32, i32* %static_flag, align 8
  %bf.clear218 = and i32 %bf.load217, -262145
  %bf.set219 = or i32 %bf.clear218, 262144
  store i32 %bf.set219, i32* %static_flag, align 8
  %119 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp220 = icmp ne %union.tree_node* %119, null
  br i1 %cmp220, label %if.then.221, label %if.end.226

if.then.221:                                      ; preds = %if.end.212
  %120 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common222 = bitcast %union.tree_node* %120 to %struct.tree_common*
  %public_flag223 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common222, i32 0, i32 2
  %bf.load224 = load i32, i32* %public_flag223, align 8
  %bf.clear225 = and i32 %bf.load224, -524289
  store i32 %bf.clear225, i32* %public_flag223, align 8
  br label %if.end.226

if.end.226:                                       ; preds = %if.then.221, %if.end.212
  %121 = load i32, i32* @warn_main, align 4
  %cmp227 = icmp sgt i32 %121, 0
  br i1 %cmp227, label %land.lhs.true.228, label %if.end.321

land.lhs.true.228:                                ; preds = %if.end.226
  %122 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %decl229 = bitcast %union.tree_node* %122 to %struct.tree_decl*
  %name230 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl229, i32 0, i32 8
  %123 = load %union.tree_node*, %union.tree_node** %name230, align 8
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp231 = icmp eq %union.tree_node* %123, %124
  br i1 %cmp231, label %if.then.232, label %if.end.321

if.then.232:                                      ; preds = %land.lhs.true.228
  store i32 0, i32* %argct, align 4
  %125 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common233 = bitcast %union.tree_node* %125 to %struct.tree_common*
  %type234 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common233, i32 0, i32 1
  %126 = load %union.tree_node*, %union.tree_node** %type234, align 8
  %common235 = bitcast %union.tree_node* %126 to %struct.tree_common*
  %type236 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common235, i32 0, i32 1
  %127 = load %union.tree_node*, %union.tree_node** %type236, align 8
  %type237 = bitcast %union.tree_node* %127 to %struct.tree_type*
  %main_variant238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i32 0, i32 15
  %128 = load %union.tree_node*, %union.tree_node** %main_variant238, align 8
  %129 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp239 = icmp ne %union.tree_node* %128, %129
  br i1 %cmp239, label %if.then.240, label %if.end.241

if.then.240:                                      ; preds = %if.then.232
  %130 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %130, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.233, i32 0, i32 0))
  br label %if.end.241

if.end.241:                                       ; preds = %if.then.240, %if.then.232
  %131 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common242 = bitcast %union.tree_node* %131 to %struct.tree_common*
  %type243 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common242, i32 0, i32 1
  %132 = load %union.tree_node*, %union.tree_node** %type243, align 8
  %type244 = bitcast %union.tree_node* %132 to %struct.tree_type*
  %values245 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type244, i32 0, i32 1
  %133 = load %union.tree_node*, %union.tree_node** %values245, align 8
  store %union.tree_node* %133, %union.tree_node** %args, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.241
  %134 = load %union.tree_node*, %union.tree_node** %args, align 8
  %tobool246 = icmp ne %union.tree_node* %134, null
  br i1 %tobool246, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %135 = load %union.tree_node*, %union.tree_node** %args, align 8
  %tobool248 = icmp ne %union.tree_node* %135, null
  br i1 %tobool248, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %136 = load %union.tree_node*, %union.tree_node** %args, align 8
  %list = bitcast %union.tree_node* %136 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %137 = load %union.tree_node*, %union.tree_node** %value, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.body
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ %137, %cond.true ], [ null, %cond.false ]
  store %union.tree_node* %cond, %union.tree_node** %type247, align 8
  %138 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %139 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp249 = icmp eq %union.tree_node* %138, %139
  br i1 %cmp249, label %if.then.250, label %if.end.251

if.then.250:                                      ; preds = %cond.end
  br label %for.end

if.end.251:                                       ; preds = %cond.end
  %140 = load i32, i32* %argct, align 4
  %inc = add nsw i32 %140, 1
  store i32 %inc, i32* %argct, align 4
  %141 = load i32, i32* %argct, align 4
  switch i32 %141, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.257
    i32 3, label %sw.bb.281
  ]

sw.bb:                                            ; preds = %if.end.251
  %142 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %type252 = bitcast %union.tree_node* %142 to %struct.tree_type*
  %main_variant253 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type252, i32 0, i32 15
  %143 = load %union.tree_node*, %union.tree_node** %main_variant253, align 8
  %144 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp254 = icmp ne %union.tree_node* %143, %144
  br i1 %cmp254, label %if.then.255, label %if.end.256

if.then.255:                                      ; preds = %sw.bb
  %145 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %145, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.234, i32 0, i32 0))
  br label %if.end.256

if.end.256:                                       ; preds = %if.then.255, %sw.bb
  br label %sw.epilog

sw.bb.257:                                        ; preds = %if.end.251
  %146 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common258 = bitcast %union.tree_node* %146 to %struct.tree_common*
  %code259 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common258, i32 0, i32 2
  %bf.load260 = load i32, i32* %code259, align 8
  %bf.clear261 = and i32 %bf.load260, 255
  %cmp262 = icmp ne i32 %bf.clear261, 13
  br i1 %cmp262, label %if.then.279, label %lor.lhs.false.263

lor.lhs.false.263:                                ; preds = %sw.bb.257
  %147 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common264 = bitcast %union.tree_node* %147 to %struct.tree_common*
  %type265 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common264, i32 0, i32 1
  %148 = load %union.tree_node*, %union.tree_node** %type265, align 8
  %common266 = bitcast %union.tree_node* %148 to %struct.tree_common*
  %code267 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common266, i32 0, i32 2
  %bf.load268 = load i32, i32* %code267, align 8
  %bf.clear269 = and i32 %bf.load268, 255
  %cmp270 = icmp ne i32 %bf.clear269, 13
  br i1 %cmp270, label %if.then.279, label %lor.lhs.false.271

lor.lhs.false.271:                                ; preds = %lor.lhs.false.263
  %149 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common272 = bitcast %union.tree_node* %149 to %struct.tree_common*
  %type273 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common272, i32 0, i32 1
  %150 = load %union.tree_node*, %union.tree_node** %type273, align 8
  %common274 = bitcast %union.tree_node* %150 to %struct.tree_common*
  %type275 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common274, i32 0, i32 1
  %151 = load %union.tree_node*, %union.tree_node** %type275, align 8
  %type276 = bitcast %union.tree_node* %151 to %struct.tree_type*
  %main_variant277 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type276, i32 0, i32 15
  %152 = load %union.tree_node*, %union.tree_node** %main_variant277, align 8
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp278 = icmp ne %union.tree_node* %152, %153
  br i1 %cmp278, label %if.then.279, label %if.end.280

if.then.279:                                      ; preds = %lor.lhs.false.271, %lor.lhs.false.263, %sw.bb.257
  %154 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %154, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.235, i32 0, i32 0))
  br label %if.end.280

if.end.280:                                       ; preds = %if.then.279, %lor.lhs.false.271
  br label %sw.epilog

sw.bb.281:                                        ; preds = %if.end.251
  %155 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common282 = bitcast %union.tree_node* %155 to %struct.tree_common*
  %code283 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common282, i32 0, i32 2
  %bf.load284 = load i32, i32* %code283, align 8
  %bf.clear285 = and i32 %bf.load284, 255
  %cmp286 = icmp ne i32 %bf.clear285, 13
  br i1 %cmp286, label %if.then.303, label %lor.lhs.false.287

lor.lhs.false.287:                                ; preds = %sw.bb.281
  %156 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common288 = bitcast %union.tree_node* %156 to %struct.tree_common*
  %type289 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common288, i32 0, i32 1
  %157 = load %union.tree_node*, %union.tree_node** %type289, align 8
  %common290 = bitcast %union.tree_node* %157 to %struct.tree_common*
  %code291 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common290, i32 0, i32 2
  %bf.load292 = load i32, i32* %code291, align 8
  %bf.clear293 = and i32 %bf.load292, 255
  %cmp294 = icmp ne i32 %bf.clear293, 13
  br i1 %cmp294, label %if.then.303, label %lor.lhs.false.295

lor.lhs.false.295:                                ; preds = %lor.lhs.false.287
  %158 = load %union.tree_node*, %union.tree_node** %type247, align 8
  %common296 = bitcast %union.tree_node* %158 to %struct.tree_common*
  %type297 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common296, i32 0, i32 1
  %159 = load %union.tree_node*, %union.tree_node** %type297, align 8
  %common298 = bitcast %union.tree_node* %159 to %struct.tree_common*
  %type299 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common298, i32 0, i32 1
  %160 = load %union.tree_node*, %union.tree_node** %type299, align 8
  %type300 = bitcast %union.tree_node* %160 to %struct.tree_type*
  %main_variant301 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type300, i32 0, i32 15
  %161 = load %union.tree_node*, %union.tree_node** %main_variant301, align 8
  %162 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 0), align 8
  %cmp302 = icmp ne %union.tree_node* %161, %162
  br i1 %cmp302, label %if.then.303, label %if.end.304

if.then.303:                                      ; preds = %lor.lhs.false.295, %lor.lhs.false.287, %sw.bb.281
  %163 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %163, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.236, i32 0, i32 0))
  br label %if.end.304

if.end.304:                                       ; preds = %if.then.303, %lor.lhs.false.295
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.251, %if.end.304, %if.end.280, %if.end.256
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %164 = load %union.tree_node*, %union.tree_node** %args, align 8
  %common305 = bitcast %union.tree_node* %164 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common305, i32 0, i32 0
  %165 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %165, %union.tree_node** %args, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.250, %for.cond
  %166 = load i32, i32* %argct, align 4
  %cmp306 = icmp sgt i32 %166, 0
  br i1 %cmp306, label %land.lhs.true.307, label %if.end.312

land.lhs.true.307:                                ; preds = %for.end
  %167 = load i32, i32* %argct, align 4
  %cmp308 = icmp slt i32 %167, 2
  br i1 %cmp308, label %if.then.311, label %lor.lhs.false.309

lor.lhs.false.309:                                ; preds = %land.lhs.true.307
  %168 = load i32, i32* %argct, align 4
  %cmp310 = icmp sgt i32 %168, 3
  br i1 %cmp310, label %if.then.311, label %if.end.312

if.then.311:                                      ; preds = %lor.lhs.false.309, %land.lhs.true.307
  %169 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %169, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.237, i32 0, i32 0))
  br label %if.end.312

if.end.312:                                       ; preds = %if.then.311, %lor.lhs.false.309, %for.end
  %170 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %common313 = bitcast %union.tree_node* %170 to %struct.tree_common*
  %public_flag314 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common313, i32 0, i32 2
  %bf.load315 = load i32, i32* %public_flag314, align 8
  %bf.lshr316 = lshr i32 %bf.load315, 19
  %bf.clear317 = and i32 %bf.lshr316, 1
  %tobool318 = icmp ne i32 %bf.clear317, 0
  br i1 %tobool318, label %if.end.320, label %if.then.319

if.then.319:                                      ; preds = %if.end.312
  %171 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %171, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.238, i32 0, i32 0))
  br label %if.end.320

if.end.320:                                       ; preds = %if.then.319, %if.end.312
  br label %if.end.321

if.end.321:                                       ; preds = %if.end.320, %land.lhs.true.228, %if.end.226
  %172 = load %union.tree_node*, %union.tree_node** %decl1, align 8
  %call322 = call %union.tree_node* @pushdecl(%union.tree_node* %172)
  store %union.tree_node* %call322, %union.tree_node** @current_function_decl, align 8
  call void @pushlevel(i32 0)
  call void @declare_parm_level(i32 1)
  %173 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %subblocks_tag_transparent = getelementptr inbounds %struct.binding_level, %struct.binding_level* %173, i32 0, i32 8
  store i8 1, i8* %subblocks_tag_transparent, align 1
  %174 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  call void @make_decl_rtl(%union.tree_node* %174, i8* null)
  %175 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %common323 = bitcast %union.tree_node* %175 to %struct.tree_common*
  %type324 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common323, i32 0, i32 1
  %176 = load %union.tree_node*, %union.tree_node** %type324, align 8
  %common325 = bitcast %union.tree_node* %176 to %struct.tree_common*
  %type326 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common325, i32 0, i32 1
  %177 = load %union.tree_node*, %union.tree_node** %type326, align 8
  store %union.tree_node* %177, %union.tree_node** %restype, align 8
  %178 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %call327 = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %178)
  br i1 %call327, label %if.then.328, label %if.end.348

if.then.328:                                      ; preds = %if.end.321
  %179 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %common329 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %unsigned_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common329, i32 0, i32 2
  %bf.load330 = load i32, i32* %unsigned_flag, align 8
  %bf.lshr331 = lshr i32 %bf.load330, 13
  %bf.clear332 = and i32 %bf.lshr331, 1
  %tobool333 = icmp ne i32 %bf.clear332, 0
  br i1 %tobool333, label %land.lhs.true.334, label %if.else.346

land.lhs.true.334:                                ; preds = %if.then.328
  %180 = load i32, i32* @flag_traditional, align 4
  %tobool335 = icmp ne i32 %180, 0
  br i1 %tobool335, label %if.then.345, label %lor.lhs.false.336

lor.lhs.false.336:                                ; preds = %land.lhs.true.334
  %181 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %type337 = bitcast %union.tree_node* %181 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type337, i32 0, i32 6
  %bf.load338 = load i32, i32* %precision, align 4
  %bf.clear339 = and i32 %bf.load338, 511
  %182 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type340 = bitcast %union.tree_node* %182 to %struct.tree_type*
  %precision341 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type340, i32 0, i32 6
  %bf.load342 = load i32, i32* %precision341, align 4
  %bf.clear343 = and i32 %bf.load342, 511
  %cmp344 = icmp eq i32 %bf.clear339, %bf.clear343
  br i1 %cmp344, label %if.then.345, label %if.else.346

if.then.345:                                      ; preds = %lor.lhs.false.336, %land.lhs.true.334
  %183 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  store %union.tree_node* %183, %union.tree_node** %restype, align 8
  br label %if.end.347

if.else.346:                                      ; preds = %lor.lhs.false.336, %if.then.328
  %184 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  store %union.tree_node* %184, %union.tree_node** %restype, align 8
  br label %if.end.347

if.end.347:                                       ; preds = %if.else.346, %if.then.345
  br label %if.end.348

if.end.348:                                       ; preds = %if.end.347, %if.end.321
  %185 = load %union.tree_node*, %union.tree_node** %restype, align 8
  %call349 = call %union.tree_node* @build_decl(i32 36, %union.tree_node* null, %union.tree_node* %185)
  %186 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl350 = bitcast %union.tree_node* %186 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl350, i32 0, i32 11
  store %union.tree_node* %call349, %union.tree_node** %result, align 8
  %187 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl351 = bitcast %union.tree_node* %187 to %struct.tree_decl*
  %assembler_name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl351, i32 0, i32 14
  %188 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8
  %cmp352 = icmp ne %union.tree_node* %188, null
  br i1 %cmp352, label %cond.true.353, label %cond.false.354

cond.true.353:                                    ; preds = %if.end.348
  br label %cond.end.355

cond.false.354:                                   ; preds = %if.end.348
  %189 = load void (%union.tree_node*)*, void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8
  %190 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  call void %189(%union.tree_node* %190)
  br label %cond.end.355

cond.end.355:                                     ; preds = %cond.false.354, %cond.true.353
  %191 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl356 = bitcast %union.tree_node* %191 to %struct.tree_decl*
  %assembler_name357 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl356, i32 0, i32 14
  %192 = load %union.tree_node*, %union.tree_node** %assembler_name357, align 8
  %common358 = bitcast %union.tree_node* %192 to %struct.tree_common*
  %addressable_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common358, i32 0, i32 2
  %bf.load359 = load i32, i32* %addressable_flag, align 8
  %bf.lshr360 = lshr i32 %bf.load359, 10
  %bf.clear361 = and i32 %bf.lshr360, 1
  %tobool362 = icmp ne i32 %bf.clear361, 0
  br i1 %tobool362, label %if.then.363, label %if.end.369

if.then.363:                                      ; preds = %cond.end.355
  %193 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %common364 = bitcast %union.tree_node* %193 to %struct.tree_common*
  %addressable_flag365 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common364, i32 0, i32 2
  %bf.load366 = load i32, i32* %addressable_flag365, align 8
  %bf.clear367 = and i32 %bf.load366, -1025
  %bf.set368 = or i32 %bf.clear367, 1024
  store i32 %bf.set368, i32* %addressable_flag365, align 8
  br label %if.end.369

if.end.369:                                       ; preds = %if.then.363, %cond.end.355
  %194 = load i32, i32* %old_immediate_size_expand, align 4
  store i32 %194, i32* @immediate_size_expand, align 4
  call void @start_fname_decls()
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.369, %if.then
  %195 = load i32, i32* %retval
  ret i32 %195
}

declare void @announce_function(%union.tree_node*) #1

declare void @pedwarn_c99(i8*, ...) #1

declare zeroext i1 @c_promoting_integer_type_p(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_mark_varargs() #0 {
entry:
  store i32 1, i32* @c_function_varargs, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @store_parm_decls() #0 {
entry:
  %fndecl = alloca %union.tree_node*, align 8
  %parm = alloca %union.tree_node*, align 8
  %specparms = alloca %union.tree_node*, align 8
  %parmtags = alloca %union.tree_node*, align 8
  %parmdecls = alloca %union.tree_node*, align 8
  %nonparms = alloca %union.tree_node*, align 8
  %context = alloca %union.tree_node*, align 8
  %prototype = alloca i32, align 4
  %saved_warn_shadow = alloca i32, align 4
  %next = alloca %union.tree_node*, align 8
  %others = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  %link = alloca %union.tree_node*, align 8
  %tail = alloca %union.tree_node*, align 8
  %found = alloca %union.tree_node*, align 8
  %next214 = alloca %union.tree_node*, align 8
  %last = alloca %union.tree_node*, align 8
  %type283 = alloca %union.tree_node*, align 8
  %actual = alloca %union.tree_node*, align 8
  %last420 = alloca %union.tree_node*, align 8
  %type421 = alloca %union.tree_node*, align 8
  %t = alloca %union.tree_node*, align 8
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  store %union.tree_node* %0, %union.tree_node** %fndecl, align 8
  %1 = load %union.tree_node*, %union.tree_node** @current_function_parms, align 8
  store %union.tree_node* %1, %union.tree_node** %specparms, align 8
  %2 = load %union.tree_node*, %union.tree_node** @current_function_parm_tags, align 8
  store %union.tree_node* %2, %union.tree_node** %parmtags, align 8
  %call = call %union.tree_node* @getdecls()
  store %union.tree_node* %call, %union.tree_node** %parmdecls, align 8
  store %union.tree_node* null, %union.tree_node** %nonparms, align 8
  %3 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %call1 = call %union.tree_node* @decl_function_context(%union.tree_node* %3)
  store %union.tree_node* %call1, %union.tree_node** %context, align 8
  store i32 0, i32* %prototype, align 4
  %4 = load i32, i32* @warn_shadow, align 4
  store i32 %4, i32* %saved_warn_shadow, align 4
  store i32 0, i32* @warn_shadow, align 4
  %5 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  %cmp = icmp ne %union.tree_node* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.else.98

land.lhs.true:                                    ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  %common = bitcast %union.tree_node* %6 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp ne i32 %bf.clear, 2
  br i1 %cmp2, label %if.then, label %if.else.98

if.then:                                          ; preds = %land.lhs.true
  store %union.tree_node* null, %union.tree_node** %others, align 8
  store i32 1, i32* %prototype, align 4
  %7 = load %union.tree_node*, %union.tree_node** %parmdecls, align 8
  %cmp3 = icmp ne %union.tree_node* %7, null
  br i1 %cmp3, label %if.then.4, label %if.end.22

if.then.4:                                        ; preds = %if.then
  %8 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.239, i32 0, i32 0))
  %9 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names = getelementptr inbounds %struct.binding_level, %struct.binding_level* %9, i32 0, i32 0
  %10 = load %union.tree_node*, %union.tree_node** %names, align 8
  store %union.tree_node* %10, %union.tree_node** %decl, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.4
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %tobool = icmp ne %union.tree_node* %11, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl5 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl5, i32 0, i32 8
  %13 = load %union.tree_node*, %union.tree_node** %name, align 8
  %tobool6 = icmp ne %union.tree_node* %13, null
  br i1 %tobool6, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %for.body
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl8 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %name9 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl8, i32 0, i32 8
  %15 = load %union.tree_node*, %union.tree_node** %name9, align 8
  %16 = bitcast %union.tree_node* %15 to %struct.lang_identifier*
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %16, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %local_value, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.7, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common10 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %18, %union.tree_node** %decl, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %shadowed = getelementptr inbounds %struct.binding_level, %struct.binding_level* %19, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %shadowed, align 8
  store %union.tree_node* %20, %union.tree_node** %link, align 8
  br label %for.cond.11

for.cond.11:                                      ; preds = %for.inc.16, %for.end
  %21 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool12 = icmp ne %union.tree_node* %21, null
  br i1 %tobool12, label %for.body.13, label %for.end.19

for.body.13:                                      ; preds = %for.cond.11
  %22 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list = bitcast %union.tree_node* %22 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %23 = load %union.tree_node*, %union.tree_node** %value, align 8
  %24 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list14 = bitcast %union.tree_node* %24 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list14, i32 0, i32 1
  %25 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %26 = bitcast %union.tree_node* %25 to %struct.lang_identifier*
  %local_value15 = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %26, i32 0, i32 2
  store %union.tree_node* %23, %union.tree_node** %local_value15, align 8
  br label %for.inc.16

for.inc.16:                                       ; preds = %for.body.13
  %27 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common17 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %chain18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 0
  %28 = load %union.tree_node*, %union.tree_node** %chain18, align 8
  store %union.tree_node* %28, %union.tree_node** %link, align 8
  br label %for.cond.11

for.end.19:                                       ; preds = %for.cond.11
  %29 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %names20 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %29, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %names20, align 8
  %30 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %shadowed21 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %30, i32 0, i32 2
  store %union.tree_node* null, %union.tree_node** %shadowed21, align 8
  br label %if.end.22

if.end.22:                                        ; preds = %for.end.19, %if.then
  %31 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  %call23 = call %union.tree_node* @nreverse(%union.tree_node* %31)
  store %union.tree_node* %call23, %union.tree_node** %specparms, align 8
  %32 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  store %union.tree_node* %32, %union.tree_node** %parm, align 8
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc.64, %if.end.22
  %33 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool25 = icmp ne %union.tree_node* %33, null
  br i1 %tobool25, label %for.body.26, label %for.end.65

for.body.26:                                      ; preds = %for.cond.24
  %34 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common27 = bitcast %union.tree_node* %34 to %struct.tree_common*
  %chain28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 0
  %35 = load %union.tree_node*, %union.tree_node** %chain28, align 8
  store %union.tree_node* %35, %union.tree_node** %next, align 8
  %36 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common29 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %code30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 2
  %bf.load31 = load i32, i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 35
  br i1 %cmp33, label %if.then.34, label %if.else.59

if.then.34:                                       ; preds = %for.body.26
  %37 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl35 = bitcast %union.tree_node* %37 to %struct.tree_decl*
  %name36 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl35, i32 0, i32 8
  %38 = load %union.tree_node*, %union.tree_node** %name36, align 8
  %cmp37 = icmp eq %union.tree_node* %38, null
  br i1 %cmp37, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %if.then.34
  %39 = load %union.tree_node*, %union.tree_node** %parm, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %39, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.240, i32 0, i32 0))
  br label %if.end.57

if.else:                                          ; preds = %if.then.34
  %40 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common39 = bitcast %union.tree_node* %40 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common39, i32 0, i32 1
  %41 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common40 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %code41 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common40, i32 0, i32 2
  %bf.load42 = load i32, i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cmp44 = icmp ne i32 %bf.clear43, 0
  br i1 %cmp44, label %land.lhs.true.45, label %if.end.56

land.lhs.true.45:                                 ; preds = %if.else
  %42 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common46 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %type47 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common46, i32 0, i32 1
  %43 = load %union.tree_node*, %union.tree_node** %type47, align 8
  %common48 = bitcast %union.tree_node* %43 to %struct.tree_common*
  %code49 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common48, i32 0, i32 2
  %bf.load50 = load i32, i32* %code49, align 8
  %bf.clear51 = and i32 %bf.load50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 5
  br i1 %cmp52, label %if.then.53, label %if.end.56

if.then.53:                                       ; preds = %land.lhs.true.45
  %44 = load %union.tree_node*, %union.tree_node** %parm, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %44, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.241, i32 0, i32 0))
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %46 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common54 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %type55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 1
  store %union.tree_node* %45, %union.tree_node** %type55, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.53, %land.lhs.true.45, %if.else
  br label %if.end.57

if.end.57:                                        ; preds = %if.end.56, %if.then.38
  %47 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %call58 = call %union.tree_node* @pushdecl(%union.tree_node* %47)
  br label %if.end.63

if.else.59:                                       ; preds = %for.body.26
  %48 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common60 = bitcast %union.tree_node* %48 to %struct.tree_common*
  %chain61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common60, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain61, align 8
  %49 = load %union.tree_node*, %union.tree_node** %others, align 8
  %50 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %call62 = call %union.tree_node* @chainon(%union.tree_node* %49, %union.tree_node* %50)
  store %union.tree_node* %call62, %union.tree_node** %others, align 8
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.59, %if.end.57
  br label %for.inc.64

for.inc.64:                                       ; preds = %if.end.63
  %51 = load %union.tree_node*, %union.tree_node** %next, align 8
  store %union.tree_node* %51, %union.tree_node** %parm, align 8
  br label %for.cond.24

for.end.65:                                       ; preds = %for.cond.24
  %call66 = call %union.tree_node* @getdecls()
  %52 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl67 = bitcast %union.tree_node* %52 to %struct.tree_decl*
  %arguments = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl67, i32 0, i32 10
  store %union.tree_node* %call66, %union.tree_node** %arguments, align 8
  %53 = load %union.tree_node*, %union.tree_node** %others, align 8
  store %union.tree_node* %53, %union.tree_node** %parm, align 8
  br label %for.cond.68

for.cond.68:                                      ; preds = %for.inc.94, %for.end.65
  %54 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool69 = icmp ne %union.tree_node* %54, null
  br i1 %tobool69, label %for.body.70, label %for.end.95

for.body.70:                                      ; preds = %for.cond.68
  %55 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common71 = bitcast %union.tree_node* %55 to %struct.tree_common*
  %chain72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common71, i32 0, i32 0
  %56 = load %union.tree_node*, %union.tree_node** %chain72, align 8
  store %union.tree_node* %56, %union.tree_node** %next, align 8
  %57 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl73 = bitcast %union.tree_node* %57 to %struct.tree_decl*
  %name74 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl73, i32 0, i32 8
  %58 = load %union.tree_node*, %union.tree_node** %name74, align 8
  %cmp75 = icmp eq %union.tree_node* %58, null
  br i1 %cmp75, label %if.then.76, label %if.else.77

if.then.76:                                       ; preds = %for.body.70
  br label %if.end.93

if.else.77:                                       ; preds = %for.body.70
  %59 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common78 = bitcast %union.tree_node* %59 to %struct.tree_common*
  %type79 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common78, i32 0, i32 1
  %60 = load %union.tree_node*, %union.tree_node** %type79, align 8
  %type80 = bitcast %union.tree_node* %60 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type80, i32 0, i32 15
  %61 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp81 = icmp eq %union.tree_node* %61, %62
  br i1 %cmp81, label %if.then.82, label %if.else.83

if.then.82:                                       ; preds = %if.else.77
  br label %if.end.92

if.else.83:                                       ; preds = %if.else.77
  %63 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common84 = bitcast %union.tree_node* %63 to %struct.tree_common*
  %code85 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common84, i32 0, i32 2
  %bf.load86 = load i32, i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp ne i32 %bf.clear87, 35
  br i1 %cmp88, label %if.then.89, label %if.end.91

if.then.89:                                       ; preds = %if.else.83
  %64 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %call90 = call %union.tree_node* @pushdecl(%union.tree_node* %64)
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.89, %if.else.83
  br label %if.end.92

if.end.92:                                        ; preds = %if.end.91, %if.then.82
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.then.76
  br label %for.inc.94

for.inc.94:                                       ; preds = %if.end.93
  %65 = load %union.tree_node*, %union.tree_node** %next, align 8
  store %union.tree_node* %65, %union.tree_node** %parm, align 8
  br label %for.cond.68

for.end.95:                                       ; preds = %for.cond.68
  %66 = load %union.tree_node*, %union.tree_node** %parmtags, align 8
  %call96 = call %union.tree_node* @gettags()
  %call97 = call %union.tree_node* @chainon(%union.tree_node* %66, %union.tree_node* %call96)
  call void @storetags(%union.tree_node* %call97)
  br label %if.end.460

if.else.98:                                       ; preds = %land.lhs.true, %entry
  %67 = load %union.tree_node*, %union.tree_node** %parmdecls, align 8
  store %union.tree_node* %67, %union.tree_node** %parm, align 8
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.105, %if.else.98
  %68 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool100 = icmp ne %union.tree_node* %68, null
  br i1 %tobool100, label %for.body.101, label %for.end.108

for.body.101:                                     ; preds = %for.cond.99
  %69 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl102 = bitcast %union.tree_node* %69 to %struct.tree_decl*
  %weak_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl102, i32 0, i32 5
  %70 = bitcast i48* %weak_flag to i64*
  %bf.load103 = load i64, i64* %70, align 8
  %bf.clear104 = and i64 %bf.load103, -8388609
  store i64 %bf.clear104, i64* %70, align 8
  br label %for.inc.105

for.inc.105:                                      ; preds = %for.body.101
  %71 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common106 = bitcast %union.tree_node* %71 to %struct.tree_common*
  %chain107 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common106, i32 0, i32 0
  %72 = load %union.tree_node*, %union.tree_node** %chain107, align 8
  store %union.tree_node* %72, %union.tree_node** %parm, align 8
  br label %for.cond.99

for.end.108:                                      ; preds = %for.cond.99
  %73 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  store %union.tree_node* %73, %union.tree_node** %parm, align 8
  br label %for.cond.109

for.cond.109:                                     ; preds = %for.inc.207, %for.end.108
  %74 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool110 = icmp ne %union.tree_node* %74, null
  br i1 %tobool110, label %for.body.111, label %for.end.210

for.body.111:                                     ; preds = %for.cond.109
  store %union.tree_node* null, %union.tree_node** %found, align 8
  %75 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list112 = bitcast %union.tree_node* %75 to %struct.tree_list*
  %value113 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list112, i32 0, i32 2
  %76 = load %union.tree_node*, %union.tree_node** %value113, align 8
  %cmp114 = icmp eq %union.tree_node* %76, null
  br i1 %cmp114, label %if.then.115, label %if.end.118

if.then.115:                                      ; preds = %for.body.111
  %77 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %77, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.242, i32 0, i32 0))
  %78 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list116 = bitcast %union.tree_node* %78 to %struct.tree_list*
  %purpose117 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list116, i32 0, i32 1
  store %union.tree_node* null, %union.tree_node** %purpose117, align 8
  br label %for.inc.207

if.end.118:                                       ; preds = %for.body.111
  %79 = load %union.tree_node*, %union.tree_node** %parmdecls, align 8
  store %union.tree_node* %79, %union.tree_node** %tail, align 8
  br label %for.cond.119

for.cond.119:                                     ; preds = %for.inc.135, %if.end.118
  %80 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %tobool120 = icmp ne %union.tree_node* %80, null
  br i1 %tobool120, label %for.body.121, label %for.end.138

for.body.121:                                     ; preds = %for.cond.119
  %81 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %decl122 = bitcast %union.tree_node* %81 to %struct.tree_decl*
  %name123 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl122, i32 0, i32 8
  %82 = load %union.tree_node*, %union.tree_node** %name123, align 8
  %83 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list124 = bitcast %union.tree_node* %83 to %struct.tree_list*
  %value125 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list124, i32 0, i32 2
  %84 = load %union.tree_node*, %union.tree_node** %value125, align 8
  %cmp126 = icmp eq %union.tree_node* %82, %84
  br i1 %cmp126, label %land.lhs.true.127, label %if.end.134

land.lhs.true.127:                                ; preds = %for.body.121
  %85 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common128 = bitcast %union.tree_node* %85 to %struct.tree_common*
  %code129 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common128, i32 0, i32 2
  %bf.load130 = load i32, i32* %code129, align 8
  %bf.clear131 = and i32 %bf.load130, 255
  %cmp132 = icmp eq i32 %bf.clear131, 35
  br i1 %cmp132, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %land.lhs.true.127
  %86 = load %union.tree_node*, %union.tree_node** %tail, align 8
  store %union.tree_node* %86, %union.tree_node** %found, align 8
  br label %for.end.138

if.end.134:                                       ; preds = %land.lhs.true.127, %for.body.121
  br label %for.inc.135

for.inc.135:                                      ; preds = %if.end.134
  %87 = load %union.tree_node*, %union.tree_node** %tail, align 8
  %common136 = bitcast %union.tree_node* %87 to %struct.tree_common*
  %chain137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 0
  %88 = load %union.tree_node*, %union.tree_node** %chain137, align 8
  store %union.tree_node* %88, %union.tree_node** %tail, align 8
  br label %for.cond.119

for.end.138:                                      ; preds = %if.then.133, %for.cond.119
  %89 = load %union.tree_node*, %union.tree_node** %found, align 8
  %tobool139 = icmp ne %union.tree_node* %89, null
  br i1 %tobool139, label %land.lhs.true.140, label %if.end.147

land.lhs.true.140:                                ; preds = %for.end.138
  %90 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl141 = bitcast %union.tree_node* %90 to %struct.tree_decl*
  %weak_flag142 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl141, i32 0, i32 5
  %91 = bitcast i48* %weak_flag142 to i64*
  %bf.load143 = load i64, i64* %91, align 8
  %bf.lshr = lshr i64 %bf.load143, 23
  %bf.clear144 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear144 to i32
  %tobool145 = icmp ne i32 %bf.cast, 0
  br i1 %tobool145, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %land.lhs.true.140
  %92 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %92, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.243, i32 0, i32 0))
  store %union.tree_node* null, %union.tree_node** %found, align 8
  br label %if.end.147

if.end.147:                                       ; preds = %if.then.146, %land.lhs.true.140, %for.end.138
  %93 = load %union.tree_node*, %union.tree_node** %found, align 8
  %tobool148 = icmp ne %union.tree_node* %93, null
  br i1 %tobool148, label %land.lhs.true.149, label %if.end.161

land.lhs.true.149:                                ; preds = %if.end.147
  %94 = load %union.tree_node*, %union.tree_node** %found, align 8
  %common150 = bitcast %union.tree_node* %94 to %struct.tree_common*
  %type151 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common150, i32 0, i32 1
  %95 = load %union.tree_node*, %union.tree_node** %type151, align 8
  %common152 = bitcast %union.tree_node* %95 to %struct.tree_common*
  %code153 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common152, i32 0, i32 2
  %bf.load154 = load i32, i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %cmp156 = icmp eq i32 %bf.clear155, 5
  br i1 %cmp156, label %if.then.157, label %if.end.161

if.then.157:                                      ; preds = %land.lhs.true.149
  %96 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %96, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.241, i32 0, i32 0))
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %98 = load %union.tree_node*, %union.tree_node** %found, align 8
  %common158 = bitcast %union.tree_node* %98 to %struct.tree_common*
  %type159 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common158, i32 0, i32 1
  store %union.tree_node* %97, %union.tree_node** %type159, align 8
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %100 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl160 = bitcast %union.tree_node* %100 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl160, i32 0, i32 12
  store %union.tree_node* %99, %union.tree_node** %initial, align 8
  %101 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void @layout_decl(%union.tree_node* %101, i32 0)
  br label %if.end.161

if.end.161:                                       ; preds = %if.then.157, %land.lhs.true.149, %if.end.147
  %102 = load %union.tree_node*, %union.tree_node** %found, align 8
  %tobool162 = icmp ne %union.tree_node* %102, null
  br i1 %tobool162, label %land.lhs.true.163, label %if.end.176

land.lhs.true.163:                                ; preds = %if.end.161
  %103 = load i32, i32* @flag_traditional, align 4
  %tobool164 = icmp ne i32 %103, 0
  br i1 %tobool164, label %land.lhs.true.165, label %if.end.176

land.lhs.true.165:                                ; preds = %land.lhs.true.163
  %104 = load %union.tree_node*, %union.tree_node** %found, align 8
  %common166 = bitcast %union.tree_node* %104 to %struct.tree_common*
  %type167 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common166, i32 0, i32 1
  %105 = load %union.tree_node*, %union.tree_node** %type167, align 8
  %type168 = bitcast %union.tree_node* %105 to %struct.tree_type*
  %main_variant169 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type168, i32 0, i32 15
  %106 = load %union.tree_node*, %union.tree_node** %main_variant169, align 8
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 24), align 8
  %cmp170 = icmp eq %union.tree_node* %106, %107
  br i1 %cmp170, label %if.then.171, label %if.end.176

if.then.171:                                      ; preds = %land.lhs.true.165
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %109 = load %union.tree_node*, %union.tree_node** %found, align 8
  %common172 = bitcast %union.tree_node* %109 to %struct.tree_common*
  %type173 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common172, i32 0, i32 1
  store %union.tree_node* %108, %union.tree_node** %type173, align 8
  %110 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 25), align 8
  %111 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl174 = bitcast %union.tree_node* %111 to %struct.tree_decl*
  %initial175 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl174, i32 0, i32 12
  store %union.tree_node* %110, %union.tree_node** %initial175, align 8
  %112 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void @layout_decl(%union.tree_node* %112, i32 0)
  br label %if.end.176

if.end.176:                                       ; preds = %if.then.171, %land.lhs.true.165, %land.lhs.true.163, %if.end.161
  %113 = load %union.tree_node*, %union.tree_node** %found, align 8
  %tobool177 = icmp ne %union.tree_node* %113, null
  br i1 %tobool177, label %if.end.200, label %if.then.178

if.then.178:                                      ; preds = %if.end.176
  %114 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list179 = bitcast %union.tree_node* %114 to %struct.tree_list*
  %value180 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list179, i32 0, i32 2
  %115 = load %union.tree_node*, %union.tree_node** %value180, align 8
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %call181 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %115, %union.tree_node* %116)
  store %union.tree_node* %call181, %union.tree_node** %found, align 8
  %117 = load %union.tree_node*, %union.tree_node** %found, align 8
  %common182 = bitcast %union.tree_node* %117 to %struct.tree_common*
  %type183 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common182, i32 0, i32 1
  %118 = load %union.tree_node*, %union.tree_node** %type183, align 8
  %119 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl184 = bitcast %union.tree_node* %119 to %struct.tree_decl*
  %initial185 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl184, i32 0, i32 12
  store %union.tree_node* %118, %union.tree_node** %initial185, align 8
  %120 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl186 = bitcast %union.tree_node* %120 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl186, i32 0, i32 2
  %121 = load i32, i32* %linenum, align 4
  %122 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl187 = bitcast %union.tree_node* %122 to %struct.tree_decl*
  %linenum188 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl187, i32 0, i32 2
  store i32 %121, i32* %linenum188, align 4
  %123 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl189 = bitcast %union.tree_node* %123 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl189, i32 0, i32 1
  %124 = load i8*, i8** %filename, align 8
  %125 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl190 = bitcast %union.tree_node* %125 to %struct.tree_decl*
  %filename191 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl190, i32 0, i32 1
  store i8* %124, i8** %filename191, align 8
  %126 = load i32, i32* @flag_isoc99, align 4
  %tobool192 = icmp ne i32 %126, 0
  br i1 %tobool192, label %if.then.193, label %if.else.194

if.then.193:                                      ; preds = %if.then.178
  %127 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %127, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.244, i32 0, i32 0))
  br label %if.end.198

if.else.194:                                      ; preds = %if.then.178
  %128 = load i32, i32* @extra_warnings, align 4
  %tobool195 = icmp ne i32 %128, 0
  br i1 %tobool195, label %if.then.196, label %if.end.197

if.then.196:                                      ; preds = %if.else.194
  %129 = load %union.tree_node*, %union.tree_node** %found, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %129, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.244, i32 0, i32 0))
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.196, %if.else.194
  br label %if.end.198

if.end.198:                                       ; preds = %if.end.197, %if.then.193
  %130 = load %union.tree_node*, %union.tree_node** %found, align 8
  %call199 = call %union.tree_node* @pushdecl(%union.tree_node* %130)
  br label %if.end.200

if.end.200:                                       ; preds = %if.end.198, %if.end.176
  %131 = load %union.tree_node*, %union.tree_node** %found, align 8
  %132 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list201 = bitcast %union.tree_node* %132 to %struct.tree_list*
  %purpose202 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list201, i32 0, i32 1
  store %union.tree_node* %131, %union.tree_node** %purpose202, align 8
  %133 = load %union.tree_node*, %union.tree_node** %found, align 8
  %decl203 = bitcast %union.tree_node* %133 to %struct.tree_decl*
  %weak_flag204 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl203, i32 0, i32 5
  %134 = bitcast i48* %weak_flag204 to i64*
  %bf.load205 = load i64, i64* %134, align 8
  %bf.clear206 = and i64 %bf.load205, -8388609
  %bf.set = or i64 %bf.clear206, 8388608
  store i64 %bf.set, i64* %134, align 8
  br label %for.inc.207

for.inc.207:                                      ; preds = %if.end.200, %if.then.115
  %135 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common208 = bitcast %union.tree_node* %135 to %struct.tree_common*
  %chain209 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common208, i32 0, i32 0
  %136 = load %union.tree_node*, %union.tree_node** %chain209, align 8
  store %union.tree_node* %136, %union.tree_node** %parm, align 8
  br label %for.cond.109

for.end.210:                                      ; preds = %for.cond.109
  store %union.tree_node* null, %union.tree_node** %nonparms, align 8
  %137 = load %union.tree_node*, %union.tree_node** %parmdecls, align 8
  store %union.tree_node* %137, %union.tree_node** %parm, align 8
  br label %for.cond.211

for.cond.211:                                     ; preds = %if.end.246, %for.end.210
  %138 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool212 = icmp ne %union.tree_node* %138, null
  br i1 %tobool212, label %for.body.213, label %for.end.247

for.body.213:                                     ; preds = %for.cond.211
  %139 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common215 = bitcast %union.tree_node* %139 to %struct.tree_common*
  %chain216 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common215, i32 0, i32 0
  %140 = load %union.tree_node*, %union.tree_node** %chain216, align 8
  store %union.tree_node* %140, %union.tree_node** %next214, align 8
  %141 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common217 = bitcast %union.tree_node* %141 to %struct.tree_common*
  %chain218 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common217, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain218, align 8
  %142 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common219 = bitcast %union.tree_node* %142 to %struct.tree_common*
  %code220 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common219, i32 0, i32 2
  %bf.load221 = load i32, i32* %code220, align 8
  %bf.clear222 = and i32 %bf.load221, 255
  %cmp223 = icmp ne i32 %bf.clear222, 35
  br i1 %cmp223, label %if.then.224, label %if.else.226

if.then.224:                                      ; preds = %for.body.213
  %143 = load %union.tree_node*, %union.tree_node** %nonparms, align 8
  %144 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %call225 = call %union.tree_node* @chainon(%union.tree_node* %143, %union.tree_node* %144)
  store %union.tree_node* %call225, %union.tree_node** %nonparms, align 8
  br label %if.end.246

if.else.226:                                      ; preds = %for.body.213
  %145 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common227 = bitcast %union.tree_node* %145 to %struct.tree_common*
  %type228 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common227, i32 0, i32 1
  %146 = load %union.tree_node*, %union.tree_node** %type228, align 8
  %type229 = bitcast %union.tree_node* %146 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type229, i32 0, i32 2
  %147 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp230 = icmp ne %union.tree_node* %147, null
  br i1 %cmp230, label %if.end.234, label %if.then.231

if.then.231:                                      ; preds = %if.else.226
  %148 = load %union.tree_node*, %union.tree_node** %parm, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %148, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.245, i32 0, i32 0))
  %149 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %150 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common232 = bitcast %union.tree_node* %150 to %struct.tree_common*
  %type233 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common232, i32 0, i32 1
  store %union.tree_node* %149, %union.tree_node** %type233, align 8
  br label %if.end.234

if.end.234:                                       ; preds = %if.then.231, %if.else.226
  %151 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl235 = bitcast %union.tree_node* %151 to %struct.tree_decl*
  %weak_flag236 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl235, i32 0, i32 5
  %152 = bitcast i48* %weak_flag236 to i64*
  %bf.load237 = load i64, i64* %152, align 8
  %bf.lshr238 = lshr i64 %bf.load237, 23
  %bf.clear239 = and i64 %bf.lshr238, 1
  %bf.cast240 = trunc i64 %bf.clear239 to i32
  %tobool241 = icmp ne i32 %bf.cast240, 0
  br i1 %tobool241, label %if.end.245, label %if.then.242

if.then.242:                                      ; preds = %if.end.234
  %153 = load %union.tree_node*, %union.tree_node** %parm, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %153, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.246, i32 0, i32 0))
  %154 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  %155 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %call243 = call %union.tree_node* @tree_cons(%union.tree_node* %155, %union.tree_node* null, %union.tree_node* null)
  %call244 = call %union.tree_node* @chainon(%union.tree_node* %154, %union.tree_node* %call243)
  store %union.tree_node* %call244, %union.tree_node** %specparms, align 8
  br label %if.end.245

if.end.245:                                       ; preds = %if.then.242, %if.end.234
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %if.then.224
  %156 = load %union.tree_node*, %union.tree_node** %next214, align 8
  store %union.tree_node* %156, %union.tree_node** %parm, align 8
  br label %for.cond.211

for.end.247:                                      ; preds = %for.cond.211
  %157 = load %union.tree_node*, %union.tree_node** %specparms, align 8
  store %union.tree_node* %157, %union.tree_node** %parm, align 8
  %158 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl248 = bitcast %union.tree_node* %158 to %struct.tree_decl*
  %arguments249 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl248, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments249, align 8
  store %union.tree_node* null, %union.tree_node** %last, align 8
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.274, %for.end.247
  %159 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool251 = icmp ne %union.tree_node* %159, null
  br i1 %tobool251, label %for.body.252, label %for.end.277

for.body.252:                                     ; preds = %for.cond.250
  %160 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list253 = bitcast %union.tree_node* %160 to %struct.tree_list*
  %purpose254 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list253, i32 0, i32 1
  %161 = load %union.tree_node*, %union.tree_node** %purpose254, align 8
  %tobool255 = icmp ne %union.tree_node* %161, null
  br i1 %tobool255, label %if.then.256, label %if.end.273

if.then.256:                                      ; preds = %for.body.252
  %162 = load %union.tree_node*, %union.tree_node** %last, align 8
  %cmp257 = icmp eq %union.tree_node* %162, null
  br i1 %cmp257, label %if.then.258, label %if.else.263

if.then.258:                                      ; preds = %if.then.256
  %163 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list259 = bitcast %union.tree_node* %163 to %struct.tree_list*
  %purpose260 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list259, i32 0, i32 1
  %164 = load %union.tree_node*, %union.tree_node** %purpose260, align 8
  %165 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl261 = bitcast %union.tree_node* %165 to %struct.tree_decl*
  %arguments262 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl261, i32 0, i32 10
  store %union.tree_node* %164, %union.tree_node** %arguments262, align 8
  br label %if.end.268

if.else.263:                                      ; preds = %if.then.256
  %166 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list264 = bitcast %union.tree_node* %166 to %struct.tree_list*
  %purpose265 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list264, i32 0, i32 1
  %167 = load %union.tree_node*, %union.tree_node** %purpose265, align 8
  %168 = load %union.tree_node*, %union.tree_node** %last, align 8
  %common266 = bitcast %union.tree_node* %168 to %struct.tree_common*
  %chain267 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common266, i32 0, i32 0
  store %union.tree_node* %167, %union.tree_node** %chain267, align 8
  br label %if.end.268

if.end.268:                                       ; preds = %if.else.263, %if.then.258
  %169 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %list269 = bitcast %union.tree_node* %169 to %struct.tree_list*
  %purpose270 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list269, i32 0, i32 1
  %170 = load %union.tree_node*, %union.tree_node** %purpose270, align 8
  store %union.tree_node* %170, %union.tree_node** %last, align 8
  %171 = load %union.tree_node*, %union.tree_node** %last, align 8
  %common271 = bitcast %union.tree_node* %171 to %struct.tree_common*
  %chain272 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common271, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain272, align 8
  br label %if.end.273

if.end.273:                                       ; preds = %if.end.268, %for.body.252
  br label %for.inc.274

for.inc.274:                                      ; preds = %if.end.273
  %172 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common275 = bitcast %union.tree_node* %172 to %struct.tree_common*
  %chain276 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common275, i32 0, i32 0
  %173 = load %union.tree_node*, %union.tree_node** %chain276, align 8
  store %union.tree_node* %173, %union.tree_node** %parm, align 8
  br label %for.cond.250

for.end.277:                                      ; preds = %for.cond.250
  %174 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common278 = bitcast %union.tree_node* %174 to %struct.tree_common*
  %type279 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common278, i32 0, i32 1
  %175 = load %union.tree_node*, %union.tree_node** %type279, align 8
  %type280 = bitcast %union.tree_node* %175 to %struct.tree_type*
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type280, i32 0, i32 1
  %176 = load %union.tree_node*, %union.tree_node** %values, align 8
  %tobool281 = icmp ne %union.tree_node* %176, null
  br i1 %tobool281, label %if.then.282, label %if.else.419

if.then.282:                                      ; preds = %for.end.277
  %177 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl284 = bitcast %union.tree_node* %177 to %struct.tree_decl*
  %arguments285 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl284, i32 0, i32 10
  %178 = load %union.tree_node*, %union.tree_node** %arguments285, align 8
  store %union.tree_node* %178, %union.tree_node** %parm, align 8
  %179 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common286 = bitcast %union.tree_node* %179 to %struct.tree_common*
  %type287 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common286, i32 0, i32 1
  %180 = load %union.tree_node*, %union.tree_node** %type287, align 8
  %type288 = bitcast %union.tree_node* %180 to %struct.tree_type*
  %values289 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type288, i32 0, i32 1
  %181 = load %union.tree_node*, %union.tree_node** %values289, align 8
  store %union.tree_node* %181, %union.tree_node** %type283, align 8
  br label %for.cond.290

for.cond.290:                                     ; preds = %for.inc.410, %if.then.282
  %182 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool291 = icmp ne %union.tree_node* %182, null
  br i1 %tobool291, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.cond.290
  %183 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %tobool292 = icmp ne %union.tree_node* %183, null
  br i1 %tobool292, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %184 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %list293 = bitcast %union.tree_node* %184 to %struct.tree_list*
  %value294 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list293, i32 0, i32 2
  %185 = load %union.tree_node*, %union.tree_node** %value294, align 8
  %type295 = bitcast %union.tree_node* %185 to %struct.tree_type*
  %main_variant296 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type295, i32 0, i32 15
  %186 = load %union.tree_node*, %union.tree_node** %main_variant296, align 8
  %187 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp297 = icmp ne %union.tree_node* %186, %187
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %188 = phi i1 [ false, %lor.rhs ], [ %cmp297, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %for.cond.290
  %189 = phi i1 [ true, %for.cond.290 ], [ %188, %land.end ]
  br i1 %189, label %for.body.298, label %for.end.415

for.body.298:                                     ; preds = %lor.end
  %190 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %cmp299 = icmp eq %union.tree_node* %190, null
  br i1 %cmp299, label %if.then.307, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.298
  %191 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %cmp300 = icmp eq %union.tree_node* %191, null
  br i1 %cmp300, label %if.then.307, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %lor.lhs.false
  %192 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %list302 = bitcast %union.tree_node* %192 to %struct.tree_list*
  %value303 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list302, i32 0, i32 2
  %193 = load %union.tree_node*, %union.tree_node** %value303, align 8
  %type304 = bitcast %union.tree_node* %193 to %struct.tree_type*
  %main_variant305 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type304, i32 0, i32 15
  %194 = load %union.tree_node*, %union.tree_node** %main_variant305, align 8
  %195 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %cmp306 = icmp eq %union.tree_node* %194, %195
  br i1 %cmp306, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %lor.lhs.false.301, %lor.lhs.false, %for.body.298
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.247, i32 0, i32 0))
  %196 = load i8*, i8** @current_function_prototype_file, align 8
  %197 = load i32, i32* @current_function_prototype_line, align 4
  call void (i8*, i32, i8*, ...) @error_with_file_and_line(i8* %196, i32 %197, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.248, i32 0, i32 0))
  br label %for.end.415

if.end.308:                                       ; preds = %lor.lhs.false.301
  %198 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl309 = bitcast %union.tree_node* %198 to %struct.tree_decl*
  %initial310 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl309, i32 0, i32 12
  %199 = load %union.tree_node*, %union.tree_node** %initial310, align 8
  %type311 = bitcast %union.tree_node* %199 to %struct.tree_type*
  %main_variant312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type311, i32 0, i32 15
  %200 = load %union.tree_node*, %union.tree_node** %main_variant312, align 8
  %201 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %list313 = bitcast %union.tree_node* %201 to %struct.tree_list*
  %value314 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list313, i32 0, i32 2
  %202 = load %union.tree_node*, %union.tree_node** %value314, align 8
  %type315 = bitcast %union.tree_node* %202 to %struct.tree_type*
  %main_variant316 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type315, i32 0, i32 15
  %203 = load %union.tree_node*, %union.tree_node** %main_variant316, align 8
  %call317 = call i32 @comptypes(%union.tree_node* %200, %union.tree_node* %203)
  %tobool318 = icmp ne i32 %call317, 0
  br i1 %tobool318, label %if.end.409, label %if.then.319

if.then.319:                                      ; preds = %if.end.308
  %204 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common320 = bitcast %union.tree_node* %204 to %struct.tree_common*
  %type321 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common320, i32 0, i32 1
  %205 = load %union.tree_node*, %union.tree_node** %type321, align 8
  %type322 = bitcast %union.tree_node* %205 to %struct.tree_type*
  %main_variant323 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type322, i32 0, i32 15
  %206 = load %union.tree_node*, %union.tree_node** %main_variant323, align 8
  %207 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %list324 = bitcast %union.tree_node* %207 to %struct.tree_list*
  %value325 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list324, i32 0, i32 2
  %208 = load %union.tree_node*, %union.tree_node** %value325, align 8
  %type326 = bitcast %union.tree_node* %208 to %struct.tree_type*
  %main_variant327 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type326, i32 0, i32 15
  %209 = load %union.tree_node*, %union.tree_node** %main_variant327, align 8
  %cmp328 = icmp eq %union.tree_node* %206, %209
  br i1 %cmp328, label %if.then.329, label %if.else.387

if.then.329:                                      ; preds = %if.then.319
  %210 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common330 = bitcast %union.tree_node* %210 to %struct.tree_common*
  %type331 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common330, i32 0, i32 1
  %211 = load %union.tree_node*, %union.tree_node** %type331, align 8
  %212 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl332 = bitcast %union.tree_node* %212 to %struct.tree_decl*
  %initial333 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl332, i32 0, i32 12
  store %union.tree_node* %211, %union.tree_node** %initial333, align 8
  %213 = load i32, i32* @target_flags, align 4
  %and = and i32 %213, 33554432
  %tobool334 = icmp ne i32 %and, 0
  br i1 %tobool334, label %if.end.381, label %land.lhs.true.335

land.lhs.true.335:                                ; preds = %if.then.329
  %214 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common336 = bitcast %union.tree_node* %214 to %struct.tree_common*
  %type337 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common336, i32 0, i32 1
  %215 = load %union.tree_node*, %union.tree_node** %type337, align 8
  %common338 = bitcast %union.tree_node* %215 to %struct.tree_common*
  %code339 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common338, i32 0, i32 2
  %bf.load340 = load i32, i32* %code339, align 8
  %bf.clear341 = and i32 %bf.load340, 255
  %cmp342 = icmp eq i32 %bf.clear341, 6
  br i1 %cmp342, label %land.lhs.true.367, label %lor.lhs.false.343

lor.lhs.false.343:                                ; preds = %land.lhs.true.335
  %216 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common344 = bitcast %union.tree_node* %216 to %struct.tree_common*
  %type345 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common344, i32 0, i32 1
  %217 = load %union.tree_node*, %union.tree_node** %type345, align 8
  %common346 = bitcast %union.tree_node* %217 to %struct.tree_common*
  %code347 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common346, i32 0, i32 2
  %bf.load348 = load i32, i32* %code347, align 8
  %bf.clear349 = and i32 %bf.load348, 255
  %cmp350 = icmp eq i32 %bf.clear349, 10
  br i1 %cmp350, label %land.lhs.true.367, label %lor.lhs.false.351

lor.lhs.false.351:                                ; preds = %lor.lhs.false.343
  %218 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common352 = bitcast %union.tree_node* %218 to %struct.tree_common*
  %type353 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common352, i32 0, i32 1
  %219 = load %union.tree_node*, %union.tree_node** %type353, align 8
  %common354 = bitcast %union.tree_node* %219 to %struct.tree_common*
  %code355 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common354, i32 0, i32 2
  %bf.load356 = load i32, i32* %code355, align 8
  %bf.clear357 = and i32 %bf.load356, 255
  %cmp358 = icmp eq i32 %bf.clear357, 11
  br i1 %cmp358, label %land.lhs.true.367, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %lor.lhs.false.351
  %220 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common360 = bitcast %union.tree_node* %220 to %struct.tree_common*
  %type361 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common360, i32 0, i32 1
  %221 = load %union.tree_node*, %union.tree_node** %type361, align 8
  %common362 = bitcast %union.tree_node* %221 to %struct.tree_common*
  %code363 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common362, i32 0, i32 2
  %bf.load364 = load i32, i32* %code363, align 8
  %bf.clear365 = and i32 %bf.load364, 255
  %cmp366 = icmp eq i32 %bf.clear365, 12
  br i1 %cmp366, label %land.lhs.true.367, label %if.end.381

land.lhs.true.367:                                ; preds = %lor.lhs.false.359, %lor.lhs.false.351, %lor.lhs.false.343, %land.lhs.true.335
  %222 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common368 = bitcast %union.tree_node* %222 to %struct.tree_common*
  %type369 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common368, i32 0, i32 1
  %223 = load %union.tree_node*, %union.tree_node** %type369, align 8
  %type370 = bitcast %union.tree_node* %223 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type370, i32 0, i32 6
  %bf.load371 = load i32, i32* %precision, align 4
  %bf.clear372 = and i32 %bf.load371, 511
  %224 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %type373 = bitcast %union.tree_node* %224 to %struct.tree_type*
  %precision374 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type373, i32 0, i32 6
  %bf.load375 = load i32, i32* %precision374, align 4
  %bf.clear376 = and i32 %bf.load375, 511
  %cmp377 = icmp slt i32 %bf.clear372, %bf.clear376
  br i1 %cmp377, label %if.then.378, label %if.end.381

if.then.378:                                      ; preds = %land.lhs.true.367
  %225 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %226 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl379 = bitcast %union.tree_node* %226 to %struct.tree_decl*
  %initial380 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl379, i32 0, i32 12
  store %union.tree_node* %225, %union.tree_node** %initial380, align 8
  br label %if.end.381

if.end.381:                                       ; preds = %if.then.378, %land.lhs.true.367, %lor.lhs.false.359, %if.then.329
  %227 = load i32, i32* @pedantic, align 4
  %tobool382 = icmp ne i32 %227, 0
  br i1 %tobool382, label %if.then.383, label %if.end.386

if.then.383:                                      ; preds = %if.end.381
  %228 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl384 = bitcast %union.tree_node* %228 to %struct.tree_decl*
  %name385 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl384, i32 0, i32 8
  %229 = load %union.tree_node*, %union.tree_node** %name385, align 8
  %identifier = bitcast %union.tree_node* %229 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %230 = load i8*, i8** %str, align 8
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.249, i32 0, i32 0), i8* %230)
  %231 = load i8*, i8** @current_function_prototype_file, align 8
  %232 = load i32, i32* @current_function_prototype_line, align 4
  call void (i8*, i32, i8*, ...) @warning_with_file_and_line(i8* %231, i32 %232, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.248, i32 0, i32 0))
  br label %if.end.386

if.end.386:                                       ; preds = %if.then.383, %if.end.381
  br label %if.end.408

if.else.387:                                      ; preds = %if.then.319
  %233 = load i32, i32* @flag_traditional, align 4
  %tobool388 = icmp ne i32 %233, 0
  br i1 %tobool388, label %land.lhs.true.389, label %if.then.401

land.lhs.true.389:                                ; preds = %if.else.387
  %234 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common390 = bitcast %union.tree_node* %234 to %struct.tree_common*
  %type391 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common390, i32 0, i32 1
  %235 = load %union.tree_node*, %union.tree_node** %type391, align 8
  %type392 = bitcast %union.tree_node* %235 to %struct.tree_type*
  %main_variant393 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type392, i32 0, i32 15
  %236 = load %union.tree_node*, %union.tree_node** %main_variant393, align 8
  %237 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp394 = icmp eq %union.tree_node* %236, %237
  br i1 %cmp394, label %land.lhs.true.395, label %if.then.401

land.lhs.true.395:                                ; preds = %land.lhs.true.389
  %238 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %list396 = bitcast %union.tree_node* %238 to %struct.tree_list*
  %value397 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list396, i32 0, i32 2
  %239 = load %union.tree_node*, %union.tree_node** %value397, align 8
  %type398 = bitcast %union.tree_node* %239 to %struct.tree_type*
  %main_variant399 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type398, i32 0, i32 15
  %240 = load %union.tree_node*, %union.tree_node** %main_variant399, align 8
  %241 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 6), align 8
  %cmp400 = icmp eq %union.tree_node* %240, %241
  br i1 %cmp400, label %if.end.407, label %if.then.401

if.then.401:                                      ; preds = %land.lhs.true.395, %land.lhs.true.389, %if.else.387
  %242 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl402 = bitcast %union.tree_node* %242 to %struct.tree_decl*
  %name403 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl402, i32 0, i32 8
  %243 = load %union.tree_node*, %union.tree_node** %name403, align 8
  %identifier404 = bitcast %union.tree_node* %243 to %struct.tree_identifier*
  %id405 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier404, i32 0, i32 1
  %str406 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id405, i32 0, i32 1
  %244 = load i8*, i8** %str406, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.250, i32 0, i32 0), i8* %244)
  %245 = load i8*, i8** @current_function_prototype_file, align 8
  %246 = load i32, i32* @current_function_prototype_line, align 4
  call void (i8*, i32, i8*, ...) @error_with_file_and_line(i8* %245, i32 %246, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.248, i32 0, i32 0))
  br label %if.end.407

if.end.407:                                       ; preds = %if.then.401, %land.lhs.true.395
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.386
  br label %if.end.409

if.end.409:                                       ; preds = %if.end.408, %if.end.308
  br label %for.inc.410

for.inc.410:                                      ; preds = %if.end.409
  %247 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common411 = bitcast %union.tree_node* %247 to %struct.tree_common*
  %chain412 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common411, i32 0, i32 0
  %248 = load %union.tree_node*, %union.tree_node** %chain412, align 8
  store %union.tree_node* %248, %union.tree_node** %parm, align 8
  %249 = load %union.tree_node*, %union.tree_node** %type283, align 8
  %common413 = bitcast %union.tree_node* %249 to %struct.tree_common*
  %chain414 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common413, i32 0, i32 0
  %250 = load %union.tree_node*, %union.tree_node** %chain414, align 8
  store %union.tree_node* %250, %union.tree_node** %type283, align 8
  br label %for.cond.290

for.end.415:                                      ; preds = %if.then.307, %lor.end
  %251 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common416 = bitcast %union.tree_node* %251 to %struct.tree_common*
  %type417 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common416, i32 0, i32 1
  %252 = load %union.tree_node*, %union.tree_node** %type417, align 8
  %type418 = bitcast %union.tree_node* %252 to %struct.tree_type*
  %binfo = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type418, i32 0, i32 16
  store %union.tree_node* null, %union.tree_node** %binfo, align 8
  br label %if.end.456

if.else.419:                                      ; preds = %for.end.277
  store %union.tree_node* null, %union.tree_node** %actual, align 8
  store %union.tree_node* null, %union.tree_node** %last420, align 8
  %253 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl422 = bitcast %union.tree_node* %253 to %struct.tree_decl*
  %arguments423 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl422, i32 0, i32 10
  %254 = load %union.tree_node*, %union.tree_node** %arguments423, align 8
  store %union.tree_node* %254, %union.tree_node** %parm, align 8
  br label %for.cond.424

for.cond.424:                                     ; preds = %for.inc.436, %if.else.419
  %255 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool425 = icmp ne %union.tree_node* %255, null
  br i1 %tobool425, label %for.body.426, label %for.end.439

for.body.426:                                     ; preds = %for.cond.424
  %256 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl427 = bitcast %union.tree_node* %256 to %struct.tree_decl*
  %initial428 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl427, i32 0, i32 12
  %257 = load %union.tree_node*, %union.tree_node** %initial428, align 8
  %call429 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %257, %union.tree_node* null)
  store %union.tree_node* %call429, %union.tree_node** %type421, align 8
  %258 = load %union.tree_node*, %union.tree_node** %last420, align 8
  %tobool430 = icmp ne %union.tree_node* %258, null
  br i1 %tobool430, label %if.then.431, label %if.else.434

if.then.431:                                      ; preds = %for.body.426
  %259 = load %union.tree_node*, %union.tree_node** %type421, align 8
  %260 = load %union.tree_node*, %union.tree_node** %last420, align 8
  %common432 = bitcast %union.tree_node* %260 to %struct.tree_common*
  %chain433 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common432, i32 0, i32 0
  store %union.tree_node* %259, %union.tree_node** %chain433, align 8
  br label %if.end.435

if.else.434:                                      ; preds = %for.body.426
  %261 = load %union.tree_node*, %union.tree_node** %type421, align 8
  store %union.tree_node* %261, %union.tree_node** %actual, align 8
  br label %if.end.435

if.end.435:                                       ; preds = %if.else.434, %if.then.431
  %262 = load %union.tree_node*, %union.tree_node** %type421, align 8
  store %union.tree_node* %262, %union.tree_node** %last420, align 8
  br label %for.inc.436

for.inc.436:                                      ; preds = %if.end.435
  %263 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common437 = bitcast %union.tree_node* %263 to %struct.tree_common*
  %chain438 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common437, i32 0, i32 0
  %264 = load %union.tree_node*, %union.tree_node** %chain438, align 8
  store %union.tree_node* %264, %union.tree_node** %parm, align 8
  br label %for.cond.424

for.end.439:                                      ; preds = %for.cond.424
  %265 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %call440 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %265, %union.tree_node* null)
  store %union.tree_node* %call440, %union.tree_node** %type421, align 8
  %266 = load %union.tree_node*, %union.tree_node** %last420, align 8
  %tobool441 = icmp ne %union.tree_node* %266, null
  br i1 %tobool441, label %if.then.442, label %if.else.445

if.then.442:                                      ; preds = %for.end.439
  %267 = load %union.tree_node*, %union.tree_node** %type421, align 8
  %268 = load %union.tree_node*, %union.tree_node** %last420, align 8
  %common443 = bitcast %union.tree_node* %268 to %struct.tree_common*
  %chain444 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common443, i32 0, i32 0
  store %union.tree_node* %267, %union.tree_node** %chain444, align 8
  br label %if.end.446

if.else.445:                                      ; preds = %for.end.439
  %269 = load %union.tree_node*, %union.tree_node** %type421, align 8
  store %union.tree_node* %269, %union.tree_node** %actual, align 8
  br label %if.end.446

if.end.446:                                       ; preds = %if.else.445, %if.then.442
  %270 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common447 = bitcast %union.tree_node* %270 to %struct.tree_common*
  %type448 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common447, i32 0, i32 1
  %271 = load %union.tree_node*, %union.tree_node** %type448, align 8
  %call449 = call %union.tree_node* @build_type_copy(%union.tree_node* %271)
  %272 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common450 = bitcast %union.tree_node* %272 to %struct.tree_common*
  %type451 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common450, i32 0, i32 1
  store %union.tree_node* %call449, %union.tree_node** %type451, align 8
  %273 = load %union.tree_node*, %union.tree_node** %actual, align 8
  %274 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common452 = bitcast %union.tree_node* %274 to %struct.tree_common*
  %type453 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common452, i32 0, i32 1
  %275 = load %union.tree_node*, %union.tree_node** %type453, align 8
  %type454 = bitcast %union.tree_node* %275 to %struct.tree_type*
  %binfo455 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type454, i32 0, i32 16
  store %union.tree_node* %273, %union.tree_node** %binfo455, align 8
  br label %if.end.456

if.end.456:                                       ; preds = %if.end.446, %for.end.415
  %276 = load %union.tree_node*, %union.tree_node** %nonparms, align 8
  %277 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl457 = bitcast %union.tree_node* %277 to %struct.tree_decl*
  %arguments458 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl457, i32 0, i32 10
  %278 = load %union.tree_node*, %union.tree_node** %arguments458, align 8
  %call459 = call %union.tree_node* @chainon(%union.tree_node* %276, %union.tree_node* %278)
  call void @storedecls(%union.tree_node* %call459)
  br label %if.end.460

if.end.460:                                       ; preds = %if.end.456, %for.end.95
  store i32 1, i32* @keep_next_if_subblocks, align 4
  %279 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %280 = load i32, i32* %prototype, align 4
  call void @gen_aux_info_record(%union.tree_node* %279, i32 1, i32 0, i32 %280)
  %281 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %282 = load i8*, i8** @input_filename, align 8
  %283 = load i32, i32* @lineno, align 4
  call void @init_function_start(%union.tree_node* %281, i8* %282, i32 %283)
  %284 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl461 = bitcast %union.tree_node* %284 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl461, i32 0, i32 20
  call void @begin_stmt_tree(%union.tree_node** %saved_tree)
  %285 = load %union.tree_node*, %union.tree_node** %context, align 8
  %tobool462 = icmp ne %union.tree_node* %285, null
  br i1 %tobool462, label %if.then.463, label %if.end.479

if.then.463:                                      ; preds = %if.end.460
  %call464 = call %union.tree_node* @get_pending_sizes()
  %call465 = call %union.tree_node* @nreverse(%union.tree_node* %call464)
  %286 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl466 = bitcast %union.tree_node* %286 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl466, i32 0, i32 24
  %287 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %pending_sizes = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %287, i32 0, i32 1
  store %union.tree_node* %call465, %union.tree_node** %pending_sizes, align 8
  %288 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl467 = bitcast %union.tree_node* %288 to %struct.tree_decl*
  %lang_specific468 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl467, i32 0, i32 24
  %289 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific468, align 8
  %pending_sizes469 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %289, i32 0, i32 1
  %290 = load %union.tree_node*, %union.tree_node** %pending_sizes469, align 8
  store %union.tree_node* %290, %union.tree_node** %t, align 8
  br label %for.cond.470

for.cond.470:                                     ; preds = %for.inc.475, %if.then.463
  %291 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool471 = icmp ne %union.tree_node* %291, null
  br i1 %tobool471, label %for.body.472, label %for.end.478

for.body.472:                                     ; preds = %for.cond.470
  %292 = load %union.tree_node*, %union.tree_node** %context, align 8
  %293 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list473 = bitcast %union.tree_node* %293 to %struct.tree_list*
  %value474 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list473, i32 0, i32 2
  %294 = load %union.tree_node*, %union.tree_node** %value474, align 8
  %exp = bitcast %union.tree_node* %294 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 1
  store %union.tree_node* %292, %union.tree_node** %arrayidx, align 8
  br label %for.inc.475

for.inc.475:                                      ; preds = %for.body.472
  %295 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common476 = bitcast %union.tree_node* %295 to %struct.tree_common*
  %chain477 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common476, i32 0, i32 0
  %296 = load %union.tree_node*, %union.tree_node** %chain477, align 8
  store %union.tree_node* %296, %union.tree_node** %t, align 8
  br label %for.cond.470

for.end.478:                                      ; preds = %for.cond.470
  br label %if.end.479

if.end.479:                                       ; preds = %for.end.478, %if.end.460
  %297 = load %struct.function*, %struct.function** @cfun, align 8
  %x_whole_function_mode_p = getelementptr inbounds %struct.function, %struct.function* %297, i32 0, i32 56
  %298 = bitcast i24* %x_whole_function_mode_p to i32*
  %bf.load480 = load i32, i32* %298, align 8
  %bf.clear481 = and i32 %bf.load480, -262145
  %bf.set482 = or i32 %bf.clear481, 262144
  store i32 %bf.set482, i32* %298, align 8
  store i32 0, i32* @immediate_size_expand, align 4
  %299 = load %struct.function*, %struct.function** @cfun, align 8
  %x_dont_save_pending_sizes_p = getelementptr inbounds %struct.function, %struct.function* %299, i32 0, i32 56
  %300 = bitcast i24* %x_dont_save_pending_sizes_p to i32*
  %bf.load483 = load i32, i32* %300, align 8
  %bf.clear484 = and i32 %bf.load483, -524289
  %bf.set485 = or i32 %bf.clear484, 524288
  store i32 %bf.set485, i32* %300, align 8
  %301 = load i32, i32* %saved_warn_shadow, align 4
  store i32 %301, i32* @warn_shadow, align 4
  ret void
}

declare %union.tree_node* @decl_function_context(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal void @storetags(%union.tree_node* %tags) #0 {
entry:
  %tags.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %tags, %union.tree_node** %tags.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %tags.addr, align 8
  %1 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %tags1 = getelementptr inbounds %struct.binding_level, %struct.binding_level* %1, i32 0, i32 1
  store %union.tree_node* %0, %union.tree_node** %tags1, align 8
  ret void
}

declare void @init_function_start(%union.tree_node*, i8*, i32) #1

declare void @begin_stmt_tree(%union.tree_node**) #1

; Function Attrs: nounwind uwtable
define void @finish_function(i32 %nested, i32 %can_defer_p) #0 {
entry:
  %nested.addr = alloca i32, align 4
  %can_defer_p.addr = alloca i32, align 4
  %fndecl = alloca %union.tree_node*, align 8
  store i32 %nested, i32* %nested.addr, align 4
  store i32 %can_defer_p, i32* %can_defer_p.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  store %union.tree_node* %0, %union.tree_node** %fndecl, align 8
  %call = call %union.tree_node* @poplevel(i32 1, i32 0, i32 1)
  %1 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %2 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 12
  %3 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %block = bitcast %union.tree_node* %3 to %struct.tree_block*
  %supercontext = getelementptr inbounds %struct.tree_block, %struct.tree_block* %block, i32 0, i32 4
  store %union.tree_node* %1, %union.tree_node** %supercontext, align 8
  %4 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %5 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl1 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 11
  %6 = load %union.tree_node*, %union.tree_node** %result, align 8
  %decl2 = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 9
  store %union.tree_node* %4, %union.tree_node** %context, align 8
  %7 = load i32, i32* @flag_traditional, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.function*, %struct.function** @cfun, align 8
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %8, i32 0, i32 56
  %9 = bitcast i24* %calls_setjmp to i32*
  %bf.load = load i32, i32* %9, align 8
  %bf.lshr = lshr i32 %bf.load, 4
  %bf.clear = and i32 %bf.lshr, 1
  %tobool3 = icmp ne i32 %bf.clear, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %10 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl4 = bitcast %union.tree_node* %10 to %struct.tree_decl*
  %initial5 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4, i32 0, i32 12
  %11 = load %union.tree_node*, %union.tree_node** %initial5, align 8
  call void @setjmp_protect(%union.tree_node* %11)
  call void @setjmp_protect_args()
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl6 = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl6, i32 0, i32 8
  %13 = load %union.tree_node*, %union.tree_node** %name, align 8
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp = icmp eq %union.tree_node* %13, %14
  br i1 %cmp, label %land.lhs.true.7, label %if.end.23

land.lhs.true.7:                                  ; preds = %if.end
  %15 = load i32, i32* @flag_hosted, align 4
  %tobool8 = icmp ne i32 %15, 0
  br i1 %tobool8, label %if.then.9, label %if.end.23

if.then.9:                                        ; preds = %land.lhs.true.7
  %16 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common = bitcast %union.tree_node* %16 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8
  %common10 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 1
  %18 = load %union.tree_node*, %union.tree_node** %type11, align 8
  %type12 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type12, i32 0, i32 15
  %19 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i32 0, i64 5), align 8
  %cmp13 = icmp ne %union.tree_node* %19, %20
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %if.then.9
  %21 = load i32, i32* @warn_main, align 4
  %tobool15 = icmp ne i32 %21, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.then.14
  %22 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  call void (%union.tree_node*, i8*, ...) @pedwarn_with_decl(%union.tree_node* %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.233, i32 0, i32 0))
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.16, %if.then.14
  br label %if.end.22

if.else:                                          ; preds = %if.then.9
  %23 = load i32, i32* @flag_isoc99, align 4
  %tobool18 = icmp ne i32 %23, 0
  br i1 %tobool18, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %if.else
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 11), align 8
  %call20 = call %union.tree_node* @c_expand_return(%union.tree_node* %24)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %if.else
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.end.17
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %land.lhs.true.7, %if.end
  call void @finish_fname_decls()
  %25 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl24 = bitcast %union.tree_node* %25 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl24, i32 0, i32 20
  call void @finish_stmt_tree(%union.tree_node** %saved_tree)
  %26 = load i32, i32* @warn_return_type, align 4
  %tobool25 = icmp ne i32 %26, 0
  br i1 %tobool25, label %land.lhs.true.26, label %if.end.59

land.lhs.true.26:                                 ; preds = %if.end.23
  %27 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %common27 = bitcast %union.tree_node* %27 to %struct.tree_common*
  %type28 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common27, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %type28, align 8
  %common29 = bitcast %union.tree_node* %28 to %struct.tree_common*
  %type30 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common29, i32 0, i32 1
  %29 = load %union.tree_node*, %union.tree_node** %type30, align 8
  %common31 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common31, i32 0, i32 2
  %bf.load32 = load i32, i32* %code, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp ne i32 %bf.clear33, 5
  br i1 %cmp34, label %land.lhs.true.35, label %if.end.59

land.lhs.true.35:                                 ; preds = %land.lhs.true.26
  %30 = load i32, i32* @current_function_returns_value, align 4
  %tobool36 = icmp ne i32 %30, 0
  br i1 %tobool36, label %if.end.59, label %land.lhs.true.37

land.lhs.true.37:                                 ; preds = %land.lhs.true.35
  %31 = load i32, i32* @current_function_returns_null, align 4
  %tobool38 = icmp ne i32 %31, 0
  br i1 %tobool38, label %if.end.59, label %land.lhs.true.39

land.lhs.true.39:                                 ; preds = %land.lhs.true.37
  %32 = load i32, i32* @current_function_returns_abnormally, align 4
  %tobool40 = icmp ne i32 %32, 0
  br i1 %tobool40, label %if.end.59, label %land.lhs.true.41

land.lhs.true.41:                                 ; preds = %land.lhs.true.39
  %33 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl42 = bitcast %union.tree_node* %33 to %struct.tree_decl*
  %name43 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl42, i32 0, i32 8
  %34 = load %union.tree_node*, %union.tree_node** %name43, align 8
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp44 = icmp eq %union.tree_node* %34, %35
  br i1 %cmp44, label %if.end.59, label %land.lhs.true.45

land.lhs.true.45:                                 ; preds = %land.lhs.true.41
  %36 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl46 = bitcast %union.tree_node* %36 to %struct.tree_decl*
  %lang_flag_1 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl46, i32 0, i32 5
  %37 = bitcast i48* %lang_flag_1 to i64*
  %bf.load47 = load i64, i64* %37, align 8
  %bf.lshr48 = lshr i64 %bf.load47, 38
  %bf.clear49 = and i64 %bf.lshr48, 1
  %bf.cast = trunc i64 %bf.clear49 to i32
  %tobool50 = icmp ne i32 %bf.cast, 0
  br i1 %tobool50, label %if.end.59, label %land.lhs.true.51

land.lhs.true.51:                                 ; preds = %land.lhs.true.45
  %38 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %decl52 = bitcast %union.tree_node* %38 to %struct.tree_decl*
  %inline_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl52, i32 0, i32 5
  %39 = bitcast i48* %inline_flag to i64*
  %bf.load53 = load i64, i64* %39, align 8
  %bf.lshr54 = lshr i64 %bf.load53, 11
  %bf.clear55 = and i64 %bf.lshr54, 1
  %bf.cast56 = trunc i64 %bf.clear55 to i32
  %tobool57 = icmp ne i32 %bf.cast56, 0
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %land.lhs.true.51
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.251, i32 0, i32 0))
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %land.lhs.true.51, %land.lhs.true.45, %land.lhs.true.41, %land.lhs.true.39, %land.lhs.true.37, %land.lhs.true.35, %land.lhs.true.26, %if.end.23
  %40 = load %struct.function*, %struct.function** @cfun, align 8
  call void @free_after_parsing(%struct.function* %40)
  %41 = load %struct.function*, %struct.function** @cfun, align 8
  call void @free_after_compilation(%struct.function* %41)
  store %struct.function* null, %struct.function** @cfun, align 8
  %42 = load i32, i32* %nested.addr, align 4
  %tobool60 = icmp ne i32 %42, 0
  br i1 %tobool60, label %if.end.62, label %if.then.61

if.then.61:                                       ; preds = %if.end.59
  %43 = load %union.tree_node*, %union.tree_node** %fndecl, align 8
  %44 = load i32, i32* %nested.addr, align 4
  %45 = load i32, i32* %can_defer_p.addr, align 4
  call void @c_expand_body(%union.tree_node* %43, i32 %44, i32 %45)
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.61, %if.end.59
  ret void
}

declare void @setjmp_protect(%union.tree_node*) #1

declare void @setjmp_protect_args() #1

declare %union.tree_node* @c_expand_return(%union.tree_node*) #1

declare void @finish_fname_decls() #1

declare void @finish_stmt_tree(%union.tree_node**) #1

declare void @free_after_parsing(%struct.function*) #1

declare void @free_after_compilation(%struct.function*) #1

; Function Attrs: nounwind uwtable
define internal void @c_expand_body(%union.tree_node* %fndecl, i32 %nested_p, i32 %can_defer_p) #0 {
entry:
  %fndecl.addr = alloca %union.tree_node*, align 8
  %nested_p.addr = alloca i32, align 4
  %can_defer_p.addr = alloca i32, align 4
  %uninlinable = alloca i32, align 4
  %ret_type = alloca %union.tree_node*, align 8
  %size_as_int = alloca i32, align 4
  store %union.tree_node* %fndecl, %union.tree_node** %fndecl.addr, align 8
  store i32 %nested_p, i32* %nested_p.addr, align 4
  store i32 %can_defer_p, i32* %can_defer_p.addr, align 4
  store i32 1, i32* %uninlinable, align 4
  %0 = load i32, i32* @flag_syntax_only, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @flag_inline_trees, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then.2, label %if.end.11

if.then.2:                                        ; preds = %if.end
  call void @timevar_push(i32 12)
  %2 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %call = call i32 @tree_inlinable_function_p(%union.tree_node* %2)
  %tobool3 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool3, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %uninlinable, align 4
  %3 = load i32, i32* %uninlinable, align 4
  %tobool4 = icmp ne i32 %3, 0
  br i1 %tobool4, label %if.end.10, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then.2
  %4 = load i32, i32* %can_defer_p.addr, align 4
  %tobool5 = icmp ne i32 %4, 0
  br i1 %tobool5, label %land.lhs.true.6, label %if.end.10

land.lhs.true.6:                                  ; preds = %land.lhs.true
  %5 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %call7 = call i32 @defer_fn(%union.tree_node* %5)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %land.lhs.true.6
  %6 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8
  %deferred_inline_function = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %6, i32 0, i32 17
  %7 = load void (%union.tree_node*)*, void (%union.tree_node*)** %deferred_inline_function, align 8
  %8 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void %7(%union.tree_node* %8)
  call void @timevar_pop(i32 12)
  br label %return

if.end.10:                                        ; preds = %land.lhs.true.6, %land.lhs.true, %if.then.2
  %9 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @optimize_inline_calls(%union.tree_node* %9)
  call void @timevar_pop(i32 12)
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  call void @timevar_push(i32 10)
  %10 = load i32, i32* %nested_p.addr, align 4
  %tobool12 = icmp ne i32 %10, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.11
  %11 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl = bitcast %union.tree_node* %11 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 24
  %12 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %pending_sizes = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %12, i32 0, i32 1
  %13 = load %union.tree_node*, %union.tree_node** %pending_sizes, align 8
  call void @expand_pending_sizes(%union.tree_node* %13)
  call void @push_function_context()
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.end.11
  %14 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  store %union.tree_node* %14, %union.tree_node** @current_function_decl, align 8
  %15 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl15 = bitcast %union.tree_node* %15 to %struct.tree_decl*
  %filename = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl15, i32 0, i32 1
  %16 = load i8*, i8** %filename, align 8
  store i8* %16, i8** @input_filename, align 8
  %17 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %18 = load i8*, i8** @input_filename, align 8
  %19 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl16 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %linenum = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl16, i32 0, i32 2
  %20 = load i32, i32* %linenum, align 4
  call void @init_function_start(%union.tree_node* %17, i8* %18, i32 %20)
  %21 = load %struct.function*, %struct.function** @cfun, align 8
  %x_whole_function_mode_p = getelementptr inbounds %struct.function, %struct.function* %21, i32 0, i32 56
  %22 = bitcast i24* %x_whole_function_mode_p to i32*
  %bf.load = load i32, i32* %22, align 8
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, 262144
  store i32 %bf.set, i32* %22, align 8
  store i32 0, i32* @immediate_size_expand, align 4
  %23 = load %struct.function*, %struct.function** @cfun, align 8
  %x_dont_save_pending_sizes_p = getelementptr inbounds %struct.function, %struct.function* %23, i32 0, i32 56
  %24 = bitcast i24* %x_dont_save_pending_sizes_p to i32*
  %bf.load17 = load i32, i32* %24, align 8
  %bf.clear18 = and i32 %bf.load17, -524289
  %bf.set19 = or i32 %bf.clear18, 524288
  store i32 %bf.set19, i32* %24, align 8
  %25 = load i32, i32* @c_function_varargs, align 4
  %tobool20 = icmp ne i32 %25, 0
  br i1 %tobool20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.14
  call void @mark_varargs()
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.21, %if.end.14
  %26 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @expand_function_start(%union.tree_node* %26, i32 0)
  %27 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl23 = bitcast %union.tree_node* %27 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl23, i32 0, i32 8
  %28 = load %union.tree_node*, %union.tree_node** %name, align 8
  %tobool24 = icmp ne %union.tree_node* %28, null
  br i1 %tobool24, label %land.lhs.true.25, label %if.end.32

land.lhs.true.25:                                 ; preds = %if.end.22
  %29 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl26 = bitcast %union.tree_node* %29 to %struct.tree_decl*
  %name27 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl26, i32 0, i32 8
  %30 = load %union.tree_node*, %union.tree_node** %name27, align 8
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 50), align 8
  %cmp = icmp eq %union.tree_node* %30, %31
  br i1 %cmp, label %land.lhs.true.28, label %if.end.32

land.lhs.true.28:                                 ; preds = %land.lhs.true.25
  %32 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl29 = bitcast %union.tree_node* %32 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl29, i32 0, i32 9
  %33 = load %union.tree_node*, %union.tree_node** %context, align 8
  %cmp30 = icmp eq %union.tree_node* %33, null
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.28
  call void @expand_main_function()
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %land.lhs.true.28, %land.lhs.true.25, %if.end.22
  %34 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl33 = bitcast %union.tree_node* %34 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl33, i32 0, i32 20
  %35 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8
  call void @expand_stmt(%union.tree_node* %35)
  %36 = load i32, i32* %uninlinable, align 4
  %tobool34 = icmp ne i32 %36, 0
  br i1 %tobool34, label %if.then.35, label %if.end.38

if.then.35:                                       ; preds = %if.end.32
  %37 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl36 = bitcast %union.tree_node* %37 to %struct.tree_decl*
  %saved_tree37 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl36, i32 0, i32 20
  store %union.tree_node* null, %union.tree_node** %saved_tree37, align 8
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.35, %if.end.32
  store i32 1, i32* @immediate_size_expand, align 4
  %38 = load void ()*, void ()** @lang_expand_function_end, align 8
  %tobool39 = icmp ne void ()* %38, null
  br i1 %tobool39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.end.38
  %39 = load void ()*, void ()** @lang_expand_function_end, align 8
  call void %39()
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %if.end.38
  %40 = load i8*, i8** @input_filename, align 8
  %41 = load i32, i32* @lineno, align 4
  call void @expand_function_end(i8* %40, i32 %41, i32 0)
  %42 = load i32, i32* %nested_p.addr, align 4
  %tobool42 = icmp ne i32 %42, 0
  br i1 %tobool42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.41
  call void @ggc_push_context()
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.43, %if.end.41
  %43 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @rest_of_compilation(%union.tree_node* %43)
  %44 = load i32, i32* %nested_p.addr, align 4
  %tobool45 = icmp ne i32 %44, 0
  br i1 %tobool45, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.44
  call void @ggc_pop_context()
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.46, %if.end.44
  %45 = load i32, i32* @extra_warnings, align 4
  %tobool48 = icmp ne i32 %45, 0
  br i1 %tobool48, label %land.lhs.true.49, label %if.end.54

land.lhs.true.49:                                 ; preds = %if.end.47
  %46 = load i32, i32* @current_function_returns_value, align 4
  %tobool50 = icmp ne i32 %46, 0
  br i1 %tobool50, label %land.lhs.true.51, label %if.end.54

land.lhs.true.51:                                 ; preds = %land.lhs.true.49
  %47 = load i32, i32* @current_function_returns_null, align 4
  %tobool52 = icmp ne i32 %47, 0
  br i1 %tobool52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %land.lhs.true.51
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.354, i32 0, i32 0))
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %land.lhs.true.51, %land.lhs.true.49, %if.end.47
  %48 = load i32, i32* @warn_larger_than, align 4
  %tobool55 = icmp ne i32 %48, 0
  br i1 %tobool55, label %land.lhs.true.56, label %if.end.97

land.lhs.true.56:                                 ; preds = %if.end.54
  %49 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl57 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl57, i32 0, i32 5
  %50 = bitcast i48* %external_flag to i64*
  %bf.load58 = load i64, i64* %50, align 8
  %bf.lshr = lshr i64 %bf.load58, 8
  %bf.clear59 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear59 to i32
  %tobool60 = icmp ne i32 %bf.cast, 0
  br i1 %tobool60, label %if.end.97, label %land.lhs.true.61

land.lhs.true.61:                                 ; preds = %land.lhs.true.56
  %51 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %common = bitcast %union.tree_node* %51 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8
  %tobool62 = icmp ne %union.tree_node* %52, null
  br i1 %tobool62, label %if.then.63, label %if.end.97

if.then.63:                                       ; preds = %land.lhs.true.61
  %53 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %common64 = bitcast %union.tree_node* %53 to %struct.tree_common*
  %type65 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common64, i32 0, i32 1
  %54 = load %union.tree_node*, %union.tree_node** %type65, align 8
  %common66 = bitcast %union.tree_node* %54 to %struct.tree_common*
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common66, i32 0, i32 1
  %55 = load %union.tree_node*, %union.tree_node** %type67, align 8
  store %union.tree_node* %55, %union.tree_node** %ret_type, align 8
  %56 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %tobool68 = icmp ne %union.tree_node* %56, null
  br i1 %tobool68, label %land.lhs.true.69, label %if.end.96

land.lhs.true.69:                                 ; preds = %if.then.63
  %57 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %type70 = bitcast %union.tree_node* %57 to %struct.tree_type*
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type70, i32 0, i32 3
  %58 = load %union.tree_node*, %union.tree_node** %size_unit, align 8
  %tobool71 = icmp ne %union.tree_node* %58, null
  br i1 %tobool71, label %land.lhs.true.72, label %if.end.96

land.lhs.true.72:                                 ; preds = %land.lhs.true.69
  %59 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %type73 = bitcast %union.tree_node* %59 to %struct.tree_type*
  %size_unit74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type73, i32 0, i32 3
  %60 = load %union.tree_node*, %union.tree_node** %size_unit74, align 8
  %common75 = bitcast %union.tree_node* %60 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common75, i32 0, i32 2
  %bf.load76 = load i32, i32* %code, align 8
  %bf.clear77 = and i32 %bf.load76, 255
  %cmp78 = icmp eq i32 %bf.clear77, 25
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.96

land.lhs.true.79:                                 ; preds = %land.lhs.true.72
  %61 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %type80 = bitcast %union.tree_node* %61 to %struct.tree_type*
  %size_unit81 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type80, i32 0, i32 3
  %62 = load %union.tree_node*, %union.tree_node** %size_unit81, align 8
  %63 = load i64, i64* @larger_than_size, align 8
  %call82 = call i32 @compare_tree_int(%union.tree_node* %62, i64 %63)
  %cmp83 = icmp slt i32 0, %call82
  br i1 %cmp83, label %if.then.84, label %if.end.96

if.then.84:                                       ; preds = %land.lhs.true.79
  %64 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %type85 = bitcast %union.tree_node* %64 to %struct.tree_type*
  %size_unit86 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i32 0, i32 3
  %65 = load %union.tree_node*, %union.tree_node** %size_unit86, align 8
  %int_cst = bitcast %union.tree_node* %65 to %struct.tree_int_cst*
  %int_cst87 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 2
  %low = getelementptr inbounds %struct.anon, %struct.anon* %int_cst87, i32 0, i32 0
  %66 = load i64, i64* %low, align 8
  %conv = trunc i64 %66 to i32
  store i32 %conv, i32* %size_as_int, align 4
  %67 = load %union.tree_node*, %union.tree_node** %ret_type, align 8
  %type88 = bitcast %union.tree_node* %67 to %struct.tree_type*
  %size_unit89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i32 0, i32 3
  %68 = load %union.tree_node*, %union.tree_node** %size_unit89, align 8
  %69 = load i32, i32* %size_as_int, align 4
  %conv90 = zext i32 %69 to i64
  %call91 = call i32 @compare_tree_int(%union.tree_node* %68, i64 %conv90)
  %cmp92 = icmp eq i32 %call91, 0
  br i1 %cmp92, label %if.then.94, label %if.else

if.then.94:                                       ; preds = %if.then.84
  %70 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %71 = load i32, i32* %size_as_int, align 4
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %70, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.355, i32 0, i32 0), i32 %71)
  br label %if.end.95

if.else:                                          ; preds = %if.then.84
  %72 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %73 = load i64, i64* @larger_than_size, align 8
  call void (%union.tree_node*, i8*, ...) @warning_with_decl(%union.tree_node* %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.356, i32 0, i32 0), i64 %73)
  br label %if.end.95

if.end.95:                                        ; preds = %if.else, %if.then.94
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %land.lhs.true.79, %land.lhs.true.72, %land.lhs.true.69, %if.then.63
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %land.lhs.true.61, %land.lhs.true.56, %if.end.54
  %74 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl98 = bitcast %union.tree_node* %74 to %struct.tree_decl*
  %u2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl98, i32 0, i32 19
  %f = bitcast %union.anon.1* %u2 to %struct.function**
  %75 = load %struct.function*, %struct.function** %f, align 8
  %cmp99 = icmp eq %struct.function* %75, null
  br i1 %cmp99, label %land.lhs.true.101, label %if.end.114

land.lhs.true.101:                                ; preds = %if.end.97
  %76 = load i32, i32* %nested_p.addr, align 4
  %tobool102 = icmp ne i32 %76, 0
  br i1 %tobool102, label %if.end.114, label %land.lhs.true.103

land.lhs.true.103:                                ; preds = %land.lhs.true.101
  %77 = load i32, i32* @flag_inline_trees, align 4
  %tobool104 = icmp ne i32 %77, 0
  br i1 %tobool104, label %if.end.114, label %if.then.105

if.then.105:                                      ; preds = %land.lhs.true.103
  %78 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl106 = bitcast %union.tree_node* %78 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl106, i32 0, i32 12
  %79 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp107 = icmp ne %union.tree_node* %79, null
  br i1 %cmp107, label %if.then.109, label %if.end.112

if.then.109:                                      ; preds = %if.then.105
  %80 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %81 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl110 = bitcast %union.tree_node* %81 to %struct.tree_decl*
  %initial111 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl110, i32 0, i32 12
  store %union.tree_node* %80, %union.tree_node** %initial111, align 8
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.109, %if.then.105
  %82 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl113 = bitcast %union.tree_node* %82 to %struct.tree_decl*
  %arguments = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl113, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.112, %land.lhs.true.103, %land.lhs.true.101, %if.end.97
  %83 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl115 = bitcast %union.tree_node* %83 to %struct.tree_decl*
  %static_ctor_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl115, i32 0, i32 5
  %84 = bitcast i48* %static_ctor_flag to i64*
  %bf.load116 = load i64, i64* %84, align 8
  %bf.lshr117 = lshr i64 %bf.load116, 20
  %bf.clear118 = and i64 %bf.lshr117, 1
  %bf.cast119 = trunc i64 %bf.clear118 to i32
  %tobool120 = icmp ne i32 %bf.cast119, 0
  br i1 %tobool120, label %if.then.121, label %if.end.133

if.then.121:                                      ; preds = %if.end.114
  %85 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 14), align 1
  %tobool122 = trunc i8 %85 to i1
  br i1 %tobool122, label %if.then.123, label %if.else.130

if.then.123:                                      ; preds = %if.then.121
  %86 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 0, i32 13), align 8
  %87 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl124 = bitcast %union.tree_node* %87 to %struct.tree_decl*
  %rtl = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl124, i32 0, i32 17
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8
  %tobool125 = icmp ne %struct.rtx_def* %88, null
  br i1 %tobool125, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.123
  %89 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl126 = bitcast %union.tree_node* %89 to %struct.tree_decl*
  %rtl127 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl126, i32 0, i32 17
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtl127, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.123
  %91 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @make_decl_rtl(%union.tree_node* %91, i8* null)
  %92 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl128 = bitcast %union.tree_node* %92 to %struct.tree_decl*
  %rtl129 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl128, i32 0, i32 17
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtl129, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %90, %cond.true ], [ %93, %cond.false ]
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void %86(%struct.rtx_def* %94, i32 65535)
  br label %if.end.132

if.else.130:                                      ; preds = %if.then.121
  %95 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %96 = load %union.tree_node*, %union.tree_node** @static_ctors, align 8
  %call131 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %95, %union.tree_node* %96)
  store %union.tree_node* %call131, %union.tree_node** @static_ctors, align 8
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.130, %cond.end
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %if.end.114
  %97 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl134 = bitcast %union.tree_node* %97 to %struct.tree_decl*
  %static_dtor_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl134, i32 0, i32 5
  %98 = bitcast i48* %static_dtor_flag to i64*
  %bf.load135 = load i64, i64* %98, align 8
  %bf.lshr136 = lshr i64 %bf.load135, 21
  %bf.clear137 = and i64 %bf.lshr136, 1
  %bf.cast138 = trunc i64 %bf.clear137 to i32
  %tobool139 = icmp ne i32 %bf.cast138, 0
  br i1 %tobool139, label %if.then.140, label %if.end.160

if.then.140:                                      ; preds = %if.end.133
  %99 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 14), align 1
  %tobool141 = trunc i8 %99 to i1
  br i1 %tobool141, label %if.then.142, label %if.else.157

if.then.142:                                      ; preds = %if.then.140
  %100 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 0, i32 14), align 8
  %101 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl143 = bitcast %union.tree_node* %101 to %struct.tree_decl*
  %rtl144 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl143, i32 0, i32 17
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtl144, align 8
  %tobool145 = icmp ne %struct.rtx_def* %102, null
  br i1 %tobool145, label %cond.true.146, label %cond.false.149

cond.true.146:                                    ; preds = %if.then.142
  %103 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl147 = bitcast %union.tree_node* %103 to %struct.tree_decl*
  %rtl148 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl147, i32 0, i32 17
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtl148, align 8
  br label %cond.end.152

cond.false.149:                                   ; preds = %if.then.142
  %105 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @make_decl_rtl(%union.tree_node* %105, i8* null)
  %106 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl150 = bitcast %union.tree_node* %106 to %struct.tree_decl*
  %rtl151 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl150, i32 0, i32 17
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtl151, align 8
  br label %cond.end.152

cond.end.152:                                     ; preds = %cond.false.149, %cond.true.146
  %cond153 = phi %struct.rtx_def* [ %104, %cond.true.146 ], [ %107, %cond.false.149 ]
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond153, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx156, align 8
  call void %100(%struct.rtx_def* %108, i32 65535)
  br label %if.end.159

if.else.157:                                      ; preds = %if.then.140
  %109 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %110 = load %union.tree_node*, %union.tree_node** @static_dtors, align 8
  %call158 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %109, %union.tree_node* %110)
  store %union.tree_node* %call158, %union.tree_node** @static_dtors, align 8
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.157, %cond.end.152
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159, %if.end.133
  %111 = load i32, i32* %nested_p.addr, align 4
  %tobool161 = icmp ne i32 %111, 0
  br i1 %tobool161, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.160
  call void @pop_function_context()
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.162, %if.end.160
  call void @timevar_pop(i32 10)
  br label %return

return:                                           ; preds = %if.end.163, %if.then.9, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_expand_deferred_function(%union.tree_node* %fndecl) #0 {
entry:
  %fndecl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %fndecl, %union.tree_node** %fndecl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %inline_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %1 = bitcast i48* %inline_flag to i64*
  %bf.load = load i64, i64* %1, align 8
  %bf.lshr = lshr i64 %bf.load, 11
  %bf.clear = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  %decl1 = bitcast %union.tree_node* %2 to %struct.tree_decl*
  %result = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 11
  %3 = load %union.tree_node*, %union.tree_node** %result, align 8
  %tobool2 = icmp ne %union.tree_node* %3, null
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %fndecl.addr, align 8
  call void @c_expand_body(%union.tree_node* %4, i32 0, i32 0)
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @check_for_loop_decls() #0 {
entry:
  %t = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  %0 = load i32, i32* @flag_isoc99, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.252, i32 0, i32 0))
  br label %for.end.56

if.end:                                           ; preds = %entry
  %call = call %union.tree_node* @gettags()
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool1 = icmp ne %union.tree_node* %1, null
  br i1 %tobool1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  %cmp = icmp ne %union.tree_node* %3, null
  br i1 %cmp, label %if.then.2, label %if.end.24

if.then.2:                                        ; preds = %for.body
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list3 = bitcast %union.tree_node* %4 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list3, i32 0, i32 2
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8
  %common = bitcast %union.tree_node* %5 to %struct.tree_common*
  %code4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code4, align 8
  %bf.clear = and i32 %bf.load, 255
  store i32 %bf.clear, i32* %code, align 4
  %6 = load i32, i32* %code, align 4
  %cmp5 = icmp eq i32 %6, 20
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then.2
  %7 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list7 = bitcast %union.tree_node* %7 to %struct.tree_list*
  %purpose8 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list7, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %purpose8, align 8
  %identifier = bitcast %union.tree_node* %8 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %9 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.253, i32 0, i32 0), i8* %9)
  br label %if.end.23

if.else:                                          ; preds = %if.then.2
  %10 = load i32, i32* %code, align 4
  %cmp9 = icmp eq i32 %10, 21
  br i1 %cmp9, label %if.then.10, label %if.else.16

if.then.10:                                       ; preds = %if.else
  %11 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list11 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %purpose12 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list11, i32 0, i32 1
  %12 = load %union.tree_node*, %union.tree_node** %purpose12, align 8
  %identifier13 = bitcast %union.tree_node* %12 to %struct.tree_identifier*
  %id14 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier13, i32 0, i32 1
  %str15 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id14, i32 0, i32 1
  %13 = load i8*, i8** %str15, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.254, i32 0, i32 0), i8* %13)
  br label %if.end.22

if.else.16:                                       ; preds = %if.else
  %14 = load %union.tree_node*, %union.tree_node** %t, align 8
  %list17 = bitcast %union.tree_node* %14 to %struct.tree_list*
  %purpose18 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list17, i32 0, i32 1
  %15 = load %union.tree_node*, %union.tree_node** %purpose18, align 8
  %identifier19 = bitcast %union.tree_node* %15 to %struct.tree_identifier*
  %id20 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier19, i32 0, i32 1
  %str21 = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id20, i32 0, i32 1
  %16 = load i8*, i8** %str21, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.255, i32 0, i32 0), i8* %16)
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.16, %if.then.10
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.6
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.24
  %17 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common25 = bitcast %union.tree_node* %17 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common25, i32 0, i32 0
  %18 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %18, %union.tree_node** %t, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call26 = call %union.tree_node* @getdecls()
  store %union.tree_node* %call26, %union.tree_node** %t, align 8
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.53, %for.end
  %19 = load %union.tree_node*, %union.tree_node** %t, align 8
  %tobool28 = icmp ne %union.tree_node* %19, null
  br i1 %tobool28, label %for.body.29, label %for.end.56

for.body.29:                                      ; preds = %for.cond.27
  %20 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common30 = bitcast %union.tree_node* %20 to %struct.tree_common*
  %code31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common30, i32 0, i32 2
  %bf.load32 = load i32, i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp ne i32 %bf.clear33, 34
  br i1 %cmp34, label %land.lhs.true, label %if.else.37

land.lhs.true:                                    ; preds = %for.body.29
  %21 = load %union.tree_node*, %union.tree_node** %t, align 8
  %decl = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %22 = load %union.tree_node*, %union.tree_node** %name, align 8
  %tobool35 = icmp ne %union.tree_node* %22, null
  br i1 %tobool35, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %land.lhs.true
  %23 = load %union.tree_node*, %union.tree_node** %t, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %23, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.256, i32 0, i32 0))
  br label %if.end.52

if.else.37:                                       ; preds = %land.lhs.true, %for.body.29
  %24 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common38 = bitcast %union.tree_node* %24 to %struct.tree_common*
  %static_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common38, i32 0, i32 2
  %bf.load39 = load i32, i32* %static_flag, align 8
  %bf.lshr = lshr i32 %bf.load39, 18
  %bf.clear40 = and i32 %bf.lshr, 1
  %tobool41 = icmp ne i32 %bf.clear40, 0
  br i1 %tobool41, label %if.then.42, label %if.else.43

if.then.42:                                       ; preds = %if.else.37
  %25 = load %union.tree_node*, %union.tree_node** %t, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %25, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.257, i32 0, i32 0))
  br label %if.end.51

if.else.43:                                       ; preds = %if.else.37
  %26 = load %union.tree_node*, %union.tree_node** %t, align 8
  %decl44 = bitcast %union.tree_node* %26 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl44, i32 0, i32 5
  %27 = bitcast i48* %external_flag to i64*
  %bf.load45 = load i64, i64* %27, align 8
  %bf.lshr46 = lshr i64 %bf.load45, 8
  %bf.clear47 = and i64 %bf.lshr46, 1
  %bf.cast = trunc i64 %bf.clear47 to i32
  %tobool48 = icmp ne i32 %bf.cast, 0
  br i1 %tobool48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.else.43
  %28 = load %union.tree_node*, %union.tree_node** %t, align 8
  call void (%union.tree_node*, i8*, ...) @error_with_decl(%union.tree_node* %28, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.258, i32 0, i32 0))
  br label %if.end.50

if.end.50:                                        ; preds = %if.then.49, %if.else.43
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %if.then.42
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %if.then.36
  br label %for.inc.53

for.inc.53:                                       ; preds = %if.end.52
  %29 = load %union.tree_node*, %union.tree_node** %t, align 8
  %common54 = bitcast %union.tree_node* %29 to %struct.tree_common*
  %chain55 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common54, i32 0, i32 0
  %30 = load %union.tree_node*, %union.tree_node** %chain55, align 8
  store %union.tree_node* %30, %union.tree_node** %t, align 8
  br label %for.cond.27

for.end.56:                                       ; preds = %if.then, %for.cond.27
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_c_function_context(%struct.function* %f) #0 {
entry:
  %f.addr = alloca %struct.function*, align 8
  %p = alloca %struct.c_language_function*, align 8
  store %struct.function* %f, %struct.function** %f.addr, align 8
  %call = call noalias i8* @xmalloc(i64 88)
  %0 = bitcast i8* %call to %struct.c_language_function*
  store %struct.c_language_function* %0, %struct.c_language_function** %p, align 8
  %1 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %2 = bitcast %struct.c_language_function* %1 to %struct.language_function*
  %3 = load %struct.function*, %struct.function** %f.addr, align 8
  %language = getelementptr inbounds %struct.function, %struct.function* %3, i32 0, i32 54
  store %struct.language_function* %2, %struct.language_function** %language, align 8
  %4 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %base = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %4, i32 0, i32 0
  %x_stmt_tree = getelementptr inbounds %struct.language_function, %struct.language_function* %base, i32 0, i32 0
  %5 = bitcast %struct.stmt_tree_s* %x_stmt_tree to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i64 32, i32 8, i1 false)
  %6 = load %union.tree_node*, %union.tree_node** @c_scope_stmt_stack, align 8
  %7 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %base1 = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %7, i32 0, i32 0
  %x_scope_stmt_stack = getelementptr inbounds %struct.language_function, %struct.language_function* %base1, i32 0, i32 1
  store %union.tree_node* %6, %union.tree_node** %x_scope_stmt_stack, align 8
  %8 = load %union.tree_node*, %union.tree_node** @named_labels, align 8
  %9 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %named_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %9, i32 0, i32 1
  store %union.tree_node* %8, %union.tree_node** %named_labels, align 8
  %10 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  %11 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %shadowed_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %11, i32 0, i32 2
  store %union.tree_node* %10, %union.tree_node** %shadowed_labels, align 8
  %12 = load i32, i32* @current_function_returns_value, align 4
  %13 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_value = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %13, i32 0, i32 3
  store i32 %12, i32* %returns_value, align 4
  %14 = load i32, i32* @current_function_returns_null, align 4
  %15 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_null = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %15, i32 0, i32 4
  store i32 %14, i32* %returns_null, align 4
  %16 = load i32, i32* @current_function_returns_abnormally, align 4
  %17 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_abnormally = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %17, i32 0, i32 5
  store i32 %16, i32* %returns_abnormally, align 4
  %18 = load i32, i32* @warn_about_return_type, align 4
  %19 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %warn_about_return_type = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %19, i32 0, i32 6
  store i32 %18, i32* %warn_about_return_type, align 4
  %20 = load i32, i32* @current_extern_inline, align 4
  %21 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %extern_inline = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %21, i32 0, i32 7
  store i32 %20, i32* %extern_inline, align 4
  %22 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %23 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %binding_level = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %23, i32 0, i32 8
  store %struct.binding_level* %22, %struct.binding_level** %binding_level, align 8
  ret void
}

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define void @pop_c_function_context(%struct.function* %f) #0 {
entry:
  %f.addr = alloca %struct.function*, align 8
  %p = alloca %struct.c_language_function*, align 8
  %link = alloca %union.tree_node*, align 8
  store %struct.function* %f, %struct.function** %f.addr, align 8
  %0 = load %struct.function*, %struct.function** %f.addr, align 8
  %language = getelementptr inbounds %struct.function, %struct.function* %0, i32 0, i32 54
  %1 = load %struct.language_function*, %struct.language_function** %language, align 8
  %2 = bitcast %struct.language_function* %1 to %struct.c_language_function*
  store %struct.c_language_function* %2, %struct.c_language_function** %p, align 8
  %3 = load %union.tree_node*, %union.tree_node** @shadowed_labels, align 8
  store %union.tree_node* %3, %union.tree_node** %link, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %union.tree_node*, %union.tree_node** %link, align 8
  %tobool = icmp ne %union.tree_node* %4, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list = bitcast %union.tree_node* %5 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %value, align 8
  %decl = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp = icmp ne %union.tree_node* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list1 = bitcast %union.tree_node* %8 to %struct.tree_list*
  %value2 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1, i32 0, i32 2
  %9 = load %union.tree_node*, %union.tree_node** %value2, align 8
  %10 = load %union.tree_node*, %union.tree_node** %link, align 8
  %list3 = bitcast %union.tree_node* %10 to %struct.tree_list*
  %value4 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list3, i32 0, i32 2
  %11 = load %union.tree_node*, %union.tree_node** %value4, align 8
  %decl5 = bitcast %union.tree_node* %11 to %struct.tree_decl*
  %name6 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl5, i32 0, i32 8
  %12 = load %union.tree_node*, %union.tree_node** %name6, align 8
  %13 = bitcast %union.tree_node* %12 to %struct.lang_identifier*
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %13, i32 0, i32 3
  store %union.tree_node* %9, %union.tree_node** %label_value, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load %union.tree_node*, %union.tree_node** %link, align 8
  %common = bitcast %union.tree_node* %14 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %15 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %15, %union.tree_node** %link, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl7 = bitcast %union.tree_node* %16 to %struct.tree_decl*
  %u2 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl7, i32 0, i32 19
  %f8 = bitcast %union.anon.1* %u2 to %struct.function**
  %17 = load %struct.function*, %struct.function** %f8, align 8
  %cmp9 = icmp eq %struct.function* %17, null
  br i1 %cmp9, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %for.end
  %18 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl10 = bitcast %union.tree_node* %18 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl10, i32 0, i32 20
  %19 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8
  %cmp11 = icmp eq %union.tree_node* %19, null
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %land.lhs.true
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %21 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl13 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl13, i32 0, i32 12
  store %union.tree_node* %20, %union.tree_node** %initial, align 8
  %22 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %decl14 = bitcast %union.tree_node* %22 to %struct.tree_decl*
  %arguments = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl14, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments, align 8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %land.lhs.true, %for.end
  %23 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %base = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %23, i32 0, i32 0
  %x_stmt_tree = getelementptr inbounds %struct.language_function, %struct.language_function* %base, i32 0, i32 0
  %24 = bitcast %struct.stmt_tree_s* %x_stmt_tree to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i8* %24, i64 32, i32 8, i1 false)
  %25 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %base16 = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %25, i32 0, i32 0
  %x_scope_stmt_stack = getelementptr inbounds %struct.language_function, %struct.language_function* %base16, i32 0, i32 1
  %26 = load %union.tree_node*, %union.tree_node** %x_scope_stmt_stack, align 8
  store %union.tree_node* %26, %union.tree_node** @c_scope_stmt_stack, align 8
  %27 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %named_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %27, i32 0, i32 1
  %28 = load %union.tree_node*, %union.tree_node** %named_labels, align 8
  store %union.tree_node* %28, %union.tree_node** @named_labels, align 8
  %29 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %shadowed_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %29, i32 0, i32 2
  %30 = load %union.tree_node*, %union.tree_node** %shadowed_labels, align 8
  store %union.tree_node* %30, %union.tree_node** @shadowed_labels, align 8
  %31 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_value = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %31, i32 0, i32 3
  %32 = load i32, i32* %returns_value, align 4
  store i32 %32, i32* @current_function_returns_value, align 4
  %33 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_null = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %33, i32 0, i32 4
  %34 = load i32, i32* %returns_null, align 4
  store i32 %34, i32* @current_function_returns_null, align 4
  %35 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %returns_abnormally = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %35, i32 0, i32 5
  %36 = load i32, i32* %returns_abnormally, align 4
  store i32 %36, i32* @current_function_returns_abnormally, align 4
  %37 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %warn_about_return_type = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %37, i32 0, i32 6
  %38 = load i32, i32* %warn_about_return_type, align 4
  store i32 %38, i32* @warn_about_return_type, align 4
  %39 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %extern_inline = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %39, i32 0, i32 7
  %40 = load i32, i32* %extern_inline, align 4
  store i32 %40, i32* @current_extern_inline, align 4
  %41 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %binding_level = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %41, i32 0, i32 8
  %42 = load %struct.binding_level*, %struct.binding_level** %binding_level, align 8
  store %struct.binding_level* %42, %struct.binding_level** @current_binding_level, align 8
  %43 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %44 = bitcast %struct.c_language_function* %43 to i8*
  call void @free(i8* %44) #3
  %45 = load %struct.function*, %struct.function** %f.addr, align 8
  %language17 = getelementptr inbounds %struct.function, %struct.function* %45, i32 0, i32 54
  store %struct.language_function* null, %struct.language_function** %language17, align 8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: nounwind uwtable
define void @mark_c_function_context(%struct.function* %f) #0 {
entry:
  %f.addr = alloca %struct.function*, align 8
  %p = alloca %struct.c_language_function*, align 8
  %t__ = alloca %union.tree_node*, align 8
  %t__13 = alloca %union.tree_node*, align 8
  store %struct.function* %f, %struct.function** %f.addr, align 8
  %0 = load %struct.function*, %struct.function** %f.addr, align 8
  %language = getelementptr inbounds %struct.function, %struct.function* %0, i32 0, i32 54
  %1 = load %struct.language_function*, %struct.language_function** %language, align 8
  %2 = bitcast %struct.language_function* %1 to %struct.c_language_function*
  store %struct.c_language_function* %2, %struct.c_language_function** %p, align 8
  %3 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %cmp = icmp eq %struct.c_language_function* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %base = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %4, i32 0, i32 0
  call void @mark_c_language_function(%struct.language_function* %base)
  br label %do.body

do.body:                                          ; preds = %if.end
  %5 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %shadowed_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %5, i32 0, i32 2
  %6 = load %union.tree_node*, %union.tree_node** %shadowed_labels, align 8
  store %union.tree_node* %6, %union.tree_node** %t__, align 8
  %7 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %cmp1 = icmp ne %union.tree_node* %7, null
  br i1 %cmp1, label %land.lhs.true, label %if.end.10

land.lhs.true:                                    ; preds = %do.body
  %8 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %9 = bitcast %union.tree_node* %8 to i8*
  %call = call i32 @ggc_set_mark(i8* %9)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.10, label %if.then.2

if.then.2:                                        ; preds = %land.lhs.true
  br label %do.body.3

do.body.3:                                        ; preds = %if.then.2
  %10 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %10, i32 0, i32 1
  %11 = load i64, i64* %elements_used, align 8
  %12 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %12, i32 0, i32 0
  %13 = load i64, i64* %num_elements, align 8
  %cmp4 = icmp uge i64 %11, %13
  br i1 %cmp4, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %do.body.3
  %14 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %15 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements6 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %15, i32 0, i32 0
  %16 = load i64, i64* %num_elements6, align 8
  %mul = mul i64 2, %16
  %call7 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %14, i64 %mul)
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %do.body.3
  %17 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %18 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used9 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %18, i32 0, i32 1
  %19 = load i64, i64* %elements_used9, align 8
  %inc = add i64 %19, 1
  store i64 %inc, i64* %elements_used9, align 8
  %20 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %20, i32 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree, i32 0, i64 %19
  store %union.tree_node* %17, %union.tree_node** %arrayidx, align 8
  br label %do.end

do.end:                                           ; preds = %if.end.8
  br label %if.end.10

if.end.10:                                        ; preds = %do.end, %land.lhs.true, %do.body
  br label %do.end.11

do.end.11:                                        ; preds = %if.end.10
  br label %do.body.12

do.body.12:                                       ; preds = %do.end.11
  %21 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %named_labels = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %21, i32 0, i32 1
  %22 = load %union.tree_node*, %union.tree_node** %named_labels, align 8
  store %union.tree_node* %22, %union.tree_node** %t__13, align 8
  %23 = load %union.tree_node*, %union.tree_node** %t__13, align 8
  %cmp14 = icmp ne %union.tree_node* %23, null
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.34

land.lhs.true.15:                                 ; preds = %do.body.12
  %24 = load %union.tree_node*, %union.tree_node** %t__13, align 8
  %25 = bitcast %union.tree_node* %24 to i8*
  %call16 = call i32 @ggc_set_mark(i8* %25)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end.34, label %if.then.18

if.then.18:                                       ; preds = %land.lhs.true.15
  br label %do.body.19

do.body.19:                                       ; preds = %if.then.18
  %26 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used20 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %26, i32 0, i32 1
  %27 = load i64, i64* %elements_used20, align 8
  %28 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements21 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %28, i32 0, i32 0
  %29 = load i64, i64* %num_elements21, align 8
  %cmp22 = icmp uge i64 %27, %29
  br i1 %cmp22, label %if.then.23, label %if.end.27

if.then.23:                                       ; preds = %do.body.19
  %30 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %31 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements24 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %31, i32 0, i32 0
  %32 = load i64, i64* %num_elements24, align 8
  %mul25 = mul i64 2, %32
  %call26 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %30, i64 %mul25)
  store %struct.varray_head_tag* %call26, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.23, %do.body.19
  %33 = load %union.tree_node*, %union.tree_node** %t__13, align 8
  %34 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used28 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %34, i32 0, i32 1
  %35 = load i64, i64* %elements_used28, align 8
  %inc29 = add i64 %35, 1
  store i64 %inc29, i64* %elements_used28, align 8
  %36 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data30 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %36, i32 0, i32 4
  %tree31 = bitcast %union.varray_data_tag* %data30 to [1 x %union.tree_node*]*
  %arrayidx32 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree31, i32 0, i64 %35
  store %union.tree_node* %33, %union.tree_node** %arrayidx32, align 8
  br label %do.end.33

do.end.33:                                        ; preds = %if.end.27
  br label %if.end.34

if.end.34:                                        ; preds = %do.end.33, %land.lhs.true.15, %do.body.12
  br label %do.end.35

do.end.35:                                        ; preds = %if.end.34
  %37 = load %struct.c_language_function*, %struct.c_language_function** %p, align 8
  %binding_level = getelementptr inbounds %struct.c_language_function, %struct.c_language_function* %37, i32 0, i32 8
  %38 = bitcast %struct.binding_level** %binding_level to i8*
  call void @mark_binding_level(i8* %38)
  br label %return

return:                                           ; preds = %do.end.35, %if.then
  ret void
}

declare void @mark_c_language_function(%struct.language_function*) #1

declare i32 @ggc_set_mark(i8*) #1

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind uwtable
define void @copy_lang_decl(%union.tree_node* %decl) #0 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %ld = alloca %struct.lang_decl*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl1 = bitcast %union.tree_node* %0 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 24
  %1 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %tobool = icmp ne %struct.lang_decl* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @ggc_alloc(i64 16)
  %2 = bitcast i8* %call to %struct.lang_decl*
  store %struct.lang_decl* %2, %struct.lang_decl** %ld, align 8
  %3 = load %struct.lang_decl*, %struct.lang_decl** %ld, align 8
  %4 = bitcast %struct.lang_decl* %3 to i8*
  %5 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl2 = bitcast %union.tree_node* %5 to %struct.tree_decl*
  %lang_specific3 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl2, i32 0, i32 24
  %6 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific3, align 8
  %7 = bitcast %struct.lang_decl* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %7, i64 16, i32 1, i1 false)
  %8 = load %struct.lang_decl*, %struct.lang_decl** %ld, align 8
  %9 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8
  %decl4 = bitcast %union.tree_node* %9 to %struct.tree_decl*
  %lang_specific5 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4, i32 0, i32 24
  store %struct.lang_decl* %8, %struct.lang_decl** %lang_specific5, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare i8* @ggc_alloc(i64) #1

; Function Attrs: nounwind uwtable
define void @lang_mark_tree(%union.tree_node* %t) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  %i = alloca %struct.lang_identifier*, align 8
  %t__ = alloca %union.tree_node*, align 8
  %t__12 = alloca %union.tree_node*, align 8
  %t__36 = alloca %union.tree_node*, align 8
  %t__60 = alloca %union.tree_node*, align 8
  %t__84 = alloca %union.tree_node*, align 8
  %t__108 = alloca %union.tree_node*, align 8
  %a__ = alloca i8*, align 8
  %a__165 = alloca i8*, align 8
  %t__177 = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %2 = bitcast %union.tree_node* %1 to %struct.lang_identifier*
  store %struct.lang_identifier* %2, %struct.lang_identifier** %i, align 8
  br label %do.body

do.body:                                          ; preds = %if.then
  %3 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %3, i32 0, i32 1
  %4 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  store %union.tree_node* %4, %union.tree_node** %t__, align 8
  %5 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %cmp1 = icmp ne %union.tree_node* %5, null
  br i1 %cmp1, label %land.lhs.true, label %if.end.9

land.lhs.true:                                    ; preds = %do.body
  %6 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %7 = bitcast %union.tree_node* %6 to i8*
  %call = call i32 @ggc_set_mark(i8* %7)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.9, label %if.then.2

if.then.2:                                        ; preds = %land.lhs.true
  br label %do.body.3

do.body.3:                                        ; preds = %if.then.2
  %8 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %8, i32 0, i32 1
  %9 = load i64, i64* %elements_used, align 8
  %10 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %10, i32 0, i32 0
  %11 = load i64, i64* %num_elements, align 8
  %cmp4 = icmp uge i64 %9, %11
  br i1 %cmp4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %do.body.3
  %12 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %13 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements6 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %13, i32 0, i32 0
  %14 = load i64, i64* %num_elements6, align 8
  %mul = mul i64 2, %14
  %call7 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %12, i64 %mul)
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.5, %do.body.3
  %15 = load %union.tree_node*, %union.tree_node** %t__, align 8
  %16 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used8 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %16, i32 0, i32 1
  %17 = load i64, i64* %elements_used8, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %elements_used8, align 8
  %18 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %18, i32 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree, i32 0, i64 %17
  store %union.tree_node* %15, %union.tree_node** %arrayidx, align 8
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.9

if.end.9:                                         ; preds = %do.end, %land.lhs.true, %do.body
  br label %do.end.10

do.end.10:                                        ; preds = %if.end.9
  br label %do.body.11

do.body.11:                                       ; preds = %do.end.10
  %19 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %local_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %19, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %local_value, align 8
  store %union.tree_node* %20, %union.tree_node** %t__12, align 8
  %21 = load %union.tree_node*, %union.tree_node** %t__12, align 8
  %cmp13 = icmp ne %union.tree_node* %21, null
  br i1 %cmp13, label %land.lhs.true.14, label %if.end.33

land.lhs.true.14:                                 ; preds = %do.body.11
  %22 = load %union.tree_node*, %union.tree_node** %t__12, align 8
  %23 = bitcast %union.tree_node* %22 to i8*
  %call15 = call i32 @ggc_set_mark(i8* %23)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end.33, label %if.then.17

if.then.17:                                       ; preds = %land.lhs.true.14
  br label %do.body.18

do.body.18:                                       ; preds = %if.then.17
  %24 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used19 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %24, i32 0, i32 1
  %25 = load i64, i64* %elements_used19, align 8
  %26 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements20 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %26, i32 0, i32 0
  %27 = load i64, i64* %num_elements20, align 8
  %cmp21 = icmp uge i64 %25, %27
  br i1 %cmp21, label %if.then.22, label %if.end.26

if.then.22:                                       ; preds = %do.body.18
  %28 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %29 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements23 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %29, i32 0, i32 0
  %30 = load i64, i64* %num_elements23, align 8
  %mul24 = mul i64 2, %30
  %call25 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %28, i64 %mul24)
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.22, %do.body.18
  %31 = load %union.tree_node*, %union.tree_node** %t__12, align 8
  %32 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used27 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %32, i32 0, i32 1
  %33 = load i64, i64* %elements_used27, align 8
  %inc28 = add i64 %33, 1
  store i64 %inc28, i64* %elements_used27, align 8
  %34 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data29 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %34, i32 0, i32 4
  %tree30 = bitcast %union.varray_data_tag* %data29 to [1 x %union.tree_node*]*
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree30, i32 0, i64 %33
  store %union.tree_node* %31, %union.tree_node** %arrayidx31, align 8
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.26
  br label %if.end.33

if.end.33:                                        ; preds = %do.end.32, %land.lhs.true.14, %do.body.11
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  br label %do.body.35

do.body.35:                                       ; preds = %do.end.34
  %35 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %label_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %35, i32 0, i32 3
  %36 = load %union.tree_node*, %union.tree_node** %label_value, align 8
  store %union.tree_node* %36, %union.tree_node** %t__36, align 8
  %37 = load %union.tree_node*, %union.tree_node** %t__36, align 8
  %cmp37 = icmp ne %union.tree_node* %37, null
  br i1 %cmp37, label %land.lhs.true.38, label %if.end.57

land.lhs.true.38:                                 ; preds = %do.body.35
  %38 = load %union.tree_node*, %union.tree_node** %t__36, align 8
  %39 = bitcast %union.tree_node* %38 to i8*
  %call39 = call i32 @ggc_set_mark(i8* %39)
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.end.57, label %if.then.41

if.then.41:                                       ; preds = %land.lhs.true.38
  br label %do.body.42

do.body.42:                                       ; preds = %if.then.41
  %40 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used43 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %40, i32 0, i32 1
  %41 = load i64, i64* %elements_used43, align 8
  %42 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements44 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %42, i32 0, i32 0
  %43 = load i64, i64* %num_elements44, align 8
  %cmp45 = icmp uge i64 %41, %43
  br i1 %cmp45, label %if.then.46, label %if.end.50

if.then.46:                                       ; preds = %do.body.42
  %44 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %45 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements47 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %45, i32 0, i32 0
  %46 = load i64, i64* %num_elements47, align 8
  %mul48 = mul i64 2, %46
  %call49 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %44, i64 %mul48)
  store %struct.varray_head_tag* %call49, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.50

if.end.50:                                        ; preds = %if.then.46, %do.body.42
  %47 = load %union.tree_node*, %union.tree_node** %t__36, align 8
  %48 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used51 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %48, i32 0, i32 1
  %49 = load i64, i64* %elements_used51, align 8
  %inc52 = add i64 %49, 1
  store i64 %inc52, i64* %elements_used51, align 8
  %50 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data53 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %50, i32 0, i32 4
  %tree54 = bitcast %union.varray_data_tag* %data53 to [1 x %union.tree_node*]*
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree54, i32 0, i64 %49
  store %union.tree_node* %47, %union.tree_node** %arrayidx55, align 8
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.50
  br label %if.end.57

if.end.57:                                        ; preds = %do.end.56, %land.lhs.true.38, %do.body.35
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %do.body.59

do.body.59:                                       ; preds = %do.end.58
  %51 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %implicit_decl = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %51, i32 0, i32 4
  %52 = load %union.tree_node*, %union.tree_node** %implicit_decl, align 8
  store %union.tree_node* %52, %union.tree_node** %t__60, align 8
  %53 = load %union.tree_node*, %union.tree_node** %t__60, align 8
  %cmp61 = icmp ne %union.tree_node* %53, null
  br i1 %cmp61, label %land.lhs.true.62, label %if.end.81

land.lhs.true.62:                                 ; preds = %do.body.59
  %54 = load %union.tree_node*, %union.tree_node** %t__60, align 8
  %55 = bitcast %union.tree_node* %54 to i8*
  %call63 = call i32 @ggc_set_mark(i8* %55)
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.end.81, label %if.then.65

if.then.65:                                       ; preds = %land.lhs.true.62
  br label %do.body.66

do.body.66:                                       ; preds = %if.then.65
  %56 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used67 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %56, i32 0, i32 1
  %57 = load i64, i64* %elements_used67, align 8
  %58 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements68 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %58, i32 0, i32 0
  %59 = load i64, i64* %num_elements68, align 8
  %cmp69 = icmp uge i64 %57, %59
  br i1 %cmp69, label %if.then.70, label %if.end.74

if.then.70:                                       ; preds = %do.body.66
  %60 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %61 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements71 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %61, i32 0, i32 0
  %62 = load i64, i64* %num_elements71, align 8
  %mul72 = mul i64 2, %62
  %call73 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %60, i64 %mul72)
  store %struct.varray_head_tag* %call73, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.70, %do.body.66
  %63 = load %union.tree_node*, %union.tree_node** %t__60, align 8
  %64 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used75 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %64, i32 0, i32 1
  %65 = load i64, i64* %elements_used75, align 8
  %inc76 = add i64 %65, 1
  store i64 %inc76, i64* %elements_used75, align 8
  %66 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data77 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %66, i32 0, i32 4
  %tree78 = bitcast %union.varray_data_tag* %data77 to [1 x %union.tree_node*]*
  %arrayidx79 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree78, i32 0, i64 %65
  store %union.tree_node* %63, %union.tree_node** %arrayidx79, align 8
  br label %do.end.80

do.end.80:                                        ; preds = %if.end.74
  br label %if.end.81

if.end.81:                                        ; preds = %do.end.80, %land.lhs.true.62, %do.body.59
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  br label %do.body.83

do.body.83:                                       ; preds = %do.end.82
  %67 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %error_locus = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %67, i32 0, i32 5
  %68 = load %union.tree_node*, %union.tree_node** %error_locus, align 8
  store %union.tree_node* %68, %union.tree_node** %t__84, align 8
  %69 = load %union.tree_node*, %union.tree_node** %t__84, align 8
  %cmp85 = icmp ne %union.tree_node* %69, null
  br i1 %cmp85, label %land.lhs.true.86, label %if.end.105

land.lhs.true.86:                                 ; preds = %do.body.83
  %70 = load %union.tree_node*, %union.tree_node** %t__84, align 8
  %71 = bitcast %union.tree_node* %70 to i8*
  %call87 = call i32 @ggc_set_mark(i8* %71)
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %if.end.105, label %if.then.89

if.then.89:                                       ; preds = %land.lhs.true.86
  br label %do.body.90

do.body.90:                                       ; preds = %if.then.89
  %72 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used91 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %72, i32 0, i32 1
  %73 = load i64, i64* %elements_used91, align 8
  %74 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements92 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %74, i32 0, i32 0
  %75 = load i64, i64* %num_elements92, align 8
  %cmp93 = icmp uge i64 %73, %75
  br i1 %cmp93, label %if.then.94, label %if.end.98

if.then.94:                                       ; preds = %do.body.90
  %76 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %77 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements95 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %77, i32 0, i32 0
  %78 = load i64, i64* %num_elements95, align 8
  %mul96 = mul i64 2, %78
  %call97 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %76, i64 %mul96)
  store %struct.varray_head_tag* %call97, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.94, %do.body.90
  %79 = load %union.tree_node*, %union.tree_node** %t__84, align 8
  %80 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used99 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %80, i32 0, i32 1
  %81 = load i64, i64* %elements_used99, align 8
  %inc100 = add i64 %81, 1
  store i64 %inc100, i64* %elements_used99, align 8
  %82 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data101 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %82, i32 0, i32 4
  %tree102 = bitcast %union.varray_data_tag* %data101 to [1 x %union.tree_node*]*
  %arrayidx103 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree102, i32 0, i64 %81
  store %union.tree_node* %79, %union.tree_node** %arrayidx103, align 8
  br label %do.end.104

do.end.104:                                       ; preds = %if.end.98
  br label %if.end.105

if.end.105:                                       ; preds = %do.end.104, %land.lhs.true.86, %do.body.83
  br label %do.end.106

do.end.106:                                       ; preds = %if.end.105
  br label %do.body.107

do.body.107:                                      ; preds = %do.end.106
  %83 = load %struct.lang_identifier*, %struct.lang_identifier** %i, align 8
  %limbo_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %83, i32 0, i32 6
  %84 = load %union.tree_node*, %union.tree_node** %limbo_value, align 8
  store %union.tree_node* %84, %union.tree_node** %t__108, align 8
  %85 = load %union.tree_node*, %union.tree_node** %t__108, align 8
  %cmp109 = icmp ne %union.tree_node* %85, null
  br i1 %cmp109, label %land.lhs.true.110, label %if.end.129

land.lhs.true.110:                                ; preds = %do.body.107
  %86 = load %union.tree_node*, %union.tree_node** %t__108, align 8
  %87 = bitcast %union.tree_node* %86 to i8*
  %call111 = call i32 @ggc_set_mark(i8* %87)
  %tobool112 = icmp ne i32 %call111, 0
  br i1 %tobool112, label %if.end.129, label %if.then.113

if.then.113:                                      ; preds = %land.lhs.true.110
  br label %do.body.114

do.body.114:                                      ; preds = %if.then.113
  %88 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used115 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %88, i32 0, i32 1
  %89 = load i64, i64* %elements_used115, align 8
  %90 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements116 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %90, i32 0, i32 0
  %91 = load i64, i64* %num_elements116, align 8
  %cmp117 = icmp uge i64 %89, %91
  br i1 %cmp117, label %if.then.118, label %if.end.122

if.then.118:                                      ; preds = %do.body.114
  %92 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %93 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements119 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %93, i32 0, i32 0
  %94 = load i64, i64* %num_elements119, align 8
  %mul120 = mul i64 2, %94
  %call121 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %92, i64 %mul120)
  store %struct.varray_head_tag* %call121, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.118, %do.body.114
  %95 = load %union.tree_node*, %union.tree_node** %t__108, align 8
  %96 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used123 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %96, i32 0, i32 1
  %97 = load i64, i64* %elements_used123, align 8
  %inc124 = add i64 %97, 1
  store i64 %inc124, i64* %elements_used123, align 8
  %98 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data125 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %98, i32 0, i32 4
  %tree126 = bitcast %union.varray_data_tag* %data125 to [1 x %union.tree_node*]*
  %arrayidx127 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree126, i32 0, i64 %97
  store %union.tree_node* %95, %union.tree_node** %arrayidx127, align 8
  br label %do.end.128

do.end.128:                                       ; preds = %if.end.122
  br label %if.end.129

if.end.129:                                       ; preds = %do.end.128, %land.lhs.true.110, %do.body.107
  br label %do.end.130

do.end.130:                                       ; preds = %if.end.129
  br label %if.end.206

if.else:                                          ; preds = %entry
  %99 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common131 = bitcast %union.tree_node* %99 to %struct.tree_common*
  %code132 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common131, i32 0, i32 2
  %bf.load133 = load i32, i32* %code132, align 8
  %bf.clear134 = and i32 %bf.load133, 255
  %idxprom = sext i32 %bf.clear134 to i64
  %arrayidx135 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom
  %100 = load i8, i8* %arrayidx135, align 1
  %conv = sext i8 %100 to i32
  %cmp136 = icmp eq i32 %conv, 116
  br i1 %cmp136, label %land.lhs.true.138, label %if.else.150

land.lhs.true.138:                                ; preds = %if.else
  %101 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type = bitcast %union.tree_node* %101 to %struct.tree_type*
  %lang_specific = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i32 0, i32 19
  %102 = load %struct.lang_type*, %struct.lang_type** %lang_specific, align 8
  %tobool139 = icmp ne %struct.lang_type* %102, null
  br i1 %tobool139, label %if.then.140, label %if.else.150

if.then.140:                                      ; preds = %land.lhs.true.138
  br label %do.body.141

do.body.141:                                      ; preds = %if.then.140
  %103 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %type142 = bitcast %union.tree_node* %103 to %struct.tree_type*
  %lang_specific143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i32 0, i32 19
  %104 = load %struct.lang_type*, %struct.lang_type** %lang_specific143, align 8
  %105 = bitcast %struct.lang_type* %104 to i8*
  store i8* %105, i8** %a__, align 8
  %106 = load i8*, i8** %a__, align 8
  %cmp144 = icmp ne i8* %106, null
  br i1 %cmp144, label %if.then.146, label %if.end.148

if.then.146:                                      ; preds = %do.body.141
  %107 = load i8*, i8** %a__, align 8
  %call147 = call i32 @ggc_set_mark(i8* %107)
  br label %if.end.148

if.end.148:                                       ; preds = %if.then.146, %do.body.141
  br label %do.end.149

do.end.149:                                       ; preds = %if.end.148
  br label %if.end.205

if.else.150:                                      ; preds = %land.lhs.true.138, %if.else
  %108 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %common151 = bitcast %union.tree_node* %108 to %struct.tree_common*
  %code152 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common151, i32 0, i32 2
  %bf.load153 = load i32, i32* %code152, align 8
  %bf.clear154 = and i32 %bf.load153, 255
  %idxprom155 = sext i32 %bf.clear154 to i64
  %arrayidx156 = getelementptr inbounds [256 x i8], [256 x i8]* @tree_code_type, i32 0, i64 %idxprom155
  %109 = load i8, i8* %arrayidx156, align 1
  %conv157 = sext i8 %109 to i32
  %cmp158 = icmp eq i32 %conv157, 100
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.204

land.lhs.true.160:                                ; preds = %if.else.150
  %110 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %decl = bitcast %union.tree_node* %110 to %struct.tree_decl*
  %lang_specific161 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 24
  %111 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific161, align 8
  %tobool162 = icmp ne %struct.lang_decl* %111, null
  br i1 %tobool162, label %if.then.163, label %if.end.204

if.then.163:                                      ; preds = %land.lhs.true.160
  br label %do.body.164

do.body.164:                                      ; preds = %if.then.163
  %112 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %decl166 = bitcast %union.tree_node* %112 to %struct.tree_decl*
  %lang_specific167 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl166, i32 0, i32 24
  %113 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific167, align 8
  %114 = bitcast %struct.lang_decl* %113 to i8*
  store i8* %114, i8** %a__165, align 8
  %115 = load i8*, i8** %a__165, align 8
  %cmp168 = icmp ne i8* %115, null
  br i1 %cmp168, label %if.then.170, label %if.end.172

if.then.170:                                      ; preds = %do.body.164
  %116 = load i8*, i8** %a__165, align 8
  %call171 = call i32 @ggc_set_mark(i8* %116)
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.170, %do.body.164
  br label %do.end.173

do.end.173:                                       ; preds = %if.end.172
  %117 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %decl174 = bitcast %union.tree_node* %117 to %struct.tree_decl*
  %lang_specific175 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl174, i32 0, i32 24
  %118 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific175, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %118, i32 0, i32 0
  call void @c_mark_lang_decl(%struct.c_lang_decl* %base)
  br label %do.body.176

do.body.176:                                      ; preds = %do.end.173
  %119 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %decl178 = bitcast %union.tree_node* %119 to %struct.tree_decl*
  %lang_specific179 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl178, i32 0, i32 24
  %120 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific179, align 8
  %pending_sizes = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %120, i32 0, i32 1
  %121 = load %union.tree_node*, %union.tree_node** %pending_sizes, align 8
  store %union.tree_node* %121, %union.tree_node** %t__177, align 8
  %122 = load %union.tree_node*, %union.tree_node** %t__177, align 8
  %cmp180 = icmp ne %union.tree_node* %122, null
  br i1 %cmp180, label %land.lhs.true.182, label %if.end.202

land.lhs.true.182:                                ; preds = %do.body.176
  %123 = load %union.tree_node*, %union.tree_node** %t__177, align 8
  %124 = bitcast %union.tree_node* %123 to i8*
  %call183 = call i32 @ggc_set_mark(i8* %124)
  %tobool184 = icmp ne i32 %call183, 0
  br i1 %tobool184, label %if.end.202, label %if.then.185

if.then.185:                                      ; preds = %land.lhs.true.182
  br label %do.body.186

do.body.186:                                      ; preds = %if.then.185
  %125 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used187 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %125, i32 0, i32 1
  %126 = load i64, i64* %elements_used187, align 8
  %127 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements188 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %127, i32 0, i32 0
  %128 = load i64, i64* %num_elements188, align 8
  %cmp189 = icmp uge i64 %126, %128
  br i1 %cmp189, label %if.then.191, label %if.end.195

if.then.191:                                      ; preds = %do.body.186
  %129 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %130 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %num_elements192 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %130, i32 0, i32 0
  %131 = load i64, i64* %num_elements192, align 8
  %mul193 = mul i64 2, %131
  %call194 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %129, i64 %mul193)
  store %struct.varray_head_tag* %call194, %struct.varray_head_tag** @ggc_pending_trees, align 8
  br label %if.end.195

if.end.195:                                       ; preds = %if.then.191, %do.body.186
  %132 = load %union.tree_node*, %union.tree_node** %t__177, align 8
  %133 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %elements_used196 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %133, i32 0, i32 1
  %134 = load i64, i64* %elements_used196, align 8
  %inc197 = add i64 %134, 1
  store i64 %inc197, i64* %elements_used196, align 8
  %135 = load %struct.varray_head_tag*, %struct.varray_head_tag** @ggc_pending_trees, align 8
  %data198 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %135, i32 0, i32 4
  %tree199 = bitcast %union.varray_data_tag* %data198 to [1 x %union.tree_node*]*
  %arrayidx200 = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %tree199, i32 0, i64 %134
  store %union.tree_node* %132, %union.tree_node** %arrayidx200, align 8
  br label %do.end.201

do.end.201:                                       ; preds = %if.end.195
  br label %if.end.202

if.end.202:                                       ; preds = %do.end.201, %land.lhs.true.182, %do.body.176
  br label %do.end.203

do.end.203:                                       ; preds = %if.end.202
  br label %if.end.204

if.end.204:                                       ; preds = %do.end.203, %land.lhs.true.160, %if.else.150
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204, %do.end.149
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %do.end.130
  ret void
}

declare void @c_mark_lang_decl(%struct.c_lang_decl*) #1

; Function Attrs: nounwind uwtable
define i32 @stmts_are_full_exprs_p() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define %struct.stmt_tree_s* @current_stmt_tree() #0 {
entry:
  ret %struct.stmt_tree_s* @c_stmt_tree
}

; Function Attrs: nounwind uwtable
define %union.tree_node** @current_scope_stmt_stack() #0 {
entry:
  ret %union.tree_node** @c_scope_stmt_stack
}

; Function Attrs: nounwind uwtable
define i32 @anon_aggr_type_p(%union.tree_node* %node) #0 {
entry:
  %node.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %node, %union.tree_node** %node.addr, align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @extract_interface_info() #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_begin_compound_stmt() #0 {
entry:
  %stmt = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* (i32, ...) @build_stmt(i32 153, %union.tree_node* null)
  %call1 = call %union.tree_node* @add_stmt(%union.tree_node* %call)
  store %union.tree_node* %call1, %union.tree_node** %stmt, align 8
  %0 = load %union.tree_node*, %union.tree_node** %stmt, align 8
  ret %union.tree_node* %0
}

declare %union.tree_node* @add_stmt(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_expand_decl_stmt(%union.tree_node* %t) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %exp = bitcast %union.tree_node* %0 to %struct.tree_exp*
  %operands = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %exp, i32 0, i32 2
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*], [1 x %union.tree_node*]* %operands, i32 0, i64 0
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %1, %union.tree_node** %decl, align 8
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %common = bitcast %union.tree_node* %2 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl1 = bitcast %union.tree_node* %3 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl1, i32 0, i32 9
  %4 = load %union.tree_node*, %union.tree_node** %context, align 8
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8
  %cmp2 = icmp eq %union.tree_node* %4, %5
  br i1 %cmp2, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8
  %decl4 = bitcast %union.tree_node* %6 to %struct.tree_decl*
  %saved_tree = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl4, i32 0, i32 20
  %7 = load %union.tree_node*, %union.tree_node** %saved_tree, align 8
  %tobool = icmp ne %union.tree_node* %7, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.3
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8
  call void @c_expand_body(%union.tree_node* %8, i32 1, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.3, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @identifier_global_value(%union.tree_node* %t) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8
  %1 = bitcast %union.tree_node* %0 to %struct.lang_identifier*
  %global_value = getelementptr inbounds %struct.lang_identifier, %struct.lang_identifier* %1, i32 0, i32 1
  %2 = load %union.tree_node*, %union.tree_node** %global_value, align 8
  ret %union.tree_node* %2
}

; Function Attrs: nounwind uwtable
define void @record_builtin_type(i32 %rid_index, i8* %name, %union.tree_node* %type) #0 {
entry:
  %rid_index.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %type.addr = alloca %union.tree_node*, align 8
  %id = alloca %union.tree_node*, align 8
  store i32 %rid_index, i32* %rid_index.addr, align 4
  store i8* %name, i8** %name.addr, align 8
  store %union.tree_node* %type, %union.tree_node** %type.addr, align 8
  %0 = load i8*, i8** %name.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %rid_index.addr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8
  store %union.tree_node* %3, %union.tree_node** %id, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %name.addr, align 8
  %call = call %union.tree_node* @get_identifier(i8* %4)
  store %union.tree_node* %call, %union.tree_node** %id, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %union.tree_node*, %union.tree_node** %id, align 8
  %6 = load %union.tree_node*, %union.tree_node** %type.addr, align 8
  %call1 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %5, %union.tree_node* %6)
  %call2 = call %union.tree_node* @pushdecl(%union.tree_node* %call1)
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_void_list_node() #0 {
entry:
  %t = alloca %union.tree_node*, align 8
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 27), align 8
  %call = call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %0)
  store %union.tree_node* %call, %union.tree_node** %t, align 8
  %1 = load %union.tree_node*, %union.tree_node** %t, align 8
  ret %union.tree_node* %1
}

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_type_attribute_variant(%union.tree_node*, %union.tree_node*) #1

declare i32 @self_promoting_args_p(%union.tree_node*) #1

declare %union.tree_node* @simple_type_promotes_to(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal i32 @redeclaration_error_message(%union.tree_node* %newdecl, %union.tree_node* %olddecl) #0 {
entry:
  %retval = alloca i32, align 4
  %newdecl.addr = alloca %union.tree_node*, align 8
  %olddecl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %newdecl, %union.tree_node** %newdecl.addr, align 8
  store %union.tree_node* %olddecl, %union.tree_node** %olddecl.addr, align 8
  %0 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @flag_traditional, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common1 = bitcast %union.tree_node* %2 to %struct.tree_common*
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common1, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8
  %4 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common2 = bitcast %union.tree_node* %4 to %struct.tree_common*
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common2, i32 0, i32 1
  %5 = load %union.tree_node*, %union.tree_node** %type3, align 8
  %cmp4 = icmp eq %union.tree_node* %3, %5
  br i1 %cmp4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  %6 = load i32, i32* @flag_traditional, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %land.lhs.true.7, label %if.end.15

land.lhs.true.7:                                  ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common8 = bitcast %union.tree_node* %7 to %struct.tree_common*
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common8, i32 0, i32 1
  %8 = load %union.tree_node*, %union.tree_node** %type9, align 8
  %type10 = bitcast %union.tree_node* %8 to %struct.tree_type*
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i32 0, i32 15
  %9 = load %union.tree_node*, %union.tree_node** %main_variant, align 8
  %10 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common11 = bitcast %union.tree_node* %10 to %struct.tree_common*
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common11, i32 0, i32 1
  %11 = load %union.tree_node*, %union.tree_node** %type12, align 8
  %cmp13 = icmp eq %union.tree_node* %9, %11
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true.7
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %land.lhs.true.7, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl = bitcast %union.tree_node* %12 to %struct.tree_decl*
  %in_system_header_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 5
  %13 = bitcast i48* %in_system_header_flag to i64*
  %bf.load16 = load i64, i64* %13, align 8
  %bf.lshr = lshr i64 %bf.load16, 16
  %bf.clear17 = and i64 %bf.lshr, 1
  %bf.cast = trunc i64 %bf.clear17 to i32
  %tobool18 = icmp ne i32 %bf.cast, 0
  br i1 %tobool18, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.15
  %14 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl19 = bitcast %union.tree_node* %14 to %struct.tree_decl*
  %in_system_header_flag20 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl19, i32 0, i32 5
  %15 = bitcast i48* %in_system_header_flag20 to i64*
  %bf.load21 = load i64, i64* %15, align 8
  %bf.lshr22 = lshr i64 %bf.load21, 16
  %bf.clear23 = and i64 %bf.lshr22, 1
  %bf.cast24 = trunc i64 %bf.clear23 to i32
  %tobool25 = icmp ne i32 %bf.cast24, 0
  br i1 %tobool25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %lor.lhs.false, %if.end.15
  store i32 0, i32* %retval
  br label %return

if.end.27:                                        ; preds = %lor.lhs.false
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %16 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common28 = bitcast %union.tree_node* %16 to %struct.tree_common*
  %code29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common28, i32 0, i32 2
  %bf.load30 = load i32, i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 30
  br i1 %cmp32, label %if.then.33, label %if.else.71

if.then.33:                                       ; preds = %if.else
  %17 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl34 = bitcast %union.tree_node* %17 to %struct.tree_decl*
  %initial = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl34, i32 0, i32 12
  %18 = load %union.tree_node*, %union.tree_node** %initial, align 8
  %cmp35 = icmp ne %union.tree_node* %18, null
  br i1 %cmp35, label %land.lhs.true.36, label %if.end.70

land.lhs.true.36:                                 ; preds = %if.then.33
  %19 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl37 = bitcast %union.tree_node* %19 to %struct.tree_decl*
  %initial38 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl37, i32 0, i32 12
  %20 = load %union.tree_node*, %union.tree_node** %initial38, align 8
  %cmp39 = icmp ne %union.tree_node* %20, null
  br i1 %cmp39, label %land.lhs.true.40, label %if.end.70

land.lhs.true.40:                                 ; preds = %land.lhs.true.36
  %21 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl41 = bitcast %union.tree_node* %21 to %struct.tree_decl*
  %lang_specific = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl41, i32 0, i32 24
  %22 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific, align 8
  %base = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %22, i32 0, i32 0
  %23 = bitcast %struct.c_lang_decl* %base to i8*
  %bf.load42 = load i8, i8* %23, align 4
  %bf.clear43 = and i8 %bf.load42, 1
  %bf.cast44 = zext i8 %bf.clear43 to i32
  %tobool45 = icmp ne i32 %bf.cast44, 0
  br i1 %tobool45, label %land.lhs.true.46, label %if.then.69

land.lhs.true.46:                                 ; preds = %land.lhs.true.40
  %24 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl47 = bitcast %union.tree_node* %24 to %struct.tree_decl*
  %external_flag = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl47, i32 0, i32 5
  %25 = bitcast i48* %external_flag to i64*
  %bf.load48 = load i64, i64* %25, align 8
  %bf.lshr49 = lshr i64 %bf.load48, 8
  %bf.clear50 = and i64 %bf.lshr49, 1
  %bf.cast51 = trunc i64 %bf.clear50 to i32
  %tobool52 = icmp ne i32 %bf.cast51, 0
  br i1 %tobool52, label %land.lhs.true.53, label %if.then.69

land.lhs.true.53:                                 ; preds = %land.lhs.true.46
  %26 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl54 = bitcast %union.tree_node* %26 to %struct.tree_decl*
  %lang_specific55 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl54, i32 0, i32 24
  %27 = load %struct.lang_decl*, %struct.lang_decl** %lang_specific55, align 8
  %base56 = getelementptr inbounds %struct.lang_decl, %struct.lang_decl* %27, i32 0, i32 0
  %28 = bitcast %struct.c_lang_decl* %base56 to i8*
  %bf.load57 = load i8, i8* %28, align 4
  %bf.clear58 = and i8 %bf.load57, 1
  %bf.cast59 = zext i8 %bf.clear58 to i32
  %tobool60 = icmp ne i32 %bf.cast59, 0
  br i1 %tobool60, label %land.lhs.true.61, label %if.end.70

land.lhs.true.61:                                 ; preds = %land.lhs.true.53
  %29 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl62 = bitcast %union.tree_node* %29 to %struct.tree_decl*
  %external_flag63 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl62, i32 0, i32 5
  %30 = bitcast i48* %external_flag63 to i64*
  %bf.load64 = load i64, i64* %30, align 8
  %bf.lshr65 = lshr i64 %bf.load64, 8
  %bf.clear66 = and i64 %bf.lshr65, 1
  %bf.cast67 = trunc i64 %bf.clear66 to i32
  %tobool68 = icmp ne i32 %bf.cast67, 0
  br i1 %tobool68, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %land.lhs.true.61, %land.lhs.true.46, %land.lhs.true.40
  store i32 1, i32* %retval
  br label %return

if.end.70:                                        ; preds = %land.lhs.true.61, %land.lhs.true.53, %land.lhs.true.36, %if.then.33
  store i32 0, i32* %retval
  br label %return

if.else.71:                                       ; preds = %if.else
  %31 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl72 = bitcast %union.tree_node* %31 to %struct.tree_decl*
  %context = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl72, i32 0, i32 9
  %32 = load %union.tree_node*, %union.tree_node** %context, align 8
  %cmp73 = icmp eq %union.tree_node* %32, null
  br i1 %cmp73, label %if.then.74, label %if.else.113

if.then.74:                                       ; preds = %if.else.71
  %33 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl75 = bitcast %union.tree_node* %33 to %struct.tree_decl*
  %external_flag76 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl75, i32 0, i32 5
  %34 = bitcast i48* %external_flag76 to i64*
  %bf.load77 = load i64, i64* %34, align 8
  %bf.lshr78 = lshr i64 %bf.load77, 8
  %bf.clear79 = and i64 %bf.lshr78, 1
  %bf.cast80 = trunc i64 %bf.clear79 to i32
  %tobool81 = icmp ne i32 %bf.cast80, 0
  br i1 %tobool81, label %if.then.90, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %if.then.74
  %35 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl83 = bitcast %union.tree_node* %35 to %struct.tree_decl*
  %external_flag84 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl83, i32 0, i32 5
  %36 = bitcast i48* %external_flag84 to i64*
  %bf.load85 = load i64, i64* %36, align 8
  %bf.lshr86 = lshr i64 %bf.load85, 8
  %bf.clear87 = and i64 %bf.lshr86, 1
  %bf.cast88 = trunc i64 %bf.clear87 to i32
  %tobool89 = icmp ne i32 %bf.cast88, 0
  br i1 %tobool89, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %lor.lhs.false.82, %if.then.74
  store i32 0, i32* %retval
  br label %return

if.end.91:                                        ; preds = %lor.lhs.false.82
  %37 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl92 = bitcast %union.tree_node* %37 to %struct.tree_decl*
  %initial93 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl92, i32 0, i32 12
  %38 = load %union.tree_node*, %union.tree_node** %initial93, align 8
  %cmp94 = icmp ne %union.tree_node* %38, null
  br i1 %cmp94, label %land.lhs.true.95, label %if.end.100

land.lhs.true.95:                                 ; preds = %if.end.91
  %39 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl96 = bitcast %union.tree_node* %39 to %struct.tree_decl*
  %initial97 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl96, i32 0, i32 12
  %40 = load %union.tree_node*, %union.tree_node** %initial97, align 8
  %cmp98 = icmp ne %union.tree_node* %40, null
  br i1 %cmp98, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %land.lhs.true.95
  store i32 1, i32* %retval
  br label %return

if.end.100:                                       ; preds = %land.lhs.true.95, %if.end.91
  %41 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common101 = bitcast %union.tree_node* %41 to %struct.tree_common*
  %public_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common101, i32 0, i32 2
  %bf.load102 = load i32, i32* %public_flag, align 8
  %bf.lshr103 = lshr i32 %bf.load102, 19
  %bf.clear104 = and i32 %bf.lshr103, 1
  %42 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common105 = bitcast %union.tree_node* %42 to %struct.tree_common*
  %public_flag106 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common105, i32 0, i32 2
  %bf.load107 = load i32, i32* %public_flag106, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 19
  %bf.clear109 = and i32 %bf.lshr108, 1
  %cmp110 = icmp ne i32 %bf.clear104, %bf.clear109
  br i1 %cmp110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.end.100
  store i32 3, i32* %retval
  br label %return

if.end.112:                                       ; preds = %if.end.100
  store i32 0, i32* %retval
  br label %return

if.else.113:                                      ; preds = %if.else.71
  %43 = load %struct.binding_level*, %struct.binding_level** @current_binding_level, align 8
  %parm_flag = getelementptr inbounds %struct.binding_level, %struct.binding_level* %43, i32 0, i32 6
  %44 = load i8, i8* %parm_flag, align 1
  %conv = sext i8 %44 to i32
  %tobool114 = icmp ne i32 %conv, 0
  br i1 %tobool114, label %land.lhs.true.115, label %if.else.129

land.lhs.true.115:                                ; preds = %if.else.113
  %45 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %common116 = bitcast %union.tree_node* %45 to %struct.tree_common*
  %asm_written_flag = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common116, i32 0, i32 2
  %bf.load117 = load i32, i32* %asm_written_flag, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 14
  %bf.clear119 = and i32 %bf.lshr118, 1
  %tobool120 = icmp ne i32 %bf.clear119, 0
  br i1 %tobool120, label %land.lhs.true.121, label %if.else.129

land.lhs.true.121:                                ; preds = %land.lhs.true.115
  %46 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %common122 = bitcast %union.tree_node* %46 to %struct.tree_common*
  %asm_written_flag123 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common122, i32 0, i32 2
  %bf.load124 = load i32, i32* %asm_written_flag123, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 14
  %bf.clear126 = and i32 %bf.lshr125, 1
  %tobool127 = icmp ne i32 %bf.clear126, 0
  br i1 %tobool127, label %if.else.129, label %if.then.128

if.then.128:                                      ; preds = %land.lhs.true.121
  store i32 0, i32* %retval
  br label %return

if.else.129:                                      ; preds = %land.lhs.true.121, %land.lhs.true.115, %if.else.113
  %47 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl130 = bitcast %union.tree_node* %47 to %struct.tree_decl*
  %external_flag131 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl130, i32 0, i32 5
  %48 = bitcast i48* %external_flag131 to i64*
  %bf.load132 = load i64, i64* %48, align 8
  %bf.lshr133 = lshr i64 %bf.load132, 8
  %bf.clear134 = and i64 %bf.lshr133, 1
  %bf.cast135 = trunc i64 %bf.clear134 to i32
  %tobool136 = icmp ne i32 %bf.cast135, 0
  br i1 %tobool136, label %land.lhs.true.137, label %land.lhs.true.145

land.lhs.true.137:                                ; preds = %if.else.129
  %49 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl138 = bitcast %union.tree_node* %49 to %struct.tree_decl*
  %external_flag139 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl138, i32 0, i32 5
  %50 = bitcast i48* %external_flag139 to i64*
  %bf.load140 = load i64, i64* %50, align 8
  %bf.lshr141 = lshr i64 %bf.load140, 8
  %bf.clear142 = and i64 %bf.lshr141, 1
  %bf.cast143 = trunc i64 %bf.clear142 to i32
  %tobool144 = icmp ne i32 %bf.cast143, 0
  br i1 %tobool144, label %if.end.153, label %land.lhs.true.145

land.lhs.true.145:                                ; preds = %land.lhs.true.137, %if.else.129
  %51 = load %union.tree_node*, %union.tree_node** %newdecl.addr, align 8
  %decl146 = bitcast %union.tree_node* %51 to %struct.tree_decl*
  %context147 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl146, i32 0, i32 9
  %52 = load %union.tree_node*, %union.tree_node** %context147, align 8
  %53 = load %union.tree_node*, %union.tree_node** %olddecl.addr, align 8
  %decl148 = bitcast %union.tree_node* %53 to %struct.tree_decl*
  %context149 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl148, i32 0, i32 9
  %54 = load %union.tree_node*, %union.tree_node** %context149, align 8
  %cmp150 = icmp eq %union.tree_node* %52, %54
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %land.lhs.true.145
  store i32 2, i32* %retval
  br label %return

if.end.153:                                       ; preds = %land.lhs.true.145, %land.lhs.true.137
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.153, %if.then.152, %if.then.128, %if.end.112, %if.then.111, %if.then.99, %if.then.90, %if.end.70, %if.then.69, %if.end.27, %if.then.26, %if.then.14, %if.then.5
  %55 = load i32, i32* %retval
  ret i32 %55
}

declare %union.tree_node* @common_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @merge_attributes(%union.tree_node*, %union.tree_node*) #1

declare void @make_var_volatile(%union.tree_node*) #1

declare void @merge_weak(%union.tree_node*, %union.tree_node*) #1

declare i32 @chain_member(%union.tree_node*, %union.tree_node*) #1

declare void @shadow_warning(i8*, %union.tree_node*, %union.tree_node*) #1

declare i8* @fname_as_string(i32) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

declare %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

declare %union.tree_node* @build_string(i32, i8*) #1

declare void @warn_deprecated_use(%union.tree_node*) #1

declare %union.tree_node* @unsigned_type(%union.tree_node*) #1

declare %union.tree_node* @build_complex_type(%union.tree_node*) #1

declare %union.tree_node* @signed_type(%union.tree_node*) #1

declare %union.tree_node* @build_range_type(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @variable_size(%union.tree_node*) #1

declare %union.tree_node* @c_build_qualified_type(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @grokparms(%union.tree_node* %parms_info, i32 %funcdef_flag) #0 {
entry:
  %retval = alloca %union.tree_node*, align 8
  %parms_info.addr = alloca %union.tree_node*, align 8
  %funcdef_flag.addr = alloca i32, align 4
  %first_parm = alloca %union.tree_node*, align 8
  %parm = alloca %union.tree_node*, align 8
  %typelt = alloca %union.tree_node*, align 8
  %type = alloca %union.tree_node*, align 8
  store %union.tree_node* %parms_info, %union.tree_node** %parms_info.addr, align 8
  store i32 %funcdef_flag, i32* %funcdef_flag.addr, align 4
  %0 = load %union.tree_node*, %union.tree_node** %parms_info.addr, align 8
  %common = bitcast %union.tree_node* %0 to %struct.tree_common*
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 0
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8
  store %union.tree_node* %1, %union.tree_node** %first_parm, align 8
  %2 = load %union.tree_node*, %union.tree_node** %parms_info.addr, align 8
  %list = bitcast %union.tree_node* %2 to %struct.tree_list*
  %purpose = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list, i32 0, i32 1
  %3 = load %union.tree_node*, %union.tree_node** %purpose, align 8
  store %union.tree_node* %3, %union.tree_node** @last_function_parms, align 8
  %4 = load %union.tree_node*, %union.tree_node** %parms_info.addr, align 8
  %list1 = bitcast %union.tree_node* %4 to %struct.tree_list*
  %value = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list1, i32 0, i32 2
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8
  store %union.tree_node* %5, %union.tree_node** @last_function_parm_tags, align 8
  %6 = load i32, i32* @warn_strict_prototypes, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %7 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  %cmp = icmp eq %union.tree_node* %7, null
  br i1 %cmp, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %8 = load i32, i32* %funcdef_flag.addr, align 4
  %tobool3 = icmp ne i32 %8, 0
  br i1 %tobool3, label %if.end, label %land.lhs.true.4

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %9 = load i32, i32* @in_system_header, align 4
  %tobool5 = icmp ne i32 %9, 0
  br i1 %tobool5, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true.4
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.228, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.4, %land.lhs.true.2, %land.lhs.true, %entry
  %10 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  %cmp6 = icmp ne %union.tree_node* %10, null
  br i1 %cmp6, label %land.lhs.true.7, label %if.else

land.lhs.true.7:                                  ; preds = %if.end
  %11 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  %list8 = bitcast %union.tree_node* %11 to %struct.tree_list*
  %value9 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list8, i32 0, i32 2
  %12 = load %union.tree_node*, %union.tree_node** %value9, align 8
  %common10 = bitcast %union.tree_node* %12 to %struct.tree_common*
  %code = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common10, i32 0, i32 2
  %bf.load = load i32, i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp11 = icmp eq i32 %bf.clear, 1
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %land.lhs.true.7
  %13 = load i32, i32* %funcdef_flag.addr, align 4
  %tobool13 = icmp ne i32 %13, 0
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.then.12
  call void (i8*, ...) @pedwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.352, i32 0, i32 0))
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %if.then.12
  %14 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  store %union.tree_node* %14, %union.tree_node** @last_function_parms, align 8
  store %union.tree_node* null, %union.tree_node** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.7, %if.end
  %15 = load %union.tree_node*, %union.tree_node** @last_function_parms, align 8
  store %union.tree_node* %15, %union.tree_node** %parm, align 8
  %16 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  store %union.tree_node* %16, %union.tree_node** %typelt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %17 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %tobool16 = icmp ne %union.tree_node* %17, null
  br i1 %tobool16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common17 = bitcast %union.tree_node* %18 to %struct.tree_common*
  %code18 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common17, i32 0, i32 2
  %bf.load19 = load i32, i32* %code18, align 8
  %bf.clear20 = and i32 %bf.load19, 255
  %cmp21 = icmp eq i32 %bf.clear20, 35
  br i1 %cmp21, label %if.then.22, label %if.end.49

if.then.22:                                       ; preds = %for.body
  %19 = load %union.tree_node*, %union.tree_node** %typelt, align 8
  %list23 = bitcast %union.tree_node* %19 to %struct.tree_list*
  %value24 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list23, i32 0, i32 2
  %20 = load %union.tree_node*, %union.tree_node** %value24, align 8
  store %union.tree_node* %20, %union.tree_node** %type, align 8
  %21 = load %union.tree_node*, %union.tree_node** %type, align 8
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %cmp25 = icmp eq %union.tree_node* %21, %22
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.22
  br label %for.inc

if.end.27:                                        ; preds = %if.then.22
  %23 = load %union.tree_node*, %union.tree_node** %type, align 8
  %type28 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i32 0, i32 2
  %24 = load %union.tree_node*, %union.tree_node** %size, align 8
  %cmp29 = icmp ne %union.tree_node* %24, null
  br i1 %cmp29, label %if.end.46, label %if.then.30

if.then.30:                                       ; preds = %if.end.27
  %25 = load i32, i32* %funcdef_flag.addr, align 4
  %tobool31 = icmp ne i32 %25, 0
  br i1 %tobool31, label %land.lhs.true.32, label %if.else.37

land.lhs.true.32:                                 ; preds = %if.then.30
  %26 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl = bitcast %union.tree_node* %26 to %struct.tree_decl*
  %name = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl, i32 0, i32 8
  %27 = load %union.tree_node*, %union.tree_node** %name, align 8
  %cmp33 = icmp ne %union.tree_node* %27, null
  br i1 %cmp33, label %if.then.34, label %if.else.37

if.then.34:                                       ; preds = %land.lhs.true.32
  %28 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %decl35 = bitcast %union.tree_node* %28 to %struct.tree_decl*
  %name36 = getelementptr inbounds %struct.tree_decl, %struct.tree_decl* %decl35, i32 0, i32 8
  %29 = load %union.tree_node*, %union.tree_node** %name36, align 8
  %identifier = bitcast %union.tree_node* %29 to %struct.tree_identifier*
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 1
  %30 = load i8*, i8** %str, align 8
  call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.245, i32 0, i32 0), i8* %30)
  br label %if.end.38

if.else.37:                                       ; preds = %land.lhs.true.32, %if.then.30
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.353, i32 0, i32 0))
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.37, %if.then.34
  %31 = load i32, i32* %funcdef_flag.addr, align 4
  %tobool39 = icmp ne i32 %31, 0
  br i1 %tobool39, label %if.then.40, label %if.end.45

if.then.40:                                       ; preds = %if.end.38
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %33 = load %union.tree_node*, %union.tree_node** %typelt, align 8
  %list41 = bitcast %union.tree_node* %33 to %struct.tree_list*
  %value42 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %list41, i32 0, i32 2
  store %union.tree_node* %32, %union.tree_node** %value42, align 8
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*], [51 x %union.tree_node*]* @global_trees, i32 0, i64 0), align 8
  %35 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common43 = bitcast %union.tree_node* %35 to %struct.tree_common*
  %type44 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common43, i32 0, i32 1
  store %union.tree_node* %34, %union.tree_node** %type44, align 8
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.40, %if.end.38
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.end.27
  %36 = load %union.tree_node*, %union.tree_node** %typelt, align 8
  %common47 = bitcast %union.tree_node* %36 to %struct.tree_common*
  %chain48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common47, i32 0, i32 0
  %37 = load %union.tree_node*, %union.tree_node** %chain48, align 8
  store %union.tree_node* %37, %union.tree_node** %typelt, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.46, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.49, %if.then.26
  %38 = load %union.tree_node*, %union.tree_node** %parm, align 8
  %common50 = bitcast %union.tree_node* %38 to %struct.tree_common*
  %chain51 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common50, i32 0, i32 0
  %39 = load %union.tree_node*, %union.tree_node** %chain51, align 8
  store %union.tree_node* %39, %union.tree_node** %parm, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %40 = load %union.tree_node*, %union.tree_node** %first_parm, align 8
  store %union.tree_node* %40, %union.tree_node** %retval
  br label %return

return:                                           ; preds = %for.end, %if.end.15
  %41 = load %union.tree_node*, %union.tree_node** %retval
  ret %union.tree_node* %41
}

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %union.tree_node* @build_decl_attribute_variant(%union.tree_node*, %union.tree_node*) #1

declare void @c_apply_type_quals_to_decl(i32, %union.tree_node*) #1

declare i32 @mark_addressable(%union.tree_node*) #1

declare void @timevar_push(i32) #1

declare i32 @tree_inlinable_function_p(%union.tree_node*) #1

declare i32 @defer_fn(%union.tree_node*) #1

declare void @timevar_pop(i32) #1

declare void @optimize_inline_calls(%union.tree_node*) #1

declare void @expand_pending_sizes(%union.tree_node*) #1

declare void @push_function_context() #1

declare void @mark_varargs() #1

declare void @expand_function_start(%union.tree_node*, i32) #1

declare void @expand_main_function() #1

declare void @expand_stmt(%union.tree_node*) #1

declare void @expand_function_end(i8*, i32, i32) #1

declare void @ggc_push_context() #1

declare void @rest_of_compilation(%union.tree_node*) #1

declare void @ggc_pop_context() #1

declare void @pop_function_context() #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
