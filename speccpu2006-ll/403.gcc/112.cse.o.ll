; ModuleID = 'cse.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.processor_costs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32 }
%struct.reg_eqv_elem = type { i32, i32 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.qty_table_elem = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32 }
%struct.cse_reg_info = type { %struct.cse_reg_info*, %struct.cse_reg_info*, i32, i32, i32, i32 }
%struct.table_elt = type { %struct.rtx_def*, %struct.rtx_def*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, i32, i32, i32, i8, i8, i8 }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.cse_basic_block_data = type { i32, i32, i32, %struct.rtx_def*, i32, [10 x %struct.branch_path] }
%struct.branch_path = type { %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.set = type { %struct.rtx_def*, %struct.rtx_def*, %struct.table_elt*, i32, i32, %struct.rtx_def*, i8, i8, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.table_elt* }
%struct.check_dependence_data = type { i32, %struct.rtx_def* }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"Equivalence chain for \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c": \0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@target_flags = external global i32, align 4
@x86_partial_reg_stall = external constant i32, align 4
@ix86_cpu = external global i32, align 4
@mode_size = external constant [59 x i8], align 16
@x86_zero_extend_with_and = external constant i32, align 4
@ix86_cost = external global %struct.processor_costs*, align 8
@x86_decompose_lea = external constant i32, align 4
@mode_class = external constant [59 x i32], align 16
@mode_bitsize = external constant [59 x i16], align 16
@flag_pic = external global i32, align 4
@rtx_format = external constant [153 x i8*], align 16
@rtx_length = external constant [153 x i8], align 16
@uid_cuid = internal global i32* null, align 8
@rtx_class = external constant [153 x i8], align 16
@max_uid = internal global i32 0, align 4
@cse_jumps_altered = internal global i32 0, align 4
@recorded_label_ref = internal global i32 0, align 4
@constant_pool_entries_cost = internal global i32 0, align 4
@max_reg = internal global i32 0, align 4
@max_insn_uid = internal global i32 0, align 4
@reg_eqv_table = internal global %struct.reg_eqv_elem* null, align 8
@n_elements_made = internal global i32 0, align 4
@cse_altered = internal global i32 0, align 4
@flag_cse_follow_jumps = external global i32, align 4
@flag_cse_skip_blocks = external global i32, align 4
@cse_basic_block_start = internal global i32 0, align 4
@cse_basic_block_end = internal global i32 0, align 4
@max_qty = internal global i32 0, align 4
@.str.3 = private unnamed_addr constant [45 x i8] c";; Processing block from %d to %d, %d sets.\0A\00", align 1
@max_elements_made = internal global i32 0, align 4
@n_basic_blocks = external global i32, align 4
@basic_block_info = external global %struct.varray_head_tag*, align 8
@qty_table = internal global %struct.qty_table_elem* null, align 8
@prev_insn = internal global %struct.rtx_def* null, align 8
@next_qty = internal global i32 0, align 4
@.str.4 = private unnamed_addr constant [6 x i8] c"cse.c\00", align 1
@__FUNCTION__.cse_basic_block = private unnamed_addr constant [16 x i8] c"cse_basic_block\00", align 1
@reg_hash = internal global [128 x %struct.cse_reg_info*] zeroinitializer, align 16
@cse_reg_info_used_list = internal global %struct.cse_reg_info* null, align 8
@cse_reg_info_free_list = internal global %struct.cse_reg_info* null, align 8
@cse_reg_info_used_list_end = internal global %struct.cse_reg_info* null, align 8
@cached_cse_reg_info = internal global %struct.cse_reg_info* null, align 8
@hard_regs_in_table = internal global i64 0, align 8
@table = internal global [32 x %struct.table_elt*] zeroinitializer, align 16
@free_element_chain = internal global %struct.table_elt* null, align 8
@cached_regno = internal global i32 0, align 4
@__FUNCTION__.invalidate = private unnamed_addr constant [11 x i8] c"invalidate\00", align 1
@global_rtl = external global [11 x %struct.rtx_def*], align 16
@pic_offset_table_rtx = external global %struct.rtx_def*, align 8
@global_regs = external global [53 x i8], align 16
@fixed_regs = external global [53 x i8], align 16
@do_not_record = internal global i32 0, align 4
@hash_arg_in_memory = internal global i32 0, align 4
@__FUNCTION__.canon_hash = private unnamed_addr constant [11 x i8] c"canon_hash\00", align 1
@__FUNCTION__.exp_equiv_p = private unnamed_addr constant [12 x i8] c"exp_equiv_p\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*], align 16
@const_true_rtx = external global %struct.rtx_def*, align 8
@flag_unsafe_math_optimizations = external global i32, align 4
@word_mode = external global i32, align 4
@flag_expensive_optimizations = external global i32, align 4
@regclass_map = external constant [53 x i32], align 16
@cfun = external global %struct.function*, align 8
@insn_data = external constant [0 x %struct.insn_data], align 8
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]], align 16
@last_jump_equiv_class = internal global %struct.table_elt* null, align 8
@__FUNCTION__.make_regs_eqv = private unnamed_addr constant [14 x i8] c"make_regs_eqv\00", align 1
@reg_n_info = external global %struct.varray_head_tag*, align 8
@__FUNCTION__.make_new_qty = private unnamed_addr constant [13 x i8] c"make_new_qty\00", align 1
@__FUNCTION__.insert = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@this_insn = internal global %struct.rtx_def* null, align 8
@regs_invalidated_by_call = external global i64, align 8
@mode_wider_mode = external constant [59 x i8], align 16
@flag_float_store = external global i32, align 4
@__FUNCTION__.cse_set_around_loop = private unnamed_addr constant [20 x i8] c"cse_set_around_loop\00", align 1

; Function Attrs: nounwind uwtable
define void @dump_class(%struct.table_elt* %classp) #0 {
entry:
  %classp.addr = alloca %struct.table_elt*, align 8
  %elt = alloca %struct.table_elt*, align 8
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 0
  %3 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  call void @print_rtl(%struct._IO_FILE* %1, %struct.rtx_def* %3)
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0))
  %5 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %5, i32 0, i32 6
  %6 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %6, %struct.table_elt** %elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool = icmp ne %struct.table_elt* %7, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 0
  %10 = load %struct.rtx_def*, %struct.rtx_def** %exp2, align 8
  call void @print_rtl(%struct._IO_FILE* %8, %struct.rtx_def* %10)
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 4
  %13 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %13, %struct.table_elt** %elt, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare void @print_rtl(%struct._IO_FILE*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @rtx_cost(%struct.rtx_def* %x, i32 %outer_code) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %outer_code.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %total = alloca i32, align 4
  %value = alloca i64, align 8
  %value276 = alloca i64, align 8
  %nbits = alloca i32, align 4
  %val = alloca i64, align 8
  %val520 = alloca i64, align 8
  %code688 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %outer_code, i32* %outer_code.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  switch i32 %3, label %sw.default [
    i32 78, label %sw.bb
    i32 79, label %sw.bb.12
    i32 81, label %sw.bb.12
    i32 80, label %sw.bb.12
    i32 82, label %sw.bb.12
    i32 48, label %sw.bb.13
  ]

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load1 = load i32, i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 54
  br i1 %cmp3, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 1
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx8 to i64*
  %9 = load i64, i64* %rtwint, align 8
  %call = call i32 @exact_log2_wide(i64 %9)
  %cmp9 = icmp sge i32 %call, 0
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %land.lhs.true
  store i32 2, i32* %total, align 4
  br label %if.end.11

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  store i32 20, i32* %total, align 4
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  br label %sw.epilog

sw.bb.12:                                         ; preds = %if.end, %if.end, %if.end, %if.end
  store i32 28, i32* %total, align 4
  br label %sw.epilog

sw.bb.13:                                         ; preds = %if.end
  store i32 0, i32* %total, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  store i32 4, i32* %total, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.13, %sw.bb.12, %if.end.11
  %10 = load i32, i32* %code, align 4
  switch i32 %10, label %sw.default.706 [
    i32 61, label %sw.bb.14
    i32 63, label %sw.bb.15
    i32 121, label %sw.bb.98
    i32 120, label %sw.bb.125
    i32 87, label %sw.bb.129
    i32 88, label %sw.bb.183
    i32 89, label %sw.bb.183
    i32 90, label %sw.bb.183
    i32 91, label %sw.bb.183
    i32 78, label %sw.bb.267
    i32 79, label %sw.bb.299
    i32 81, label %sw.bb.299
    i32 80, label %sw.bb.299
    i32 82, label %sw.bb.299
    i32 75, label %sw.bb.303
    i32 83, label %sw.bb.591
    i32 84, label %sw.bb.591
    i32 85, label %sw.bb.591
    i32 76, label %sw.bb.591
    i32 77, label %sw.bb.633
    i32 86, label %sw.bb.633
    i32 54, label %sw.bb.653
    i32 58, label %sw.bb.653
    i32 67, label %sw.bb.653
    i32 68, label %sw.bb.653
    i32 55, label %sw.bb.687
  ]

sw.bb.14:                                         ; preds = %sw.epilog
  store i32 0, i32* %retval
  br label %return

sw.bb.15:                                         ; preds = %sw.epilog
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load16 = load i32, i32* %12, align 8
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load21 = load i32, i32* %15, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %cmp24 = icmp eq i32 %bf.clear17, %bf.clear23
  br i1 %cmp24, label %if.end.97, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load25 = load i32, i32* %17, align 8
  %bf.lshr26 = lshr i32 %bf.load25, 16
  %bf.clear27 = and i32 %bf.lshr26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 3
  br i1 %cmp28, label %land.lhs.true.51, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %lor.lhs.false
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load30 = load i32, i32* %19, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 4
  br i1 %cmp33, label %land.lhs.true.51, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.lhs.false.29
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load35 = load i32, i32* %21, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %cmp38 = icmp eq i32 %bf.clear37, 2
  br i1 %cmp38, label %land.lhs.true.39, label %lor.lhs.false.43

land.lhs.true.39:                                 ; preds = %lor.lhs.false.34
  %22 = load i32, i32* @target_flags, align 4
  %and = and i32 %22, 33554432
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true.51, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %land.lhs.true.39
  %23 = load i32, i32* @x86_partial_reg_stall, align 4
  %24 = load i32, i32* @ix86_cpu, align 4
  %shl = shl i32 1, %24
  %and41 = and i32 %23, %shl
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %lor.lhs.false.43, label %land.lhs.true.51

lor.lhs.false.43:                                 ; preds = %lor.lhs.false.40, %lor.lhs.false.34
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load44 = load i32, i32* %26, align 8
  %bf.lshr45 = lshr i32 %bf.load44, 16
  %bf.clear46 = and i32 %bf.lshr45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 5
  br i1 %cmp47, label %land.lhs.true.48, label %if.then.90

land.lhs.true.48:                                 ; preds = %lor.lhs.false.43
  %27 = load i32, i32* @target_flags, align 4
  %and49 = and i32 %27, 33554432
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %land.lhs.true.51, label %if.then.90

land.lhs.true.51:                                 ; preds = %land.lhs.true.48, %lor.lhs.false.40, %land.lhs.true.39, %lor.lhs.false.29, %lor.lhs.false
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i32 0, i64 0
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx54, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load55 = load i32, i32* %30, align 8
  %bf.lshr56 = lshr i32 %bf.load55, 16
  %bf.clear57 = and i32 %bf.lshr56, 255
  %cmp58 = icmp eq i32 %bf.clear57, 3
  br i1 %cmp58, label %if.end.97, label %lor.lhs.false.59

lor.lhs.false.59:                                 ; preds = %land.lhs.true.51
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load63 = load i32, i32* %33, align 8
  %bf.lshr64 = lshr i32 %bf.load63, 16
  %bf.clear65 = and i32 %bf.lshr64, 255
  %cmp66 = icmp eq i32 %bf.clear65, 4
  br i1 %cmp66, label %if.end.97, label %lor.lhs.false.67

lor.lhs.false.67:                                 ; preds = %lor.lhs.false.59
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load68 = load i32, i32* %35, align 8
  %bf.lshr69 = lshr i32 %bf.load68, 16
  %bf.clear70 = and i32 %bf.lshr69, 255
  %cmp71 = icmp eq i32 %bf.clear70, 2
  br i1 %cmp71, label %land.lhs.true.72, label %lor.lhs.false.79

land.lhs.true.72:                                 ; preds = %lor.lhs.false.67
  %36 = load i32, i32* @target_flags, align 4
  %and73 = and i32 %36, 33554432
  %tobool74 = icmp ne i32 %and73, 0
  br i1 %tobool74, label %if.end.97, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %land.lhs.true.72
  %37 = load i32, i32* @x86_partial_reg_stall, align 4
  %38 = load i32, i32* @ix86_cpu, align 4
  %shl76 = shl i32 1, %38
  %and77 = and i32 %37, %shl76
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %lor.lhs.false.79, label %if.end.97

lor.lhs.false.79:                                 ; preds = %lor.lhs.false.75, %lor.lhs.false.67
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i32 0, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx82, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load83 = load i32, i32* %41, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 5
  br i1 %cmp86, label %land.lhs.true.87, label %if.then.90

land.lhs.true.87:                                 ; preds = %lor.lhs.false.79
  %42 = load i32, i32* @target_flags, align 4
  %and88 = and i32 %42, 33554432
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.end.97, label %if.then.90

if.then.90:                                       ; preds = %land.lhs.true.87, %lor.lhs.false.79, %land.lhs.true.48, %lor.lhs.false.43
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load91 = load i32, i32* %44, align 8
  %bf.lshr92 = lshr i32 %bf.load91, 16
  %bf.clear93 = and i32 %bf.lshr92, 255
  %idxprom = sext i32 %bf.clear93 to i64
  %arrayidx94 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %45 = load i8, i8* %arrayidx94, align 1
  %conv = zext i8 %45 to i32
  %46 = load i32, i32* @target_flags, align 4
  %and95 = and i32 %46, 33554432
  %tobool96 = icmp ne i32 %and95, 0
  %cond = select i1 %tobool96, i32 8, i32 4
  %div = sdiv i32 %conv, %cond
  %add = add nsw i32 2, %div
  %mul = mul nsw i32 %add, 4
  store i32 %mul, i32* %retval
  br label %return

if.end.97:                                        ; preds = %land.lhs.true.87, %lor.lhs.false.75, %land.lhs.true.72, %lor.lhs.false.59, %land.lhs.true.51, %sw.bb.15
  br label %sw.epilog.707

sw.bb.98:                                         ; preds = %sw.epilog
  %47 = load i32, i32* @target_flags, align 4
  %and99 = and i32 %47, 33554432
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %land.lhs.true.101, label %if.else.117

land.lhs.true.101:                                ; preds = %sw.bb.98
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load102 = load i32, i32* %49, align 8
  %bf.lshr103 = lshr i32 %bf.load102, 16
  %bf.clear104 = and i32 %bf.lshr103, 255
  %cmp105 = icmp eq i32 %bf.clear104, 5
  br i1 %cmp105, label %land.lhs.true.107, label %if.else.117

land.lhs.true.107:                                ; preds = %land.lhs.true.101
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load111 = load i32, i32* %52, align 8
  %bf.lshr112 = lshr i32 %bf.load111, 16
  %bf.clear113 = and i32 %bf.lshr112, 255
  %cmp114 = icmp eq i32 %bf.clear113, 4
  br i1 %cmp114, label %if.then.116, label %if.else.117

if.then.116:                                      ; preds = %land.lhs.true.107
  store i32 1, i32* %total, align 4
  br label %egress_rtx_costs

if.else.117:                                      ; preds = %land.lhs.true.107, %land.lhs.true.101, %sw.bb.98
  br label %do.body

do.body:                                          ; preds = %if.else.117
  %53 = load i32, i32* @x86_zero_extend_with_and, align 4
  %54 = load i32, i32* @ix86_cpu, align 4
  %shl118 = shl i32 1, %54
  %and119 = and i32 %53, %shl118
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.body
  %55 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %add121 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %55, i32 0, i32 0
  %56 = load i32, i32* %add121, align 4
  br label %cond.end

cond.false:                                       ; preds = %do.body
  %57 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %movzx = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %57, i32 0, i32 8
  %58 = load i32, i32* %movzx, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond122 = phi i32 [ %56, %cond.true ], [ %58, %cond.false ]
  %mul123 = mul nsw i32 %cond122, 4
  store i32 %mul123, i32* %total, align 4
  br label %egress_rtx_costs

do.end:                                           ; No predecessors!
  br label %if.end.124

if.end.124:                                       ; preds = %do.end
  br label %sw.epilog.707

sw.bb.125:                                        ; preds = %sw.epilog
  br label %do.body.126

do.body.126:                                      ; preds = %sw.bb.125
  %59 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %movsx = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %59, i32 0, i32 7
  %60 = load i32, i32* %movsx, align 4
  %mul127 = mul nsw i32 %60, 4
  store i32 %mul127, i32* %total, align 4
  br label %egress_rtx_costs

do.end.128:                                       ; No predecessors!
  br label %sw.epilog.707

sw.bb.129:                                        ; preds = %sw.epilog
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 1
  %rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx132, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load133 = load i32, i32* %63, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 54
  br i1 %cmp135, label %land.lhs.true.137, label %if.end.182

land.lhs.true.137:                                ; preds = %sw.bb.129
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rtx140, align 8
  %66 = bitcast %struct.rtx_def* %65 to i32*
  %bf.load141 = load i32, i32* %66, align 8
  %bf.lshr142 = lshr i32 %bf.load141, 16
  %bf.clear143 = and i32 %bf.lshr142, 255
  %cmp144 = icmp ne i32 %bf.clear143, 5
  br i1 %cmp144, label %if.then.149, label %lor.lhs.false.146

lor.lhs.false.146:                                ; preds = %land.lhs.true.137
  %67 = load i32, i32* @target_flags, align 4
  %and147 = and i32 %67, 33554432
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %if.then.149, label %if.end.182

if.then.149:                                      ; preds = %lor.lhs.false.146, %land.lhs.true.137
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 1
  %rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx152, align 8
  %fld153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i32 0, i64 0
  %rtwint155 = bitcast %union.rtunion_def* %arrayidx154 to i64*
  %70 = load i64, i64* %rtwint155, align 8
  store i64 %70, i64* %value, align 8
  %71 = load i64, i64* %value, align 8
  %cmp156 = icmp eq i64 %71, 1
  br i1 %cmp156, label %if.then.158, label %if.end.163

if.then.158:                                      ; preds = %if.then.149
  br label %do.body.159

do.body.159:                                      ; preds = %if.then.158
  %72 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %add160 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %72, i32 0, i32 0
  %73 = load i32, i32* %add160, align 4
  %mul161 = mul nsw i32 %73, 4
  store i32 %mul161, i32* %total, align 4
  br label %egress_rtx_costs

do.end.162:                                       ; No predecessors!
  br label %if.end.163

if.end.163:                                       ; preds = %do.end.162, %if.then.149
  %74 = load i64, i64* %value, align 8
  %cmp164 = icmp eq i64 %74, 2
  br i1 %cmp164, label %land.lhs.true.169, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %if.end.163
  %75 = load i64, i64* %value, align 8
  %cmp167 = icmp eq i64 %75, 3
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.181

land.lhs.true.169:                                ; preds = %lor.lhs.false.166, %if.end.163
  %76 = load i32, i32* @x86_decompose_lea, align 4
  %77 = load i32, i32* @ix86_cpu, align 4
  %shl170 = shl i32 1, %77
  %and171 = and i32 %76, %shl170
  %tobool172 = icmp ne i32 %and171, 0
  br i1 %tobool172, label %if.end.181, label %land.lhs.true.173

land.lhs.true.173:                                ; preds = %land.lhs.true.169
  %78 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %lea = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %78, i32 0, i32 1
  %79 = load i32, i32* %lea, align 4
  %80 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_const = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %80, i32 0, i32 3
  %81 = load i32, i32* %shift_const, align 4
  %cmp174 = icmp sle i32 %79, %81
  br i1 %cmp174, label %if.then.176, label %if.end.181

if.then.176:                                      ; preds = %land.lhs.true.173
  br label %do.body.177

do.body.177:                                      ; preds = %if.then.176
  %82 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %lea178 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %82, i32 0, i32 1
  %83 = load i32, i32* %lea178, align 4
  %mul179 = mul nsw i32 %83, 4
  store i32 %mul179, i32* %total, align 4
  br label %egress_rtx_costs

do.end.180:                                       ; No predecessors!
  br label %if.end.181

if.end.181:                                       ; preds = %do.end.180, %land.lhs.true.173, %land.lhs.true.169, %lor.lhs.false.166
  br label %if.end.182

if.end.182:                                       ; preds = %if.end.181, %lor.lhs.false.146, %sw.bb.129
  br label %sw.bb.183

sw.bb.183:                                        ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %if.end.182
  %84 = load i32, i32* @target_flags, align 4
  %and184 = and i32 %84, 33554432
  %tobool185 = icmp ne i32 %and184, 0
  br i1 %tobool185, label %if.else.247, label %land.lhs.true.186

land.lhs.true.186:                                ; preds = %sw.bb.183
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load190 = load i32, i32* %87, align 8
  %bf.lshr191 = lshr i32 %bf.load190, 16
  %bf.clear192 = and i32 %bf.lshr191, 255
  %cmp193 = icmp eq i32 %bf.clear192, 5
  br i1 %cmp193, label %if.then.195, label %if.else.247

if.then.195:                                      ; preds = %land.lhs.true.186
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 1
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx198, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load199 = load i32, i32* %90, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 54
  br i1 %cmp201, label %if.then.203, label %if.else.225

if.then.203:                                      ; preds = %if.then.195
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 1
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtwint209 = bitcast %union.rtunion_def* %arrayidx208 to i64*
  %93 = load i64, i64* %rtwint209, align 8
  %cmp210 = icmp sgt i64 %93, 32
  br i1 %cmp210, label %if.then.212, label %if.else.218

if.then.212:                                      ; preds = %if.then.203
  br label %do.body.213

do.body.213:                                      ; preds = %if.then.212
  %94 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_const214 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %94, i32 0, i32 3
  %95 = load i32, i32* %shift_const214, align 4
  %add215 = add nsw i32 %95, 2
  %mul216 = mul nsw i32 %add215, 4
  store i32 %mul216, i32* %total, align 4
  br label %egress_rtx_costs

do.end.217:                                       ; No predecessors!
  br label %if.end.224

if.else.218:                                      ; preds = %if.then.203
  br label %do.body.219

do.body.219:                                      ; preds = %if.else.218
  %96 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_const220 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %96, i32 0, i32 3
  %97 = load i32, i32* %shift_const220, align 4
  %mul221 = mul nsw i32 %97, 2
  %mul222 = mul nsw i32 %mul221, 4
  store i32 %mul222, i32* %total, align 4
  br label %egress_rtx_costs

do.end.223:                                       ; No predecessors!
  br label %if.end.224

if.end.224:                                       ; preds = %do.end.223, %do.end.217
  br label %if.end.246

if.else.225:                                      ; preds = %if.then.195
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 1
  %rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx228, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load229 = load i32, i32* %100, align 8
  %bf.clear230 = and i32 %bf.load229, 65535
  %cmp231 = icmp eq i32 %bf.clear230, 83
  br i1 %cmp231, label %if.then.233, label %if.else.238

if.then.233:                                      ; preds = %if.else.225
  br label %do.body.234

do.body.234:                                      ; preds = %if.then.233
  %101 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_var = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %101, i32 0, i32 2
  %102 = load i32, i32* %shift_var, align 4
  %mul235 = mul nsw i32 %102, 2
  %mul236 = mul nsw i32 %mul235, 4
  store i32 %mul236, i32* %total, align 4
  br label %egress_rtx_costs

do.end.237:                                       ; No predecessors!
  br label %if.end.245

if.else.238:                                      ; preds = %if.else.225
  br label %do.body.239

do.body.239:                                      ; preds = %if.else.238
  %103 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_var240 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %103, i32 0, i32 2
  %104 = load i32, i32* %shift_var240, align 4
  %mul241 = mul nsw i32 %104, 6
  %add242 = add nsw i32 %mul241, 2
  %mul243 = mul nsw i32 %add242, 4
  store i32 %mul243, i32* %total, align 4
  br label %egress_rtx_costs

do.end.244:                                       ; No predecessors!
  br label %if.end.245

if.end.245:                                       ; preds = %do.end.244, %do.end.237
  br label %if.end.246

if.end.246:                                       ; preds = %if.end.245, %if.end.224
  br label %if.end.266

if.else.247:                                      ; preds = %land.lhs.true.186, %sw.bb.183
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 1
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load251 = load i32, i32* %107, align 8
  %bf.clear252 = and i32 %bf.load251, 65535
  %cmp253 = icmp eq i32 %bf.clear252, 54
  br i1 %cmp253, label %if.then.255, label %if.else.260

if.then.255:                                      ; preds = %if.else.247
  br label %do.body.256

do.body.256:                                      ; preds = %if.then.255
  %108 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_const257 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %108, i32 0, i32 3
  %109 = load i32, i32* %shift_const257, align 4
  %mul258 = mul nsw i32 %109, 4
  store i32 %mul258, i32* %total, align 4
  br label %egress_rtx_costs

do.end.259:                                       ; No predecessors!
  br label %if.end.265

if.else.260:                                      ; preds = %if.else.247
  br label %do.body.261

do.body.261:                                      ; preds = %if.else.260
  %110 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %shift_var262 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %110, i32 0, i32 2
  %111 = load i32, i32* %shift_var262, align 4
  %mul263 = mul nsw i32 %111, 4
  store i32 %mul263, i32* %total, align 4
  br label %egress_rtx_costs

do.end.264:                                       ; No predecessors!
  br label %if.end.265

if.end.265:                                       ; preds = %do.end.264, %do.end.259
  br label %if.end.266

if.end.266:                                       ; preds = %if.end.265, %if.end.246
  br label %sw.epilog.707

sw.bb.267:                                        ; preds = %sw.epilog
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 1
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx270, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load271 = load i32, i32* %114, align 8
  %bf.clear272 = and i32 %bf.load271, 65535
  %cmp273 = icmp eq i32 %bf.clear272, 54
  br i1 %cmp273, label %if.then.275, label %if.else.290

if.then.275:                                      ; preds = %sw.bb.267
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 1
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 0
  %rtwint282 = bitcast %union.rtunion_def* %arrayidx281 to i64*
  %117 = load i64, i64* %rtwint282, align 8
  store i64 %117, i64* %value276, align 8
  store i32 0, i32* %nbits, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.275
  %118 = load i64, i64* %value276, align 8
  %cmp283 = icmp ne i64 %118, 0
  br i1 %cmp283, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %119 = load i32, i32* %nbits, align 4
  %inc = add nsw i32 %119, 1
  store i32 %inc, i32* %nbits, align 4
  %120 = load i64, i64* %value276, align 8
  %shr = lshr i64 %120, 1
  store i64 %shr, i64* %value276, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body.285

do.body.285:                                      ; preds = %while.end
  %121 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %mult_init = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %121, i32 0, i32 4
  %122 = load i32, i32* %mult_init, align 4
  %123 = load i32, i32* %nbits, align 4
  %124 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %mult_bit = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %124, i32 0, i32 5
  %125 = load i32, i32* %mult_bit, align 4
  %mul286 = mul nsw i32 %123, %125
  %add287 = add nsw i32 %122, %mul286
  %mul288 = mul nsw i32 %add287, 4
  store i32 %mul288, i32* %total, align 4
  br label %egress_rtx_costs

do.end.289:                                       ; No predecessors!
  br label %if.end.298

if.else.290:                                      ; preds = %sw.bb.267
  br label %do.body.291

do.body.291:                                      ; preds = %if.else.290
  %126 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %mult_init292 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %126, i32 0, i32 4
  %127 = load i32, i32* %mult_init292, align 4
  %128 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %mult_bit293 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %128, i32 0, i32 5
  %129 = load i32, i32* %mult_bit293, align 4
  %mul294 = mul nsw i32 7, %129
  %add295 = add nsw i32 %127, %mul294
  %mul296 = mul nsw i32 %add295, 4
  store i32 %mul296, i32* %total, align 4
  br label %egress_rtx_costs

do.end.297:                                       ; No predecessors!
  br label %if.end.298

if.end.298:                                       ; preds = %do.end.297, %do.end.289
  br label %sw.bb.299

sw.bb.299:                                        ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %if.end.298
  br label %do.body.300

do.body.300:                                      ; preds = %sw.bb.299
  %130 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %divide = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %130, i32 0, i32 6
  %131 = load i32, i32* %divide, align 4
  %mul301 = mul nsw i32 %131, 4
  store i32 %mul301, i32* %total, align 4
  br label %egress_rtx_costs

do.end.302:                                       ; No predecessors!
  br label %sw.bb.303

sw.bb.303:                                        ; preds = %sw.epilog, %do.end.302
  %132 = load i32, i32* @x86_decompose_lea, align 4
  %133 = load i32, i32* @ix86_cpu, align 4
  %shl304 = shl i32 1, %133
  %and305 = and i32 %132, %shl304
  %tobool306 = icmp ne i32 %and305, 0
  br i1 %tobool306, label %if.end.590, label %land.lhs.true.307

land.lhs.true.307:                                ; preds = %sw.bb.303
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load308 = load i32, i32* %135, align 8
  %bf.lshr309 = lshr i32 %bf.load308, 16
  %bf.clear310 = and i32 %bf.lshr309, 255
  %idxprom311 = sext i32 %bf.clear310 to i64
  %arrayidx312 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom311
  %136 = load i32, i32* %arrayidx312, align 4
  %cmp313 = icmp eq i32 %136, 1
  br i1 %cmp313, label %land.lhs.true.339, label %lor.lhs.false.315

lor.lhs.false.315:                                ; preds = %land.lhs.true.307
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load316 = load i32, i32* %138, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %idxprom319 = sext i32 %bf.clear318 to i64
  %arrayidx320 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom319
  %139 = load i32, i32* %arrayidx320, align 4
  %cmp321 = icmp eq i32 %139, 3
  br i1 %cmp321, label %land.lhs.true.339, label %lor.lhs.false.323

lor.lhs.false.323:                                ; preds = %lor.lhs.false.315
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %141 = bitcast %struct.rtx_def* %140 to i32*
  %bf.load324 = load i32, i32* %141, align 8
  %bf.lshr325 = lshr i32 %bf.load324, 16
  %bf.clear326 = and i32 %bf.lshr325, 255
  %idxprom327 = sext i32 %bf.clear326 to i64
  %arrayidx328 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom327
  %142 = load i32, i32* %arrayidx328, align 4
  %cmp329 = icmp eq i32 %142, 5
  br i1 %cmp329, label %land.lhs.true.339, label %lor.lhs.false.331

lor.lhs.false.331:                                ; preds = %lor.lhs.false.323
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load332 = load i32, i32* %144, align 8
  %bf.lshr333 = lshr i32 %bf.load332, 16
  %bf.clear334 = and i32 %bf.lshr333, 255
  %idxprom335 = sext i32 %bf.clear334 to i64
  %arrayidx336 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom335
  %145 = load i32, i32* %arrayidx336, align 4
  %cmp337 = icmp eq i32 %145, 7
  br i1 %cmp337, label %land.lhs.true.339, label %if.end.590

land.lhs.true.339:                                ; preds = %lor.lhs.false.331, %lor.lhs.false.323, %lor.lhs.false.315, %land.lhs.true.307
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load340 = load i32, i32* %147, align 8
  %bf.lshr341 = lshr i32 %bf.load340, 16
  %bf.clear342 = and i32 %bf.lshr341, 255
  %idxprom343 = sext i32 %bf.clear342 to i64
  %arrayidx344 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom343
  %148 = load i16, i16* %arrayidx344, align 2
  %conv345 = zext i16 %148 to i32
  %149 = load i32, i32* @target_flags, align 4
  %and346 = and i32 %149, 33554432
  %tobool347 = icmp ne i32 %and346, 0
  %cond348 = select i1 %tobool347, i32 5, i32 4
  %idxprom349 = sext i32 %cond348 to i64
  %arrayidx350 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom349
  %150 = load i16, i16* %arrayidx350, align 2
  %conv351 = zext i16 %150 to i32
  %cmp352 = icmp sle i32 %conv345, %conv351
  br i1 %cmp352, label %if.then.354, label %if.end.590

if.then.354:                                      ; preds = %land.lhs.true.339
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 0
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load358 = load i32, i32* %153, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 75
  br i1 %cmp360, label %land.lhs.true.362, label %if.else.500

land.lhs.true.362:                                ; preds = %if.then.354
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 0
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx365, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx368, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load369 = load i32, i32* %157, align 8
  %bf.clear370 = and i32 %bf.load369, 65535
  %cmp371 = icmp eq i32 %bf.clear370, 78
  br i1 %cmp371, label %land.lhs.true.373, label %if.else.500

land.lhs.true.373:                                ; preds = %land.lhs.true.362
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx375 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld374, i32 0, i64 0
  %rtx376 = bitcast %union.rtunion_def* %arrayidx375 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx376, align 8
  %fld377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i32 0, i64 0
  %rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx379, align 8
  %fld380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1
  %arrayidx381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld380, i32 0, i64 1
  %rtx382 = bitcast %union.rtunion_def* %arrayidx381 to %struct.rtx_def**
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rtx382, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load383 = load i32, i32* %162, align 8
  %bf.clear384 = and i32 %bf.load383, 65535
  %cmp385 = icmp eq i32 %bf.clear384, 54
  br i1 %cmp385, label %land.lhs.true.387, label %if.else.500

land.lhs.true.387:                                ; preds = %land.lhs.true.373
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 1
  %rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx390, align 8
  %165 = bitcast %struct.rtx_def* %164 to i32*
  %bf.load391 = load i32, i32* %165, align 8
  %bf.clear392 = and i32 %bf.load391, 65535
  %cmp393 = icmp eq i32 %bf.clear392, 67
  br i1 %cmp393, label %if.then.451, label %lor.lhs.false.395

lor.lhs.false.395:                                ; preds = %land.lhs.true.387
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld396, i32 0, i64 1
  %rtx398 = bitcast %union.rtunion_def* %arrayidx397 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx398, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load399 = load i32, i32* %168, align 8
  %bf.clear400 = and i32 %bf.load399, 65535
  %cmp401 = icmp eq i32 %bf.clear400, 68
  br i1 %cmp401, label %if.then.451, label %lor.lhs.false.403

lor.lhs.false.403:                                ; preds = %lor.lhs.false.395
  %169 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld404, i32 0, i64 1
  %rtx406 = bitcast %union.rtunion_def* %arrayidx405 to %struct.rtx_def**
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rtx406, align 8
  %171 = bitcast %struct.rtx_def* %170 to i32*
  %bf.load407 = load i32, i32* %171, align 8
  %bf.clear408 = and i32 %bf.load407, 65535
  %cmp409 = icmp eq i32 %bf.clear408, 54
  br i1 %cmp409, label %if.then.451, label %lor.lhs.false.411

lor.lhs.false.411:                                ; preds = %lor.lhs.false.403
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld412, i32 0, i64 1
  %rtx414 = bitcast %union.rtunion_def* %arrayidx413 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx414, align 8
  %174 = bitcast %struct.rtx_def* %173 to i32*
  %bf.load415 = load i32, i32* %174, align 8
  %bf.clear416 = and i32 %bf.load415, 65535
  %cmp417 = icmp eq i32 %bf.clear416, 55
  br i1 %cmp417, label %if.then.451, label %lor.lhs.false.419

lor.lhs.false.419:                                ; preds = %lor.lhs.false.411
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 1
  %rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx422, align 8
  %177 = bitcast %struct.rtx_def* %176 to i32*
  %bf.load423 = load i32, i32* %177, align 8
  %bf.clear424 = and i32 %bf.load423, 65535
  %cmp425 = icmp eq i32 %bf.clear424, 58
  br i1 %cmp425, label %if.then.451, label %lor.lhs.false.427

lor.lhs.false.427:                                ; preds = %lor.lhs.false.419
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i32 0, i64 1
  %rtx430 = bitcast %union.rtunion_def* %arrayidx429 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx430, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load431 = load i32, i32* %180, align 8
  %bf.clear432 = and i32 %bf.load431, 65535
  %cmp433 = icmp eq i32 %bf.clear432, 134
  br i1 %cmp433, label %if.then.451, label %lor.lhs.false.435

lor.lhs.false.435:                                ; preds = %lor.lhs.false.427
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i32 0, i64 1
  %rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx438, align 8
  %183 = bitcast %struct.rtx_def* %182 to i32*
  %bf.load439 = load i32, i32* %183, align 8
  %bf.clear440 = and i32 %bf.load439, 65535
  %cmp441 = icmp eq i32 %bf.clear440, 56
  br i1 %cmp441, label %if.then.451, label %lor.lhs.false.443

lor.lhs.false.443:                                ; preds = %lor.lhs.false.435
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i32 0, i64 1
  %rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rtx446, align 8
  %186 = bitcast %struct.rtx_def* %185 to i32*
  %bf.load447 = load i32, i32* %186, align 8
  %bf.clear448 = and i32 %bf.load447, 65535
  %cmp449 = icmp eq i32 %bf.clear448, 140
  br i1 %cmp449, label %if.then.451, label %if.else.500

if.then.451:                                      ; preds = %lor.lhs.false.443, %lor.lhs.false.435, %lor.lhs.false.427, %lor.lhs.false.419, %lor.lhs.false.411, %lor.lhs.false.403, %lor.lhs.false.395, %land.lhs.true.387
  %187 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld452 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld452, i32 0, i64 0
  %rtx454 = bitcast %union.rtunion_def* %arrayidx453 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rtx454, align 8
  %fld455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx456 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld455, i32 0, i64 0
  %rtx457 = bitcast %union.rtunion_def* %arrayidx456 to %struct.rtx_def**
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rtx457, align 8
  %fld458 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i32 0, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx460, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 0
  %rtwint463 = bitcast %union.rtunion_def* %arrayidx462 to i64*
  %191 = load i64, i64* %rtwint463, align 8
  store i64 %191, i64* %val, align 8
  %192 = load i64, i64* %val, align 8
  %cmp464 = icmp eq i64 %192, 2
  br i1 %cmp464, label %if.then.472, label %lor.lhs.false.466

lor.lhs.false.466:                                ; preds = %if.then.451
  %193 = load i64, i64* %val, align 8
  %cmp467 = icmp eq i64 %193, 4
  br i1 %cmp467, label %if.then.472, label %lor.lhs.false.469

lor.lhs.false.469:                                ; preds = %lor.lhs.false.466
  %194 = load i64, i64* %val, align 8
  %cmp470 = icmp eq i64 %194, 8
  br i1 %cmp470, label %if.then.472, label %if.end.499

if.then.472:                                      ; preds = %lor.lhs.false.469, %lor.lhs.false.466, %if.then.451
  %195 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %lea473 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %195, i32 0, i32 1
  %196 = load i32, i32* %lea473, align 4
  %mul474 = mul nsw i32 %196, 4
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld475, i32 0, i64 0
  %rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx477, align 8
  %fld478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld478, i32 0, i64 1
  %rtx480 = bitcast %union.rtunion_def* %arrayidx479 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx480, align 8
  %200 = load i32, i32* %outer_code.addr, align 4
  %call481 = call i32 @rtx_cost(%struct.rtx_def* %199, i32 %200)
  %add482 = add nsw i32 %mul474, %call481
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld483, i32 0, i64 0
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx485, align 8
  %fld486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i32 0, i64 0
  %rtx488 = bitcast %union.rtunion_def* %arrayidx487 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx488, align 8
  %fld489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i32 0, i64 0
  %rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx491, align 8
  %205 = load i32, i32* %outer_code.addr, align 4
  %call492 = call i32 @rtx_cost(%struct.rtx_def* %204, i32 %205)
  %add493 = add nsw i32 %add482, %call492
  %206 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld494, i32 0, i64 1
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rtx496, align 8
  %208 = load i32, i32* %outer_code.addr, align 4
  %call497 = call i32 @rtx_cost(%struct.rtx_def* %207, i32 %208)
  %add498 = add nsw i32 %add493, %call497
  store i32 %add498, i32* %retval
  br label %return

if.end.499:                                       ; preds = %lor.lhs.false.469
  br label %if.end.589

if.else.500:                                      ; preds = %lor.lhs.false.443, %land.lhs.true.373, %land.lhs.true.362, %if.then.354
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld501, i32 0, i64 0
  %rtx503 = bitcast %union.rtunion_def* %arrayidx502 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx503, align 8
  %211 = bitcast %struct.rtx_def* %210 to i32*
  %bf.load504 = load i32, i32* %211, align 8
  %bf.clear505 = and i32 %bf.load504, 65535
  %cmp506 = icmp eq i32 %bf.clear505, 78
  br i1 %cmp506, label %land.lhs.true.508, label %if.else.555

land.lhs.true.508:                                ; preds = %if.else.500
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld509, i32 0, i64 0
  %rtx511 = bitcast %union.rtunion_def* %arrayidx510 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx511, align 8
  %fld512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld512, i32 0, i64 1
  %rtx514 = bitcast %union.rtunion_def* %arrayidx513 to %struct.rtx_def**
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rtx514, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load515 = load i32, i32* %215, align 8
  %bf.clear516 = and i32 %bf.load515, 65535
  %cmp517 = icmp eq i32 %bf.clear516, 54
  br i1 %cmp517, label %if.then.519, label %if.else.555

if.then.519:                                      ; preds = %land.lhs.true.508
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 0
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rtx523, align 8
  %fld524 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld524, i32 0, i64 1
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx526, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 0
  %rtwint529 = bitcast %union.rtunion_def* %arrayidx528 to i64*
  %219 = load i64, i64* %rtwint529, align 8
  store i64 %219, i64* %val520, align 8
  %220 = load i64, i64* %val520, align 8
  %cmp530 = icmp eq i64 %220, 2
  br i1 %cmp530, label %if.then.538, label %lor.lhs.false.532

lor.lhs.false.532:                                ; preds = %if.then.519
  %221 = load i64, i64* %val520, align 8
  %cmp533 = icmp eq i64 %221, 4
  br i1 %cmp533, label %if.then.538, label %lor.lhs.false.535

lor.lhs.false.535:                                ; preds = %lor.lhs.false.532
  %222 = load i64, i64* %val520, align 8
  %cmp536 = icmp eq i64 %222, 8
  br i1 %cmp536, label %if.then.538, label %if.end.554

if.then.538:                                      ; preds = %lor.lhs.false.535, %lor.lhs.false.532, %if.then.519
  %223 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %lea539 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %223, i32 0, i32 1
  %224 = load i32, i32* %lea539, align 4
  %mul540 = mul nsw i32 %224, 4
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld541 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1
  %arrayidx542 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld541, i32 0, i64 0
  %rtx543 = bitcast %union.rtunion_def* %arrayidx542 to %struct.rtx_def**
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rtx543, align 8
  %fld544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld544, i32 0, i64 0
  %rtx546 = bitcast %union.rtunion_def* %arrayidx545 to %struct.rtx_def**
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rtx546, align 8
  %228 = load i32, i32* %outer_code.addr, align 4
  %call547 = call i32 @rtx_cost(%struct.rtx_def* %227, i32 %228)
  %add548 = add nsw i32 %mul540, %call547
  %229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld549, i32 0, i64 1
  %rtx551 = bitcast %union.rtunion_def* %arrayidx550 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx551, align 8
  %231 = load i32, i32* %outer_code.addr, align 4
  %call552 = call i32 @rtx_cost(%struct.rtx_def* %230, i32 %231)
  %add553 = add nsw i32 %add548, %call552
  store i32 %add553, i32* %retval
  br label %return

if.end.554:                                       ; preds = %lor.lhs.false.535
  br label %if.end.588

if.else.555:                                      ; preds = %land.lhs.true.508, %if.else.500
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld556 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1
  %arrayidx557 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld556, i32 0, i64 0
  %rtx558 = bitcast %union.rtunion_def* %arrayidx557 to %struct.rtx_def**
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rtx558, align 8
  %234 = bitcast %struct.rtx_def* %233 to i32*
  %bf.load559 = load i32, i32* %234, align 8
  %bf.clear560 = and i32 %bf.load559, 65535
  %cmp561 = icmp eq i32 %bf.clear560, 75
  br i1 %cmp561, label %if.then.563, label %if.end.587

if.then.563:                                      ; preds = %if.else.555
  %235 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %lea564 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %235, i32 0, i32 1
  %236 = load i32, i32* %lea564, align 4
  %mul565 = mul nsw i32 %236, 4
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld566, i32 0, i64 0
  %rtx568 = bitcast %union.rtunion_def* %arrayidx567 to %struct.rtx_def**
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rtx568, align 8
  %fld569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld569, i32 0, i64 0
  %rtx571 = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtx_def**
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rtx571, align 8
  %240 = load i32, i32* %outer_code.addr, align 4
  %call572 = call i32 @rtx_cost(%struct.rtx_def* %239, i32 %240)
  %add573 = add nsw i32 %mul565, %call572
  %241 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld574 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx575 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld574, i32 0, i64 0
  %rtx576 = bitcast %union.rtunion_def* %arrayidx575 to %struct.rtx_def**
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rtx576, align 8
  %fld577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i32 0, i64 1
  %rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**
  %243 = load %struct.rtx_def*, %struct.rtx_def** %rtx579, align 8
  %244 = load i32, i32* %outer_code.addr, align 4
  %call580 = call i32 @rtx_cost(%struct.rtx_def* %243, i32 %244)
  %add581 = add nsw i32 %add573, %call580
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 1
  %rtx584 = bitcast %union.rtunion_def* %arrayidx583 to %struct.rtx_def**
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rtx584, align 8
  %247 = load i32, i32* %outer_code.addr, align 4
  %call585 = call i32 @rtx_cost(%struct.rtx_def* %246, i32 %247)
  %add586 = add nsw i32 %add581, %call585
  store i32 %add586, i32* %retval
  br label %return

if.end.587:                                       ; preds = %if.else.555
  br label %if.end.588

if.end.588:                                       ; preds = %if.end.587, %if.end.554
  br label %if.end.589

if.end.589:                                       ; preds = %if.end.588, %if.end.499
  br label %if.end.590

if.end.590:                                       ; preds = %if.end.589, %land.lhs.true.339, %lor.lhs.false.331, %sw.bb.303
  br label %sw.bb.591

sw.bb.591:                                        ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %if.end.590
  %248 = load i32, i32* @target_flags, align 4
  %and592 = and i32 %248, 33554432
  %tobool593 = icmp ne i32 %and592, 0
  br i1 %tobool593, label %if.end.632, label %land.lhs.true.594

land.lhs.true.594:                                ; preds = %sw.bb.591
  %249 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %250 = bitcast %struct.rtx_def* %249 to i32*
  %bf.load595 = load i32, i32* %250, align 8
  %bf.lshr596 = lshr i32 %bf.load595, 16
  %bf.clear597 = and i32 %bf.lshr596, 255
  %cmp598 = icmp eq i32 %bf.clear597, 5
  br i1 %cmp598, label %if.then.600, label %if.end.632

if.then.600:                                      ; preds = %land.lhs.true.594
  %251 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %add601 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %251, i32 0, i32 0
  %252 = load i32, i32* %add601, align 4
  %mul602 = mul nsw i32 %252, 4
  %mul603 = mul nsw i32 %mul602, 2
  %253 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld604 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1
  %arrayidx605 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld604, i32 0, i64 0
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rtx606, align 8
  %255 = load i32, i32* %outer_code.addr, align 4
  %call607 = call i32 @rtx_cost(%struct.rtx_def* %254, i32 %255)
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx609 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld608, i32 0, i64 0
  %rtx610 = bitcast %union.rtunion_def* %arrayidx609 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx610, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load611 = load i32, i32* %258, align 8
  %bf.lshr612 = lshr i32 %bf.load611, 16
  %bf.clear613 = and i32 %bf.lshr612, 255
  %cmp614 = icmp ne i32 %bf.clear613, 5
  %conv615 = zext i1 %cmp614 to i32
  %shl616 = shl i32 %call607, %conv615
  %add617 = add nsw i32 %mul603, %shl616
  %259 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i32 0, i64 1
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx620, align 8
  %261 = load i32, i32* %outer_code.addr, align 4
  %call621 = call i32 @rtx_cost(%struct.rtx_def* %260, i32 %261)
  %262 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld622 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i32 0, i64 1
  %rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**
  %263 = load %struct.rtx_def*, %struct.rtx_def** %rtx624, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load625 = load i32, i32* %264, align 8
  %bf.lshr626 = lshr i32 %bf.load625, 16
  %bf.clear627 = and i32 %bf.lshr626, 255
  %cmp628 = icmp ne i32 %bf.clear627, 5
  %conv629 = zext i1 %cmp628 to i32
  %shl630 = shl i32 %call621, %conv629
  %add631 = add nsw i32 %add617, %shl630
  store i32 %add631, i32* %retval
  br label %return

if.end.632:                                       ; preds = %land.lhs.true.594, %sw.bb.591
  br label %sw.bb.633

sw.bb.633:                                        ; preds = %sw.epilog, %sw.epilog, %if.end.632
  %265 = load i32, i32* @target_flags, align 4
  %and634 = and i32 %265, 33554432
  %tobool635 = icmp ne i32 %and634, 0
  br i1 %tobool635, label %if.end.648, label %land.lhs.true.636

land.lhs.true.636:                                ; preds = %sw.bb.633
  %266 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %267 = bitcast %struct.rtx_def* %266 to i32*
  %bf.load637 = load i32, i32* %267, align 8
  %bf.lshr638 = lshr i32 %bf.load637, 16
  %bf.clear639 = and i32 %bf.lshr638, 255
  %cmp640 = icmp eq i32 %bf.clear639, 5
  br i1 %cmp640, label %if.then.642, label %if.end.648

if.then.642:                                      ; preds = %land.lhs.true.636
  br label %do.body.643

do.body.643:                                      ; preds = %if.then.642
  %268 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %add644 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %268, i32 0, i32 0
  %269 = load i32, i32* %add644, align 4
  %mul645 = mul nsw i32 %269, 2
  %mul646 = mul nsw i32 %mul645, 4
  store i32 %mul646, i32* %total, align 4
  br label %egress_rtx_costs

do.end.647:                                       ; No predecessors!
  br label %if.end.648

if.end.648:                                       ; preds = %do.end.647, %land.lhs.true.636, %sw.bb.633
  br label %do.body.649

do.body.649:                                      ; preds = %if.end.648
  %270 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8
  %add650 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %270, i32 0, i32 0
  %271 = load i32, i32* %add650, align 4
  %mul651 = mul nsw i32 %271, 4
  store i32 %mul651, i32* %total, align 4
  br label %egress_rtx_costs

do.end.652:                                       ; No predecessors!
  br label %egress_rtx_costs

egress_rtx_costs:                                 ; preds = %do.end.652, %do.body.649, %do.body.643, %do.body.300, %do.body.291, %do.body.285, %do.body.261, %do.body.256, %do.body.239, %do.body.234, %do.body.219, %do.body.213, %do.body.177, %do.body.159, %do.body.126, %cond.end, %if.then.116
  br label %sw.epilog.707

sw.bb.653:                                        ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %272 = load i32, i32* @target_flags, align 4
  %and654 = and i32 %272, 33554432
  %tobool655 = icmp ne i32 %and654, 0
  br i1 %tobool655, label %land.lhs.true.656, label %if.end.660

land.lhs.true.656:                                ; preds = %sw.bb.653
  %273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call657 = call i32 @x86_64_sign_extended_value(%struct.rtx_def* %273)
  %tobool658 = icmp ne i32 %call657, 0
  br i1 %tobool658, label %if.end.660, label %if.then.659

if.then.659:                                      ; preds = %land.lhs.true.656
  store i32 3, i32* %retval
  br label %return

if.end.660:                                       ; preds = %land.lhs.true.656, %sw.bb.653
  %274 = load i32, i32* @target_flags, align 4
  %and661 = and i32 %274, 33554432
  %tobool662 = icmp ne i32 %and661, 0
  br i1 %tobool662, label %land.lhs.true.663, label %if.end.667

land.lhs.true.663:                                ; preds = %if.end.660
  %275 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call664 = call i32 @x86_64_zero_extended_value(%struct.rtx_def* %275)
  %tobool665 = icmp ne i32 %call664, 0
  br i1 %tobool665, label %if.end.667, label %if.then.666

if.then.666:                                      ; preds = %land.lhs.true.663
  store i32 2, i32* %retval
  br label %return

if.end.667:                                       ; preds = %land.lhs.true.663, %if.end.660
  %276 = load i32, i32* @flag_pic, align 4
  %tobool668 = icmp ne i32 %276, 0
  br i1 %tobool668, label %land.rhs, label %land.end.685

land.rhs:                                         ; preds = %if.end.667
  %277 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load669 = load i32, i32* %278, align 8
  %bf.clear670 = and i32 %bf.load669, 65535
  %cmp671 = icmp eq i32 %bf.clear670, 68
  br i1 %cmp671, label %lor.end, label %lor.lhs.false.673

lor.lhs.false.673:                                ; preds = %land.rhs
  %279 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %280 = bitcast %struct.rtx_def* %279 to i32*
  %bf.load674 = load i32, i32* %280, align 8
  %bf.clear675 = and i32 %bf.load674, 65535
  %cmp676 = icmp eq i32 %bf.clear675, 67
  br i1 %cmp676, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.673
  %281 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %282 = bitcast %struct.rtx_def* %281 to i32*
  %bf.load678 = load i32, i32* %282, align 8
  %bf.clear679 = and i32 %bf.load678, 65535
  %cmp680 = icmp eq i32 %bf.clear679, 58
  br i1 %cmp680, label %land.rhs.682, label %land.end

land.rhs.682:                                     ; preds = %lor.rhs
  %283 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call683 = call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %283)
  %tobool684 = icmp ne i32 %call683, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs.682, %lor.rhs
  %284 = phi i1 [ false, %lor.rhs ], [ %tobool684, %land.rhs.682 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false.673, %land.rhs
  %285 = phi i1 [ true, %lor.lhs.false.673 ], [ true, %land.rhs ], [ %284, %land.end ]
  br label %land.end.685

land.end.685:                                     ; preds = %lor.end, %if.end.667
  %286 = phi i1 [ false, %if.end.667 ], [ %285, %lor.end ]
  %cond686 = select i1 %286, i32 1, i32 0
  store i32 %cond686, i32* %retval
  br label %return

sw.bb.687:                                        ; preds = %sw.epilog
  %287 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %288 = bitcast %struct.rtx_def* %287 to i32*
  %bf.load689 = load i32, i32* %288, align 8
  %bf.lshr690 = lshr i32 %bf.load689, 16
  %bf.clear691 = and i32 %bf.lshr690, 255
  %cmp692 = icmp eq i32 %bf.clear691, 0
  br i1 %cmp692, label %if.then.694, label %if.end.695

if.then.694:                                      ; preds = %sw.bb.687
  store i32 0, i32* %retval
  br label %return

if.end.695:                                       ; preds = %sw.bb.687
  %289 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call696 = call i32 @standard_80387_constant_p(%struct.rtx_def* %289)
  store i32 %call696, i32* %code688, align 4
  %290 = load i32, i32* %code688, align 4
  %cmp697 = icmp eq i32 %290, 1
  br i1 %cmp697, label %cond.true.699, label %cond.false.700

cond.true.699:                                    ; preds = %if.end.695
  br label %cond.end.704

cond.false.700:                                   ; preds = %if.end.695
  %291 = load i32, i32* %code688, align 4
  %cmp701 = icmp eq i32 %291, 2
  %cond703 = select i1 %cmp701, i32 2, i32 3
  br label %cond.end.704

cond.end.704:                                     ; preds = %cond.false.700, %cond.true.699
  %cond705 = phi i32 [ 1, %cond.true.699 ], [ %cond703, %cond.false.700 ]
  store i32 %cond705, i32* %retval
  br label %return

sw.default.706:                                   ; preds = %sw.epilog
  br label %sw.epilog.707

sw.epilog.707:                                    ; preds = %sw.default.706, %egress_rtx_costs, %if.end.266, %do.end.128, %if.end.124, %if.end.97
  %292 = load i32, i32* %code, align 4
  %idxprom708 = sext i32 %292 to i64
  %arrayidx709 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom708
  %293 = load i8*, i8** %arrayidx709, align 8
  store i8* %293, i8** %fmt, align 8
  %294 = load i32, i32* %code, align 4
  %idxprom710 = sext i32 %294 to i64
  %arrayidx711 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom710
  %295 = load i8, i8* %arrayidx711, align 1
  %conv712 = zext i8 %295 to i32
  %sub = sub nsw i32 %conv712, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.752, %sw.epilog.707
  %296 = load i32, i32* %i, align 4
  %cmp713 = icmp sge i32 %296, 0
  br i1 %cmp713, label %for.body, label %for.end.753

for.body:                                         ; preds = %for.cond
  %297 = load i32, i32* %i, align 4
  %idxprom715 = sext i32 %297 to i64
  %298 = load i8*, i8** %fmt, align 8
  %arrayidx716 = getelementptr inbounds i8, i8* %298, i64 %idxprom715
  %299 = load i8, i8* %arrayidx716, align 1
  %conv717 = sext i8 %299 to i32
  %cmp718 = icmp eq i32 %conv717, 101
  br i1 %cmp718, label %if.then.720, label %if.else.727

if.then.720:                                      ; preds = %for.body
  %300 = load i32, i32* %i, align 4
  %idxprom721 = sext i32 %300 to i64
  %301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld722, i32 0, i64 %idxprom721
  %rtx724 = bitcast %union.rtunion_def* %arrayidx723 to %struct.rtx_def**
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rtx724, align 8
  %303 = load i32, i32* %code, align 4
  %call725 = call i32 @rtx_cost(%struct.rtx_def* %302, i32 %303)
  %304 = load i32, i32* %total, align 4
  %add726 = add nsw i32 %304, %call725
  store i32 %add726, i32* %total, align 4
  br label %if.end.751

if.else.727:                                      ; preds = %for.body
  %305 = load i32, i32* %i, align 4
  %idxprom728 = sext i32 %305 to i64
  %306 = load i8*, i8** %fmt, align 8
  %arrayidx729 = getelementptr inbounds i8, i8* %306, i64 %idxprom728
  %307 = load i8, i8* %arrayidx729, align 1
  %conv730 = sext i8 %307 to i32
  %cmp731 = icmp eq i32 %conv730, 69
  br i1 %cmp731, label %if.then.733, label %if.end.750

if.then.733:                                      ; preds = %if.else.727
  store i32 0, i32* %j, align 4
  br label %for.cond.734

for.cond.734:                                     ; preds = %for.inc, %if.then.733
  %308 = load i32, i32* %j, align 4
  %309 = load i32, i32* %i, align 4
  %idxprom735 = sext i32 %309 to i64
  %310 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld736 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld736, i32 0, i64 %idxprom735
  %rtvec = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtvec_def**
  %311 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %311, i32 0, i32 0
  %312 = load i32, i32* %num_elem, align 4
  %cmp738 = icmp slt i32 %308, %312
  br i1 %cmp738, label %for.body.740, label %for.end

for.body.740:                                     ; preds = %for.cond.734
  %313 = load i32, i32* %j, align 4
  %idxprom741 = sext i32 %313 to i64
  %314 = load i32, i32* %i, align 4
  %idxprom742 = sext i32 %314 to i64
  %315 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld743 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1
  %arrayidx744 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld743, i32 0, i64 %idxprom742
  %rtvec745 = bitcast %union.rtunion_def* %arrayidx744 to %struct.rtvec_def**
  %316 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec745, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %316, i32 0, i32 1
  %arrayidx746 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom741
  %317 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx746, align 8
  %318 = load i32, i32* %code, align 4
  %call747 = call i32 @rtx_cost(%struct.rtx_def* %317, i32 %318)
  %319 = load i32, i32* %total, align 4
  %add748 = add nsw i32 %319, %call747
  store i32 %add748, i32* %total, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.740
  %320 = load i32, i32* %j, align 4
  %inc749 = add nsw i32 %320, 1
  store i32 %inc749, i32* %j, align 4
  br label %for.cond.734

for.end:                                          ; preds = %for.cond.734
  br label %if.end.750

if.end.750:                                       ; preds = %for.end, %if.else.727
  br label %if.end.751

if.end.751:                                       ; preds = %if.end.750, %if.then.720
  br label %for.inc.752

for.inc.752:                                      ; preds = %if.end.751
  %321 = load i32, i32* %i, align 4
  %dec = add nsw i32 %321, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end.753:                                      ; preds = %for.cond
  %322 = load i32, i32* %total, align 4
  store i32 %322, i32* %retval
  br label %return

return:                                           ; preds = %for.end.753, %cond.end.704, %if.then.694, %land.end.685, %if.then.666, %if.then.659, %if.then.600, %if.then.563, %if.then.538, %if.then.472, %if.then.90, %sw.bb.14, %if.then
  %323 = load i32, i32* %retval
  ret i32 %323
}

declare i32 @exact_log2_wide(i64) #1

declare i32 @x86_64_sign_extended_value(%struct.rtx_def*) #1

declare i32 @x86_64_zero_extended_value(%struct.rtx_def*) #1

declare i32 @symbolic_reference_mentioned_p(%struct.rtx_def*) #1

declare i32 @standard_80387_constant_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @address_cost(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 70
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %mode.addr, align 4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @memory_address_p(i32 %5, %struct.rtx_def* %6)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 1000, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call6 = call i32 @ix86_address_cost(%struct.rtx_def* %7)
  store i32 %call6, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.4, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare i32 @ix86_address_cost(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @gen_lowpart_if_possible(i32 %mode, %struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %result = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load i32, i32* %mode.addr, align 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call %struct.rtx_def* @gen_lowpart_common(i32 %0, %struct.rtx_def* %1)
  store %struct.rtx_def* %call, %struct.rtx_def** %result, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  %tobool = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %retval
  br label %return

if.else:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then.1, label %if.else.6

if.then.1:                                        ; preds = %if.else
  store i32 0, i32* %offset, align 4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = load i32, i32* %mode.addr, align 4
  %8 = load i32, i32* %offset, align 4
  %conv = sext i32 %8 to i64
  %call2 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %6, i32 %7, i64 %conv, i32 0, i32 1)
  store %struct.rtx_def* %call2, %struct.rtx_def** %new, align 8
  %9 = load i32, i32* %mode.addr, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call3 = call i32 @memory_address_p(i32 %9, %struct.rtx_def* %11)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end, label %if.then.5

if.then.5:                                        ; preds = %if.then.1
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %if.then.1
  %12 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %retval
  br label %return

if.else.6:                                        ; preds = %if.else
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.else.6, %if.end, %if.then.5, %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %13
}

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @cse_end_of_basic_block(%struct.rtx_def* %insn, %struct.cse_basic_block_data* %data, i32 %follow_jumps, i32 %after_loop, i32 %skip_blocks) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca %struct.cse_basic_block_data*, align 8
  %follow_jumps.addr = alloca i32, align 4
  %after_loop.addr = alloca i32, align 4
  %skip_blocks.addr = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %q = alloca %struct.rtx_def*, align 8
  %nsets = alloca i32, align 4
  %low_cuid = alloca i32, align 4
  %high_cuid = alloca i32, align 4
  %next = alloca %struct.rtx_def*, align 8
  %path_size = alloca i32, align 4
  %path_entry = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.cse_basic_block_data* %data, %struct.cse_basic_block_data** %data.addr, align 8
  store i32 %follow_jumps, i32* %follow_jumps.addr, align 4
  store i32 %after_loop, i32* %after_loop.addr, align 4
  store i32 %skip_blocks, i32* %skip_blocks.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %p, align 8
  store i32 0, i32* %nsets, align 4
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32, i32* %rtint, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32*, i32** @uid_cuid, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx1, align 4
  store i32 %4, i32* %low_cuid, align 4
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 0
  %rtint4 = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %6 = load i32, i32* %rtint4, align 4
  %idxprom5 = sext i32 %6 to i64
  %7 = load i32*, i32** @uid_cuid, align 8
  %arrayidx6 = getelementptr inbounds i32, i32* %7, i64 %idxprom5
  %8 = load i32, i32* %arrayidx6, align 4
  store i32 %8, i32* %high_cuid, align 4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom7 = sext i32 %bf.clear to i64
  %arrayidx8 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom7
  %11 = load i8, i8* %arrayidx8, align 1
  %conv = sext i8 %11 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %13)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %12, %cond.true ], [ %call, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %next, align 8
  %14 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path_size10 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %14, i32 0, i32 4
  %15 = load i32, i32* %path_size10, align 4
  store i32 %15, i32* %path_size, align 4
  store i32 0, i32* %path_entry, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %cond.end
  %16 = load i32, i32* %path_size, align 4
  %cmp11 = icmp sgt i32 %16, 0
  br i1 %cmp11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %path_size, align 4
  %sub = sub nsw i32 %17, 1
  %idxprom13 = sext i32 %sub to i64
  %18 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %18, i32 0, i32 5
  %arrayidx14 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path, i32 0, i64 %idxprom13
  %status = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx14, i32 0, i32 1
  %19 = load i32, i32* %status, align 4
  %cmp15 = icmp ne i32 %19, 1
  br i1 %cmp15, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %20 = load i32, i32* %path_size, align 4
  %sub17 = sub nsw i32 %20, 1
  %idxprom18 = sext i32 %sub17 to i64
  %21 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path19 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %21, i32 0, i32 5
  %arrayidx20 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path19, i32 0, i64 %idxprom18
  %status21 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx20, i32 0, i32 1
  store i32 1, i32* %status21, align 4
  br label %while.end

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %path_size, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %path_size, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load22 = load i32, i32* %24, align 8
  %bf.lshr = lshr i32 %bf.load22, 16
  %bf.clear23 = and i32 %bf.lshr, 255
  %cmp24 = icmp eq i32 %bf.clear23, 2
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %while.end
  store i32 0, i32* %skip_blocks.addr, align 4
  store i32 0, i32* %follow_jumps.addr, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %while.end
  br label %while.cond.28

while.cond.28:                                    ; preds = %if.end.401, %if.then.331, %if.then.276, %if.end.27
  %25 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %tobool = icmp ne %struct.rtx_def* %25, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.28
  %26 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load29 = load i32, i32* %27, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp ne i32 %bf.clear30, 36
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.28
  %28 = phi i1 [ false, %while.cond.28 ], [ %cmp31, %land.rhs ]
  br i1 %28, label %while.body.33, label %while.end.405

while.body.33:                                    ; preds = %land.end
  %29 = load i32, i32* %after_loop.addr, align 4
  %tobool34 = icmp ne i32 %29, 0
  br i1 %tobool34, label %if.end.46, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body.33
  %30 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load35 = load i32, i32* %31, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 37
  br i1 %cmp37, label %land.lhs.true.39, label %if.end.46

land.lhs.true.39:                                 ; preds = %land.lhs.true
  %32 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 4
  %rtint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %33 = load i32, i32* %rtint42, align 4
  %cmp43 = icmp eq i32 %33, -95
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %land.lhs.true.39
  br label %while.end.405

if.end.46:                                        ; preds = %land.lhs.true.39, %land.lhs.true, %while.body.33
  %34 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %tobool49 = icmp ne %struct.rtx_def* %35, null
  br i1 %tobool49, label %land.lhs.true.50, label %if.end.65

land.lhs.true.50:                                 ; preds = %if.end.46
  %36 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 1
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load54 = load i32, i32* %38, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 34
  br i1 %cmp56, label %land.lhs.true.58, label %if.end.65

land.lhs.true.58:                                 ; preds = %land.lhs.true.50
  %39 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %call62 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %40, i32 28, %struct.rtx_def* null)
  %tobool63 = icmp ne %struct.rtx_def* %call62, null
  br i1 %tobool63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %land.lhs.true.58
  br label %while.end.405

if.end.65:                                        ; preds = %land.lhs.true.58, %land.lhs.true.50, %if.end.46
  %41 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load66 = load i32, i32* %42, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %idxprom68 = sext i32 %bf.clear67 to i64
  %arrayidx69 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom68
  %43 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %43 to i32
  %cmp71 = icmp eq i32 %conv70, 105
  br i1 %cmp71, label %land.lhs.true.73, label %if.else.87

land.lhs.true.73:                                 ; preds = %if.end.65
  %44 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 3
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx76, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load77 = load i32, i32* %46, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 39
  br i1 %cmp79, label %if.then.81, label %if.else.87

if.then.81:                                       ; preds = %land.lhs.true.73
  %47 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 3
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rtx84, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtvec_def**
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i32 0, i32 0
  %50 = load i32, i32* %num_elem, align 4
  %51 = load i32, i32* %nsets, align 4
  %add = add nsw i32 %51, %50
  store i32 %add, i32* %nsets, align 4
  br label %if.end.95

if.else.87:                                       ; preds = %land.lhs.true.73, %if.end.65
  %52 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load88 = load i32, i32* %53, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp ne i32 %bf.clear89, 37
  br i1 %cmp90, label %if.then.92, label %if.end.94

if.then.92:                                       ; preds = %if.else.87
  %54 = load i32, i32* %nsets, align 4
  %add93 = add nsw i32 %54, 1
  store i32 %add93, i32* %nsets, align 4
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.92, %if.else.87
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.then.81
  %55 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtint98 = bitcast %union.rtunion_def* %arrayidx97 to i32*
  %56 = load i32, i32* %rtint98, align 4
  %57 = load i32, i32* @max_uid, align 4
  %cmp99 = icmp sle i32 %56, %57
  br i1 %cmp99, label %land.lhs.true.101, label %if.end.115

land.lhs.true.101:                                ; preds = %if.end.95
  %58 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtint104 = bitcast %union.rtunion_def* %arrayidx103 to i32*
  %59 = load i32, i32* %rtint104, align 4
  %idxprom105 = sext i32 %59 to i64
  %60 = load i32*, i32** @uid_cuid, align 8
  %arrayidx106 = getelementptr inbounds i32, i32* %60, i64 %idxprom105
  %61 = load i32, i32* %arrayidx106, align 4
  %62 = load i32, i32* %high_cuid, align 4
  %cmp107 = icmp sgt i32 %61, %62
  br i1 %cmp107, label %if.then.109, label %if.end.115

if.then.109:                                      ; preds = %land.lhs.true.101
  %63 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i32 0, i64 0
  %rtint112 = bitcast %union.rtunion_def* %arrayidx111 to i32*
  %64 = load i32, i32* %rtint112, align 4
  %idxprom113 = sext i32 %64 to i64
  %65 = load i32*, i32** @uid_cuid, align 8
  %arrayidx114 = getelementptr inbounds i32, i32* %65, i64 %idxprom113
  %66 = load i32, i32* %arrayidx114, align 4
  store i32 %66, i32* %high_cuid, align 4
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.109, %land.lhs.true.101, %if.end.95
  %67 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 0
  %rtint118 = bitcast %union.rtunion_def* %arrayidx117 to i32*
  %68 = load i32, i32* %rtint118, align 4
  %69 = load i32, i32* @max_uid, align 4
  %cmp119 = icmp sle i32 %68, %69
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.135

land.lhs.true.121:                                ; preds = %if.end.115
  %70 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 0
  %rtint124 = bitcast %union.rtunion_def* %arrayidx123 to i32*
  %71 = load i32, i32* %rtint124, align 4
  %idxprom125 = sext i32 %71 to i64
  %72 = load i32*, i32** @uid_cuid, align 8
  %arrayidx126 = getelementptr inbounds i32, i32* %72, i64 %idxprom125
  %73 = load i32, i32* %arrayidx126, align 4
  %74 = load i32, i32* %low_cuid, align 4
  %cmp127 = icmp slt i32 %73, %74
  br i1 %cmp127, label %if.then.129, label %if.end.135

if.then.129:                                      ; preds = %land.lhs.true.121
  %75 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i32 0, i64 0
  %rtint132 = bitcast %union.rtunion_def* %arrayidx131 to i32*
  %76 = load i32, i32* %rtint132, align 4
  %idxprom133 = sext i32 %76 to i64
  %77 = load i32*, i32** @uid_cuid, align 8
  %arrayidx134 = getelementptr inbounds i32, i32* %77, i64 %idxprom133
  %78 = load i32, i32* %arrayidx134, align 4
  store i32 %78, i32* %low_cuid, align 4
  br label %if.end.135

if.end.135:                                       ; preds = %if.then.129, %land.lhs.true.121, %if.end.115
  %79 = load i32, i32* %path_entry, align 4
  %80 = load i32, i32* %path_size, align 4
  %cmp136 = icmp slt i32 %79, %80
  br i1 %cmp136, label %land.lhs.true.138, label %if.else.156

land.lhs.true.138:                                ; preds = %if.end.135
  %81 = load i32, i32* %path_entry, align 4
  %idxprom139 = sext i32 %81 to i64
  %82 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path140 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %82, i32 0, i32 5
  %arrayidx141 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path140, i32 0, i64 %idxprom139
  %branch = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx141, i32 0, i32 0
  %83 = load %struct.rtx_def*, %struct.rtx_def** %branch, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %cmp142 = icmp eq %struct.rtx_def* %83, %84
  br i1 %cmp142, label %if.then.144, label %if.else.156

if.then.144:                                      ; preds = %land.lhs.true.138
  %85 = load i32, i32* %path_entry, align 4
  %idxprom145 = sext i32 %85 to i64
  %86 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path146 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %86, i32 0, i32 5
  %arrayidx147 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path146, i32 0, i64 %idxprom145
  %status148 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx147, i32 0, i32 1
  %87 = load i32, i32* %status148, align 4
  %cmp149 = icmp ne i32 %87, 1
  br i1 %cmp149, label %if.then.151, label %if.end.155

if.then.151:                                      ; preds = %if.then.144
  %88 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 7
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rtx154, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %p, align 8
  br label %if.end.155

if.end.155:                                       ; preds = %if.then.151, %if.then.144
  %90 = load i32, i32* %path_entry, align 4
  %inc = add nsw i32 %90, 1
  store i32 %inc, i32* %path_entry, align 4
  br label %if.end.401

if.else.156:                                      ; preds = %land.lhs.true.138, %if.end.135
  %91 = load i32, i32* %follow_jumps.addr, align 4
  %tobool157 = icmp ne i32 %91, 0
  br i1 %tobool157, label %land.lhs.true.159, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.156
  %92 = load i32, i32* %skip_blocks.addr, align 4
  %tobool158 = icmp ne i32 %92, 0
  br i1 %tobool158, label %land.lhs.true.159, label %if.end.400

land.lhs.true.159:                                ; preds = %lor.lhs.false, %if.else.156
  %93 = load i32, i32* %path_size, align 4
  %cmp160 = icmp slt i32 %93, 9
  br i1 %cmp160, label %land.lhs.true.162, label %if.end.400

land.lhs.true.162:                                ; preds = %land.lhs.true.159
  %94 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load163 = load i32, i32* %95, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 33
  br i1 %cmp165, label %land.lhs.true.167, label %if.end.400

land.lhs.true.167:                                ; preds = %land.lhs.true.162
  %96 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 3
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load171 = load i32, i32* %98, align 8
  %bf.clear172 = and i32 %bf.load171, 65535
  %cmp173 = icmp eq i32 %bf.clear172, 47
  br i1 %cmp173, label %land.lhs.true.175, label %if.end.400

land.lhs.true.175:                                ; preds = %land.lhs.true.167
  %99 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i32 0, i64 3
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx178, align 8
  %fld179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i32 0, i64 1
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rtx181, align 8
  %102 = bitcast %struct.rtx_def* %101 to i32*
  %bf.load182 = load i32, i32* %102, align 8
  %bf.clear183 = and i32 %bf.load182, 65535
  %cmp184 = icmp eq i32 %bf.clear183, 72
  br i1 %cmp184, label %land.lhs.true.186, label %if.end.400

land.lhs.true.186:                                ; preds = %land.lhs.true.175
  %103 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 7
  %rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx189, align 8
  %cmp190 = icmp ne %struct.rtx_def* %104, null
  br i1 %cmp190, label %land.lhs.true.192, label %if.end.400

land.lhs.true.192:                                ; preds = %land.lhs.true.186
  %105 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 7
  %rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx195, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 3
  %rtint198 = bitcast %union.rtunion_def* %arrayidx197 to i32*
  %107 = load i32, i32* %rtint198, align 4
  %cmp199 = icmp eq i32 %107, 1
  br i1 %cmp199, label %land.lhs.true.201, label %if.end.400

land.lhs.true.201:                                ; preds = %land.lhs.true.192
  %108 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i32 0, i64 7
  %rtx204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx204, align 8
  %fld205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i32 0, i64 2
  %rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rtx207, align 8
  %cmp208 = icmp ne %struct.rtx_def* %110, null
  br i1 %cmp208, label %if.then.210, label %if.end.400

if.then.210:                                      ; preds = %land.lhs.true.201
  %111 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld211 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i32 0, i64 7
  %rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx213, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 1
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx216, align 8
  store %struct.rtx_def* %113, %struct.rtx_def** %q, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.210
  %114 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %tobool217 = icmp ne %struct.rtx_def* %114, null
  br i1 %tobool217, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %115 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load218 = load i32, i32* %116, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp ne i32 %bf.clear219, 37
  br i1 %cmp220, label %land.lhs.true.247, label %lor.lhs.false.222

lor.lhs.false.222:                                ; preds = %for.body
  %117 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i32 0, i64 4
  %rtint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  %118 = load i32, i32* %rtint225, align 4
  %cmp226 = icmp eq i32 %118, -95
  br i1 %cmp226, label %land.lhs.true.247, label %lor.lhs.false.228

lor.lhs.false.228:                                ; preds = %lor.lhs.false.222
  %119 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i32 0, i64 1
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx231, align 8
  %tobool232 = icmp ne %struct.rtx_def* %120, null
  br i1 %tobool232, label %land.lhs.true.233, label %if.end.259

land.lhs.true.233:                                ; preds = %lor.lhs.false.228
  %121 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 1
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx236, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load237 = load i32, i32* %123, align 8
  %bf.clear238 = and i32 %bf.load237, 65535
  %cmp239 = icmp eq i32 %bf.clear238, 34
  br i1 %cmp239, label %land.lhs.true.241, label %if.end.259

land.lhs.true.241:                                ; preds = %land.lhs.true.233
  %124 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i32 0, i64 1
  %rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx244, align 8
  %call245 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %125, i32 28, %struct.rtx_def* null)
  %tobool246 = icmp ne %struct.rtx_def* %call245, null
  br i1 %tobool246, label %land.lhs.true.247, label %if.end.259

land.lhs.true.247:                                ; preds = %land.lhs.true.241, %lor.lhs.false.222, %for.body
  %126 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load248 = load i32, i32* %127, align 8
  %bf.clear249 = and i32 %bf.load248, 65535
  %cmp250 = icmp ne i32 %bf.clear249, 36
  br i1 %cmp250, label %if.then.258, label %lor.lhs.false.252

lor.lhs.false.252:                                ; preds = %land.lhs.true.247
  %128 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i32 0, i64 3
  %rtint255 = bitcast %union.rtunion_def* %arrayidx254 to i32*
  %129 = load i32, i32* %rtint255, align 4
  %cmp256 = icmp ne i32 %129, 0
  br i1 %cmp256, label %if.then.258, label %if.end.259

if.then.258:                                      ; preds = %lor.lhs.false.252, %land.lhs.true.247
  br label %for.end

if.end.259:                                       ; preds = %lor.lhs.false.252, %land.lhs.true.241, %land.lhs.true.233, %lor.lhs.false.228
  br label %for.inc

for.inc:                                          ; preds = %if.end.259
  %130 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 1
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx262, align 8
  store %struct.rtx_def* %131, %struct.rtx_def** %q, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.258, %for.cond
  %132 = load i32, i32* %follow_jumps.addr, align 4
  %tobool263 = icmp ne i32 %132, 0
  br i1 %tobool263, label %land.lhs.true.264, label %if.else.317

land.lhs.true.264:                                ; preds = %for.end
  %133 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %cmp265 = icmp ne %struct.rtx_def* %133, null
  br i1 %cmp265, label %land.lhs.true.267, label %if.else.317

land.lhs.true.267:                                ; preds = %land.lhs.true.264
  %134 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load268 = load i32, i32* %135, align 8
  %bf.clear269 = and i32 %bf.load268, 65535
  %cmp270 = icmp eq i32 %bf.clear269, 35
  br i1 %cmp270, label %if.then.272, label %if.else.317

if.then.272:                                      ; preds = %land.lhs.true.267
  %136 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %call273 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %136)
  %137 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %cmp274 = icmp eq %struct.rtx_def* %call273, %137
  br i1 %cmp274, label %if.then.276, label %if.end.280

if.then.276:                                      ; preds = %if.then.272
  %138 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 2
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  store %struct.rtx_def* %139, %struct.rtx_def** %p, align 8
  br label %while.cond.28

if.end.280:                                       ; preds = %if.then.272
  store i32 0, i32* %i, align 4
  br label %for.cond.281

for.cond.281:                                     ; preds = %for.inc.293, %if.end.280
  %140 = load i32, i32* %i, align 4
  %141 = load i32, i32* %path_entry, align 4
  %cmp282 = icmp slt i32 %140, %141
  br i1 %cmp282, label %for.body.284, label %for.end.295

for.body.284:                                     ; preds = %for.cond.281
  %142 = load i32, i32* %i, align 4
  %idxprom285 = sext i32 %142 to i64
  %143 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path286 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %143, i32 0, i32 5
  %arrayidx287 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path286, i32 0, i64 %idxprom285
  %branch288 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx287, i32 0, i32 0
  %144 = load %struct.rtx_def*, %struct.rtx_def** %branch288, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %cmp289 = icmp eq %struct.rtx_def* %144, %145
  br i1 %cmp289, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %for.body.284
  br label %for.end.295

if.end.292:                                       ; preds = %for.body.284
  br label %for.inc.293

for.inc.293:                                      ; preds = %if.end.292
  %146 = load i32, i32* %i, align 4
  %inc294 = add nsw i32 %146, 1
  store i32 %inc294, i32* %i, align 4
  br label %for.cond.281

for.end.295:                                      ; preds = %if.then.291, %for.cond.281
  %147 = load i32, i32* %i, align 4
  %148 = load i32, i32* %path_entry, align 4
  %cmp296 = icmp ne i32 %147, %148
  br i1 %cmp296, label %if.then.298, label %if.end.299

if.then.298:                                      ; preds = %for.end.295
  br label %while.end.405

if.end.299:                                       ; preds = %for.end.295
  %149 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %150 = load i32, i32* %path_entry, align 4
  %idxprom300 = sext i32 %150 to i64
  %151 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path301 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %151, i32 0, i32 5
  %arrayidx302 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path301, i32 0, i64 %idxprom300
  %branch303 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx302, i32 0, i32 0
  store %struct.rtx_def* %149, %struct.rtx_def** %branch303, align 8
  %152 = load i32, i32* %path_entry, align 4
  %inc304 = add nsw i32 %152, 1
  store i32 %inc304, i32* %path_entry, align 4
  %idxprom305 = sext i32 %152 to i64
  %153 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path306 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %153, i32 0, i32 5
  %arrayidx307 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path306, i32 0, i64 %idxprom305
  %status308 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx307, i32 0, i32 1
  store i32 0, i32* %status308, align 4
  %154 = load i32, i32* %path_entry, align 4
  store i32 %154, i32* %path_size, align 4
  %155 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i32 0, i64 7
  %rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx311, align 8
  store %struct.rtx_def* %156, %struct.rtx_def** %p, align 8
  %157 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 2
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx314, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load315 = load i32, i32* %159, align 8
  %bf.clear316 = and i32 %bf.load315, -16711681
  %bf.set = or i32 %bf.clear316, 131072
  store i32 %bf.set, i32* %159, align 8
  br label %if.end.399

if.else.317:                                      ; preds = %land.lhs.true.267, %land.lhs.true.264, %for.end
  %160 = load i32, i32* %skip_blocks.addr, align 4
  %tobool318 = icmp ne i32 %160, 0
  br i1 %tobool318, label %land.lhs.true.319, label %if.end.398

land.lhs.true.319:                                ; preds = %if.else.317
  %161 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %cmp320 = icmp ne %struct.rtx_def* %161, null
  br i1 %cmp320, label %land.lhs.true.322, label %if.end.398

land.lhs.true.322:                                ; preds = %land.lhs.true.319
  %162 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %bf.load323 = load i32, i32* %163, align 8
  %bf.clear324 = and i32 %bf.load323, 65535
  %cmp325 = icmp ne i32 %bf.clear324, 36
  br i1 %cmp325, label %if.then.327, label %if.end.398

if.then.327:                                      ; preds = %land.lhs.true.322
  %164 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %call328 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %164)
  %165 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %cmp329 = icmp eq %struct.rtx_def* %call328, %165
  br i1 %cmp329, label %if.then.331, label %if.end.335

if.then.331:                                      ; preds = %if.then.327
  %166 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i32 0, i64 2
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx334, align 8
  store %struct.rtx_def* %167, %struct.rtx_def** %p, align 8
  br label %while.cond.28

if.end.335:                                       ; preds = %if.then.327
  store i32 0, i32* %i, align 4
  br label %for.cond.336

for.cond.336:                                     ; preds = %for.inc.348, %if.end.335
  %168 = load i32, i32* %i, align 4
  %169 = load i32, i32* %path_entry, align 4
  %cmp337 = icmp slt i32 %168, %169
  br i1 %cmp337, label %for.body.339, label %for.end.350

for.body.339:                                     ; preds = %for.cond.336
  %170 = load i32, i32* %i, align 4
  %idxprom340 = sext i32 %170 to i64
  %171 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path341 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %171, i32 0, i32 5
  %arrayidx342 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path341, i32 0, i64 %idxprom340
  %branch343 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx342, i32 0, i32 0
  %172 = load %struct.rtx_def*, %struct.rtx_def** %branch343, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %cmp344 = icmp eq %struct.rtx_def* %172, %173
  br i1 %cmp344, label %if.then.346, label %if.end.347

if.then.346:                                      ; preds = %for.body.339
  br label %for.end.350

if.end.347:                                       ; preds = %for.body.339
  br label %for.inc.348

for.inc.348:                                      ; preds = %if.end.347
  %174 = load i32, i32* %i, align 4
  %inc349 = add nsw i32 %174, 1
  store i32 %inc349, i32* %i, align 4
  br label %for.cond.336

for.end.350:                                      ; preds = %if.then.346, %for.cond.336
  %175 = load i32, i32* %i, align 4
  %176 = load i32, i32* %path_entry, align 4
  %cmp351 = icmp ne i32 %175, %176
  br i1 %cmp351, label %if.then.353, label %if.end.354

if.then.353:                                      ; preds = %for.end.350
  br label %while.end.405

if.end.354:                                       ; preds = %for.end.350
  %177 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i32 0, i64 2
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx357, align 8
  store %struct.rtx_def* %178, %struct.rtx_def** %tmp, align 8
  br label %for.cond.358

for.cond.358:                                     ; preds = %for.inc.371, %if.end.354
  %179 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8
  %tobool359 = icmp ne %struct.rtx_def* %179, null
  br i1 %tobool359, label %land.rhs.360, label %land.end.363

land.rhs.360:                                     ; preds = %for.cond.358
  %180 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8
  %181 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %cmp361 = icmp ne %struct.rtx_def* %180, %181
  br label %land.end.363

land.end.363:                                     ; preds = %land.rhs.360, %for.cond.358
  %182 = phi i1 [ false, %for.cond.358 ], [ %cmp361, %land.rhs.360 ]
  br i1 %182, label %for.body.364, label %for.end.375

for.body.364:                                     ; preds = %land.end.363
  %183 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load365 = load i32, i32* %184, align 8
  %bf.clear366 = and i32 %bf.load365, 65535
  %cmp367 = icmp eq i32 %bf.clear366, 36
  br i1 %cmp367, label %if.then.369, label %if.end.370

if.then.369:                                      ; preds = %for.body.364
  br label %for.end.375

if.end.370:                                       ; preds = %for.body.364
  br label %for.inc.371

for.inc.371:                                      ; preds = %if.end.370
  %185 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 2
  %rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx374, align 8
  store %struct.rtx_def* %186, %struct.rtx_def** %tmp, align 8
  br label %for.cond.358

for.end.375:                                      ; preds = %if.then.369, %land.end.363
  %187 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %cmp376 = icmp eq %struct.rtx_def* %187, %188
  br i1 %cmp376, label %if.then.378, label %if.end.397

if.then.378:                                      ; preds = %for.end.375
  %189 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %190 = load i32, i32* %path_entry, align 4
  %idxprom379 = sext i32 %190 to i64
  %191 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path380 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %191, i32 0, i32 5
  %arrayidx381 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path380, i32 0, i64 %idxprom379
  %branch382 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx381, i32 0, i32 0
  store %struct.rtx_def* %189, %struct.rtx_def** %branch382, align 8
  %192 = load i32, i32* %path_entry, align 4
  %inc383 = add nsw i32 %192, 1
  store i32 %inc383, i32* %path_entry, align 4
  %idxprom384 = sext i32 %192 to i64
  %193 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path385 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %193, i32 0, i32 5
  %arrayidx386 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path385, i32 0, i64 %idxprom384
  %status387 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx386, i32 0, i32 1
  store i32 2, i32* %status387, align 4
  %194 = load i32, i32* %path_entry, align 4
  store i32 %194, i32* %path_size, align 4
  %195 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i32 0, i64 7
  %rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx390, align 8
  store %struct.rtx_def* %196, %struct.rtx_def** %p, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i32 0, i64 2
  %rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx393, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load394 = load i32, i32* %199, align 8
  %bf.clear395 = and i32 %bf.load394, -16711681
  %bf.set396 = or i32 %bf.clear395, 131072
  store i32 %bf.set396, i32* %199, align 8
  br label %if.end.397

if.end.397:                                       ; preds = %if.then.378, %for.end.375
  br label %if.end.398

if.end.398:                                       ; preds = %if.end.397, %land.lhs.true.322, %land.lhs.true.319, %if.else.317
  br label %if.end.399

if.end.399:                                       ; preds = %if.end.398, %if.end.299
  br label %if.end.400

if.end.400:                                       ; preds = %if.end.399, %land.lhs.true.201, %land.lhs.true.192, %land.lhs.true.186, %land.lhs.true.175, %land.lhs.true.167, %land.lhs.true.162, %land.lhs.true.159, %lor.lhs.false
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %if.end.155
  %200 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld402 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx403 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i32 0, i64 2
  %rtx404 = bitcast %union.rtunion_def* %arrayidx403 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx404, align 8
  store %struct.rtx_def* %201, %struct.rtx_def** %p, align 8
  br label %while.cond.28

while.end.405:                                    ; preds = %if.then.353, %if.then.298, %if.then.64, %if.then.45, %land.end
  %202 = load i32, i32* %low_cuid, align 4
  %203 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %low_cuid406 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %203, i32 0, i32 0
  store i32 %202, i32* %low_cuid406, align 4
  %204 = load i32, i32* %high_cuid, align 4
  %205 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %high_cuid407 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %205, i32 0, i32 1
  store i32 %204, i32* %high_cuid407, align 4
  %206 = load i32, i32* %nsets, align 4
  %207 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %nsets408 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %207, i32 0, i32 2
  store i32 %206, i32* %nsets408, align 4
  %208 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %209 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %last = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %209, i32 0, i32 3
  store %struct.rtx_def* %208, %struct.rtx_def** %last, align 8
  %210 = load i32, i32* %path_size, align 4
  %sub409 = sub nsw i32 %210, 1
  store i32 %sub409, i32* %i, align 4
  br label %for.cond.410

for.cond.410:                                     ; preds = %for.inc.422, %while.end.405
  %211 = load i32, i32* %i, align 4
  %cmp411 = icmp sge i32 %211, 0
  br i1 %cmp411, label %for.body.413, label %for.end.424

for.body.413:                                     ; preds = %for.cond.410
  %212 = load i32, i32* %i, align 4
  %idxprom414 = sext i32 %212 to i64
  %213 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path415 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %213, i32 0, i32 5
  %arrayidx416 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path415, i32 0, i64 %idxprom414
  %status417 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx416, i32 0, i32 1
  %214 = load i32, i32* %status417, align 4
  %cmp418 = icmp ne i32 %214, 1
  br i1 %cmp418, label %if.then.420, label %if.end.421

if.then.420:                                      ; preds = %for.body.413
  br label %for.end.424

if.end.421:                                       ; preds = %for.body.413
  br label %for.inc.422

for.inc.422:                                      ; preds = %if.end.421
  %215 = load i32, i32* %i, align 4
  %dec423 = add nsw i32 %215, -1
  store i32 %dec423, i32* %i, align 4
  br label %for.cond.410

for.end.424:                                      ; preds = %if.then.420, %for.cond.410
  %216 = load i32, i32* %i, align 4
  %cmp425 = icmp eq i32 %216, -1
  br i1 %cmp425, label %if.then.427, label %if.else.429

if.then.427:                                      ; preds = %for.end.424
  %217 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path_size428 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %217, i32 0, i32 4
  store i32 0, i32* %path_size428, align 4
  br label %if.end.431

if.else.429:                                      ; preds = %for.end.424
  %218 = load i32, i32* %path_size, align 4
  %219 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path_size430 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %219, i32 0, i32 4
  store i32 %218, i32* %path_size430, align 4
  br label %if.end.431

if.end.431:                                       ; preds = %if.else.429, %if.then.427
  %220 = load i32, i32* %path_size, align 4
  %idxprom432 = sext i32 %220 to i64
  %221 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8
  %path433 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %221, i32 0, i32 5
  %arrayidx434 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path433, i32 0, i64 %idxprom432
  %branch435 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx434, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %branch435, align 8
  ret void
}

declare %struct.rtx_def* @next_real_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @cse_main(%struct.rtx_def* %f, i32 %nregs, i32 %after_loop, %struct._IO_FILE* %file) #0 {
entry:
  %f.addr = alloca %struct.rtx_def*, align 8
  %nregs.addr = alloca i32, align 4
  %after_loop.addr = alloca i32, align 4
  %file.addr = alloca %struct._IO_FILE*, align 8
  %val = alloca %struct.cse_basic_block_data, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %old_cse_jumps_altered = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %f, %struct.rtx_def** %f.addr, align 8
  store i32 %nregs, i32* %nregs.addr, align 4
  store i32 %after_loop, i32* %after_loop.addr, align 4
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %insn, align 8
  store i32 0, i32* @cse_jumps_altered, align 4
  store i32 0, i32* @recorded_label_ref, align 4
  store i32 0, i32* @constant_pool_entries_cost, align 4
  %path_size = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 4
  store i32 0, i32* %path_size, align 4
  call void @init_recog()
  call void @init_alias_analysis()
  %1 = load i32, i32* %nregs.addr, align 4
  store i32 %1, i32* @max_reg, align 4
  %call = call i32 @get_max_uid()
  store i32 %call, i32* @max_insn_uid, align 4
  %2 = load i32, i32* %nregs.addr, align 4
  %conv = sext i32 %2 to i64
  %mul = mul i64 %conv, 8
  %call1 = call noalias i8* @xmalloc(i64 %mul)
  %3 = bitcast i8* %call1 to %struct.reg_eqv_elem*
  store %struct.reg_eqv_elem* %3, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  store i32 0, i32* @n_elements_made, align 4
  %call2 = call i32 @get_max_uid()
  store i32 %call2, i32* @max_uid, align 4
  %4 = load i32, i32* @max_uid, align 4
  %add = add nsw i32 %4, 1
  %conv3 = sext i32 %add to i64
  %call4 = call noalias i8* @xcalloc(i64 %conv3, i64 4)
  %5 = bitcast i8* %call4 to i32*
  store i32* %5, i32** @uid_cuid, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %insn, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %7, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load = load i32, i32* %9, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 37
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %11 = load i32, i32* %rtint, align 4
  %cmp6 = icmp slt i32 %11, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtint10 = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %14 = load i32, i32* %rtint10, align 4
  %idxprom = sext i32 %14 to i64
  %15 = load i32*, i32** @uid_cuid, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 %idxprom
  store i32 %inc, i32* %arrayidx11, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %16 = load i32, i32* %i, align 4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtint14 = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %18 = load i32, i32* %rtint14, align 4
  %idxprom15 = sext i32 %18 to i64
  %19 = load i32*, i32** @uid_cuid, align 8
  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15
  store i32 %16, i32* %arrayidx16, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @ggc_push_context()
  %22 = load %struct.rtx_def*, %struct.rtx_def** %f.addr, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %insn, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.85, %cond.end, %for.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool19 = icmp ne %struct.rtx_def* %23, null
  br i1 %tobool19, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 0, i32* @cse_altered, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %25 = load i32, i32* @flag_cse_follow_jumps, align 4
  %26 = load i32, i32* %after_loop.addr, align 4
  %27 = load i32, i32* @flag_cse_skip_blocks, align 4
  call void @cse_end_of_basic_block(%struct.rtx_def* %24, %struct.cse_basic_block_data* %val, i32 %25, i32 %26, i32 %27)
  %nsets = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 2
  %28 = load i32, i32* %nsets, align 4
  %cmp20 = icmp eq i32 %28, 0
  br i1 %cmp20, label %if.then.27, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %while.body
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load23 = load i32, i32* %30, align 8
  %bf.lshr = lshr i32 %bf.load23, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  %cmp25 = icmp eq i32 %bf.clear24, 2
  br i1 %cmp25, label %if.then.27, label %if.end.36

if.then.27:                                       ; preds = %lor.lhs.false.22, %while.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load28 = load i32, i32* %32, align 8
  %bf.clear29 = and i32 %bf.load28, -16711681
  store i32 %bf.clear29, i32* %32, align 8
  %last = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %33 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  %tobool30 = icmp ne %struct.rtx_def* %33, null
  br i1 %tobool30, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.27
  %last31 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %34 = load %struct.rtx_def*, %struct.rtx_def** %last31, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 2
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.27
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %35, %cond.true ], [ null, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %insn, align 8
  %path_size35 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 4
  store i32 0, i32* %path_size35, align 4
  br label %while.cond

if.end.36:                                        ; preds = %lor.lhs.false.22
  %low_cuid = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 0
  %36 = load i32, i32* %low_cuid, align 4
  store i32 %36, i32* @cse_basic_block_start, align 4
  %high_cuid = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 1
  %37 = load i32, i32* %high_cuid, align 4
  store i32 %37, i32* @cse_basic_block_end, align 4
  %nsets37 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 2
  %38 = load i32, i32* %nsets37, align 4
  %mul38 = mul nsw i32 %38, 2
  store i32 %mul38, i32* @max_qty, align 4
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %tobool39 = icmp ne %struct._IO_FILE* %39, null
  br i1 %tobool39, label %if.then.40, label %if.end.55

if.then.40:                                       ; preds = %if.end.36
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtint43 = bitcast %union.rtunion_def* %arrayidx42 to i32*
  %42 = load i32, i32* %rtint43, align 4
  %last44 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %43 = load %struct.rtx_def*, %struct.rtx_def** %last44, align 8
  %tobool45 = icmp ne %struct.rtx_def* %43, null
  br i1 %tobool45, label %cond.true.46, label %cond.false.51

cond.true.46:                                     ; preds = %if.then.40
  %last47 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %44 = load %struct.rtx_def*, %struct.rtx_def** %last47, align 8
  %fld48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i32 0, i64 0
  %rtint50 = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %45 = load i32, i32* %rtint50, align 4
  br label %cond.end.52

cond.false.51:                                    ; preds = %if.then.40
  br label %cond.end.52

cond.end.52:                                      ; preds = %cond.false.51, %cond.true.46
  %cond53 = phi i32 [ %45, %cond.true.46 ], [ 0, %cond.false.51 ]
  %nsets54 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 2
  %46 = load i32, i32* %nsets54, align 4
  call void (%struct._IO_FILE*, i8*, ...) @fnotice(%struct._IO_FILE* %40, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i32 0, i32 0), i32 %42, i32 %cond53, i32 %46)
  br label %if.end.55

if.end.55:                                        ; preds = %cond.end.52, %if.end.36
  %47 = load i32, i32* @max_qty, align 4
  %cmp56 = icmp slt i32 %47, 500
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  store i32 500, i32* @max_qty, align 4
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.58, %if.end.55
  %48 = load i32, i32* @max_reg, align 4
  %49 = load i32, i32* @max_qty, align 4
  %add60 = add nsw i32 %49, %48
  store i32 %add60, i32* @max_qty, align 4
  %path_size61 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 4
  %50 = load i32, i32* %path_size61, align 4
  %cmp62 = icmp sgt i32 %50, 0
  br i1 %cmp62, label %if.then.64, label %if.else.67

if.then.64:                                       ; preds = %if.end.59
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %last65 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %52 = load %struct.rtx_def*, %struct.rtx_def** %last65, align 8
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 5
  %arraydecay = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path, i32 0, i32 0
  %call66 = call %struct.rtx_def* @cse_basic_block(%struct.rtx_def* %51, %struct.rtx_def* %52, %struct.branch_path* %arraydecay, i32 0)
  br label %if.end.82

if.else.67:                                       ; preds = %if.end.59
  %53 = load i32, i32* @cse_jumps_altered, align 4
  store i32 %53, i32* %old_cse_jumps_altered, align 4
  store i32 0, i32* @cse_jumps_altered, align 4
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %last68 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %55 = load %struct.rtx_def*, %struct.rtx_def** %last68, align 8
  %path69 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 5
  %arraydecay70 = getelementptr inbounds [10 x %struct.branch_path], [10 x %struct.branch_path]* %path69, i32 0, i32 0
  %56 = load i32, i32* %after_loop.addr, align 4
  %tobool71 = icmp ne i32 %56, 0
  %lnot = xor i1 %tobool71, true
  %lnot.ext = zext i1 %lnot to i32
  %call72 = call %struct.rtx_def* @cse_basic_block(%struct.rtx_def* %54, %struct.rtx_def* %55, %struct.branch_path* %arraydecay70, i32 %lnot.ext)
  store %struct.rtx_def* %call72, %struct.rtx_def** %temp, align 8
  %57 = load i32, i32* @cse_jumps_altered, align 4
  %cmp73 = icmp eq i32 %57, 0
  br i1 %cmp73, label %if.then.80, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %if.else.67
  %58 = load i32, i32* @flag_cse_follow_jumps, align 4
  %cmp76 = icmp eq i32 %58, 0
  br i1 %cmp76, label %land.lhs.true, label %if.end.81

land.lhs.true:                                    ; preds = %lor.lhs.false.75
  %59 = load i32, i32* @flag_cse_skip_blocks, align 4
  %cmp78 = icmp eq i32 %59, 0
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %land.lhs.true, %if.else.67
  %60 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8
  store %struct.rtx_def* %60, %struct.rtx_def** %insn, align 8
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %land.lhs.true, %lor.lhs.false.75
  %61 = load i32, i32* %old_cse_jumps_altered, align 4
  %62 = load i32, i32* @cse_jumps_altered, align 4
  %or = or i32 %62, %61
  store i32 %or, i32* @cse_jumps_altered, align 4
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %if.then.64
  %63 = load i32, i32* @cse_altered, align 4
  %tobool83 = icmp ne i32 %63, 0
  br i1 %tobool83, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.end.82
  call void @ggc_collect()
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.84, %if.end.82
  br label %while.cond

while.end:                                        ; preds = %while.cond
  call void @ggc_pop_context()
  %64 = load i32, i32* @max_elements_made, align 4
  %65 = load i32, i32* @n_elements_made, align 4
  %cmp86 = icmp slt i32 %64, %65
  br i1 %cmp86, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %while.end
  %66 = load i32, i32* @n_elements_made, align 4
  store i32 %66, i32* @max_elements_made, align 4
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.88, %while.end
  call void @end_alias_analysis()
  %67 = load i32*, i32** @uid_cuid, align 8
  %68 = bitcast i32* %67 to i8*
  call void @free(i8* %68) #4
  %69 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %70 = bitcast %struct.reg_eqv_elem* %69 to i8*
  call void @free(i8* %70) #4
  %71 = load i32, i32* @cse_jumps_altered, align 4
  %tobool90 = icmp ne i32 %71, 0
  br i1 %tobool90, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.89
  %72 = load i32, i32* @recorded_label_ref, align 4
  %tobool91 = icmp ne i32 %72, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.89
  %73 = phi i1 [ true, %if.end.89 ], [ %tobool91, %lor.rhs ]
  %lor.ext = zext i1 %73 to i32
  ret i32 %lor.ext
}

declare void @init_recog() #1

declare void @init_alias_analysis() #1

declare i32 @get_max_uid() #1

declare noalias i8* @xmalloc(i64) #1

declare noalias i8* @xcalloc(i64, i64) #1

declare void @ggc_push_context() #1

declare void @fnotice(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @cse_basic_block(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.branch_path* %next_branch, i32 %around_loop) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %next_branch.addr = alloca %struct.branch_path*, align 8
  %around_loop.addr = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %to_usage = alloca i32, align 4
  %libcall_insn = alloca %struct.rtx_def*, align 8
  %num_insns = alloca i32, align 4
  %code = alloca i32, align 4
  %status = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.cse_basic_block_data, align 8
  %prev = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  store %struct.branch_path* %next_branch, %struct.branch_path** %next_branch.addr, align 8
  store i32 %around_loop, i32* %around_loop.addr, align 4
  store i32 0, i32* %to_usage, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %libcall_insn, align 8
  store i32 0, i32* %num_insns, align 4
  %0 = load i32, i32* @max_qty, align 4
  %1 = load i32, i32* @max_reg, align 4
  %sub = sub nsw i32 %0, %1
  %conv = sext i32 %sub to i64
  %mul = mul i64 %conv, 48
  %call = call noalias i8* @xmalloc(i64 %mul)
  %2 = bitcast i8* %call to %struct.qty_table_elem*
  store %struct.qty_table_elem* %2, %struct.qty_table_elem** @qty_table, align 8
  %3 = load i32, i32* @max_reg, align 4
  %4 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %idx.ext = sext i32 %3 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %4, i64 %idx.neg
  store %struct.qty_table_elem* %add.ptr, %struct.qty_table_elem** @qty_table, align 8
  call void @new_basic_block()
  %5 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp = icmp ne %struct.rtx_def* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32, i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 36
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %9 = load i32, i32* %rtint, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %rtint, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8
  store %struct.rtx_def* %10, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp4 = icmp ne %struct.rtx_def* %11, %12
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load6 = load i32, i32* %14, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  store i32 %bf.clear7, i32* %code, align 4
  %15 = load i32, i32* %code, align 4
  %cmp8 = icmp ne i32 %15, 37
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.15

land.lhs.true.10:                                 ; preds = %for.body
  %16 = load i32, i32* %num_insns, align 4
  %inc11 = add nsw i32 %16, 1
  store i32 %inc11, i32* %num_insns, align 4
  %cmp12 = icmp sgt i32 %16, 1000
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true.10
  call void @flush_hash_table()
  store i32 0, i32* %num_insns, align 4
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true.10, %for.body
  %17 = load %struct.branch_path*, %struct.branch_path** %next_branch.addr, align 8
  %branch = getelementptr inbounds %struct.branch_path, %struct.branch_path* %17, i32 0, i32 0
  %18 = load %struct.rtx_def*, %struct.rtx_def** %branch, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp16 = icmp eq %struct.rtx_def* %18, %19
  br i1 %cmp16, label %if.then.18, label %if.end.33

if.then.18:                                       ; preds = %if.end.15
  %20 = load %struct.branch_path*, %struct.branch_path** %next_branch.addr, align 8
  %incdec.ptr = getelementptr inbounds %struct.branch_path, %struct.branch_path* %20, i32 1
  store %struct.branch_path* %incdec.ptr, %struct.branch_path** %next_branch.addr, align 8
  %status19 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %20, i32 0, i32 1
  %21 = load i32, i32* %status19, align 4
  store i32 %21, i32* %status, align 4
  %22 = load i32, i32* %status, align 4
  %cmp20 = icmp ne i32 %22, 1
  br i1 %cmp20, label %if.then.22, label %if.end.32

if.then.22:                                       ; preds = %if.then.18
  %23 = load i32, i32* %status, align 4
  %cmp23 = icmp eq i32 %23, 0
  br i1 %cmp23, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %if.then.22
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @record_jump_equiv(%struct.rtx_def* %24, i32 1)
  br label %if.end.28

if.else:                                          ; preds = %if.then.22
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @invalidate_skipped_block(%struct.rtx_def* %26)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.25
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %27, %struct.rtx_def** @prev_insn, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i32 0, i64 7
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx31, align 8
  store %struct.rtx_def* %29, %struct.rtx_def** %insn, align 8
  br label %for.inc

if.end.32:                                        ; preds = %if.then.18
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.end.15
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load34 = load i32, i32* %31, align 8
  %bf.lshr = lshr i32 %bf.load34, 16
  %bf.clear35 = and i32 %bf.lshr, 255
  %cmp36 = icmp eq i32 %bf.clear35, 2
  br i1 %cmp36, label %if.then.38, label %if.end.41

if.then.38:                                       ; preds = %if.end.33
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load39 = load i32, i32* %33, align 8
  %bf.clear40 = and i32 %bf.load39, -16711681
  store i32 %bf.clear40, i32* %33, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.38, %if.end.33
  %34 = load i32, i32* %code, align 4
  %idxprom = sext i32 %34 to i64
  %arrayidx42 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %35 = load i8, i8* %arrayidx42, align 1
  %conv43 = sext i8 %35 to i32
  %cmp44 = icmp eq i32 %conv43, 105
  br i1 %cmp44, label %if.then.46, label %if.end.92

if.then.46:                                       ; preds = %if.end.41
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i32 0, i64 6
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx49, align 8
  %tobool = icmp ne %struct.rtx_def* %37, null
  br i1 %tobool, label %if.then.50, label %if.end.58

if.then.50:                                       ; preds = %if.then.46
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 6
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %call54 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %39, %struct.rtx_def* null)
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 6
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  store %struct.rtx_def* %call54, %struct.rtx_def** %rtx57, align 8
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.50, %if.then.46
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 6
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %cmp62 = icmp ne %struct.rtx_def* %42, null
  br i1 %cmp62, label %if.then.64, label %if.end.77

if.then.64:                                       ; preds = %if.end.58
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call65 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %43, i32 7, %struct.rtx_def* null)
  store %struct.rtx_def* %call65, %struct.rtx_def** %p, align 8
  %tobool66 = icmp ne %struct.rtx_def* %call65, null
  br i1 %tobool66, label %if.then.67, label %if.else.71

if.then.67:                                       ; preds = %if.then.64
  %44 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 0
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rtx70, align 8
  store %struct.rtx_def* %45, %struct.rtx_def** %libcall_insn, align 8
  br label %if.end.76

if.else.71:                                       ; preds = %if.then.64
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call72 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %46, i32 6, %struct.rtx_def* null)
  %tobool73 = icmp ne %struct.rtx_def* %call72, null
  br i1 %tobool73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.else.71
  store %struct.rtx_def* null, %struct.rtx_def** %libcall_insn, align 8
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.74, %if.else.71
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %if.then.67
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %if.end.58
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn, align 8
  call void @cse_insn(%struct.rtx_def* %47, %struct.rtx_def* %48)
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load78 = load i32, i32* %50, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 32
  br i1 %cmp80, label %land.lhs.true.82, label %if.end.91

land.lhs.true.82:                                 ; preds = %if.end.77
  %51 = load i32, i32* @recorded_label_ref, align 4
  %tobool83 = icmp ne i32 %51, 0
  br i1 %tobool83, label %if.end.91, label %land.lhs.true.84

land.lhs.true.84:                                 ; preds = %land.lhs.true.82
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 3
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %54 = bitcast %struct.rtx_def* %53 to i8*
  %call88 = call i32 @for_each_rtx(%struct.rtx_def** %rtx87, i32 (%struct.rtx_def**, i8*)* @check_for_label_ref, i8* %54)
  %tobool89 = icmp ne i32 %call88, 0
  br i1 %tobool89, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %land.lhs.true.84
  store i32 1, i32* @recorded_label_ref, align 4
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.90, %land.lhs.true.84, %land.lhs.true.82, %if.end.77
  br label %if.end.92

if.end.92:                                        ; preds = %if.end.91, %if.end.41
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call93 = call i32 @any_uncondjump_p(%struct.rtx_def* %55)
  %tobool94 = icmp ne i32 %call93, 0
  br i1 %tobool94, label %if.then.95, label %if.end.118

if.then.95:                                       ; preds = %if.end.92
  %56 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp96 = icmp eq %struct.rtx_def* %56, null
  br i1 %cmp96, label %if.then.98, label %if.end.101

if.then.98:                                       ; preds = %if.then.95
  %57 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %58 = load i32, i32* @max_reg, align 4
  %idx.ext99 = sext i32 %58 to i64
  %add.ptr100 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %57, i64 %idx.ext99
  %59 = bitcast %struct.qty_table_elem* %add.ptr100 to i8*
  call void @free(i8* %59) #4
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.101:                                       ; preds = %if.then.95
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 7
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %62 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp105 = icmp eq %struct.rtx_def* %61, %62
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.end.101
  store i32 1, i32* %to_usage, align 4
  br label %if.end.108

if.end.108:                                       ; preds = %if.then.107, %if.end.101
  %63 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load109 = load i32, i32* %64, align 8
  %bf.lshr110 = lshr i32 %bf.load109, 27
  %bf.clear111 = and i32 %bf.lshr110, 1
  %tobool112 = icmp ne i32 %bf.clear111, 0
  br i1 %tobool112, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %if.end.108
  br label %for.end

if.end.114:                                       ; preds = %if.end.108
  %65 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i32 0, i64 1
  %rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rtx117, align 8
  store %struct.rtx_def* %66, %struct.rtx_def** %insn, align 8
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.114, %if.end.92
  %67 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp119 = icmp ne %struct.rtx_def* %67, null
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.180

land.lhs.true.121:                                ; preds = %if.end.118
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 2
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rtx124, align 8
  %70 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp125 = icmp eq %struct.rtx_def* %69, %70
  br i1 %cmp125, label %land.lhs.true.127, label %if.end.180

land.lhs.true.127:                                ; preds = %land.lhs.true.121
  %71 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load128 = load i32, i32* %72, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 36
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.180

land.lhs.true.132:                                ; preds = %land.lhs.true.127
  %73 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 3
  %rtint135 = bitcast %union.rtunion_def* %arrayidx134 to i32*
  %74 = load i32, i32* %rtint135, align 4
  %dec = add nsw i32 %74, -1
  store i32 %dec, i32* %rtint135, align 4
  %75 = load i32, i32* %to_usage, align 4
  %cmp136 = icmp eq i32 %dec, %75
  br i1 %cmp136, label %if.then.138, label %if.end.180

if.then.138:                                      ; preds = %land.lhs.true.132
  %76 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i32 0, i64 2
  %rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx141, align 8
  store %struct.rtx_def* %77, %struct.rtx_def** %insn, align 8
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp142 = icmp eq %struct.rtx_def* %78, null
  br i1 %cmp142, label %if.then.144, label %if.end.147

if.then.144:                                      ; preds = %if.then.138
  %79 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %80 = load i32, i32* @max_reg, align 4
  %idx.ext145 = sext i32 %80 to i64
  %add.ptr146 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %79, i64 %idx.ext145
  %81 = bitcast %struct.qty_table_elem* %add.ptr146 to i8*
  call void @free(i8* %81) #4
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.147:                                       ; preds = %if.then.138
  %82 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %call148 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %82)
  store %struct.rtx_def* %call148, %struct.rtx_def** %prev, align 8
  %83 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %tobool149 = icmp ne %struct.rtx_def* %83, null
  br i1 %tobool149, label %land.lhs.true.150, label %if.end.158

land.lhs.true.150:                                ; preds = %if.end.147
  %84 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load151 = load i32, i32* %85, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 35
  br i1 %cmp153, label %if.then.155, label %if.end.158

if.then.155:                                      ; preds = %land.lhs.true.150
  %86 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %87 = load i32, i32* @max_reg, align 4
  %idx.ext156 = sext i32 %87 to i64
  %add.ptr157 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %86, i64 %idx.ext156
  %88 = bitcast %struct.qty_table_elem* %add.ptr157 to i8*
  call void @free(i8* %88) #4
  %89 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %retval
  br label %return

if.end.158:                                       ; preds = %land.lhs.true.150, %if.end.147
  store i32 0, i32* %to_usage, align 4
  %path_size = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 4
  store i32 0, i32* %path_size, align 4
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  call void @cse_end_of_basic_block(%struct.rtx_def* %90, %struct.cse_basic_block_data* %val, i32 0, i32 0, i32 0)
  %nsets = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 2
  %91 = load i32, i32* %nsets, align 4
  %mul159 = mul nsw i32 %91, 2
  %92 = load i32, i32* @next_qty, align 4
  %add = add nsw i32 %mul159, %92
  %93 = load i32, i32* @max_qty, align 4
  %cmp160 = icmp sgt i32 %add, %93
  br i1 %cmp160, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.158
  br label %for.end

if.end.163:                                       ; preds = %if.end.158
  %low_cuid = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 0
  %94 = load i32, i32* %low_cuid, align 4
  store i32 %94, i32* @cse_basic_block_start, align 4
  %high_cuid = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 1
  %95 = load i32, i32* %high_cuid, align 4
  store i32 %95, i32* @cse_basic_block_end, align 4
  %last = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %val, i32 0, i32 3
  %96 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8
  store %struct.rtx_def* %96, %struct.rtx_def** %to.addr, align 8
  %97 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp164 = icmp ne %struct.rtx_def* %97, null
  br i1 %cmp164, label %land.lhs.true.166, label %if.end.176

land.lhs.true.166:                                ; preds = %if.end.163
  %98 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load167 = load i32, i32* %99, align 8
  %bf.clear168 = and i32 %bf.load167, 65535
  %cmp169 = icmp eq i32 %bf.clear168, 36
  br i1 %cmp169, label %if.then.171, label %if.end.176

if.then.171:                                      ; preds = %land.lhs.true.166
  %100 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld172, i32 0, i64 3
  %rtint174 = bitcast %union.rtunion_def* %arrayidx173 to i32*
  %101 = load i32, i32* %rtint174, align 4
  %inc175 = add nsw i32 %101, 1
  store i32 %inc175, i32* %rtint174, align 4
  br label %if.end.176

if.end.176:                                       ; preds = %if.then.171, %land.lhs.true.166, %if.end.163
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 1
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx179, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %insn, align 8
  br label %if.end.180

if.end.180:                                       ; preds = %if.end.176, %land.lhs.true.132, %land.lhs.true.127, %land.lhs.true.121, %if.end.118
  br label %for.inc

for.inc:                                          ; preds = %if.end.180, %if.end.28
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i32 0, i64 2
  %rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rtx183, align 8
  store %struct.rtx_def* %105, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.162, %if.then.113, %for.cond
  %106 = load i32, i32* @next_qty, align 4
  %107 = load i32, i32* @max_qty, align 4
  %cmp184 = icmp sgt i32 %106, %107
  br i1 %cmp184, label %if.then.186, label %if.end.187

if.then.186:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 7379, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cse_basic_block, i32 0, i32 0)) #7
  unreachable

if.end.187:                                       ; preds = %for.end
  %108 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %call188 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %108)
  store %struct.rtx_def* %call188, %struct.rtx_def** %insn, align 8
  %109 = load i32, i32* @cse_jumps_altered, align 4
  %cmp189 = icmp eq i32 %109, 0
  br i1 %cmp189, label %land.lhs.true.196, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.187
  %110 = load i32, i32* @flag_cse_follow_jumps, align 4
  %cmp191 = icmp eq i32 %110, 0
  br i1 %cmp191, label %land.lhs.true.193, label %if.end.236

land.lhs.true.193:                                ; preds = %lor.lhs.false
  %111 = load i32, i32* @flag_cse_skip_blocks, align 4
  %cmp194 = icmp eq i32 %111, 0
  br i1 %cmp194, label %land.lhs.true.196, label %if.end.236

land.lhs.true.196:                                ; preds = %land.lhs.true.193, %if.end.187
  %112 = load i32, i32* %around_loop.addr, align 4
  %tobool197 = icmp ne i32 %112, 0
  br i1 %tobool197, label %land.lhs.true.198, label %if.end.236

land.lhs.true.198:                                ; preds = %land.lhs.true.196
  %113 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %cmp199 = icmp ne %struct.rtx_def* %113, null
  br i1 %cmp199, label %land.lhs.true.201, label %if.end.236

land.lhs.true.201:                                ; preds = %land.lhs.true.198
  %114 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load202 = load i32, i32* %115, align 8
  %bf.clear203 = and i32 %bf.load202, 65535
  %cmp204 = icmp eq i32 %bf.clear203, 37
  br i1 %cmp204, label %land.lhs.true.206, label %if.end.236

land.lhs.true.206:                                ; preds = %land.lhs.true.201
  %116 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 4
  %rtint209 = bitcast %union.rtunion_def* %arrayidx208 to i32*
  %117 = load i32, i32* %rtint209, align 4
  %cmp210 = icmp eq i32 %117, -95
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.236

land.lhs.true.212:                                ; preds = %land.lhs.true.206
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %119 = bitcast %struct.rtx_def* %118 to i32*
  %bf.load213 = load i32, i32* %119, align 8
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 33
  br i1 %cmp215, label %land.lhs.true.217, label %if.end.236

land.lhs.true.217:                                ; preds = %land.lhs.true.212
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 7
  %rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx220, align 8
  %cmp221 = icmp ne %struct.rtx_def* %121, null
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.236

land.lhs.true.223:                                ; preds = %land.lhs.true.217
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i32 0, i64 7
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx226, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 3
  %rtint229 = bitcast %union.rtunion_def* %arrayidx228 to i32*
  %124 = load i32, i32* %rtint229, align 4
  %cmp230 = icmp eq i32 %124, 1
  br i1 %cmp230, label %if.then.232, label %if.end.236

if.then.232:                                      ; preds = %land.lhs.true.223
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i32 0, i64 7
  %rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx235, align 8
  call void @cse_around_loop(%struct.rtx_def* %126)
  br label %if.end.236

if.end.236:                                       ; preds = %if.then.232, %land.lhs.true.223, %land.lhs.true.217, %land.lhs.true.212, %land.lhs.true.206, %land.lhs.true.201, %land.lhs.true.198, %land.lhs.true.196, %land.lhs.true.193, %lor.lhs.false
  %127 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %128 = load i32, i32* @max_reg, align 4
  %idx.ext237 = sext i32 %128 to i64
  %add.ptr238 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %127, i64 %idx.ext237
  %129 = bitcast %struct.qty_table_elem* %add.ptr238 to i8*
  call void @free(i8* %129) #4
  %130 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %tobool239 = icmp ne %struct.rtx_def* %130, null
  br i1 %tobool239, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.236
  %131 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 2
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.236
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %132, %cond.true ], [ null, %cond.false ]
  store %struct.rtx_def* %cond, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end, %if.then.155, %if.then.144, %if.then.98
  %133 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %133
}

declare void @ggc_collect() #1

declare void @ggc_pop_context() #1

declare void @end_alias_analysis() #1

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define void @delete_trivially_dead_insns(%struct.rtx_def* %insns, i32 %nreg, i32 %preserve_basic_blocks) #0 {
entry:
  %insns.addr = alloca %struct.rtx_def*, align 8
  %nreg.addr = alloca i32, align 4
  %preserve_basic_blocks.addr = alloca i32, align 4
  %counts = alloca i32*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %in_libcall = alloca i32, align 4
  %dead_libcall = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %live_insn = alloca i32, align 4
  %live_insn48 = alloca i32, align 4
  store %struct.rtx_def* %insns, %struct.rtx_def** %insns.addr, align 8
  store i32 %nreg, i32* %nreg.addr, align 4
  store i32 %preserve_basic_blocks, i32* %preserve_basic_blocks.addr, align 4
  store i32 0, i32* %in_libcall, align 4
  store i32 0, i32* %dead_libcall, align 4
  %0 = load i32, i32* %nreg.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @xcalloc(i64 %conv, i64 4)
  %1 = bitcast i8* %call to i32*
  store i32* %1, i32** %counts, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insns.addr, align 8
  %call1 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %2)
  store %struct.rtx_def* %call1, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %5 = load i32*, i32** %counts, align 8
  call void @count_reg_usage(%struct.rtx_def* %4, i32* %5, %struct.rtx_def* null, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call2 = call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %6)
  store %struct.rtx_def* %call2, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call3 = call %struct.rtx_def* @get_last_insn()
  store %struct.rtx_def* %call3, %struct.rtx_def** %insn, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load = load i32, i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %9 = load i8, i8* %arrayidx, align 1
  %conv4 = sext i8 %9 to i32
  %cmp = icmp eq i32 %conv4, 105
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %for.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call6 = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %10)
  store %struct.rtx_def* %call6, %struct.rtx_def** %insn, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %11 = load i32, i32* %preserve_basic_blocks.addr, align 4
  %tobool7 = icmp ne i32 %11, 0
  br i1 %tobool7, label %if.else.36, label %if.then.8

if.then.8:                                        ; preds = %if.end
  br label %for.cond.9

for.cond.9:                                       ; preds = %for.inc.34, %if.then.8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool10 = icmp ne %struct.rtx_def* %12, null
  br i1 %tobool10, label %for.body.11, label %for.end.35

for.body.11:                                      ; preds = %for.cond.9
  store i32 0, i32* %live_insn, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call12 = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %13)
  store %struct.rtx_def* %call12, %struct.rtx_def** %prev, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call13 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %14, i32 6, %struct.rtx_def* null)
  %tobool14 = icmp ne %struct.rtx_def* %call13, null
  br i1 %tobool14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %for.body.11
  store i32 1, i32* %in_libcall, align 4
  store i32 1, i32* %live_insn, align 4
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call16 = call zeroext i1 @dead_libcall_p(%struct.rtx_def* %15)
  %conv17 = zext i1 %call16 to i32
  store i32 %conv17, i32* %dead_libcall, align 4
  br label %if.end.25

if.else:                                          ; preds = %for.body.11
  %16 = load i32, i32* %in_libcall, align 4
  %tobool18 = icmp ne i32 %16, 0
  br i1 %tobool18, label %if.then.19, label %if.else.21

if.then.19:                                       ; preds = %if.else
  %17 = load i32, i32* %dead_libcall, align 4
  %tobool20 = icmp ne i32 %17, 0
  %lnot = xor i1 %tobool20, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %live_insn, align 4
  br label %if.end.24

if.else.21:                                       ; preds = %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %19 = load i32*, i32** %counts, align 8
  %call22 = call zeroext i1 @insn_live_p(%struct.rtx_def* %18, i32* %19)
  %conv23 = zext i1 %call22 to i32
  store i32 %conv23, i32* %live_insn, align 4
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.19
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.then.15
  %20 = load i32, i32* %live_insn, align 4
  %tobool26 = icmp ne i32 %20, 0
  br i1 %tobool26, label %if.end.29, label %if.then.27

if.then.27:                                       ; preds = %if.end.25
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %22 = load i32*, i32** %counts, align 8
  call void @count_reg_usage(%struct.rtx_def* %21, i32* %22, %struct.rtx_def* null, i32 -1)
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call28 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %23)
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.27, %if.end.25
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call30 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %24, i32 7, %struct.rtx_def* null)
  %tobool31 = icmp ne %struct.rtx_def* %call30, null
  br i1 %tobool31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %in_libcall, align 4
  store i32 0, i32* %dead_libcall, align 4
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.32, %if.end.29
  br label %for.inc.34

for.inc.34:                                       ; preds = %if.end.33
  %25 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  store %struct.rtx_def* %25, %struct.rtx_def** %insn, align 8
  br label %for.cond.9

for.end.35:                                       ; preds = %for.cond.9
  br label %if.end.87

if.else.36:                                       ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond.37

for.cond.37:                                      ; preds = %for.inc.85, %if.else.36
  %26 = load i32, i32* %i, align 4
  %27 = load i32, i32* @n_basic_blocks, align 4
  %cmp38 = icmp slt i32 %26, %27
  br i1 %cmp38, label %for.body.40, label %for.end.86

for.body.40:                                      ; preds = %for.cond.37
  %28 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %28 to i64
  %29 = load %struct.varray_head_tag*, %struct.varray_head_tag** @basic_block_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %29, i32 0, i32 4
  %bb42 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx43 = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %bb42, i32 0, i64 %idxprom41
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx43, align 8
  store %struct.basic_block_def* %30, %struct.basic_block_def** %bb, align 8
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %end = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 1
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %insn, align 8
  br label %for.cond.44

for.cond.44:                                      ; preds = %for.inc.83, %for.body.40
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8
  %head = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i32 0, i32 0
  %35 = load %struct.rtx_def*, %struct.rtx_def** %head, align 8
  %cmp45 = icmp ne %struct.rtx_def* %33, %35
  br i1 %cmp45, label %for.body.47, label %for.end.84

for.body.47:                                      ; preds = %for.cond.44
  store i32 0, i32* %live_insn48, align 4
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %37, %struct.rtx_def** %prev, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load50 = load i32, i32* %39, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %idxprom52 = sext i32 %bf.clear51 to i64
  %arrayidx53 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom52
  %40 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %40 to i32
  %cmp55 = icmp eq i32 %conv54, 105
  br i1 %cmp55, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %for.body.47
  br label %for.inc.83

if.end.58:                                        ; preds = %for.body.47
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call59 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %41, i32 6, %struct.rtx_def* null)
  %tobool60 = icmp ne %struct.rtx_def* %call59, null
  br i1 %tobool60, label %if.then.61, label %if.else.64

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %in_libcall, align 4
  store i32 1, i32* %live_insn48, align 4
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call62 = call zeroext i1 @dead_libcall_p(%struct.rtx_def* %42)
  %conv63 = zext i1 %call62 to i32
  store i32 %conv63, i32* %dead_libcall, align 4
  br label %if.end.74

if.else.64:                                       ; preds = %if.end.58
  %43 = load i32, i32* %in_libcall, align 4
  %tobool65 = icmp ne i32 %43, 0
  br i1 %tobool65, label %if.then.66, label %if.else.70

if.then.66:                                       ; preds = %if.else.64
  %44 = load i32, i32* %dead_libcall, align 4
  %tobool67 = icmp ne i32 %44, 0
  %lnot68 = xor i1 %tobool67, true
  %lnot.ext69 = zext i1 %lnot68 to i32
  store i32 %lnot.ext69, i32* %live_insn48, align 4
  br label %if.end.73

if.else.70:                                       ; preds = %if.else.64
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %46 = load i32*, i32** %counts, align 8
  %call71 = call zeroext i1 @insn_live_p(%struct.rtx_def* %45, i32* %46)
  %conv72 = zext i1 %call71 to i32
  store i32 %conv72, i32* %live_insn48, align 4
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.66
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.then.61
  %47 = load i32, i32* %live_insn48, align 4
  %tobool75 = icmp ne i32 %47, 0
  br i1 %tobool75, label %if.end.78, label %if.then.76

if.then.76:                                       ; preds = %if.end.74
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %49 = load i32*, i32** %counts, align 8
  call void @count_reg_usage(%struct.rtx_def* %48, i32* %49, %struct.rtx_def* null, i32 -1)
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call77 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %50)
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.76, %if.end.74
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %call79 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %51, i32 7, %struct.rtx_def* null)
  %tobool80 = icmp ne %struct.rtx_def* %call79, null
  br i1 %tobool80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.78
  store i32 0, i32* %in_libcall, align 4
  store i32 0, i32* %dead_libcall, align 4
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %if.end.78
  br label %for.inc.83

for.inc.83:                                       ; preds = %if.end.82, %if.then.57
  %52 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  store %struct.rtx_def* %52, %struct.rtx_def** %insn, align 8
  br label %for.cond.44

for.end.84:                                       ; preds = %for.cond.44
  br label %for.inc.85

for.inc.85:                                       ; preds = %for.end.84
  %53 = load i32, i32* %i, align 4
  %inc = add nsw i32 %53, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.37

for.end.86:                                       ; preds = %for.cond.37
  br label %if.end.87

if.end.87:                                        ; preds = %for.end.86, %for.end.35
  %54 = load i32*, i32** %counts, align 8
  %55 = bitcast i32* %54 to i8*
  call void @free(i8* %55) #4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @count_reg_usage(%struct.rtx_def* %x, i32* %counts, %struct.rtx_def* %dest, i32 %incr) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  %dest.addr = alloca %struct.rtx_def*, align 8
  %incr.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32* %counts, i32** %counts.addr, align 8
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  store i32 %incr, i32* %incr.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end.114

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  switch i32 %bf.clear, label %sw.default [
    i32 61, label %sw.bb
    i32 59, label %sw.bb.5
    i32 69, label %sw.bb.5
    i32 58, label %sw.bb.5
    i32 54, label %sw.bb.5
    i32 55, label %sw.bb.5
    i32 56, label %sw.bb.5
    i32 68, label %sw.bb.5
    i32 67, label %sw.bb.5
    i32 49, label %sw.bb.6
    i32 47, label %sw.bb.20
    i32 34, label %sw.bb.41
    i32 32, label %sw.bb.45
    i32 33, label %sw.bb.45
    i32 3, label %sw.bb.52
    i32 4, label %sw.bb.52
  ]

sw.bb:                                            ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %cmp1 = icmp ne %struct.rtx_def* %3, %4
  br i1 %cmp1, label %if.then.2, label %if.end.4

if.then.2:                                        ; preds = %sw.bb
  %5 = load i32, i32* %incr.addr, align 4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %7 = load i32, i32* %rtuint, align 4
  %idxprom = zext i32 %7 to i64
  %8 = load i32*, i32** %counts.addr, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 %idxprom
  %9 = load i32, i32* %arrayidx3, align 4
  %add = add nsw i32 %9, %5
  store i32 %add, i32* %arrayidx3, align 4
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.2, %sw.bb
  br label %for.end.114

sw.bb.5:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %for.end.114

sw.bb.6:                                          ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load9 = load i32, i32* %12, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then.12, label %if.end.19

if.then.12:                                       ; preds = %sw.bb.6
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx15, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %16 = load i32*, i32** %counts.addr, align 8
  %17 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %15, i32* %16, %struct.rtx_def* null, i32 %17)
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.12, %sw.bb.6
  br label %for.end.114

sw.bb.20:                                         ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load24 = load i32, i32* %20, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp ne i32 %bf.clear25, 61
  br i1 %cmp26, label %if.then.27, label %if.end.31

if.then.27:                                       ; preds = %sw.bb.20
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %23 = load i32*, i32** %counts.addr, align 8
  %24 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %22, i32* %23, %struct.rtx_def* null, i32 %24)
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.27, %sw.bb.20
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 1
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %27 = load i32*, i32** %counts.addr, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 1
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rtx37, align 8
  %call = call i32 @side_effects_p(%struct.rtx_def* %29)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.31
  br label %cond.end

cond.false:                                       ; preds = %if.end.31
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ null, %cond.true ], [ %31, %cond.false ]
  %32 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %26, i32* %27, %struct.rtx_def* %cond, i32 %32)
  br label %for.end.114

sw.bb.41:                                         ; preds = %if.end
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i32 0, i64 7
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx44, align 8
  %35 = load i32*, i32** %counts.addr, align 8
  %36 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %34, i32* %35, %struct.rtx_def* null, i32 %36)
  br label %sw.bb.45

sw.bb.45:                                         ; preds = %if.end, %if.end, %sw.bb.41
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 3
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %39 = load i32*, i32** %counts.addr, align 8
  %40 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %38, i32* %39, %struct.rtx_def* null, i32 %40)
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 6
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx51, align 8
  %43 = load i32*, i32** %counts.addr, align 8
  %44 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %42, i32* %43, %struct.rtx_def* null, i32 %44)
  br label %for.end.114

sw.bb.52:                                         ; preds = %if.end, %if.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load53 = load i32, i32* %46, align 8
  %bf.lshr = lshr i32 %bf.load53, 16
  %bf.clear54 = and i32 %bf.lshr, 255
  %cmp55 = icmp eq i32 %bf.clear54, 4
  br i1 %cmp55, label %if.then.66, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.52
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load56 = load i32, i32* %48, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 16
  %bf.clear58 = and i32 %bf.lshr57, 255
  %cmp59 = icmp ne i32 %bf.clear58, 8
  br i1 %cmp59, label %land.lhs.true, label %if.end.70

land.lhs.true:                                    ; preds = %lor.lhs.false
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 0
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx62, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load63 = load i32, i32* %51, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 48
  br i1 %cmp65, label %if.then.66, label %if.end.70

if.then.66:                                       ; preds = %land.lhs.true, %sw.bb.52
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %54 = load i32*, i32** %counts.addr, align 8
  %55 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %53, i32* %54, %struct.rtx_def* null, i32 %55)
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.66, %land.lhs.true, %lor.lhs.false
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 1
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %58 = load i32*, i32** %counts.addr, align 8
  %59 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %57, i32* %58, %struct.rtx_def* null, i32 %59)
  br label %for.end.114

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %60 = load i32, i32* %code, align 4
  %idxprom74 = sext i32 %60 to i64
  %arrayidx75 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom74
  %61 = load i8*, i8** %arrayidx75, align 8
  store i8* %61, i8** %fmt, align 8
  %62 = load i32, i32* %code, align 4
  %idxprom76 = sext i32 %62 to i64
  %arrayidx77 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom76
  %63 = load i8, i8* %arrayidx77, align 1
  %conv = zext i8 %63 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.112, %sw.epilog
  %64 = load i32, i32* %i, align 4
  %cmp78 = icmp sge i32 %64, 0
  br i1 %cmp78, label %for.body, label %for.end.114

for.body:                                         ; preds = %for.cond
  %65 = load i32, i32* %i, align 4
  %idxprom80 = sext i32 %65 to i64
  %66 = load i8*, i8** %fmt, align 8
  %arrayidx81 = getelementptr inbounds i8, i8* %66, i64 %idxprom80
  %67 = load i8, i8* %arrayidx81, align 1
  %conv82 = sext i8 %67 to i32
  %cmp83 = icmp eq i32 %conv82, 101
  br i1 %cmp83, label %if.then.85, label %if.else

if.then.85:                                       ; preds = %for.body
  %68 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %68 to i64
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i32 0, i64 %idxprom86
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx89, align 8
  %71 = load i32*, i32** %counts.addr, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %73 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %70, i32* %71, %struct.rtx_def* %72, i32 %73)
  br label %if.end.111

if.else:                                          ; preds = %for.body
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %75 = load i8*, i8** %fmt, align 8
  %arrayidx91 = getelementptr inbounds i8, i8* %75, i64 %idxprom90
  %76 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %76 to i32
  %cmp93 = icmp eq i32 %conv92, 69
  br i1 %cmp93, label %if.then.95, label %if.end.110

if.then.95:                                       ; preds = %if.else
  %77 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %77 to i64
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 %idxprom96
  %rtvec = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtvec_def**
  %79 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %79, i32 0, i32 0
  %80 = load i32, i32* %num_elem, align 4
  %sub99 = sub nsw i32 %80, 1
  store i32 %sub99, i32* %j, align 4
  br label %for.cond.100

for.cond.100:                                     ; preds = %for.inc, %if.then.95
  %81 = load i32, i32* %j, align 4
  %cmp101 = icmp sge i32 %81, 0
  br i1 %cmp101, label %for.body.103, label %for.end

for.body.103:                                     ; preds = %for.cond.100
  %82 = load i32, i32* %j, align 4
  %idxprom104 = sext i32 %82 to i64
  %83 = load i32, i32* %i, align 4
  %idxprom105 = sext i32 %83 to i64
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 %idxprom105
  %rtvec108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtvec_def**
  %85 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec108, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %85, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom104
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx109, align 8
  %87 = load i32*, i32** %counts.addr, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %89 = load i32, i32* %incr.addr, align 4
  call void @count_reg_usage(%struct.rtx_def* %86, i32* %87, %struct.rtx_def* %88, i32 %89)
  br label %for.inc

for.inc:                                          ; preds = %for.body.103
  %90 = load i32, i32* %j, align 4
  %dec = add nsw i32 %90, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond.100

for.end:                                          ; preds = %for.cond.100
  br label %if.end.110

if.end.110:                                       ; preds = %for.end, %if.else
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.then.85
  br label %for.inc.112

for.inc.112:                                      ; preds = %if.end.111
  %91 = load i32, i32* %i, align 4
  %dec113 = add nsw i32 %91, -1
  store i32 %dec113, i32* %i, align 4
  br label %for.cond

for.end.114:                                      ; preds = %if.then, %if.end.4, %sw.bb.5, %if.end.19, %cond.end, %sw.bb.45, %if.end.70, %for.cond
  ret void
}

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i1 @dead_libcall_p(%struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca i1, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %new = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %0, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %if.then, label %if.end.36

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, 105
  br i1 %cmp, label %cond.true, label %cond.false.15

cond.true:                                        ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load3 = load i32, i32* %7, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp5, label %cond.true.7, label %cond.false

cond.true.7:                                      ; preds = %cond.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 3
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 3
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  %call14 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %10, %struct.rtx_def* %12)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.7
  %cond = phi %struct.rtx_def* [ %9, %cond.true.7 ], [ %call14, %cond.false ]
  br label %cond.end.16

cond.false.15:                                    ; preds = %if.then
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.15, %cond.end
  %cond17 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false.15 ]
  store %struct.rtx_def* %cond17, %struct.rtx_def** %set, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %call21 = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %14)
  store %struct.rtx_def* %call21, %struct.rtx_def** %new, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool22 = icmp ne %struct.rtx_def* %15, null
  br i1 %tobool22, label %if.end, label %if.then.23

if.then.23:                                       ; preds = %cond.end.16
  %16 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx26, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %new, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.23, %cond.end.16
  %18 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %tobool27 = icmp ne %struct.rtx_def* %18, null
  br i1 %tobool27, label %land.lhs.true, label %if.end.35

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call31 = call i32 @validate_change(%struct.rtx_def* %19, %struct.rtx_def** %rtx30, %struct.rtx_def* %21, i32 0)
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.then.33, label %if.end.35

if.then.33:                                       ; preds = %land.lhs.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call34 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %23, i32 6, %struct.rtx_def* null)
  call void @remove_note(%struct.rtx_def* %22, %struct.rtx_def* %call34)
  store i1 true, i1* %retval
  br label %return

if.end.35:                                        ; preds = %land.lhs.true, %if.end
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %entry
  store i1 false, i1* %retval
  br label %return

return:                                           ; preds = %if.end.36, %if.then.33
  %24 = load i1, i1* %retval
  ret i1 %24
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @insn_live_p(%struct.rtx_def* %insn, i32* %counts) #0 {
entry:
  %retval = alloca i1, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32* %counts, i32** %counts.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 3
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %6 = load i32*, i32** %counts.addr, align 8
  %call = call zeroext i1 @set_live_p(%struct.rtx_def* %4, %struct.rtx_def* %5, i32* %6)
  store i1 %call, i1* %retval
  br label %return

if.else:                                          ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 3
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load7 = load i32, i32* %9, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 39
  br i1 %cmp9, label %if.then.10, label %if.else.40

if.then.10:                                       ; preds = %if.else
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 3
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i32 0, i32 0
  %13 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %13, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.10
  %14 = load i32, i32* %i, align 4
  %cmp16 = icmp sge i32 %14, 0
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4
  %idxprom = sext i32 %15 to i64
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 3
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtvec22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec22, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx23, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %elt, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load24 = load i32, i32* %21, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 47
  br i1 %cmp26, label %if.then.27, label %if.else.30

if.then.27:                                       ; preds = %for.body
  %22 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %24 = load i32*, i32** %counts.addr, align 8
  %call28 = call zeroext i1 @set_live_p(%struct.rtx_def* %22, %struct.rtx_def* %23, i32* %24)
  br i1 %call28, label %if.then.29, label %if.end

if.then.29:                                       ; preds = %if.then.27
  store i1 true, i1* %retval
  br label %return

if.end:                                           ; preds = %if.then.27
  br label %if.end.39

if.else.30:                                       ; preds = %for.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load31 = load i32, i32* %26, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp ne i32 %bf.clear32, 49
  br i1 %cmp33, label %land.lhs.true, label %if.end.38

land.lhs.true:                                    ; preds = %if.else.30
  %27 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load34 = load i32, i32* %28, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp ne i32 %bf.clear35, 48
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %land.lhs.true
  store i1 true, i1* %retval
  br label %return

if.end.38:                                        ; preds = %land.lhs.true, %if.else.30
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.39
  %29 = load i32, i32* %i, align 4
  %dec = add nsw i32 %29, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval
  br label %return

if.else.40:                                       ; preds = %if.else
  store i1 true, i1* %retval
  br label %return

return:                                           ; preds = %if.else.40, %for.end, %if.then.37, %if.then.29, %if.then
  %30 = load i1, i1* %retval
  ret i1 %30
}

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #1

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @new_basic_block() #0 {
entry:
  %i = alloca i32, align 4
  %first = alloca %struct.table_elt*, align 8
  %last = alloca %struct.table_elt*, align 8
  %0 = load i32, i32* @max_reg, align 4
  store i32 %0, i32* @next_qty, align 4
  call void @llvm.memset.p0i8.i64(i8* bitcast ([128 x %struct.cse_reg_info*]* @reg_hash to i8*), i8 0, i64 1024, i32 1, i1 false)
  %1 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_used_list, align 8
  %tobool = icmp ne %struct.cse_reg_info* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_free_list, align 8
  %3 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_used_list_end, align 8
  %next = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %3, i32 0, i32 1
  store %struct.cse_reg_info* %2, %struct.cse_reg_info** %next, align 8
  %4 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_used_list, align 8
  store %struct.cse_reg_info* %4, %struct.cse_reg_info** @cse_reg_info_free_list, align 8
  store %struct.cse_reg_info* null, %struct.cse_reg_info** @cse_reg_info_used_list_end, align 8
  store %struct.cse_reg_info* null, %struct.cse_reg_info** @cse_reg_info_used_list, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store %struct.cse_reg_info* null, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  store i64 0, i64* @hard_regs_in_table, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %5, 32
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %7 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %7, %struct.table_elt** %first, align 8
  %8 = load %struct.table_elt*, %struct.table_elt** %first, align 8
  %cmp1 = icmp ne %struct.table_elt* %8, null
  br i1 %cmp1, label %if.then.2, label %if.end.8

if.then.2:                                        ; preds = %for.body
  %9 = load %struct.table_elt*, %struct.table_elt** %first, align 8
  store %struct.table_elt* %9, %struct.table_elt** %last, align 8
  %10 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom3
  store %struct.table_elt* null, %struct.table_elt** %arrayidx4, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.2
  %11 = load %struct.table_elt*, %struct.table_elt** %last, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 2
  %12 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  %cmp5 = icmp ne %struct.table_elt* %12, null
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %13 = load %struct.table_elt*, %struct.table_elt** %last, align 8
  %next_same_hash6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %13, i32 0, i32 2
  %14 = load %struct.table_elt*, %struct.table_elt** %next_same_hash6, align 8
  store %struct.table_elt* %14, %struct.table_elt** %last, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %15 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8
  %16 = load %struct.table_elt*, %struct.table_elt** %last, align 8
  %next_same_hash7 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 2
  store %struct.table_elt* %15, %struct.table_elt** %next_same_hash7, align 8
  %17 = load %struct.table_elt*, %struct.table_elt** %first, align 8
  store %struct.table_elt* %17, %struct.table_elt** @free_element_chain, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %while.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %18 = load i32, i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** @prev_insn, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @flush_hash_table() #0 {
entry:
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.7, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 32
  br i1 %cmp, label %for.body, label %for.end.8

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %3, null
  br i1 %tobool, label %for.body.2, label %for.end

for.body.2:                                       ; preds = %for.cond.1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 0
  %5 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 61
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %for.body.2
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp4 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp4, align 8
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %mode = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 10
  %10 = load i32, i32* %mode, align 4
  call void @invalidate(%struct.rtx_def* %8, i32 %10)
  br label %if.end

if.else:                                          ; preds = %for.body.2
  %11 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %12 = load i32, i32* %i, align 4
  call void @remove_from_table(%struct.table_elt* %11, i32 %12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %13 to i64
  %arrayidx6 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom5
  %14 = load %struct.table_elt*, %struct.table_elt** %arrayidx6, align 8
  store %struct.table_elt* %14, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.7

for.inc.7:                                        ; preds = %for.end
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.8:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @record_jump_equiv(%struct.rtx_def* %insn, i32 %taken) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %taken.addr = alloca i32, align 4
  %cond_known_true = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %mode0 = alloca i32, align 4
  %mode1 = alloca i32, align 4
  %reversed_nonequality = alloca i32, align 4
  %code = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32 %taken, i32* %taken.addr, align 4
  store i32 0, i32* %reversed_nonequality, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call i32 @any_condjump_p(%struct.rtx_def* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %1)
  store %struct.rtx_def* %call1, %struct.rtx_def** %set, align 8
  %2 = load i32, i32* %taken.addr, align 4
  %tobool2 = icmp ne i32 %2, 0
  br i1 %tobool2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 2
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp = icmp eq %struct.rtx_def* %5, %6
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %cond_known_true, align 4
  br label %if.end.15

if.else:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 1
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx9, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 1
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp13 = icmp eq %struct.rtx_def* %9, %10
  %conv14 = zext i1 %cmp13 to i32
  store i32 %conv14, i32* %cond_known_true, align 4
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.3
  %11 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 1
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load = load i32, i32* %14, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %15 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx24, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call31 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %18, %struct.rtx_def* %19)
  store %struct.rtx_def* %call31, %struct.rtx_def** %op0, align 8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 1
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx37, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 1
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call41 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %23, %struct.rtx_def* %24)
  store %struct.rtx_def* %call41, %struct.rtx_def** %op1, align 8
  %25 = load i32, i32* %code, align 4
  %call42 = call i32 @find_comparison_args(i32 %25, %struct.rtx_def** %op0, %struct.rtx_def** %op1, i32* %mode0, i32* %mode1)
  store i32 %call42, i32* %code, align 4
  %26 = load i32, i32* %cond_known_true, align 4
  %tobool43 = icmp ne i32 %26, 0
  br i1 %tobool43, label %if.end.50, label %if.then.44

if.then.44:                                       ; preds = %if.end.15
  %27 = load i32, i32* %code, align 4
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call45 = call i32 @reversed_comparison_code_parts(i32 %27, %struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* %30)
  store i32 %call45, i32* %code, align 4
  %31 = load i32, i32* %code, align 4
  %cmp46 = icmp eq i32 %31, 0
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.then.44
  br label %return

if.end.49:                                        ; preds = %if.then.44
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end.15
  %32 = load i32, i32* %mode0, align 4
  store i32 %32, i32* %mode, align 4
  %33 = load i32, i32* %mode1, align 4
  %cmp51 = icmp ne i32 %33, 0
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.50
  %34 = load i32, i32* %mode1, align 4
  store i32 %34, i32* %mode, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.end.50
  %35 = load i32, i32* %code, align 4
  %36 = load i32, i32* %mode, align 4
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %39 = load i32, i32* %reversed_nonequality, align 4
  call void @record_jump_cond(i32 %35, i32 %36, %struct.rtx_def* %37, %struct.rtx_def* %38, i32 %39)
  br label %return

return:                                           ; preds = %if.end.54, %if.then.48, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @invalidate_skipped_block(%struct.rtx_def* %start) #0 {
entry:
  %start.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %start, %struct.rtx_def** %start.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8
  store %struct.rtx_def* %0, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %1, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 36
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load1 = load i32, i32* %6, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %idxprom = sext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %7 to i32
  %cmp3 = icmp eq i32 %conv, 105
  br i1 %cmp3, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load5 = load i32, i32* %9, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 34
  br i1 %cmp7, label %if.then.9, label %if.end.15

if.then.9:                                        ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load10 = load i32, i32* %11, align 8
  %bf.lshr = lshr i32 %bf.load10, 26
  %bf.clear11 = and i32 %bf.lshr, 1
  %tobool12 = icmp ne i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.then.9
  call void @invalidate_memory()
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %if.then.9
  call void @invalidate_for_call()
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @invalidate_from_clobbers(%struct.rtx_def* %13)
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 3
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  call void @note_stores(%struct.rtx_def* %15, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @invalidate_skipped_set, i8* null)
  br label %for.inc

for.inc:                                          ; preds = %if.end.15, %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 2
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx22, align 8
  store %struct.rtx_def* %17, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %x, %struct.rtx_def* %object) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %object.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %ent = alloca %struct.qty_table_elem*, align 8
  %new121 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8
  store i8* %3, i8** %fmt, align 8
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default [
    i32 54, label %sw.bb
    i32 58, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 135, label %sw.bb
    i32 66, label %sw.bb.1
    i32 3, label %sw.bb.7
    i32 4, label %sw.bb.7
    i32 120, label %sw.bb.29
    i32 121, label %sw.bb.29
    i32 63, label %sw.bb.29
    i32 61, label %sw.bb.44
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx5, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %9, %struct.rtx_def* %10)
  %call6 = call i32 @validate_change(%struct.rtx_def* %6, %struct.rtx_def** %rtx, %struct.rtx_def* %call, i32 0)
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %11, %struct.rtx_def** %retval
  br label %return

sw.bb.7:                                          ; preds = %entry, %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load8 = load i32, i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load8, 16
  %bf.clear9 = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear9, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.7
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %call13 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %15, %struct.rtx_def* null)
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  store %struct.rtx_def* %call13, %struct.rtx_def** %rtx16, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.7
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %tobool = icmp ne %struct.rtx_def* %18, null
  br i1 %tobool, label %if.then.20, label %if.end.28

if.then.20:                                       ; preds = %if.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 1
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  %call24 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %20, %struct.rtx_def* null)
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  store %struct.rtx_def* %call24, %struct.rtx_def** %rtx27, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.20, %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %22, %struct.rtx_def** %retval
  br label %return

sw.bb.29:                                         ; preds = %entry, %entry, %entry
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rtx32, align 8
  %25 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8
  %call33 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %24, %struct.rtx_def* %25)
  store %struct.rtx_def* %call33, %struct.rtx_def** %new, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load34 = load i32, i32* %27, align 8
  %bf.lshr35 = lshr i32 %bf.load34, 16
  %bf.clear36 = and i32 %bf.lshr35, 255
  %cmp37 = icmp ne i32 %bf.clear36, 0
  br i1 %cmp37, label %if.then.38, label %if.end.43

if.then.38:                                       ; preds = %sw.bb.29
  %28 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i32 0, i64 0
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call42 = call i32 @validate_change(%struct.rtx_def* %28, %struct.rtx_def** %rtx41, %struct.rtx_def* %30, i32 0)
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.38, %sw.bb.29
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %retval
  br label %return

sw.bb.44:                                         ; preds = %entry
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %33 = load i32, i32* %rtuint, align 4
  %34 = load i32, i32* @cached_regno, align 4
  %cmp47 = icmp eq i32 %33, %34
  br i1 %cmp47, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %sw.bb.44
  %35 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool48 = icmp ne %struct.cse_reg_info* %35, null
  br i1 %tobool48, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %36 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %sw.bb.44
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 0
  %rtuint51 = bitcast %union.rtunion_def* %arrayidx50 to i32*
  %38 = load i32, i32* %rtuint51, align 4
  %call52 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %38)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %36, %cond.true ], [ %call52, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %39 = load i32, i32* %reg_qty, align 4
  store i32 %39, i32* %i, align 4
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtuint55 = bitcast %union.rtunion_def* %arrayidx54 to i32*
  %41 = load i32, i32* %rtuint55, align 4
  %42 = load i32, i32* @cached_regno, align 4
  %cmp56 = icmp eq i32 %41, %42
  br i1 %cmp56, label %land.lhs.true.57, label %cond.false.60

land.lhs.true.57:                                 ; preds = %cond.end
  %43 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool58 = icmp ne %struct.cse_reg_info* %43, null
  br i1 %tobool58, label %cond.true.59, label %cond.false.60

cond.true.59:                                     ; preds = %land.lhs.true.57
  %44 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.65

cond.false.60:                                    ; preds = %land.lhs.true.57, %cond.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtuint63 = bitcast %union.rtunion_def* %arrayidx62 to i32*
  %46 = load i32, i32* %rtuint63, align 4
  %call64 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %46)
  br label %cond.end.65

cond.end.65:                                      ; preds = %cond.false.60, %cond.true.59
  %cond66 = phi %struct.cse_reg_info* [ %44, %cond.true.59 ], [ %call64, %cond.false.60 ]
  %reg_qty67 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond66, i32 0, i32 3
  %47 = load i32, i32* %reg_qty67, align 4
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i32 0, i64 0
  %rtuint70 = bitcast %union.rtunion_def* %arrayidx69 to i32*
  %49 = load i32, i32* %rtuint70, align 4
  %cmp71 = icmp ne i32 %47, %49
  br i1 %cmp71, label %if.then.72, label %if.end.131

if.then.72:                                       ; preds = %cond.end.65
  %50 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %50 to i64
  %51 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx74 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %51, i64 %idxprom73
  store %struct.qty_table_elem* %arrayidx74, %struct.qty_table_elem** %ent, align 8
  %52 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %52, i32 0, i32 0
  %53 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %cmp75 = icmp ne %struct.rtx_def* %53, null
  br i1 %cmp75, label %land.lhs.true.76, label %if.end.130

land.lhs.true.76:                                 ; preds = %if.then.72
  %54 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx77 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %54, i32 0, i32 0
  %55 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx77, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load78 = load i32, i32* %56, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 67
  br i1 %cmp80, label %if.then.120, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.76
  %57 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx81 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %57, i32 0, i32 0
  %58 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx81, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load82 = load i32, i32* %59, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 68
  br i1 %cmp84, label %if.then.120, label %lor.lhs.false.85

lor.lhs.false.85:                                 ; preds = %lor.lhs.false
  %60 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx86 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %60, i32 0, i32 0
  %61 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx86, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load87 = load i32, i32* %62, align 8
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp eq i32 %bf.clear88, 54
  br i1 %cmp89, label %if.then.120, label %lor.lhs.false.90

lor.lhs.false.90:                                 ; preds = %lor.lhs.false.85
  %63 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx91 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %63, i32 0, i32 0
  %64 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx91, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load92 = load i32, i32* %65, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 55
  br i1 %cmp94, label %if.then.120, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %lor.lhs.false.90
  %66 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx96 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %66, i32 0, i32 0
  %67 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx96, align 8
  %68 = bitcast %struct.rtx_def* %67 to i32*
  %bf.load97 = load i32, i32* %68, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 58
  br i1 %cmp99, label %if.then.120, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.95
  %69 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx101 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %69, i32 0, i32 0
  %70 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx101, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load102 = load i32, i32* %71, align 8
  %bf.clear103 = and i32 %bf.load102, 65535
  %cmp104 = icmp eq i32 %bf.clear103, 134
  br i1 %cmp104, label %if.then.120, label %lor.lhs.false.105

lor.lhs.false.105:                                ; preds = %lor.lhs.false.100
  %72 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx106 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %72, i32 0, i32 0
  %73 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx106, align 8
  %74 = bitcast %struct.rtx_def* %73 to i32*
  %bf.load107 = load i32, i32* %74, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 56
  br i1 %cmp109, label %if.then.120, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %lor.lhs.false.105
  %75 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx111 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %75, i32 0, i32 0
  %76 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx111, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load112 = load i32, i32* %77, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 140
  br i1 %cmp114, label %if.then.120, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %lor.lhs.false.110
  %78 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx116 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %78, i32 0, i32 0
  %79 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx116, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load117 = load i32, i32* %80, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 61
  br i1 %cmp119, label %if.then.120, label %if.end.130

if.then.120:                                      ; preds = %lor.lhs.false.115, %lor.lhs.false.110, %lor.lhs.false.105, %lor.lhs.false.100, %lor.lhs.false.95, %lor.lhs.false.90, %lor.lhs.false.85, %lor.lhs.false, %land.lhs.true.76
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load122 = load i32, i32* %82, align 8
  %bf.lshr123 = lshr i32 %bf.load122, 16
  %bf.clear124 = and i32 %bf.lshr123, 255
  %83 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx125 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %83, i32 0, i32 0
  %84 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx125, align 8
  %call126 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %bf.clear124, %struct.rtx_def* %84)
  store %struct.rtx_def* %call126, %struct.rtx_def** %new121, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %new121, align 8
  %tobool127 = icmp ne %struct.rtx_def* %85, null
  br i1 %tobool127, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %if.then.120
  %86 = load %struct.rtx_def*, %struct.rtx_def** %new121, align 8
  store %struct.rtx_def* %86, %struct.rtx_def** %retval
  br label %return

if.end.129:                                       ; preds = %if.then.120
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %lor.lhs.false.115, %if.then.72
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %cond.end.65
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call132 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %87, %struct.rtx_def* null)
  store %struct.rtx_def* %call132, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %88 = load i32, i32* %i, align 4
  %89 = load i32, i32* %code, align 4
  %idxprom133 = sext i32 %89 to i64
  %arrayidx134 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom133
  %90 = load i8, i8* %arrayidx134, align 1
  %conv = zext i8 %90 to i32
  %cmp135 = icmp slt i32 %88, %conv
  br i1 %cmp135, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %91 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %91 to i64
  %92 = load i8*, i8** %fmt, align 8
  %arrayidx138 = getelementptr inbounds i8, i8* %92, i64 %idxprom137
  %93 = load i8, i8* %arrayidx138, align 1
  %conv139 = sext i8 %93 to i32
  %cmp140 = icmp eq i32 %conv139, 101
  br i1 %cmp140, label %if.then.142, label %if.end.153

if.then.142:                                      ; preds = %for.body
  %94 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8
  %95 = load i32, i32* %i, align 4
  %idxprom143 = sext i32 %95 to i64
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 %idxprom143
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %97 = load i32, i32* %i, align 4
  %idxprom147 = sext i32 %97 to i64
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 %idxprom147
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  %100 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8
  %call151 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %99, %struct.rtx_def* %100)
  %call152 = call i32 @validate_change(%struct.rtx_def* %94, %struct.rtx_def** %rtx146, %struct.rtx_def* %call151, i32 0)
  br label %if.end.153

if.end.153:                                       ; preds = %if.then.142, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.153
  %101 = load i32, i32* %i, align 4
  %inc = add nsw i32 %101, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %102, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end, %if.end.131, %if.then.128, %if.end.43, %if.end.28, %sw.bb.1, %sw.bb
  %103 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %103
}

; Function Attrs: nounwind uwtable
define internal void @cse_insn(%struct.rtx_def* %insn, %struct.rtx_def* %libcall_insn) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %libcall_insn.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %n_sets = alloca i32, align 4
  %src_eqv = alloca %struct.rtx_def*, align 8
  %src_eqv_elt = alloca %struct.table_elt*, align 8
  %src_eqv_volatile = alloca i32, align 4
  %src_eqv_in_memory = alloca i32, align 4
  %src_eqv_hash = alloca i32, align 4
  %sets = alloca %struct.set*, align 8
  %lim = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %clobbered = alloca %struct.rtx_def*, align 8
  %y122 = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %new = alloca %struct.rtx_def*, align 8
  %insn_code = alloca i32, align 4
  %src474 = alloca %struct.rtx_def*, align 8
  %dest475 = alloca %struct.rtx_def*, align 8
  %src_folded = alloca %struct.rtx_def*, align 8
  %elt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  %mode = alloca i32, align 4
  %src_eqv_here = alloca %struct.rtx_def*, align 8
  %src_const = alloca %struct.rtx_def*, align 8
  %src_related = alloca %struct.rtx_def*, align 8
  %src_const_elt = alloca %struct.table_elt*, align 8
  %src_cost = alloca i32, align 4
  %src_eqv_cost = alloca i32, align 4
  %src_folded_cost = alloca i32, align 4
  %src_related_cost = alloca i32, align 4
  %src_elt_cost = alloca i32, align 4
  %src_regcost = alloca i32, align 4
  %src_eqv_regcost = alloca i32, align 4
  %src_folded_regcost = alloca i32, align 4
  %src_related_regcost = alloca i32, align 4
  %src_elt_regcost = alloca i32, align 4
  %src_folded_force_flag = alloca i32, align 4
  %eqvmode = alloca i32, align 4
  %src_related_elt = alloca %struct.table_elt*, align 8
  %wider_mode = alloca i32, align 4
  %const_elt = alloca %struct.table_elt*, align 8
  %tmode = alloca i32, align 4
  %new_and = alloca %struct.rtx_def*, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %larger_elt = alloca %struct.table_elt*, align 8
  %code = alloca i32, align 4
  %trial = alloca %struct.rtx_def*, align 8
  %dest_q = alloca i32, align 4
  %dest_ent = alloca %struct.qty_table_elem*, align 8
  %src_q = alloca i32, align 4
  %src_ent = alloca %struct.qty_table_elem*, align 8
  %first = alloca i32, align 4
  %new_src = alloca %struct.rtx_def*, align 8
  %dest_q2087 = alloca i32, align 4
  %dest_ent2104 = alloca %struct.qty_table_elem*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %const_insn = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %width = alloca %struct.rtx_def*, align 8
  %new2367 = alloca %struct.rtx_def*, align 8
  %elt2567 = alloca %struct.table_elt*, align 8
  %classp = alloca %struct.table_elt*, align 8
  %dest2570 = alloca %struct.rtx_def*, align 8
  %eqvmode2576 = alloca i32, align 4
  %classp2713 = alloca %struct.table_elt*, align 8
  %src2714 = alloca %struct.rtx_def*, align 8
  %dest2718 = alloca %struct.rtx_def*, align 8
  %mode2725 = alloca i32, align 4
  %elt2750 = alloca %struct.table_elt*, align 8
  %dest2879 = alloca %struct.rtx_def*, align 8
  %x2963 = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i3068 = alloca i32, align 4
  %elt3125 = alloca %struct.table_elt*, align 8
  %dest3170 = alloca %struct.rtx_def*, align 8
  %inner_dest3177 = alloca %struct.rtx_def*, align 8
  %elt3181 = alloca %struct.table_elt*, align 8
  %new_mode = alloca i32, align 4
  %elt3595 = alloca %struct.table_elt*, align 8
  %classp3596 = alloca %struct.table_elt*, align 8
  %new_src3604 = alloca %struct.rtx_def*, align 8
  %src_hash3605 = alloca i32, align 4
  %src_elt3606 = alloca %struct.table_elt*, align 8
  %src_q3825 = alloca i32, align 4
  %src_ent3852 = alloca %struct.qty_table_elem*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %dest3904 = alloca %struct.rtx_def*, align 8
  %src3910 = alloca %struct.rtx_def*, align 8
  %note3916 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %libcall_insn, %struct.rtx_def** %libcall_insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  store i32 0, i32* %n_sets, align 4
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv, align 8
  store %struct.table_elt* null, %struct.table_elt** %src_eqv_elt, align 8
  store i32 0, i32* %src_eqv_volatile, align 4
  store i32 0, i32* %src_eqv_in_memory, align 4
  store i32 0, i32* %src_eqv_hash, align 4
  store %struct.set* null, %struct.set** %sets, align 8
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %2, %struct.rtx_def** @this_insn, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %if.then, label %if.end.26

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 7
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  store %struct.rtx_def* %6, %struct.rtx_def** %tem, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool = icmp ne %struct.rtx_def* %7, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx6, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load7 = load i32, i32* %10, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 49
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx13, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  call void @invalidate(%struct.rtx_def* %13, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then.10, %for.body
  %14 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %15, %struct.rtx_def* %16)
  %17 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  store %struct.rtx_def* %call, %struct.rtx_def** %rtx22, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 1
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  store %struct.rtx_def* %19, %struct.rtx_def** %tem, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.26

if.end.26:                                        ; preds = %for.end, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load27 = load i32, i32* %21, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 47
  br i1 %cmp29, label %if.then.30, label %if.else.65

if.then.30:                                       ; preds = %if.end.26
  %22 = alloca i8, i64 80
  %23 = bitcast i8* %22 to %struct.set*
  store %struct.set* %23, %struct.set** %sets, align 8
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %25 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx31 = getelementptr inbounds %struct.set, %struct.set* %25, i64 0
  %rtl = getelementptr inbounds %struct.set, %struct.set* %arrayidx31, i32 0, i32 0
  store %struct.rtx_def* %24, %struct.rtx_def** %rtl, align 8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp35 = icmp eq %struct.rtx_def* %27, %28
  br i1 %cmp35, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then.30
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 1
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx38, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load39 = load i32, i32* %31, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 67
  br i1 %cmp41, label %if.then.42, label %if.else

if.then.42:                                       ; preds = %land.lhs.true
  br label %if.end.64

if.else:                                          ; preds = %land.lhs.true, %if.then.30
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 1
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load46 = load i32, i32* %34, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 50
  br i1 %cmp48, label %if.then.49, label %if.else.62

if.then.49:                                       ; preds = %if.else
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 1
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call53 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %36, %struct.rtx_def* %37)
  %call54 = call i32 @apply_change_group()
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 1
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call58 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %39, %struct.rtx_def* %40)
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  call void @invalidate(%struct.rtx_def* %42, i32 0)
  br label %if.end.63

if.else.62:                                       ; preds = %if.else
  store i32 1, i32* %n_sets, align 4
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.62, %if.then.49
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %if.then.42
  br label %if.end.293

if.else.65:                                       ; preds = %if.end.26
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load66 = load i32, i32* %44, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 39
  br i1 %cmp68, label %if.then.69, label %if.else.234

if.then.69:                                       ; preds = %if.else.65
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtvec_def**
  %46 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %46, i32 0, i32 0
  %47 = load i32, i32* %num_elem, align 4
  store i32 %47, i32* %lim, align 4
  %48 = load i32, i32* %lim, align 4
  %conv = sext i32 %48 to i64
  %mul = mul i64 %conv, 80
  %49 = alloca i8, i64 %mul
  %50 = bitcast i8* %49 to %struct.set*
  store %struct.set* %50, %struct.set** %sets, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.72

for.cond.72:                                      ; preds = %for.inc.116, %if.then.69
  %51 = load i32, i32* %i, align 4
  %52 = load i32, i32* %lim, align 4
  %cmp73 = icmp slt i32 %51, %52
  br i1 %cmp73, label %for.body.75, label %for.end.117

for.body.75:                                      ; preds = %for.cond.72
  %53 = load i32, i32* %i, align 4
  %idxprom = sext i32 %53 to i64
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i32 0, i64 0
  %rtvec78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtvec_def**
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec78, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx79, align 8
  store %struct.rtx_def* %56, %struct.rtx_def** %y, align 8
  %57 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load80 = load i32, i32* %58, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 49
  br i1 %cmp82, label %if.then.84, label %if.end.115

if.then.84:                                       ; preds = %for.body.75
  %59 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 0
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx87, align 8
  store %struct.rtx_def* %60, %struct.rtx_def** %clobbered, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load88 = load i32, i32* %62, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 61
  br i1 %cmp90, label %if.then.96, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.84
  %63 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load92 = load i32, i32* %64, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 63
  br i1 %cmp94, label %if.then.96, label %if.else.97

if.then.96:                                       ; preds = %lor.lhs.false, %if.then.84
  %65 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  call void @invalidate(%struct.rtx_def* %65, i32 0)
  br label %if.end.114

if.else.97:                                       ; preds = %lor.lhs.false
  %66 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %67 = bitcast %struct.rtx_def* %66 to i32*
  %bf.load98 = load i32, i32* %67, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 64
  br i1 %cmp100, label %if.then.107, label %lor.lhs.false.102

lor.lhs.false.102:                                ; preds = %if.else.97
  %68 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load103 = load i32, i32* %69, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  %cmp105 = icmp eq i32 %bf.clear104, 133
  br i1 %cmp105, label %if.then.107, label %if.end.113

if.then.107:                                      ; preds = %lor.lhs.false.102, %if.else.97
  %70 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx110, align 8
  %72 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8
  %73 = bitcast %struct.rtx_def* %72 to i32*
  %bf.load111 = load i32, i32* %73, align 8
  %bf.lshr = lshr i32 %bf.load111, 16
  %bf.clear112 = and i32 %bf.lshr, 255
  call void @invalidate(%struct.rtx_def* %71, i32 %bf.clear112)
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.107, %lor.lhs.false.102
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.113, %if.then.96
  br label %if.end.115

if.end.115:                                       ; preds = %if.end.114, %for.body.75
  br label %for.inc.116

for.inc.116:                                      ; preds = %if.end.115
  %74 = load i32, i32* %i, align 4
  %inc = add nsw i32 %74, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.72

for.end.117:                                      ; preds = %for.cond.72
  store i32 0, i32* %i, align 4
  br label %for.cond.118

for.cond.118:                                     ; preds = %for.inc.231, %for.end.117
  %75 = load i32, i32* %i, align 4
  %76 = load i32, i32* %lim, align 4
  %cmp119 = icmp slt i32 %75, %76
  br i1 %cmp119, label %for.body.121, label %for.end.233

for.body.121:                                     ; preds = %for.cond.118
  %77 = load i32, i32* %i, align 4
  %idxprom123 = sext i32 %77 to i64
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 0
  %rtvec126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtvec_def**
  %79 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec126, align 8
  %elem127 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %79, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem127, i32 0, i64 %idxprom123
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx128, align 8
  store %struct.rtx_def* %80, %struct.rtx_def** %y122, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load129 = load i32, i32* %82, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 47
  br i1 %cmp131, label %if.then.133, label %if.else.176

if.then.133:                                      ; preds = %for.body.121
  %83 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 1
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load137 = load i32, i32* %85, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 50
  br i1 %cmp139, label %if.then.141, label %if.else.154

if.then.141:                                      ; preds = %if.then.133
  %86 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx144, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call145 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %87, %struct.rtx_def* %88)
  %call146 = call i32 @apply_change_group()
  %89 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 1
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx149, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call150 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %90, %struct.rtx_def* %91)
  %92 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i32 0, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rtx153, align 8
  call void @invalidate(%struct.rtx_def* %93, i32 0)
  br label %if.end.175

if.else.154:                                      ; preds = %if.then.133
  %94 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp158 = icmp eq %struct.rtx_def* %95, %96
  br i1 %cmp158, label %land.lhs.true.160, label %if.else.169

land.lhs.true.160:                                ; preds = %if.else.154
  %97 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i32 0, i64 1
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rtx163, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load164 = load i32, i32* %99, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 67
  br i1 %cmp166, label %if.then.168, label %if.else.169

if.then.168:                                      ; preds = %land.lhs.true.160
  br label %if.end.174

if.else.169:                                      ; preds = %land.lhs.true.160, %if.else.154
  %100 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %101 = load i32, i32* %n_sets, align 4
  %inc170 = add nsw i32 %101, 1
  store i32 %inc170, i32* %n_sets, align 4
  %idxprom171 = sext i32 %101 to i64
  %102 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx172 = getelementptr inbounds %struct.set, %struct.set* %102, i64 %idxprom171
  %rtl173 = getelementptr inbounds %struct.set, %struct.set* %arrayidx172, i32 0, i32 0
  store %struct.rtx_def* %100, %struct.rtx_def** %rtl173, align 8
  br label %if.end.174

if.end.174:                                       ; preds = %if.else.169, %if.then.168
  br label %if.end.175

if.end.175:                                       ; preds = %if.end.174, %if.then.141
  br label %if.end.230

if.else.176:                                      ; preds = %for.body.121
  %103 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load177 = load i32, i32* %104, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 49
  br i1 %cmp179, label %if.then.181, label %if.else.195

if.then.181:                                      ; preds = %if.else.176
  %105 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld182 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i32 0, i64 0
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx184, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load185 = load i32, i32* %107, align 8
  %bf.clear186 = and i32 %bf.load185, 65535
  %cmp187 = icmp eq i32 %bf.clear186, 66
  br i1 %cmp187, label %if.then.189, label %if.end.194

if.then.189:                                      ; preds = %if.then.181
  %108 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %call193 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %109, %struct.rtx_def* null)
  br label %if.end.194

if.end.194:                                       ; preds = %if.then.189, %if.then.181
  br label %if.end.229

if.else.195:                                      ; preds = %if.else.176
  %110 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load196 = load i32, i32* %111, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  %cmp198 = icmp eq i32 %bf.clear197, 48
  br i1 %cmp198, label %land.lhs.true.200, label %if.else.218

land.lhs.true.200:                                ; preds = %if.else.195
  %112 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 0
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  %114 = bitcast %struct.rtx_def* %113 to i32*
  %bf.load204 = load i32, i32* %114, align 8
  %bf.clear205 = and i32 %bf.load204, 65535
  %cmp206 = icmp eq i32 %bf.clear205, 61
  br i1 %cmp206, label %land.lhs.true.208, label %if.then.216

land.lhs.true.208:                                ; preds = %land.lhs.true.200
  %115 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %fld209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i32 0, i64 0
  %rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx211, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx213 to i32*
  %117 = load i32, i32* %rtuint, align 4
  %cmp214 = icmp ult i32 %117, 53
  br i1 %cmp214, label %if.else.218, label %if.then.216

if.then.216:                                      ; preds = %land.lhs.true.208, %land.lhs.true.200
  %118 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %call217 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %118, %struct.rtx_def* null)
  br label %if.end.228

if.else.218:                                      ; preds = %land.lhs.true.208, %if.else.195
  %119 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load219 = load i32, i32* %120, align 8
  %bf.clear220 = and i32 %bf.load219, 65535
  %cmp221 = icmp eq i32 %bf.clear220, 50
  br i1 %cmp221, label %if.then.223, label %if.end.227

if.then.223:                                      ; preds = %if.else.218
  %121 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call224 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %121, %struct.rtx_def* %122)
  %call225 = call i32 @apply_change_group()
  %123 = load %struct.rtx_def*, %struct.rtx_def** %y122, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call226 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %123, %struct.rtx_def* %124)
  br label %if.end.227

if.end.227:                                       ; preds = %if.then.223, %if.else.218
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.then.216
  br label %if.end.229

if.end.229:                                       ; preds = %if.end.228, %if.end.194
  br label %if.end.230

if.end.230:                                       ; preds = %if.end.229, %if.end.175
  br label %for.inc.231

for.inc.231:                                      ; preds = %if.end.230
  %125 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %125, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond.118

for.end.233:                                      ; preds = %for.cond.118
  br label %if.end.292

if.else.234:                                      ; preds = %if.else.65
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %127 = bitcast %struct.rtx_def* %126 to i32*
  %bf.load235 = load i32, i32* %127, align 8
  %bf.clear236 = and i32 %bf.load235, 65535
  %cmp237 = icmp eq i32 %bf.clear236, 49
  br i1 %cmp237, label %if.then.239, label %if.else.253

if.then.239:                                      ; preds = %if.else.234
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load243 = load i32, i32* %130, align 8
  %bf.clear244 = and i32 %bf.load243, 65535
  %cmp245 = icmp eq i32 %bf.clear244, 66
  br i1 %cmp245, label %if.then.247, label %if.end.252

if.then.247:                                      ; preds = %if.then.239
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %call251 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %132, %struct.rtx_def* null)
  br label %if.end.252

if.end.252:                                       ; preds = %if.then.247, %if.then.239
  br label %if.end.291

if.else.253:                                      ; preds = %if.else.234
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load254 = load i32, i32* %134, align 8
  %bf.clear255 = and i32 %bf.load254, 65535
  %cmp256 = icmp eq i32 %bf.clear255, 48
  br i1 %cmp256, label %land.lhs.true.258, label %if.else.280

land.lhs.true.258:                                ; preds = %if.else.253
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i32 0, i64 0
  %rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx261, align 8
  %137 = bitcast %struct.rtx_def* %136 to i32*
  %bf.load262 = load i32, i32* %137, align 8
  %bf.clear263 = and i32 %bf.load262, 65535
  %cmp264 = icmp eq i32 %bf.clear263, 61
  br i1 %cmp264, label %land.lhs.true.266, label %if.then.275

land.lhs.true.266:                                ; preds = %land.lhs.true.258
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtuint272 = bitcast %union.rtunion_def* %arrayidx271 to i32*
  %140 = load i32, i32* %rtuint272, align 4
  %cmp273 = icmp ult i32 %140, 53
  br i1 %cmp273, label %if.else.280, label %if.then.275

if.then.275:                                      ; preds = %land.lhs.true.266, %land.lhs.true.258
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 0
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx278, align 8
  %call279 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %142, %struct.rtx_def* null)
  br label %if.end.290

if.else.280:                                      ; preds = %land.lhs.true.266, %if.else.253
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load281 = load i32, i32* %144, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 50
  br i1 %cmp283, label %if.then.285, label %if.end.289

if.then.285:                                      ; preds = %if.else.280
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %146 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call286 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %145, %struct.rtx_def* %146)
  %call287 = call i32 @apply_change_group()
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %148 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call288 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %147, %struct.rtx_def* %148)
  br label %if.end.289

if.end.289:                                       ; preds = %if.then.285, %if.else.280
  br label %if.end.290

if.end.290:                                       ; preds = %if.end.289, %if.then.275
  br label %if.end.291

if.end.291:                                       ; preds = %if.end.290, %if.end.252
  br label %if.end.292

if.end.292:                                       ; preds = %if.end.291, %for.end.233
  br label %if.end.293

if.end.293:                                       ; preds = %if.end.292, %if.end.64
  %149 = load i32, i32* %n_sets, align 4
  %cmp294 = icmp eq i32 %149, 1
  br i1 %cmp294, label %land.lhs.true.296, label %if.end.336

land.lhs.true.296:                                ; preds = %if.end.293
  %150 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i32 0, i64 6
  %rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rtx299, align 8
  %cmp300 = icmp ne %struct.rtx_def* %151, null
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.336

land.lhs.true.302:                                ; preds = %land.lhs.true.296
  %152 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call303 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %152, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %call303, %struct.rtx_def** %tem, align 8
  %cmp304 = icmp ne %struct.rtx_def* %call303, null
  br i1 %cmp304, label %land.lhs.true.306, label %if.end.336

land.lhs.true.306:                                ; preds = %land.lhs.true.302
  %153 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1
  %arrayidx308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld307, i32 0, i64 0
  %rtx309 = bitcast %union.rtunion_def* %arrayidx308 to %struct.rtx_def**
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rtx309, align 8
  %155 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx310 = getelementptr inbounds %struct.set, %struct.set* %155, i64 0
  %rtl311 = getelementptr inbounds %struct.set, %struct.set* %arrayidx310, i32 0, i32 0
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtl311, align 8
  %fld312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i32 0, i64 1
  %rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rtx314, align 8
  %call315 = call i32 @rtx_equal_p(%struct.rtx_def* %154, %struct.rtx_def* %157)
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %lor.lhs.false.317, label %if.then.327

lor.lhs.false.317:                                ; preds = %land.lhs.true.306
  %158 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx318 = getelementptr inbounds %struct.set, %struct.set* %158, i64 0
  %rtl319 = getelementptr inbounds %struct.set, %struct.set* %arrayidx318, i32 0, i32 0
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtl319, align 8
  %fld320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1
  %arrayidx321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld320, i32 0, i64 0
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rtx322, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load323 = load i32, i32* %161, align 8
  %bf.clear324 = and i32 %bf.load323, 65535
  %cmp325 = icmp eq i32 %bf.clear324, 64
  br i1 %cmp325, label %if.then.327, label %if.end.336

if.then.327:                                      ; preds = %lor.lhs.false.317, %land.lhs.true.306
  %162 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 0
  %rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx330, align 8
  %call331 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %163, %struct.rtx_def* null)
  %164 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call332 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call331, %struct.rtx_def* %164)
  store %struct.rtx_def* %call332, %struct.rtx_def** %src_eqv, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %166 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 0
  %rtx335 = bitcast %union.rtunion_def* %arrayidx334 to %struct.rtx_def**
  store %struct.rtx_def* %165, %struct.rtx_def** %rtx335, align 8
  br label %if.end.336

if.end.336:                                       ; preds = %if.then.327, %lor.lhs.false.317, %land.lhs.true.302, %land.lhs.true.296, %if.end.293
  store i32 0, i32* %i, align 4
  br label %for.cond.337

for.cond.337:                                     ; preds = %for.inc.466, %if.end.336
  %167 = load i32, i32* %i, align 4
  %168 = load i32, i32* %n_sets, align 4
  %cmp338 = icmp slt i32 %167, %168
  br i1 %cmp338, label %for.body.340, label %for.end.468

for.body.340:                                     ; preds = %for.cond.337
  %169 = load i32, i32* %i, align 4
  %idxprom341 = sext i32 %169 to i64
  %170 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx342 = getelementptr inbounds %struct.set, %struct.set* %170, i64 %idxprom341
  %rtl343 = getelementptr inbounds %struct.set, %struct.set* %arrayidx342, i32 0, i32 0
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rtl343, align 8
  %fld344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld344, i32 0, i64 0
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rtx346, align 8
  store %struct.rtx_def* %172, %struct.rtx_def** %dest, align 8
  %173 = load i32, i32* %i, align 4
  %idxprom347 = sext i32 %173 to i64
  %174 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx348 = getelementptr inbounds %struct.set, %struct.set* %174, i64 %idxprom347
  %rtl349 = getelementptr inbounds %struct.set, %struct.set* %arrayidx348, i32 0, i32 0
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rtl349, align 8
  %fld350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i32 0, i64 1
  %rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx352, align 8
  store %struct.rtx_def* %176, %struct.rtx_def** %src, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call353 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %177, %struct.rtx_def* %178)
  store %struct.rtx_def* %call353, %struct.rtx_def** %new, align 8
  %179 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %180 = load i32, i32* %i, align 4
  %idxprom354 = sext i32 %180 to i64
  %181 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx355 = getelementptr inbounds %struct.set, %struct.set* %181, i64 %idxprom354
  %orig_src = getelementptr inbounds %struct.set, %struct.set* %arrayidx355, i32 0, i32 10
  store %struct.rtx_def* %179, %struct.rtx_def** %orig_src, align 8
  %182 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %183 = bitcast %struct.rtx_def* %182 to i32*
  %bf.load356 = load i32, i32* %183, align 8
  %bf.clear357 = and i32 %bf.load356, 65535
  %cmp358 = icmp eq i32 %bf.clear357, 61
  br i1 %cmp358, label %land.lhs.true.360, label %lor.lhs.false.378

land.lhs.true.360:                                ; preds = %for.body.340
  %184 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %185 = bitcast %struct.rtx_def* %184 to i32*
  %bf.load361 = load i32, i32* %185, align 8
  %bf.clear362 = and i32 %bf.load361, 65535
  %cmp363 = icmp eq i32 %bf.clear362, 61
  br i1 %cmp363, label %land.lhs.true.365, label %lor.lhs.false.378

land.lhs.true.365:                                ; preds = %land.lhs.true.360
  %186 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i32 0, i64 0
  %rtuint368 = bitcast %union.rtunion_def* %arrayidx367 to i32*
  %187 = load i32, i32* %rtuint368, align 4
  %cmp369 = icmp ult i32 %187, 53
  %conv370 = zext i1 %cmp369 to i32
  %188 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8
  %fld371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i32 0, i64 0
  %rtuint373 = bitcast %union.rtunion_def* %arrayidx372 to i32*
  %189 = load i32, i32* %rtuint373, align 4
  %cmp374 = icmp ult i32 %189, 53
  %conv375 = zext i1 %cmp374 to i32
  %cmp376 = icmp ne i32 %conv370, %conv375
  br i1 %cmp376, label %if.then.395, label %lor.lhs.false.378

lor.lhs.false.378:                                ; preds = %land.lhs.true.365, %land.lhs.true.360, %for.body.340
  %190 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx380 to i32*
  %191 = load i32, i32* %rtint, align 4
  %cmp381 = icmp sge i32 %191, 0
  br i1 %cmp381, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false.378
  %192 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 4
  %rtint385 = bitcast %union.rtunion_def* %arrayidx384 to i32*
  %193 = load i32, i32* %rtint385, align 4
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false.378
  %194 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call386 = call i32 @recog_memoized_1(%struct.rtx_def* %194)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %193, %cond.true ], [ %call386, %cond.false ]
  store i32 %cond, i32* %insn_code, align 4
  %cmp387 = icmp slt i32 %cond, 0
  br i1 %cmp387, label %if.then.395, label %lor.lhs.false.389

lor.lhs.false.389:                                ; preds = %cond.end
  %195 = load i32, i32* %insn_code, align 4
  %idxprom390 = sext i32 %195 to i64
  %arrayidx391 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom390
  %n_dups = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx391, i32 0, i32 5
  %196 = load i8, i8* %n_dups, align 1
  %conv392 = sext i8 %196 to i32
  %cmp393 = icmp sgt i32 %conv392, 0
  br i1 %cmp393, label %if.then.395, label %if.else.403

if.then.395:                                      ; preds = %lor.lhs.false.389, %cond.end, %land.lhs.true.365
  %197 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %198 = load i32, i32* %i, align 4
  %idxprom396 = sext i32 %198 to i64
  %199 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx397 = getelementptr inbounds %struct.set, %struct.set* %199, i64 %idxprom396
  %rtl398 = getelementptr inbounds %struct.set, %struct.set* %arrayidx397, i32 0, i32 0
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtl398, align 8
  %fld399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i32 0, i64 1
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call402 = call i32 @validate_change(%struct.rtx_def* %197, %struct.rtx_def** %rtx401, %struct.rtx_def* %201, i32 1)
  br label %if.end.410

if.else.403:                                      ; preds = %lor.lhs.false.389
  %202 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %203 = load i32, i32* %i, align 4
  %idxprom404 = sext i32 %203 to i64
  %204 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx405 = getelementptr inbounds %struct.set, %struct.set* %204, i64 %idxprom404
  %rtl406 = getelementptr inbounds %struct.set, %struct.set* %arrayidx405, i32 0, i32 0
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rtl406, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 1
  %rtx409 = bitcast %union.rtunion_def* %arrayidx408 to %struct.rtx_def**
  store %struct.rtx_def* %202, %struct.rtx_def** %rtx409, align 8
  br label %if.end.410

if.end.410:                                       ; preds = %if.else.403, %if.then.395
  %206 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load411 = load i32, i32* %207, align 8
  %bf.clear412 = and i32 %bf.load411, 65535
  %cmp413 = icmp eq i32 %bf.clear412, 133
  br i1 %cmp413, label %if.then.420, label %lor.lhs.false.415

lor.lhs.false.415:                                ; preds = %if.end.410
  %208 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %209 = bitcast %struct.rtx_def* %208 to i32*
  %bf.load416 = load i32, i32* %209, align 8
  %bf.clear417 = and i32 %bf.load416, 65535
  %cmp418 = icmp eq i32 %bf.clear417, 132
  br i1 %cmp418, label %if.then.420, label %if.end.437

if.then.420:                                      ; preds = %lor.lhs.false.415, %if.end.410
  %210 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i32 0, i64 1
  %rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**
  %212 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld424 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1
  %arrayidx425 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld424, i32 0, i64 1
  %rtx426 = bitcast %union.rtunion_def* %arrayidx425 to %struct.rtx_def**
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rtx426, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call427 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %213, %struct.rtx_def* %214)
  %call428 = call i32 @validate_change(%struct.rtx_def* %210, %struct.rtx_def** %rtx423, %struct.rtx_def* %call427, i32 1)
  %215 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %216 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 2
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  %217 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1
  %arrayidx433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld432, i32 0, i64 2
  %rtx434 = bitcast %union.rtunion_def* %arrayidx433 to %struct.rtx_def**
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rtx434, align 8
  %219 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call435 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %218, %struct.rtx_def* %219)
  %call436 = call i32 @validate_change(%struct.rtx_def* %215, %struct.rtx_def** %rtx431, %struct.rtx_def* %call435, i32 1)
  br label %if.end.437

if.end.437:                                       ; preds = %if.then.420, %lor.lhs.false.415
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.437
  %220 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %221 = bitcast %struct.rtx_def* %220 to i32*
  %bf.load438 = load i32, i32* %221, align 8
  %bf.clear439 = and i32 %bf.load438, 65535
  %cmp440 = icmp eq i32 %bf.clear439, 63
  br i1 %cmp440, label %lor.end, label %lor.lhs.false.442

lor.lhs.false.442:                                ; preds = %while.cond
  %222 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %223 = bitcast %struct.rtx_def* %222 to i32*
  %bf.load443 = load i32, i32* %223, align 8
  %bf.clear444 = and i32 %bf.load443, 65535
  %cmp445 = icmp eq i32 %bf.clear444, 64
  br i1 %cmp445, label %lor.end, label %lor.lhs.false.447

lor.lhs.false.447:                                ; preds = %lor.lhs.false.442
  %224 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load448 = load i32, i32* %225, align 8
  %bf.clear449 = and i32 %bf.load448, 65535
  %cmp450 = icmp eq i32 %bf.clear449, 133
  br i1 %cmp450, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.447
  %226 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %227 = bitcast %struct.rtx_def* %226 to i32*
  %bf.load452 = load i32, i32* %227, align 8
  %bf.clear453 = and i32 %bf.load452, 65535
  %cmp454 = icmp eq i32 %bf.clear453, 132
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.447, %lor.lhs.false.442, %while.cond
  %228 = phi i1 [ true, %lor.lhs.false.447 ], [ true, %lor.lhs.false.442 ], [ true, %while.cond ], [ %cmp454, %lor.rhs ]
  br i1 %228, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %229 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %fld456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld456, i32 0, i64 0
  %rtx458 = bitcast %union.rtunion_def* %arrayidx457 to %struct.rtx_def**
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rtx458, align 8
  store %struct.rtx_def* %230, %struct.rtx_def** %dest, align 8
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %231 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %232 = bitcast %struct.rtx_def* %231 to i32*
  %bf.load459 = load i32, i32* %232, align 8
  %bf.clear460 = and i32 %bf.load459, 65535
  %cmp461 = icmp eq i32 %bf.clear460, 66
  br i1 %cmp461, label %if.then.463, label %if.end.465

if.then.463:                                      ; preds = %while.end
  %233 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8
  %234 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call464 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %233, %struct.rtx_def* %234)
  br label %if.end.465

if.end.465:                                       ; preds = %if.then.463, %while.end
  br label %for.inc.466

for.inc.466:                                      ; preds = %if.end.465
  %235 = load i32, i32* %i, align 4
  %inc467 = add nsw i32 %235, 1
  store i32 %inc467, i32* %i, align 4
  br label %for.cond.337

for.end.468:                                      ; preds = %for.cond.337
  %call469 = call i32 @apply_change_group()
  store i32 0, i32* %i, align 4
  br label %for.cond.470

for.cond.470:                                     ; preds = %for.inc.2544, %for.end.468
  %236 = load i32, i32* %i, align 4
  %237 = load i32, i32* %n_sets, align 4
  %cmp471 = icmp slt i32 %236, %237
  br i1 %cmp471, label %for.body.473, label %for.end.2546

for.body.473:                                     ; preds = %for.cond.470
  store %struct.table_elt* null, %struct.table_elt** %elt, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %src_const, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8
  store %struct.table_elt* null, %struct.table_elt** %src_const_elt, align 8
  store i32 2147483647, i32* %src_cost, align 4
  store i32 2147483647, i32* %src_eqv_cost, align 4
  store i32 2147483647, i32* %src_folded_cost, align 4
  store i32 2147483647, i32* %src_related_cost, align 4
  store i32 2147483647, i32* %src_elt_cost, align 4
  store i32 2147483647, i32* %src_regcost, align 4
  store i32 2147483647, i32* %src_eqv_regcost, align 4
  store i32 2147483647, i32* %src_folded_regcost, align 4
  store i32 2147483647, i32* %src_related_regcost, align 4
  store i32 2147483647, i32* %src_elt_regcost, align 4
  store i32 0, i32* %src_folded_force_flag, align 4
  %238 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %238 to i64
  %239 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx477 = getelementptr inbounds %struct.set, %struct.set* %239, i64 %idxprom476
  %rtl478 = getelementptr inbounds %struct.set, %struct.set* %arrayidx477, i32 0, i32 0
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rtl478, align 8
  %fld479 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i32 0, i64 0
  %rtx481 = bitcast %union.rtunion_def* %arrayidx480 to %struct.rtx_def**
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rtx481, align 8
  store %struct.rtx_def* %241, %struct.rtx_def** %dest475, align 8
  %242 = load i32, i32* %i, align 4
  %idxprom482 = sext i32 %242 to i64
  %243 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx483 = getelementptr inbounds %struct.set, %struct.set* %243, i64 %idxprom482
  %rtl484 = getelementptr inbounds %struct.set, %struct.set* %arrayidx483, i32 0, i32 0
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rtl484, align 8
  %fld485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld485, i32 0, i64 1
  %rtx487 = bitcast %union.rtunion_def* %arrayidx486 to %struct.rtx_def**
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rtx487, align 8
  store %struct.rtx_def* %245, %struct.rtx_def** %src474, align 8
  %246 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %247 = bitcast %struct.rtx_def* %246 to i32*
  %bf.load488 = load i32, i32* %247, align 8
  %bf.lshr489 = lshr i32 %bf.load488, 16
  %bf.clear490 = and i32 %bf.lshr489, 255
  %cmp491 = icmp eq i32 %bf.clear490, 0
  br i1 %cmp491, label %cond.true.493, label %cond.false.497

cond.true.493:                                    ; preds = %for.body.473
  %248 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load494 = load i32, i32* %249, align 8
  %bf.lshr495 = lshr i32 %bf.load494, 16
  %bf.clear496 = and i32 %bf.lshr495, 255
  br label %cond.end.501

cond.false.497:                                   ; preds = %for.body.473
  %250 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %251 = bitcast %struct.rtx_def* %250 to i32*
  %bf.load498 = load i32, i32* %251, align 8
  %bf.lshr499 = lshr i32 %bf.load498, 16
  %bf.clear500 = and i32 %bf.lshr499, 255
  br label %cond.end.501

cond.end.501:                                     ; preds = %cond.false.497, %cond.true.493
  %cond502 = phi i32 [ %bf.clear496, %cond.true.493 ], [ %bf.clear500, %cond.false.497 ]
  store i32 %cond502, i32* %mode, align 4
  %252 = load i32, i32* %mode, align 4
  %253 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %253 to i64
  %254 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx504 = getelementptr inbounds %struct.set, %struct.set* %254, i64 %idxprom503
  %mode505 = getelementptr inbounds %struct.set, %struct.set* %arrayidx504, i32 0, i32 8
  store i32 %252, i32* %mode505, align 4
  %255 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %tobool506 = icmp ne %struct.rtx_def* %255, null
  br i1 %tobool506, label %if.then.507, label %if.end.557

if.then.507:                                      ; preds = %cond.end.501
  %256 = load i32, i32* %mode, align 4
  store i32 %256, i32* %eqvmode, align 4
  %257 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load508 = load i32, i32* %258, align 8
  %bf.clear509 = and i32 %bf.load508, 65535
  %cmp510 = icmp eq i32 %bf.clear509, 64
  br i1 %cmp510, label %if.then.512, label %if.end.522

if.then.512:                                      ; preds = %if.then.507
  %259 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx514 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld513, i32 0, i64 0
  %rtx515 = bitcast %union.rtunion_def* %arrayidx514 to %struct.rtx_def**
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rtx515, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 0
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %261 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load519 = load i32, i32* %262, align 8
  %bf.lshr520 = lshr i32 %bf.load519, 16
  %bf.clear521 = and i32 %bf.lshr520, 255
  store i32 %bf.clear521, i32* %eqvmode, align 4
  br label %if.end.522

if.end.522:                                       ; preds = %if.then.512, %if.then.507
  store i32 0, i32* @do_not_record, align 4
  store i32 0, i32* @hash_arg_in_memory, align 4
  %263 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %264 = bitcast %struct.rtx_def* %263 to i32*
  %bf.load523 = load i32, i32* %264, align 8
  %bf.clear524 = and i32 %bf.load523, 65535
  %cmp525 = icmp eq i32 %bf.clear524, 61
  br i1 %cmp525, label %land.lhs.true.527, label %cond.false.549

land.lhs.true.527:                                ; preds = %if.end.522
  %265 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld528, i32 0, i64 0
  %rtuint530 = bitcast %union.rtunion_def* %arrayidx529 to i32*
  %266 = load i32, i32* %rtuint530, align 4
  %cmp531 = icmp uge i32 %266, 53
  br i1 %cmp531, label %cond.true.533, label %cond.false.549

cond.true.533:                                    ; preds = %land.lhs.true.527
  %267 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 0
  %rtuint536 = bitcast %union.rtunion_def* %arrayidx535 to i32*
  %268 = load i32, i32* %rtuint536, align 4
  %269 = load i32, i32* @cached_regno, align 4
  %cmp537 = icmp eq i32 %268, %269
  br i1 %cmp537, label %land.lhs.true.539, label %cond.false.542

land.lhs.true.539:                                ; preds = %cond.true.533
  %270 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool540 = icmp ne %struct.cse_reg_info* %270, null
  br i1 %tobool540, label %cond.true.541, label %cond.false.542

cond.true.541:                                    ; preds = %land.lhs.true.539
  %271 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.547

cond.false.542:                                   ; preds = %land.lhs.true.539, %cond.true.533
  %272 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 0
  %rtuint545 = bitcast %union.rtunion_def* %arrayidx544 to i32*
  %273 = load i32, i32* %rtuint545, align 4
  %call546 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %273)
  br label %cond.end.547

cond.end.547:                                     ; preds = %cond.false.542, %cond.true.541
  %cond548 = phi %struct.cse_reg_info* [ %271, %cond.true.541 ], [ %call546, %cond.false.542 ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond548, i32 0, i32 3
  %274 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %274
  br label %cond.end.551

cond.false.549:                                   ; preds = %land.lhs.true.527, %if.end.522
  %275 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %276 = load i32, i32* %eqvmode, align 4
  %call550 = call i32 @canon_hash(%struct.rtx_def* %275, i32 %276)
  br label %cond.end.551

cond.end.551:                                     ; preds = %cond.false.549, %cond.end.547
  %cond552 = phi i32 [ %add, %cond.end.547 ], [ %call550, %cond.false.549 ]
  %and = and i32 %cond552, 31
  store i32 %and, i32* %src_eqv_hash, align 4
  %277 = load i32, i32* @do_not_record, align 4
  %tobool553 = icmp ne i32 %277, 0
  br i1 %tobool553, label %if.end.556, label %if.then.554

if.then.554:                                      ; preds = %cond.end.551
  %278 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %279 = load i32, i32* %src_eqv_hash, align 4
  %280 = load i32, i32* %eqvmode, align 4
  %call555 = call %struct.table_elt* @lookup(%struct.rtx_def* %278, i32 %279, i32 %280)
  store %struct.table_elt* %call555, %struct.table_elt** %src_eqv_elt, align 8
  br label %if.end.556

if.end.556:                                       ; preds = %if.then.554, %cond.end.551
  %281 = load i32, i32* @do_not_record, align 4
  store i32 %281, i32* %src_eqv_volatile, align 4
  %282 = load i32, i32* @hash_arg_in_memory, align 4
  store i32 %282, i32* %src_eqv_in_memory, align 4
  br label %if.end.557

if.end.557:                                       ; preds = %if.end.556, %cond.end.501
  %283 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %284 = bitcast %struct.rtx_def* %283 to i32*
  %bf.load558 = load i32, i32* %284, align 8
  %bf.clear559 = and i32 %bf.load558, 65535
  %cmp560 = icmp eq i32 %bf.clear559, 64
  br i1 %cmp560, label %if.then.562, label %if.else.563

if.then.562:                                      ; preds = %if.end.557
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8
  br label %if.end.564

if.else.563:                                      ; preds = %if.end.557
  %285 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  store %struct.rtx_def* %285, %struct.rtx_def** %src_eqv_here, align 8
  br label %if.end.564

if.end.564:                                       ; preds = %if.else.563, %if.then.562
  %286 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %287 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call565 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %286, %struct.rtx_def* %287)
  store %struct.rtx_def* %call565, %struct.rtx_def** %src_folded, align 8
  store i32 0, i32* @do_not_record, align 4
  store i32 0, i32* @hash_arg_in_memory, align 4
  %288 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %289 = load i32, i32* %i, align 4
  %idxprom566 = sext i32 %289 to i64
  %290 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx567 = getelementptr inbounds %struct.set, %struct.set* %290, i64 %idxprom566
  %src568 = getelementptr inbounds %struct.set, %struct.set* %arrayidx567, i32 0, i32 1
  store %struct.rtx_def* %288, %struct.rtx_def** %src568, align 8
  %291 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %292 = bitcast %struct.rtx_def* %291 to i32*
  %bf.load569 = load i32, i32* %292, align 8
  %bf.clear570 = and i32 %bf.load569, 65535
  %cmp571 = icmp eq i32 %bf.clear570, 61
  br i1 %cmp571, label %land.lhs.true.573, label %cond.false.597

land.lhs.true.573:                                ; preds = %if.end.564
  %293 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld574 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx575 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld574, i32 0, i64 0
  %rtuint576 = bitcast %union.rtunion_def* %arrayidx575 to i32*
  %294 = load i32, i32* %rtuint576, align 4
  %cmp577 = icmp uge i32 %294, 53
  br i1 %cmp577, label %cond.true.579, label %cond.false.597

cond.true.579:                                    ; preds = %land.lhs.true.573
  %295 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld580 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx581 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld580, i32 0, i64 0
  %rtuint582 = bitcast %union.rtunion_def* %arrayidx581 to i32*
  %296 = load i32, i32* %rtuint582, align 4
  %297 = load i32, i32* @cached_regno, align 4
  %cmp583 = icmp eq i32 %296, %297
  br i1 %cmp583, label %land.lhs.true.585, label %cond.false.588

land.lhs.true.585:                                ; preds = %cond.true.579
  %298 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool586 = icmp ne %struct.cse_reg_info* %298, null
  br i1 %tobool586, label %cond.true.587, label %cond.false.588

cond.true.587:                                    ; preds = %land.lhs.true.585
  %299 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.593

cond.false.588:                                   ; preds = %land.lhs.true.585, %cond.true.579
  %300 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld589, i32 0, i64 0
  %rtuint591 = bitcast %union.rtunion_def* %arrayidx590 to i32*
  %301 = load i32, i32* %rtuint591, align 4
  %call592 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %301)
  br label %cond.end.593

cond.end.593:                                     ; preds = %cond.false.588, %cond.true.587
  %cond594 = phi %struct.cse_reg_info* [ %299, %cond.true.587 ], [ %call592, %cond.false.588 ]
  %reg_qty595 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond594, i32 0, i32 3
  %302 = load i32, i32* %reg_qty595, align 4
  %add596 = add i32 7808, %302
  br label %cond.end.599

cond.false.597:                                   ; preds = %land.lhs.true.573, %if.end.564
  %303 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %304 = load i32, i32* %mode, align 4
  %call598 = call i32 @canon_hash(%struct.rtx_def* %303, i32 %304)
  br label %cond.end.599

cond.end.599:                                     ; preds = %cond.false.597, %cond.end.593
  %cond600 = phi i32 [ %add596, %cond.end.593 ], [ %call598, %cond.false.597 ]
  %and601 = and i32 %cond600, 31
  %305 = load i32, i32* %i, align 4
  %idxprom602 = sext i32 %305 to i64
  %306 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx603 = getelementptr inbounds %struct.set, %struct.set* %306, i64 %idxprom602
  %src_hash = getelementptr inbounds %struct.set, %struct.set* %arrayidx603, i32 0, i32 3
  store i32 %and601, i32* %src_hash, align 4
  %307 = load i32, i32* @do_not_record, align 4
  %conv604 = trunc i32 %307 to i8
  %308 = load i32, i32* %i, align 4
  %idxprom605 = sext i32 %308 to i64
  %309 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx606 = getelementptr inbounds %struct.set, %struct.set* %309, i64 %idxprom605
  %src_volatile = getelementptr inbounds %struct.set, %struct.set* %arrayidx606, i32 0, i32 7
  store i8 %conv604, i8* %src_volatile, align 1
  %310 = load i32, i32* @hash_arg_in_memory, align 4
  %conv607 = trunc i32 %310 to i8
  %311 = load i32, i32* %i, align 4
  %idxprom608 = sext i32 %311 to i64
  %312 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx609 = getelementptr inbounds %struct.set, %struct.set* %312, i64 %idxprom608
  %src_in_memory = getelementptr inbounds %struct.set, %struct.set* %arrayidx609, i32 0, i32 6
  store i8 %conv607, i8* %src_in_memory, align 1
  %313 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %314 = bitcast %struct.rtx_def* %313 to i32*
  %bf.load610 = load i32, i32* %314, align 8
  %bf.clear611 = and i32 %bf.load610, 65535
  %cmp612 = icmp eq i32 %bf.clear611, 66
  br i1 %cmp612, label %land.lhs.true.614, label %if.end.633

land.lhs.true.614:                                ; preds = %cond.end.599
  %315 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call615 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %315, i32 3, %struct.rtx_def* null)
  %cmp616 = icmp ne %struct.rtx_def* %call615, null
  br i1 %cmp616, label %land.lhs.true.618, label %if.end.633

land.lhs.true.618:                                ; preds = %land.lhs.true.614
  %316 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %317 = bitcast %struct.rtx_def* %316 to i32*
  %bf.load619 = load i32, i32* %317, align 8
  %bf.clear620 = and i32 %bf.load619, 65535
  %cmp621 = icmp eq i32 %bf.clear620, 61
  br i1 %cmp621, label %land.lhs.true.623, label %if.end.633

land.lhs.true.623:                                ; preds = %land.lhs.true.618
  %318 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld624, i32 0, i64 0
  %rtuint626 = bitcast %union.rtunion_def* %arrayidx625 to i32*
  %319 = load i32, i32* %rtuint626, align 4
  %cmp627 = icmp uge i32 %319, 53
  br i1 %cmp627, label %if.then.629, label %if.end.633

if.then.629:                                      ; preds = %land.lhs.true.623
  %320 = load i32, i32* %i, align 4
  %idxprom630 = sext i32 %320 to i64
  %321 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx631 = getelementptr inbounds %struct.set, %struct.set* %321, i64 %idxprom630
  %src_volatile632 = getelementptr inbounds %struct.set, %struct.set* %arrayidx631, i32 0, i32 7
  store i8 1, i8* %src_volatile632, align 1
  br label %if.end.633

if.end.633:                                       ; preds = %if.then.629, %land.lhs.true.623, %land.lhs.true.618, %land.lhs.true.614, %cond.end.599
  %322 = load i32, i32* %i, align 4
  %idxprom634 = sext i32 %322 to i64
  %323 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx635 = getelementptr inbounds %struct.set, %struct.set* %323, i64 %idxprom634
  %src_volatile636 = getelementptr inbounds %struct.set, %struct.set* %arrayidx635, i32 0, i32 7
  %324 = load i8, i8* %src_volatile636, align 1
  %tobool637 = icmp ne i8 %324, 0
  br i1 %tobool637, label %if.end.643, label %if.then.638

if.then.638:                                      ; preds = %if.end.633
  %325 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %326 = load i32, i32* %i, align 4
  %idxprom639 = sext i32 %326 to i64
  %327 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx640 = getelementptr inbounds %struct.set, %struct.set* %327, i64 %idxprom639
  %src_hash641 = getelementptr inbounds %struct.set, %struct.set* %arrayidx640, i32 0, i32 3
  %328 = load i32, i32* %src_hash641, align 4
  %329 = load i32, i32* %mode, align 4
  %call642 = call %struct.table_elt* @lookup(%struct.rtx_def* %325, i32 %328, i32 %329)
  store %struct.table_elt* %call642, %struct.table_elt** %elt, align 8
  br label %if.end.643

if.end.643:                                       ; preds = %if.then.638, %if.end.633
  %330 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %331 = load i32, i32* %i, align 4
  %idxprom644 = sext i32 %331 to i64
  %332 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx645 = getelementptr inbounds %struct.set, %struct.set* %332, i64 %idxprom644
  %src_elt = getelementptr inbounds %struct.set, %struct.set* %arrayidx645, i32 0, i32 2
  store %struct.table_elt* %330, %struct.table_elt** %src_elt, align 8
  %333 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool646 = icmp ne %struct.table_elt* %333, null
  br i1 %tobool646, label %land.lhs.true.647, label %if.else.693

land.lhs.true.647:                                ; preds = %if.end.643
  %334 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %tobool648 = icmp ne %struct.rtx_def* %334, null
  br i1 %tobool648, label %land.lhs.true.649, label %if.else.693

land.lhs.true.649:                                ; preds = %land.lhs.true.647
  %335 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %tobool650 = icmp ne %struct.table_elt* %335, null
  br i1 %tobool650, label %if.then.651, label %if.else.693

if.then.651:                                      ; preds = %land.lhs.true.649
  %336 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %336, i32 0, i32 6
  %337 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  %338 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %first_same_value652 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %338, i32 0, i32 6
  %339 = load %struct.table_elt*, %struct.table_elt** %first_same_value652, align 8
  %cmp653 = icmp ne %struct.table_elt* %337, %339
  br i1 %cmp653, label %if.then.655, label %if.end.692

if.then.655:                                      ; preds = %if.then.651
  %340 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %341 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  call void @merge_equiv_classes(%struct.table_elt* %340, %struct.table_elt* %341)
  %342 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %343 = bitcast %struct.rtx_def* %342 to i32*
  %bf.load656 = load i32, i32* %343, align 8
  %bf.clear657 = and i32 %bf.load656, 65535
  %cmp658 = icmp eq i32 %bf.clear657, 61
  br i1 %cmp658, label %land.lhs.true.660, label %cond.false.684

land.lhs.true.660:                                ; preds = %if.then.655
  %344 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld661 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1
  %arrayidx662 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld661, i32 0, i64 0
  %rtuint663 = bitcast %union.rtunion_def* %arrayidx662 to i32*
  %345 = load i32, i32* %rtuint663, align 4
  %cmp664 = icmp uge i32 %345, 53
  br i1 %cmp664, label %cond.true.666, label %cond.false.684

cond.true.666:                                    ; preds = %land.lhs.true.660
  %346 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %346, i32 0, i32 1
  %arrayidx668 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld667, i32 0, i64 0
  %rtuint669 = bitcast %union.rtunion_def* %arrayidx668 to i32*
  %347 = load i32, i32* %rtuint669, align 4
  %348 = load i32, i32* @cached_regno, align 4
  %cmp670 = icmp eq i32 %347, %348
  br i1 %cmp670, label %land.lhs.true.672, label %cond.false.675

land.lhs.true.672:                                ; preds = %cond.true.666
  %349 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool673 = icmp ne %struct.cse_reg_info* %349, null
  br i1 %tobool673, label %cond.true.674, label %cond.false.675

cond.true.674:                                    ; preds = %land.lhs.true.672
  %350 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.680

cond.false.675:                                   ; preds = %land.lhs.true.672, %cond.true.666
  %351 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %351, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 0
  %rtuint678 = bitcast %union.rtunion_def* %arrayidx677 to i32*
  %352 = load i32, i32* %rtuint678, align 4
  %call679 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %352)
  br label %cond.end.680

cond.end.680:                                     ; preds = %cond.false.675, %cond.true.674
  %cond681 = phi %struct.cse_reg_info* [ %350, %cond.true.674 ], [ %call679, %cond.false.675 ]
  %reg_qty682 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond681, i32 0, i32 3
  %353 = load i32, i32* %reg_qty682, align 4
  %add683 = add i32 7808, %353
  br label %cond.end.687

cond.false.684:                                   ; preds = %land.lhs.true.660, %if.then.655
  %354 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %355 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %mode685 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %355, i32 0, i32 10
  %356 = load i32, i32* %mode685, align 4
  %call686 = call i32 @canon_hash(%struct.rtx_def* %354, i32 %356)
  br label %cond.end.687

cond.end.687:                                     ; preds = %cond.false.684, %cond.end.680
  %cond688 = phi i32 [ %add683, %cond.end.680 ], [ %call686, %cond.false.684 ]
  %and689 = and i32 %cond688, 31
  store i32 %and689, i32* %src_eqv_hash, align 4
  %357 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %358 = load i32, i32* %src_eqv_hash, align 4
  %359 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %mode690 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %359, i32 0, i32 10
  %360 = load i32, i32* %mode690, align 4
  %call691 = call %struct.table_elt* @lookup(%struct.rtx_def* %357, i32 %358, i32 %360)
  store %struct.table_elt* %call691, %struct.table_elt** %src_eqv_elt, align 8
  br label %if.end.692

if.end.692:                                       ; preds = %cond.end.687, %if.then.651
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8
  br label %if.end.697

if.else.693:                                      ; preds = %land.lhs.true.649, %land.lhs.true.647, %if.end.643
  %361 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %tobool694 = icmp ne %struct.table_elt* %361, null
  br i1 %tobool694, label %if.then.695, label %if.end.696

if.then.695:                                      ; preds = %if.else.693
  %362 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  store %struct.table_elt* %362, %struct.table_elt** %elt, align 8
  br label %if.end.696

if.end.696:                                       ; preds = %if.then.695, %if.else.693
  br label %if.end.697

if.end.697:                                       ; preds = %if.end.696, %if.end.692
  %363 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool698 = icmp ne %struct.table_elt* %363, null
  br i1 %tobool698, label %if.then.699, label %if.end.709

if.then.699:                                      ; preds = %if.end.697
  %364 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value700 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %364, i32 0, i32 6
  %365 = load %struct.table_elt*, %struct.table_elt** %first_same_value700, align 8
  store %struct.table_elt* %365, %struct.table_elt** %p, align 8
  br label %for.cond.701

for.cond.701:                                     ; preds = %for.inc.707, %if.then.699
  %366 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool702 = icmp ne %struct.table_elt* %366, null
  br i1 %tobool702, label %for.body.703, label %for.end.708

for.body.703:                                     ; preds = %for.cond.701
  %367 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %367, i32 0, i32 12
  %368 = load i8, i8* %is_const, align 1
  %tobool704 = icmp ne i8 %368, 0
  br i1 %tobool704, label %if.then.705, label %if.end.706

if.then.705:                                      ; preds = %for.body.703
  %369 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %369, i32 0, i32 0
  %370 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  store %struct.rtx_def* %370, %struct.rtx_def** %src_const, align 8
  %371 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  store %struct.table_elt* %371, %struct.table_elt** %src_const_elt, align 8
  br label %for.end.708

if.end.706:                                       ; preds = %for.body.703
  br label %for.inc.707

for.inc.707:                                      ; preds = %if.end.706
  %372 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %372, i32 0, i32 4
  %373 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %373, %struct.table_elt** %p, align 8
  br label %for.cond.701

for.end.708:                                      ; preds = %if.then.705, %for.cond.701
  br label %if.end.709

if.end.709:                                       ; preds = %for.end.708, %if.end.697
  %374 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %cmp710 = icmp eq %struct.rtx_def* %374, null
  br i1 %cmp710, label %land.lhs.true.712, label %if.else.774

land.lhs.true.712:                                ; preds = %if.end.709
  %375 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %376 = bitcast %struct.rtx_def* %375 to i32*
  %bf.load713 = load i32, i32* %376, align 8
  %bf.clear714 = and i32 %bf.load713, 65535
  %cmp715 = icmp eq i32 %bf.clear714, 67
  br i1 %cmp715, label %if.then.773, label %lor.lhs.false.717

lor.lhs.false.717:                                ; preds = %land.lhs.true.712
  %377 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %378 = bitcast %struct.rtx_def* %377 to i32*
  %bf.load718 = load i32, i32* %378, align 8
  %bf.clear719 = and i32 %bf.load718, 65535
  %cmp720 = icmp eq i32 %bf.clear719, 68
  br i1 %cmp720, label %if.then.773, label %lor.lhs.false.722

lor.lhs.false.722:                                ; preds = %lor.lhs.false.717
  %379 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %380 = bitcast %struct.rtx_def* %379 to i32*
  %bf.load723 = load i32, i32* %380, align 8
  %bf.clear724 = and i32 %bf.load723, 65535
  %cmp725 = icmp eq i32 %bf.clear724, 54
  br i1 %cmp725, label %if.then.773, label %lor.lhs.false.727

lor.lhs.false.727:                                ; preds = %lor.lhs.false.722
  %381 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %382 = bitcast %struct.rtx_def* %381 to i32*
  %bf.load728 = load i32, i32* %382, align 8
  %bf.clear729 = and i32 %bf.load728, 65535
  %cmp730 = icmp eq i32 %bf.clear729, 55
  br i1 %cmp730, label %if.then.773, label %lor.lhs.false.732

lor.lhs.false.732:                                ; preds = %lor.lhs.false.727
  %383 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %384 = bitcast %struct.rtx_def* %383 to i32*
  %bf.load733 = load i32, i32* %384, align 8
  %bf.clear734 = and i32 %bf.load733, 65535
  %cmp735 = icmp eq i32 %bf.clear734, 58
  br i1 %cmp735, label %if.then.773, label %lor.lhs.false.737

lor.lhs.false.737:                                ; preds = %lor.lhs.false.732
  %385 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %386 = bitcast %struct.rtx_def* %385 to i32*
  %bf.load738 = load i32, i32* %386, align 8
  %bf.clear739 = and i32 %bf.load738, 65535
  %cmp740 = icmp eq i32 %bf.clear739, 134
  br i1 %cmp740, label %if.then.773, label %lor.lhs.false.742

lor.lhs.false.742:                                ; preds = %lor.lhs.false.737
  %387 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %388 = bitcast %struct.rtx_def* %387 to i32*
  %bf.load743 = load i32, i32* %388, align 8
  %bf.clear744 = and i32 %bf.load743, 65535
  %cmp745 = icmp eq i32 %bf.clear744, 56
  br i1 %cmp745, label %if.then.773, label %lor.lhs.false.747

lor.lhs.false.747:                                ; preds = %lor.lhs.false.742
  %389 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %390 = bitcast %struct.rtx_def* %389 to i32*
  %bf.load748 = load i32, i32* %390, align 8
  %bf.clear749 = and i32 %bf.load748, 65535
  %cmp750 = icmp eq i32 %bf.clear749, 140
  br i1 %cmp750, label %if.then.773, label %lor.lhs.false.752

lor.lhs.false.752:                                ; preds = %lor.lhs.false.747
  %391 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %392 = bitcast %struct.rtx_def* %391 to i32*
  %bf.load753 = load i32, i32* %392, align 8
  %bf.clear754 = and i32 %bf.load753, 65535
  %cmp755 = icmp eq i32 %bf.clear754, 76
  br i1 %cmp755, label %land.lhs.true.757, label %if.else.774

land.lhs.true.757:                                ; preds = %lor.lhs.false.752
  %393 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %fld758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %393, i32 0, i32 1
  %arrayidx759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld758, i32 0, i64 0
  %rtx760 = bitcast %union.rtunion_def* %arrayidx759 to %struct.rtx_def**
  %394 = load %struct.rtx_def*, %struct.rtx_def** %rtx760, align 8
  %395 = bitcast %struct.rtx_def* %394 to i32*
  %bf.load761 = load i32, i32* %395, align 8
  %bf.clear762 = and i32 %bf.load761, 65535
  %cmp763 = icmp eq i32 %bf.clear762, 67
  br i1 %cmp763, label %land.lhs.true.765, label %if.else.774

land.lhs.true.765:                                ; preds = %land.lhs.true.757
  %396 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %fld766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %396, i32 0, i32 1
  %arrayidx767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld766, i32 0, i64 1
  %rtx768 = bitcast %union.rtunion_def* %arrayidx767 to %struct.rtx_def**
  %397 = load %struct.rtx_def*, %struct.rtx_def** %rtx768, align 8
  %398 = bitcast %struct.rtx_def* %397 to i32*
  %bf.load769 = load i32, i32* %398, align 8
  %bf.clear770 = and i32 %bf.load769, 65535
  %cmp771 = icmp eq i32 %bf.clear770, 67
  br i1 %cmp771, label %if.then.773, label %if.else.774

if.then.773:                                      ; preds = %land.lhs.true.765, %lor.lhs.false.747, %lor.lhs.false.742, %lor.lhs.false.737, %lor.lhs.false.732, %lor.lhs.false.727, %lor.lhs.false.722, %lor.lhs.false.717, %land.lhs.true.712
  %399 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  store %struct.rtx_def* %399, %struct.rtx_def** %src_const, align 8
  %400 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  store %struct.table_elt* %400, %struct.table_elt** %src_const_elt, align 8
  br label %if.end.821

if.else.774:                                      ; preds = %land.lhs.true.765, %land.lhs.true.757, %lor.lhs.false.752, %if.end.709
  %401 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %cmp775 = icmp eq %struct.rtx_def* %401, null
  br i1 %cmp775, label %land.lhs.true.777, label %if.end.820

land.lhs.true.777:                                ; preds = %if.else.774
  %402 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %tobool778 = icmp ne %struct.rtx_def* %402, null
  br i1 %tobool778, label %land.lhs.true.779, label %if.end.820

land.lhs.true.779:                                ; preds = %land.lhs.true.777
  %403 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %404 = bitcast %struct.rtx_def* %403 to i32*
  %bf.load780 = load i32, i32* %404, align 8
  %bf.clear781 = and i32 %bf.load780, 65535
  %cmp782 = icmp eq i32 %bf.clear781, 67
  br i1 %cmp782, label %if.then.819, label %lor.lhs.false.784

lor.lhs.false.784:                                ; preds = %land.lhs.true.779
  %405 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %406 = bitcast %struct.rtx_def* %405 to i32*
  %bf.load785 = load i32, i32* %406, align 8
  %bf.clear786 = and i32 %bf.load785, 65535
  %cmp787 = icmp eq i32 %bf.clear786, 68
  br i1 %cmp787, label %if.then.819, label %lor.lhs.false.789

lor.lhs.false.789:                                ; preds = %lor.lhs.false.784
  %407 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %408 = bitcast %struct.rtx_def* %407 to i32*
  %bf.load790 = load i32, i32* %408, align 8
  %bf.clear791 = and i32 %bf.load790, 65535
  %cmp792 = icmp eq i32 %bf.clear791, 54
  br i1 %cmp792, label %if.then.819, label %lor.lhs.false.794

lor.lhs.false.794:                                ; preds = %lor.lhs.false.789
  %409 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %410 = bitcast %struct.rtx_def* %409 to i32*
  %bf.load795 = load i32, i32* %410, align 8
  %bf.clear796 = and i32 %bf.load795, 65535
  %cmp797 = icmp eq i32 %bf.clear796, 55
  br i1 %cmp797, label %if.then.819, label %lor.lhs.false.799

lor.lhs.false.799:                                ; preds = %lor.lhs.false.794
  %411 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %412 = bitcast %struct.rtx_def* %411 to i32*
  %bf.load800 = load i32, i32* %412, align 8
  %bf.clear801 = and i32 %bf.load800, 65535
  %cmp802 = icmp eq i32 %bf.clear801, 58
  br i1 %cmp802, label %if.then.819, label %lor.lhs.false.804

lor.lhs.false.804:                                ; preds = %lor.lhs.false.799
  %413 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %414 = bitcast %struct.rtx_def* %413 to i32*
  %bf.load805 = load i32, i32* %414, align 8
  %bf.clear806 = and i32 %bf.load805, 65535
  %cmp807 = icmp eq i32 %bf.clear806, 134
  br i1 %cmp807, label %if.then.819, label %lor.lhs.false.809

lor.lhs.false.809:                                ; preds = %lor.lhs.false.804
  %415 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %416 = bitcast %struct.rtx_def* %415 to i32*
  %bf.load810 = load i32, i32* %416, align 8
  %bf.clear811 = and i32 %bf.load810, 65535
  %cmp812 = icmp eq i32 %bf.clear811, 56
  br i1 %cmp812, label %if.then.819, label %lor.lhs.false.814

lor.lhs.false.814:                                ; preds = %lor.lhs.false.809
  %417 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %418 = bitcast %struct.rtx_def* %417 to i32*
  %bf.load815 = load i32, i32* %418, align 8
  %bf.clear816 = and i32 %bf.load815, 65535
  %cmp817 = icmp eq i32 %bf.clear816, 140
  br i1 %cmp817, label %if.then.819, label %if.end.820

if.then.819:                                      ; preds = %lor.lhs.false.814, %lor.lhs.false.809, %lor.lhs.false.804, %lor.lhs.false.799, %lor.lhs.false.794, %lor.lhs.false.789, %lor.lhs.false.784, %land.lhs.true.779
  %419 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  store %struct.rtx_def* %419, %struct.rtx_def** %src_const, align 8
  %420 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  store %struct.table_elt* %420, %struct.table_elt** %src_const_elt, align 8
  br label %if.end.820

if.end.820:                                       ; preds = %if.then.819, %lor.lhs.false.814, %land.lhs.true.777, %if.else.774
  br label %if.end.821

if.end.821:                                       ; preds = %if.end.820, %if.then.773
  %421 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool822 = icmp ne %struct.rtx_def* %421, null
  br i1 %tobool822, label %land.lhs.true.823, label %if.end.866

land.lhs.true.823:                                ; preds = %if.end.821
  %422 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %cmp824 = icmp eq %struct.table_elt* %422, null
  br i1 %cmp824, label %if.then.826, label %if.end.866

if.then.826:                                      ; preds = %land.lhs.true.823
  %423 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %424 = bitcast %struct.rtx_def* %423 to i32*
  %bf.load827 = load i32, i32* %424, align 8
  %bf.clear828 = and i32 %bf.load827, 65535
  %cmp829 = icmp eq i32 %bf.clear828, 61
  br i1 %cmp829, label %land.lhs.true.831, label %cond.false.855

land.lhs.true.831:                                ; preds = %if.then.826
  %425 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1
  %arrayidx833 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld832, i32 0, i64 0
  %rtuint834 = bitcast %union.rtunion_def* %arrayidx833 to i32*
  %426 = load i32, i32* %rtuint834, align 4
  %cmp835 = icmp uge i32 %426, 53
  br i1 %cmp835, label %cond.true.837, label %cond.false.855

cond.true.837:                                    ; preds = %land.lhs.true.831
  %427 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1
  %arrayidx839 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld838, i32 0, i64 0
  %rtuint840 = bitcast %union.rtunion_def* %arrayidx839 to i32*
  %428 = load i32, i32* %rtuint840, align 4
  %429 = load i32, i32* @cached_regno, align 4
  %cmp841 = icmp eq i32 %428, %429
  br i1 %cmp841, label %land.lhs.true.843, label %cond.false.846

land.lhs.true.843:                                ; preds = %cond.true.837
  %430 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool844 = icmp ne %struct.cse_reg_info* %430, null
  br i1 %tobool844, label %cond.true.845, label %cond.false.846

cond.true.845:                                    ; preds = %land.lhs.true.843
  %431 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.851

cond.false.846:                                   ; preds = %land.lhs.true.843, %cond.true.837
  %432 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %432, i32 0, i32 1
  %arrayidx848 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld847, i32 0, i64 0
  %rtuint849 = bitcast %union.rtunion_def* %arrayidx848 to i32*
  %433 = load i32, i32* %rtuint849, align 4
  %call850 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %433)
  br label %cond.end.851

cond.end.851:                                     ; preds = %cond.false.846, %cond.true.845
  %cond852 = phi %struct.cse_reg_info* [ %431, %cond.true.845 ], [ %call850, %cond.false.846 ]
  %reg_qty853 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond852, i32 0, i32 3
  %434 = load i32, i32* %reg_qty853, align 4
  %add854 = add i32 7808, %434
  br label %cond.end.857

cond.false.855:                                   ; preds = %land.lhs.true.831, %if.then.826
  %435 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %436 = load i32, i32* %mode, align 4
  %call856 = call i32 @canon_hash(%struct.rtx_def* %435, i32 %436)
  br label %cond.end.857

cond.end.857:                                     ; preds = %cond.false.855, %cond.end.851
  %cond858 = phi i32 [ %add854, %cond.end.851 ], [ %call856, %cond.false.855 ]
  %and859 = and i32 %cond858, 31
  %437 = load i32, i32* %i, align 4
  %idxprom860 = sext i32 %437 to i64
  %438 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx861 = getelementptr inbounds %struct.set, %struct.set* %438, i64 %idxprom860
  %src_const_hash = getelementptr inbounds %struct.set, %struct.set* %arrayidx861, i32 0, i32 11
  store i32 %and859, i32* %src_const_hash, align 4
  %439 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %440 = load i32, i32* %i, align 4
  %idxprom862 = sext i32 %440 to i64
  %441 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx863 = getelementptr inbounds %struct.set, %struct.set* %441, i64 %idxprom862
  %src_const_hash864 = getelementptr inbounds %struct.set, %struct.set* %arrayidx863, i32 0, i32 11
  %442 = load i32, i32* %src_const_hash864, align 4
  %443 = load i32, i32* %mode, align 4
  %call865 = call %struct.table_elt* @lookup(%struct.rtx_def* %439, i32 %442, i32 %443)
  store %struct.table_elt* %call865, %struct.table_elt** %src_const_elt, align 8
  br label %if.end.866

if.end.866:                                       ; preds = %cond.end.857, %land.lhs.true.823, %if.end.821
  %444 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %445 = load i32, i32* %i, align 4
  %idxprom867 = sext i32 %445 to i64
  %446 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx868 = getelementptr inbounds %struct.set, %struct.set* %446, i64 %idxprom867
  %src_const869 = getelementptr inbounds %struct.set, %struct.set* %arrayidx868, i32 0, i32 9
  store %struct.rtx_def* %444, %struct.rtx_def** %src_const869, align 8
  %447 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %448 = load i32, i32* %i, align 4
  %idxprom870 = sext i32 %448 to i64
  %449 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx871 = getelementptr inbounds %struct.set, %struct.set* %449, i64 %idxprom870
  %src_const_elt872 = getelementptr inbounds %struct.set, %struct.set* %arrayidx871, i32 0, i32 12
  store %struct.table_elt* %447, %struct.table_elt** %src_const_elt872, align 8
  %450 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %tobool873 = icmp ne %struct.table_elt* %450, null
  br i1 %tobool873, label %land.lhs.true.874, label %if.else.882

land.lhs.true.874:                                ; preds = %if.end.866
  %451 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool875 = icmp ne %struct.table_elt* %451, null
  br i1 %tobool875, label %land.lhs.true.876, label %if.else.882

land.lhs.true.876:                                ; preds = %land.lhs.true.874
  %452 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %first_same_value877 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %452, i32 0, i32 6
  %453 = load %struct.table_elt*, %struct.table_elt** %first_same_value877, align 8
  %454 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value878 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %454, i32 0, i32 6
  %455 = load %struct.table_elt*, %struct.table_elt** %first_same_value878, align 8
  %cmp879 = icmp ne %struct.table_elt* %453, %455
  br i1 %cmp879, label %if.then.881, label %if.else.882

if.then.881:                                      ; preds = %land.lhs.true.876
  %456 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %457 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  call void @merge_equiv_classes(%struct.table_elt* %456, %struct.table_elt* %457)
  br label %if.end.889

if.else.882:                                      ; preds = %land.lhs.true.876, %land.lhs.true.874, %if.end.866
  %458 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %tobool883 = icmp ne %struct.table_elt* %458, null
  br i1 %tobool883, label %land.lhs.true.884, label %if.end.888

land.lhs.true.884:                                ; preds = %if.else.882
  %459 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cmp885 = icmp eq %struct.table_elt* %459, null
  br i1 %cmp885, label %if.then.887, label %if.end.888

if.then.887:                                      ; preds = %land.lhs.true.884
  %460 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  store %struct.table_elt* %460, %struct.table_elt** %elt, align 8
  br label %if.end.888

if.end.888:                                       ; preds = %if.then.887, %land.lhs.true.884, %if.else.882
  br label %if.end.889

if.end.889:                                       ; preds = %if.end.888, %if.then.881
  %461 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool890 = icmp ne %struct.rtx_def* %461, null
  br i1 %tobool890, label %land.lhs.true.891, label %if.end.958

land.lhs.true.891:                                ; preds = %if.end.889
  %462 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %463 = bitcast %struct.rtx_def* %462 to i32*
  %bf.load892 = load i32, i32* %463, align 8
  %bf.clear893 = and i32 %bf.load892, 65535
  %cmp894 = icmp eq i32 %bf.clear893, 58
  br i1 %cmp894, label %if.then.901, label %lor.lhs.false.896

lor.lhs.false.896:                                ; preds = %land.lhs.true.891
  %464 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %tobool897 = icmp ne %struct.table_elt* %464, null
  br i1 %tobool897, label %land.lhs.true.898, label %if.end.958

land.lhs.true.898:                                ; preds = %lor.lhs.false.896
  %465 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %465, i32 0, i32 7
  %466 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8
  %cmp899 = icmp ne %struct.table_elt* %466, null
  br i1 %cmp899, label %if.then.901, label %if.end.958

if.then.901:                                      ; preds = %land.lhs.true.898, %land.lhs.true.891
  %467 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %468 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8
  %call902 = call %struct.rtx_def* @use_related_value(%struct.rtx_def* %467, %struct.table_elt* %468)
  store %struct.rtx_def* %call902, %struct.rtx_def** %src_related, align 8
  %469 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool903 = icmp ne %struct.rtx_def* %469, null
  br i1 %tobool903, label %if.then.904, label %if.end.957

if.then.904:                                      ; preds = %if.then.901
  %470 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %471 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %472 = bitcast %struct.rtx_def* %471 to i32*
  %bf.load905 = load i32, i32* %472, align 8
  %bf.clear906 = and i32 %bf.load905, 65535
  %cmp907 = icmp eq i32 %bf.clear906, 61
  br i1 %cmp907, label %land.lhs.true.909, label %cond.false.933

land.lhs.true.909:                                ; preds = %if.then.904
  %473 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %fld910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1
  %arrayidx911 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld910, i32 0, i64 0
  %rtuint912 = bitcast %union.rtunion_def* %arrayidx911 to i32*
  %474 = load i32, i32* %rtuint912, align 4
  %cmp913 = icmp uge i32 %474, 53
  br i1 %cmp913, label %cond.true.915, label %cond.false.933

cond.true.915:                                    ; preds = %land.lhs.true.909
  %475 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %fld916 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %475, i32 0, i32 1
  %arrayidx917 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld916, i32 0, i64 0
  %rtuint918 = bitcast %union.rtunion_def* %arrayidx917 to i32*
  %476 = load i32, i32* %rtuint918, align 4
  %477 = load i32, i32* @cached_regno, align 4
  %cmp919 = icmp eq i32 %476, %477
  br i1 %cmp919, label %land.lhs.true.921, label %cond.false.924

land.lhs.true.921:                                ; preds = %cond.true.915
  %478 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool922 = icmp ne %struct.cse_reg_info* %478, null
  br i1 %tobool922, label %cond.true.923, label %cond.false.924

cond.true.923:                                    ; preds = %land.lhs.true.921
  %479 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.929

cond.false.924:                                   ; preds = %land.lhs.true.921, %cond.true.915
  %480 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %fld925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %480, i32 0, i32 1
  %arrayidx926 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld925, i32 0, i64 0
  %rtuint927 = bitcast %union.rtunion_def* %arrayidx926 to i32*
  %481 = load i32, i32* %rtuint927, align 4
  %call928 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %481)
  br label %cond.end.929

cond.end.929:                                     ; preds = %cond.false.924, %cond.true.923
  %cond930 = phi %struct.cse_reg_info* [ %479, %cond.true.923 ], [ %call928, %cond.false.924 ]
  %reg_qty931 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond930, i32 0, i32 3
  %482 = load i32, i32* %reg_qty931, align 4
  %add932 = add i32 7808, %482
  br label %cond.end.935

cond.false.933:                                   ; preds = %land.lhs.true.909, %if.then.904
  %483 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %484 = load i32, i32* %mode, align 4
  %call934 = call i32 @canon_hash(%struct.rtx_def* %483, i32 %484)
  br label %cond.end.935

cond.end.935:                                     ; preds = %cond.false.933, %cond.end.929
  %cond936 = phi i32 [ %add932, %cond.end.929 ], [ %call934, %cond.false.933 ]
  %and937 = and i32 %cond936, 31
  %485 = load i32, i32* %mode, align 4
  %call938 = call %struct.table_elt* @lookup(%struct.rtx_def* %470, i32 %and937, i32 %485)
  store %struct.table_elt* %call938, %struct.table_elt** %src_related_elt, align 8
  %486 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8
  %tobool939 = icmp ne %struct.table_elt* %486, null
  br i1 %tobool939, label %land.lhs.true.940, label %if.else.949

land.lhs.true.940:                                ; preds = %cond.end.935
  %487 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool941 = icmp ne %struct.table_elt* %487, null
  br i1 %tobool941, label %if.then.942, label %if.else.949

if.then.942:                                      ; preds = %land.lhs.true.940
  %488 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value943 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %488, i32 0, i32 6
  %489 = load %struct.table_elt*, %struct.table_elt** %first_same_value943, align 8
  %490 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8
  %first_same_value944 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %490, i32 0, i32 6
  %491 = load %struct.table_elt*, %struct.table_elt** %first_same_value944, align 8
  %cmp945 = icmp ne %struct.table_elt* %489, %491
  br i1 %cmp945, label %if.then.947, label %if.end.948

if.then.947:                                      ; preds = %if.then.942
  %492 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %493 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8
  call void @merge_equiv_classes(%struct.table_elt* %492, %struct.table_elt* %493)
  br label %if.end.948

if.end.948:                                       ; preds = %if.then.947, %if.then.942
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8
  store %struct.table_elt* null, %struct.table_elt** %src_related_elt, align 8
  br label %if.end.956

if.else.949:                                      ; preds = %land.lhs.true.940, %cond.end.935
  %494 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8
  %tobool950 = icmp ne %struct.table_elt* %494, null
  br i1 %tobool950, label %land.lhs.true.951, label %if.end.955

land.lhs.true.951:                                ; preds = %if.else.949
  %495 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cmp952 = icmp eq %struct.table_elt* %495, null
  br i1 %cmp952, label %if.then.954, label %if.end.955

if.then.954:                                      ; preds = %land.lhs.true.951
  %496 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8
  store %struct.table_elt* %496, %struct.table_elt** %elt, align 8
  br label %if.end.955

if.end.955:                                       ; preds = %if.then.954, %land.lhs.true.951, %if.else.949
  br label %if.end.956

if.end.956:                                       ; preds = %if.end.955, %if.end.948
  br label %if.end.957

if.end.957:                                       ; preds = %if.end.956, %if.then.901
  br label %if.end.958

if.end.958:                                       ; preds = %if.end.957, %land.lhs.true.898, %lor.lhs.false.896, %if.end.889
  %497 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool959 = icmp ne %struct.rtx_def* %497, null
  br i1 %tobool959, label %land.lhs.true.960, label %if.end.1057

land.lhs.true.960:                                ; preds = %if.end.958
  %498 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %cmp961 = icmp eq %struct.rtx_def* %498, null
  br i1 %cmp961, label %land.lhs.true.963, label %if.end.1057

land.lhs.true.963:                                ; preds = %land.lhs.true.960
  %499 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %500 = bitcast %struct.rtx_def* %499 to i32*
  %bf.load964 = load i32, i32* %500, align 8
  %bf.clear965 = and i32 %bf.load964, 65535
  %cmp966 = icmp eq i32 %bf.clear965, 54
  br i1 %cmp966, label %land.lhs.true.968, label %if.end.1057

land.lhs.true.968:                                ; preds = %land.lhs.true.963
  %501 = load i32, i32* %mode, align 4
  %idxprom969 = sext i32 %501 to i64
  %arrayidx970 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom969
  %502 = load i32, i32* %arrayidx970, align 4
  %cmp971 = icmp eq i32 %502, 1
  br i1 %cmp971, label %land.lhs.true.973, label %if.end.1057

land.lhs.true.973:                                ; preds = %land.lhs.true.968
  %503 = load i32, i32* %mode, align 4
  %idxprom974 = sext i32 %503 to i64
  %arrayidx975 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom974
  %504 = load i16, i16* %arrayidx975, align 2
  %conv976 = zext i16 %504 to i32
  %505 = load i32, i32* @target_flags, align 4
  %and977 = and i32 %505, 33554432
  %tobool978 = icmp ne i32 %and977, 0
  %cond979 = select i1 %tobool978, i32 64, i32 32
  %cmp980 = icmp slt i32 %conv976, %cond979
  br i1 %cmp980, label %if.then.982, label %if.end.1057

if.then.982:                                      ; preds = %land.lhs.true.973
  %506 = load i32, i32* %mode, align 4
  %idxprom983 = sext i32 %506 to i64
  %arrayidx984 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom983
  %507 = load i8, i8* %arrayidx984, align 1
  %conv985 = zext i8 %507 to i32
  store i32 %conv985, i32* %wider_mode, align 4
  br label %for.cond.986

for.cond.986:                                     ; preds = %for.inc.1052, %if.then.982
  %508 = load i32, i32* %wider_mode, align 4
  %idxprom987 = sext i32 %508 to i64
  %arrayidx988 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom987
  %509 = load i16, i16* %arrayidx988, align 2
  %conv989 = zext i16 %509 to i32
  %510 = load i32, i32* @target_flags, align 4
  %and990 = and i32 %510, 33554432
  %tobool991 = icmp ne i32 %and990, 0
  %cond992 = select i1 %tobool991, i32 64, i32 32
  %cmp993 = icmp sle i32 %conv989, %cond992
  br i1 %cmp993, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.986
  %511 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %cmp995 = icmp eq %struct.rtx_def* %511, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.986
  %512 = phi i1 [ false, %for.cond.986 ], [ %cmp995, %land.rhs ]
  br i1 %512, label %for.body.997, label %for.end.1056

for.body.997:                                     ; preds = %land.end
  %513 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %514 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %515 = bitcast %struct.rtx_def* %514 to i32*
  %bf.load998 = load i32, i32* %515, align 8
  %bf.clear999 = and i32 %bf.load998, 65535
  %cmp1000 = icmp eq i32 %bf.clear999, 61
  br i1 %cmp1000, label %land.lhs.true.1002, label %cond.false.1026

land.lhs.true.1002:                               ; preds = %for.body.997
  %516 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld1003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %516, i32 0, i32 1
  %arrayidx1004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1003, i32 0, i64 0
  %rtuint1005 = bitcast %union.rtunion_def* %arrayidx1004 to i32*
  %517 = load i32, i32* %rtuint1005, align 4
  %cmp1006 = icmp uge i32 %517, 53
  br i1 %cmp1006, label %cond.true.1008, label %cond.false.1026

cond.true.1008:                                   ; preds = %land.lhs.true.1002
  %518 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %518, i32 0, i32 1
  %arrayidx1010 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1009, i32 0, i64 0
  %rtuint1011 = bitcast %union.rtunion_def* %arrayidx1010 to i32*
  %519 = load i32, i32* %rtuint1011, align 4
  %520 = load i32, i32* @cached_regno, align 4
  %cmp1012 = icmp eq i32 %519, %520
  br i1 %cmp1012, label %land.lhs.true.1014, label %cond.false.1017

land.lhs.true.1014:                               ; preds = %cond.true.1008
  %521 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1015 = icmp ne %struct.cse_reg_info* %521, null
  br i1 %tobool1015, label %cond.true.1016, label %cond.false.1017

cond.true.1016:                                   ; preds = %land.lhs.true.1014
  %522 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1022

cond.false.1017:                                  ; preds = %land.lhs.true.1014, %cond.true.1008
  %523 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %523, i32 0, i32 1
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i32 0, i64 0
  %rtuint1020 = bitcast %union.rtunion_def* %arrayidx1019 to i32*
  %524 = load i32, i32* %rtuint1020, align 4
  %call1021 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %524)
  br label %cond.end.1022

cond.end.1022:                                    ; preds = %cond.false.1017, %cond.true.1016
  %cond1023 = phi %struct.cse_reg_info* [ %522, %cond.true.1016 ], [ %call1021, %cond.false.1017 ]
  %reg_qty1024 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1023, i32 0, i32 3
  %525 = load i32, i32* %reg_qty1024, align 4
  %add1025 = add i32 7808, %525
  br label %cond.end.1028

cond.false.1026:                                  ; preds = %land.lhs.true.1002, %for.body.997
  %526 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %527 = load i32, i32* %wider_mode, align 4
  %call1027 = call i32 @canon_hash(%struct.rtx_def* %526, i32 %527)
  br label %cond.end.1028

cond.end.1028:                                    ; preds = %cond.false.1026, %cond.end.1022
  %cond1029 = phi i32 [ %add1025, %cond.end.1022 ], [ %call1027, %cond.false.1026 ]
  %and1030 = and i32 %cond1029, 31
  %528 = load i32, i32* %wider_mode, align 4
  %call1031 = call %struct.table_elt* @lookup(%struct.rtx_def* %513, i32 %and1030, i32 %528)
  store %struct.table_elt* %call1031, %struct.table_elt** %const_elt, align 8
  %529 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %cmp1032 = icmp eq %struct.table_elt* %529, null
  br i1 %cmp1032, label %if.then.1034, label %if.end.1035

if.then.1034:                                     ; preds = %cond.end.1028
  br label %for.inc.1052

if.end.1035:                                      ; preds = %cond.end.1028
  %530 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %first_same_value1036 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %530, i32 0, i32 6
  %531 = load %struct.table_elt*, %struct.table_elt** %first_same_value1036, align 8
  store %struct.table_elt* %531, %struct.table_elt** %const_elt, align 8
  br label %for.cond.1037

for.cond.1037:                                    ; preds = %for.inc.1049, %if.end.1035
  %532 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %tobool1038 = icmp ne %struct.table_elt* %532, null
  br i1 %tobool1038, label %for.body.1039, label %for.end.1051

for.body.1039:                                    ; preds = %for.cond.1037
  %533 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %exp1040 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %533, i32 0, i32 0
  %534 = load %struct.rtx_def*, %struct.rtx_def** %exp1040, align 8
  %535 = bitcast %struct.rtx_def* %534 to i32*
  %bf.load1041 = load i32, i32* %535, align 8
  %bf.clear1042 = and i32 %bf.load1041, 65535
  %cmp1043 = icmp eq i32 %bf.clear1042, 61
  br i1 %cmp1043, label %if.then.1045, label %if.end.1048

if.then.1045:                                     ; preds = %for.body.1039
  %536 = load i32, i32* %mode, align 4
  %537 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %exp1046 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %537, i32 0, i32 0
  %538 = load %struct.rtx_def*, %struct.rtx_def** %exp1046, align 8
  %call1047 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %536, %struct.rtx_def* %538)
  store %struct.rtx_def* %call1047, %struct.rtx_def** %src_related, align 8
  br label %for.end.1051

if.end.1048:                                      ; preds = %for.body.1039
  br label %for.inc.1049

for.inc.1049:                                     ; preds = %if.end.1048
  %539 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8
  %next_same_value1050 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %539, i32 0, i32 4
  %540 = load %struct.table_elt*, %struct.table_elt** %next_same_value1050, align 8
  store %struct.table_elt* %540, %struct.table_elt** %const_elt, align 8
  br label %for.cond.1037

for.end.1051:                                     ; preds = %if.then.1045, %for.cond.1037
  br label %for.inc.1052

for.inc.1052:                                     ; preds = %for.end.1051, %if.then.1034
  %541 = load i32, i32* %wider_mode, align 4
  %idxprom1053 = sext i32 %541 to i64
  %arrayidx1054 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom1053
  %542 = load i8, i8* %arrayidx1054, align 1
  %conv1055 = zext i8 %542 to i32
  store i32 %conv1055, i32* %wider_mode, align 4
  br label %for.cond.986

for.end.1056:                                     ; preds = %land.end
  br label %if.end.1057

if.end.1057:                                      ; preds = %for.end.1056, %land.lhs.true.973, %land.lhs.true.968, %land.lhs.true.963, %land.lhs.true.960, %if.end.958
  %543 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool1058 = icmp ne i32 %543, 0
  br i1 %tobool1058, label %land.lhs.true.1059, label %if.end.1175

land.lhs.true.1059:                               ; preds = %if.end.1057
  %544 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool1060 = icmp ne %struct.rtx_def* %544, null
  br i1 %tobool1060, label %if.end.1175, label %land.lhs.true.1061

land.lhs.true.1061:                               ; preds = %land.lhs.true.1059
  %545 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %546 = bitcast %struct.rtx_def* %545 to i32*
  %bf.load1062 = load i32, i32* %546, align 8
  %bf.clear1063 = and i32 %bf.load1062, 65535
  %cmp1064 = icmp eq i32 %bf.clear1063, 83
  br i1 %cmp1064, label %land.lhs.true.1066, label %if.end.1175

land.lhs.true.1066:                               ; preds = %land.lhs.true.1061
  %547 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1067 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %547, i32 0, i32 1
  %arrayidx1068 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1067, i32 0, i64 1
  %rtx1069 = bitcast %union.rtunion_def* %arrayidx1068 to %struct.rtx_def**
  %548 = load %struct.rtx_def*, %struct.rtx_def** %rtx1069, align 8
  %549 = bitcast %struct.rtx_def* %548 to i32*
  %bf.load1070 = load i32, i32* %549, align 8
  %bf.clear1071 = and i32 %bf.load1070, 65535
  %cmp1072 = icmp eq i32 %bf.clear1071, 54
  br i1 %cmp1072, label %land.lhs.true.1074, label %if.end.1175

land.lhs.true.1074:                               ; preds = %land.lhs.true.1066
  %550 = load i32, i32* %mode, align 4
  %idxprom1075 = sext i32 %550 to i64
  %arrayidx1076 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1075
  %551 = load i8, i8* %arrayidx1076, align 1
  %conv1077 = zext i8 %551 to i32
  %552 = load i32, i32* @target_flags, align 4
  %and1078 = and i32 %552, 33554432
  %tobool1079 = icmp ne i32 %and1078, 0
  %cond1080 = select i1 %tobool1079, i32 8, i32 4
  %cmp1081 = icmp slt i32 %conv1077, %cond1080
  br i1 %cmp1081, label %if.then.1083, label %if.end.1175

if.then.1083:                                     ; preds = %land.lhs.true.1074
  %553 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1084 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %553, i32 0, i32 1
  %arrayidx1085 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1084, i32 0, i64 1
  %rtx1086 = bitcast %union.rtunion_def* %arrayidx1085 to %struct.rtx_def**
  %554 = load %struct.rtx_def*, %struct.rtx_def** %rtx1086, align 8
  %call1087 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 0, %struct.rtx_def* null, %struct.rtx_def* %554)
  store %struct.rtx_def* %call1087, %struct.rtx_def** %new_and, align 8
  %555 = load i32, i32* %mode, align 4
  %idxprom1088 = sext i32 %555 to i64
  %arrayidx1089 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom1088
  %556 = load i8, i8* %arrayidx1089, align 1
  %conv1090 = zext i8 %556 to i32
  store i32 %conv1090, i32* %tmode, align 4
  br label %for.cond.1091

for.cond.1091:                                    ; preds = %for.inc.1170, %if.then.1083
  %557 = load i32, i32* %tmode, align 4
  %idxprom1092 = sext i32 %557 to i64
  %arrayidx1093 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1092
  %558 = load i8, i8* %arrayidx1093, align 1
  %conv1094 = zext i8 %558 to i32
  %559 = load i32, i32* @target_flags, align 4
  %and1095 = and i32 %559, 33554432
  %tobool1096 = icmp ne i32 %and1095, 0
  %cond1097 = select i1 %tobool1096, i32 8, i32 4
  %cmp1098 = icmp sle i32 %conv1094, %cond1097
  br i1 %cmp1098, label %for.body.1100, label %for.end.1174

for.body.1100:                                    ; preds = %for.cond.1091
  %560 = load i32, i32* %tmode, align 4
  %561 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %561, i32 0, i32 1
  %arrayidx1102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1101, i32 0, i64 0
  %rtx1103 = bitcast %union.rtunion_def* %arrayidx1102 to %struct.rtx_def**
  %562 = load %struct.rtx_def*, %struct.rtx_def** %rtx1103, align 8
  %call1104 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %560, %struct.rtx_def* %562)
  store %struct.rtx_def* %call1104, %struct.rtx_def** %inner, align 8
  %563 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %tobool1105 = icmp ne %struct.rtx_def* %563, null
  br i1 %tobool1105, label %if.then.1106, label %if.end.1169

if.then.1106:                                     ; preds = %for.body.1100
  %564 = load i32, i32* %tmode, align 4
  %565 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %566 = bitcast %struct.rtx_def* %565 to i32*
  %bf.load1107 = load i32, i32* %566, align 8
  %bf.value = and i32 %564, 255
  %bf.shl = shl i32 %bf.value, 16
  %bf.clear1108 = and i32 %bf.load1107, -16711681
  %bf.set = or i32 %bf.clear1108, %bf.shl
  store i32 %bf.set, i32* %566, align 8
  %567 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8
  %568 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %fld1109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %568, i32 0, i32 1
  %arrayidx1110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1109, i32 0, i64 0
  %rtx1111 = bitcast %union.rtunion_def* %arrayidx1110 to %struct.rtx_def**
  store %struct.rtx_def* %567, %struct.rtx_def** %rtx1111, align 8
  %569 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %570 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %571 = bitcast %struct.rtx_def* %570 to i32*
  %bf.load1112 = load i32, i32* %571, align 8
  %bf.clear1113 = and i32 %bf.load1112, 65535
  %cmp1114 = icmp eq i32 %bf.clear1113, 61
  br i1 %cmp1114, label %land.lhs.true.1116, label %cond.false.1140

land.lhs.true.1116:                               ; preds = %if.then.1106
  %572 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %fld1117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %572, i32 0, i32 1
  %arrayidx1118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1117, i32 0, i64 0
  %rtuint1119 = bitcast %union.rtunion_def* %arrayidx1118 to i32*
  %573 = load i32, i32* %rtuint1119, align 4
  %cmp1120 = icmp uge i32 %573, 53
  br i1 %cmp1120, label %cond.true.1122, label %cond.false.1140

cond.true.1122:                                   ; preds = %land.lhs.true.1116
  %574 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %fld1123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %574, i32 0, i32 1
  %arrayidx1124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1123, i32 0, i64 0
  %rtuint1125 = bitcast %union.rtunion_def* %arrayidx1124 to i32*
  %575 = load i32, i32* %rtuint1125, align 4
  %576 = load i32, i32* @cached_regno, align 4
  %cmp1126 = icmp eq i32 %575, %576
  br i1 %cmp1126, label %land.lhs.true.1128, label %cond.false.1131

land.lhs.true.1128:                               ; preds = %cond.true.1122
  %577 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1129 = icmp ne %struct.cse_reg_info* %577, null
  br i1 %tobool1129, label %cond.true.1130, label %cond.false.1131

cond.true.1130:                                   ; preds = %land.lhs.true.1128
  %578 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1136

cond.false.1131:                                  ; preds = %land.lhs.true.1128, %cond.true.1122
  %579 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %fld1132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %579, i32 0, i32 1
  %arrayidx1133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1132, i32 0, i64 0
  %rtuint1134 = bitcast %union.rtunion_def* %arrayidx1133 to i32*
  %580 = load i32, i32* %rtuint1134, align 4
  %call1135 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %580)
  br label %cond.end.1136

cond.end.1136:                                    ; preds = %cond.false.1131, %cond.true.1130
  %cond1137 = phi %struct.cse_reg_info* [ %578, %cond.true.1130 ], [ %call1135, %cond.false.1131 ]
  %reg_qty1138 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1137, i32 0, i32 3
  %581 = load i32, i32* %reg_qty1138, align 4
  %add1139 = add i32 7808, %581
  br label %cond.end.1142

cond.false.1140:                                  ; preds = %land.lhs.true.1116, %if.then.1106
  %582 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8
  %583 = load i32, i32* %tmode, align 4
  %call1141 = call i32 @canon_hash(%struct.rtx_def* %582, i32 %583)
  br label %cond.end.1142

cond.end.1142:                                    ; preds = %cond.false.1140, %cond.end.1136
  %cond1143 = phi i32 [ %add1139, %cond.end.1136 ], [ %call1141, %cond.false.1140 ]
  %and1144 = and i32 %cond1143, 31
  %584 = load i32, i32* %tmode, align 4
  %call1145 = call %struct.table_elt* @lookup(%struct.rtx_def* %569, i32 %and1144, i32 %584)
  store %struct.table_elt* %call1145, %struct.table_elt** %larger_elt, align 8
  %585 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %cmp1146 = icmp eq %struct.table_elt* %585, null
  br i1 %cmp1146, label %if.then.1148, label %if.end.1149

if.then.1148:                                     ; preds = %cond.end.1142
  br label %for.inc.1170

if.end.1149:                                      ; preds = %cond.end.1142
  %586 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %first_same_value1150 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %586, i32 0, i32 6
  %587 = load %struct.table_elt*, %struct.table_elt** %first_same_value1150, align 8
  store %struct.table_elt* %587, %struct.table_elt** %larger_elt, align 8
  br label %for.cond.1151

for.cond.1151:                                    ; preds = %for.inc.1163, %if.end.1149
  %588 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %tobool1152 = icmp ne %struct.table_elt* %588, null
  br i1 %tobool1152, label %for.body.1153, label %for.end.1165

for.body.1153:                                    ; preds = %for.cond.1151
  %589 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %exp1154 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %589, i32 0, i32 0
  %590 = load %struct.rtx_def*, %struct.rtx_def** %exp1154, align 8
  %591 = bitcast %struct.rtx_def* %590 to i32*
  %bf.load1155 = load i32, i32* %591, align 8
  %bf.clear1156 = and i32 %bf.load1155, 65535
  %cmp1157 = icmp eq i32 %bf.clear1156, 61
  br i1 %cmp1157, label %if.then.1159, label %if.end.1162

if.then.1159:                                     ; preds = %for.body.1153
  %592 = load i32, i32* %mode, align 4
  %593 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %exp1160 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %593, i32 0, i32 0
  %594 = load %struct.rtx_def*, %struct.rtx_def** %exp1160, align 8
  %call1161 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %592, %struct.rtx_def* %594)
  store %struct.rtx_def* %call1161, %struct.rtx_def** %src_related, align 8
  br label %for.end.1165

if.end.1162:                                      ; preds = %for.body.1153
  br label %for.inc.1163

for.inc.1163:                                     ; preds = %if.end.1162
  %595 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8
  %next_same_value1164 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %595, i32 0, i32 4
  %596 = load %struct.table_elt*, %struct.table_elt** %next_same_value1164, align 8
  store %struct.table_elt* %596, %struct.table_elt** %larger_elt, align 8
  br label %for.cond.1151

for.end.1165:                                     ; preds = %if.then.1159, %for.cond.1151
  %597 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool1166 = icmp ne %struct.rtx_def* %597, null
  br i1 %tobool1166, label %if.then.1167, label %if.end.1168

if.then.1167:                                     ; preds = %for.end.1165
  br label %for.end.1174

if.end.1168:                                      ; preds = %for.end.1165
  br label %if.end.1169

if.end.1169:                                      ; preds = %if.end.1168, %for.body.1100
  br label %for.inc.1170

for.inc.1170:                                     ; preds = %if.end.1169, %if.then.1148
  %598 = load i32, i32* %tmode, align 4
  %idxprom1171 = sext i32 %598 to i64
  %arrayidx1172 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_wider_mode, i32 0, i64 %idxprom1171
  %599 = load i8, i8* %arrayidx1172, align 1
  %conv1173 = zext i8 %599 to i32
  store i32 %conv1173, i32* %tmode, align 4
  br label %for.cond.1091

for.end.1174:                                     ; preds = %if.then.1167, %for.cond.1091
  br label %if.end.1175

if.end.1175:                                      ; preds = %for.end.1174, %land.lhs.true.1074, %land.lhs.true.1066, %land.lhs.true.1061, %land.lhs.true.1059, %if.end.1057
  %600 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %601 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %cmp1176 = icmp eq %struct.rtx_def* %600, %601
  br i1 %cmp1176, label %if.then.1178, label %if.end.1179

if.then.1178:                                     ; preds = %if.end.1175
  store %struct.rtx_def* null, %struct.rtx_def** %src_folded, align 8
  br label %if.end.1179

if.end.1179:                                      ; preds = %if.then.1178, %if.end.1175
  %602 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool1180 = icmp ne %struct.table_elt* %602, null
  br i1 %tobool1180, label %if.then.1181, label %if.end.1183

if.then.1181:                                     ; preds = %if.end.1179
  %603 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value1182 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %603, i32 0, i32 6
  %604 = load %struct.table_elt*, %struct.table_elt** %first_same_value1182, align 8
  store %struct.table_elt* %604, %struct.table_elt** %elt, align 8
  br label %if.end.1183

if.end.1183:                                      ; preds = %if.then.1181, %if.end.1179
  %605 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  store %struct.table_elt* %605, %struct.table_elt** %p, align 8
  br label %for.cond.1184

for.cond.1184:                                    ; preds = %for.inc.1324, %if.end.1183
  %606 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool1185 = icmp ne %struct.table_elt* %606, null
  br i1 %tobool1185, label %for.body.1186, label %for.end.1326

for.body.1186:                                    ; preds = %for.cond.1184
  %607 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1187 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %607, i32 0, i32 0
  %608 = load %struct.rtx_def*, %struct.rtx_def** %exp1187, align 8
  %609 = bitcast %struct.rtx_def* %608 to i32*
  %bf.load1188 = load i32, i32* %609, align 8
  %bf.clear1189 = and i32 %bf.load1188, 65535
  store i32 %bf.clear1189, i32* %code, align 4
  %610 = load i32, i32* %code, align 4
  %cmp1190 = icmp ne i32 %610, 61
  br i1 %cmp1190, label %land.lhs.true.1192, label %if.end.1198

land.lhs.true.1192:                               ; preds = %for.body.1186
  %611 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1193 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %611, i32 0, i32 0
  %612 = load %struct.rtx_def*, %struct.rtx_def** %exp1193, align 8
  %613 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1194 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %613, i32 0, i32 0
  %614 = load %struct.rtx_def*, %struct.rtx_def** %exp1194, align 8
  %call1195 = call i32 @exp_equiv_p(%struct.rtx_def* %612, %struct.rtx_def* %614, i32 1, i32 0)
  %tobool1196 = icmp ne i32 %call1195, 0
  br i1 %tobool1196, label %if.end.1198, label %if.then.1197

if.then.1197:                                     ; preds = %land.lhs.true.1192
  br label %for.inc.1324

if.end.1198:                                      ; preds = %land.lhs.true.1192, %for.body.1186
  %615 = load i32, i32* %code, align 4
  %cmp1199 = icmp eq i32 %615, 63
  br i1 %cmp1199, label %land.lhs.true.1201, label %if.end.1262

land.lhs.true.1201:                               ; preds = %if.end.1198
  %616 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1202 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %616, i32 0, i32 0
  %617 = load %struct.rtx_def*, %struct.rtx_def** %exp1202, align 8
  %618 = bitcast %struct.rtx_def* %617 to i32*
  %bf.load1203 = load i32, i32* %618, align 8
  %bf.lshr1204 = lshr i32 %bf.load1203, 16
  %bf.clear1205 = and i32 %bf.lshr1204, 255
  %idxprom1206 = sext i32 %bf.clear1205 to i64
  %arrayidx1207 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1206
  %619 = load i8, i8* %arrayidx1207, align 1
  %conv1208 = zext i8 %619 to i32
  %620 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1209 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %620, i32 0, i32 0
  %621 = load %struct.rtx_def*, %struct.rtx_def** %exp1209, align 8
  %fld1210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %621, i32 0, i32 1
  %arrayidx1211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1210, i32 0, i64 0
  %rtx1212 = bitcast %union.rtunion_def* %arrayidx1211 to %struct.rtx_def**
  %622 = load %struct.rtx_def*, %struct.rtx_def** %rtx1212, align 8
  %623 = bitcast %struct.rtx_def* %622 to i32*
  %bf.load1213 = load i32, i32* %623, align 8
  %bf.lshr1214 = lshr i32 %bf.load1213, 16
  %bf.clear1215 = and i32 %bf.lshr1214, 255
  %idxprom1216 = sext i32 %bf.clear1215 to i64
  %arrayidx1217 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1216
  %624 = load i8, i8* %arrayidx1217, align 1
  %conv1218 = zext i8 %624 to i32
  %cmp1219 = icmp sgt i32 %conv1208, %conv1218
  br i1 %cmp1219, label %land.lhs.true.1221, label %if.end.1262

land.lhs.true.1221:                               ; preds = %land.lhs.true.1201
  %625 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %cmp1222 = icmp ne %struct.rtx_def* %625, null
  br i1 %cmp1222, label %land.lhs.true.1224, label %if.then.1261

land.lhs.true.1224:                               ; preds = %land.lhs.true.1221
  %626 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %627 = bitcast %struct.rtx_def* %626 to i32*
  %bf.load1225 = load i32, i32* %627, align 8
  %bf.clear1226 = and i32 %bf.load1225, 65535
  %cmp1227 = icmp eq i32 %bf.clear1226, 63
  br i1 %cmp1227, label %land.lhs.true.1229, label %if.then.1261

land.lhs.true.1229:                               ; preds = %land.lhs.true.1224
  %628 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %629 = bitcast %struct.rtx_def* %628 to i32*
  %bf.load1230 = load i32, i32* %629, align 8
  %bf.lshr1231 = lshr i32 %bf.load1230, 16
  %bf.clear1232 = and i32 %bf.lshr1231, 255
  %630 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1233 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %630, i32 0, i32 0
  %631 = load %struct.rtx_def*, %struct.rtx_def** %exp1233, align 8
  %632 = bitcast %struct.rtx_def* %631 to i32*
  %bf.load1234 = load i32, i32* %632, align 8
  %bf.lshr1235 = lshr i32 %bf.load1234, 16
  %bf.clear1236 = and i32 %bf.lshr1235, 255
  %cmp1237 = icmp eq i32 %bf.clear1232, %bf.clear1236
  br i1 %cmp1237, label %land.lhs.true.1239, label %if.then.1261

land.lhs.true.1239:                               ; preds = %land.lhs.true.1229
  %633 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %633, i32 0, i32 1
  %arrayidx1241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1240, i32 0, i64 0
  %rtx1242 = bitcast %union.rtunion_def* %arrayidx1241 to %struct.rtx_def**
  %634 = load %struct.rtx_def*, %struct.rtx_def** %rtx1242, align 8
  %635 = bitcast %struct.rtx_def* %634 to i32*
  %bf.load1243 = load i32, i32* %635, align 8
  %bf.lshr1244 = lshr i32 %bf.load1243, 16
  %bf.clear1245 = and i32 %bf.lshr1244, 255
  %idxprom1246 = sext i32 %bf.clear1245 to i64
  %arrayidx1247 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1246
  %636 = load i8, i8* %arrayidx1247, align 1
  %conv1248 = zext i8 %636 to i32
  %637 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1249 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %637, i32 0, i32 0
  %638 = load %struct.rtx_def*, %struct.rtx_def** %exp1249, align 8
  %fld1250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %638, i32 0, i32 1
  %arrayidx1251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1250, i32 0, i64 0
  %rtx1252 = bitcast %union.rtunion_def* %arrayidx1251 to %struct.rtx_def**
  %639 = load %struct.rtx_def*, %struct.rtx_def** %rtx1252, align 8
  %640 = bitcast %struct.rtx_def* %639 to i32*
  %bf.load1253 = load i32, i32* %640, align 8
  %bf.lshr1254 = lshr i32 %bf.load1253, 16
  %bf.clear1255 = and i32 %bf.lshr1254, 255
  %idxprom1256 = sext i32 %bf.clear1255 to i64
  %arrayidx1257 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1256
  %641 = load i8, i8* %arrayidx1257, align 1
  %conv1258 = zext i8 %641 to i32
  %cmp1259 = icmp slt i32 %conv1248, %conv1258
  br i1 %cmp1259, label %if.end.1262, label %if.then.1261

if.then.1261:                                     ; preds = %land.lhs.true.1239, %land.lhs.true.1229, %land.lhs.true.1224, %land.lhs.true.1221
  br label %for.inc.1324

if.end.1262:                                      ; preds = %land.lhs.true.1239, %land.lhs.true.1201, %if.end.1198
  %642 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %tobool1263 = icmp ne %struct.rtx_def* %642, null
  br i1 %tobool1263, label %land.lhs.true.1264, label %if.else.1274

land.lhs.true.1264:                               ; preds = %if.end.1262
  %643 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %644 = bitcast %struct.rtx_def* %643 to i32*
  %bf.load1265 = load i32, i32* %644, align 8
  %bf.clear1266 = and i32 %bf.load1265, 65535
  %645 = load i32, i32* %code, align 4
  %cmp1267 = icmp eq i32 %bf.clear1266, %645
  br i1 %cmp1267, label %land.lhs.true.1269, label %if.else.1274

land.lhs.true.1269:                               ; preds = %land.lhs.true.1264
  %646 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %647 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1270 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %647, i32 0, i32 0
  %648 = load %struct.rtx_def*, %struct.rtx_def** %exp1270, align 8
  %call1271 = call i32 @rtx_equal_p(%struct.rtx_def* %646, %struct.rtx_def* %648)
  %tobool1272 = icmp ne i32 %call1271, 0
  br i1 %tobool1272, label %if.then.1273, label %if.else.1274

if.then.1273:                                     ; preds = %land.lhs.true.1269
  store %struct.rtx_def* null, %struct.rtx_def** %src474, align 8
  br label %if.end.1313

if.else.1274:                                     ; preds = %land.lhs.true.1269, %land.lhs.true.1264, %if.end.1262
  %649 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %tobool1275 = icmp ne %struct.rtx_def* %649, null
  br i1 %tobool1275, label %land.lhs.true.1276, label %if.else.1286

land.lhs.true.1276:                               ; preds = %if.else.1274
  %650 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %651 = bitcast %struct.rtx_def* %650 to i32*
  %bf.load1277 = load i32, i32* %651, align 8
  %bf.clear1278 = and i32 %bf.load1277, 65535
  %652 = load i32, i32* %code, align 4
  %cmp1279 = icmp eq i32 %bf.clear1278, %652
  br i1 %cmp1279, label %land.lhs.true.1281, label %if.else.1286

land.lhs.true.1281:                               ; preds = %land.lhs.true.1276
  %653 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %654 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1282 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %654, i32 0, i32 0
  %655 = load %struct.rtx_def*, %struct.rtx_def** %exp1282, align 8
  %call1283 = call i32 @rtx_equal_p(%struct.rtx_def* %653, %struct.rtx_def* %655)
  %tobool1284 = icmp ne i32 %call1283, 0
  br i1 %tobool1284, label %if.then.1285, label %if.else.1286

if.then.1285:                                     ; preds = %land.lhs.true.1281
  store %struct.rtx_def* null, %struct.rtx_def** %src_folded, align 8
  br label %if.end.1312

if.else.1286:                                     ; preds = %land.lhs.true.1281, %land.lhs.true.1276, %if.else.1274
  %656 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %tobool1287 = icmp ne %struct.rtx_def* %656, null
  br i1 %tobool1287, label %land.lhs.true.1288, label %if.else.1298

land.lhs.true.1288:                               ; preds = %if.else.1286
  %657 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %658 = bitcast %struct.rtx_def* %657 to i32*
  %bf.load1289 = load i32, i32* %658, align 8
  %bf.clear1290 = and i32 %bf.load1289, 65535
  %659 = load i32, i32* %code, align 4
  %cmp1291 = icmp eq i32 %bf.clear1290, %659
  br i1 %cmp1291, label %land.lhs.true.1293, label %if.else.1298

land.lhs.true.1293:                               ; preds = %land.lhs.true.1288
  %660 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %661 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1294 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %661, i32 0, i32 0
  %662 = load %struct.rtx_def*, %struct.rtx_def** %exp1294, align 8
  %call1295 = call i32 @rtx_equal_p(%struct.rtx_def* %660, %struct.rtx_def* %662)
  %tobool1296 = icmp ne i32 %call1295, 0
  br i1 %tobool1296, label %if.then.1297, label %if.else.1298

if.then.1297:                                     ; preds = %land.lhs.true.1293
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8
  br label %if.end.1311

if.else.1298:                                     ; preds = %land.lhs.true.1293, %land.lhs.true.1288, %if.else.1286
  %663 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool1299 = icmp ne %struct.rtx_def* %663, null
  br i1 %tobool1299, label %land.lhs.true.1300, label %if.end.1310

land.lhs.true.1300:                               ; preds = %if.else.1298
  %664 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %665 = bitcast %struct.rtx_def* %664 to i32*
  %bf.load1301 = load i32, i32* %665, align 8
  %bf.clear1302 = and i32 %bf.load1301, 65535
  %666 = load i32, i32* %code, align 4
  %cmp1303 = icmp eq i32 %bf.clear1302, %666
  br i1 %cmp1303, label %land.lhs.true.1305, label %if.end.1310

land.lhs.true.1305:                               ; preds = %land.lhs.true.1300
  %667 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %668 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1306 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %668, i32 0, i32 0
  %669 = load %struct.rtx_def*, %struct.rtx_def** %exp1306, align 8
  %call1307 = call i32 @rtx_equal_p(%struct.rtx_def* %667, %struct.rtx_def* %669)
  %tobool1308 = icmp ne i32 %call1307, 0
  br i1 %tobool1308, label %if.then.1309, label %if.end.1310

if.then.1309:                                     ; preds = %land.lhs.true.1305
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8
  br label %if.end.1310

if.end.1310:                                      ; preds = %if.then.1309, %land.lhs.true.1305, %land.lhs.true.1300, %if.else.1298
  br label %if.end.1311

if.end.1311:                                      ; preds = %if.end.1310, %if.then.1297
  br label %if.end.1312

if.end.1312:                                      ; preds = %if.end.1311, %if.then.1285
  br label %if.end.1313

if.end.1313:                                      ; preds = %if.end.1312, %if.then.1273
  %670 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %671 = bitcast %struct.rtx_def* %670 to i32*
  %bf.load1314 = load i32, i32* %671, align 8
  %bf.clear1315 = and i32 %bf.load1314, 65535
  %672 = load i32, i32* %code, align 4
  %cmp1316 = icmp eq i32 %bf.clear1315, %672
  br i1 %cmp1316, label %land.lhs.true.1318, label %if.end.1323

land.lhs.true.1318:                               ; preds = %if.end.1313
  %673 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp1319 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %673, i32 0, i32 0
  %674 = load %struct.rtx_def*, %struct.rtx_def** %exp1319, align 8
  %675 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call1320 = call i32 @rtx_equal_p(%struct.rtx_def* %674, %struct.rtx_def* %675)
  %tobool1321 = icmp ne i32 %call1320, 0
  br i1 %tobool1321, label %if.then.1322, label %if.end.1323

if.then.1322:                                     ; preds = %land.lhs.true.1318
  %676 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  store %struct.rtx_def* %676, %struct.rtx_def** %src_related, align 8
  br label %if.end.1323

if.end.1323:                                      ; preds = %if.then.1322, %land.lhs.true.1318, %if.end.1313
  br label %for.inc.1324

for.inc.1324:                                     ; preds = %if.end.1323, %if.then.1261, %if.then.1197
  %677 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value1325 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %677, i32 0, i32 4
  %678 = load %struct.table_elt*, %struct.table_elt** %next_same_value1325, align 8
  store %struct.table_elt* %678, %struct.table_elt** %p, align 8
  br label %for.cond.1184

for.end.1326:                                     ; preds = %for.cond.1184
  %679 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %tobool1327 = icmp ne %struct.rtx_def* %679, null
  br i1 %tobool1327, label %if.then.1328, label %if.end.1344

if.then.1328:                                     ; preds = %for.end.1326
  %680 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %681 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call1329 = call i32 @rtx_equal_p(%struct.rtx_def* %680, %struct.rtx_def* %681)
  %tobool1330 = icmp ne i32 %call1329, 0
  br i1 %tobool1330, label %if.then.1331, label %if.else.1332

if.then.1331:                                     ; preds = %if.then.1328
  store i32 -1, i32* %src_regcost, align 4
  store i32 -1, i32* %src_cost, align 4
  br label %if.end.1343

if.else.1332:                                     ; preds = %if.then.1328
  %682 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %683 = bitcast %struct.rtx_def* %682 to i32*
  %bf.load1333 = load i32, i32* %683, align 8
  %bf.clear1334 = and i32 %bf.load1333, 65535
  %cmp1335 = icmp eq i32 %bf.clear1334, 61
  br i1 %cmp1335, label %cond.true.1337, label %cond.false.1338

cond.true.1337:                                   ; preds = %if.else.1332
  br label %cond.end.1340

cond.false.1338:                                  ; preds = %if.else.1332
  %684 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %call1339 = call i32 @notreg_cost(%struct.rtx_def* %684, i32 47)
  br label %cond.end.1340

cond.end.1340:                                    ; preds = %cond.false.1338, %cond.true.1337
  %cond1341 = phi i32 [ 0, %cond.true.1337 ], [ %call1339, %cond.false.1338 ]
  store i32 %cond1341, i32* %src_cost, align 4
  %685 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %call1342 = call i32 @approx_reg_cost(%struct.rtx_def* %685)
  store i32 %call1342, i32* %src_regcost, align 4
  br label %if.end.1343

if.end.1343:                                      ; preds = %cond.end.1340, %if.then.1331
  br label %if.end.1344

if.end.1344:                                      ; preds = %if.end.1343, %for.end.1326
  %686 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %tobool1345 = icmp ne %struct.rtx_def* %686, null
  br i1 %tobool1345, label %if.then.1346, label %if.end.1362

if.then.1346:                                     ; preds = %if.end.1344
  %687 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %688 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call1347 = call i32 @rtx_equal_p(%struct.rtx_def* %687, %struct.rtx_def* %688)
  %tobool1348 = icmp ne i32 %call1347, 0
  br i1 %tobool1348, label %if.then.1349, label %if.else.1350

if.then.1349:                                     ; preds = %if.then.1346
  store i32 -1, i32* %src_eqv_regcost, align 4
  store i32 -1, i32* %src_eqv_cost, align 4
  br label %if.end.1361

if.else.1350:                                     ; preds = %if.then.1346
  %689 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %690 = bitcast %struct.rtx_def* %689 to i32*
  %bf.load1351 = load i32, i32* %690, align 8
  %bf.clear1352 = and i32 %bf.load1351, 65535
  %cmp1353 = icmp eq i32 %bf.clear1352, 61
  br i1 %cmp1353, label %cond.true.1355, label %cond.false.1356

cond.true.1355:                                   ; preds = %if.else.1350
  br label %cond.end.1358

cond.false.1356:                                  ; preds = %if.else.1350
  %691 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %call1357 = call i32 @notreg_cost(%struct.rtx_def* %691, i32 47)
  br label %cond.end.1358

cond.end.1358:                                    ; preds = %cond.false.1356, %cond.true.1355
  %cond1359 = phi i32 [ 0, %cond.true.1355 ], [ %call1357, %cond.false.1356 ]
  store i32 %cond1359, i32* %src_eqv_cost, align 4
  %692 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %call1360 = call i32 @approx_reg_cost(%struct.rtx_def* %692)
  store i32 %call1360, i32* %src_eqv_regcost, align 4
  br label %if.end.1361

if.end.1361:                                      ; preds = %cond.end.1358, %if.then.1349
  br label %if.end.1362

if.end.1362:                                      ; preds = %if.end.1361, %if.end.1344
  %693 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %tobool1363 = icmp ne %struct.rtx_def* %693, null
  br i1 %tobool1363, label %if.then.1364, label %if.end.1380

if.then.1364:                                     ; preds = %if.end.1362
  %694 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %695 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call1365 = call i32 @rtx_equal_p(%struct.rtx_def* %694, %struct.rtx_def* %695)
  %tobool1366 = icmp ne i32 %call1365, 0
  br i1 %tobool1366, label %if.then.1367, label %if.else.1368

if.then.1367:                                     ; preds = %if.then.1364
  store i32 -1, i32* %src_folded_regcost, align 4
  store i32 -1, i32* %src_folded_cost, align 4
  br label %if.end.1379

if.else.1368:                                     ; preds = %if.then.1364
  %696 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %697 = bitcast %struct.rtx_def* %696 to i32*
  %bf.load1369 = load i32, i32* %697, align 8
  %bf.clear1370 = and i32 %bf.load1369, 65535
  %cmp1371 = icmp eq i32 %bf.clear1370, 61
  br i1 %cmp1371, label %cond.true.1373, label %cond.false.1374

cond.true.1373:                                   ; preds = %if.else.1368
  br label %cond.end.1376

cond.false.1374:                                  ; preds = %if.else.1368
  %698 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %call1375 = call i32 @notreg_cost(%struct.rtx_def* %698, i32 47)
  br label %cond.end.1376

cond.end.1376:                                    ; preds = %cond.false.1374, %cond.true.1373
  %cond1377 = phi i32 [ 0, %cond.true.1373 ], [ %call1375, %cond.false.1374 ]
  store i32 %cond1377, i32* %src_folded_cost, align 4
  %699 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %call1378 = call i32 @approx_reg_cost(%struct.rtx_def* %699)
  store i32 %call1378, i32* %src_folded_regcost, align 4
  br label %if.end.1379

if.end.1379:                                      ; preds = %cond.end.1376, %if.then.1367
  br label %if.end.1380

if.end.1380:                                      ; preds = %if.end.1379, %if.end.1362
  %700 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool1381 = icmp ne %struct.rtx_def* %700, null
  br i1 %tobool1381, label %if.then.1382, label %if.end.1398

if.then.1382:                                     ; preds = %if.end.1380
  %701 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %702 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call1383 = call i32 @rtx_equal_p(%struct.rtx_def* %701, %struct.rtx_def* %702)
  %tobool1384 = icmp ne i32 %call1383, 0
  br i1 %tobool1384, label %if.then.1385, label %if.else.1386

if.then.1385:                                     ; preds = %if.then.1382
  store i32 -1, i32* %src_related_regcost, align 4
  store i32 -1, i32* %src_related_cost, align 4
  br label %if.end.1397

if.else.1386:                                     ; preds = %if.then.1382
  %703 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %704 = bitcast %struct.rtx_def* %703 to i32*
  %bf.load1387 = load i32, i32* %704, align 8
  %bf.clear1388 = and i32 %bf.load1387, 65535
  %cmp1389 = icmp eq i32 %bf.clear1388, 61
  br i1 %cmp1389, label %cond.true.1391, label %cond.false.1392

cond.true.1391:                                   ; preds = %if.else.1386
  br label %cond.end.1394

cond.false.1392:                                  ; preds = %if.else.1386
  %705 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %call1393 = call i32 @notreg_cost(%struct.rtx_def* %705, i32 47)
  br label %cond.end.1394

cond.end.1394:                                    ; preds = %cond.false.1392, %cond.true.1391
  %cond1395 = phi i32 [ 0, %cond.true.1391 ], [ %call1393, %cond.false.1392 ]
  store i32 %cond1395, i32* %src_related_cost, align 4
  %706 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %call1396 = call i32 @approx_reg_cost(%struct.rtx_def* %706)
  store i32 %call1396, i32* %src_related_regcost, align 4
  br label %if.end.1397

if.end.1397:                                      ; preds = %cond.end.1394, %if.then.1385
  br label %if.end.1398

if.end.1398:                                      ; preds = %if.end.1397, %if.end.1380
  %707 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %708 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp1399 = icmp eq %struct.rtx_def* %707, %708
  br i1 %cmp1399, label %land.lhs.true.1401, label %if.end.1409

land.lhs.true.1401:                               ; preds = %if.end.1398
  %709 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool1402 = icmp ne %struct.rtx_def* %709, null
  br i1 %tobool1402, label %land.lhs.true.1403, label %if.end.1409

land.lhs.true.1403:                               ; preds = %land.lhs.true.1401
  %710 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %711 = bitcast %struct.rtx_def* %710 to i32*
  %bf.load1404 = load i32, i32* %711, align 8
  %bf.clear1405 = and i32 %bf.load1404, 65535
  %cmp1406 = icmp eq i32 %bf.clear1405, 67
  br i1 %cmp1406, label %if.then.1408, label %if.end.1409

if.then.1408:                                     ; preds = %land.lhs.true.1403
  %712 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  store %struct.rtx_def* %712, %struct.rtx_def** %src_folded, align 8
  store i32 -1, i32* %src_folded_regcost, align 4
  store i32 -1, i32* %src_folded_cost, align 4
  br label %if.end.1409

if.end.1409:                                      ; preds = %if.then.1408, %land.lhs.true.1403, %land.lhs.true.1401, %if.end.1398
  br label %while.body.1411

while.body.1411:                                  ; preds = %if.end.1409, %if.then.1497, %if.end.1768
  br label %while.cond.1412

while.cond.1412:                                  ; preds = %while.body.1426, %while.body.1411
  %713 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool1413 = icmp ne %struct.table_elt* %713, null
  br i1 %tobool1413, label %land.lhs.true.1414, label %land.end.1425

land.lhs.true.1414:                               ; preds = %while.cond.1412
  %714 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1415 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %714, i32 0, i32 0
  %715 = load %struct.rtx_def*, %struct.rtx_def** %exp1415, align 8
  %716 = bitcast %struct.rtx_def* %715 to i32*
  %bf.load1416 = load i32, i32* %716, align 8
  %bf.clear1417 = and i32 %bf.load1416, 65535
  %cmp1418 = icmp ne i32 %bf.clear1417, 61
  br i1 %cmp1418, label %land.rhs.1420, label %land.end.1425

land.rhs.1420:                                    ; preds = %land.lhs.true.1414
  %717 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1421 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %717, i32 0, i32 0
  %718 = load %struct.rtx_def*, %struct.rtx_def** %exp1421, align 8
  %719 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1422 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %719, i32 0, i32 0
  %720 = load %struct.rtx_def*, %struct.rtx_def** %exp1422, align 8
  %call1423 = call i32 @exp_equiv_p(%struct.rtx_def* %718, %struct.rtx_def* %720, i32 1, i32 0)
  %tobool1424 = icmp ne i32 %call1423, 0
  %lnot = xor i1 %tobool1424, true
  br label %land.end.1425

land.end.1425:                                    ; preds = %land.rhs.1420, %land.lhs.true.1414, %while.cond.1412
  %721 = phi i1 [ false, %land.lhs.true.1414 ], [ false, %while.cond.1412 ], [ %lnot, %land.rhs.1420 ]
  br i1 %721, label %while.body.1426, label %while.end.1428

while.body.1426:                                  ; preds = %land.end.1425
  %722 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value1427 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %722, i32 0, i32 4
  %723 = load %struct.table_elt*, %struct.table_elt** %next_same_value1427, align 8
  store %struct.table_elt* %723, %struct.table_elt** %elt, align 8
  br label %while.cond.1412

while.end.1428:                                   ; preds = %land.end.1425
  %724 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cmp1429 = icmp ne %struct.table_elt* %724, null
  br i1 %cmp1429, label %land.lhs.true.1431, label %if.end.1499

land.lhs.true.1431:                               ; preds = %while.end.1428
  %725 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1432 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %725, i32 0, i32 0
  %726 = load %struct.rtx_def*, %struct.rtx_def** %exp1432, align 8
  %727 = bitcast %struct.rtx_def* %726 to i32*
  %bf.load1433 = load i32, i32* %727, align 8
  %bf.clear1434 = and i32 %bf.load1433, 65535
  %cmp1435 = icmp eq i32 %bf.clear1434, 63
  br i1 %cmp1435, label %land.lhs.true.1437, label %if.end.1499

land.lhs.true.1437:                               ; preds = %land.lhs.true.1431
  %728 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1438 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %728, i32 0, i32 0
  %729 = load %struct.rtx_def*, %struct.rtx_def** %exp1438, align 8
  %730 = bitcast %struct.rtx_def* %729 to i32*
  %bf.load1439 = load i32, i32* %730, align 8
  %bf.lshr1440 = lshr i32 %bf.load1439, 16
  %bf.clear1441 = and i32 %bf.lshr1440, 255
  %idxprom1442 = sext i32 %bf.clear1441 to i64
  %arrayidx1443 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1442
  %731 = load i8, i8* %arrayidx1443, align 1
  %conv1444 = zext i8 %731 to i32
  %732 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1445 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %732, i32 0, i32 0
  %733 = load %struct.rtx_def*, %struct.rtx_def** %exp1445, align 8
  %fld1446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %733, i32 0, i32 1
  %arrayidx1447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1446, i32 0, i64 0
  %rtx1448 = bitcast %union.rtunion_def* %arrayidx1447 to %struct.rtx_def**
  %734 = load %struct.rtx_def*, %struct.rtx_def** %rtx1448, align 8
  %735 = bitcast %struct.rtx_def* %734 to i32*
  %bf.load1449 = load i32, i32* %735, align 8
  %bf.lshr1450 = lshr i32 %bf.load1449, 16
  %bf.clear1451 = and i32 %bf.lshr1450, 255
  %idxprom1452 = sext i32 %bf.clear1451 to i64
  %arrayidx1453 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1452
  %736 = load i8, i8* %arrayidx1453, align 1
  %conv1454 = zext i8 %736 to i32
  %cmp1455 = icmp sgt i32 %conv1444, %conv1454
  br i1 %cmp1455, label %land.lhs.true.1457, label %if.end.1499

land.lhs.true.1457:                               ; preds = %land.lhs.true.1437
  %737 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %cmp1458 = icmp ne %struct.rtx_def* %737, null
  br i1 %cmp1458, label %land.lhs.true.1460, label %if.then.1497

land.lhs.true.1460:                               ; preds = %land.lhs.true.1457
  %738 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %739 = bitcast %struct.rtx_def* %738 to i32*
  %bf.load1461 = load i32, i32* %739, align 8
  %bf.clear1462 = and i32 %bf.load1461, 65535
  %cmp1463 = icmp eq i32 %bf.clear1462, 63
  br i1 %cmp1463, label %land.lhs.true.1465, label %if.then.1497

land.lhs.true.1465:                               ; preds = %land.lhs.true.1460
  %740 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %741 = bitcast %struct.rtx_def* %740 to i32*
  %bf.load1466 = load i32, i32* %741, align 8
  %bf.lshr1467 = lshr i32 %bf.load1466, 16
  %bf.clear1468 = and i32 %bf.lshr1467, 255
  %742 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1469 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %742, i32 0, i32 0
  %743 = load %struct.rtx_def*, %struct.rtx_def** %exp1469, align 8
  %744 = bitcast %struct.rtx_def* %743 to i32*
  %bf.load1470 = load i32, i32* %744, align 8
  %bf.lshr1471 = lshr i32 %bf.load1470, 16
  %bf.clear1472 = and i32 %bf.lshr1471, 255
  %cmp1473 = icmp eq i32 %bf.clear1468, %bf.clear1472
  br i1 %cmp1473, label %land.lhs.true.1475, label %if.then.1497

land.lhs.true.1475:                               ; preds = %land.lhs.true.1465
  %745 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %745, i32 0, i32 1
  %arrayidx1477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1476, i32 0, i64 0
  %rtx1478 = bitcast %union.rtunion_def* %arrayidx1477 to %struct.rtx_def**
  %746 = load %struct.rtx_def*, %struct.rtx_def** %rtx1478, align 8
  %747 = bitcast %struct.rtx_def* %746 to i32*
  %bf.load1479 = load i32, i32* %747, align 8
  %bf.lshr1480 = lshr i32 %bf.load1479, 16
  %bf.clear1481 = and i32 %bf.lshr1480, 255
  %idxprom1482 = sext i32 %bf.clear1481 to i64
  %arrayidx1483 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1482
  %748 = load i8, i8* %arrayidx1483, align 1
  %conv1484 = zext i8 %748 to i32
  %749 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1485 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %749, i32 0, i32 0
  %750 = load %struct.rtx_def*, %struct.rtx_def** %exp1485, align 8
  %fld1486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %750, i32 0, i32 1
  %arrayidx1487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1486, i32 0, i64 0
  %rtx1488 = bitcast %union.rtunion_def* %arrayidx1487 to %struct.rtx_def**
  %751 = load %struct.rtx_def*, %struct.rtx_def** %rtx1488, align 8
  %752 = bitcast %struct.rtx_def* %751 to i32*
  %bf.load1489 = load i32, i32* %752, align 8
  %bf.lshr1490 = lshr i32 %bf.load1489, 16
  %bf.clear1491 = and i32 %bf.lshr1490, 255
  %idxprom1492 = sext i32 %bf.clear1491 to i64
  %arrayidx1493 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1492
  %753 = load i8, i8* %arrayidx1493, align 1
  %conv1494 = zext i8 %753 to i32
  %cmp1495 = icmp slt i32 %conv1484, %conv1494
  br i1 %cmp1495, label %if.end.1499, label %if.then.1497

if.then.1497:                                     ; preds = %land.lhs.true.1475, %land.lhs.true.1465, %land.lhs.true.1460, %land.lhs.true.1457
  %754 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value1498 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %754, i32 0, i32 4
  %755 = load %struct.table_elt*, %struct.table_elt** %next_same_value1498, align 8
  store %struct.table_elt* %755, %struct.table_elt** %elt, align 8
  br label %while.body.1411

if.end.1499:                                      ; preds = %land.lhs.true.1475, %land.lhs.true.1437, %land.lhs.true.1431, %while.end.1428
  %756 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool1500 = icmp ne %struct.table_elt* %756, null
  br i1 %tobool1500, label %if.then.1501, label %if.end.1502

if.then.1501:                                     ; preds = %if.end.1499
  %757 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %757, i32 0, i32 8
  %758 = load i32, i32* %cost, align 4
  store i32 %758, i32* %src_elt_cost, align 4
  %759 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %regcost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %759, i32 0, i32 9
  %760 = load i32, i32* %regcost, align 4
  store i32 %760, i32* %src_elt_regcost, align 4
  br label %if.end.1502

if.end.1502:                                      ; preds = %if.then.1501, %if.end.1499
  %761 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %tobool1503 = icmp ne %struct.rtx_def* %761, null
  br i1 %tobool1503, label %land.lhs.true.1504, label %if.else.1525

land.lhs.true.1504:                               ; preds = %if.end.1502
  %762 = load i32, i32* %src_folded_cost, align 4
  %763 = load i32, i32* %src_folded_regcost, align 4
  %764 = load i32, i32* %src_cost, align 4
  %765 = load i32, i32* %src_regcost, align 4
  %call1505 = call i32 @preferrable(i32 %762, i32 %763, i32 %764, i32 %765)
  %cmp1506 = icmp sle i32 %call1505, 0
  br i1 %cmp1506, label %land.lhs.true.1508, label %if.else.1525

land.lhs.true.1508:                               ; preds = %land.lhs.true.1504
  %766 = load i32, i32* %src_folded_cost, align 4
  %767 = load i32, i32* %src_folded_regcost, align 4
  %768 = load i32, i32* %src_eqv_cost, align 4
  %769 = load i32, i32* %src_eqv_regcost, align 4
  %call1509 = call i32 @preferrable(i32 %766, i32 %767, i32 %768, i32 %769)
  %cmp1510 = icmp sle i32 %call1509, 0
  br i1 %cmp1510, label %land.lhs.true.1512, label %if.else.1525

land.lhs.true.1512:                               ; preds = %land.lhs.true.1508
  %770 = load i32, i32* %src_folded_cost, align 4
  %771 = load i32, i32* %src_folded_regcost, align 4
  %772 = load i32, i32* %src_related_cost, align 4
  %773 = load i32, i32* %src_related_regcost, align 4
  %call1513 = call i32 @preferrable(i32 %770, i32 %771, i32 %772, i32 %773)
  %cmp1514 = icmp sle i32 %call1513, 0
  br i1 %cmp1514, label %land.lhs.true.1516, label %if.else.1525

land.lhs.true.1516:                               ; preds = %land.lhs.true.1512
  %774 = load i32, i32* %src_folded_cost, align 4
  %775 = load i32, i32* %src_folded_regcost, align 4
  %776 = load i32, i32* %src_elt_cost, align 4
  %777 = load i32, i32* %src_elt_regcost, align 4
  %call1517 = call i32 @preferrable(i32 %774, i32 %775, i32 %776, i32 %777)
  %cmp1518 = icmp sle i32 %call1517, 0
  br i1 %cmp1518, label %if.then.1520, label %if.else.1525

if.then.1520:                                     ; preds = %land.lhs.true.1516
  %778 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  store %struct.rtx_def* %778, %struct.rtx_def** %trial, align 8
  store i32 2147483647, i32* %src_folded_cost, align 4
  %779 = load i32, i32* %src_folded_force_flag, align 4
  %tobool1521 = icmp ne i32 %779, 0
  br i1 %tobool1521, label %if.then.1522, label %if.end.1524

if.then.1522:                                     ; preds = %if.then.1520
  %780 = load i32, i32* %mode, align 4
  %781 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %call1523 = call %struct.rtx_def* @force_const_mem(i32 %780, %struct.rtx_def* %781)
  store %struct.rtx_def* %call1523, %struct.rtx_def** %trial, align 8
  br label %if.end.1524

if.end.1524:                                      ; preds = %if.then.1522, %if.then.1520
  br label %if.end.1567

if.else.1525:                                     ; preds = %land.lhs.true.1516, %land.lhs.true.1512, %land.lhs.true.1508, %land.lhs.true.1504, %if.end.1502
  %782 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %tobool1526 = icmp ne %struct.rtx_def* %782, null
  br i1 %tobool1526, label %land.lhs.true.1527, label %if.else.1540

land.lhs.true.1527:                               ; preds = %if.else.1525
  %783 = load i32, i32* %src_cost, align 4
  %784 = load i32, i32* %src_regcost, align 4
  %785 = load i32, i32* %src_eqv_cost, align 4
  %786 = load i32, i32* %src_eqv_regcost, align 4
  %call1528 = call i32 @preferrable(i32 %783, i32 %784, i32 %785, i32 %786)
  %cmp1529 = icmp sle i32 %call1528, 0
  br i1 %cmp1529, label %land.lhs.true.1531, label %if.else.1540

land.lhs.true.1531:                               ; preds = %land.lhs.true.1527
  %787 = load i32, i32* %src_cost, align 4
  %788 = load i32, i32* %src_regcost, align 4
  %789 = load i32, i32* %src_related_cost, align 4
  %790 = load i32, i32* %src_related_regcost, align 4
  %call1532 = call i32 @preferrable(i32 %787, i32 %788, i32 %789, i32 %790)
  %cmp1533 = icmp sle i32 %call1532, 0
  br i1 %cmp1533, label %land.lhs.true.1535, label %if.else.1540

land.lhs.true.1535:                               ; preds = %land.lhs.true.1531
  %791 = load i32, i32* %src_cost, align 4
  %792 = load i32, i32* %src_regcost, align 4
  %793 = load i32, i32* %src_elt_cost, align 4
  %794 = load i32, i32* %src_elt_regcost, align 4
  %call1536 = call i32 @preferrable(i32 %791, i32 %792, i32 %793, i32 %794)
  %cmp1537 = icmp sle i32 %call1536, 0
  br i1 %cmp1537, label %if.then.1539, label %if.else.1540

if.then.1539:                                     ; preds = %land.lhs.true.1535
  %795 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  store %struct.rtx_def* %795, %struct.rtx_def** %trial, align 8
  store i32 2147483647, i32* %src_cost, align 4
  br label %if.end.1566

if.else.1540:                                     ; preds = %land.lhs.true.1535, %land.lhs.true.1531, %land.lhs.true.1527, %if.else.1525
  %796 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %tobool1541 = icmp ne %struct.rtx_def* %796, null
  br i1 %tobool1541, label %land.lhs.true.1542, label %if.else.1552

land.lhs.true.1542:                               ; preds = %if.else.1540
  %797 = load i32, i32* %src_eqv_cost, align 4
  %798 = load i32, i32* %src_eqv_regcost, align 4
  %799 = load i32, i32* %src_related_cost, align 4
  %800 = load i32, i32* %src_related_regcost, align 4
  %call1543 = call i32 @preferrable(i32 %797, i32 %798, i32 %799, i32 %800)
  %cmp1544 = icmp sle i32 %call1543, 0
  br i1 %cmp1544, label %land.lhs.true.1546, label %if.else.1552

land.lhs.true.1546:                               ; preds = %land.lhs.true.1542
  %801 = load i32, i32* %src_eqv_cost, align 4
  %802 = load i32, i32* %src_eqv_regcost, align 4
  %803 = load i32, i32* %src_elt_cost, align 4
  %804 = load i32, i32* %src_elt_regcost, align 4
  %call1547 = call i32 @preferrable(i32 %801, i32 %802, i32 %803, i32 %804)
  %cmp1548 = icmp sle i32 %call1547, 0
  br i1 %cmp1548, label %if.then.1550, label %if.else.1552

if.then.1550:                                     ; preds = %land.lhs.true.1546
  %805 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8
  %call1551 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %805)
  store %struct.rtx_def* %call1551, %struct.rtx_def** %trial, align 8
  store i32 2147483647, i32* %src_eqv_cost, align 4
  br label %if.end.1565

if.else.1552:                                     ; preds = %land.lhs.true.1546, %land.lhs.true.1542, %if.else.1540
  %806 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %tobool1553 = icmp ne %struct.rtx_def* %806, null
  br i1 %tobool1553, label %land.lhs.true.1554, label %if.else.1560

land.lhs.true.1554:                               ; preds = %if.else.1552
  %807 = load i32, i32* %src_related_cost, align 4
  %808 = load i32, i32* %src_related_regcost, align 4
  %809 = load i32, i32* %src_elt_cost, align 4
  %810 = load i32, i32* %src_elt_regcost, align 4
  %call1555 = call i32 @preferrable(i32 %807, i32 %808, i32 %809, i32 %810)
  %cmp1556 = icmp sle i32 %call1555, 0
  br i1 %cmp1556, label %if.then.1558, label %if.else.1560

if.then.1558:                                     ; preds = %land.lhs.true.1554
  %811 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8
  %call1559 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %811)
  store %struct.rtx_def* %call1559, %struct.rtx_def** %trial, align 8
  store i32 2147483647, i32* %src_related_cost, align 4
  br label %if.end.1564

if.else.1560:                                     ; preds = %land.lhs.true.1554, %if.else.1552
  %812 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp1561 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %812, i32 0, i32 0
  %813 = load %struct.rtx_def*, %struct.rtx_def** %exp1561, align 8
  %call1562 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %813)
  store %struct.rtx_def* %call1562, %struct.rtx_def** %trial, align 8
  %814 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value1563 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %814, i32 0, i32 4
  %815 = load %struct.table_elt*, %struct.table_elt** %next_same_value1563, align 8
  store %struct.table_elt* %815, %struct.table_elt** %elt, align 8
  store i32 2147483647, i32* %src_elt_cost, align 4
  br label %if.end.1564

if.end.1564:                                      ; preds = %if.else.1560, %if.then.1558
  br label %if.end.1565

if.end.1565:                                      ; preds = %if.end.1564, %if.then.1550
  br label %if.end.1566

if.end.1566:                                      ; preds = %if.end.1565, %if.then.1539
  br label %if.end.1567

if.end.1567:                                      ; preds = %if.end.1566, %if.end.1524
  %816 = load i32, i32* %n_sets, align 4
  %cmp1568 = icmp eq i32 %816, 1
  br i1 %cmp1568, label %land.lhs.true.1570, label %if.else.1591

land.lhs.true.1570:                               ; preds = %if.end.1567
  %817 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %818 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp1571 = icmp eq %struct.rtx_def* %817, %818
  br i1 %cmp1571, label %land.lhs.true.1573, label %if.else.1591

land.lhs.true.1573:                               ; preds = %land.lhs.true.1570
  %819 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %820 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp1574 = icmp eq %struct.rtx_def* %819, %820
  br i1 %cmp1574, label %if.then.1584, label %lor.lhs.false.1576

lor.lhs.false.1576:                               ; preds = %land.lhs.true.1573
  %821 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %822 = bitcast %struct.rtx_def* %821 to i32*
  %bf.load1577 = load i32, i32* %822, align 8
  %bf.clear1578 = and i32 %bf.load1577, 65535
  %cmp1579 = icmp eq i32 %bf.clear1578, 67
  br i1 %cmp1579, label %land.lhs.true.1581, label %if.else.1591

land.lhs.true.1581:                               ; preds = %lor.lhs.false.1576
  %823 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1582 = call i32 @condjump_p(%struct.rtx_def* %823)
  %tobool1583 = icmp ne i32 %call1582, 0
  br i1 %tobool1583, label %if.else.1591, label %if.then.1584

if.then.1584:                                     ; preds = %land.lhs.true.1581, %land.lhs.true.1573
  %824 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %825 = load i32, i32* %i, align 4
  %idxprom1585 = sext i32 %825 to i64
  %826 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1586 = getelementptr inbounds %struct.set, %struct.set* %826, i64 %idxprom1585
  %rtl1587 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1586, i32 0, i32 0
  %827 = load %struct.rtx_def*, %struct.rtx_def** %rtl1587, align 8
  %fld1588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %827, i32 0, i32 1
  %arrayidx1589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1588, i32 0, i64 1
  %rtx1590 = bitcast %union.rtunion_def* %arrayidx1589 to %struct.rtx_def**
  store %struct.rtx_def* %824, %struct.rtx_def** %rtx1590, align 8
  store i32 1, i32* @cse_jumps_altered, align 4
  br label %while.end.1769

if.else.1591:                                     ; preds = %land.lhs.true.1581, %lor.lhs.false.1576, %land.lhs.true.1570, %if.end.1567
  %828 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %829 = load i32, i32* %i, align 4
  %idxprom1592 = sext i32 %829 to i64
  %830 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1593 = getelementptr inbounds %struct.set, %struct.set* %830, i64 %idxprom1592
  %rtl1594 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1593, i32 0, i32 0
  %831 = load %struct.rtx_def*, %struct.rtx_def** %rtl1594, align 8
  %fld1595 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %831, i32 0, i32 1
  %arrayidx1596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1595, i32 0, i64 1
  %rtx1597 = bitcast %union.rtunion_def* %arrayidx1596 to %struct.rtx_def**
  %832 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %call1598 = call i32 @validate_change(%struct.rtx_def* %828, %struct.rtx_def** %rtx1597, %struct.rtx_def* %832, i32 0)
  %tobool1599 = icmp ne i32 %call1598, 0
  br i1 %tobool1599, label %if.then.1600, label %if.else.1657

if.then.1600:                                     ; preds = %if.else.1591
  %833 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %tobool1601 = icmp ne %struct.rtx_def* %833, null
  br i1 %tobool1601, label %land.lhs.true.1602, label %if.end.1641

land.lhs.true.1602:                               ; preds = %if.then.1600
  %834 = load i32, i32* %i, align 4
  %idxprom1603 = sext i32 %834 to i64
  %835 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1604 = getelementptr inbounds %struct.set, %struct.set* %835, i64 %idxprom1603
  %orig_src1605 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1604, i32 0, i32 10
  %836 = load %struct.rtx_def*, %struct.rtx_def** %orig_src1605, align 8
  %837 = bitcast %struct.rtx_def* %836 to i32*
  %bf.load1606 = load i32, i32* %837, align 8
  %bf.clear1607 = and i32 %bf.load1606, 65535
  %cmp1608 = icmp eq i32 %bf.clear1607, 61
  br i1 %cmp1608, label %if.then.1626, label %lor.lhs.false.1610

lor.lhs.false.1610:                               ; preds = %land.lhs.true.1602
  %838 = load i32, i32* %i, align 4
  %idxprom1611 = sext i32 %838 to i64
  %839 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1612 = getelementptr inbounds %struct.set, %struct.set* %839, i64 %idxprom1611
  %orig_src1613 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1612, i32 0, i32 10
  %840 = load %struct.rtx_def*, %struct.rtx_def** %orig_src1613, align 8
  %841 = bitcast %struct.rtx_def* %840 to i32*
  %bf.load1614 = load i32, i32* %841, align 8
  %bf.clear1615 = and i32 %bf.load1614, 65535
  %cmp1616 = icmp eq i32 %bf.clear1615, 63
  br i1 %cmp1616, label %if.then.1626, label %lor.lhs.false.1618

lor.lhs.false.1618:                               ; preds = %lor.lhs.false.1610
  %842 = load i32, i32* %i, align 4
  %idxprom1619 = sext i32 %842 to i64
  %843 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1620 = getelementptr inbounds %struct.set, %struct.set* %843, i64 %idxprom1619
  %orig_src1621 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1620, i32 0, i32 10
  %844 = load %struct.rtx_def*, %struct.rtx_def** %orig_src1621, align 8
  %845 = bitcast %struct.rtx_def* %844 to i32*
  %bf.load1622 = load i32, i32* %845, align 8
  %bf.clear1623 = and i32 %bf.load1622, 65535
  %cmp1624 = icmp eq i32 %bf.clear1623, 66
  br i1 %cmp1624, label %if.then.1626, label %if.end.1641

if.then.1626:                                     ; preds = %lor.lhs.false.1618, %lor.lhs.false.1610, %land.lhs.true.1602
  %846 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %fld1627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %846, i32 0, i32 1
  %arrayidx1628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1627, i32 0, i64 6
  %rtx1629 = bitcast %union.rtunion_def* %arrayidx1628 to %struct.rtx_def**
  %847 = load %struct.rtx_def*, %struct.rtx_def** %rtx1629, align 8
  %848 = load i32, i32* %i, align 4
  %idxprom1630 = sext i32 %848 to i64
  %849 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1631 = getelementptr inbounds %struct.set, %struct.set* %849, i64 %idxprom1630
  %orig_src1632 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1631, i32 0, i32 10
  %850 = load %struct.rtx_def*, %struct.rtx_def** %orig_src1632, align 8
  %851 = load i32, i32* %i, align 4
  %idxprom1633 = sext i32 %851 to i64
  %852 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1634 = getelementptr inbounds %struct.set, %struct.set* %852, i64 %idxprom1633
  %rtl1635 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1634, i32 0, i32 0
  %853 = load %struct.rtx_def*, %struct.rtx_def** %rtl1635, align 8
  %fld1636 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %853, i32 0, i32 1
  %arrayidx1637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1636, i32 0, i64 1
  %rtx1638 = bitcast %union.rtunion_def* %arrayidx1637 to %struct.rtx_def**
  %854 = load %struct.rtx_def*, %struct.rtx_def** %rtx1638, align 8
  %855 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1639 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %854, %struct.rtx_def* %855)
  %call1640 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %847, %struct.rtx_def* %850, %struct.rtx_def* %call1639)
  br label %if.end.1641

if.end.1641:                                      ; preds = %if.then.1626, %lor.lhs.false.1618, %if.then.1600
  %856 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %857 = load i32, i32* %i, align 4
  %idxprom1642 = sext i32 %857 to i64
  %858 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1643 = getelementptr inbounds %struct.set, %struct.set* %858, i64 %idxprom1642
  %rtl1644 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1643, i32 0, i32 0
  %859 = load %struct.rtx_def*, %struct.rtx_def** %rtl1644, align 8
  %fld1645 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %859, i32 0, i32 1
  %arrayidx1646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1645, i32 0, i64 1
  %rtx1647 = bitcast %union.rtunion_def* %arrayidx1646 to %struct.rtx_def**
  %860 = load i32, i32* %i, align 4
  %idxprom1648 = sext i32 %860 to i64
  %861 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1649 = getelementptr inbounds %struct.set, %struct.set* %861, i64 %idxprom1648
  %rtl1650 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1649, i32 0, i32 0
  %862 = load %struct.rtx_def*, %struct.rtx_def** %rtl1650, align 8
  %fld1651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %862, i32 0, i32 1
  %arrayidx1652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1651, i32 0, i64 1
  %rtx1653 = bitcast %union.rtunion_def* %arrayidx1652 to %struct.rtx_def**
  %863 = load %struct.rtx_def*, %struct.rtx_def** %rtx1653, align 8
  %864 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1654 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %863, %struct.rtx_def* %864)
  %call1655 = call i32 @validate_change(%struct.rtx_def* %856, %struct.rtx_def** %rtx1647, %struct.rtx_def* %call1654, i32 1)
  %call1656 = call i32 @apply_change_group()
  br label %while.end.1769

if.else.1657:                                     ; preds = %if.else.1591
  %865 = load i32, i32* @constant_pool_entries_cost, align 4
  %tobool1658 = icmp ne i32 %865, 0
  br i1 %tobool1658, label %land.lhs.true.1659, label %if.end.1766

land.lhs.true.1659:                               ; preds = %if.else.1657
  %866 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %867 = bitcast %struct.rtx_def* %866 to i32*
  %bf.load1660 = load i32, i32* %867, align 8
  %bf.clear1661 = and i32 %bf.load1660, 65535
  %cmp1662 = icmp eq i32 %bf.clear1661, 67
  br i1 %cmp1662, label %land.lhs.true.1699, label %lor.lhs.false.1664

lor.lhs.false.1664:                               ; preds = %land.lhs.true.1659
  %868 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %869 = bitcast %struct.rtx_def* %868 to i32*
  %bf.load1665 = load i32, i32* %869, align 8
  %bf.clear1666 = and i32 %bf.load1665, 65535
  %cmp1667 = icmp eq i32 %bf.clear1666, 68
  br i1 %cmp1667, label %land.lhs.true.1699, label %lor.lhs.false.1669

lor.lhs.false.1669:                               ; preds = %lor.lhs.false.1664
  %870 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %871 = bitcast %struct.rtx_def* %870 to i32*
  %bf.load1670 = load i32, i32* %871, align 8
  %bf.clear1671 = and i32 %bf.load1670, 65535
  %cmp1672 = icmp eq i32 %bf.clear1671, 54
  br i1 %cmp1672, label %land.lhs.true.1699, label %lor.lhs.false.1674

lor.lhs.false.1674:                               ; preds = %lor.lhs.false.1669
  %872 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %873 = bitcast %struct.rtx_def* %872 to i32*
  %bf.load1675 = load i32, i32* %873, align 8
  %bf.clear1676 = and i32 %bf.load1675, 65535
  %cmp1677 = icmp eq i32 %bf.clear1676, 55
  br i1 %cmp1677, label %land.lhs.true.1699, label %lor.lhs.false.1679

lor.lhs.false.1679:                               ; preds = %lor.lhs.false.1674
  %874 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %875 = bitcast %struct.rtx_def* %874 to i32*
  %bf.load1680 = load i32, i32* %875, align 8
  %bf.clear1681 = and i32 %bf.load1680, 65535
  %cmp1682 = icmp eq i32 %bf.clear1681, 58
  br i1 %cmp1682, label %land.lhs.true.1699, label %lor.lhs.false.1684

lor.lhs.false.1684:                               ; preds = %lor.lhs.false.1679
  %876 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %877 = bitcast %struct.rtx_def* %876 to i32*
  %bf.load1685 = load i32, i32* %877, align 8
  %bf.clear1686 = and i32 %bf.load1685, 65535
  %cmp1687 = icmp eq i32 %bf.clear1686, 134
  br i1 %cmp1687, label %land.lhs.true.1699, label %lor.lhs.false.1689

lor.lhs.false.1689:                               ; preds = %lor.lhs.false.1684
  %878 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %879 = bitcast %struct.rtx_def* %878 to i32*
  %bf.load1690 = load i32, i32* %879, align 8
  %bf.clear1691 = and i32 %bf.load1690, 65535
  %cmp1692 = icmp eq i32 %bf.clear1691, 56
  br i1 %cmp1692, label %land.lhs.true.1699, label %lor.lhs.false.1694

lor.lhs.false.1694:                               ; preds = %lor.lhs.false.1689
  %880 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %881 = bitcast %struct.rtx_def* %880 to i32*
  %bf.load1695 = load i32, i32* %881, align 8
  %bf.clear1696 = and i32 %bf.load1695, 65535
  %cmp1697 = icmp eq i32 %bf.clear1696, 140
  br i1 %cmp1697, label %land.lhs.true.1699, label %if.end.1766

land.lhs.true.1699:                               ; preds = %lor.lhs.false.1694, %lor.lhs.false.1689, %lor.lhs.false.1684, %lor.lhs.false.1679, %lor.lhs.false.1674, %lor.lhs.false.1669, %lor.lhs.false.1664, %land.lhs.true.1659
  %882 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %883 = bitcast %struct.rtx_def* %882 to i32*
  %bf.load1700 = load i32, i32* %883, align 8
  %bf.clear1701 = and i32 %bf.load1700, 65535
  %cmp1702 = icmp eq i32 %bf.clear1701, 58
  br i1 %cmp1702, label %land.lhs.true.1704, label %land.lhs.true.1712

land.lhs.true.1704:                               ; preds = %land.lhs.true.1699
  %884 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %fld1705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %884, i32 0, i32 1
  %arrayidx1706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1705, i32 0, i64 0
  %rtx1707 = bitcast %union.rtunion_def* %arrayidx1706 to %struct.rtx_def**
  %885 = load %struct.rtx_def*, %struct.rtx_def** %rtx1707, align 8
  %886 = bitcast %struct.rtx_def* %885 to i32*
  %bf.load1708 = load i32, i32* %886, align 8
  %bf.clear1709 = and i32 %bf.load1708, 65535
  %cmp1710 = icmp eq i32 %bf.clear1709, 122
  br i1 %cmp1710, label %if.end.1766, label %land.lhs.true.1712

land.lhs.true.1712:                               ; preds = %land.lhs.true.1704, %land.lhs.true.1699
  %887 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %888 = bitcast %struct.rtx_def* %887 to i32*
  %bf.load1713 = load i32, i32* %888, align 8
  %bf.clear1714 = and i32 %bf.load1713, 65535
  %cmp1715 = icmp eq i32 %bf.clear1714, 58
  br i1 %cmp1715, label %land.lhs.true.1717, label %land.lhs.true.1747

land.lhs.true.1717:                               ; preds = %land.lhs.true.1712
  %889 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %fld1718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %889, i32 0, i32 1
  %arrayidx1719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1718, i32 0, i64 0
  %rtx1720 = bitcast %union.rtunion_def* %arrayidx1719 to %struct.rtx_def**
  %890 = load %struct.rtx_def*, %struct.rtx_def** %rtx1720, align 8
  %891 = bitcast %struct.rtx_def* %890 to i32*
  %bf.load1721 = load i32, i32* %891, align 8
  %bf.clear1722 = and i32 %bf.load1721, 65535
  %cmp1723 = icmp eq i32 %bf.clear1722, 76
  br i1 %cmp1723, label %land.lhs.true.1725, label %land.lhs.true.1747

land.lhs.true.1725:                               ; preds = %land.lhs.true.1717
  %892 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %fld1726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %892, i32 0, i32 1
  %arrayidx1727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1726, i32 0, i64 0
  %rtx1728 = bitcast %union.rtunion_def* %arrayidx1727 to %struct.rtx_def**
  %893 = load %struct.rtx_def*, %struct.rtx_def** %rtx1728, align 8
  %fld1729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %893, i32 0, i32 1
  %arrayidx1730 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1729, i32 0, i64 0
  %rtx1731 = bitcast %union.rtunion_def* %arrayidx1730 to %struct.rtx_def**
  %894 = load %struct.rtx_def*, %struct.rtx_def** %rtx1731, align 8
  %895 = bitcast %struct.rtx_def* %894 to i32*
  %bf.load1732 = load i32, i32* %895, align 8
  %bf.clear1733 = and i32 %bf.load1732, 65535
  %cmp1734 = icmp eq i32 %bf.clear1733, 67
  br i1 %cmp1734, label %land.lhs.true.1736, label %land.lhs.true.1747

land.lhs.true.1736:                               ; preds = %land.lhs.true.1725
  %896 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  %fld1737 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %896, i32 0, i32 1
  %arrayidx1738 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1737, i32 0, i64 0
  %rtx1739 = bitcast %union.rtunion_def* %arrayidx1738 to %struct.rtx_def**
  %897 = load %struct.rtx_def*, %struct.rtx_def** %rtx1739, align 8
  %fld1740 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %897, i32 0, i32 1
  %arrayidx1741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1740, i32 0, i64 1
  %rtx1742 = bitcast %union.rtunion_def* %arrayidx1741 to %struct.rtx_def**
  %898 = load %struct.rtx_def*, %struct.rtx_def** %rtx1742, align 8
  %899 = bitcast %struct.rtx_def* %898 to i32*
  %bf.load1743 = load i32, i32* %899, align 8
  %bf.clear1744 = and i32 %bf.load1743, 65535
  %cmp1745 = icmp eq i32 %bf.clear1744, 67
  br i1 %cmp1745, label %if.end.1766, label %land.lhs.true.1747

land.lhs.true.1747:                               ; preds = %land.lhs.true.1736, %land.lhs.true.1725, %land.lhs.true.1717, %land.lhs.true.1712
  %900 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %cmp1748 = icmp eq %struct.rtx_def* %900, null
  br i1 %cmp1748, label %land.lhs.true.1757, label %lor.lhs.false.1750

lor.lhs.false.1750:                               ; preds = %land.lhs.true.1747
  %901 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8
  %902 = bitcast %struct.rtx_def* %901 to i32*
  %bf.load1751 = load i32, i32* %902, align 8
  %bf.clear1752 = and i32 %bf.load1751, 65535
  %cmp1753 = icmp ne i32 %bf.clear1752, 66
  br i1 %cmp1753, label %land.lhs.true.1755, label %if.end.1766

land.lhs.true.1755:                               ; preds = %lor.lhs.false.1750
  %903 = load i32, i32* %src_folded_force_flag, align 4
  %tobool1756 = icmp ne i32 %903, 0
  br i1 %tobool1756, label %if.end.1766, label %land.lhs.true.1757

land.lhs.true.1757:                               ; preds = %land.lhs.true.1755, %land.lhs.true.1747
  %904 = load i32, i32* %mode, align 4
  %idxprom1758 = sext i32 %904 to i64
  %arrayidx1759 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1758
  %905 = load i32, i32* %arrayidx1759, align 4
  %cmp1760 = icmp ne i32 %905, 4
  br i1 %cmp1760, label %land.lhs.true.1762, label %if.end.1766

land.lhs.true.1762:                               ; preds = %land.lhs.true.1757
  %906 = load i32, i32* %mode, align 4
  %cmp1763 = icmp ne i32 %906, 0
  br i1 %cmp1763, label %if.then.1765, label %if.end.1766

if.then.1765:                                     ; preds = %land.lhs.true.1762
  store i32 1, i32* %src_folded_force_flag, align 4
  %907 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8
  store %struct.rtx_def* %907, %struct.rtx_def** %src_folded, align 8
  %908 = load i32, i32* @constant_pool_entries_cost, align 4
  store i32 %908, i32* %src_folded_cost, align 4
  br label %if.end.1766

if.end.1766:                                      ; preds = %if.then.1765, %land.lhs.true.1762, %land.lhs.true.1757, %land.lhs.true.1755, %lor.lhs.false.1750, %land.lhs.true.1736, %land.lhs.true.1704, %lor.lhs.false.1694, %if.else.1657
  br label %if.end.1767

if.end.1767:                                      ; preds = %if.end.1766
  br label %if.end.1768

if.end.1768:                                      ; preds = %if.end.1767
  br label %while.body.1411

while.end.1769:                                   ; preds = %if.end.1641, %if.then.1584
  %909 = load i32, i32* %i, align 4
  %idxprom1770 = sext i32 %909 to i64
  %910 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1771 = getelementptr inbounds %struct.set, %struct.set* %910, i64 %idxprom1770
  %rtl1772 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1771, i32 0, i32 0
  %911 = load %struct.rtx_def*, %struct.rtx_def** %rtl1772, align 8
  %fld1773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %911, i32 0, i32 1
  %arrayidx1774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1773, i32 0, i64 1
  %rtx1775 = bitcast %union.rtunion_def* %arrayidx1774 to %struct.rtx_def**
  %912 = load %struct.rtx_def*, %struct.rtx_def** %rtx1775, align 8
  store %struct.rtx_def* %912, %struct.rtx_def** %src474, align 8
  %913 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %914 = bitcast %struct.rtx_def* %913 to i32*
  %bf.load1776 = load i32, i32* %914, align 8
  %bf.clear1777 = and i32 %bf.load1776, 65535
  %cmp1778 = icmp eq i32 %bf.clear1777, 61
  br i1 %cmp1778, label %land.lhs.true.1780, label %if.end.1951

land.lhs.true.1780:                               ; preds = %while.end.1769
  %915 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %915, i32 0, i32 1
  %arrayidx1782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1781, i32 0, i64 0
  %rtuint1783 = bitcast %union.rtunion_def* %arrayidx1782 to i32*
  %916 = load i32, i32* %rtuint1783, align 4
  %917 = load i32, i32* @cached_regno, align 4
  %cmp1784 = icmp eq i32 %916, %917
  br i1 %cmp1784, label %land.lhs.true.1786, label %cond.false.1789

land.lhs.true.1786:                               ; preds = %land.lhs.true.1780
  %918 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1787 = icmp ne %struct.cse_reg_info* %918, null
  br i1 %tobool1787, label %cond.true.1788, label %cond.false.1789

cond.true.1788:                                   ; preds = %land.lhs.true.1786
  %919 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1794

cond.false.1789:                                  ; preds = %land.lhs.true.1786, %land.lhs.true.1780
  %920 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %920, i32 0, i32 1
  %arrayidx1791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1790, i32 0, i64 0
  %rtuint1792 = bitcast %union.rtunion_def* %arrayidx1791 to i32*
  %921 = load i32, i32* %rtuint1792, align 4
  %call1793 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %921)
  br label %cond.end.1794

cond.end.1794:                                    ; preds = %cond.false.1789, %cond.true.1788
  %cond1795 = phi %struct.cse_reg_info* [ %919, %cond.true.1788 ], [ %call1793, %cond.false.1789 ]
  %reg_qty1796 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1795, i32 0, i32 3
  %922 = load i32, i32* %reg_qty1796, align 4
  %923 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %923, i32 0, i32 1
  %arrayidx1798 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1797, i32 0, i64 0
  %rtuint1799 = bitcast %union.rtunion_def* %arrayidx1798 to i32*
  %924 = load i32, i32* %rtuint1799, align 4
  %cmp1800 = icmp ne i32 %922, %924
  br i1 %cmp1800, label %if.then.1802, label %if.end.1951

if.then.1802:                                     ; preds = %cond.end.1794
  %925 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1803 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %925, i32 0, i32 1
  %arrayidx1804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1803, i32 0, i64 0
  %rtuint1805 = bitcast %union.rtunion_def* %arrayidx1804 to i32*
  %926 = load i32, i32* %rtuint1805, align 4
  %927 = load i32, i32* @cached_regno, align 4
  %cmp1806 = icmp eq i32 %926, %927
  br i1 %cmp1806, label %land.lhs.true.1808, label %cond.false.1811

land.lhs.true.1808:                               ; preds = %if.then.1802
  %928 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1809 = icmp ne %struct.cse_reg_info* %928, null
  br i1 %tobool1809, label %cond.true.1810, label %cond.false.1811

cond.true.1810:                                   ; preds = %land.lhs.true.1808
  %929 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1816

cond.false.1811:                                  ; preds = %land.lhs.true.1808, %if.then.1802
  %930 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %930, i32 0, i32 1
  %arrayidx1813 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1812, i32 0, i64 0
  %rtuint1814 = bitcast %union.rtunion_def* %arrayidx1813 to i32*
  %931 = load i32, i32* %rtuint1814, align 4
  %call1815 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %931)
  br label %cond.end.1816

cond.end.1816:                                    ; preds = %cond.false.1811, %cond.true.1810
  %cond1817 = phi %struct.cse_reg_info* [ %929, %cond.true.1810 ], [ %call1815, %cond.false.1811 ]
  %reg_qty1818 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1817, i32 0, i32 3
  %932 = load i32, i32* %reg_qty1818, align 4
  store i32 %932, i32* %dest_q, align 4
  %933 = load i32, i32* %dest_q, align 4
  %idxprom1819 = sext i32 %933 to i64
  %934 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx1820 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %934, i64 %idxprom1819
  store %struct.qty_table_elem* %arrayidx1820, %struct.qty_table_elem** %dest_ent, align 8
  %935 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent, align 8
  %mode1821 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %935, i32 0, i32 6
  %936 = load i32, i32* %mode1821, align 4
  %937 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %938 = bitcast %struct.rtx_def* %937 to i32*
  %bf.load1822 = load i32, i32* %938, align 8
  %bf.lshr1823 = lshr i32 %bf.load1822, 16
  %bf.clear1824 = and i32 %bf.lshr1823, 255
  %cmp1825 = icmp eq i32 %936, %bf.clear1824
  br i1 %cmp1825, label %land.lhs.true.1827, label %if.end.1950

land.lhs.true.1827:                               ; preds = %cond.end.1816
  %939 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent, align 8
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %939, i32 0, i32 4
  %940 = load i32, i32* %first_reg, align 4
  %941 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1828 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %941, i32 0, i32 1
  %arrayidx1829 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1828, i32 0, i64 0
  %rtuint1830 = bitcast %union.rtunion_def* %arrayidx1829 to i32*
  %942 = load i32, i32* %rtuint1830, align 4
  %cmp1831 = icmp ne i32 %940, %942
  br i1 %cmp1831, label %land.lhs.true.1833, label %if.end.1950

land.lhs.true.1833:                               ; preds = %land.lhs.true.1827
  %943 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %944 = bitcast %struct.rtx_def* %943 to i32*
  %bf.load1834 = load i32, i32* %944, align 8
  %bf.clear1835 = and i32 %bf.load1834, 65535
  %cmp1836 = icmp eq i32 %bf.clear1835, 61
  br i1 %cmp1836, label %land.lhs.true.1838, label %if.end.1950

land.lhs.true.1838:                               ; preds = %land.lhs.true.1833
  %945 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1839 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %945, i32 0, i32 1
  %arrayidx1840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1839, i32 0, i64 0
  %rtuint1841 = bitcast %union.rtunion_def* %arrayidx1840 to i32*
  %946 = load i32, i32* %rtuint1841, align 4
  %947 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %947, i32 0, i32 1
  %arrayidx1843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1842, i32 0, i64 0
  %rtuint1844 = bitcast %union.rtunion_def* %arrayidx1843 to i32*
  %948 = load i32, i32* %rtuint1844, align 4
  %cmp1845 = icmp eq i32 %946, %948
  br i1 %cmp1845, label %land.lhs.true.1847, label %if.end.1950

land.lhs.true.1847:                               ; preds = %land.lhs.true.1838
  %949 = load i32, i32* %i, align 4
  %idxprom1848 = sext i32 %949 to i64
  %950 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1849 = getelementptr inbounds %struct.set, %struct.set* %950, i64 %idxprom1848
  %src1850 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1849, i32 0, i32 1
  %951 = load %struct.rtx_def*, %struct.rtx_def** %src1850, align 8
  %952 = bitcast %struct.rtx_def* %951 to i32*
  %bf.load1851 = load i32, i32* %952, align 8
  %bf.clear1852 = and i32 %bf.load1851, 65535
  %cmp1853 = icmp ne i32 %bf.clear1852, 61
  br i1 %cmp1853, label %land.lhs.true.1864, label %lor.lhs.false.1855

lor.lhs.false.1855:                               ; preds = %land.lhs.true.1847
  %953 = load i32, i32* %i, align 4
  %idxprom1856 = sext i32 %953 to i64
  %954 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1857 = getelementptr inbounds %struct.set, %struct.set* %954, i64 %idxprom1856
  %src1858 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1857, i32 0, i32 1
  %955 = load %struct.rtx_def*, %struct.rtx_def** %src1858, align 8
  %fld1859 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %955, i32 0, i32 1
  %arrayidx1860 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1859, i32 0, i64 0
  %rtuint1861 = bitcast %union.rtunion_def* %arrayidx1860 to i32*
  %956 = load i32, i32* %rtuint1861, align 4
  %cmp1862 = icmp uge i32 %956, 53
  br i1 %cmp1862, label %land.lhs.true.1864, label %if.end.1950

land.lhs.true.1864:                               ; preds = %lor.lhs.false.1855, %land.lhs.true.1847
  %957 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %958 = bitcast %struct.rtx_def* %957 to i32*
  %bf.load1865 = load i32, i32* %958, align 8
  %bf.clear1866 = and i32 %bf.load1865, 65535
  %cmp1867 = icmp ne i32 %bf.clear1866, 61
  br i1 %cmp1867, label %if.then.1875, label %lor.lhs.false.1869

lor.lhs.false.1869:                               ; preds = %land.lhs.true.1864
  %959 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld1870 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %959, i32 0, i32 1
  %arrayidx1871 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1870, i32 0, i64 0
  %rtuint1872 = bitcast %union.rtunion_def* %arrayidx1871 to i32*
  %960 = load i32, i32* %rtuint1872, align 4
  %cmp1873 = icmp uge i32 %960, 53
  br i1 %cmp1873, label %if.then.1875, label %if.end.1950

if.then.1875:                                     ; preds = %lor.lhs.false.1869, %land.lhs.true.1864
  %961 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %961, i32 0, i32 1
  %arrayidx1877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1876, i32 0, i64 0
  %rtuint1878 = bitcast %union.rtunion_def* %arrayidx1877 to i32*
  %962 = load i32, i32* %rtuint1878, align 4
  %963 = load i32, i32* @cached_regno, align 4
  %cmp1879 = icmp eq i32 %962, %963
  br i1 %cmp1879, label %land.lhs.true.1881, label %cond.false.1884

land.lhs.true.1881:                               ; preds = %if.then.1875
  %964 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1882 = icmp ne %struct.cse_reg_info* %964, null
  br i1 %tobool1882, label %cond.true.1883, label %cond.false.1884

cond.true.1883:                                   ; preds = %land.lhs.true.1881
  %965 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1889

cond.false.1884:                                  ; preds = %land.lhs.true.1881, %if.then.1875
  %966 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1885 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %966, i32 0, i32 1
  %arrayidx1886 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1885, i32 0, i64 0
  %rtuint1887 = bitcast %union.rtunion_def* %arrayidx1886 to i32*
  %967 = load i32, i32* %rtuint1887, align 4
  %call1888 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %967)
  br label %cond.end.1889

cond.end.1889:                                    ; preds = %cond.false.1884, %cond.true.1883
  %cond1890 = phi %struct.cse_reg_info* [ %965, %cond.true.1883 ], [ %call1888, %cond.false.1884 ]
  %reg_qty1891 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1890, i32 0, i32 3
  %968 = load i32, i32* %reg_qty1891, align 4
  store i32 %968, i32* %src_q, align 4
  %969 = load i32, i32* %src_q, align 4
  %idxprom1892 = sext i32 %969 to i64
  %970 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx1893 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %970, i64 %idxprom1892
  store %struct.qty_table_elem* %arrayidx1893, %struct.qty_table_elem** %src_ent, align 8
  %971 = load %struct.qty_table_elem*, %struct.qty_table_elem** %src_ent, align 8
  %first_reg1894 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %971, i32 0, i32 4
  %972 = load i32, i32* %first_reg1894, align 4
  store i32 %972, i32* %first, align 4
  %973 = load i32, i32* %first, align 4
  %cmp1895 = icmp sge i32 %973, 53
  br i1 %cmp1895, label %cond.true.1897, label %cond.false.1900

cond.true.1897:                                   ; preds = %cond.end.1889
  %974 = load i32, i32* %first, align 4
  %idxprom1898 = sext i32 %974 to i64
  %975 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %975, i32 0, i32 3
  %976 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %976, i32 0, i32 12
  %977 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx1899 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %977, i64 %idxprom1898
  %978 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1899, align 8
  br label %cond.end.1905

cond.false.1900:                                  ; preds = %cond.end.1889
  %979 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %980 = bitcast %struct.rtx_def* %979 to i32*
  %bf.load1901 = load i32, i32* %980, align 8
  %bf.lshr1902 = lshr i32 %bf.load1901, 16
  %bf.clear1903 = and i32 %bf.lshr1902, 255
  %981 = load i32, i32* %first, align 4
  %call1904 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear1903, i32 %981)
  br label %cond.end.1905

cond.end.1905:                                    ; preds = %cond.false.1900, %cond.true.1897
  %cond1906 = phi %struct.rtx_def* [ %978, %cond.true.1897 ], [ %call1904, %cond.false.1900 ]
  store %struct.rtx_def* %cond1906, %struct.rtx_def** %new_src, align 8
  %982 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %983 = load i32, i32* %i, align 4
  %idxprom1907 = sext i32 %983 to i64
  %984 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1908 = getelementptr inbounds %struct.set, %struct.set* %984, i64 %idxprom1907
  %rtl1909 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1908, i32 0, i32 0
  %985 = load %struct.rtx_def*, %struct.rtx_def** %rtl1909, align 8
  %fld1910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %985, i32 0, i32 1
  %arrayidx1911 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1910, i32 0, i64 1
  %rtx1912 = bitcast %union.rtunion_def* %arrayidx1911 to %struct.rtx_def**
  %986 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  %call1913 = call i32 @validate_change(%struct.rtx_def* %982, %struct.rtx_def** %rtx1912, %struct.rtx_def* %986, i32 0)
  %tobool1914 = icmp ne i32 %call1913, 0
  br i1 %tobool1914, label %if.then.1915, label %if.end.1949

if.then.1915:                                     ; preds = %cond.end.1905
  %987 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8
  store %struct.rtx_def* %987, %struct.rtx_def** %src474, align 8
  %988 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool1916 = icmp ne %struct.rtx_def* %988, null
  br i1 %tobool1916, label %land.lhs.true.1917, label %if.end.1948

land.lhs.true.1917:                               ; preds = %if.then.1915
  %989 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %990 = bitcast %struct.rtx_def* %989 to i32*
  %bf.load1918 = load i32, i32* %990, align 8
  %bf.clear1919 = and i32 %bf.load1918, 65535
  %cmp1920 = icmp eq i32 %bf.clear1919, 61
  br i1 %cmp1920, label %cond.true.1922, label %cond.false.1923

cond.true.1922:                                   ; preds = %land.lhs.true.1917
  br label %cond.end.1925

cond.false.1923:                                  ; preds = %land.lhs.true.1917
  %991 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %call1924 = call i32 @notreg_cost(%struct.rtx_def* %991, i32 47)
  br label %cond.end.1925

cond.end.1925:                                    ; preds = %cond.false.1923, %cond.true.1922
  %cond1926 = phi i32 [ 0, %cond.true.1922 ], [ %call1924, %cond.false.1923 ]
  %992 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %993 = bitcast %struct.rtx_def* %992 to i32*
  %bf.load1927 = load i32, i32* %993, align 8
  %bf.clear1928 = and i32 %bf.load1927, 65535
  %cmp1929 = icmp eq i32 %bf.clear1928, 61
  br i1 %cmp1929, label %cond.true.1931, label %cond.false.1932

cond.true.1931:                                   ; preds = %cond.end.1925
  br label %cond.end.1934

cond.false.1932:                                  ; preds = %cond.end.1925
  %994 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %call1933 = call i32 @notreg_cost(%struct.rtx_def* %994, i32 47)
  br label %cond.end.1934

cond.end.1934:                                    ; preds = %cond.false.1932, %cond.true.1931
  %cond1935 = phi i32 [ 0, %cond.true.1931 ], [ %call1933, %cond.false.1932 ]
  %cmp1936 = icmp slt i32 %cond1926, %cond1935
  br i1 %cmp1936, label %land.lhs.true.1938, label %if.end.1948

land.lhs.true.1938:                               ; preds = %cond.end.1934
  %995 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %996 = load i32, i32* %i, align 4
  %idxprom1939 = sext i32 %996 to i64
  %997 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1940 = getelementptr inbounds %struct.set, %struct.set* %997, i64 %idxprom1939
  %rtl1941 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1940, i32 0, i32 0
  %998 = load %struct.rtx_def*, %struct.rtx_def** %rtl1941, align 8
  %fld1942 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %998, i32 0, i32 1
  %arrayidx1943 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1942, i32 0, i64 1
  %rtx1944 = bitcast %union.rtunion_def* %arrayidx1943 to %struct.rtx_def**
  %999 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %call1945 = call i32 @validate_change(%struct.rtx_def* %995, %struct.rtx_def** %rtx1944, %struct.rtx_def* %999, i32 0)
  %tobool1946 = icmp ne i32 %call1945, 0
  br i1 %tobool1946, label %if.then.1947, label %if.end.1948

if.then.1947:                                     ; preds = %land.lhs.true.1938
  %1000 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  store %struct.rtx_def* %1000, %struct.rtx_def** %src474, align 8
  br label %if.end.1948

if.end.1948:                                      ; preds = %if.then.1947, %land.lhs.true.1938, %cond.end.1934, %if.then.1915
  br label %if.end.1949

if.end.1949:                                      ; preds = %if.end.1948, %cond.end.1905
  br label %if.end.1950

if.end.1950:                                      ; preds = %if.end.1949, %lor.lhs.false.1869, %lor.lhs.false.1855, %land.lhs.true.1838, %land.lhs.true.1833, %land.lhs.true.1827, %cond.end.1816
  br label %if.end.1951

if.end.1951:                                      ; preds = %if.end.1950, %cond.end.1794, %while.end.1769
  %1001 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1002 = load i32, i32* %i, align 4
  %idxprom1952 = sext i32 %1002 to i64
  %1003 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1953 = getelementptr inbounds %struct.set, %struct.set* %1003, i64 %idxprom1952
  %src1954 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1953, i32 0, i32 1
  %1004 = load %struct.rtx_def*, %struct.rtx_def** %src1954, align 8
  %cmp1955 = icmp ne %struct.rtx_def* %1001, %1004
  br i1 %cmp1955, label %if.then.1957, label %if.end.2012

if.then.1957:                                     ; preds = %if.end.1951
  store i32 1, i32* @cse_altered, align 4
  store i32 0, i32* @do_not_record, align 4
  store i32 0, i32* @hash_arg_in_memory, align 4
  %1005 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1006 = load i32, i32* %i, align 4
  %idxprom1958 = sext i32 %1006 to i64
  %1007 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1959 = getelementptr inbounds %struct.set, %struct.set* %1007, i64 %idxprom1958
  %src1960 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1959, i32 0, i32 1
  store %struct.rtx_def* %1005, %struct.rtx_def** %src1960, align 8
  %1008 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1009 = bitcast %struct.rtx_def* %1008 to i32*
  %bf.load1961 = load i32, i32* %1009, align 8
  %bf.clear1962 = and i32 %bf.load1961, 65535
  %cmp1963 = icmp eq i32 %bf.clear1962, 61
  br i1 %cmp1963, label %land.lhs.true.1965, label %cond.false.1989

land.lhs.true.1965:                               ; preds = %if.then.1957
  %1010 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1010, i32 0, i32 1
  %arrayidx1967 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1966, i32 0, i64 0
  %rtuint1968 = bitcast %union.rtunion_def* %arrayidx1967 to i32*
  %1011 = load i32, i32* %rtuint1968, align 4
  %cmp1969 = icmp uge i32 %1011, 53
  br i1 %cmp1969, label %cond.true.1971, label %cond.false.1989

cond.true.1971:                                   ; preds = %land.lhs.true.1965
  %1012 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1012, i32 0, i32 1
  %arrayidx1973 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1972, i32 0, i64 0
  %rtuint1974 = bitcast %union.rtunion_def* %arrayidx1973 to i32*
  %1013 = load i32, i32* %rtuint1974, align 4
  %1014 = load i32, i32* @cached_regno, align 4
  %cmp1975 = icmp eq i32 %1013, %1014
  br i1 %cmp1975, label %land.lhs.true.1977, label %cond.false.1980

land.lhs.true.1977:                               ; preds = %cond.true.1971
  %1015 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1978 = icmp ne %struct.cse_reg_info* %1015, null
  br i1 %tobool1978, label %cond.true.1979, label %cond.false.1980

cond.true.1979:                                   ; preds = %land.lhs.true.1977
  %1016 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1985

cond.false.1980:                                  ; preds = %land.lhs.true.1977, %cond.true.1971
  %1017 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld1981 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1017, i32 0, i32 1
  %arrayidx1982 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1981, i32 0, i64 0
  %rtuint1983 = bitcast %union.rtunion_def* %arrayidx1982 to i32*
  %1018 = load i32, i32* %rtuint1983, align 4
  %call1984 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1018)
  br label %cond.end.1985

cond.end.1985:                                    ; preds = %cond.false.1980, %cond.true.1979
  %cond1986 = phi %struct.cse_reg_info* [ %1016, %cond.true.1979 ], [ %call1984, %cond.false.1980 ]
  %reg_qty1987 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1986, i32 0, i32 3
  %1019 = load i32, i32* %reg_qty1987, align 4
  %add1988 = add i32 7808, %1019
  br label %cond.end.1991

cond.false.1989:                                  ; preds = %land.lhs.true.1965, %if.then.1957
  %1020 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1021 = load i32, i32* %mode, align 4
  %call1990 = call i32 @canon_hash(%struct.rtx_def* %1020, i32 %1021)
  br label %cond.end.1991

cond.end.1991:                                    ; preds = %cond.false.1989, %cond.end.1985
  %cond1992 = phi i32 [ %add1988, %cond.end.1985 ], [ %call1990, %cond.false.1989 ]
  %and1993 = and i32 %cond1992, 31
  %1022 = load i32, i32* %i, align 4
  %idxprom1994 = sext i32 %1022 to i64
  %1023 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1995 = getelementptr inbounds %struct.set, %struct.set* %1023, i64 %idxprom1994
  %src_hash1996 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1995, i32 0, i32 3
  store i32 %and1993, i32* %src_hash1996, align 4
  %1024 = load i32, i32* @do_not_record, align 4
  %conv1997 = trunc i32 %1024 to i8
  %1025 = load i32, i32* %i, align 4
  %idxprom1998 = sext i32 %1025 to i64
  %1026 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx1999 = getelementptr inbounds %struct.set, %struct.set* %1026, i64 %idxprom1998
  %src_volatile2000 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1999, i32 0, i32 7
  store i8 %conv1997, i8* %src_volatile2000, align 1
  %1027 = load i32, i32* @hash_arg_in_memory, align 4
  %conv2001 = trunc i32 %1027 to i8
  %1028 = load i32, i32* %i, align 4
  %idxprom2002 = sext i32 %1028 to i64
  %1029 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2003 = getelementptr inbounds %struct.set, %struct.set* %1029, i64 %idxprom2002
  %src_in_memory2004 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2003, i32 0, i32 6
  store i8 %conv2001, i8* %src_in_memory2004, align 1
  %1030 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1031 = load i32, i32* %i, align 4
  %idxprom2005 = sext i32 %1031 to i64
  %1032 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2006 = getelementptr inbounds %struct.set, %struct.set* %1032, i64 %idxprom2005
  %src_hash2007 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2006, i32 0, i32 3
  %1033 = load i32, i32* %src_hash2007, align 4
  %1034 = load i32, i32* %mode, align 4
  %call2008 = call %struct.table_elt* @lookup(%struct.rtx_def* %1030, i32 %1033, i32 %1034)
  %1035 = load i32, i32* %i, align 4
  %idxprom2009 = sext i32 %1035 to i64
  %1036 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2010 = getelementptr inbounds %struct.set, %struct.set* %1036, i64 %idxprom2009
  %src_elt2011 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2010, i32 0, i32 2
  store %struct.table_elt* %call2008, %struct.table_elt** %src_elt2011, align 8
  br label %if.end.2012

if.end.2012:                                      ; preds = %cond.end.1991, %if.end.1951
  %1037 = load i32, i32* %n_sets, align 4
  %cmp2013 = icmp eq i32 %1037, 1
  br i1 %cmp2013, label %land.lhs.true.2015, label %if.end.2167

land.lhs.true.2015:                               ; preds = %if.end.2012
  %1038 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %tobool2016 = icmp ne %struct.rtx_def* %1038, null
  br i1 %tobool2016, label %land.lhs.true.2017, label %if.end.2167

land.lhs.true.2017:                               ; preds = %land.lhs.true.2015
  %1039 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1040 = bitcast %struct.rtx_def* %1039 to i32*
  %bf.load2018 = load i32, i32* %1040, align 8
  %bf.clear2019 = and i32 %bf.load2018, 65535
  %cmp2020 = icmp eq i32 %bf.clear2019, 61
  br i1 %cmp2020, label %land.lhs.true.2022, label %if.end.2167

land.lhs.true.2022:                               ; preds = %land.lhs.true.2017
  %1041 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %1042 = bitcast %struct.rtx_def* %1041 to i32*
  %bf.load2023 = load i32, i32* %1042, align 8
  %bf.clear2024 = and i32 %bf.load2023, 65535
  %cmp2025 = icmp ne i32 %bf.clear2024, 61
  br i1 %cmp2025, label %land.lhs.true.2027, label %if.end.2167

land.lhs.true.2027:                               ; preds = %land.lhs.true.2022
  %1043 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %1044 = bitcast %struct.rtx_def* %1043 to i32*
  %bf.load2028 = load i32, i32* %1044, align 8
  %bf.clear2029 = and i32 %bf.load2028, 65535
  %cmp2030 = icmp eq i32 %bf.clear2029, 58
  br i1 %cmp2030, label %land.lhs.true.2032, label %if.then.2062

land.lhs.true.2032:                               ; preds = %land.lhs.true.2027
  %1045 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld2033 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1045, i32 0, i32 1
  %arrayidx2034 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2033, i32 0, i64 0
  %rtx2035 = bitcast %union.rtunion_def* %arrayidx2034 to %struct.rtx_def**
  %1046 = load %struct.rtx_def*, %struct.rtx_def** %rtx2035, align 8
  %1047 = bitcast %struct.rtx_def* %1046 to i32*
  %bf.load2036 = load i32, i32* %1047, align 8
  %bf.clear2037 = and i32 %bf.load2036, 65535
  %cmp2038 = icmp eq i32 %bf.clear2037, 76
  br i1 %cmp2038, label %land.lhs.true.2040, label %if.then.2062

land.lhs.true.2040:                               ; preds = %land.lhs.true.2032
  %1048 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld2041 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1048, i32 0, i32 1
  %arrayidx2042 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2041, i32 0, i64 0
  %rtx2043 = bitcast %union.rtunion_def* %arrayidx2042 to %struct.rtx_def**
  %1049 = load %struct.rtx_def*, %struct.rtx_def** %rtx2043, align 8
  %fld2044 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1049, i32 0, i32 1
  %arrayidx2045 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2044, i32 0, i64 0
  %rtx2046 = bitcast %union.rtunion_def* %arrayidx2045 to %struct.rtx_def**
  %1050 = load %struct.rtx_def*, %struct.rtx_def** %rtx2046, align 8
  %1051 = bitcast %struct.rtx_def* %1050 to i32*
  %bf.load2047 = load i32, i32* %1051, align 8
  %bf.clear2048 = and i32 %bf.load2047, 65535
  %cmp2049 = icmp eq i32 %bf.clear2048, 67
  br i1 %cmp2049, label %land.lhs.true.2051, label %if.then.2062

land.lhs.true.2051:                               ; preds = %land.lhs.true.2040
  %1052 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld2052 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1052, i32 0, i32 1
  %arrayidx2053 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2052, i32 0, i64 0
  %rtx2054 = bitcast %union.rtunion_def* %arrayidx2053 to %struct.rtx_def**
  %1053 = load %struct.rtx_def*, %struct.rtx_def** %rtx2054, align 8
  %fld2055 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1053, i32 0, i32 1
  %arrayidx2056 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2055, i32 0, i64 1
  %rtx2057 = bitcast %union.rtunion_def* %arrayidx2056 to %struct.rtx_def**
  %1054 = load %struct.rtx_def*, %struct.rtx_def** %rtx2057, align 8
  %1055 = bitcast %struct.rtx_def* %1054 to i32*
  %bf.load2058 = load i32, i32* %1055, align 8
  %bf.clear2059 = and i32 %bf.load2058, 65535
  %cmp2060 = icmp eq i32 %bf.clear2059, 67
  br i1 %cmp2060, label %if.end.2167, label %if.then.2062

if.then.2062:                                     ; preds = %land.lhs.true.2051, %land.lhs.true.2040, %land.lhs.true.2032, %land.lhs.true.2027
  %1056 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %call2063 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1056)
  store %struct.rtx_def* %call2063, %struct.rtx_def** %src_const, align 8
  %1057 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %call2064 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %1057, i32 4, %struct.rtx_def* %1058)
  %1059 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2065 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1059, i32 0, i32 1
  %arrayidx2066 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2065, i32 0, i64 0
  %rtuint2067 = bitcast %union.rtunion_def* %arrayidx2066 to i32*
  %1060 = load i32, i32* %rtuint2067, align 4
  %1061 = load i32, i32* @cached_regno, align 4
  %cmp2068 = icmp eq i32 %1060, %1061
  br i1 %cmp2068, label %land.lhs.true.2070, label %cond.false.2073

land.lhs.true.2070:                               ; preds = %if.then.2062
  %1062 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2071 = icmp ne %struct.cse_reg_info* %1062, null
  br i1 %tobool2071, label %cond.true.2072, label %cond.false.2073

cond.true.2072:                                   ; preds = %land.lhs.true.2070
  %1063 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2078

cond.false.2073:                                  ; preds = %land.lhs.true.2070, %if.then.2062
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2074 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1064, i32 0, i32 1
  %arrayidx2075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2074, i32 0, i64 0
  %rtuint2076 = bitcast %union.rtunion_def* %arrayidx2075 to i32*
  %1065 = load i32, i32* %rtuint2076, align 4
  %call2077 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1065)
  br label %cond.end.2078

cond.end.2078:                                    ; preds = %cond.false.2073, %cond.true.2072
  %cond2079 = phi %struct.cse_reg_info* [ %1063, %cond.true.2072 ], [ %call2077, %cond.false.2073 ]
  %reg_qty2080 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2079, i32 0, i32 3
  %1066 = load i32, i32* %reg_qty2080, align 4
  %1067 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2081 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1067, i32 0, i32 1
  %arrayidx2082 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2081, i32 0, i64 0
  %rtuint2083 = bitcast %union.rtunion_def* %arrayidx2082 to i32*
  %1068 = load i32, i32* %rtuint2083, align 4
  %cmp2084 = icmp ne i32 %1066, %1068
  br i1 %cmp2084, label %if.then.2086, label %if.end.2166

if.then.2086:                                     ; preds = %cond.end.2078
  %1069 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2088 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1069, i32 0, i32 1
  %arrayidx2089 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2088, i32 0, i64 0
  %rtuint2090 = bitcast %union.rtunion_def* %arrayidx2089 to i32*
  %1070 = load i32, i32* %rtuint2090, align 4
  %1071 = load i32, i32* @cached_regno, align 4
  %cmp2091 = icmp eq i32 %1070, %1071
  br i1 %cmp2091, label %land.lhs.true.2093, label %cond.false.2096

land.lhs.true.2093:                               ; preds = %if.then.2086
  %1072 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2094 = icmp ne %struct.cse_reg_info* %1072, null
  br i1 %tobool2094, label %cond.true.2095, label %cond.false.2096

cond.true.2095:                                   ; preds = %land.lhs.true.2093
  %1073 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2101

cond.false.2096:                                  ; preds = %land.lhs.true.2093, %if.then.2086
  %1074 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2097 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1074, i32 0, i32 1
  %arrayidx2098 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2097, i32 0, i64 0
  %rtuint2099 = bitcast %union.rtunion_def* %arrayidx2098 to i32*
  %1075 = load i32, i32* %rtuint2099, align 4
  %call2100 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1075)
  br label %cond.end.2101

cond.end.2101:                                    ; preds = %cond.false.2096, %cond.true.2095
  %cond2102 = phi %struct.cse_reg_info* [ %1073, %cond.true.2095 ], [ %call2100, %cond.false.2096 ]
  %reg_qty2103 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2102, i32 0, i32 3
  %1076 = load i32, i32* %reg_qty2103, align 4
  store i32 %1076, i32* %dest_q2087, align 4
  %1077 = load i32, i32* %dest_q2087, align 4
  %idxprom2105 = sext i32 %1077 to i64
  %1078 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx2106 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1078, i64 %idxprom2105
  store %struct.qty_table_elem* %arrayidx2106, %struct.qty_table_elem** %dest_ent2104, align 8
  %1079 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent2104, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1079, i32 0, i32 0
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %1081 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2107 = icmp eq %struct.rtx_def* %1080, %1081
  br i1 %cmp2107, label %if.then.2109, label %if.end.2165

if.then.2109:                                     ; preds = %cond.end.2101
  %1082 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2110 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1082, i32 5, %struct.rtx_def* null)
  store %struct.rtx_def* %call2110, %struct.rtx_def** %note, align 8
  %1083 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent2104, align 8
  %const_insn2111 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1083, i32 0, i32 1
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %const_insn2111, align 8
  store %struct.rtx_def* %1084, %struct.rtx_def** %const_insn, align 8
  %1085 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %1086 = bitcast %struct.rtx_def* %1085 to i32*
  %bf.load2112 = load i32, i32* %1086, align 8
  %bf.clear2113 = and i32 %bf.load2112, 65535
  %idxprom2114 = sext i32 %bf.clear2113 to i64
  %arrayidx2115 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2114
  %1087 = load i8, i8* %arrayidx2115, align 1
  %conv2116 = sext i8 %1087 to i32
  %cmp2117 = icmp eq i32 %conv2116, 105
  br i1 %cmp2117, label %cond.true.2119, label %cond.false.2138

cond.true.2119:                                   ; preds = %if.then.2109
  %1088 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %fld2120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1088, i32 0, i32 1
  %arrayidx2121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2120, i32 0, i64 3
  %rtx2122 = bitcast %union.rtunion_def* %arrayidx2121 to %struct.rtx_def**
  %1089 = load %struct.rtx_def*, %struct.rtx_def** %rtx2122, align 8
  %1090 = bitcast %struct.rtx_def* %1089 to i32*
  %bf.load2123 = load i32, i32* %1090, align 8
  %bf.clear2124 = and i32 %bf.load2123, 65535
  %cmp2125 = icmp eq i32 %bf.clear2124, 47
  br i1 %cmp2125, label %cond.true.2127, label %cond.false.2131

cond.true.2127:                                   ; preds = %cond.true.2119
  %1091 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %fld2128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1091, i32 0, i32 1
  %arrayidx2129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2128, i32 0, i64 3
  %rtx2130 = bitcast %union.rtunion_def* %arrayidx2129 to %struct.rtx_def**
  %1092 = load %struct.rtx_def*, %struct.rtx_def** %rtx2130, align 8
  br label %cond.end.2136

cond.false.2131:                                  ; preds = %cond.true.2119
  %1093 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %1094 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %fld2132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1094, i32 0, i32 1
  %arrayidx2133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2132, i32 0, i64 3
  %rtx2134 = bitcast %union.rtunion_def* %arrayidx2133 to %struct.rtx_def**
  %1095 = load %struct.rtx_def*, %struct.rtx_def** %rtx2134, align 8
  %call2135 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %1093, %struct.rtx_def* %1095)
  br label %cond.end.2136

cond.end.2136:                                    ; preds = %cond.false.2131, %cond.true.2127
  %cond2137 = phi %struct.rtx_def* [ %1092, %cond.true.2127 ], [ %call2135, %cond.false.2131 ]
  br label %cond.end.2139

cond.false.2138:                                  ; preds = %if.then.2109
  br label %cond.end.2139

cond.end.2139:                                    ; preds = %cond.false.2138, %cond.end.2136
  %cond2140 = phi %struct.rtx_def* [ %cond2137, %cond.end.2136 ], [ null, %cond.false.2138 ]
  store %struct.rtx_def* %cond2140, %struct.rtx_def** %tem, align 8
  %cmp2141 = icmp ne %struct.rtx_def* %cond2140, null
  br i1 %cmp2141, label %land.lhs.true.2143, label %if.end.2164

land.lhs.true.2143:                               ; preds = %cond.end.2139
  %1096 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %fld2144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1096, i32 0, i32 1
  %arrayidx2145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2144, i32 0, i64 0
  %rtx2146 = bitcast %union.rtunion_def* %arrayidx2145 to %struct.rtx_def**
  %1097 = load %struct.rtx_def*, %struct.rtx_def** %rtx2146, align 8
  %1098 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %call2147 = call i32 @rtx_equal_p(%struct.rtx_def* %1097, %struct.rtx_def* %1098)
  %tobool2148 = icmp ne i32 %call2147, 0
  br i1 %tobool2148, label %if.then.2149, label %if.end.2164

if.then.2149:                                     ; preds = %land.lhs.true.2143
  %1099 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %tobool2150 = icmp ne %struct.rtx_def* %1099, null
  br i1 %tobool2150, label %if.then.2151, label %if.else.2155

if.then.2151:                                     ; preds = %if.then.2149
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %1101 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8
  %fld2152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1101, i32 0, i32 1
  %arrayidx2153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2152, i32 0, i64 0
  %rtx2154 = bitcast %union.rtunion_def* %arrayidx2153 to %struct.rtx_def**
  store %struct.rtx_def* %1100, %struct.rtx_def** %rtx2154, align 8
  br label %if.end.2163

if.else.2155:                                     ; preds = %if.then.2149
  %1102 = load %struct.rtx_def*, %struct.rtx_def** %const_insn, align 8
  %1103 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1103, i32 0, i32 1
  %arrayidx2157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2156, i32 0, i64 6
  %rtx2158 = bitcast %union.rtunion_def* %arrayidx2157 to %struct.rtx_def**
  %1104 = load %struct.rtx_def*, %struct.rtx_def** %rtx2158, align 8
  %call2159 = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 5, %struct.rtx_def* %1102, %struct.rtx_def* %1104)
  %1105 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1105, i32 0, i32 1
  %arrayidx2161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2160, i32 0, i64 6
  %rtx2162 = bitcast %union.rtunion_def* %arrayidx2161 to %struct.rtx_def**
  store %struct.rtx_def* %call2159, %struct.rtx_def** %rtx2162, align 8
  br label %if.end.2163

if.end.2163:                                      ; preds = %if.else.2155, %if.then.2151
  br label %if.end.2164

if.end.2164:                                      ; preds = %if.end.2163, %land.lhs.true.2143, %cond.end.2139
  br label %if.end.2165

if.end.2165:                                      ; preds = %if.end.2164, %cond.end.2101
  br label %if.end.2166

if.end.2166:                                      ; preds = %if.end.2165, %cond.end.2078
  br label %if.end.2167

if.end.2167:                                      ; preds = %if.end.2166, %land.lhs.true.2051, %land.lhs.true.2022, %land.lhs.true.2017, %land.lhs.true.2015, %if.end.2012
  store i32 0, i32* @do_not_record, align 4
  br label %while.cond.2168

while.cond.2168:                                  ; preds = %while.body.2189, %if.end.2167
  %1106 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1107 = bitcast %struct.rtx_def* %1106 to i32*
  %bf.load2169 = load i32, i32* %1107, align 8
  %bf.clear2170 = and i32 %bf.load2169, 65535
  %cmp2171 = icmp eq i32 %bf.clear2170, 132
  br i1 %cmp2171, label %lor.end.2188, label %lor.lhs.false.2173

lor.lhs.false.2173:                               ; preds = %while.cond.2168
  %1108 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1109 = bitcast %struct.rtx_def* %1108 to i32*
  %bf.load2174 = load i32, i32* %1109, align 8
  %bf.clear2175 = and i32 %bf.load2174, 65535
  %cmp2176 = icmp eq i32 %bf.clear2175, 133
  br i1 %cmp2176, label %lor.end.2188, label %lor.lhs.false.2178

lor.lhs.false.2178:                               ; preds = %lor.lhs.false.2173
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1111 = bitcast %struct.rtx_def* %1110 to i32*
  %bf.load2179 = load i32, i32* %1111, align 8
  %bf.clear2180 = and i32 %bf.load2179, 65535
  %cmp2181 = icmp eq i32 %bf.clear2180, 63
  br i1 %cmp2181, label %lor.end.2188, label %lor.rhs.2183

lor.rhs.2183:                                     ; preds = %lor.lhs.false.2178
  %1112 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1113 = bitcast %struct.rtx_def* %1112 to i32*
  %bf.load2184 = load i32, i32* %1113, align 8
  %bf.clear2185 = and i32 %bf.load2184, 65535
  %cmp2186 = icmp eq i32 %bf.clear2185, 64
  br label %lor.end.2188

lor.end.2188:                                     ; preds = %lor.rhs.2183, %lor.lhs.false.2178, %lor.lhs.false.2173, %while.cond.2168
  %1114 = phi i1 [ true, %lor.lhs.false.2178 ], [ true, %lor.lhs.false.2173 ], [ true, %while.cond.2168 ], [ %cmp2186, %lor.rhs.2183 ]
  br i1 %1114, label %while.body.2189, label %while.end.2193

while.body.2189:                                  ; preds = %lor.end.2188
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1115, i32 0, i32 1
  %arrayidx2191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2190, i32 0, i64 0
  %rtx2192 = bitcast %union.rtunion_def* %arrayidx2191 to %struct.rtx_def**
  %1116 = load %struct.rtx_def*, %struct.rtx_def** %rtx2192, align 8
  store %struct.rtx_def* %1116, %struct.rtx_def** %dest475, align 8
  br label %while.cond.2168

while.end.2193:                                   ; preds = %lor.end.2188
  %1117 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1118 = load i32, i32* %i, align 4
  %idxprom2194 = sext i32 %1118 to i64
  %1119 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2195 = getelementptr inbounds %struct.set, %struct.set* %1119, i64 %idxprom2194
  %inner_dest = getelementptr inbounds %struct.set, %struct.set* %arrayidx2195, i32 0, i32 5
  store %struct.rtx_def* %1117, %struct.rtx_def** %inner_dest, align 8
  %1120 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1121 = bitcast %struct.rtx_def* %1120 to i32*
  %bf.load2196 = load i32, i32* %1121, align 8
  %bf.clear2197 = and i32 %bf.load2196, 65535
  %cmp2198 = icmp eq i32 %bf.clear2197, 66
  br i1 %cmp2198, label %if.then.2200, label %if.end.2223

if.then.2200:                                     ; preds = %while.end.2193
  %1122 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1122, i32 0, i32 1
  %arrayidx2202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2201, i32 0, i64 0
  %rtx2203 = bitcast %union.rtunion_def* %arrayidx2202 to %struct.rtx_def**
  %1123 = load %struct.rtx_def*, %struct.rtx_def** %rtx2203, align 8
  store %struct.rtx_def* %1123, %struct.rtx_def** %addr, align 8
  %1124 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %1125 = bitcast %struct.rtx_def* %1124 to i32*
  %bf.load2204 = load i32, i32* %1125, align 8
  %bf.clear2205 = and i32 %bf.load2204, 65535
  %idxprom2206 = sext i32 %bf.clear2205 to i64
  %arrayidx2207 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom2206
  %1126 = load i8, i8* %arrayidx2207, align 1
  %conv2208 = sext i8 %1126 to i32
  %cmp2209 = icmp eq i32 %conv2208, 97
  br i1 %cmp2209, label %land.lhs.true.2211, label %if.end.2221

land.lhs.true.2211:                               ; preds = %if.then.2200
  %1127 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld2212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1127, i32 0, i32 1
  %arrayidx2213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2212, i32 0, i64 0
  %rtx2214 = bitcast %union.rtunion_def* %arrayidx2213 to %struct.rtx_def**
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %rtx2214, align 8
  %1129 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp2215 = icmp eq %struct.rtx_def* %1128, %1129
  br i1 %cmp2215, label %if.then.2217, label %if.end.2221

if.then.2217:                                     ; preds = %land.lhs.true.2211
  %1130 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %1131 = load i32, i32* @target_flags, align 4
  %and2218 = and i32 %1131, 33554432
  %tobool2219 = icmp ne i32 %and2218, 0
  %cond2220 = select i1 %tobool2219, i32 5, i32 4
  call void @invalidate(%struct.rtx_def* %1130, i32 %cond2220)
  br label %if.end.2221

if.end.2221:                                      ; preds = %if.then.2217, %land.lhs.true.2211, %if.then.2200
  %1132 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1133 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2222 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %1132, %struct.rtx_def* %1133)
  store %struct.rtx_def* %call2222, %struct.rtx_def** %dest475, align 8
  br label %if.end.2223

if.end.2223:                                      ; preds = %if.end.2221, %while.end.2193
  %1134 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1135 = bitcast %struct.rtx_def* %1134 to i32*
  %bf.load2224 = load i32, i32* %1135, align 8
  %bf.clear2225 = and i32 %bf.load2224, 65535
  %cmp2226 = icmp eq i32 %bf.clear2225, 61
  br i1 %cmp2226, label %land.lhs.true.2228, label %cond.false.2252

land.lhs.true.2228:                               ; preds = %if.end.2223
  %1136 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2229 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1136, i32 0, i32 1
  %arrayidx2230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2229, i32 0, i64 0
  %rtuint2231 = bitcast %union.rtunion_def* %arrayidx2230 to i32*
  %1137 = load i32, i32* %rtuint2231, align 4
  %cmp2232 = icmp uge i32 %1137, 53
  br i1 %cmp2232, label %cond.true.2234, label %cond.false.2252

cond.true.2234:                                   ; preds = %land.lhs.true.2228
  %1138 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1138, i32 0, i32 1
  %arrayidx2236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2235, i32 0, i64 0
  %rtuint2237 = bitcast %union.rtunion_def* %arrayidx2236 to i32*
  %1139 = load i32, i32* %rtuint2237, align 4
  %1140 = load i32, i32* @cached_regno, align 4
  %cmp2238 = icmp eq i32 %1139, %1140
  br i1 %cmp2238, label %land.lhs.true.2240, label %cond.false.2243

land.lhs.true.2240:                               ; preds = %cond.true.2234
  %1141 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2241 = icmp ne %struct.cse_reg_info* %1141, null
  br i1 %tobool2241, label %cond.true.2242, label %cond.false.2243

cond.true.2242:                                   ; preds = %land.lhs.true.2240
  %1142 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2248

cond.false.2243:                                  ; preds = %land.lhs.true.2240, %cond.true.2234
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1143, i32 0, i32 1
  %arrayidx2245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2244, i32 0, i64 0
  %rtuint2246 = bitcast %union.rtunion_def* %arrayidx2245 to i32*
  %1144 = load i32, i32* %rtuint2246, align 4
  %call2247 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1144)
  br label %cond.end.2248

cond.end.2248:                                    ; preds = %cond.false.2243, %cond.true.2242
  %cond2249 = phi %struct.cse_reg_info* [ %1142, %cond.true.2242 ], [ %call2247, %cond.false.2243 ]
  %reg_qty2250 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2249, i32 0, i32 3
  %1145 = load i32, i32* %reg_qty2250, align 4
  %add2251 = add i32 7808, %1145
  br label %cond.end.2254

cond.false.2252:                                  ; preds = %land.lhs.true.2228, %if.end.2223
  %1146 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1147 = load i32, i32* %mode, align 4
  %call2253 = call i32 @canon_hash(%struct.rtx_def* %1146, i32 %1147)
  br label %cond.end.2254

cond.end.2254:                                    ; preds = %cond.false.2252, %cond.end.2248
  %cond2255 = phi i32 [ %add2251, %cond.end.2248 ], [ %call2253, %cond.false.2252 ]
  %and2256 = and i32 %cond2255, 31
  %1148 = load i32, i32* %i, align 4
  %idxprom2257 = sext i32 %1148 to i64
  %1149 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2258 = getelementptr inbounds %struct.set, %struct.set* %1149, i64 %idxprom2257
  %dest_hash = getelementptr inbounds %struct.set, %struct.set* %arrayidx2258, i32 0, i32 4
  store i32 %and2256, i32* %dest_hash, align 4
  %1150 = load i32, i32* %i, align 4
  %idxprom2259 = sext i32 %1150 to i64
  %1151 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2260 = getelementptr inbounds %struct.set, %struct.set* %1151, i64 %idxprom2259
  %rtl2261 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2260, i32 0, i32 0
  %1152 = load %struct.rtx_def*, %struct.rtx_def** %rtl2261, align 8
  %fld2262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1152, i32 0, i32 1
  %arrayidx2263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2262, i32 0, i64 0
  %rtx2264 = bitcast %union.rtunion_def* %arrayidx2263 to %struct.rtx_def**
  %1153 = load %struct.rtx_def*, %struct.rtx_def** %rtx2264, align 8
  %1154 = bitcast %struct.rtx_def* %1153 to i32*
  %bf.load2265 = load i32, i32* %1154, align 8
  %bf.clear2266 = and i32 %bf.load2265, 65535
  %cmp2267 = icmp eq i32 %bf.clear2266, 133
  br i1 %cmp2267, label %if.then.2280, label %lor.lhs.false.2269

lor.lhs.false.2269:                               ; preds = %cond.end.2254
  %1155 = load i32, i32* %i, align 4
  %idxprom2270 = sext i32 %1155 to i64
  %1156 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2271 = getelementptr inbounds %struct.set, %struct.set* %1156, i64 %idxprom2270
  %rtl2272 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2271, i32 0, i32 0
  %1157 = load %struct.rtx_def*, %struct.rtx_def** %rtl2272, align 8
  %fld2273 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1157, i32 0, i32 1
  %arrayidx2274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2273, i32 0, i64 0
  %rtx2275 = bitcast %union.rtunion_def* %arrayidx2274 to %struct.rtx_def**
  %1158 = load %struct.rtx_def*, %struct.rtx_def** %rtx2275, align 8
  %1159 = bitcast %struct.rtx_def* %1158 to i32*
  %bf.load2276 = load i32, i32* %1159, align 8
  %bf.clear2277 = and i32 %bf.load2276, 65535
  %cmp2278 = icmp eq i32 %bf.clear2277, 132
  br i1 %cmp2278, label %if.then.2280, label %if.else.2325

if.then.2280:                                     ; preds = %lor.lhs.false.2269, %cond.end.2254
  %1160 = load i32, i32* %i, align 4
  %idxprom2281 = sext i32 %1160 to i64
  %1161 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2282 = getelementptr inbounds %struct.set, %struct.set* %1161, i64 %idxprom2281
  %rtl2283 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2282, i32 0, i32 0
  %1162 = load %struct.rtx_def*, %struct.rtx_def** %rtl2283, align 8
  %fld2284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1162, i32 0, i32 1
  %arrayidx2285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2284, i32 0, i64 0
  %rtx2286 = bitcast %union.rtunion_def* %arrayidx2285 to %struct.rtx_def**
  %1163 = load %struct.rtx_def*, %struct.rtx_def** %rtx2286, align 8
  %fld2287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1163, i32 0, i32 1
  %arrayidx2288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2287, i32 0, i64 1
  %rtx2289 = bitcast %union.rtunion_def* %arrayidx2288 to %struct.rtx_def**
  %1164 = load %struct.rtx_def*, %struct.rtx_def** %rtx2289, align 8
  store %struct.rtx_def* %1164, %struct.rtx_def** %width, align 8
  %1165 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %cmp2290 = icmp ne %struct.rtx_def* %1165, null
  br i1 %cmp2290, label %land.lhs.true.2292, label %if.else.2317

land.lhs.true.2292:                               ; preds = %if.then.2280
  %1166 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %1167 = bitcast %struct.rtx_def* %1166 to i32*
  %bf.load2293 = load i32, i32* %1167, align 8
  %bf.clear2294 = and i32 %bf.load2293, 65535
  %cmp2295 = icmp eq i32 %bf.clear2294, 54
  br i1 %cmp2295, label %land.lhs.true.2297, label %if.else.2317

land.lhs.true.2297:                               ; preds = %land.lhs.true.2292
  %1168 = load %struct.rtx_def*, %struct.rtx_def** %width, align 8
  %1169 = bitcast %struct.rtx_def* %1168 to i32*
  %bf.load2298 = load i32, i32* %1169, align 8
  %bf.clear2299 = and i32 %bf.load2298, 65535
  %cmp2300 = icmp eq i32 %bf.clear2299, 54
  br i1 %cmp2300, label %land.lhs.true.2302, label %if.else.2317

land.lhs.true.2302:                               ; preds = %land.lhs.true.2297
  %1170 = load %struct.rtx_def*, %struct.rtx_def** %width, align 8
  %fld2303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1170, i32 0, i32 1
  %arrayidx2304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2303, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx2304 to i64*
  %1171 = load i64, i64* %rtwint, align 8
  %cmp2305 = icmp slt i64 %1171, 64
  br i1 %cmp2305, label %land.lhs.true.2307, label %if.else.2317

land.lhs.true.2307:                               ; preds = %land.lhs.true.2302
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8
  %fld2308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1172, i32 0, i32 1
  %arrayidx2309 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2308, i32 0, i64 0
  %rtwint2310 = bitcast %union.rtunion_def* %arrayidx2309 to i64*
  %1173 = load i64, i64* %rtwint2310, align 8
  %1174 = load %struct.rtx_def*, %struct.rtx_def** %width, align 8
  %fld2311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1174, i32 0, i32 1
  %arrayidx2312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2311, i32 0, i64 0
  %rtwint2313 = bitcast %union.rtunion_def* %arrayidx2312 to i64*
  %1175 = load i64, i64* %rtwint2313, align 8
  %shl = shl i64 -1, %1175
  %and2314 = and i64 %1173, %shl
  %tobool2315 = icmp ne i64 %and2314, 0
  br i1 %tobool2315, label %if.else.2317, label %if.then.2316

if.then.2316:                                     ; preds = %land.lhs.true.2307
  br label %if.end.2324

if.else.2317:                                     ; preds = %land.lhs.true.2307, %land.lhs.true.2302, %land.lhs.true.2297, %land.lhs.true.2292, %if.then.2280
  %1176 = load i32, i32* %i, align 4
  %idxprom2318 = sext i32 %1176 to i64
  %1177 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2319 = getelementptr inbounds %struct.set, %struct.set* %1177, i64 %idxprom2318
  %src_elt2320 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2319, i32 0, i32 2
  store %struct.table_elt* null, %struct.table_elt** %src_elt2320, align 8
  %1178 = load i32, i32* %i, align 4
  %idxprom2321 = sext i32 %1178 to i64
  %1179 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2322 = getelementptr inbounds %struct.set, %struct.set* %1179, i64 %idxprom2321
  %src_volatile2323 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2322, i32 0, i32 7
  store i8 1, i8* %src_volatile2323, align 1
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv, align 8
  store %struct.table_elt* null, %struct.table_elt** %src_eqv_elt, align 8
  br label %if.end.2324

if.end.2324:                                      ; preds = %if.else.2317, %if.then.2316
  br label %if.end.2461

if.else.2325:                                     ; preds = %lor.lhs.false.2269
  %1180 = load i32, i32* %n_sets, align 4
  %cmp2326 = icmp eq i32 %1180, 1
  br i1 %cmp2326, label %land.lhs.true.2328, label %if.else.2339

land.lhs.true.2328:                               ; preds = %if.else.2325
  %1181 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1182 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp2329 = icmp eq %struct.rtx_def* %1181, %1182
  br i1 %cmp2329, label %land.lhs.true.2331, label %if.else.2339

land.lhs.true.2331:                               ; preds = %land.lhs.true.2328
  %1183 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1184 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp2332 = icmp eq %struct.rtx_def* %1183, %1184
  br i1 %cmp2332, label %if.then.2334, label %if.else.2339

if.then.2334:                                     ; preds = %land.lhs.true.2331
  %1185 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2335 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %1185)
  store i32 1, i32* @cse_jumps_altered, align 4
  %1186 = load i32, i32* %i, align 4
  %idxprom2336 = sext i32 %1186 to i64
  %1187 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2337 = getelementptr inbounds %struct.set, %struct.set* %1187, i64 %idxprom2336
  %rtl2338 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2337, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2338, align 8
  br label %if.end.2460

if.else.2339:                                     ; preds = %land.lhs.true.2331, %land.lhs.true.2328, %if.else.2325
  %1188 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1189 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp2340 = icmp eq %struct.rtx_def* %1188, %1189
  br i1 %cmp2340, label %land.lhs.true.2342, label %if.else.2410

land.lhs.true.2342:                               ; preds = %if.else.2339
  %1190 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %1191 = bitcast %struct.rtx_def* %1190 to i32*
  %bf.load2343 = load i32, i32* %1191, align 8
  %bf.clear2344 = and i32 %bf.load2343, 65535
  %cmp2345 = icmp eq i32 %bf.clear2344, 67
  br i1 %cmp2345, label %if.then.2347, label %if.else.2410

if.then.2347:                                     ; preds = %land.lhs.true.2342
  %1192 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1192, i32 0, i32 1
  %arrayidx2349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2348, i32 0, i64 2
  %rtx2350 = bitcast %union.rtunion_def* %arrayidx2349 to %struct.rtx_def**
  %1193 = load %struct.rtx_def*, %struct.rtx_def** %rtx2350, align 8
  %cmp2351 = icmp eq %struct.rtx_def* %1193, null
  br i1 %cmp2351, label %if.then.2361, label %lor.lhs.false.2353

lor.lhs.false.2353:                               ; preds = %if.then.2347
  %1194 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1194, i32 0, i32 1
  %arrayidx2355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2354, i32 0, i64 2
  %rtx2356 = bitcast %union.rtunion_def* %arrayidx2355 to %struct.rtx_def**
  %1195 = load %struct.rtx_def*, %struct.rtx_def** %rtx2356, align 8
  %1196 = bitcast %struct.rtx_def* %1195 to i32*
  %bf.load2357 = load i32, i32* %1196, align 8
  %bf.clear2358 = and i32 %bf.load2357, 65535
  %cmp2359 = icmp ne i32 %bf.clear2358, 35
  br i1 %cmp2359, label %if.then.2361, label %if.end.2363

if.then.2361:                                     ; preds = %lor.lhs.false.2353, %if.then.2347
  %1197 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2362 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %1197)
  br label %if.end.2363

if.end.2363:                                      ; preds = %if.then.2361, %lor.lhs.false.2353
  %1198 = load i32, i32* %n_sets, align 4
  %cmp2364 = icmp eq i32 %1198, 1
  br i1 %cmp2364, label %if.then.2366, label %if.else.2402

if.then.2366:                                     ; preds = %if.end.2363
  %1199 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld2368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1199, i32 0, i32 1
  %arrayidx2369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2368, i32 0, i64 0
  %rtx2370 = bitcast %union.rtunion_def* %arrayidx2369 to %struct.rtx_def**
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %rtx2370, align 8
  %call2371 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %1200)
  %1201 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2372 = call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call2371, %struct.rtx_def* %1201)
  store %struct.rtx_def* %call2372, %struct.rtx_def** %new2367, align 8
  %1202 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld2373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1202, i32 0, i32 1
  %arrayidx2374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2373, i32 0, i64 0
  %rtx2375 = bitcast %union.rtunion_def* %arrayidx2374 to %struct.rtx_def**
  %1203 = load %struct.rtx_def*, %struct.rtx_def** %rtx2375, align 8
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %new2367, align 8
  %fld2376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1204, i32 0, i32 1
  %arrayidx2377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2376, i32 0, i64 7
  %rtx2378 = bitcast %union.rtunion_def* %arrayidx2377 to %struct.rtx_def**
  store %struct.rtx_def* %1203, %struct.rtx_def** %rtx2378, align 8
  %1205 = load %struct.rtx_def*, %struct.rtx_def** %src474, align 8
  %fld2379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1205, i32 0, i32 1
  %arrayidx2380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2379, i32 0, i64 0
  %rtx2381 = bitcast %union.rtunion_def* %arrayidx2380 to %struct.rtx_def**
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %rtx2381, align 8
  %fld2382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1206, i32 0, i32 1
  %arrayidx2383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2382, i32 0, i64 3
  %rtint2384 = bitcast %union.rtunion_def* %arrayidx2383 to i32*
  %1207 = load i32, i32* %rtint2384, align 4
  %inc2385 = add nsw i32 %1207, 1
  store i32 %inc2385, i32* %rtint2384, align 4
  %1208 = load %struct.rtx_def*, %struct.rtx_def** %new2367, align 8
  store %struct.rtx_def* %1208, %struct.rtx_def** %insn.addr, align 8
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1209, i32 0, i32 1
  %arrayidx2387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2386, i32 0, i64 2
  %rtx2388 = bitcast %union.rtunion_def* %arrayidx2387 to %struct.rtx_def**
  %1210 = load %struct.rtx_def*, %struct.rtx_def** %rtx2388, align 8
  %cmp2389 = icmp eq %struct.rtx_def* %1210, null
  br i1 %cmp2389, label %if.then.2399, label %lor.lhs.false.2391

lor.lhs.false.2391:                               ; preds = %if.then.2366
  %1211 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1211, i32 0, i32 1
  %arrayidx2393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2392, i32 0, i64 2
  %rtx2394 = bitcast %union.rtunion_def* %arrayidx2393 to %struct.rtx_def**
  %1212 = load %struct.rtx_def*, %struct.rtx_def** %rtx2394, align 8
  %1213 = bitcast %struct.rtx_def* %1212 to i32*
  %bf.load2395 = load i32, i32* %1213, align 8
  %bf.clear2396 = and i32 %bf.load2395, 65535
  %cmp2397 = icmp ne i32 %bf.clear2396, 35
  br i1 %cmp2397, label %if.then.2399, label %if.end.2401

if.then.2399:                                     ; preds = %lor.lhs.false.2391, %if.then.2366
  %1214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2400 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %1214)
  br label %if.end.2401

if.end.2401:                                      ; preds = %if.then.2399, %lor.lhs.false.2391
  br label %if.end.2406

if.else.2402:                                     ; preds = %if.end.2363
  %1215 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2403 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1215, i32 0, i32 1
  %arrayidx2404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2403, i32 0, i64 4
  %rtint2405 = bitcast %union.rtunion_def* %arrayidx2404 to i32*
  store i32 -1, i32* %rtint2405, align 4
  br label %if.end.2406

if.end.2406:                                      ; preds = %if.else.2402, %if.end.2401
  %1216 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @never_reached_warning(%struct.rtx_def* %1216, %struct.rtx_def* null)
  store i32 1, i32* @cse_jumps_altered, align 4
  %1217 = load i32, i32* %i, align 4
  %idxprom2407 = sext i32 %1217 to i64
  %1218 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2408 = getelementptr inbounds %struct.set, %struct.set* %1218, i64 %idxprom2407
  %rtl2409 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2408, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2409, align 8
  br label %if.end.2459

if.else.2410:                                     ; preds = %land.lhs.true.2342, %if.else.2339
  %1219 = load i32, i32* @do_not_record, align 4
  %tobool2411 = icmp ne i32 %1219, 0
  br i1 %tobool2411, label %if.then.2412, label %if.end.2458

if.then.2412:                                     ; preds = %if.else.2410
  %1220 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1221 = bitcast %struct.rtx_def* %1220 to i32*
  %bf.load2413 = load i32, i32* %1221, align 8
  %bf.clear2414 = and i32 %bf.load2413, 65535
  %cmp2415 = icmp eq i32 %bf.clear2414, 61
  br i1 %cmp2415, label %if.then.2422, label %lor.lhs.false.2417

lor.lhs.false.2417:                               ; preds = %if.then.2412
  %1222 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1223 = bitcast %struct.rtx_def* %1222 to i32*
  %bf.load2418 = load i32, i32* %1223, align 8
  %bf.clear2419 = and i32 %bf.load2418, 65535
  %cmp2420 = icmp eq i32 %bf.clear2419, 63
  br i1 %cmp2420, label %if.then.2422, label %if.else.2423

if.then.2422:                                     ; preds = %lor.lhs.false.2417, %if.then.2412
  %1224 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  call void @invalidate(%struct.rtx_def* %1224, i32 0)
  br label %if.end.2454

if.else.2423:                                     ; preds = %lor.lhs.false.2417
  %1225 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1226 = bitcast %struct.rtx_def* %1225 to i32*
  %bf.load2424 = load i32, i32* %1226, align 8
  %bf.clear2425 = and i32 %bf.load2424, 65535
  %cmp2426 = icmp eq i32 %bf.clear2425, 66
  br i1 %cmp2426, label %if.then.2428, label %if.else.2435

if.then.2428:                                     ; preds = %if.else.2423
  %1227 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %tobool2429 = icmp ne %struct.rtx_def* %1227, null
  br i1 %tobool2429, label %lor.lhs.false.2430, label %if.then.2433

lor.lhs.false.2430:                               ; preds = %if.then.2428
  %1228 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1229 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %cmp2431 = icmp eq %struct.rtx_def* %1228, %1229
  br i1 %cmp2431, label %if.then.2433, label %if.end.2434

if.then.2433:                                     ; preds = %lor.lhs.false.2430, %if.then.2428
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  call void @invalidate(%struct.rtx_def* %1230, i32 0)
  br label %if.end.2434

if.end.2434:                                      ; preds = %if.then.2433, %lor.lhs.false.2430
  br label %if.end.2453

if.else.2435:                                     ; preds = %if.else.2423
  %1231 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1232 = bitcast %struct.rtx_def* %1231 to i32*
  %bf.load2436 = load i32, i32* %1232, align 8
  %bf.clear2437 = and i32 %bf.load2436, 65535
  %cmp2438 = icmp eq i32 %bf.clear2437, 64
  br i1 %cmp2438, label %if.then.2445, label %lor.lhs.false.2440

lor.lhs.false.2440:                               ; preds = %if.else.2435
  %1233 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1234 = bitcast %struct.rtx_def* %1233 to i32*
  %bf.load2441 = load i32, i32* %1234, align 8
  %bf.clear2442 = and i32 %bf.load2441, 65535
  %cmp2443 = icmp eq i32 %bf.clear2442, 133
  br i1 %cmp2443, label %if.then.2445, label %if.end.2452

if.then.2445:                                     ; preds = %lor.lhs.false.2440, %if.else.2435
  %1235 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %fld2446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1235, i32 0, i32 1
  %arrayidx2447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2446, i32 0, i64 0
  %rtx2448 = bitcast %union.rtunion_def* %arrayidx2447 to %struct.rtx_def**
  %1236 = load %struct.rtx_def*, %struct.rtx_def** %rtx2448, align 8
  %1237 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1238 = bitcast %struct.rtx_def* %1237 to i32*
  %bf.load2449 = load i32, i32* %1238, align 8
  %bf.lshr2450 = lshr i32 %bf.load2449, 16
  %bf.clear2451 = and i32 %bf.lshr2450, 255
  call void @invalidate(%struct.rtx_def* %1236, i32 %bf.clear2451)
  br label %if.end.2452

if.end.2452:                                      ; preds = %if.then.2445, %lor.lhs.false.2440
  br label %if.end.2453

if.end.2453:                                      ; preds = %if.end.2452, %if.end.2434
  br label %if.end.2454

if.end.2454:                                      ; preds = %if.end.2453, %if.then.2422
  %1239 = load i32, i32* %i, align 4
  %idxprom2455 = sext i32 %1239 to i64
  %1240 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2456 = getelementptr inbounds %struct.set, %struct.set* %1240, i64 %idxprom2455
  %rtl2457 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2456, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2457, align 8
  br label %if.end.2458

if.end.2458:                                      ; preds = %if.end.2454, %if.else.2410
  br label %if.end.2459

if.end.2459:                                      ; preds = %if.end.2458, %if.end.2406
  br label %if.end.2460

if.end.2460:                                      ; preds = %if.end.2459, %if.then.2334
  br label %if.end.2461

if.end.2461:                                      ; preds = %if.end.2460, %if.end.2324
  %1241 = load i32, i32* %i, align 4
  %idxprom2462 = sext i32 %1241 to i64
  %1242 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2463 = getelementptr inbounds %struct.set, %struct.set* %1242, i64 %idxprom2462
  %rtl2464 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2463, i32 0, i32 0
  %1243 = load %struct.rtx_def*, %struct.rtx_def** %rtl2464, align 8
  %cmp2465 = icmp ne %struct.rtx_def* %1243, null
  br i1 %cmp2465, label %land.lhs.true.2467, label %if.end.2543

land.lhs.true.2467:                               ; preds = %if.end.2461
  %1244 = load %struct.rtx_def*, %struct.rtx_def** %dest475, align 8
  %1245 = load i32, i32* %i, align 4
  %idxprom2468 = sext i32 %1245 to i64
  %1246 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2469 = getelementptr inbounds %struct.set, %struct.set* %1246, i64 %idxprom2468
  %rtl2470 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2469, i32 0, i32 0
  %1247 = load %struct.rtx_def*, %struct.rtx_def** %rtl2470, align 8
  %fld2471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1247, i32 0, i32 1
  %arrayidx2472 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2471, i32 0, i64 0
  %rtx2473 = bitcast %union.rtunion_def* %arrayidx2472 to %struct.rtx_def**
  %1248 = load %struct.rtx_def*, %struct.rtx_def** %rtx2473, align 8
  %cmp2474 = icmp ne %struct.rtx_def* %1244, %1248
  br i1 %cmp2474, label %if.then.2476, label %if.end.2543

if.then.2476:                                     ; preds = %land.lhs.true.2467
  %1249 = load i32, i32* %i, align 4
  %idxprom2477 = sext i32 %1249 to i64
  %1250 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2478 = getelementptr inbounds %struct.set, %struct.set* %1250, i64 %idxprom2477
  %rtl2479 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2478, i32 0, i32 0
  %1251 = load %struct.rtx_def*, %struct.rtx_def** %rtl2479, align 8
  %fld2480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1251, i32 0, i32 1
  %arrayidx2481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2480, i32 0, i64 0
  %rtx2482 = bitcast %union.rtunion_def* %arrayidx2481 to %struct.rtx_def**
  %1252 = load %struct.rtx_def*, %struct.rtx_def** %rtx2482, align 8
  %1253 = bitcast %struct.rtx_def* %1252 to i32*
  %bf.load2483 = load i32, i32* %1253, align 8
  %bf.clear2484 = and i32 %bf.load2483, 65535
  %cmp2485 = icmp eq i32 %bf.clear2484, 61
  br i1 %cmp2485, label %land.lhs.true.2487, label %cond.false.2529

land.lhs.true.2487:                               ; preds = %if.then.2476
  %1254 = load i32, i32* %i, align 4
  %idxprom2488 = sext i32 %1254 to i64
  %1255 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2489 = getelementptr inbounds %struct.set, %struct.set* %1255, i64 %idxprom2488
  %rtl2490 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2489, i32 0, i32 0
  %1256 = load %struct.rtx_def*, %struct.rtx_def** %rtl2490, align 8
  %fld2491 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1256, i32 0, i32 1
  %arrayidx2492 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2491, i32 0, i64 0
  %rtx2493 = bitcast %union.rtunion_def* %arrayidx2492 to %struct.rtx_def**
  %1257 = load %struct.rtx_def*, %struct.rtx_def** %rtx2493, align 8
  %fld2494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1257, i32 0, i32 1
  %arrayidx2495 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2494, i32 0, i64 0
  %rtuint2496 = bitcast %union.rtunion_def* %arrayidx2495 to i32*
  %1258 = load i32, i32* %rtuint2496, align 4
  %cmp2497 = icmp uge i32 %1258, 53
  br i1 %cmp2497, label %cond.true.2499, label %cond.false.2529

cond.true.2499:                                   ; preds = %land.lhs.true.2487
  %1259 = load i32, i32* %i, align 4
  %idxprom2500 = sext i32 %1259 to i64
  %1260 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2501 = getelementptr inbounds %struct.set, %struct.set* %1260, i64 %idxprom2500
  %rtl2502 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2501, i32 0, i32 0
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %rtl2502, align 8
  %fld2503 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1261, i32 0, i32 1
  %arrayidx2504 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2503, i32 0, i64 0
  %rtx2505 = bitcast %union.rtunion_def* %arrayidx2504 to %struct.rtx_def**
  %1262 = load %struct.rtx_def*, %struct.rtx_def** %rtx2505, align 8
  %fld2506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1262, i32 0, i32 1
  %arrayidx2507 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2506, i32 0, i64 0
  %rtuint2508 = bitcast %union.rtunion_def* %arrayidx2507 to i32*
  %1263 = load i32, i32* %rtuint2508, align 4
  %1264 = load i32, i32* @cached_regno, align 4
  %cmp2509 = icmp eq i32 %1263, %1264
  br i1 %cmp2509, label %land.lhs.true.2511, label %cond.false.2514

land.lhs.true.2511:                               ; preds = %cond.true.2499
  %1265 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2512 = icmp ne %struct.cse_reg_info* %1265, null
  br i1 %tobool2512, label %cond.true.2513, label %cond.false.2514

cond.true.2513:                                   ; preds = %land.lhs.true.2511
  %1266 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2525

cond.false.2514:                                  ; preds = %land.lhs.true.2511, %cond.true.2499
  %1267 = load i32, i32* %i, align 4
  %idxprom2515 = sext i32 %1267 to i64
  %1268 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2516 = getelementptr inbounds %struct.set, %struct.set* %1268, i64 %idxprom2515
  %rtl2517 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2516, i32 0, i32 0
  %1269 = load %struct.rtx_def*, %struct.rtx_def** %rtl2517, align 8
  %fld2518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1269, i32 0, i32 1
  %arrayidx2519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2518, i32 0, i64 0
  %rtx2520 = bitcast %union.rtunion_def* %arrayidx2519 to %struct.rtx_def**
  %1270 = load %struct.rtx_def*, %struct.rtx_def** %rtx2520, align 8
  %fld2521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1270, i32 0, i32 1
  %arrayidx2522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2521, i32 0, i64 0
  %rtuint2523 = bitcast %union.rtunion_def* %arrayidx2522 to i32*
  %1271 = load i32, i32* %rtuint2523, align 4
  %call2524 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1271)
  br label %cond.end.2525

cond.end.2525:                                    ; preds = %cond.false.2514, %cond.true.2513
  %cond2526 = phi %struct.cse_reg_info* [ %1266, %cond.true.2513 ], [ %call2524, %cond.false.2514 ]
  %reg_qty2527 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2526, i32 0, i32 3
  %1272 = load i32, i32* %reg_qty2527, align 4
  %add2528 = add i32 7808, %1272
  br label %cond.end.2537

cond.false.2529:                                  ; preds = %land.lhs.true.2487, %if.then.2476
  %1273 = load i32, i32* %i, align 4
  %idxprom2530 = sext i32 %1273 to i64
  %1274 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2531 = getelementptr inbounds %struct.set, %struct.set* %1274, i64 %idxprom2530
  %rtl2532 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2531, i32 0, i32 0
  %1275 = load %struct.rtx_def*, %struct.rtx_def** %rtl2532, align 8
  %fld2533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1275, i32 0, i32 1
  %arrayidx2534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2533, i32 0, i64 0
  %rtx2535 = bitcast %union.rtunion_def* %arrayidx2534 to %struct.rtx_def**
  %1276 = load %struct.rtx_def*, %struct.rtx_def** %rtx2535, align 8
  %1277 = load i32, i32* %mode, align 4
  %call2536 = call i32 @canon_hash(%struct.rtx_def* %1276, i32 %1277)
  br label %cond.end.2537

cond.end.2537:                                    ; preds = %cond.false.2529, %cond.end.2525
  %cond2538 = phi i32 [ %add2528, %cond.end.2525 ], [ %call2536, %cond.false.2529 ]
  %and2539 = and i32 %cond2538, 31
  %1278 = load i32, i32* %i, align 4
  %idxprom2540 = sext i32 %1278 to i64
  %1279 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2541 = getelementptr inbounds %struct.set, %struct.set* %1279, i64 %idxprom2540
  %dest_hash2542 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2541, i32 0, i32 4
  store i32 %and2539, i32* %dest_hash2542, align 4
  br label %if.end.2543

if.end.2543:                                      ; preds = %cond.end.2537, %land.lhs.true.2467, %if.end.2461
  br label %for.inc.2544

for.inc.2544:                                     ; preds = %if.end.2543
  %1280 = load i32, i32* %i, align 4
  %inc2545 = add nsw i32 %1280, 1
  store i32 %inc2545, i32* %i, align 4
  br label %for.cond.470

for.end.2546:                                     ; preds = %for.cond.470
  %1281 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %tobool2547 = icmp ne %struct.rtx_def* %1281, null
  br i1 %tobool2547, label %land.lhs.true.2548, label %if.end.2665

land.lhs.true.2548:                               ; preds = %for.end.2546
  %1282 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %cmp2549 = icmp eq %struct.table_elt* %1282, null
  br i1 %cmp2549, label %land.lhs.true.2551, label %if.end.2665

land.lhs.true.2551:                               ; preds = %land.lhs.true.2548
  %1283 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2552 = getelementptr inbounds %struct.set, %struct.set* %1283, i64 0
  %rtl2553 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2552, i32 0, i32 0
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %rtl2553, align 8
  %cmp2554 = icmp ne %struct.rtx_def* %1284, null
  br i1 %cmp2554, label %land.lhs.true.2556, label %if.end.2665

land.lhs.true.2556:                               ; preds = %land.lhs.true.2551
  %1285 = load i32, i32* %src_eqv_volatile, align 4
  %tobool2557 = icmp ne i32 %1285, 0
  br i1 %tobool2557, label %if.end.2665, label %land.lhs.true.2558

land.lhs.true.2558:                               ; preds = %land.lhs.true.2556
  %1286 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %1287 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2559 = getelementptr inbounds %struct.set, %struct.set* %1287, i64 0
  %rtl2560 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2559, i32 0, i32 0
  %1288 = load %struct.rtx_def*, %struct.rtx_def** %rtl2560, align 8
  %fld2561 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1288, i32 0, i32 1
  %arrayidx2562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2561, i32 0, i64 0
  %rtx2563 = bitcast %union.rtunion_def* %arrayidx2562 to %struct.rtx_def**
  %1289 = load %struct.rtx_def*, %struct.rtx_def** %rtx2563, align 8
  %call2564 = call i32 @rtx_equal_p(%struct.rtx_def* %1286, %struct.rtx_def* %1289)
  %tobool2565 = icmp ne i32 %call2564, 0
  br i1 %tobool2565, label %if.end.2665, label %if.then.2566

if.then.2566:                                     ; preds = %land.lhs.true.2558
  %1290 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2568 = getelementptr inbounds %struct.set, %struct.set* %1290, i64 0
  %src_elt2569 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2568, i32 0, i32 2
  %1291 = load %struct.table_elt*, %struct.table_elt** %src_elt2569, align 8
  store %struct.table_elt* %1291, %struct.table_elt** %classp, align 8
  %1292 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2571 = getelementptr inbounds %struct.set, %struct.set* %1292, i64 0
  %rtl2572 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2571, i32 0, i32 0
  %1293 = load %struct.rtx_def*, %struct.rtx_def** %rtl2572, align 8
  %fld2573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1293, i32 0, i32 1
  %arrayidx2574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2573, i32 0, i64 0
  %rtx2575 = bitcast %union.rtunion_def* %arrayidx2574 to %struct.rtx_def**
  %1294 = load %struct.rtx_def*, %struct.rtx_def** %rtx2575, align 8
  store %struct.rtx_def* %1294, %struct.rtx_def** %dest2570, align 8
  %1295 = load %struct.rtx_def*, %struct.rtx_def** %dest2570, align 8
  %1296 = bitcast %struct.rtx_def* %1295 to i32*
  %bf.load2577 = load i32, i32* %1296, align 8
  %bf.lshr2578 = lshr i32 %bf.load2577, 16
  %bf.clear2579 = and i32 %bf.lshr2578, 255
  store i32 %bf.clear2579, i32* %eqvmode2576, align 4
  %1297 = load %struct.rtx_def*, %struct.rtx_def** %dest2570, align 8
  %1298 = bitcast %struct.rtx_def* %1297 to i32*
  %bf.load2580 = load i32, i32* %1298, align 8
  %bf.clear2581 = and i32 %bf.load2580, 65535
  %cmp2582 = icmp eq i32 %bf.clear2581, 64
  br i1 %cmp2582, label %if.then.2584, label %if.end.2594

if.then.2584:                                     ; preds = %if.then.2566
  %1299 = load %struct.rtx_def*, %struct.rtx_def** %dest2570, align 8
  %fld2585 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1299, i32 0, i32 1
  %arrayidx2586 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2585, i32 0, i64 0
  %rtx2587 = bitcast %union.rtunion_def* %arrayidx2586 to %struct.rtx_def**
  %1300 = load %struct.rtx_def*, %struct.rtx_def** %rtx2587, align 8
  %fld2588 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1300, i32 0, i32 1
  %arrayidx2589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2588, i32 0, i64 0
  %rtx2590 = bitcast %union.rtunion_def* %arrayidx2589 to %struct.rtx_def**
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %rtx2590, align 8
  %1302 = bitcast %struct.rtx_def* %1301 to i32*
  %bf.load2591 = load i32, i32* %1302, align 8
  %bf.lshr2592 = lshr i32 %bf.load2591, 16
  %bf.clear2593 = and i32 %bf.lshr2592, 255
  store i32 %bf.clear2593, i32* %eqvmode2576, align 4
  store %struct.table_elt* null, %struct.table_elt** %classp, align 8
  br label %if.end.2594

if.end.2594:                                      ; preds = %if.then.2584, %if.then.2566
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %1304 = load %struct.table_elt*, %struct.table_elt** %classp, align 8
  %call2595 = call i32 @insert_regs(%struct.rtx_def* %1303, %struct.table_elt* %1304, i32 0)
  %tobool2596 = icmp ne i32 %call2595, 0
  br i1 %tobool2596, label %if.then.2597, label %if.end.2631

if.then.2597:                                     ; preds = %if.end.2594
  %1305 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  call void @rehash_using_reg(%struct.rtx_def* %1305)
  %1306 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %1307 = bitcast %struct.rtx_def* %1306 to i32*
  %bf.load2598 = load i32, i32* %1307, align 8
  %bf.clear2599 = and i32 %bf.load2598, 65535
  %cmp2600 = icmp eq i32 %bf.clear2599, 61
  br i1 %cmp2600, label %land.lhs.true.2602, label %cond.false.2626

land.lhs.true.2602:                               ; preds = %if.then.2597
  %1308 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld2603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1308, i32 0, i32 1
  %arrayidx2604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2603, i32 0, i64 0
  %rtuint2605 = bitcast %union.rtunion_def* %arrayidx2604 to i32*
  %1309 = load i32, i32* %rtuint2605, align 4
  %cmp2606 = icmp uge i32 %1309, 53
  br i1 %cmp2606, label %cond.true.2608, label %cond.false.2626

cond.true.2608:                                   ; preds = %land.lhs.true.2602
  %1310 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld2609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1310, i32 0, i32 1
  %arrayidx2610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2609, i32 0, i64 0
  %rtuint2611 = bitcast %union.rtunion_def* %arrayidx2610 to i32*
  %1311 = load i32, i32* %rtuint2611, align 4
  %1312 = load i32, i32* @cached_regno, align 4
  %cmp2612 = icmp eq i32 %1311, %1312
  br i1 %cmp2612, label %land.lhs.true.2614, label %cond.false.2617

land.lhs.true.2614:                               ; preds = %cond.true.2608
  %1313 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2615 = icmp ne %struct.cse_reg_info* %1313, null
  br i1 %tobool2615, label %cond.true.2616, label %cond.false.2617

cond.true.2616:                                   ; preds = %land.lhs.true.2614
  %1314 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2622

cond.false.2617:                                  ; preds = %land.lhs.true.2614, %cond.true.2608
  %1315 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %fld2618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1315, i32 0, i32 1
  %arrayidx2619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2618, i32 0, i64 0
  %rtuint2620 = bitcast %union.rtunion_def* %arrayidx2619 to i32*
  %1316 = load i32, i32* %rtuint2620, align 4
  %call2621 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1316)
  br label %cond.end.2622

cond.end.2622:                                    ; preds = %cond.false.2617, %cond.true.2616
  %cond2623 = phi %struct.cse_reg_info* [ %1314, %cond.true.2616 ], [ %call2621, %cond.false.2617 ]
  %reg_qty2624 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2623, i32 0, i32 3
  %1317 = load i32, i32* %reg_qty2624, align 4
  %add2625 = add i32 7808, %1317
  br label %cond.end.2628

cond.false.2626:                                  ; preds = %land.lhs.true.2602, %if.then.2597
  %1318 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %1319 = load i32, i32* %eqvmode2576, align 4
  %call2627 = call i32 @canon_hash(%struct.rtx_def* %1318, i32 %1319)
  br label %cond.end.2628

cond.end.2628:                                    ; preds = %cond.false.2626, %cond.end.2622
  %cond2629 = phi i32 [ %add2625, %cond.end.2622 ], [ %call2627, %cond.false.2626 ]
  %and2630 = and i32 %cond2629, 31
  store i32 %and2630, i32* %src_eqv_hash, align 4
  br label %if.end.2631

if.end.2631:                                      ; preds = %cond.end.2628, %if.end.2594
  %1320 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %1321 = load %struct.table_elt*, %struct.table_elt** %classp, align 8
  %1322 = load i32, i32* %src_eqv_hash, align 4
  %1323 = load i32, i32* %eqvmode2576, align 4
  %call2632 = call %struct.table_elt* @insert(%struct.rtx_def* %1320, %struct.table_elt* %1321, i32 %1322, i32 %1323)
  store %struct.table_elt* %call2632, %struct.table_elt** %elt2567, align 8
  %1324 = load i32, i32* %src_eqv_in_memory, align 4
  %conv2633 = trunc i32 %1324 to i8
  %1325 = load %struct.table_elt*, %struct.table_elt** %elt2567, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1325, i32 0, i32 11
  store i8 %conv2633, i8* %in_memory, align 1
  %1326 = load %struct.table_elt*, %struct.table_elt** %elt2567, align 8
  store %struct.table_elt* %1326, %struct.table_elt** %src_eqv_elt, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.2634

for.cond.2634:                                    ; preds = %for.inc.2662, %if.end.2631
  %1327 = load i32, i32* %i, align 4
  %1328 = load i32, i32* %n_sets, align 4
  %cmp2635 = icmp slt i32 %1327, %1328
  br i1 %cmp2635, label %for.body.2637, label %for.end.2664

for.body.2637:                                    ; preds = %for.cond.2634
  %1329 = load i32, i32* %i, align 4
  %idxprom2638 = sext i32 %1329 to i64
  %1330 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2639 = getelementptr inbounds %struct.set, %struct.set* %1330, i64 %idxprom2638
  %rtl2640 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2639, i32 0, i32 0
  %1331 = load %struct.rtx_def*, %struct.rtx_def** %rtl2640, align 8
  %tobool2641 = icmp ne %struct.rtx_def* %1331, null
  br i1 %tobool2641, label %land.lhs.true.2642, label %if.end.2661

land.lhs.true.2642:                               ; preds = %for.body.2637
  %1332 = load i32, i32* %i, align 4
  %idxprom2643 = sext i32 %1332 to i64
  %1333 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2644 = getelementptr inbounds %struct.set, %struct.set* %1333, i64 %idxprom2643
  %src_elt2645 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2644, i32 0, i32 2
  %1334 = load %struct.table_elt*, %struct.table_elt** %src_elt2645, align 8
  %cmp2646 = icmp eq %struct.table_elt* %1334, null
  br i1 %cmp2646, label %land.lhs.true.2648, label %if.end.2661

land.lhs.true.2648:                               ; preds = %land.lhs.true.2642
  %1335 = load i32, i32* %i, align 4
  %idxprom2649 = sext i32 %1335 to i64
  %1336 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2650 = getelementptr inbounds %struct.set, %struct.set* %1336, i64 %idxprom2649
  %rtl2651 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2650, i32 0, i32 0
  %1337 = load %struct.rtx_def*, %struct.rtx_def** %rtl2651, align 8
  %fld2652 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1337, i32 0, i32 1
  %arrayidx2653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2652, i32 0, i64 1
  %rtx2654 = bitcast %union.rtunion_def* %arrayidx2653 to %struct.rtx_def**
  %1338 = load %struct.rtx_def*, %struct.rtx_def** %rtx2654, align 8
  %1339 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8
  %call2655 = call i32 @rtx_equal_p(%struct.rtx_def* %1338, %struct.rtx_def* %1339)
  %tobool2656 = icmp ne i32 %call2655, 0
  br i1 %tobool2656, label %if.then.2657, label %if.end.2661

if.then.2657:                                     ; preds = %land.lhs.true.2648
  %1340 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %1341 = load i32, i32* %i, align 4
  %idxprom2658 = sext i32 %1341 to i64
  %1342 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2659 = getelementptr inbounds %struct.set, %struct.set* %1342, i64 %idxprom2658
  %src_elt2660 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2659, i32 0, i32 2
  store %struct.table_elt* %1340, %struct.table_elt** %src_elt2660, align 8
  br label %if.end.2661

if.end.2661:                                      ; preds = %if.then.2657, %land.lhs.true.2648, %land.lhs.true.2642, %for.body.2637
  br label %for.inc.2662

for.inc.2662:                                     ; preds = %if.end.2661
  %1343 = load i32, i32* %i, align 4
  %inc2663 = add nsw i32 %1343, 1
  store i32 %inc2663, i32* %i, align 4
  br label %for.cond.2634

for.end.2664:                                     ; preds = %for.cond.2634
  br label %if.end.2665

if.end.2665:                                      ; preds = %for.end.2664, %land.lhs.true.2558, %land.lhs.true.2556, %land.lhs.true.2551, %land.lhs.true.2548, %for.end.2546
  store i32 0, i32* %i, align 4
  br label %for.cond.2666

for.cond.2666:                                    ; preds = %for.inc.2855, %if.end.2665
  %1344 = load i32, i32* %i, align 4
  %1345 = load i32, i32* %n_sets, align 4
  %cmp2667 = icmp slt i32 %1344, %1345
  br i1 %cmp2667, label %for.body.2669, label %for.end.2857

for.body.2669:                                    ; preds = %for.cond.2666
  %1346 = load i32, i32* %i, align 4
  %idxprom2670 = sext i32 %1346 to i64
  %1347 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2671 = getelementptr inbounds %struct.set, %struct.set* %1347, i64 %idxprom2670
  %rtl2672 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2671, i32 0, i32 0
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %rtl2672, align 8
  %tobool2673 = icmp ne %struct.rtx_def* %1348, null
  br i1 %tobool2673, label %land.lhs.true.2674, label %if.else.2843

land.lhs.true.2674:                               ; preds = %for.body.2669
  %1349 = load i32, i32* %i, align 4
  %idxprom2675 = sext i32 %1349 to i64
  %1350 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2676 = getelementptr inbounds %struct.set, %struct.set* %1350, i64 %idxprom2675
  %src_volatile2677 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2676, i32 0, i32 7
  %1351 = load i8, i8* %src_volatile2677, align 1
  %tobool2678 = icmp ne i8 %1351, 0
  br i1 %tobool2678, label %if.else.2843, label %land.lhs.true.2679

land.lhs.true.2679:                               ; preds = %land.lhs.true.2674
  %1352 = load i32, i32* %i, align 4
  %idxprom2680 = sext i32 %1352 to i64
  %1353 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2681 = getelementptr inbounds %struct.set, %struct.set* %1353, i64 %idxprom2680
  %rtl2682 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2681, i32 0, i32 0
  %1354 = load %struct.rtx_def*, %struct.rtx_def** %rtl2682, align 8
  %fld2683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1354, i32 0, i32 1
  %arrayidx2684 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2683, i32 0, i64 1
  %rtx2685 = bitcast %union.rtunion_def* %arrayidx2684 to %struct.rtx_def**
  %1355 = load %struct.rtx_def*, %struct.rtx_def** %rtx2685, align 8
  %1356 = load i32, i32* %i, align 4
  %idxprom2686 = sext i32 %1356 to i64
  %1357 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2687 = getelementptr inbounds %struct.set, %struct.set* %1357, i64 %idxprom2686
  %rtl2688 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2687, i32 0, i32 0
  %1358 = load %struct.rtx_def*, %struct.rtx_def** %rtl2688, align 8
  %fld2689 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1358, i32 0, i32 1
  %arrayidx2690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2689, i32 0, i64 0
  %rtx2691 = bitcast %union.rtunion_def* %arrayidx2690 to %struct.rtx_def**
  %1359 = load %struct.rtx_def*, %struct.rtx_def** %rtx2691, align 8
  %call2692 = call i32 @rtx_equal_p(%struct.rtx_def* %1355, %struct.rtx_def* %1359)
  %tobool2693 = icmp ne i32 %call2692, 0
  br i1 %tobool2693, label %if.else.2843, label %if.then.2694

if.then.2694:                                     ; preds = %land.lhs.true.2679
  %1360 = load i32, i32* %i, align 4
  %idxprom2695 = sext i32 %1360 to i64
  %1361 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2696 = getelementptr inbounds %struct.set, %struct.set* %1361, i64 %idxprom2695
  %rtl2697 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2696, i32 0, i32 0
  %1362 = load %struct.rtx_def*, %struct.rtx_def** %rtl2697, align 8
  %fld2698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1362, i32 0, i32 1
  %arrayidx2699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2698, i32 0, i64 0
  %rtx2700 = bitcast %union.rtunion_def* %arrayidx2699 to %struct.rtx_def**
  %1363 = load %struct.rtx_def*, %struct.rtx_def** %rtx2700, align 8
  %1364 = bitcast %struct.rtx_def* %1363 to i32*
  %bf.load2701 = load i32, i32* %1364, align 8
  %bf.clear2702 = and i32 %bf.load2701, 65535
  %cmp2703 = icmp eq i32 %bf.clear2702, 64
  br i1 %cmp2703, label %if.then.2705, label %if.else.2712

if.then.2705:                                     ; preds = %if.then.2694
  %1365 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %1366 = load i32, i32* %i, align 4
  %idxprom2706 = sext i32 %1366 to i64
  %1367 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2707 = getelementptr inbounds %struct.set, %struct.set* %1367, i64 %idxprom2706
  %src_elt2708 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2707, i32 0, i32 2
  store %struct.table_elt* %1365, %struct.table_elt** %src_elt2708, align 8
  %1368 = load i32, i32* %src_eqv_hash, align 4
  %1369 = load i32, i32* %i, align 4
  %idxprom2709 = sext i32 %1369 to i64
  %1370 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2710 = getelementptr inbounds %struct.set, %struct.set* %1370, i64 %idxprom2709
  %src_hash2711 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2710, i32 0, i32 3
  store i32 %1368, i32* %src_hash2711, align 4
  br label %if.end.2842

if.else.2712:                                     ; preds = %if.then.2694
  %1371 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  store %struct.table_elt* %1371, %struct.table_elt** %classp2713, align 8
  %1372 = load i32, i32* %i, align 4
  %idxprom2715 = sext i32 %1372 to i64
  %1373 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2716 = getelementptr inbounds %struct.set, %struct.set* %1373, i64 %idxprom2715
  %src2717 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2716, i32 0, i32 1
  %1374 = load %struct.rtx_def*, %struct.rtx_def** %src2717, align 8
  store %struct.rtx_def* %1374, %struct.rtx_def** %src2714, align 8
  %1375 = load i32, i32* %i, align 4
  %idxprom2719 = sext i32 %1375 to i64
  %1376 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2720 = getelementptr inbounds %struct.set, %struct.set* %1376, i64 %idxprom2719
  %rtl2721 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2720, i32 0, i32 0
  %1377 = load %struct.rtx_def*, %struct.rtx_def** %rtl2721, align 8
  %fld2722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1377, i32 0, i32 1
  %arrayidx2723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2722, i32 0, i64 0
  %rtx2724 = bitcast %union.rtunion_def* %arrayidx2723 to %struct.rtx_def**
  %1378 = load %struct.rtx_def*, %struct.rtx_def** %rtx2724, align 8
  store %struct.rtx_def* %1378, %struct.rtx_def** %dest2718, align 8
  %1379 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1380 = bitcast %struct.rtx_def* %1379 to i32*
  %bf.load2726 = load i32, i32* %1380, align 8
  %bf.lshr2727 = lshr i32 %bf.load2726, 16
  %bf.clear2728 = and i32 %bf.lshr2727, 255
  %cmp2729 = icmp eq i32 %bf.clear2728, 0
  br i1 %cmp2729, label %cond.true.2731, label %cond.false.2735

cond.true.2731:                                   ; preds = %if.else.2712
  %1381 = load %struct.rtx_def*, %struct.rtx_def** %dest2718, align 8
  %1382 = bitcast %struct.rtx_def* %1381 to i32*
  %bf.load2732 = load i32, i32* %1382, align 8
  %bf.lshr2733 = lshr i32 %bf.load2732, 16
  %bf.clear2734 = and i32 %bf.lshr2733, 255
  br label %cond.end.2739

cond.false.2735:                                  ; preds = %if.else.2712
  %1383 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1384 = bitcast %struct.rtx_def* %1383 to i32*
  %bf.load2736 = load i32, i32* %1384, align 8
  %bf.lshr2737 = lshr i32 %bf.load2736, 16
  %bf.clear2738 = and i32 %bf.lshr2737, 255
  br label %cond.end.2739

cond.end.2739:                                    ; preds = %cond.false.2735, %cond.true.2731
  %cond2740 = phi i32 [ %bf.clear2734, %cond.true.2731 ], [ %bf.clear2738, %cond.false.2735 ]
  store i32 %cond2740, i32* %mode2725, align 4
  %1385 = load i32, i32* %i, align 4
  %idxprom2741 = sext i32 %1385 to i64
  %1386 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2742 = getelementptr inbounds %struct.set, %struct.set* %1386, i64 %idxprom2741
  %src_elt2743 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2742, i32 0, i32 2
  %1387 = load %struct.table_elt*, %struct.table_elt** %src_elt2743, align 8
  %cmp2744 = icmp eq %struct.table_elt* %1387, null
  br i1 %cmp2744, label %if.then.2746, label %if.end.2807

if.then.2746:                                     ; preds = %cond.end.2739
  %1388 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2747 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1388, i32 6, %struct.rtx_def* null)
  %tobool2748 = icmp ne %struct.rtx_def* %call2747, null
  br i1 %tobool2748, label %if.else.2802, label %if.then.2749

if.then.2749:                                     ; preds = %if.then.2746
  %1389 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1390 = load %struct.table_elt*, %struct.table_elt** %classp2713, align 8
  %call2751 = call i32 @insert_regs(%struct.rtx_def* %1389, %struct.table_elt* %1390, i32 0)
  %tobool2752 = icmp ne i32 %call2751, 0
  br i1 %tobool2752, label %if.then.2753, label %if.end.2790

if.then.2753:                                     ; preds = %if.then.2749
  %1391 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  call void @rehash_using_reg(%struct.rtx_def* %1391)
  %1392 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1393 = bitcast %struct.rtx_def* %1392 to i32*
  %bf.load2754 = load i32, i32* %1393, align 8
  %bf.clear2755 = and i32 %bf.load2754, 65535
  %cmp2756 = icmp eq i32 %bf.clear2755, 61
  br i1 %cmp2756, label %land.lhs.true.2758, label %cond.false.2782

land.lhs.true.2758:                               ; preds = %if.then.2753
  %1394 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %fld2759 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1394, i32 0, i32 1
  %arrayidx2760 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2759, i32 0, i64 0
  %rtuint2761 = bitcast %union.rtunion_def* %arrayidx2760 to i32*
  %1395 = load i32, i32* %rtuint2761, align 4
  %cmp2762 = icmp uge i32 %1395, 53
  br i1 %cmp2762, label %cond.true.2764, label %cond.false.2782

cond.true.2764:                                   ; preds = %land.lhs.true.2758
  %1396 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %fld2765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1396, i32 0, i32 1
  %arrayidx2766 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2765, i32 0, i64 0
  %rtuint2767 = bitcast %union.rtunion_def* %arrayidx2766 to i32*
  %1397 = load i32, i32* %rtuint2767, align 4
  %1398 = load i32, i32* @cached_regno, align 4
  %cmp2768 = icmp eq i32 %1397, %1398
  br i1 %cmp2768, label %land.lhs.true.2770, label %cond.false.2773

land.lhs.true.2770:                               ; preds = %cond.true.2764
  %1399 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2771 = icmp ne %struct.cse_reg_info* %1399, null
  br i1 %tobool2771, label %cond.true.2772, label %cond.false.2773

cond.true.2772:                                   ; preds = %land.lhs.true.2770
  %1400 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2778

cond.false.2773:                                  ; preds = %land.lhs.true.2770, %cond.true.2764
  %1401 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %fld2774 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1401, i32 0, i32 1
  %arrayidx2775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2774, i32 0, i64 0
  %rtuint2776 = bitcast %union.rtunion_def* %arrayidx2775 to i32*
  %1402 = load i32, i32* %rtuint2776, align 4
  %call2777 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1402)
  br label %cond.end.2778

cond.end.2778:                                    ; preds = %cond.false.2773, %cond.true.2772
  %cond2779 = phi %struct.cse_reg_info* [ %1400, %cond.true.2772 ], [ %call2777, %cond.false.2773 ]
  %reg_qty2780 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2779, i32 0, i32 3
  %1403 = load i32, i32* %reg_qty2780, align 4
  %add2781 = add i32 7808, %1403
  br label %cond.end.2784

cond.false.2782:                                  ; preds = %land.lhs.true.2758, %if.then.2753
  %1404 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1405 = load i32, i32* %mode2725, align 4
  %call2783 = call i32 @canon_hash(%struct.rtx_def* %1404, i32 %1405)
  br label %cond.end.2784

cond.end.2784:                                    ; preds = %cond.false.2782, %cond.end.2778
  %cond2785 = phi i32 [ %add2781, %cond.end.2778 ], [ %call2783, %cond.false.2782 ]
  %and2786 = and i32 %cond2785, 31
  %1406 = load i32, i32* %i, align 4
  %idxprom2787 = sext i32 %1406 to i64
  %1407 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2788 = getelementptr inbounds %struct.set, %struct.set* %1407, i64 %idxprom2787
  %src_hash2789 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2788, i32 0, i32 3
  store i32 %and2786, i32* %src_hash2789, align 4
  br label %if.end.2790

if.end.2790:                                      ; preds = %cond.end.2784, %if.then.2749
  %1408 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1409 = load %struct.table_elt*, %struct.table_elt** %classp2713, align 8
  %1410 = load i32, i32* %i, align 4
  %idxprom2791 = sext i32 %1410 to i64
  %1411 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2792 = getelementptr inbounds %struct.set, %struct.set* %1411, i64 %idxprom2791
  %src_hash2793 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2792, i32 0, i32 3
  %1412 = load i32, i32* %src_hash2793, align 4
  %1413 = load i32, i32* %mode2725, align 4
  %call2794 = call %struct.table_elt* @insert(%struct.rtx_def* %1408, %struct.table_elt* %1409, i32 %1412, i32 %1413)
  store %struct.table_elt* %call2794, %struct.table_elt** %elt2750, align 8
  %1414 = load i32, i32* %i, align 4
  %idxprom2795 = sext i32 %1414 to i64
  %1415 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2796 = getelementptr inbounds %struct.set, %struct.set* %1415, i64 %idxprom2795
  %src_in_memory2797 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2796, i32 0, i32 6
  %1416 = load i8, i8* %src_in_memory2797, align 1
  %1417 = load %struct.table_elt*, %struct.table_elt** %elt2750, align 8
  %in_memory2798 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1417, i32 0, i32 11
  store i8 %1416, i8* %in_memory2798, align 1
  %1418 = load %struct.table_elt*, %struct.table_elt** %elt2750, align 8
  store %struct.table_elt* %1418, %struct.table_elt** %classp2713, align 8
  %1419 = load i32, i32* %i, align 4
  %idxprom2799 = sext i32 %1419 to i64
  %1420 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2800 = getelementptr inbounds %struct.set, %struct.set* %1420, i64 %idxprom2799
  %src_elt2801 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2800, i32 0, i32 2
  store %struct.table_elt* %1418, %struct.table_elt** %src_elt2801, align 8
  br label %if.end.2806

if.else.2802:                                     ; preds = %if.then.2746
  %1421 = load %struct.table_elt*, %struct.table_elt** %classp2713, align 8
  %1422 = load i32, i32* %i, align 4
  %idxprom2803 = sext i32 %1422 to i64
  %1423 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2804 = getelementptr inbounds %struct.set, %struct.set* %1423, i64 %idxprom2803
  %src_elt2805 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2804, i32 0, i32 2
  store %struct.table_elt* %1421, %struct.table_elt** %src_elt2805, align 8
  br label %if.end.2806

if.end.2806:                                      ; preds = %if.else.2802, %if.end.2790
  br label %if.end.2807

if.end.2807:                                      ; preds = %if.end.2806, %cond.end.2739
  %1424 = load i32, i32* %i, align 4
  %idxprom2808 = sext i32 %1424 to i64
  %1425 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2809 = getelementptr inbounds %struct.set, %struct.set* %1425, i64 %idxprom2808
  %src_const2810 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2809, i32 0, i32 9
  %1426 = load %struct.rtx_def*, %struct.rtx_def** %src_const2810, align 8
  %tobool2811 = icmp ne %struct.rtx_def* %1426, null
  br i1 %tobool2811, label %land.lhs.true.2812, label %if.end.2841

land.lhs.true.2812:                               ; preds = %if.end.2807
  %1427 = load i32, i32* %i, align 4
  %idxprom2813 = sext i32 %1427 to i64
  %1428 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2814 = getelementptr inbounds %struct.set, %struct.set* %1428, i64 %idxprom2813
  %src_const_elt2815 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2814, i32 0, i32 12
  %1429 = load %struct.table_elt*, %struct.table_elt** %src_const_elt2815, align 8
  %cmp2816 = icmp eq %struct.table_elt* %1429, null
  br i1 %cmp2816, label %land.lhs.true.2818, label %if.end.2841

land.lhs.true.2818:                               ; preds = %land.lhs.true.2812
  %1430 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %1431 = load i32, i32* %i, align 4
  %idxprom2819 = sext i32 %1431 to i64
  %1432 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2820 = getelementptr inbounds %struct.set, %struct.set* %1432, i64 %idxprom2819
  %src_const2821 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2820, i32 0, i32 9
  %1433 = load %struct.rtx_def*, %struct.rtx_def** %src_const2821, align 8
  %cmp2822 = icmp ne %struct.rtx_def* %1430, %1433
  br i1 %cmp2822, label %land.lhs.true.2824, label %if.end.2841

land.lhs.true.2824:                               ; preds = %land.lhs.true.2818
  %1434 = load i32, i32* %i, align 4
  %idxprom2825 = sext i32 %1434 to i64
  %1435 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2826 = getelementptr inbounds %struct.set, %struct.set* %1435, i64 %idxprom2825
  %src_const2827 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2826, i32 0, i32 9
  %1436 = load %struct.rtx_def*, %struct.rtx_def** %src_const2827, align 8
  %1437 = load %struct.rtx_def*, %struct.rtx_def** %src2714, align 8
  %call2828 = call i32 @rtx_equal_p(%struct.rtx_def* %1436, %struct.rtx_def* %1437)
  %tobool2829 = icmp ne i32 %call2828, 0
  br i1 %tobool2829, label %if.end.2841, label %if.then.2830

if.then.2830:                                     ; preds = %land.lhs.true.2824
  %1438 = load i32, i32* %i, align 4
  %idxprom2831 = sext i32 %1438 to i64
  %1439 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2832 = getelementptr inbounds %struct.set, %struct.set* %1439, i64 %idxprom2831
  %src_const2833 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2832, i32 0, i32 9
  %1440 = load %struct.rtx_def*, %struct.rtx_def** %src_const2833, align 8
  %1441 = load %struct.table_elt*, %struct.table_elt** %classp2713, align 8
  %1442 = load i32, i32* %i, align 4
  %idxprom2834 = sext i32 %1442 to i64
  %1443 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2835 = getelementptr inbounds %struct.set, %struct.set* %1443, i64 %idxprom2834
  %src_const_hash2836 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2835, i32 0, i32 11
  %1444 = load i32, i32* %src_const_hash2836, align 4
  %1445 = load i32, i32* %mode2725, align 4
  %call2837 = call %struct.table_elt* @insert(%struct.rtx_def* %1440, %struct.table_elt* %1441, i32 %1444, i32 %1445)
  %1446 = load i32, i32* %i, align 4
  %idxprom2838 = sext i32 %1446 to i64
  %1447 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2839 = getelementptr inbounds %struct.set, %struct.set* %1447, i64 %idxprom2838
  %src_elt2840 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2839, i32 0, i32 2
  store %struct.table_elt* %call2837, %struct.table_elt** %src_elt2840, align 8
  br label %if.end.2841

if.end.2841:                                      ; preds = %if.then.2830, %land.lhs.true.2824, %land.lhs.true.2818, %land.lhs.true.2812, %if.end.2807
  br label %if.end.2842

if.end.2842:                                      ; preds = %if.end.2841, %if.then.2705
  br label %if.end.2854

if.else.2843:                                     ; preds = %land.lhs.true.2679, %land.lhs.true.2674, %for.body.2669
  %1448 = load i32, i32* %i, align 4
  %idxprom2844 = sext i32 %1448 to i64
  %1449 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2845 = getelementptr inbounds %struct.set, %struct.set* %1449, i64 %idxprom2844
  %src_elt2846 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2845, i32 0, i32 2
  %1450 = load %struct.table_elt*, %struct.table_elt** %src_elt2846, align 8
  %cmp2847 = icmp eq %struct.table_elt* %1450, null
  br i1 %cmp2847, label %if.then.2849, label %if.end.2853

if.then.2849:                                     ; preds = %if.else.2843
  %1451 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8
  %1452 = load i32, i32* %i, align 4
  %idxprom2850 = sext i32 %1452 to i64
  %1453 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2851 = getelementptr inbounds %struct.set, %struct.set* %1453, i64 %idxprom2850
  %src_elt2852 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2851, i32 0, i32 2
  store %struct.table_elt* %1451, %struct.table_elt** %src_elt2852, align 8
  br label %if.end.2853

if.end.2853:                                      ; preds = %if.then.2849, %if.else.2843
  br label %if.end.2854

if.end.2854:                                      ; preds = %if.end.2853, %if.end.2842
  br label %for.inc.2855

for.inc.2855:                                     ; preds = %if.end.2854
  %1454 = load i32, i32* %i, align 4
  %inc2856 = add nsw i32 %1454, 1
  store i32 %inc2856, i32* %i, align 4
  br label %for.cond.2666

for.end.2857:                                     ; preds = %for.cond.2666
  %1455 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  call void @invalidate_from_clobbers(%struct.rtx_def* %1455)
  %1456 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1457 = bitcast %struct.rtx_def* %1456 to i32*
  %bf.load2858 = load i32, i32* %1457, align 8
  %bf.clear2859 = and i32 %bf.load2858, 65535
  %cmp2860 = icmp eq i32 %bf.clear2859, 34
  br i1 %cmp2860, label %if.then.2862, label %if.end.2869

if.then.2862:                                     ; preds = %for.end.2857
  %1458 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1459 = bitcast %struct.rtx_def* %1458 to i32*
  %bf.load2863 = load i32, i32* %1459, align 8
  %bf.lshr2864 = lshr i32 %bf.load2863, 26
  %bf.clear2865 = and i32 %bf.lshr2864, 1
  %tobool2866 = icmp ne i32 %bf.clear2865, 0
  br i1 %tobool2866, label %if.end.2868, label %if.then.2867

if.then.2867:                                     ; preds = %if.then.2862
  call void @invalidate_memory()
  br label %if.end.2868

if.end.2868:                                      ; preds = %if.then.2867, %if.then.2862
  call void @invalidate_for_call()
  br label %if.end.2869

if.end.2869:                                      ; preds = %if.end.2868, %for.end.2857
  store i32 0, i32* %i, align 4
  br label %for.cond.2870

for.cond.2870:                                    ; preds = %for.inc.2929, %if.end.2869
  %1460 = load i32, i32* %i, align 4
  %1461 = load i32, i32* %n_sets, align 4
  %cmp2871 = icmp slt i32 %1460, %1461
  br i1 %cmp2871, label %for.body.2873, label %for.end.2931

for.body.2873:                                    ; preds = %for.cond.2870
  %1462 = load i32, i32* %i, align 4
  %idxprom2874 = sext i32 %1462 to i64
  %1463 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2875 = getelementptr inbounds %struct.set, %struct.set* %1463, i64 %idxprom2874
  %rtl2876 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2875, i32 0, i32 0
  %1464 = load %struct.rtx_def*, %struct.rtx_def** %rtl2876, align 8
  %tobool2877 = icmp ne %struct.rtx_def* %1464, null
  br i1 %tobool2877, label %if.then.2878, label %if.end.2928

if.then.2878:                                     ; preds = %for.body.2873
  %1465 = load i32, i32* %i, align 4
  %idxprom2880 = sext i32 %1465 to i64
  %1466 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2881 = getelementptr inbounds %struct.set, %struct.set* %1466, i64 %idxprom2880
  %rtl2882 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2881, i32 0, i32 0
  %1467 = load %struct.rtx_def*, %struct.rtx_def** %rtl2882, align 8
  %fld2883 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1467, i32 0, i32 1
  %arrayidx2884 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2883, i32 0, i64 0
  %rtx2885 = bitcast %union.rtunion_def* %arrayidx2884 to %struct.rtx_def**
  %1468 = load %struct.rtx_def*, %struct.rtx_def** %rtx2885, align 8
  store %struct.rtx_def* %1468, %struct.rtx_def** %dest2879, align 8
  %1469 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1470 = bitcast %struct.rtx_def* %1469 to i32*
  %bf.load2886 = load i32, i32* %1470, align 8
  %bf.clear2887 = and i32 %bf.load2886, 65535
  %cmp2888 = icmp eq i32 %bf.clear2887, 61
  br i1 %cmp2888, label %if.then.2895, label %lor.lhs.false.2890

lor.lhs.false.2890:                               ; preds = %if.then.2878
  %1471 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1472 = bitcast %struct.rtx_def* %1471 to i32*
  %bf.load2891 = load i32, i32* %1472, align 8
  %bf.clear2892 = and i32 %bf.load2891, 65535
  %cmp2893 = icmp eq i32 %bf.clear2892, 63
  br i1 %cmp2893, label %if.then.2895, label %if.else.2896

if.then.2895:                                     ; preds = %lor.lhs.false.2890, %if.then.2878
  %1473 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  call void @invalidate(%struct.rtx_def* %1473, i32 0)
  br label %if.end.2927

if.else.2896:                                     ; preds = %lor.lhs.false.2890
  %1474 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1475 = bitcast %struct.rtx_def* %1474 to i32*
  %bf.load2897 = load i32, i32* %1475, align 8
  %bf.clear2898 = and i32 %bf.load2897, 65535
  %cmp2899 = icmp eq i32 %bf.clear2898, 66
  br i1 %cmp2899, label %if.then.2901, label %if.else.2908

if.then.2901:                                     ; preds = %if.else.2896
  %1476 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %tobool2902 = icmp ne %struct.rtx_def* %1476, null
  br i1 %tobool2902, label %lor.lhs.false.2903, label %if.then.2906

lor.lhs.false.2903:                               ; preds = %if.then.2901
  %1477 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1478 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %cmp2904 = icmp eq %struct.rtx_def* %1477, %1478
  br i1 %cmp2904, label %if.then.2906, label %if.end.2907

if.then.2906:                                     ; preds = %lor.lhs.false.2903, %if.then.2901
  %1479 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  call void @invalidate(%struct.rtx_def* %1479, i32 0)
  br label %if.end.2907

if.end.2907:                                      ; preds = %if.then.2906, %lor.lhs.false.2903
  br label %if.end.2926

if.else.2908:                                     ; preds = %if.else.2896
  %1480 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1481 = bitcast %struct.rtx_def* %1480 to i32*
  %bf.load2909 = load i32, i32* %1481, align 8
  %bf.clear2910 = and i32 %bf.load2909, 65535
  %cmp2911 = icmp eq i32 %bf.clear2910, 64
  br i1 %cmp2911, label %if.then.2918, label %lor.lhs.false.2913

lor.lhs.false.2913:                               ; preds = %if.else.2908
  %1482 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1483 = bitcast %struct.rtx_def* %1482 to i32*
  %bf.load2914 = load i32, i32* %1483, align 8
  %bf.clear2915 = and i32 %bf.load2914, 65535
  %cmp2916 = icmp eq i32 %bf.clear2915, 133
  br i1 %cmp2916, label %if.then.2918, label %if.end.2925

if.then.2918:                                     ; preds = %lor.lhs.false.2913, %if.else.2908
  %1484 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %fld2919 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1484, i32 0, i32 1
  %arrayidx2920 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2919, i32 0, i64 0
  %rtx2921 = bitcast %union.rtunion_def* %arrayidx2920 to %struct.rtx_def**
  %1485 = load %struct.rtx_def*, %struct.rtx_def** %rtx2921, align 8
  %1486 = load %struct.rtx_def*, %struct.rtx_def** %dest2879, align 8
  %1487 = bitcast %struct.rtx_def* %1486 to i32*
  %bf.load2922 = load i32, i32* %1487, align 8
  %bf.lshr2923 = lshr i32 %bf.load2922, 16
  %bf.clear2924 = and i32 %bf.lshr2923, 255
  call void @invalidate(%struct.rtx_def* %1485, i32 %bf.clear2924)
  br label %if.end.2925

if.end.2925:                                      ; preds = %if.then.2918, %lor.lhs.false.2913
  br label %if.end.2926

if.end.2926:                                      ; preds = %if.end.2925, %if.end.2907
  br label %if.end.2927

if.end.2927:                                      ; preds = %if.end.2926, %if.then.2895
  br label %if.end.2928

if.end.2928:                                      ; preds = %if.end.2927, %for.body.2873
  br label %for.inc.2929

for.inc.2929:                                     ; preds = %if.end.2928
  %1488 = load i32, i32* %i, align 4
  %inc2930 = add nsw i32 %1488, 1
  store i32 %inc2930, i32* %i, align 4
  br label %for.cond.2870

for.end.2931:                                     ; preds = %for.cond.2870
  %1489 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1490 = bitcast %struct.rtx_def* %1489 to i32*
  %bf.load2932 = load i32, i32* %1490, align 8
  %bf.clear2933 = and i32 %bf.load2932, 65535
  %cmp2934 = icmp eq i32 %bf.clear2933, 32
  br i1 %cmp2934, label %land.lhs.true.2936, label %if.end.2953

land.lhs.true.2936:                               ; preds = %for.end.2931
  %1491 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2937 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1491, i32 0, i32 1
  %arrayidx2938 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2937, i32 0, i64 3
  %rtx2939 = bitcast %union.rtunion_def* %arrayidx2938 to %struct.rtx_def**
  %1492 = load %struct.rtx_def*, %struct.rtx_def** %rtx2939, align 8
  %1493 = bitcast %struct.rtx_def* %1492 to i32*
  %bf.load2940 = load i32, i32* %1493, align 8
  %bf.clear2941 = and i32 %bf.load2940, 65535
  %cmp2942 = icmp eq i32 %bf.clear2941, 41
  br i1 %cmp2942, label %land.lhs.true.2944, label %if.end.2953

land.lhs.true.2944:                               ; preds = %land.lhs.true.2936
  %1494 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld2945 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1494, i32 0, i32 1
  %arrayidx2946 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2945, i32 0, i64 3
  %rtx2947 = bitcast %union.rtunion_def* %arrayidx2946 to %struct.rtx_def**
  %1495 = load %struct.rtx_def*, %struct.rtx_def** %rtx2947, align 8
  %1496 = bitcast %struct.rtx_def* %1495 to i32*
  %bf.load2948 = load i32, i32* %1496, align 8
  %bf.lshr2949 = lshr i32 %bf.load2948, 27
  %bf.clear2950 = and i32 %bf.lshr2949, 1
  %tobool2951 = icmp ne i32 %bf.clear2950, 0
  br i1 %tobool2951, label %if.then.2952, label %if.end.2953

if.then.2952:                                     ; preds = %land.lhs.true.2944
  call void @flush_hash_table()
  br label %if.end.2953

if.end.2953:                                      ; preds = %if.then.2952, %land.lhs.true.2944, %land.lhs.true.2936, %for.end.2931
  store i32 0, i32* %i, align 4
  br label %for.cond.2954

for.cond.2954:                                    ; preds = %for.inc.3101, %if.end.2953
  %1497 = load i32, i32* %i, align 4
  %1498 = load i32, i32* %n_sets, align 4
  %cmp2955 = icmp slt i32 %1497, %1498
  br i1 %cmp2955, label %for.body.2957, label %for.end.3103

for.body.2957:                                    ; preds = %for.cond.2954
  %1499 = load i32, i32* %i, align 4
  %idxprom2958 = sext i32 %1499 to i64
  %1500 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2959 = getelementptr inbounds %struct.set, %struct.set* %1500, i64 %idxprom2958
  %rtl2960 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2959, i32 0, i32 0
  %1501 = load %struct.rtx_def*, %struct.rtx_def** %rtl2960, align 8
  %tobool2961 = icmp ne %struct.rtx_def* %1501, null
  br i1 %tobool2961, label %if.then.2962, label %if.end.3100

if.then.2962:                                     ; preds = %for.body.2957
  %1502 = load i32, i32* %i, align 4
  %idxprom2964 = sext i32 %1502 to i64
  %1503 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx2965 = getelementptr inbounds %struct.set, %struct.set* %1503, i64 %idxprom2964
  %rtl2966 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2965, i32 0, i32 0
  %1504 = load %struct.rtx_def*, %struct.rtx_def** %rtl2966, align 8
  %fld2967 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1504, i32 0, i32 1
  %arrayidx2968 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2967, i32 0, i64 0
  %rtx2969 = bitcast %union.rtunion_def* %arrayidx2968 to %struct.rtx_def**
  %1505 = load %struct.rtx_def*, %struct.rtx_def** %rtx2969, align 8
  store %struct.rtx_def* %1505, %struct.rtx_def** %x2963, align 8
  %1506 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1507 = bitcast %struct.rtx_def* %1506 to i32*
  %bf.load2970 = load i32, i32* %1507, align 8
  %bf.clear2971 = and i32 %bf.load2970, 65535
  %cmp2972 = icmp ne i32 %bf.clear2971, 61
  br i1 %cmp2972, label %if.then.2974, label %if.else.2976

if.then.2974:                                     ; preds = %if.then.2962
  %1508 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %call2975 = call i32 @mention_regs(%struct.rtx_def* %1508)
  br label %if.end.3099

if.else.2976:                                     ; preds = %if.then.2962
  %1509 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %fld2977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1509, i32 0, i32 1
  %arrayidx2978 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2977, i32 0, i64 0
  %rtuint2979 = bitcast %union.rtunion_def* %arrayidx2978 to i32*
  %1510 = load i32, i32* %rtuint2979, align 4
  store i32 %1510, i32* %regno, align 4
  %1511 = load i32, i32* %regno, align 4
  %1512 = load i32, i32* %regno, align 4
  %cmp2980 = icmp uge i32 %1512, 53
  br i1 %cmp2980, label %cond.true.2982, label %cond.false.2983

cond.true.2982:                                   ; preds = %if.else.2976
  br label %cond.end.3065

cond.false.2983:                                  ; preds = %if.else.2976
  %1513 = load i32, i32* %regno, align 4
  %cmp2984 = icmp uge i32 %1513, 8
  br i1 %cmp2984, label %land.lhs.true.2986, label %lor.lhs.false.2989

land.lhs.true.2986:                               ; preds = %cond.false.2983
  %1514 = load i32, i32* %regno, align 4
  %cmp2987 = icmp ule i32 %1514, 15
  br i1 %cmp2987, label %cond.true.3007, label %lor.lhs.false.2989

lor.lhs.false.2989:                               ; preds = %land.lhs.true.2986, %cond.false.2983
  %1515 = load i32, i32* %regno, align 4
  %cmp2990 = icmp uge i32 %1515, 21
  br i1 %cmp2990, label %land.lhs.true.2992, label %lor.lhs.false.2995

land.lhs.true.2992:                               ; preds = %lor.lhs.false.2989
  %1516 = load i32, i32* %regno, align 4
  %cmp2993 = icmp ule i32 %1516, 28
  br i1 %cmp2993, label %cond.true.3007, label %lor.lhs.false.2995

lor.lhs.false.2995:                               ; preds = %land.lhs.true.2992, %lor.lhs.false.2989
  %1517 = load i32, i32* %regno, align 4
  %cmp2996 = icmp uge i32 %1517, 45
  br i1 %cmp2996, label %land.lhs.true.2998, label %lor.lhs.false.3001

land.lhs.true.2998:                               ; preds = %lor.lhs.false.2995
  %1518 = load i32, i32* %regno, align 4
  %cmp2999 = icmp ule i32 %1518, 52
  br i1 %cmp2999, label %cond.true.3007, label %lor.lhs.false.3001

lor.lhs.false.3001:                               ; preds = %land.lhs.true.2998, %lor.lhs.false.2995
  %1519 = load i32, i32* %regno, align 4
  %cmp3002 = icmp uge i32 %1519, 29
  br i1 %cmp3002, label %land.lhs.true.3004, label %cond.false.3025

land.lhs.true.3004:                               ; preds = %lor.lhs.false.3001
  %1520 = load i32, i32* %regno, align 4
  %cmp3005 = icmp ule i32 %1520, 36
  br i1 %cmp3005, label %cond.true.3007, label %cond.false.3025

cond.true.3007:                                   ; preds = %land.lhs.true.3004, %land.lhs.true.2998, %land.lhs.true.2992, %land.lhs.true.2986
  %1521 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1522 = bitcast %struct.rtx_def* %1521 to i32*
  %bf.load3008 = load i32, i32* %1522, align 8
  %bf.lshr3009 = lshr i32 %bf.load3008, 16
  %bf.clear3010 = and i32 %bf.lshr3009, 255
  %idxprom3011 = sext i32 %bf.clear3010 to i64
  %arrayidx3012 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3011
  %1523 = load i32, i32* %arrayidx3012, align 4
  %cmp3013 = icmp eq i32 %1523, 5
  br i1 %cmp3013, label %lor.end.3023, label %lor.rhs.3015

lor.rhs.3015:                                     ; preds = %cond.true.3007
  %1524 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1525 = bitcast %struct.rtx_def* %1524 to i32*
  %bf.load3016 = load i32, i32* %1525, align 8
  %bf.lshr3017 = lshr i32 %bf.load3016, 16
  %bf.clear3018 = and i32 %bf.lshr3017, 255
  %idxprom3019 = sext i32 %bf.clear3018 to i64
  %arrayidx3020 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3019
  %1526 = load i32, i32* %arrayidx3020, align 4
  %cmp3021 = icmp eq i32 %1526, 6
  br label %lor.end.3023

lor.end.3023:                                     ; preds = %lor.rhs.3015, %cond.true.3007
  %1527 = phi i1 [ true, %cond.true.3007 ], [ %cmp3021, %lor.rhs.3015 ]
  %cond3024 = select i1 %1527, i32 2, i32 1
  br label %cond.end.3063

cond.false.3025:                                  ; preds = %land.lhs.true.3004, %lor.lhs.false.3001
  %1528 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1529 = bitcast %struct.rtx_def* %1528 to i32*
  %bf.load3026 = load i32, i32* %1529, align 8
  %bf.lshr3027 = lshr i32 %bf.load3026, 16
  %bf.clear3028 = and i32 %bf.lshr3027, 255
  %cmp3029 = icmp eq i32 %bf.clear3028, 18
  br i1 %cmp3029, label %cond.true.3031, label %cond.false.3035

cond.true.3031:                                   ; preds = %cond.false.3025
  %1530 = load i32, i32* @target_flags, align 4
  %and3032 = and i32 %1530, 33554432
  %tobool3033 = icmp ne i32 %and3032, 0
  %cond3034 = select i1 %tobool3033, i32 2, i32 3
  br label %cond.end.3061

cond.false.3035:                                  ; preds = %cond.false.3025
  %1531 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1532 = bitcast %struct.rtx_def* %1531 to i32*
  %bf.load3036 = load i32, i32* %1532, align 8
  %bf.lshr3037 = lshr i32 %bf.load3036, 16
  %bf.clear3038 = and i32 %bf.lshr3037, 255
  %cmp3039 = icmp eq i32 %bf.clear3038, 24
  br i1 %cmp3039, label %cond.true.3041, label %cond.false.3045

cond.true.3041:                                   ; preds = %cond.false.3035
  %1533 = load i32, i32* @target_flags, align 4
  %and3042 = and i32 %1533, 33554432
  %tobool3043 = icmp ne i32 %and3042, 0
  %cond3044 = select i1 %tobool3043, i32 4, i32 6
  br label %cond.end.3059

cond.false.3045:                                  ; preds = %cond.false.3035
  %1534 = load %struct.rtx_def*, %struct.rtx_def** %x2963, align 8
  %1535 = bitcast %struct.rtx_def* %1534 to i32*
  %bf.load3046 = load i32, i32* %1535, align 8
  %bf.lshr3047 = lshr i32 %bf.load3046, 16
  %bf.clear3048 = and i32 %bf.lshr3047, 255
  %idxprom3049 = sext i32 %bf.clear3048 to i64
  %arrayidx3050 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3049
  %1536 = load i8, i8* %arrayidx3050, align 1
  %conv3051 = zext i8 %1536 to i32
  %1537 = load i32, i32* @target_flags, align 4
  %and3052 = and i32 %1537, 33554432
  %tobool3053 = icmp ne i32 %and3052, 0
  %cond3054 = select i1 %tobool3053, i32 8, i32 4
  %add3055 = add nsw i32 %conv3051, %cond3054
  %sub = sub nsw i32 %add3055, 1
  %1538 = load i32, i32* @target_flags, align 4
  %and3056 = and i32 %1538, 33554432
  %tobool3057 = icmp ne i32 %and3056, 0
  %cond3058 = select i1 %tobool3057, i32 8, i32 4
  %div = sdiv i32 %sub, %cond3058
  br label %cond.end.3059

cond.end.3059:                                    ; preds = %cond.false.3045, %cond.true.3041
  %cond3060 = phi i32 [ %cond3044, %cond.true.3041 ], [ %div, %cond.false.3045 ]
  br label %cond.end.3061

cond.end.3061:                                    ; preds = %cond.end.3059, %cond.true.3031
  %cond3062 = phi i32 [ %cond3034, %cond.true.3031 ], [ %cond3060, %cond.end.3059 ]
  br label %cond.end.3063

cond.end.3063:                                    ; preds = %cond.end.3061, %lor.end.3023
  %cond3064 = phi i32 [ %cond3024, %lor.end.3023 ], [ %cond3062, %cond.end.3061 ]
  br label %cond.end.3065

cond.end.3065:                                    ; preds = %cond.end.3063, %cond.true.2982
  %cond3066 = phi i32 [ 1, %cond.true.2982 ], [ %cond3064, %cond.end.3063 ]
  %add3067 = add i32 %1511, %cond3066
  store i32 %add3067, i32* %endregno, align 4
  %1539 = load i32, i32* %regno, align 4
  store i32 %1539, i32* %i3068, align 4
  br label %for.cond.3069

for.cond.3069:                                    ; preds = %for.inc.3096, %cond.end.3065
  %1540 = load i32, i32* %i3068, align 4
  %1541 = load i32, i32* %endregno, align 4
  %cmp3070 = icmp ult i32 %1540, %1541
  br i1 %cmp3070, label %for.body.3072, label %for.end.3098

for.body.3072:                                    ; preds = %for.cond.3069
  %1542 = load i32, i32* %i3068, align 4
  %1543 = load i32, i32* @cached_regno, align 4
  %cmp3073 = icmp eq i32 %1542, %1543
  br i1 %cmp3073, label %land.lhs.true.3075, label %cond.false.3078

land.lhs.true.3075:                               ; preds = %for.body.3072
  %1544 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3076 = icmp ne %struct.cse_reg_info* %1544, null
  br i1 %tobool3076, label %cond.true.3077, label %cond.false.3078

cond.true.3077:                                   ; preds = %land.lhs.true.3075
  %1545 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3080

cond.false.3078:                                  ; preds = %land.lhs.true.3075, %for.body.3072
  %1546 = load i32, i32* %i3068, align 4
  %call3079 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1546)
  br label %cond.end.3080

cond.end.3080:                                    ; preds = %cond.false.3078, %cond.true.3077
  %cond3081 = phi %struct.cse_reg_info* [ %1545, %cond.true.3077 ], [ %call3079, %cond.false.3078 ]
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3081, i32 0, i32 5
  %1547 = load i32, i32* %reg_in_table, align 4
  %cmp3082 = icmp sge i32 %1547, 0
  br i1 %cmp3082, label %if.then.3084, label %if.end.3095

if.then.3084:                                     ; preds = %cond.end.3080
  %1548 = load i32, i32* %i3068, align 4
  call void @remove_invalid_refs(i32 %1548)
  %1549 = load i32, i32* %i3068, align 4
  %1550 = load i32, i32* @cached_regno, align 4
  %cmp3085 = icmp eq i32 %1549, %1550
  br i1 %cmp3085, label %land.lhs.true.3087, label %cond.false.3090

land.lhs.true.3087:                               ; preds = %if.then.3084
  %1551 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3088 = icmp ne %struct.cse_reg_info* %1551, null
  br i1 %tobool3088, label %cond.true.3089, label %cond.false.3090

cond.true.3089:                                   ; preds = %land.lhs.true.3087
  %1552 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3092

cond.false.3090:                                  ; preds = %land.lhs.true.3087, %if.then.3084
  %1553 = load i32, i32* %i3068, align 4
  %call3091 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1553)
  br label %cond.end.3092

cond.end.3092:                                    ; preds = %cond.false.3090, %cond.true.3089
  %cond3093 = phi %struct.cse_reg_info* [ %1552, %cond.true.3089 ], [ %call3091, %cond.false.3090 ]
  %reg_in_table3094 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3093, i32 0, i32 5
  store i32 -1, i32* %reg_in_table3094, align 4
  br label %if.end.3095

if.end.3095:                                      ; preds = %cond.end.3092, %cond.end.3080
  br label %for.inc.3096

for.inc.3096:                                     ; preds = %if.end.3095
  %1554 = load i32, i32* %i3068, align 4
  %inc3097 = add i32 %1554, 1
  store i32 %inc3097, i32* %i3068, align 4
  br label %for.cond.3069

for.end.3098:                                     ; preds = %for.cond.3069
  br label %if.end.3099

if.end.3099:                                      ; preds = %for.end.3098, %if.then.2974
  br label %if.end.3100

if.end.3100:                                      ; preds = %if.end.3099, %for.body.2957
  br label %for.inc.3101

for.inc.3101:                                     ; preds = %if.end.3100
  %1555 = load i32, i32* %i, align 4
  %inc3102 = add nsw i32 %1555, 1
  store i32 %inc3102, i32* %i, align 4
  br label %for.cond.2954

for.end.3103:                                     ; preds = %for.cond.2954
  store i32 0, i32* %i, align 4
  br label %for.cond.3104

for.cond.3104:                                    ; preds = %for.inc.3158, %for.end.3103
  %1556 = load i32, i32* %i, align 4
  %1557 = load i32, i32* %n_sets, align 4
  %cmp3105 = icmp slt i32 %1556, %1557
  br i1 %cmp3105, label %for.body.3107, label %for.end.3160

for.body.3107:                                    ; preds = %for.cond.3104
  %1558 = load i32, i32* %i, align 4
  %idxprom3108 = sext i32 %1558 to i64
  %1559 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3109 = getelementptr inbounds %struct.set, %struct.set* %1559, i64 %idxprom3108
  %rtl3110 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3109, i32 0, i32 0
  %1560 = load %struct.rtx_def*, %struct.rtx_def** %rtl3110, align 8
  %tobool3111 = icmp ne %struct.rtx_def* %1560, null
  br i1 %tobool3111, label %if.then.3112, label %if.end.3157

if.then.3112:                                     ; preds = %for.body.3107
  %1561 = load i32, i32* %i, align 4
  %idxprom3113 = sext i32 %1561 to i64
  %1562 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3114 = getelementptr inbounds %struct.set, %struct.set* %1562, i64 %idxprom3113
  %src_elt3115 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3114, i32 0, i32 2
  %1563 = load %struct.table_elt*, %struct.table_elt** %src_elt3115, align 8
  %tobool3116 = icmp ne %struct.table_elt* %1563, null
  br i1 %tobool3116, label %land.lhs.true.3117, label %if.end.3156

land.lhs.true.3117:                               ; preds = %if.then.3112
  %1564 = load i32, i32* %i, align 4
  %idxprom3118 = sext i32 %1564 to i64
  %1565 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3119 = getelementptr inbounds %struct.set, %struct.set* %1565, i64 %idxprom3118
  %src_elt3120 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3119, i32 0, i32 2
  %1566 = load %struct.table_elt*, %struct.table_elt** %src_elt3120, align 8
  %first_same_value3121 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1566, i32 0, i32 6
  %1567 = load %struct.table_elt*, %struct.table_elt** %first_same_value3121, align 8
  %cmp3122 = icmp eq %struct.table_elt* %1567, null
  br i1 %cmp3122, label %if.then.3124, label %if.end.3156

if.then.3124:                                     ; preds = %land.lhs.true.3117
  %1568 = load i32, i32* %i, align 4
  %idxprom3126 = sext i32 %1568 to i64
  %1569 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3127 = getelementptr inbounds %struct.set, %struct.set* %1569, i64 %idxprom3126
  %src_elt3128 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3127, i32 0, i32 2
  %1570 = load %struct.table_elt*, %struct.table_elt** %src_elt3128, align 8
  store %struct.table_elt* %1570, %struct.table_elt** %elt3125, align 8
  br label %while.cond.3129

while.cond.3129:                                  ; preds = %while.body.3134, %if.then.3124
  %1571 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %tobool3130 = icmp ne %struct.table_elt* %1571, null
  br i1 %tobool3130, label %land.rhs.3131, label %land.end.3133

land.rhs.3131:                                    ; preds = %while.cond.3129
  %1572 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1572, i32 0, i32 5
  %1573 = load %struct.table_elt*, %struct.table_elt** %prev_same_value, align 8
  %tobool3132 = icmp ne %struct.table_elt* %1573, null
  br label %land.end.3133

land.end.3133:                                    ; preds = %land.rhs.3131, %while.cond.3129
  %1574 = phi i1 [ false, %while.cond.3129 ], [ %tobool3132, %land.rhs.3131 ]
  br i1 %1574, label %while.body.3134, label %while.end.3136

while.body.3134:                                  ; preds = %land.end.3133
  %1575 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %prev_same_value3135 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1575, i32 0, i32 5
  %1576 = load %struct.table_elt*, %struct.table_elt** %prev_same_value3135, align 8
  store %struct.table_elt* %1576, %struct.table_elt** %elt3125, align 8
  br label %while.cond.3129

while.end.3136:                                   ; preds = %land.end.3133
  br label %while.cond.3137

while.cond.3137:                                  ; preds = %while.body.3144, %while.end.3136
  %1577 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %tobool3138 = icmp ne %struct.table_elt* %1577, null
  br i1 %tobool3138, label %land.rhs.3139, label %land.end.3143

land.rhs.3139:                                    ; preds = %while.cond.3137
  %1578 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %first_same_value3140 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1578, i32 0, i32 6
  %1579 = load %struct.table_elt*, %struct.table_elt** %first_same_value3140, align 8
  %cmp3141 = icmp eq %struct.table_elt* %1579, null
  br label %land.end.3143

land.end.3143:                                    ; preds = %land.rhs.3139, %while.cond.3137
  %1580 = phi i1 [ false, %while.cond.3137 ], [ %cmp3141, %land.rhs.3139 ]
  br i1 %1580, label %while.body.3144, label %while.end.3146

while.body.3144:                                  ; preds = %land.end.3143
  %1581 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %next_same_value3145 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1581, i32 0, i32 4
  %1582 = load %struct.table_elt*, %struct.table_elt** %next_same_value3145, align 8
  store %struct.table_elt* %1582, %struct.table_elt** %elt3125, align 8
  br label %while.cond.3137

while.end.3146:                                   ; preds = %land.end.3143
  %1583 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %tobool3147 = icmp ne %struct.table_elt* %1583, null
  br i1 %tobool3147, label %cond.true.3148, label %cond.false.3150

cond.true.3148:                                   ; preds = %while.end.3146
  %1584 = load %struct.table_elt*, %struct.table_elt** %elt3125, align 8
  %first_same_value3149 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1584, i32 0, i32 6
  %1585 = load %struct.table_elt*, %struct.table_elt** %first_same_value3149, align 8
  br label %cond.end.3151

cond.false.3150:                                  ; preds = %while.end.3146
  br label %cond.end.3151

cond.end.3151:                                    ; preds = %cond.false.3150, %cond.true.3148
  %cond3152 = phi %struct.table_elt* [ %1585, %cond.true.3148 ], [ null, %cond.false.3150 ]
  %1586 = load i32, i32* %i, align 4
  %idxprom3153 = sext i32 %1586 to i64
  %1587 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3154 = getelementptr inbounds %struct.set, %struct.set* %1587, i64 %idxprom3153
  %src_elt3155 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3154, i32 0, i32 2
  store %struct.table_elt* %cond3152, %struct.table_elt** %src_elt3155, align 8
  br label %if.end.3156

if.end.3156:                                      ; preds = %cond.end.3151, %land.lhs.true.3117, %if.then.3112
  br label %if.end.3157

if.end.3157:                                      ; preds = %if.end.3156, %for.body.3107
  br label %for.inc.3158

for.inc.3158:                                     ; preds = %if.end.3157
  %1588 = load i32, i32* %i, align 4
  %inc3159 = add nsw i32 %1588, 1
  store i32 %inc3159, i32* %i, align 4
  br label %for.cond.3104

for.end.3160:                                     ; preds = %for.cond.3104
  store i32 0, i32* %i, align 4
  br label %for.cond.3161

for.cond.3161:                                    ; preds = %for.inc.3738, %for.end.3160
  %1589 = load i32, i32* %i, align 4
  %1590 = load i32, i32* %n_sets, align 4
  %cmp3162 = icmp slt i32 %1589, %1590
  br i1 %cmp3162, label %for.body.3164, label %for.end.3740

for.body.3164:                                    ; preds = %for.cond.3161
  %1591 = load i32, i32* %i, align 4
  %idxprom3165 = sext i32 %1591 to i64
  %1592 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3166 = getelementptr inbounds %struct.set, %struct.set* %1592, i64 %idxprom3165
  %rtl3167 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3166, i32 0, i32 0
  %1593 = load %struct.rtx_def*, %struct.rtx_def** %rtl3167, align 8
  %tobool3168 = icmp ne %struct.rtx_def* %1593, null
  br i1 %tobool3168, label %if.then.3169, label %if.end.3737

if.then.3169:                                     ; preds = %for.body.3164
  %1594 = load i32, i32* %i, align 4
  %idxprom3171 = sext i32 %1594 to i64
  %1595 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3172 = getelementptr inbounds %struct.set, %struct.set* %1595, i64 %idxprom3171
  %rtl3173 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3172, i32 0, i32 0
  %1596 = load %struct.rtx_def*, %struct.rtx_def** %rtl3173, align 8
  %fld3174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1596, i32 0, i32 1
  %arrayidx3175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3174, i32 0, i64 0
  %rtx3176 = bitcast %union.rtunion_def* %arrayidx3175 to %struct.rtx_def**
  %1597 = load %struct.rtx_def*, %struct.rtx_def** %rtx3176, align 8
  store %struct.rtx_def* %1597, %struct.rtx_def** %dest3170, align 8
  %1598 = load i32, i32* %i, align 4
  %idxprom3178 = sext i32 %1598 to i64
  %1599 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3179 = getelementptr inbounds %struct.set, %struct.set* %1599, i64 %idxprom3178
  %inner_dest3180 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3179, i32 0, i32 5
  %1600 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3180, align 8
  store %struct.rtx_def* %1600, %struct.rtx_def** %inner_dest3177, align 8
  %1601 = load i32, i32* @flag_float_store, align 4
  %tobool3182 = icmp ne i32 %1601, 0
  br i1 %tobool3182, label %land.lhs.true.3183, label %lor.lhs.false.3212

land.lhs.true.3183:                               ; preds = %if.then.3169
  %1602 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1603 = bitcast %struct.rtx_def* %1602 to i32*
  %bf.load3184 = load i32, i32* %1603, align 8
  %bf.clear3185 = and i32 %bf.load3184, 65535
  %cmp3186 = icmp eq i32 %bf.clear3185, 66
  br i1 %cmp3186, label %land.lhs.true.3188, label %lor.lhs.false.3212

land.lhs.true.3188:                               ; preds = %land.lhs.true.3183
  %1604 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1605 = bitcast %struct.rtx_def* %1604 to i32*
  %bf.load3189 = load i32, i32* %1605, align 8
  %bf.lshr3190 = lshr i32 %bf.load3189, 16
  %bf.clear3191 = and i32 %bf.lshr3190, 255
  %idxprom3192 = sext i32 %bf.clear3191 to i64
  %arrayidx3193 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3192
  %1606 = load i32, i32* %arrayidx3193, align 4
  %cmp3194 = icmp eq i32 %1606, 2
  br i1 %cmp3194, label %if.then.3265, label %lor.lhs.false.3196

lor.lhs.false.3196:                               ; preds = %land.lhs.true.3188
  %1607 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1608 = bitcast %struct.rtx_def* %1607 to i32*
  %bf.load3197 = load i32, i32* %1608, align 8
  %bf.lshr3198 = lshr i32 %bf.load3197, 16
  %bf.clear3199 = and i32 %bf.lshr3198, 255
  %idxprom3200 = sext i32 %bf.clear3199 to i64
  %arrayidx3201 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3200
  %1609 = load i32, i32* %arrayidx3201, align 4
  %cmp3202 = icmp eq i32 %1609, 6
  br i1 %cmp3202, label %if.then.3265, label %lor.lhs.false.3204

lor.lhs.false.3204:                               ; preds = %lor.lhs.false.3196
  %1610 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1611 = bitcast %struct.rtx_def* %1610 to i32*
  %bf.load3205 = load i32, i32* %1611, align 8
  %bf.lshr3206 = lshr i32 %bf.load3205, 16
  %bf.clear3207 = and i32 %bf.lshr3206, 255
  %idxprom3208 = sext i32 %bf.clear3207 to i64
  %arrayidx3209 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom3208
  %1612 = load i32, i32* %arrayidx3209, align 4
  %cmp3210 = icmp eq i32 %1612, 8
  br i1 %cmp3210, label %if.then.3265, label %lor.lhs.false.3212

lor.lhs.false.3212:                               ; preds = %lor.lhs.false.3204, %land.lhs.true.3183, %if.then.3169
  %1613 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1614 = bitcast %struct.rtx_def* %1613 to i32*
  %bf.load3213 = load i32, i32* %1614, align 8
  %bf.lshr3214 = lshr i32 %bf.load3213, 16
  %bf.clear3215 = and i32 %bf.lshr3214, 255
  %cmp3216 = icmp eq i32 %bf.clear3215, 51
  br i1 %cmp3216, label %if.then.3265, label %lor.lhs.false.3218

lor.lhs.false.3218:                               ; preds = %lor.lhs.false.3212
  %1615 = load %struct.rtx_def*, %struct.rtx_def** %libcall_insn.addr, align 8
  %tobool3219 = icmp ne %struct.rtx_def* %1615, null
  br i1 %tobool3219, label %if.then.3265, label %lor.lhs.false.3220

lor.lhs.false.3220:                               ; preds = %lor.lhs.false.3218
  %1616 = load i32, i32* %i, align 4
  %idxprom3221 = sext i32 %1616 to i64
  %1617 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3222 = getelementptr inbounds %struct.set, %struct.set* %1617, i64 %idxprom3221
  %src_elt3223 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3222, i32 0, i32 2
  %1618 = load %struct.table_elt*, %struct.table_elt** %src_elt3223, align 8
  %cmp3224 = icmp eq %struct.table_elt* %1618, null
  br i1 %cmp3224, label %if.then.3265, label %lor.lhs.false.3226

lor.lhs.false.3226:                               ; preds = %lor.lhs.false.3220
  %1619 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1620 = bitcast %struct.rtx_def* %1619 to i32*
  %bf.load3227 = load i32, i32* %1620, align 8
  %bf.clear3228 = and i32 %bf.load3227, 65535
  %cmp3229 = icmp eq i32 %bf.clear3228, 63
  br i1 %cmp3229, label %land.lhs.true.3231, label %if.end.3266

land.lhs.true.3231:                               ; preds = %lor.lhs.false.3226
  %1621 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1622 = bitcast %struct.rtx_def* %1621 to i32*
  %bf.load3232 = load i32, i32* %1622, align 8
  %bf.lshr3233 = lshr i32 %bf.load3232, 16
  %bf.clear3234 = and i32 %bf.lshr3233, 255
  %idxprom3235 = sext i32 %bf.clear3234 to i64
  %arrayidx3236 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3235
  %1623 = load i8, i8* %arrayidx3236, align 1
  %conv3237 = zext i8 %1623 to i32
  %1624 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1624, i32 0, i32 1
  %arrayidx3239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3238, i32 0, i64 0
  %rtx3240 = bitcast %union.rtunion_def* %arrayidx3239 to %struct.rtx_def**
  %1625 = load %struct.rtx_def*, %struct.rtx_def** %rtx3240, align 8
  %1626 = bitcast %struct.rtx_def* %1625 to i32*
  %bf.load3241 = load i32, i32* %1626, align 8
  %bf.lshr3242 = lshr i32 %bf.load3241, 16
  %bf.clear3243 = and i32 %bf.lshr3242, 255
  %idxprom3244 = sext i32 %bf.clear3243 to i64
  %arrayidx3245 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3244
  %1627 = load i8, i8* %arrayidx3245, align 1
  %conv3246 = zext i8 %1627 to i32
  %cmp3247 = icmp sgt i32 %conv3237, %conv3246
  br i1 %cmp3247, label %land.lhs.true.3249, label %if.end.3266

land.lhs.true.3249:                               ; preds = %land.lhs.true.3231
  %1628 = load i32, i32* %i, align 4
  %idxprom3250 = sext i32 %1628 to i64
  %1629 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3251 = getelementptr inbounds %struct.set, %struct.set* %1629, i64 %idxprom3250
  %src3252 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3251, i32 0, i32 1
  %1630 = load %struct.rtx_def*, %struct.rtx_def** %src3252, align 8
  %1631 = bitcast %struct.rtx_def* %1630 to i32*
  %bf.load3253 = load i32, i32* %1631, align 8
  %bf.clear3254 = and i32 %bf.load3253, 65535
  %cmp3255 = icmp eq i32 %bf.clear3254, 120
  br i1 %cmp3255, label %if.then.3265, label %lor.lhs.false.3257

lor.lhs.false.3257:                               ; preds = %land.lhs.true.3249
  %1632 = load i32, i32* %i, align 4
  %idxprom3258 = sext i32 %1632 to i64
  %1633 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3259 = getelementptr inbounds %struct.set, %struct.set* %1633, i64 %idxprom3258
  %src3260 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3259, i32 0, i32 1
  %1634 = load %struct.rtx_def*, %struct.rtx_def** %src3260, align 8
  %1635 = bitcast %struct.rtx_def* %1634 to i32*
  %bf.load3261 = load i32, i32* %1635, align 8
  %bf.clear3262 = and i32 %bf.load3261, 65535
  %cmp3263 = icmp eq i32 %bf.clear3262, 121
  br i1 %cmp3263, label %if.then.3265, label %if.end.3266

if.then.3265:                                     ; preds = %lor.lhs.false.3257, %land.lhs.true.3249, %lor.lhs.false.3220, %lor.lhs.false.3218, %lor.lhs.false.3212, %lor.lhs.false.3204, %lor.lhs.false.3196, %land.lhs.true.3188
  br label %for.inc.3738

if.end.3266:                                      ; preds = %lor.lhs.false.3257, %land.lhs.true.3231, %lor.lhs.false.3226
  %1636 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1637 = bitcast %struct.rtx_def* %1636 to i32*
  %bf.load3267 = load i32, i32* %1637, align 8
  %bf.clear3268 = and i32 %bf.load3267, 65535
  %cmp3269 = icmp eq i32 %bf.clear3268, 64
  br i1 %cmp3269, label %if.then.3271, label %if.end.3278

if.then.3271:                                     ; preds = %if.end.3266
  %1638 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1638, i32 0, i32 1
  %arrayidx3273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3272, i32 0, i64 0
  %rtx3274 = bitcast %union.rtunion_def* %arrayidx3273 to %struct.rtx_def**
  %1639 = load %struct.rtx_def*, %struct.rtx_def** %rtx3274, align 8
  %fld3275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1639, i32 0, i32 1
  %arrayidx3276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3275, i32 0, i64 0
  %rtx3277 = bitcast %union.rtunion_def* %arrayidx3276 to %struct.rtx_def**
  %1640 = load %struct.rtx_def*, %struct.rtx_def** %rtx3277, align 8
  store %struct.rtx_def* %1640, %struct.rtx_def** %dest3170, align 8
  br label %if.end.3278

if.end.3278:                                      ; preds = %if.then.3271, %if.end.3266
  %1641 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1642 = bitcast %struct.rtx_def* %1641 to i32*
  %bf.load3279 = load i32, i32* %1642, align 8
  %bf.clear3280 = and i32 %bf.load3279, 65535
  %cmp3281 = icmp eq i32 %bf.clear3280, 61
  br i1 %cmp3281, label %if.then.3288, label %lor.lhs.false.3283

lor.lhs.false.3283:                               ; preds = %if.end.3278
  %1643 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1644 = bitcast %struct.rtx_def* %1643 to i32*
  %bf.load3284 = load i32, i32* %1644, align 8
  %bf.clear3285 = and i32 %bf.load3284, 65535
  %cmp3286 = icmp eq i32 %bf.clear3285, 63
  br i1 %cmp3286, label %if.then.3288, label %if.end.3335

if.then.3288:                                     ; preds = %lor.lhs.false.3283, %if.end.3278
  %1645 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1646 = load i32, i32* %i, align 4
  %idxprom3289 = sext i32 %1646 to i64
  %1647 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3290 = getelementptr inbounds %struct.set, %struct.set* %1647, i64 %idxprom3289
  %src_elt3291 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3290, i32 0, i32 2
  %1648 = load %struct.table_elt*, %struct.table_elt** %src_elt3291, align 8
  %call3292 = call i32 @insert_regs(%struct.rtx_def* %1645, %struct.table_elt* %1648, i32 1)
  %tobool3293 = icmp ne i32 %call3292, 0
  br i1 %tobool3293, label %if.then.3294, label %if.end.3334

if.then.3294:                                     ; preds = %if.then.3288
  %1649 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  call void @rehash_using_reg(%struct.rtx_def* %1649)
  %1650 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1651 = bitcast %struct.rtx_def* %1650 to i32*
  %bf.load3295 = load i32, i32* %1651, align 8
  %bf.clear3296 = and i32 %bf.load3295, 65535
  %cmp3297 = icmp eq i32 %bf.clear3296, 61
  br i1 %cmp3297, label %land.lhs.true.3299, label %cond.false.3323

land.lhs.true.3299:                               ; preds = %if.then.3294
  %1652 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1652, i32 0, i32 1
  %arrayidx3301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3300, i32 0, i64 0
  %rtuint3302 = bitcast %union.rtunion_def* %arrayidx3301 to i32*
  %1653 = load i32, i32* %rtuint3302, align 4
  %cmp3303 = icmp uge i32 %1653, 53
  br i1 %cmp3303, label %cond.true.3305, label %cond.false.3323

cond.true.3305:                                   ; preds = %land.lhs.true.3299
  %1654 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1654, i32 0, i32 1
  %arrayidx3307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3306, i32 0, i64 0
  %rtuint3308 = bitcast %union.rtunion_def* %arrayidx3307 to i32*
  %1655 = load i32, i32* %rtuint3308, align 4
  %1656 = load i32, i32* @cached_regno, align 4
  %cmp3309 = icmp eq i32 %1655, %1656
  br i1 %cmp3309, label %land.lhs.true.3311, label %cond.false.3314

land.lhs.true.3311:                               ; preds = %cond.true.3305
  %1657 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3312 = icmp ne %struct.cse_reg_info* %1657, null
  br i1 %tobool3312, label %cond.true.3313, label %cond.false.3314

cond.true.3313:                                   ; preds = %land.lhs.true.3311
  %1658 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3319

cond.false.3314:                                  ; preds = %land.lhs.true.3311, %cond.true.3305
  %1659 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1659, i32 0, i32 1
  %arrayidx3316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3315, i32 0, i64 0
  %rtuint3317 = bitcast %union.rtunion_def* %arrayidx3316 to i32*
  %1660 = load i32, i32* %rtuint3317, align 4
  %call3318 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1660)
  br label %cond.end.3319

cond.end.3319:                                    ; preds = %cond.false.3314, %cond.true.3313
  %cond3320 = phi %struct.cse_reg_info* [ %1658, %cond.true.3313 ], [ %call3318, %cond.false.3314 ]
  %reg_qty3321 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3320, i32 0, i32 3
  %1661 = load i32, i32* %reg_qty3321, align 4
  %add3322 = add i32 7808, %1661
  br label %cond.end.3328

cond.false.3323:                                  ; preds = %land.lhs.true.3299, %if.then.3294
  %1662 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1663 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1664 = bitcast %struct.rtx_def* %1663 to i32*
  %bf.load3324 = load i32, i32* %1664, align 8
  %bf.lshr3325 = lshr i32 %bf.load3324, 16
  %bf.clear3326 = and i32 %bf.lshr3325, 255
  %call3327 = call i32 @canon_hash(%struct.rtx_def* %1662, i32 %bf.clear3326)
  br label %cond.end.3328

cond.end.3328:                                    ; preds = %cond.false.3323, %cond.end.3319
  %cond3329 = phi i32 [ %add3322, %cond.end.3319 ], [ %call3327, %cond.false.3323 ]
  %and3330 = and i32 %cond3329, 31
  %1665 = load i32, i32* %i, align 4
  %idxprom3331 = sext i32 %1665 to i64
  %1666 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3332 = getelementptr inbounds %struct.set, %struct.set* %1666, i64 %idxprom3331
  %dest_hash3333 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3332, i32 0, i32 4
  store i32 %and3330, i32* %dest_hash3333, align 4
  br label %if.end.3334

if.end.3334:                                      ; preds = %cond.end.3328, %if.then.3288
  br label %if.end.3335

if.end.3335:                                      ; preds = %if.end.3334, %lor.lhs.false.3283
  %1667 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3177, align 8
  %1668 = bitcast %struct.rtx_def* %1667 to i32*
  %bf.load3336 = load i32, i32* %1668, align 8
  %bf.clear3337 = and i32 %bf.load3336, 65535
  %cmp3338 = icmp eq i32 %bf.clear3337, 66
  br i1 %cmp3338, label %land.lhs.true.3340, label %if.else.3356

land.lhs.true.3340:                               ; preds = %if.end.3335
  %1669 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3177, align 8
  %fld3341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1669, i32 0, i32 1
  %arrayidx3342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3341, i32 0, i64 0
  %rtx3343 = bitcast %union.rtunion_def* %arrayidx3342 to %struct.rtx_def**
  %1670 = load %struct.rtx_def*, %struct.rtx_def** %rtx3343, align 8
  %1671 = bitcast %struct.rtx_def* %1670 to i32*
  %bf.load3344 = load i32, i32* %1671, align 8
  %bf.clear3345 = and i32 %bf.load3344, 65535
  %cmp3346 = icmp eq i32 %bf.clear3345, 70
  br i1 %cmp3346, label %if.then.3348, label %if.else.3356

if.then.3348:                                     ; preds = %land.lhs.true.3340
  %1672 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1673 = load i32, i32* %i, align 4
  %idxprom3349 = sext i32 %1673 to i64
  %1674 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3350 = getelementptr inbounds %struct.set, %struct.set* %1674, i64 %idxprom3349
  %dest_hash3351 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3350, i32 0, i32 4
  %1675 = load i32, i32* %dest_hash3351, align 4
  %1676 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1677 = bitcast %struct.rtx_def* %1676 to i32*
  %bf.load3352 = load i32, i32* %1677, align 8
  %bf.lshr3353 = lshr i32 %bf.load3352, 16
  %bf.clear3354 = and i32 %bf.lshr3353, 255
  %call3355 = call %struct.table_elt* @insert(%struct.rtx_def* %1672, %struct.table_elt* null, i32 %1675, i32 %bf.clear3354)
  store %struct.table_elt* %call3355, %struct.table_elt** %elt3181, align 8
  br label %if.end.3367

if.else.3356:                                     ; preds = %land.lhs.true.3340, %if.end.3335
  %1678 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1679 = load i32, i32* %i, align 4
  %idxprom3357 = sext i32 %1679 to i64
  %1680 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3358 = getelementptr inbounds %struct.set, %struct.set* %1680, i64 %idxprom3357
  %src_elt3359 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3358, i32 0, i32 2
  %1681 = load %struct.table_elt*, %struct.table_elt** %src_elt3359, align 8
  %1682 = load i32, i32* %i, align 4
  %idxprom3360 = sext i32 %1682 to i64
  %1683 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3361 = getelementptr inbounds %struct.set, %struct.set* %1683, i64 %idxprom3360
  %dest_hash3362 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3361, i32 0, i32 4
  %1684 = load i32, i32* %dest_hash3362, align 4
  %1685 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1686 = bitcast %struct.rtx_def* %1685 to i32*
  %bf.load3363 = load i32, i32* %1686, align 8
  %bf.lshr3364 = lshr i32 %bf.load3363, 16
  %bf.clear3365 = and i32 %bf.lshr3364, 255
  %call3366 = call %struct.table_elt* @insert(%struct.rtx_def* %1678, %struct.table_elt* %1681, i32 %1684, i32 %bf.clear3365)
  store %struct.table_elt* %call3366, %struct.table_elt** %elt3181, align 8
  br label %if.end.3367

if.end.3367:                                      ; preds = %if.else.3356, %if.then.3348
  %1687 = load i32, i32* %i, align 4
  %idxprom3368 = sext i32 %1687 to i64
  %1688 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3369 = getelementptr inbounds %struct.set, %struct.set* %1688, i64 %idxprom3368
  %inner_dest3370 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3369, i32 0, i32 5
  %1689 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3370, align 8
  %1690 = bitcast %struct.rtx_def* %1689 to i32*
  %bf.load3371 = load i32, i32* %1690, align 8
  %bf.clear3372 = and i32 %bf.load3371, 65535
  %cmp3373 = icmp eq i32 %bf.clear3372, 66
  br i1 %cmp3373, label %land.rhs.3375, label %land.end.3529

land.rhs.3375:                                    ; preds = %if.end.3367
  %1691 = load i32, i32* %i, align 4
  %idxprom3376 = sext i32 %1691 to i64
  %1692 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3377 = getelementptr inbounds %struct.set, %struct.set* %1692, i64 %idxprom3376
  %inner_dest3378 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3377, i32 0, i32 5
  %1693 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3378, align 8
  %1694 = bitcast %struct.rtx_def* %1693 to i32*
  %bf.load3379 = load i32, i32* %1694, align 8
  %bf.lshr3380 = lshr i32 %bf.load3379, 26
  %bf.clear3381 = and i32 %bf.lshr3380, 1
  %tobool3382 = icmp ne i32 %bf.clear3381, 0
  br i1 %tobool3382, label %lor.rhs.3383, label %lor.end.3528

lor.rhs.3383:                                     ; preds = %land.rhs.3375
  %1695 = load i32, i32* %i, align 4
  %idxprom3384 = sext i32 %1695 to i64
  %1696 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3385 = getelementptr inbounds %struct.set, %struct.set* %1696, i64 %idxprom3384
  %inner_dest3386 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3385, i32 0, i32 5
  %1697 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3386, align 8
  %fld3387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1697, i32 0, i32 1
  %arrayidx3388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3387, i32 0, i64 0
  %rtx3389 = bitcast %union.rtunion_def* %arrayidx3388 to %struct.rtx_def**
  %1698 = load %struct.rtx_def*, %struct.rtx_def** %rtx3389, align 8
  %1699 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp3390 = icmp eq %struct.rtx_def* %1698, %1699
  br i1 %cmp3390, label %lor.end.3527, label %lor.lhs.false.3392

lor.lhs.false.3392:                               ; preds = %lor.rhs.3383
  %1700 = load i32, i32* %i, align 4
  %idxprom3393 = sext i32 %1700 to i64
  %1701 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3394 = getelementptr inbounds %struct.set, %struct.set* %1701, i64 %idxprom3393
  %inner_dest3395 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3394, i32 0, i32 5
  %1702 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3395, align 8
  %fld3396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1702, i32 0, i32 1
  %arrayidx3397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3396, i32 0, i64 0
  %rtx3398 = bitcast %union.rtunion_def* %arrayidx3397 to %struct.rtx_def**
  %1703 = load %struct.rtx_def*, %struct.rtx_def** %rtx3398, align 8
  %1704 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp3399 = icmp eq %struct.rtx_def* %1703, %1704
  br i1 %cmp3399, label %lor.end.3527, label %lor.lhs.false.3401

lor.lhs.false.3401:                               ; preds = %lor.lhs.false.3392
  %1705 = load i32, i32* %i, align 4
  %idxprom3402 = sext i32 %1705 to i64
  %1706 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3403 = getelementptr inbounds %struct.set, %struct.set* %1706, i64 %idxprom3402
  %inner_dest3404 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3403, i32 0, i32 5
  %1707 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3404, align 8
  %fld3405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1707, i32 0, i32 1
  %arrayidx3406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3405, i32 0, i64 0
  %rtx3407 = bitcast %union.rtunion_def* %arrayidx3406 to %struct.rtx_def**
  %1708 = load %struct.rtx_def*, %struct.rtx_def** %rtx3407, align 8
  %1709 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp3408 = icmp eq %struct.rtx_def* %1708, %1709
  br i1 %cmp3408, label %land.lhs.true.3410, label %lor.lhs.false.3413

land.lhs.true.3410:                               ; preds = %lor.lhs.false.3401
  %1710 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv3411 = sext i8 %1710 to i32
  %tobool3412 = icmp ne i32 %conv3411, 0
  br i1 %tobool3412, label %lor.end.3527, label %lor.lhs.false.3413

lor.lhs.false.3413:                               ; preds = %land.lhs.true.3410, %lor.lhs.false.3401
  %1711 = load i32, i32* %i, align 4
  %idxprom3414 = sext i32 %1711 to i64
  %1712 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3415 = getelementptr inbounds %struct.set, %struct.set* %1712, i64 %idxprom3414
  %inner_dest3416 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3415, i32 0, i32 5
  %1713 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3416, align 8
  %fld3417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1713, i32 0, i32 1
  %arrayidx3418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3417, i32 0, i64 0
  %rtx3419 = bitcast %union.rtunion_def* %arrayidx3418 to %struct.rtx_def**
  %1714 = load %struct.rtx_def*, %struct.rtx_def** %rtx3419, align 8
  %1715 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp3420 = icmp eq %struct.rtx_def* %1714, %1715
  br i1 %cmp3420, label %lor.end.3527, label %lor.lhs.false.3422

lor.lhs.false.3422:                               ; preds = %lor.lhs.false.3413
  %1716 = load i32, i32* %i, align 4
  %idxprom3423 = sext i32 %1716 to i64
  %1717 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3424 = getelementptr inbounds %struct.set, %struct.set* %1717, i64 %idxprom3423
  %inner_dest3425 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3424, i32 0, i32 5
  %1718 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3425, align 8
  %fld3426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1718, i32 0, i32 1
  %arrayidx3427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3426, i32 0, i64 0
  %rtx3428 = bitcast %union.rtunion_def* %arrayidx3427 to %struct.rtx_def**
  %1719 = load %struct.rtx_def*, %struct.rtx_def** %rtx3428, align 8
  %1720 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp3429 = icmp eq %struct.rtx_def* %1719, %1720
  br i1 %cmp3429, label %lor.end.3527, label %lor.lhs.false.3431

lor.lhs.false.3431:                               ; preds = %lor.lhs.false.3422
  %1721 = load i32, i32* %i, align 4
  %idxprom3432 = sext i32 %1721 to i64
  %1722 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3433 = getelementptr inbounds %struct.set, %struct.set* %1722, i64 %idxprom3432
  %inner_dest3434 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3433, i32 0, i32 5
  %1723 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3434, align 8
  %fld3435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1723, i32 0, i32 1
  %arrayidx3436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3435, i32 0, i64 0
  %rtx3437 = bitcast %union.rtunion_def* %arrayidx3436 to %struct.rtx_def**
  %1724 = load %struct.rtx_def*, %struct.rtx_def** %rtx3437, align 8
  %1725 = bitcast %struct.rtx_def* %1724 to i32*
  %bf.load3438 = load i32, i32* %1725, align 8
  %bf.clear3439 = and i32 %bf.load3438, 65535
  %cmp3440 = icmp eq i32 %bf.clear3439, 75
  br i1 %cmp3440, label %land.lhs.true.3442, label %lor.rhs.3516

land.lhs.true.3442:                               ; preds = %lor.lhs.false.3431
  %1726 = load i32, i32* %i, align 4
  %idxprom3443 = sext i32 %1726 to i64
  %1727 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3444 = getelementptr inbounds %struct.set, %struct.set* %1727, i64 %idxprom3443
  %inner_dest3445 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3444, i32 0, i32 5
  %1728 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3445, align 8
  %fld3446 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1728, i32 0, i32 1
  %arrayidx3447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3446, i32 0, i64 0
  %rtx3448 = bitcast %union.rtunion_def* %arrayidx3447 to %struct.rtx_def**
  %1729 = load %struct.rtx_def*, %struct.rtx_def** %rtx3448, align 8
  %fld3449 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1729, i32 0, i32 1
  %arrayidx3450 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3449, i32 0, i64 1
  %rtx3451 = bitcast %union.rtunion_def* %arrayidx3450 to %struct.rtx_def**
  %1730 = load %struct.rtx_def*, %struct.rtx_def** %rtx3451, align 8
  %1731 = bitcast %struct.rtx_def* %1730 to i32*
  %bf.load3452 = load i32, i32* %1731, align 8
  %bf.clear3453 = and i32 %bf.load3452, 65535
  %cmp3454 = icmp eq i32 %bf.clear3453, 54
  br i1 %cmp3454, label %land.lhs.true.3456, label %lor.rhs.3516

land.lhs.true.3456:                               ; preds = %land.lhs.true.3442
  %1732 = load i32, i32* %i, align 4
  %idxprom3457 = sext i32 %1732 to i64
  %1733 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3458 = getelementptr inbounds %struct.set, %struct.set* %1733, i64 %idxprom3457
  %inner_dest3459 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3458, i32 0, i32 5
  %1734 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3459, align 8
  %fld3460 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1734, i32 0, i32 1
  %arrayidx3461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3460, i32 0, i64 0
  %rtx3462 = bitcast %union.rtunion_def* %arrayidx3461 to %struct.rtx_def**
  %1735 = load %struct.rtx_def*, %struct.rtx_def** %rtx3462, align 8
  %fld3463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1735, i32 0, i32 1
  %arrayidx3464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3463, i32 0, i64 0
  %rtx3465 = bitcast %union.rtunion_def* %arrayidx3464 to %struct.rtx_def**
  %1736 = load %struct.rtx_def*, %struct.rtx_def** %rtx3465, align 8
  %1737 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp3466 = icmp eq %struct.rtx_def* %1736, %1737
  br i1 %cmp3466, label %lor.end.3527, label %lor.lhs.false.3468

lor.lhs.false.3468:                               ; preds = %land.lhs.true.3456
  %1738 = load i32, i32* %i, align 4
  %idxprom3469 = sext i32 %1738 to i64
  %1739 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3470 = getelementptr inbounds %struct.set, %struct.set* %1739, i64 %idxprom3469
  %inner_dest3471 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3470, i32 0, i32 5
  %1740 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3471, align 8
  %fld3472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1740, i32 0, i32 1
  %arrayidx3473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3472, i32 0, i64 0
  %rtx3474 = bitcast %union.rtunion_def* %arrayidx3473 to %struct.rtx_def**
  %1741 = load %struct.rtx_def*, %struct.rtx_def** %rtx3474, align 8
  %fld3475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1741, i32 0, i32 1
  %arrayidx3476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3475, i32 0, i64 0
  %rtx3477 = bitcast %union.rtunion_def* %arrayidx3476 to %struct.rtx_def**
  %1742 = load %struct.rtx_def*, %struct.rtx_def** %rtx3477, align 8
  %1743 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp3478 = icmp eq %struct.rtx_def* %1742, %1743
  br i1 %cmp3478, label %lor.end.3527, label %lor.lhs.false.3480

lor.lhs.false.3480:                               ; preds = %lor.lhs.false.3468
  %1744 = load i32, i32* %i, align 4
  %idxprom3481 = sext i32 %1744 to i64
  %1745 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3482 = getelementptr inbounds %struct.set, %struct.set* %1745, i64 %idxprom3481
  %inner_dest3483 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3482, i32 0, i32 5
  %1746 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3483, align 8
  %fld3484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1746, i32 0, i32 1
  %arrayidx3485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3484, i32 0, i64 0
  %rtx3486 = bitcast %union.rtunion_def* %arrayidx3485 to %struct.rtx_def**
  %1747 = load %struct.rtx_def*, %struct.rtx_def** %rtx3486, align 8
  %1748 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp3487 = icmp eq %struct.rtx_def* %1747, %1748
  br i1 %cmp3487, label %land.lhs.true.3489, label %lor.lhs.false.3492

land.lhs.true.3489:                               ; preds = %lor.lhs.false.3480
  %1749 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv3490 = sext i8 %1749 to i32
  %tobool3491 = icmp ne i32 %conv3490, 0
  br i1 %tobool3491, label %lor.end.3527, label %lor.lhs.false.3492

lor.lhs.false.3492:                               ; preds = %land.lhs.true.3489, %lor.lhs.false.3480
  %1750 = load i32, i32* %i, align 4
  %idxprom3493 = sext i32 %1750 to i64
  %1751 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3494 = getelementptr inbounds %struct.set, %struct.set* %1751, i64 %idxprom3493
  %inner_dest3495 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3494, i32 0, i32 5
  %1752 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3495, align 8
  %fld3496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1752, i32 0, i32 1
  %arrayidx3497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3496, i32 0, i64 0
  %rtx3498 = bitcast %union.rtunion_def* %arrayidx3497 to %struct.rtx_def**
  %1753 = load %struct.rtx_def*, %struct.rtx_def** %rtx3498, align 8
  %fld3499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1753, i32 0, i32 1
  %arrayidx3500 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3499, i32 0, i64 0
  %rtx3501 = bitcast %union.rtunion_def* %arrayidx3500 to %struct.rtx_def**
  %1754 = load %struct.rtx_def*, %struct.rtx_def** %rtx3501, align 8
  %1755 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp3502 = icmp eq %struct.rtx_def* %1754, %1755
  br i1 %cmp3502, label %lor.end.3527, label %lor.lhs.false.3504

lor.lhs.false.3504:                               ; preds = %lor.lhs.false.3492
  %1756 = load i32, i32* %i, align 4
  %idxprom3505 = sext i32 %1756 to i64
  %1757 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3506 = getelementptr inbounds %struct.set, %struct.set* %1757, i64 %idxprom3505
  %inner_dest3507 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3506, i32 0, i32 5
  %1758 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3507, align 8
  %fld3508 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1758, i32 0, i32 1
  %arrayidx3509 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3508, i32 0, i64 0
  %rtx3510 = bitcast %union.rtunion_def* %arrayidx3509 to %struct.rtx_def**
  %1759 = load %struct.rtx_def*, %struct.rtx_def** %rtx3510, align 8
  %fld3511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1759, i32 0, i32 1
  %arrayidx3512 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3511, i32 0, i64 0
  %rtx3513 = bitcast %union.rtunion_def* %arrayidx3512 to %struct.rtx_def**
  %1760 = load %struct.rtx_def*, %struct.rtx_def** %rtx3513, align 8
  %1761 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp3514 = icmp eq %struct.rtx_def* %1760, %1761
  br i1 %cmp3514, label %lor.end.3527, label %lor.rhs.3516

lor.rhs.3516:                                     ; preds = %lor.lhs.false.3504, %land.lhs.true.3442, %lor.lhs.false.3431
  %1762 = load i32, i32* %i, align 4
  %idxprom3517 = sext i32 %1762 to i64
  %1763 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3518 = getelementptr inbounds %struct.set, %struct.set* %1763, i64 %idxprom3517
  %inner_dest3519 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3518, i32 0, i32 5
  %1764 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3519, align 8
  %fld3520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1764, i32 0, i32 1
  %arrayidx3521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3520, i32 0, i64 0
  %rtx3522 = bitcast %union.rtunion_def* %arrayidx3521 to %struct.rtx_def**
  %1765 = load %struct.rtx_def*, %struct.rtx_def** %rtx3522, align 8
  %1766 = bitcast %struct.rtx_def* %1765 to i32*
  %bf.load3523 = load i32, i32* %1766, align 8
  %bf.clear3524 = and i32 %bf.load3523, 65535
  %cmp3525 = icmp eq i32 %bf.clear3524, 70
  br label %lor.end.3527

lor.end.3527:                                     ; preds = %lor.rhs.3516, %lor.lhs.false.3504, %lor.lhs.false.3492, %land.lhs.true.3489, %lor.lhs.false.3468, %land.lhs.true.3456, %lor.lhs.false.3422, %lor.lhs.false.3413, %land.lhs.true.3410, %lor.lhs.false.3392, %lor.rhs.3383
  %1767 = phi i1 [ true, %lor.lhs.false.3504 ], [ true, %lor.lhs.false.3492 ], [ true, %land.lhs.true.3489 ], [ true, %lor.lhs.false.3468 ], [ true, %land.lhs.true.3456 ], [ true, %lor.lhs.false.3422 ], [ true, %lor.lhs.false.3413 ], [ true, %land.lhs.true.3410 ], [ true, %lor.lhs.false.3392 ], [ true, %lor.rhs.3383 ], [ %cmp3525, %lor.rhs.3516 ]
  br label %lor.end.3528

lor.end.3528:                                     ; preds = %lor.end.3527, %land.rhs.3375
  %1768 = phi i1 [ true, %land.rhs.3375 ], [ %1767, %lor.end.3527 ]
  br label %land.end.3529

land.end.3529:                                    ; preds = %lor.end.3528, %if.end.3367
  %1769 = phi i1 [ false, %if.end.3367 ], [ %1768, %lor.end.3528 ]
  %land.ext = zext i1 %1769 to i32
  %conv3530 = trunc i32 %land.ext to i8
  %1770 = load %struct.table_elt*, %struct.table_elt** %elt3181, align 8
  %in_memory3531 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1770, i32 0, i32 11
  store i8 %conv3530, i8* %in_memory3531, align 1
  %1771 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1772 = bitcast %struct.rtx_def* %1771 to i32*
  %bf.load3532 = load i32, i32* %1772, align 8
  %bf.clear3533 = and i32 %bf.load3532, 65535
  %cmp3534 = icmp eq i32 %bf.clear3533, 63
  br i1 %cmp3534, label %land.lhs.true.3536, label %if.end.3736

land.lhs.true.3536:                               ; preds = %land.end.3529
  %1773 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1773, i32 0, i32 1
  %arrayidx3538 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3537, i32 0, i64 0
  %rtx3539 = bitcast %union.rtunion_def* %arrayidx3538 to %struct.rtx_def**
  %1774 = load %struct.rtx_def*, %struct.rtx_def** %rtx3539, align 8
  %1775 = bitcast %struct.rtx_def* %1774 to i32*
  %bf.load3540 = load i32, i32* %1775, align 8
  %bf.lshr3541 = lshr i32 %bf.load3540, 16
  %bf.clear3542 = and i32 %bf.lshr3541, 255
  %idxprom3543 = sext i32 %bf.clear3542 to i64
  %arrayidx3544 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3543
  %1776 = load i8, i8* %arrayidx3544, align 1
  %conv3545 = zext i8 %1776 to i32
  %sub3546 = sub nsw i32 %conv3545, 1
  %1777 = load i32, i32* @target_flags, align 4
  %and3547 = and i32 %1777, 33554432
  %tobool3548 = icmp ne i32 %and3547, 0
  %cond3549 = select i1 %tobool3548, i32 8, i32 4
  %div3550 = sdiv i32 %sub3546, %cond3549
  %1778 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1779 = bitcast %struct.rtx_def* %1778 to i32*
  %bf.load3551 = load i32, i32* %1779, align 8
  %bf.lshr3552 = lshr i32 %bf.load3551, 16
  %bf.clear3553 = and i32 %bf.lshr3552, 255
  %idxprom3554 = sext i32 %bf.clear3553 to i64
  %arrayidx3555 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3554
  %1780 = load i8, i8* %arrayidx3555, align 1
  %conv3556 = zext i8 %1780 to i32
  %sub3557 = sub nsw i32 %conv3556, 1
  %1781 = load i32, i32* @target_flags, align 4
  %and3558 = and i32 %1781, 33554432
  %tobool3559 = icmp ne i32 %and3558, 0
  %cond3560 = select i1 %tobool3559, i32 8, i32 4
  %div3561 = sdiv i32 %sub3557, %cond3560
  %cmp3562 = icmp eq i32 %div3550, %div3561
  br i1 %cmp3562, label %land.lhs.true.3564, label %if.end.3736

land.lhs.true.3564:                               ; preds = %land.lhs.true.3536
  %1782 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %1783 = bitcast %struct.rtx_def* %1782 to i32*
  %bf.load3565 = load i32, i32* %1783, align 8
  %bf.lshr3566 = lshr i32 %bf.load3565, 16
  %bf.clear3567 = and i32 %bf.lshr3566, 255
  %idxprom3568 = sext i32 %bf.clear3567 to i64
  %arrayidx3569 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3568
  %1784 = load i8, i8* %arrayidx3569, align 1
  %conv3570 = zext i8 %1784 to i32
  %1785 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1785, i32 0, i32 1
  %arrayidx3572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3571, i32 0, i64 0
  %rtx3573 = bitcast %union.rtunion_def* %arrayidx3572 to %struct.rtx_def**
  %1786 = load %struct.rtx_def*, %struct.rtx_def** %rtx3573, align 8
  %1787 = bitcast %struct.rtx_def* %1786 to i32*
  %bf.load3574 = load i32, i32* %1787, align 8
  %bf.lshr3575 = lshr i32 %bf.load3574, 16
  %bf.clear3576 = and i32 %bf.lshr3575, 255
  %idxprom3577 = sext i32 %bf.clear3576 to i64
  %arrayidx3578 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom3577
  %1788 = load i8, i8* %arrayidx3578, align 1
  %conv3579 = zext i8 %1788 to i32
  %cmp3580 = icmp sge i32 %conv3570, %conv3579
  br i1 %cmp3580, label %land.lhs.true.3582, label %if.end.3736

land.lhs.true.3582:                               ; preds = %land.lhs.true.3564
  %1789 = load i32, i32* %i, align 4
  %idxprom3583 = sext i32 %1789 to i64
  %1790 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3584 = getelementptr inbounds %struct.set, %struct.set* %1790, i64 %idxprom3583
  %src_elt3585 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3584, i32 0, i32 2
  %1791 = load %struct.table_elt*, %struct.table_elt** %src_elt3585, align 8
  %cmp3586 = icmp ne %struct.table_elt* %1791, null
  br i1 %cmp3586, label %if.then.3588, label %if.end.3736

if.then.3588:                                     ; preds = %land.lhs.true.3582
  %1792 = load %struct.rtx_def*, %struct.rtx_def** %dest3170, align 8
  %fld3589 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1792, i32 0, i32 1
  %arrayidx3590 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3589, i32 0, i64 0
  %rtx3591 = bitcast %union.rtunion_def* %arrayidx3590 to %struct.rtx_def**
  %1793 = load %struct.rtx_def*, %struct.rtx_def** %rtx3591, align 8
  %1794 = bitcast %struct.rtx_def* %1793 to i32*
  %bf.load3592 = load i32, i32* %1794, align 8
  %bf.lshr3593 = lshr i32 %bf.load3592, 16
  %bf.clear3594 = and i32 %bf.lshr3593, 255
  store i32 %bf.clear3594, i32* %new_mode, align 4
  store %struct.table_elt* null, %struct.table_elt** %classp3596, align 8
  %1795 = load i32, i32* %i, align 4
  %idxprom3597 = sext i32 %1795 to i64
  %1796 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3598 = getelementptr inbounds %struct.set, %struct.set* %1796, i64 %idxprom3597
  %src_elt3599 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3598, i32 0, i32 2
  %1797 = load %struct.table_elt*, %struct.table_elt** %src_elt3599, align 8
  %first_same_value3600 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1797, i32 0, i32 6
  %1798 = load %struct.table_elt*, %struct.table_elt** %first_same_value3600, align 8
  store %struct.table_elt* %1798, %struct.table_elt** %elt3595, align 8
  br label %for.cond.3601

for.cond.3601:                                    ; preds = %for.inc.3733, %if.then.3588
  %1799 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %tobool3602 = icmp ne %struct.table_elt* %1799, null
  br i1 %tobool3602, label %for.body.3603, label %for.end.3735

for.body.3603:                                    ; preds = %for.cond.3601
  store %struct.rtx_def* null, %struct.rtx_def** %new_src3604, align 8
  %1800 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %exp3607 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1800, i32 0, i32 0
  %1801 = load %struct.rtx_def*, %struct.rtx_def** %exp3607, align 8
  %1802 = bitcast %struct.rtx_def* %1801 to i32*
  %bf.load3608 = load i32, i32* %1802, align 8
  %bf.clear3609 = and i32 %bf.load3608, 65535
  %cmp3610 = icmp ne i32 %bf.clear3609, 61
  br i1 %cmp3610, label %land.lhs.true.3612, label %if.end.3618

land.lhs.true.3612:                               ; preds = %for.body.3603
  %1803 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %exp3613 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1803, i32 0, i32 0
  %1804 = load %struct.rtx_def*, %struct.rtx_def** %exp3613, align 8
  %1805 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %exp3614 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1805, i32 0, i32 0
  %1806 = load %struct.rtx_def*, %struct.rtx_def** %exp3614, align 8
  %call3615 = call i32 @exp_equiv_p(%struct.rtx_def* %1804, %struct.rtx_def* %1806, i32 1, i32 0)
  %tobool3616 = icmp ne i32 %call3615, 0
  br i1 %tobool3616, label %if.end.3618, label %if.then.3617

if.then.3617:                                     ; preds = %land.lhs.true.3612
  br label %for.inc.3733

if.end.3618:                                      ; preds = %land.lhs.true.3612, %for.body.3603
  %1807 = load i32, i32* %new_mode, align 4
  %1808 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %exp3619 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1808, i32 0, i32 0
  %1809 = load %struct.rtx_def*, %struct.rtx_def** %exp3619, align 8
  %call3620 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %1807, %struct.rtx_def* %1809)
  store %struct.rtx_def* %call3620, %struct.rtx_def** %new_src3604, align 8
  %1810 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %cmp3621 = icmp eq %struct.rtx_def* %1810, null
  br i1 %cmp3621, label %if.then.3623, label %if.end.3626

if.then.3623:                                     ; preds = %if.end.3618
  %1811 = load i32, i32* %new_mode, align 4
  %1812 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %exp3624 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1812, i32 0, i32 0
  %1813 = load %struct.rtx_def*, %struct.rtx_def** %exp3624, align 8
  %call3625 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %1811, %struct.rtx_def* %1813, i32 0)
  store %struct.rtx_def* %call3625, %struct.rtx_def** %new_src3604, align 8
  br label %if.end.3626

if.end.3626:                                      ; preds = %if.then.3623, %if.end.3618
  %1814 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1815 = bitcast %struct.rtx_def* %1814 to i32*
  %bf.load3627 = load i32, i32* %1815, align 8
  %bf.clear3628 = and i32 %bf.load3627, 65535
  %cmp3629 = icmp eq i32 %bf.clear3628, 61
  br i1 %cmp3629, label %land.lhs.true.3631, label %cond.false.3655

land.lhs.true.3631:                               ; preds = %if.end.3626
  %1816 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1816, i32 0, i32 1
  %arrayidx3633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3632, i32 0, i64 0
  %rtuint3634 = bitcast %union.rtunion_def* %arrayidx3633 to i32*
  %1817 = load i32, i32* %rtuint3634, align 4
  %cmp3635 = icmp uge i32 %1817, 53
  br i1 %cmp3635, label %cond.true.3637, label %cond.false.3655

cond.true.3637:                                   ; preds = %land.lhs.true.3631
  %1818 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3638 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1818, i32 0, i32 1
  %arrayidx3639 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3638, i32 0, i64 0
  %rtuint3640 = bitcast %union.rtunion_def* %arrayidx3639 to i32*
  %1819 = load i32, i32* %rtuint3640, align 4
  %1820 = load i32, i32* @cached_regno, align 4
  %cmp3641 = icmp eq i32 %1819, %1820
  br i1 %cmp3641, label %land.lhs.true.3643, label %cond.false.3646

land.lhs.true.3643:                               ; preds = %cond.true.3637
  %1821 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3644 = icmp ne %struct.cse_reg_info* %1821, null
  br i1 %tobool3644, label %cond.true.3645, label %cond.false.3646

cond.true.3645:                                   ; preds = %land.lhs.true.3643
  %1822 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3651

cond.false.3646:                                  ; preds = %land.lhs.true.3643, %cond.true.3637
  %1823 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1823, i32 0, i32 1
  %arrayidx3648 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3647, i32 0, i64 0
  %rtuint3649 = bitcast %union.rtunion_def* %arrayidx3648 to i32*
  %1824 = load i32, i32* %rtuint3649, align 4
  %call3650 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1824)
  br label %cond.end.3651

cond.end.3651:                                    ; preds = %cond.false.3646, %cond.true.3645
  %cond3652 = phi %struct.cse_reg_info* [ %1822, %cond.true.3645 ], [ %call3650, %cond.false.3646 ]
  %reg_qty3653 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3652, i32 0, i32 3
  %1825 = load i32, i32* %reg_qty3653, align 4
  %add3654 = add i32 7808, %1825
  br label %cond.end.3657

cond.false.3655:                                  ; preds = %land.lhs.true.3631, %if.end.3626
  %1826 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1827 = load i32, i32* %new_mode, align 4
  %call3656 = call i32 @canon_hash(%struct.rtx_def* %1826, i32 %1827)
  br label %cond.end.3657

cond.end.3657:                                    ; preds = %cond.false.3655, %cond.end.3651
  %cond3658 = phi i32 [ %add3654, %cond.end.3651 ], [ %call3656, %cond.false.3655 ]
  %and3659 = and i32 %cond3658, 31
  store i32 %and3659, i32* %src_hash3605, align 4
  %1828 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1829 = load i32, i32* %src_hash3605, align 4
  %1830 = load i32, i32* %new_mode, align 4
  %call3660 = call %struct.table_elt* @lookup(%struct.rtx_def* %1828, i32 %1829, i32 %1830)
  store %struct.table_elt* %call3660, %struct.table_elt** %src_elt3606, align 8
  %1831 = load %struct.table_elt*, %struct.table_elt** %src_elt3606, align 8
  %cmp3661 = icmp eq %struct.table_elt* %1831, null
  br i1 %cmp3661, label %if.then.3663, label %if.else.3704

if.then.3663:                                     ; preds = %cond.end.3657
  %1832 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1833 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %call3664 = call i32 @insert_regs(%struct.rtx_def* %1832, %struct.table_elt* %1833, i32 0)
  %tobool3665 = icmp ne i32 %call3664, 0
  br i1 %tobool3665, label %if.then.3666, label %if.end.3700

if.then.3666:                                     ; preds = %if.then.3663
  %1834 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  call void @rehash_using_reg(%struct.rtx_def* %1834)
  %1835 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1836 = bitcast %struct.rtx_def* %1835 to i32*
  %bf.load3667 = load i32, i32* %1836, align 8
  %bf.clear3668 = and i32 %bf.load3667, 65535
  %cmp3669 = icmp eq i32 %bf.clear3668, 61
  br i1 %cmp3669, label %land.lhs.true.3671, label %cond.false.3695

land.lhs.true.3671:                               ; preds = %if.then.3666
  %1837 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1837, i32 0, i32 1
  %arrayidx3673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3672, i32 0, i64 0
  %rtuint3674 = bitcast %union.rtunion_def* %arrayidx3673 to i32*
  %1838 = load i32, i32* %rtuint3674, align 4
  %cmp3675 = icmp uge i32 %1838, 53
  br i1 %cmp3675, label %cond.true.3677, label %cond.false.3695

cond.true.3677:                                   ; preds = %land.lhs.true.3671
  %1839 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1839, i32 0, i32 1
  %arrayidx3679 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3678, i32 0, i64 0
  %rtuint3680 = bitcast %union.rtunion_def* %arrayidx3679 to i32*
  %1840 = load i32, i32* %rtuint3680, align 4
  %1841 = load i32, i32* @cached_regno, align 4
  %cmp3681 = icmp eq i32 %1840, %1841
  br i1 %cmp3681, label %land.lhs.true.3683, label %cond.false.3686

land.lhs.true.3683:                               ; preds = %cond.true.3677
  %1842 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3684 = icmp ne %struct.cse_reg_info* %1842, null
  br i1 %tobool3684, label %cond.true.3685, label %cond.false.3686

cond.true.3685:                                   ; preds = %land.lhs.true.3683
  %1843 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3691

cond.false.3686:                                  ; preds = %land.lhs.true.3683, %cond.true.3677
  %1844 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %fld3687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1844, i32 0, i32 1
  %arrayidx3688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3687, i32 0, i64 0
  %rtuint3689 = bitcast %union.rtunion_def* %arrayidx3688 to i32*
  %1845 = load i32, i32* %rtuint3689, align 4
  %call3690 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1845)
  br label %cond.end.3691

cond.end.3691:                                    ; preds = %cond.false.3686, %cond.true.3685
  %cond3692 = phi %struct.cse_reg_info* [ %1843, %cond.true.3685 ], [ %call3690, %cond.false.3686 ]
  %reg_qty3693 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3692, i32 0, i32 3
  %1846 = load i32, i32* %reg_qty3693, align 4
  %add3694 = add i32 7808, %1846
  br label %cond.end.3697

cond.false.3695:                                  ; preds = %land.lhs.true.3671, %if.then.3666
  %1847 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1848 = load i32, i32* %new_mode, align 4
  %call3696 = call i32 @canon_hash(%struct.rtx_def* %1847, i32 %1848)
  br label %cond.end.3697

cond.end.3697:                                    ; preds = %cond.false.3695, %cond.end.3691
  %cond3698 = phi i32 [ %add3694, %cond.end.3691 ], [ %call3696, %cond.false.3695 ]
  %and3699 = and i32 %cond3698, 31
  store i32 %and3699, i32* %src_hash3605, align 4
  br label %if.end.3700

if.end.3700:                                      ; preds = %cond.end.3697, %if.then.3663
  %1849 = load %struct.rtx_def*, %struct.rtx_def** %new_src3604, align 8
  %1850 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %1851 = load i32, i32* %src_hash3605, align 4
  %1852 = load i32, i32* %new_mode, align 4
  %call3701 = call %struct.table_elt* @insert(%struct.rtx_def* %1849, %struct.table_elt* %1850, i32 %1851, i32 %1852)
  store %struct.table_elt* %call3701, %struct.table_elt** %src_elt3606, align 8
  %1853 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %in_memory3702 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1853, i32 0, i32 11
  %1854 = load i8, i8* %in_memory3702, align 1
  %1855 = load %struct.table_elt*, %struct.table_elt** %src_elt3606, align 8
  %in_memory3703 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1855, i32 0, i32 11
  store i8 %1854, i8* %in_memory3703, align 1
  br label %if.end.3712

if.else.3704:                                     ; preds = %cond.end.3657
  %1856 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %tobool3705 = icmp ne %struct.table_elt* %1856, null
  br i1 %tobool3705, label %land.lhs.true.3706, label %if.end.3711

land.lhs.true.3706:                               ; preds = %if.else.3704
  %1857 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %1858 = load %struct.table_elt*, %struct.table_elt** %src_elt3606, align 8
  %first_same_value3707 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1858, i32 0, i32 6
  %1859 = load %struct.table_elt*, %struct.table_elt** %first_same_value3707, align 8
  %cmp3708 = icmp ne %struct.table_elt* %1857, %1859
  br i1 %cmp3708, label %if.then.3710, label %if.end.3711

if.then.3710:                                     ; preds = %land.lhs.true.3706
  %1860 = load %struct.table_elt*, %struct.table_elt** %src_elt3606, align 8
  %1861 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  call void @merge_equiv_classes(%struct.table_elt* %1860, %struct.table_elt* %1861)
  br label %if.end.3711

if.end.3711:                                      ; preds = %if.then.3710, %land.lhs.true.3706, %if.else.3704
  br label %if.end.3712

if.end.3712:                                      ; preds = %if.end.3711, %if.end.3700
  %1862 = load %struct.table_elt*, %struct.table_elt** %src_elt3606, align 8
  %first_same_value3713 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1862, i32 0, i32 6
  %1863 = load %struct.table_elt*, %struct.table_elt** %first_same_value3713, align 8
  store %struct.table_elt* %1863, %struct.table_elt** %classp3596, align 8
  br label %while.cond.3714

while.cond.3714:                                  ; preds = %while.body.3730, %if.end.3712
  %1864 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %tobool3715 = icmp ne %struct.table_elt* %1864, null
  br i1 %tobool3715, label %land.lhs.true.3716, label %land.end.3728

land.lhs.true.3716:                               ; preds = %while.cond.3714
  %1865 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %exp3717 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1865, i32 0, i32 0
  %1866 = load %struct.rtx_def*, %struct.rtx_def** %exp3717, align 8
  %1867 = bitcast %struct.rtx_def* %1866 to i32*
  %bf.load3718 = load i32, i32* %1867, align 8
  %bf.clear3719 = and i32 %bf.load3718, 65535
  %cmp3720 = icmp ne i32 %bf.clear3719, 61
  br i1 %cmp3720, label %land.rhs.3722, label %land.end.3728

land.rhs.3722:                                    ; preds = %land.lhs.true.3716
  %1868 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %exp3723 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1868, i32 0, i32 0
  %1869 = load %struct.rtx_def*, %struct.rtx_def** %exp3723, align 8
  %1870 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %exp3724 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1870, i32 0, i32 0
  %1871 = load %struct.rtx_def*, %struct.rtx_def** %exp3724, align 8
  %call3725 = call i32 @exp_equiv_p(%struct.rtx_def* %1869, %struct.rtx_def* %1871, i32 1, i32 0)
  %tobool3726 = icmp ne i32 %call3725, 0
  %lnot3727 = xor i1 %tobool3726, true
  br label %land.end.3728

land.end.3728:                                    ; preds = %land.rhs.3722, %land.lhs.true.3716, %while.cond.3714
  %1872 = phi i1 [ false, %land.lhs.true.3716 ], [ false, %while.cond.3714 ], [ %lnot3727, %land.rhs.3722 ]
  br i1 %1872, label %while.body.3730, label %while.end.3732

while.body.3730:                                  ; preds = %land.end.3728
  %1873 = load %struct.table_elt*, %struct.table_elt** %classp3596, align 8
  %next_same_value3731 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1873, i32 0, i32 4
  %1874 = load %struct.table_elt*, %struct.table_elt** %next_same_value3731, align 8
  store %struct.table_elt* %1874, %struct.table_elt** %classp3596, align 8
  br label %while.cond.3714

while.end.3732:                                   ; preds = %land.end.3728
  br label %for.inc.3733

for.inc.3733:                                     ; preds = %while.end.3732, %if.then.3617
  %1875 = load %struct.table_elt*, %struct.table_elt** %elt3595, align 8
  %next_same_value3734 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1875, i32 0, i32 4
  %1876 = load %struct.table_elt*, %struct.table_elt** %next_same_value3734, align 8
  store %struct.table_elt* %1876, %struct.table_elt** %elt3595, align 8
  br label %for.cond.3601

for.end.3735:                                     ; preds = %for.cond.3601
  br label %if.end.3736

if.end.3736:                                      ; preds = %for.end.3735, %land.lhs.true.3582, %land.lhs.true.3564, %land.lhs.true.3536, %land.end.3529
  br label %if.end.3737

if.end.3737:                                      ; preds = %if.end.3736, %for.body.3164
  br label %for.inc.3738

for.inc.3738:                                     ; preds = %if.end.3737, %if.then.3265
  %1877 = load i32, i32* %i, align 4
  %inc3739 = add nsw i32 %1877, 1
  store i32 %inc3739, i32* %i, align 4
  br label %for.cond.3161

for.end.3740:                                     ; preds = %for.cond.3161
  %1878 = load i32, i32* %n_sets, align 4
  %cmp3741 = icmp eq i32 %1878, 1
  br i1 %cmp3741, label %land.lhs.true.3743, label %if.end.3973

land.lhs.true.3743:                               ; preds = %for.end.3740
  %1879 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3744 = getelementptr inbounds %struct.set, %struct.set* %1879, i64 0
  %rtl3745 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3744, i32 0, i32 0
  %1880 = load %struct.rtx_def*, %struct.rtx_def** %rtl3745, align 8
  %tobool3746 = icmp ne %struct.rtx_def* %1880, null
  br i1 %tobool3746, label %land.lhs.true.3747, label %if.end.3973

land.lhs.true.3747:                               ; preds = %land.lhs.true.3743
  %1881 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3748 = getelementptr inbounds %struct.set, %struct.set* %1881, i64 0
  %rtl3749 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3748, i32 0, i32 0
  %1882 = load %struct.rtx_def*, %struct.rtx_def** %rtl3749, align 8
  %fld3750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1882, i32 0, i32 1
  %arrayidx3751 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3750, i32 0, i64 0
  %rtx3752 = bitcast %union.rtunion_def* %arrayidx3751 to %struct.rtx_def**
  %1883 = load %struct.rtx_def*, %struct.rtx_def** %rtx3752, align 8
  %1884 = bitcast %struct.rtx_def* %1883 to i32*
  %bf.load3753 = load i32, i32* %1884, align 8
  %bf.clear3754 = and i32 %bf.load3753, 65535
  %cmp3755 = icmp eq i32 %bf.clear3754, 61
  br i1 %cmp3755, label %land.lhs.true.3757, label %if.end.3973

land.lhs.true.3757:                               ; preds = %land.lhs.true.3747
  %1885 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld3758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1885, i32 0, i32 1
  %arrayidx3759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3758, i32 0, i64 1
  %rtx3760 = bitcast %union.rtunion_def* %arrayidx3759 to %struct.rtx_def**
  %1886 = load %struct.rtx_def*, %struct.rtx_def** %rtx3760, align 8
  %fld3761 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1886, i32 0, i32 1
  %arrayidx3762 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3761, i32 0, i64 2
  %rtx3763 = bitcast %union.rtunion_def* %arrayidx3762 to %struct.rtx_def**
  %1887 = load %struct.rtx_def*, %struct.rtx_def** %rtx3763, align 8
  %1888 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp3764 = icmp eq %struct.rtx_def* %1887, %1888
  br i1 %cmp3764, label %land.lhs.true.3766, label %if.end.3973

land.lhs.true.3766:                               ; preds = %land.lhs.true.3757
  %1889 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3767 = getelementptr inbounds %struct.set, %struct.set* %1889, i64 0
  %rtl3768 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3767, i32 0, i32 0
  %1890 = load %struct.rtx_def*, %struct.rtx_def** %rtl3768, align 8
  %fld3769 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1890, i32 0, i32 1
  %arrayidx3770 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3769, i32 0, i64 1
  %rtx3771 = bitcast %union.rtunion_def* %arrayidx3770 to %struct.rtx_def**
  %1891 = load %struct.rtx_def*, %struct.rtx_def** %rtx3771, align 8
  %1892 = bitcast %struct.rtx_def* %1891 to i32*
  %bf.load3772 = load i32, i32* %1892, align 8
  %bf.clear3773 = and i32 %bf.load3772, 65535
  %cmp3774 = icmp eq i32 %bf.clear3773, 61
  br i1 %cmp3774, label %land.lhs.true.3776, label %if.end.3973

land.lhs.true.3776:                               ; preds = %land.lhs.true.3766
  %1893 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3777 = getelementptr inbounds %struct.set, %struct.set* %1893, i64 0
  %rtl3778 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3777, i32 0, i32 0
  %1894 = load %struct.rtx_def*, %struct.rtx_def** %rtl3778, align 8
  %fld3779 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1894, i32 0, i32 1
  %arrayidx3780 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3779, i32 0, i64 1
  %rtx3781 = bitcast %union.rtunion_def* %arrayidx3780 to %struct.rtx_def**
  %1895 = load %struct.rtx_def*, %struct.rtx_def** %rtx3781, align 8
  %fld3782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1895, i32 0, i32 1
  %arrayidx3783 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3782, i32 0, i64 0
  %rtuint3784 = bitcast %union.rtunion_def* %arrayidx3783 to i32*
  %1896 = load i32, i32* %rtuint3784, align 4
  %cmp3785 = icmp uge i32 %1896, 53
  br i1 %cmp3785, label %land.lhs.true.3787, label %if.end.3973

land.lhs.true.3787:                               ; preds = %land.lhs.true.3776
  %1897 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3788 = getelementptr inbounds %struct.set, %struct.set* %1897, i64 0
  %rtl3789 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3788, i32 0, i32 0
  %1898 = load %struct.rtx_def*, %struct.rtx_def** %rtl3789, align 8
  %fld3790 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1898, i32 0, i32 1
  %arrayidx3791 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3790, i32 0, i64 1
  %rtx3792 = bitcast %union.rtunion_def* %arrayidx3791 to %struct.rtx_def**
  %1899 = load %struct.rtx_def*, %struct.rtx_def** %rtx3792, align 8
  %fld3793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1899, i32 0, i32 1
  %arrayidx3794 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3793, i32 0, i64 0
  %rtuint3795 = bitcast %union.rtunion_def* %arrayidx3794 to i32*
  %1900 = load i32, i32* %rtuint3795, align 4
  %1901 = load i32, i32* @cached_regno, align 4
  %cmp3796 = icmp eq i32 %1900, %1901
  br i1 %cmp3796, label %land.lhs.true.3798, label %cond.false.3801

land.lhs.true.3798:                               ; preds = %land.lhs.true.3787
  %1902 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3799 = icmp ne %struct.cse_reg_info* %1902, null
  br i1 %tobool3799, label %cond.true.3800, label %cond.false.3801

cond.true.3800:                                   ; preds = %land.lhs.true.3798
  %1903 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3811

cond.false.3801:                                  ; preds = %land.lhs.true.3798, %land.lhs.true.3787
  %1904 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3802 = getelementptr inbounds %struct.set, %struct.set* %1904, i64 0
  %rtl3803 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3802, i32 0, i32 0
  %1905 = load %struct.rtx_def*, %struct.rtx_def** %rtl3803, align 8
  %fld3804 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1905, i32 0, i32 1
  %arrayidx3805 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3804, i32 0, i64 1
  %rtx3806 = bitcast %union.rtunion_def* %arrayidx3805 to %struct.rtx_def**
  %1906 = load %struct.rtx_def*, %struct.rtx_def** %rtx3806, align 8
  %fld3807 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1906, i32 0, i32 1
  %arrayidx3808 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3807, i32 0, i64 0
  %rtuint3809 = bitcast %union.rtunion_def* %arrayidx3808 to i32*
  %1907 = load i32, i32* %rtuint3809, align 4
  %call3810 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1907)
  br label %cond.end.3811

cond.end.3811:                                    ; preds = %cond.false.3801, %cond.true.3800
  %cond3812 = phi %struct.cse_reg_info* [ %1903, %cond.true.3800 ], [ %call3810, %cond.false.3801 ]
  %reg_qty3813 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3812, i32 0, i32 3
  %1908 = load i32, i32* %reg_qty3813, align 4
  %1909 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3814 = getelementptr inbounds %struct.set, %struct.set* %1909, i64 0
  %rtl3815 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3814, i32 0, i32 0
  %1910 = load %struct.rtx_def*, %struct.rtx_def** %rtl3815, align 8
  %fld3816 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1910, i32 0, i32 1
  %arrayidx3817 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3816, i32 0, i64 1
  %rtx3818 = bitcast %union.rtunion_def* %arrayidx3817 to %struct.rtx_def**
  %1911 = load %struct.rtx_def*, %struct.rtx_def** %rtx3818, align 8
  %fld3819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1911, i32 0, i32 1
  %arrayidx3820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3819, i32 0, i64 0
  %rtuint3821 = bitcast %union.rtunion_def* %arrayidx3820 to i32*
  %1912 = load i32, i32* %rtuint3821, align 4
  %cmp3822 = icmp ne i32 %1908, %1912
  br i1 %cmp3822, label %if.then.3824, label %if.end.3973

if.then.3824:                                     ; preds = %cond.end.3811
  %1913 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3826 = getelementptr inbounds %struct.set, %struct.set* %1913, i64 0
  %rtl3827 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3826, i32 0, i32 0
  %1914 = load %struct.rtx_def*, %struct.rtx_def** %rtl3827, align 8
  %fld3828 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1914, i32 0, i32 1
  %arrayidx3829 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3828, i32 0, i64 1
  %rtx3830 = bitcast %union.rtunion_def* %arrayidx3829 to %struct.rtx_def**
  %1915 = load %struct.rtx_def*, %struct.rtx_def** %rtx3830, align 8
  %fld3831 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1915, i32 0, i32 1
  %arrayidx3832 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3831, i32 0, i64 0
  %rtuint3833 = bitcast %union.rtunion_def* %arrayidx3832 to i32*
  %1916 = load i32, i32* %rtuint3833, align 4
  %1917 = load i32, i32* @cached_regno, align 4
  %cmp3834 = icmp eq i32 %1916, %1917
  br i1 %cmp3834, label %land.lhs.true.3836, label %cond.false.3839

land.lhs.true.3836:                               ; preds = %if.then.3824
  %1918 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3837 = icmp ne %struct.cse_reg_info* %1918, null
  br i1 %tobool3837, label %cond.true.3838, label %cond.false.3839

cond.true.3838:                                   ; preds = %land.lhs.true.3836
  %1919 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.3849

cond.false.3839:                                  ; preds = %land.lhs.true.3836, %if.then.3824
  %1920 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3840 = getelementptr inbounds %struct.set, %struct.set* %1920, i64 0
  %rtl3841 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3840, i32 0, i32 0
  %1921 = load %struct.rtx_def*, %struct.rtx_def** %rtl3841, align 8
  %fld3842 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1921, i32 0, i32 1
  %arrayidx3843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3842, i32 0, i64 1
  %rtx3844 = bitcast %union.rtunion_def* %arrayidx3843 to %struct.rtx_def**
  %1922 = load %struct.rtx_def*, %struct.rtx_def** %rtx3844, align 8
  %fld3845 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1922, i32 0, i32 1
  %arrayidx3846 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3845, i32 0, i64 0
  %rtuint3847 = bitcast %union.rtunion_def* %arrayidx3846 to i32*
  %1923 = load i32, i32* %rtuint3847, align 4
  %call3848 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1923)
  br label %cond.end.3849

cond.end.3849:                                    ; preds = %cond.false.3839, %cond.true.3838
  %cond3850 = phi %struct.cse_reg_info* [ %1919, %cond.true.3838 ], [ %call3848, %cond.false.3839 ]
  %reg_qty3851 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond3850, i32 0, i32 3
  %1924 = load i32, i32* %reg_qty3851, align 4
  store i32 %1924, i32* %src_q3825, align 4
  %1925 = load i32, i32* %src_q3825, align 4
  %idxprom3853 = sext i32 %1925 to i64
  %1926 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx3854 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1926, i64 %idxprom3853
  store %struct.qty_table_elem* %arrayidx3854, %struct.qty_table_elem** %src_ent3852, align 8
  %1927 = load %struct.qty_table_elem*, %struct.qty_table_elem** %src_ent3852, align 8
  %first_reg3855 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1927, i32 0, i32 4
  %1928 = load i32, i32* %first_reg3855, align 4
  %1929 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3856 = getelementptr inbounds %struct.set, %struct.set* %1929, i64 0
  %rtl3857 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3856, i32 0, i32 0
  %1930 = load %struct.rtx_def*, %struct.rtx_def** %rtl3857, align 8
  %fld3858 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1930, i32 0, i32 1
  %arrayidx3859 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3858, i32 0, i64 0
  %rtx3860 = bitcast %union.rtunion_def* %arrayidx3859 to %struct.rtx_def**
  %1931 = load %struct.rtx_def*, %struct.rtx_def** %rtx3860, align 8
  %fld3861 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1931, i32 0, i32 1
  %arrayidx3862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3861, i32 0, i64 0
  %rtuint3863 = bitcast %union.rtunion_def* %arrayidx3862 to i32*
  %1932 = load i32, i32* %rtuint3863, align 4
  %cmp3864 = icmp eq i32 %1928, %1932
  br i1 %cmp3864, label %land.lhs.true.3866, label %if.end.3972

land.lhs.true.3866:                               ; preds = %cond.end.3849
  %1933 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3867 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1933, i32 6, %struct.rtx_def* null)
  %tobool3868 = icmp ne %struct.rtx_def* %call3867, null
  br i1 %tobool3868, label %if.end.3972, label %if.then.3869

if.then.3869:                                     ; preds = %land.lhs.true.3866
  %1934 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3870 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %1934)
  store %struct.rtx_def* %call3870, %struct.rtx_def** %prev, align 8
  %1935 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %cmp3871 = icmp ne %struct.rtx_def* %1935, null
  br i1 %cmp3871, label %land.lhs.true.3873, label %if.end.3971

land.lhs.true.3873:                               ; preds = %if.then.3869
  %1936 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %1937 = bitcast %struct.rtx_def* %1936 to i32*
  %bf.load3874 = load i32, i32* %1937, align 8
  %bf.clear3875 = and i32 %bf.load3874, 65535
  %cmp3876 = icmp eq i32 %bf.clear3875, 32
  br i1 %cmp3876, label %land.lhs.true.3878, label %if.end.3971

land.lhs.true.3878:                               ; preds = %land.lhs.true.3873
  %1938 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld3879 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1938, i32 0, i32 1
  %arrayidx3880 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3879, i32 0, i64 3
  %rtx3881 = bitcast %union.rtunion_def* %arrayidx3880 to %struct.rtx_def**
  %1939 = load %struct.rtx_def*, %struct.rtx_def** %rtx3881, align 8
  %1940 = bitcast %struct.rtx_def* %1939 to i32*
  %bf.load3882 = load i32, i32* %1940, align 8
  %bf.clear3883 = and i32 %bf.load3882, 65535
  %cmp3884 = icmp eq i32 %bf.clear3883, 47
  br i1 %cmp3884, label %land.lhs.true.3886, label %if.end.3971

land.lhs.true.3886:                               ; preds = %land.lhs.true.3878
  %1941 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld3887 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1941, i32 0, i32 1
  %arrayidx3888 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3887, i32 0, i64 3
  %rtx3889 = bitcast %union.rtunion_def* %arrayidx3888 to %struct.rtx_def**
  %1942 = load %struct.rtx_def*, %struct.rtx_def** %rtx3889, align 8
  %fld3890 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1942, i32 0, i32 1
  %arrayidx3891 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3890, i32 0, i64 0
  %rtx3892 = bitcast %union.rtunion_def* %arrayidx3891 to %struct.rtx_def**
  %1943 = load %struct.rtx_def*, %struct.rtx_def** %rtx3892, align 8
  %1944 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3893 = getelementptr inbounds %struct.set, %struct.set* %1944, i64 0
  %rtl3894 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3893, i32 0, i32 0
  %1945 = load %struct.rtx_def*, %struct.rtx_def** %rtl3894, align 8
  %fld3895 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1945, i32 0, i32 1
  %arrayidx3896 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3895, i32 0, i64 1
  %rtx3897 = bitcast %union.rtunion_def* %arrayidx3896 to %struct.rtx_def**
  %1946 = load %struct.rtx_def*, %struct.rtx_def** %rtx3897, align 8
  %cmp3898 = icmp eq %struct.rtx_def* %1943, %1946
  br i1 %cmp3898, label %land.lhs.true.3900, label %if.end.3971

land.lhs.true.3900:                               ; preds = %land.lhs.true.3886
  %1947 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %call3901 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1947, i32 3, %struct.rtx_def* null)
  %tobool3902 = icmp ne %struct.rtx_def* %call3901, null
  br i1 %tobool3902, label %if.end.3971, label %if.then.3903

if.then.3903:                                     ; preds = %land.lhs.true.3900
  %1948 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3905 = getelementptr inbounds %struct.set, %struct.set* %1948, i64 0
  %rtl3906 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3905, i32 0, i32 0
  %1949 = load %struct.rtx_def*, %struct.rtx_def** %rtl3906, align 8
  %fld3907 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1949, i32 0, i32 1
  %arrayidx3908 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3907, i32 0, i64 0
  %rtx3909 = bitcast %union.rtunion_def* %arrayidx3908 to %struct.rtx_def**
  %1950 = load %struct.rtx_def*, %struct.rtx_def** %rtx3909, align 8
  store %struct.rtx_def* %1950, %struct.rtx_def** %dest3904, align 8
  %1951 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3911 = getelementptr inbounds %struct.set, %struct.set* %1951, i64 0
  %rtl3912 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3911, i32 0, i32 0
  %1952 = load %struct.rtx_def*, %struct.rtx_def** %rtl3912, align 8
  %fld3913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1952, i32 0, i32 1
  %arrayidx3914 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3913, i32 0, i64 1
  %rtx3915 = bitcast %union.rtunion_def* %arrayidx3914 to %struct.rtx_def**
  %1953 = load %struct.rtx_def*, %struct.rtx_def** %rtx3915, align 8
  store %struct.rtx_def* %1953, %struct.rtx_def** %src3910, align 8
  %1954 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %1955 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld3917 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1955, i32 0, i32 1
  %arrayidx3918 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3917, i32 0, i64 3
  %rtx3919 = bitcast %union.rtunion_def* %arrayidx3918 to %struct.rtx_def**
  %1956 = load %struct.rtx_def*, %struct.rtx_def** %rtx3919, align 8
  %fld3920 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1956, i32 0, i32 1
  %arrayidx3921 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3920, i32 0, i64 0
  %rtx3922 = bitcast %union.rtunion_def* %arrayidx3921 to %struct.rtx_def**
  %1957 = load %struct.rtx_def*, %struct.rtx_def** %dest3904, align 8
  %call3923 = call i32 @validate_change(%struct.rtx_def* %1954, %struct.rtx_def** %rtx3922, %struct.rtx_def* %1957, i32 1)
  %1958 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1959 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3924 = getelementptr inbounds %struct.set, %struct.set* %1959, i64 0
  %rtl3925 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3924, i32 0, i32 0
  %1960 = load %struct.rtx_def*, %struct.rtx_def** %rtl3925, align 8
  %fld3926 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1960, i32 0, i32 1
  %arrayidx3927 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3926, i32 0, i64 0
  %rtx3928 = bitcast %union.rtunion_def* %arrayidx3927 to %struct.rtx_def**
  %1961 = load %struct.rtx_def*, %struct.rtx_def** %src3910, align 8
  %call3929 = call i32 @validate_change(%struct.rtx_def* %1958, %struct.rtx_def** %rtx3928, %struct.rtx_def* %1961, i32 1)
  %1962 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1963 = load %struct.set*, %struct.set** %sets, align 8
  %arrayidx3930 = getelementptr inbounds %struct.set, %struct.set* %1963, i64 0
  %rtl3931 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3930, i32 0, i32 0
  %1964 = load %struct.rtx_def*, %struct.rtx_def** %rtl3931, align 8
  %fld3932 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1964, i32 0, i32 1
  %arrayidx3933 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3932, i32 0, i64 1
  %rtx3934 = bitcast %union.rtunion_def* %arrayidx3933 to %struct.rtx_def**
  %1965 = load %struct.rtx_def*, %struct.rtx_def** %dest3904, align 8
  %call3935 = call i32 @validate_change(%struct.rtx_def* %1962, %struct.rtx_def** %rtx3934, %struct.rtx_def* %1965, i32 1)
  %call3936 = call i32 @apply_change_group()
  %1966 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %call3937 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1966, i32 5, %struct.rtx_def* null)
  store %struct.rtx_def* %call3937, %struct.rtx_def** %note3916, align 8
  %1967 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %tobool3938 = icmp ne %struct.rtx_def* %1967, null
  br i1 %tobool3938, label %if.then.3939, label %if.end.3940

if.then.3939:                                     ; preds = %if.then.3903
  %1968 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %1969 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  call void @remove_note(%struct.rtx_def* %1968, %struct.rtx_def* %1969)
  br label %if.end.3940

if.end.3940:                                      ; preds = %if.then.3939, %if.then.3903
  %1970 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3941 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1970, i32 5, %struct.rtx_def* null)
  store %struct.rtx_def* %call3941, %struct.rtx_def** %note3916, align 8
  %1971 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %tobool3942 = icmp ne %struct.rtx_def* %1971, null
  br i1 %tobool3942, label %if.then.3943, label %if.end.3953

if.then.3943:                                     ; preds = %if.end.3940
  %1972 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1973 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  call void @remove_note(%struct.rtx_def* %1972, %struct.rtx_def* %1973)
  %1974 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld3944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1974, i32 0, i32 1
  %arrayidx3945 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3944, i32 0, i64 6
  %rtx3946 = bitcast %union.rtunion_def* %arrayidx3945 to %struct.rtx_def**
  %1975 = load %struct.rtx_def*, %struct.rtx_def** %rtx3946, align 8
  %1976 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %fld3947 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1976, i32 0, i32 1
  %arrayidx3948 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3947, i32 0, i64 1
  %rtx3949 = bitcast %union.rtunion_def* %arrayidx3948 to %struct.rtx_def**
  store %struct.rtx_def* %1975, %struct.rtx_def** %rtx3949, align 8
  %1977 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %1978 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8
  %fld3950 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1978, i32 0, i32 1
  %arrayidx3951 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3950, i32 0, i64 6
  %rtx3952 = bitcast %union.rtunion_def* %arrayidx3951 to %struct.rtx_def**
  store %struct.rtx_def* %1977, %struct.rtx_def** %rtx3952, align 8
  br label %if.end.3953

if.end.3953:                                      ; preds = %if.then.3943, %if.end.3940
  %1979 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call3954 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1979, i32 4, %struct.rtx_def* null)
  store %struct.rtx_def* %call3954, %struct.rtx_def** %note3916, align 8
  %1980 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %cmp3955 = icmp ne %struct.rtx_def* %1980, null
  br i1 %cmp3955, label %land.lhs.true.3957, label %if.end.3970

land.lhs.true.3957:                               ; preds = %if.end.3953
  %1981 = load %struct.rtx_def*, %struct.rtx_def** %dest3904, align 8
  %1982 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %fld3958 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1982, i32 0, i32 1
  %arrayidx3959 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3958, i32 0, i64 0
  %rtx3960 = bitcast %union.rtunion_def* %arrayidx3959 to %struct.rtx_def**
  %1983 = load %struct.rtx_def*, %struct.rtx_def** %rtx3960, align 8
  %call3961 = call i32 @reg_mentioned_p(%struct.rtx_def* %1981, %struct.rtx_def* %1983)
  %tobool3962 = icmp ne i32 %call3961, 0
  br i1 %tobool3962, label %if.then.3969, label %lor.lhs.false.3963

lor.lhs.false.3963:                               ; preds = %land.lhs.true.3957
  %1984 = load %struct.rtx_def*, %struct.rtx_def** %src3910, align 8
  %1985 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  %fld3964 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1985, i32 0, i32 1
  %arrayidx3965 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3964, i32 0, i64 0
  %rtx3966 = bitcast %union.rtunion_def* %arrayidx3965 to %struct.rtx_def**
  %1986 = load %struct.rtx_def*, %struct.rtx_def** %rtx3966, align 8
  %call3967 = call i32 @rtx_equal_p(%struct.rtx_def* %1984, %struct.rtx_def* %1986)
  %tobool3968 = icmp ne i32 %call3967, 0
  br i1 %tobool3968, label %if.then.3969, label %if.end.3970

if.then.3969:                                     ; preds = %lor.lhs.false.3963, %land.lhs.true.3957
  %1987 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1988 = load %struct.rtx_def*, %struct.rtx_def** %note3916, align 8
  call void @remove_note(%struct.rtx_def* %1987, %struct.rtx_def* %1988)
  br label %if.end.3970

if.end.3970:                                      ; preds = %if.then.3969, %lor.lhs.false.3963, %if.end.3953
  br label %if.end.3971

if.end.3971:                                      ; preds = %if.end.3970, %land.lhs.true.3900, %land.lhs.true.3886, %land.lhs.true.3878, %land.lhs.true.3873, %if.then.3869
  br label %if.end.3972

if.end.3972:                                      ; preds = %if.end.3971, %land.lhs.true.3866, %cond.end.3849
  br label %if.end.3973

if.end.3973:                                      ; preds = %if.end.3972, %cond.end.3811, %land.lhs.true.3776, %land.lhs.true.3766, %land.lhs.true.3757, %land.lhs.true.3747, %land.lhs.true.3743, %for.end.3740
  store %struct.table_elt* null, %struct.table_elt** @last_jump_equiv_class, align 8
  %1989 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %1990 = bitcast %struct.rtx_def* %1989 to i32*
  %bf.load3974 = load i32, i32* %1990, align 8
  %bf.clear3975 = and i32 %bf.load3974, 65535
  %cmp3976 = icmp eq i32 %bf.clear3975, 33
  br i1 %cmp3976, label %land.lhs.true.3978, label %if.end.3995

land.lhs.true.3978:                               ; preds = %if.end.3973
  %1991 = load i32, i32* %n_sets, align 4
  %cmp3979 = icmp eq i32 %1991, 1
  br i1 %cmp3979, label %land.lhs.true.3981, label %if.end.3995

land.lhs.true.3981:                               ; preds = %land.lhs.true.3978
  %1992 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %1993 = bitcast %struct.rtx_def* %1992 to i32*
  %bf.load3982 = load i32, i32* %1993, align 8
  %bf.clear3983 = and i32 %bf.load3982, 65535
  %cmp3984 = icmp eq i32 %bf.clear3983, 47
  br i1 %cmp3984, label %land.lhs.true.3986, label %if.end.3995

land.lhs.true.3986:                               ; preds = %land.lhs.true.3981
  %1994 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld3987 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1994, i32 0, i32 1
  %arrayidx3988 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3987, i32 0, i64 1
  %rtx3989 = bitcast %union.rtunion_def* %arrayidx3988 to %struct.rtx_def**
  %1995 = load %struct.rtx_def*, %struct.rtx_def** %rtx3989, align 8
  %1996 = bitcast %struct.rtx_def* %1995 to i32*
  %bf.load3990 = load i32, i32* %1996, align 8
  %bf.clear3991 = and i32 %bf.load3990, 65535
  %cmp3992 = icmp eq i32 %bf.clear3991, 72
  br i1 %cmp3992, label %if.then.3994, label %if.end.3995

if.then.3994:                                     ; preds = %land.lhs.true.3986
  %1997 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  call void @record_jump_equiv(%struct.rtx_def* %1997, i32 0)
  br label %if.end.3995

if.end.3995:                                      ; preds = %if.then.3994, %land.lhs.true.3986, %land.lhs.true.3981, %land.lhs.true.3978, %if.end.3973
  %1998 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %1998, %struct.rtx_def** @prev_insn, align 8
  ret void
}

declare i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @check_for_label_ref(%struct.rtx_def** %rtl, i8* %data) #0 {
entry:
  %rtl.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %rtl, %struct.rtx_def*** %rtl.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.rtx_def*
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 67
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load1 = load i32, i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load1, 27
  %bf.clear2 = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear2, 0
  br i1 %tobool, label %land.end, label %land.lhs.true.3

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load4 = load i32, i32* %11, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 36
  br i1 %cmp6, label %land.lhs.true.7, label %land.end

land.lhs.true.7:                                  ; preds = %land.lhs.true.3
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %15 = load i32, i32* %rtint, align 4
  %cmp13 = icmp ne i32 %15, 0
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.7
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %17, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %16, i32 13, %struct.rtx_def* %19)
  %tobool17 = icmp ne %struct.rtx_def* %call, null
  %lnot = xor i1 %tobool17, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.7, %land.lhs.true.3, %land.lhs.true, %entry
  %20 = phi i1 [ false, %land.lhs.true.7 ], [ false, %land.lhs.true.3 ], [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %20 to i32
  ret i32 %land.ext
}

declare i32 @any_uncondjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @cse_around_loop(%struct.rtx_def* %loop_start) #0 {
entry:
  %loop_start.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %loop_start, %struct.rtx_def** %loop_start.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %tobool = icmp ne %struct.rtx_def* %2, null
  br i1 %tobool, label %land.rhs, label %land.end.5

land.rhs:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load = load i32, i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %land.rhs.1, label %land.end

land.rhs.1:                                       ; preds = %land.rhs
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %6 = load i32, i32* %rtint, align 4
  %cmp4 = icmp sge i32 %6, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs.1, %land.rhs
  %7 = phi i1 [ false, %land.rhs ], [ %cmp4, %land.rhs.1 ]
  br label %land.end.5

land.end.5:                                       ; preds = %land.end, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %7, %land.end ]
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %land.end.5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx8, align 8
  store %struct.rtx_def* %10, %struct.rtx_def** %insn, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end.5
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %cmp9 = icmp eq %struct.rtx_def* %11, null
  br i1 %cmp9, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load10 = load i32, i32* %13, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp ne i32 %bf.clear11, 37
  br i1 %cmp12, label %if.then, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %lor.lhs.false
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 4
  %rtint16 = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %15 = load i32, i32* %rtint16, align 4
  %cmp17 = icmp ne i32 %15, -96
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.13, %lor.lhs.false, %for.end
  br label %for.end.191

if.end:                                           ; preds = %lor.lhs.false.13
  %16 = load %struct.table_elt*, %struct.table_elt** @last_jump_equiv_class, align 8
  %tobool18 = icmp ne %struct.table_elt* %16, null
  br i1 %tobool18, label %if.then.19, label %if.end.66

if.then.19:                                       ; preds = %if.end
  %17 = load %struct.table_elt*, %struct.table_elt** @last_jump_equiv_class, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %17, i32 0, i32 6
  %18 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %18, %struct.table_elt** %p, align 8
  br label %for.cond.20

for.cond.20:                                      ; preds = %for.inc.64, %if.then.19
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool21 = icmp ne %struct.table_elt* %19, null
  br i1 %tobool21, label %for.body.22, label %for.end.65

for.body.22:                                      ; preds = %for.cond.20
  %20 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %20, i32 0, i32 0
  %21 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load23 = load i32, i32* %22, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 66
  br i1 %cmp25, label %if.then.43, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %for.body.22
  %23 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp27 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp27, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load28 = load i32, i32* %25, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 61
  br i1 %cmp30, label %if.then.43, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.26
  %26 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp32 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 0
  %27 = load %struct.rtx_def*, %struct.rtx_def** %exp32, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load33 = load i32, i32* %28, align 8
  %bf.clear34 = and i32 %bf.load33, 65535
  %cmp35 = icmp eq i32 %bf.clear34, 63
  br i1 %cmp35, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false.31
  %29 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp36 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %29, i32 0, i32 0
  %30 = load %struct.rtx_def*, %struct.rtx_def** %exp36, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx39, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load40 = load i32, i32* %32, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 61
  br i1 %cmp42, label %if.then.43, label %if.else

if.then.43:                                       ; preds = %land.lhs.true, %lor.lhs.false.26, %for.body.22
  %33 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp44 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %33, i32 0, i32 0
  %34 = load %struct.rtx_def*, %struct.rtx_def** %exp44, align 8
  call void @invalidate(%struct.rtx_def* %34, i32 0)
  br label %if.end.63

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.31
  %35 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %35, i32 0, i32 0
  %36 = load %struct.rtx_def*, %struct.rtx_def** %exp45, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load46 = load i32, i32* %37, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 64
  br i1 %cmp48, label %if.then.54, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %if.else
  %38 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp50 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 0
  %39 = load %struct.rtx_def*, %struct.rtx_def** %exp50, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load51 = load i32, i32* %40, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 133
  br i1 %cmp53, label %if.then.54, label %if.end.62

if.then.54:                                       ; preds = %lor.lhs.false.49, %if.else
  %41 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp55 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 0
  %42 = load %struct.rtx_def*, %struct.rtx_def** %exp55, align 8
  %fld56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i32 0, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx58, align 8
  %44 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp59 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %44, i32 0, i32 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp59, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load60 = load i32, i32* %46, align 8
  %bf.lshr = lshr i32 %bf.load60, 16
  %bf.clear61 = and i32 %bf.lshr, 255
  call void @invalidate(%struct.rtx_def* %43, i32 %bf.clear61)
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.54, %lor.lhs.false.49
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.43
  br label %for.inc.64

for.inc.64:                                       ; preds = %if.end.63
  %47 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 4
  %48 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %48, %struct.table_elt** %p, align 8
  br label %for.cond.20

for.end.65:                                       ; preds = %for.cond.20
  br label %if.end.66

if.end.66:                                        ; preds = %for.end.65, %if.end
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 2
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  store %struct.rtx_def* %50, %struct.rtx_def** %insn, align 8
  br label %for.cond.70

for.cond.70:                                      ; preds = %for.inc.187, %if.end.66
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load71 = load i32, i32* %52, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp ne i32 %bf.clear72, 34
  br i1 %cmp73, label %land.lhs.true.74, label %land.end.93

land.lhs.true.74:                                 ; preds = %for.cond.70
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load75 = load i32, i32* %54, align 8
  %bf.clear76 = and i32 %bf.load75, 65535
  %cmp77 = icmp ne i32 %bf.clear76, 36
  br i1 %cmp77, label %land.lhs.true.78, label %land.end.93

land.lhs.true.78:                                 ; preds = %land.lhs.true.74
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 0
  %rtint81 = bitcast %union.rtunion_def* %arrayidx80 to i32*
  %56 = load i32, i32* %rtint81, align 4
  %57 = load i32, i32* @max_insn_uid, align 4
  %cmp82 = icmp slt i32 %56, %57
  br i1 %cmp82, label %land.rhs.83, label %land.end.93

land.rhs.83:                                      ; preds = %land.lhs.true.78
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load84 = load i32, i32* %59, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 37
  br i1 %cmp86, label %land.rhs.87, label %land.end.92

land.rhs.87:                                      ; preds = %land.rhs.83
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i32 0, i64 4
  %rtint90 = bitcast %union.rtunion_def* %arrayidx89 to i32*
  %61 = load i32, i32* %rtint90, align 4
  %cmp91 = icmp eq i32 %61, -95
  br label %land.end.92

land.end.92:                                      ; preds = %land.rhs.87, %land.rhs.83
  %62 = phi i1 [ false, %land.rhs.83 ], [ %cmp91, %land.rhs.87 ]
  %lnot = xor i1 %62, true
  br label %land.end.93

land.end.93:                                      ; preds = %land.end.92, %land.lhs.true.78, %land.lhs.true.74, %for.cond.70
  %63 = phi i1 [ false, %land.lhs.true.78 ], [ false, %land.lhs.true.74 ], [ false, %for.cond.70 ], [ %lnot, %land.end.92 ]
  br i1 %63, label %for.body.94, label %for.end.191

for.body.94:                                      ; preds = %land.end.93
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load95 = load i32, i32* %65, align 8
  %bf.clear96 = and i32 %bf.load95, 65535
  %idxprom = sext i32 %bf.clear96 to i64
  %arrayidx97 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %66 = load i8, i8* %arrayidx97, align 1
  %conv = sext i8 %66 to i32
  %cmp98 = icmp eq i32 %conv, 105
  br i1 %cmp98, label %land.lhs.true.100, label %if.else.120

land.lhs.true.100:                                ; preds = %for.body.94
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i32 0, i64 3
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx103, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load104 = load i32, i32* %69, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 47
  br i1 %cmp106, label %if.then.116, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %land.lhs.true.100
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 3
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx111, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load112 = load i32, i32* %72, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 49
  br i1 %cmp114, label %if.then.116, label %if.else.120

if.then.116:                                      ; preds = %lor.lhs.false.108, %land.lhs.true.100
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i32 0, i64 3
  %rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx119, align 8
  %75 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %76 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  call void @cse_set_around_loop(%struct.rtx_def* %74, %struct.rtx_def* %75, %struct.rtx_def* %76)
  br label %if.end.186

if.else.120:                                      ; preds = %lor.lhs.false.108, %for.body.94
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load121 = load i32, i32* %78, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %idxprom123 = sext i32 %bf.clear122 to i64
  %arrayidx124 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom123
  %79 = load i8, i8* %arrayidx124, align 1
  %conv125 = sext i8 %79 to i32
  %cmp126 = icmp eq i32 %conv125, 105
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.185

land.lhs.true.128:                                ; preds = %if.else.120
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 3
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load132 = load i32, i32* %82, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 39
  br i1 %cmp134, label %if.then.136, label %if.end.185

if.then.136:                                      ; preds = %land.lhs.true.128
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 3
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx139, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtvec_def**
  %85 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %85, i32 0, i32 0
  %86 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %86, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond.142

for.cond.142:                                     ; preds = %for.inc.183, %if.then.136
  %87 = load i32, i32* %i, align 4
  %cmp143 = icmp sge i32 %87, 0
  br i1 %cmp143, label %for.body.145, label %for.end.184

for.body.145:                                     ; preds = %for.cond.142
  %88 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %88 to i64
  %89 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 3
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx149, align 8
  %fld150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i32 0, i64 0
  %rtvec152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtvec_def**
  %91 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec152, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %91, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom146
  %92 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx153, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load154 = load i32, i32* %93, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 47
  br i1 %cmp156, label %if.then.172, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %for.body.145
  %94 = load i32, i32* %i, align 4
  %idxprom159 = sext i32 %94 to i64
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i32 0, i64 3
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx162, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtvec165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtvec_def**
  %97 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec165, align 8
  %elem166 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %97, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem166, i32 0, i64 %idxprom159
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx167, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load168 = load i32, i32* %99, align 8
  %bf.clear169 = and i32 %bf.load168, 65535
  %cmp170 = icmp eq i32 %bf.clear169, 49
  br i1 %cmp170, label %if.then.172, label %if.end.182

if.then.172:                                      ; preds = %lor.lhs.false.158, %for.body.145
  %100 = load i32, i32* %i, align 4
  %idxprom173 = sext i32 %100 to i64
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 3
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtvec179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtvec_def**
  %103 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec179, align 8
  %elem180 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %103, i32 0, i32 1
  %arrayidx181 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem180, i32 0, i64 %idxprom173
  %104 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx181, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  call void @cse_set_around_loop(%struct.rtx_def* %104, %struct.rtx_def* %105, %struct.rtx_def* %106)
  br label %if.end.182

if.end.182:                                       ; preds = %if.then.172, %lor.lhs.false.158
  br label %for.inc.183

for.inc.183:                                      ; preds = %if.end.182
  %107 = load i32, i32* %i, align 4
  %dec = add nsw i32 %107, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.142

for.end.184:                                      ; preds = %for.cond.142
  br label %if.end.185

if.end.185:                                       ; preds = %for.end.184, %land.lhs.true.128, %if.else.120
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %if.then.116
  br label %for.inc.187

for.inc.187:                                      ; preds = %if.end.186
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8
  %fld188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i32 0, i64 2
  %rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx190, align 8
  store %struct.rtx_def* %109, %struct.rtx_def** %insn, align 8
  br label %for.cond.70

for.end.191:                                      ; preds = %if.then, %land.end.93
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @invalidate(%struct.rtx_def* %x, i32 %full_mode) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %full_mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %regno = alloca i32, align 4
  %hash = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %in_table = alloca i64, align 8
  %endregno = alloca i32, align 4
  %tregno = alloca i32, align 4
  %tendregno = alloca i32, align 4
  %rn = alloca i32, align 4
  %p102 = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %next293 = alloca %struct.table_elt*, align 8
  %d = alloca %struct.check_dependence_data, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %full_mode, i32* %full_mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 61, label %sw.bb
    i32 63, label %sw.bb.258
    i32 39, label %sw.bb.261
    i32 3, label %sw.bb.276
    i32 66, label %sw.bb.280
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  store i32 %3, i32* %regno, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %land.lhs.true, label %cond.false.16

land.lhs.true:                                    ; preds = %sw.bb
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %7 = load i32, i32* %rtuint5, align 4
  %cmp6 = icmp uge i32 %7, 53
  br i1 %cmp6, label %cond.true, label %cond.false.16

cond.true:                                        ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtuint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %9 = load i32, i32* %rtuint9, align 4
  %10 = load i32, i32* @cached_regno, align 4
  %cmp10 = icmp eq i32 %9, %10
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false

land.lhs.true.11:                                 ; preds = %cond.true
  %11 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %11, null
  br i1 %tobool, label %cond.true.12, label %cond.false

cond.true.12:                                     ; preds = %land.lhs.true.11
  %12 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.11, %cond.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i32 0, i64 0
  %rtuint15 = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %14 = load i32, i32* %rtuint15, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %14)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.12
  %cond = phi %struct.cse_reg_info* [ %12, %cond.true.12 ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %15 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %15
  br label %cond.end.20

cond.false.16:                                    ; preds = %land.lhs.true, %sw.bb
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load17 = load i32, i32* %18, align 8
  %bf.lshr = lshr i32 %bf.load17, 16
  %bf.clear18 = and i32 %bf.lshr, 255
  %call19 = call i32 @canon_hash(%struct.rtx_def* %16, i32 %bf.clear18)
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.16, %cond.end
  %cond21 = phi i32 [ %add, %cond.end ], [ %call19, %cond.false.16 ]
  %and = and i32 %cond21, 31
  store i32 %and, i32* %hash, align 4
  %19 = load i32, i32* %regno, align 4
  call void @delete_reg_equiv(i32 %19)
  %20 = load i32, i32* %regno, align 4
  %21 = load i32, i32* @cached_regno, align 4
  %cmp22 = icmp eq i32 %20, %21
  br i1 %cmp22, label %land.lhs.true.23, label %cond.false.26

land.lhs.true.23:                                 ; preds = %cond.end.20
  %22 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool24 = icmp ne %struct.cse_reg_info* %22, null
  br i1 %tobool24, label %cond.true.25, label %cond.false.26

cond.true.25:                                     ; preds = %land.lhs.true.23
  %23 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.28

cond.false.26:                                    ; preds = %land.lhs.true.23, %cond.end.20
  %24 = load i32, i32* %regno, align 4
  %call27 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %24)
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.26, %cond.true.25
  %cond29 = phi %struct.cse_reg_info* [ %23, %cond.true.25 ], [ %call27, %cond.false.26 ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond29, i32 0, i32 4
  %25 = load i32, i32* %reg_tick, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %reg_tick, align 4
  %26 = load i32, i32* %regno, align 4
  %cmp30 = icmp uge i32 %26, 53
  br i1 %cmp30, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.28
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = load i32, i32* %hash, align 4
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load31 = load i32, i32* %30, align 8
  %bf.lshr32 = lshr i32 %bf.load31, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  %call34 = call %struct.table_elt* @lookup_for_remove(%struct.rtx_def* %27, i32 %28, i32 %bf.clear33)
  store %struct.table_elt* %call34, %struct.table_elt** %elt, align 8
  %tobool35 = icmp ne %struct.table_elt* %call34, null
  br i1 %tobool35, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %31 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %32 = load i32, i32* %hash, align 4
  call void @remove_from_table(%struct.table_elt* %31, i32 %32)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.257

if.else:                                          ; preds = %cond.end.28
  %33 = load i64, i64* @hard_regs_in_table, align 8
  %34 = load i32, i32* %regno, align 4
  %sh_prom = zext i32 %34 to i64
  %shl = shl i64 1, %sh_prom
  %and36 = and i64 %33, %shl
  store i64 %and36, i64* %in_table, align 8
  %35 = load i32, i32* %regno, align 4
  %36 = load i32, i32* %regno, align 4
  %cmp37 = icmp uge i32 %36, 8
  br i1 %cmp37, label %land.lhs.true.38, label %lor.lhs.false

land.lhs.true.38:                                 ; preds = %if.else
  %37 = load i32, i32* %regno, align 4
  %cmp39 = icmp ule i32 %37, 15
  br i1 %cmp39, label %cond.true.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.38, %if.else
  %38 = load i32, i32* %regno, align 4
  %cmp40 = icmp uge i32 %38, 21
  br i1 %cmp40, label %land.lhs.true.41, label %lor.lhs.false.43

land.lhs.true.41:                                 ; preds = %lor.lhs.false
  %39 = load i32, i32* %regno, align 4
  %cmp42 = icmp ule i32 %39, 28
  br i1 %cmp42, label %cond.true.51, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %land.lhs.true.41, %lor.lhs.false
  %40 = load i32, i32* %regno, align 4
  %cmp44 = icmp uge i32 %40, 45
  br i1 %cmp44, label %land.lhs.true.45, label %lor.lhs.false.47

land.lhs.true.45:                                 ; preds = %lor.lhs.false.43
  %41 = load i32, i32* %regno, align 4
  %cmp46 = icmp ule i32 %41, 52
  br i1 %cmp46, label %cond.true.51, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %land.lhs.true.45, %lor.lhs.false.43
  %42 = load i32, i32* %regno, align 4
  %cmp48 = icmp uge i32 %42, 29
  br i1 %cmp48, label %land.lhs.true.49, label %cond.false.64

land.lhs.true.49:                                 ; preds = %lor.lhs.false.47
  %43 = load i32, i32* %regno, align 4
  %cmp50 = icmp ule i32 %43, 36
  br i1 %cmp50, label %cond.true.51, label %cond.false.64

cond.true.51:                                     ; preds = %land.lhs.true.49, %land.lhs.true.45, %land.lhs.true.41, %land.lhs.true.38
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %45 = bitcast %struct.rtx_def* %44 to i32*
  %bf.load52 = load i32, i32* %45, align 8
  %bf.lshr53 = lshr i32 %bf.load52, 16
  %bf.clear54 = and i32 %bf.lshr53, 255
  %idxprom = sext i32 %bf.clear54 to i64
  %arrayidx55 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %46 = load i32, i32* %arrayidx55, align 4
  %cmp56 = icmp eq i32 %46, 5
  br i1 %cmp56, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.51
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load57 = load i32, i32* %48, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %idxprom60 = sext i32 %bf.clear59 to i64
  %arrayidx61 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom60
  %49 = load i32, i32* %arrayidx61, align 4
  %cmp62 = icmp eq i32 %49, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.51
  %50 = phi i1 [ true, %cond.true.51 ], [ %cmp62, %lor.rhs ]
  %cond63 = select i1 %50, i32 2, i32 1
  br label %cond.end.99

cond.false.64:                                    ; preds = %land.lhs.true.49, %lor.lhs.false.47
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load65 = load i32, i32* %52, align 8
  %bf.lshr66 = lshr i32 %bf.load65, 16
  %bf.clear67 = and i32 %bf.lshr66, 255
  %cmp68 = icmp eq i32 %bf.clear67, 18
  br i1 %cmp68, label %cond.true.69, label %cond.false.73

cond.true.69:                                     ; preds = %cond.false.64
  %53 = load i32, i32* @target_flags, align 4
  %and70 = and i32 %53, 33554432
  %tobool71 = icmp ne i32 %and70, 0
  %cond72 = select i1 %tobool71, i32 2, i32 3
  br label %cond.end.97

cond.false.73:                                    ; preds = %cond.false.64
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %55 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load74 = load i32, i32* %55, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 16
  %bf.clear76 = and i32 %bf.lshr75, 255
  %cmp77 = icmp eq i32 %bf.clear76, 24
  br i1 %cmp77, label %cond.true.78, label %cond.false.82

cond.true.78:                                     ; preds = %cond.false.73
  %56 = load i32, i32* @target_flags, align 4
  %and79 = and i32 %56, 33554432
  %tobool80 = icmp ne i32 %and79, 0
  %cond81 = select i1 %tobool80, i32 4, i32 6
  br label %cond.end.95

cond.false.82:                                    ; preds = %cond.false.73
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load83 = load i32, i32* %58, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %idxprom86 = sext i32 %bf.clear85 to i64
  %arrayidx87 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom86
  %59 = load i8, i8* %arrayidx87, align 1
  %conv = zext i8 %59 to i32
  %60 = load i32, i32* @target_flags, align 4
  %and88 = and i32 %60, 33554432
  %tobool89 = icmp ne i32 %and88, 0
  %cond90 = select i1 %tobool89, i32 8, i32 4
  %add91 = add nsw i32 %conv, %cond90
  %sub = sub nsw i32 %add91, 1
  %61 = load i32, i32* @target_flags, align 4
  %and92 = and i32 %61, 33554432
  %tobool93 = icmp ne i32 %and92, 0
  %cond94 = select i1 %tobool93, i32 8, i32 4
  %div = sdiv i32 %sub, %cond94
  br label %cond.end.95

cond.end.95:                                      ; preds = %cond.false.82, %cond.true.78
  %cond96 = phi i32 [ %cond81, %cond.true.78 ], [ %div, %cond.false.82 ]
  br label %cond.end.97

cond.end.97:                                      ; preds = %cond.end.95, %cond.true.69
  %cond98 = phi i32 [ %cond72, %cond.true.69 ], [ %cond96, %cond.end.95 ]
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.end.97, %lor.end
  %cond100 = phi i32 [ %cond63, %lor.end ], [ %cond98, %cond.end.97 ]
  %add101 = add i32 %35, %cond100
  store i32 %add101, i32* %endregno, align 4
  %62 = load i32, i32* %regno, align 4
  %sh_prom103 = zext i32 %62 to i64
  %shl104 = shl i64 1, %sh_prom103
  %neg = xor i64 %shl104, -1
  %63 = load i64, i64* @hard_regs_in_table, align 8
  %and105 = and i64 %63, %neg
  store i64 %and105, i64* @hard_regs_in_table, align 8
  %64 = load i32, i32* %regno, align 4
  %add106 = add i32 %64, 1
  store i32 %add106, i32* %rn, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.99
  %65 = load i32, i32* %rn, align 4
  %66 = load i32, i32* %endregno, align 4
  %cmp107 = icmp ult i32 %65, %66
  br i1 %cmp107, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %67 = load i64, i64* @hard_regs_in_table, align 8
  %68 = load i32, i32* %rn, align 4
  %sh_prom109 = zext i32 %68 to i64
  %shl110 = shl i64 1, %sh_prom109
  %and111 = and i64 %67, %shl110
  %69 = load i64, i64* %in_table, align 8
  %or = or i64 %69, %and111
  store i64 %or, i64* %in_table, align 8
  %70 = load i32, i32* %rn, align 4
  %sh_prom112 = zext i32 %70 to i64
  %shl113 = shl i64 1, %sh_prom112
  %neg114 = xor i64 %shl113, -1
  %71 = load i64, i64* @hard_regs_in_table, align 8
  %and115 = and i64 %71, %neg114
  store i64 %and115, i64* @hard_regs_in_table, align 8
  %72 = load i32, i32* %rn, align 4
  call void @delete_reg_equiv(i32 %72)
  %73 = load i32, i32* %rn, align 4
  %74 = load i32, i32* @cached_regno, align 4
  %cmp116 = icmp eq i32 %73, %74
  br i1 %cmp116, label %land.lhs.true.118, label %cond.false.121

land.lhs.true.118:                                ; preds = %for.body
  %75 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool119 = icmp ne %struct.cse_reg_info* %75, null
  br i1 %tobool119, label %cond.true.120, label %cond.false.121

cond.true.120:                                    ; preds = %land.lhs.true.118
  %76 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.123

cond.false.121:                                   ; preds = %land.lhs.true.118, %for.body
  %77 = load i32, i32* %rn, align 4
  %call122 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %77)
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.121, %cond.true.120
  %cond124 = phi %struct.cse_reg_info* [ %76, %cond.true.120 ], [ %call122, %cond.false.121 ]
  %reg_tick125 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond124, i32 0, i32 4
  %78 = load i32, i32* %reg_tick125, align 4
  %inc126 = add nsw i32 %78, 1
  store i32 %inc126, i32* %reg_tick125, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end.123
  %79 = load i32, i32* %rn, align 4
  %inc127 = add i32 %79, 1
  store i32 %inc127, i32* %rn, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %80 = load i64, i64* %in_table, align 8
  %tobool128 = icmp ne i64 %80, 0
  br i1 %tobool128, label %if.then.129, label %if.end.256

if.then.129:                                      ; preds = %for.end
  store i32 0, i32* %hash, align 4
  br label %for.cond.130

for.cond.130:                                     ; preds = %for.inc.253, %if.then.129
  %81 = load i32, i32* %hash, align 4
  %cmp131 = icmp ult i32 %81, 32
  br i1 %cmp131, label %for.body.133, label %for.end.255

for.body.133:                                     ; preds = %for.cond.130
  %82 = load i32, i32* %hash, align 4
  %idxprom134 = zext i32 %82 to i64
  %arrayidx135 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom134
  %83 = load %struct.table_elt*, %struct.table_elt** %arrayidx135, align 8
  store %struct.table_elt* %83, %struct.table_elt** %p102, align 8
  br label %for.cond.136

for.cond.136:                                     ; preds = %for.inc.251, %for.body.133
  %84 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %tobool137 = icmp ne %struct.table_elt* %84, null
  br i1 %tobool137, label %for.body.138, label %for.end.252

for.body.138:                                     ; preds = %for.cond.136
  %85 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %85, i32 0, i32 2
  %86 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %86, %struct.table_elt** %next, align 8
  %87 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %87, i32 0, i32 0
  %88 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load139 = load i32, i32* %89, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp ne i32 %bf.clear140, 61
  br i1 %cmp141, label %if.then.150, label %lor.lhs.false.143

lor.lhs.false.143:                                ; preds = %for.body.138
  %90 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp144 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %90, i32 0, i32 0
  %91 = load %struct.rtx_def*, %struct.rtx_def** %exp144, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtuint147 = bitcast %union.rtunion_def* %arrayidx146 to i32*
  %92 = load i32, i32* %rtuint147, align 4
  %cmp148 = icmp uge i32 %92, 53
  br i1 %cmp148, label %if.then.150, label %if.end

if.then.150:                                      ; preds = %lor.lhs.false.143, %for.body.138
  br label %for.inc.251

if.end:                                           ; preds = %lor.lhs.false.143
  %93 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp151 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %93, i32 0, i32 0
  %94 = load %struct.rtx_def*, %struct.rtx_def** %exp151, align 8
  %fld152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i32 0, i64 0
  %rtuint154 = bitcast %union.rtunion_def* %arrayidx153 to i32*
  %95 = load i32, i32* %rtuint154, align 4
  store i32 %95, i32* %tregno, align 4
  %96 = load i32, i32* %tregno, align 4
  %97 = load i32, i32* %tregno, align 4
  %cmp155 = icmp uge i32 %97, 8
  br i1 %cmp155, label %land.lhs.true.157, label %lor.lhs.false.160

land.lhs.true.157:                                ; preds = %if.end
  %98 = load i32, i32* %tregno, align 4
  %cmp158 = icmp ule i32 %98, 15
  br i1 %cmp158, label %cond.true.178, label %lor.lhs.false.160

lor.lhs.false.160:                                ; preds = %land.lhs.true.157, %if.end
  %99 = load i32, i32* %tregno, align 4
  %cmp161 = icmp uge i32 %99, 21
  br i1 %cmp161, label %land.lhs.true.163, label %lor.lhs.false.166

land.lhs.true.163:                                ; preds = %lor.lhs.false.160
  %100 = load i32, i32* %tregno, align 4
  %cmp164 = icmp ule i32 %100, 28
  br i1 %cmp164, label %cond.true.178, label %lor.lhs.false.166

lor.lhs.false.166:                                ; preds = %land.lhs.true.163, %lor.lhs.false.160
  %101 = load i32, i32* %tregno, align 4
  %cmp167 = icmp uge i32 %101, 45
  br i1 %cmp167, label %land.lhs.true.169, label %lor.lhs.false.172

land.lhs.true.169:                                ; preds = %lor.lhs.false.166
  %102 = load i32, i32* %tregno, align 4
  %cmp170 = icmp ule i32 %102, 52
  br i1 %cmp170, label %cond.true.178, label %lor.lhs.false.172

lor.lhs.false.172:                                ; preds = %land.lhs.true.169, %lor.lhs.false.166
  %103 = load i32, i32* %tregno, align 4
  %cmp173 = icmp uge i32 %103, 29
  br i1 %cmp173, label %land.lhs.true.175, label %cond.false.198

land.lhs.true.175:                                ; preds = %lor.lhs.false.172
  %104 = load i32, i32* %tregno, align 4
  %cmp176 = icmp ule i32 %104, 36
  br i1 %cmp176, label %cond.true.178, label %cond.false.198

cond.true.178:                                    ; preds = %land.lhs.true.175, %land.lhs.true.169, %land.lhs.true.163, %land.lhs.true.157
  %105 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp179 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %105, i32 0, i32 0
  %106 = load %struct.rtx_def*, %struct.rtx_def** %exp179, align 8
  %107 = bitcast %struct.rtx_def* %106 to i32*
  %bf.load180 = load i32, i32* %107, align 8
  %bf.lshr181 = lshr i32 %bf.load180, 16
  %bf.clear182 = and i32 %bf.lshr181, 255
  %idxprom183 = sext i32 %bf.clear182 to i64
  %arrayidx184 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom183
  %108 = load i32, i32* %arrayidx184, align 4
  %cmp185 = icmp eq i32 %108, 5
  br i1 %cmp185, label %lor.end.196, label %lor.rhs.187

lor.rhs.187:                                      ; preds = %cond.true.178
  %109 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp188 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %109, i32 0, i32 0
  %110 = load %struct.rtx_def*, %struct.rtx_def** %exp188, align 8
  %111 = bitcast %struct.rtx_def* %110 to i32*
  %bf.load189 = load i32, i32* %111, align 8
  %bf.lshr190 = lshr i32 %bf.load189, 16
  %bf.clear191 = and i32 %bf.lshr190, 255
  %idxprom192 = sext i32 %bf.clear191 to i64
  %arrayidx193 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom192
  %112 = load i32, i32* %arrayidx193, align 4
  %cmp194 = icmp eq i32 %112, 6
  br label %lor.end.196

lor.end.196:                                      ; preds = %lor.rhs.187, %cond.true.178
  %113 = phi i1 [ true, %cond.true.178 ], [ %cmp194, %lor.rhs.187 ]
  %cond197 = select i1 %113, i32 2, i32 1
  br label %cond.end.241

cond.false.198:                                   ; preds = %land.lhs.true.175, %lor.lhs.false.172
  %114 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp199 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %114, i32 0, i32 0
  %115 = load %struct.rtx_def*, %struct.rtx_def** %exp199, align 8
  %116 = bitcast %struct.rtx_def* %115 to i32*
  %bf.load200 = load i32, i32* %116, align 8
  %bf.lshr201 = lshr i32 %bf.load200, 16
  %bf.clear202 = and i32 %bf.lshr201, 255
  %cmp203 = icmp eq i32 %bf.clear202, 18
  br i1 %cmp203, label %cond.true.205, label %cond.false.209

cond.true.205:                                    ; preds = %cond.false.198
  %117 = load i32, i32* @target_flags, align 4
  %and206 = and i32 %117, 33554432
  %tobool207 = icmp ne i32 %and206, 0
  %cond208 = select i1 %tobool207, i32 2, i32 3
  br label %cond.end.239

cond.false.209:                                   ; preds = %cond.false.198
  %118 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp210 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %118, i32 0, i32 0
  %119 = load %struct.rtx_def*, %struct.rtx_def** %exp210, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load211 = load i32, i32* %120, align 8
  %bf.lshr212 = lshr i32 %bf.load211, 16
  %bf.clear213 = and i32 %bf.lshr212, 255
  %cmp214 = icmp eq i32 %bf.clear213, 24
  br i1 %cmp214, label %cond.true.216, label %cond.false.220

cond.true.216:                                    ; preds = %cond.false.209
  %121 = load i32, i32* @target_flags, align 4
  %and217 = and i32 %121, 33554432
  %tobool218 = icmp ne i32 %and217, 0
  %cond219 = select i1 %tobool218, i32 4, i32 6
  br label %cond.end.237

cond.false.220:                                   ; preds = %cond.false.209
  %122 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %exp221 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %122, i32 0, i32 0
  %123 = load %struct.rtx_def*, %struct.rtx_def** %exp221, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load222 = load i32, i32* %124, align 8
  %bf.lshr223 = lshr i32 %bf.load222, 16
  %bf.clear224 = and i32 %bf.lshr223, 255
  %idxprom225 = sext i32 %bf.clear224 to i64
  %arrayidx226 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom225
  %125 = load i8, i8* %arrayidx226, align 1
  %conv227 = zext i8 %125 to i32
  %126 = load i32, i32* @target_flags, align 4
  %and228 = and i32 %126, 33554432
  %tobool229 = icmp ne i32 %and228, 0
  %cond230 = select i1 %tobool229, i32 8, i32 4
  %add231 = add nsw i32 %conv227, %cond230
  %sub232 = sub nsw i32 %add231, 1
  %127 = load i32, i32* @target_flags, align 4
  %and233 = and i32 %127, 33554432
  %tobool234 = icmp ne i32 %and233, 0
  %cond235 = select i1 %tobool234, i32 8, i32 4
  %div236 = sdiv i32 %sub232, %cond235
  br label %cond.end.237

cond.end.237:                                     ; preds = %cond.false.220, %cond.true.216
  %cond238 = phi i32 [ %cond219, %cond.true.216 ], [ %div236, %cond.false.220 ]
  br label %cond.end.239

cond.end.239:                                     ; preds = %cond.end.237, %cond.true.205
  %cond240 = phi i32 [ %cond208, %cond.true.205 ], [ %cond238, %cond.end.237 ]
  br label %cond.end.241

cond.end.241:                                     ; preds = %cond.end.239, %lor.end.196
  %cond242 = phi i32 [ %cond197, %lor.end.196 ], [ %cond240, %cond.end.239 ]
  %add243 = add i32 %96, %cond242
  store i32 %add243, i32* %tendregno, align 4
  %128 = load i32, i32* %tendregno, align 4
  %129 = load i32, i32* %regno, align 4
  %cmp244 = icmp ugt i32 %128, %129
  br i1 %cmp244, label %land.lhs.true.246, label %if.end.250

land.lhs.true.246:                                ; preds = %cond.end.241
  %130 = load i32, i32* %tregno, align 4
  %131 = load i32, i32* %endregno, align 4
  %cmp247 = icmp ult i32 %130, %131
  br i1 %cmp247, label %if.then.249, label %if.end.250

if.then.249:                                      ; preds = %land.lhs.true.246
  %132 = load %struct.table_elt*, %struct.table_elt** %p102, align 8
  %133 = load i32, i32* %hash, align 4
  call void @remove_from_table(%struct.table_elt* %132, i32 %133)
  br label %if.end.250

if.end.250:                                       ; preds = %if.then.249, %land.lhs.true.246, %cond.end.241
  br label %for.inc.251

for.inc.251:                                      ; preds = %if.end.250, %if.then.150
  %134 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %134, %struct.table_elt** %p102, align 8
  br label %for.cond.136

for.end.252:                                      ; preds = %for.cond.136
  br label %for.inc.253

for.inc.253:                                      ; preds = %for.end.252
  %135 = load i32, i32* %hash, align 4
  %inc254 = add i32 %135, 1
  store i32 %inc254, i32* %hash, align 4
  br label %for.cond.130

for.end.255:                                      ; preds = %for.cond.130
  br label %if.end.256

if.end.256:                                       ; preds = %for.end.255, %for.end
  br label %if.end.257

if.end.257:                                       ; preds = %if.end.256, %while.end
  br label %return

sw.bb.258:                                        ; preds = %entry
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  call void @invalidate(%struct.rtx_def* %137, i32 0)
  br label %return

sw.bb.261:                                        ; preds = %entry
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld262, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtvec_def**
  %139 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %139, i32 0, i32 0
  %140 = load i32, i32* %num_elem, align 4
  %sub264 = sub nsw i32 %140, 1
  store i32 %sub264, i32* %i, align 4
  br label %for.cond.265

for.cond.265:                                     ; preds = %for.inc.274, %sw.bb.261
  %141 = load i32, i32* %i, align 4
  %cmp266 = icmp sge i32 %141, 0
  br i1 %cmp266, label %for.body.268, label %for.end.275

for.body.268:                                     ; preds = %for.cond.265
  %142 = load i32, i32* %i, align 4
  %idxprom269 = sext i32 %142 to i64
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i32 0, i64 0
  %rtvec272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtvec_def**
  %144 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec272, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %144, i32 0, i32 1
  %arrayidx273 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom269
  %145 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx273, align 8
  call void @invalidate(%struct.rtx_def* %145, i32 0)
  br label %for.inc.274

for.inc.274:                                      ; preds = %for.body.268
  %146 = load i32, i32* %i, align 4
  %dec = add nsw i32 %146, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.265

for.end.275:                                      ; preds = %for.cond.265
  br label %return

sw.bb.276:                                        ; preds = %entry
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i32 0, i64 0
  %rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx279, align 8
  call void @invalidate(%struct.rtx_def* %148, i32 0)
  br label %return

sw.bb.280:                                        ; preds = %entry
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call281 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %149)
  store %struct.rtx_def* %call281, %struct.rtx_def** %x.addr, align 8
  %150 = load i32, i32* %full_mode.addr, align 4
  %cmp282 = icmp eq i32 %150, 0
  br i1 %cmp282, label %if.then.284, label %if.end.288

if.then.284:                                      ; preds = %sw.bb.280
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %152 = bitcast %struct.rtx_def* %151 to i32*
  %bf.load285 = load i32, i32* %152, align 8
  %bf.lshr286 = lshr i32 %bf.load285, 16
  %bf.clear287 = and i32 %bf.lshr286, 255
  store i32 %bf.clear287, i32* %full_mode.addr, align 4
  br label %if.end.288

if.end.288:                                       ; preds = %if.then.284, %sw.bb.280
  store i32 0, i32* %i, align 4
  br label %for.cond.289

for.cond.289:                                     ; preds = %for.inc.317, %if.end.288
  %153 = load i32, i32* %i, align 4
  %cmp290 = icmp slt i32 %153, 32
  br i1 %cmp290, label %for.body.292, label %for.end.319

for.body.292:                                     ; preds = %for.cond.289
  %154 = load i32, i32* %i, align 4
  %idxprom294 = sext i32 %154 to i64
  %arrayidx295 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom294
  %155 = load %struct.table_elt*, %struct.table_elt** %arrayidx295, align 8
  store %struct.table_elt* %155, %struct.table_elt** %p, align 8
  br label %for.cond.296

for.cond.296:                                     ; preds = %for.inc.315, %for.body.292
  %156 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool297 = icmp ne %struct.table_elt* %156, null
  br i1 %tobool297, label %for.body.298, label %for.end.316

for.body.298:                                     ; preds = %for.cond.296
  %157 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash299 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %157, i32 0, i32 2
  %158 = load %struct.table_elt*, %struct.table_elt** %next_same_hash299, align 8
  store %struct.table_elt* %158, %struct.table_elt** %next293, align 8
  %159 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %159, i32 0, i32 11
  %160 = load i8, i8* %in_memory, align 1
  %tobool300 = icmp ne i8 %160, 0
  br i1 %tobool300, label %if.then.301, label %if.end.314

if.then.301:                                      ; preds = %for.body.298
  %161 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %canon_exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %161, i32 0, i32 1
  %162 = load %struct.rtx_def*, %struct.rtx_def** %canon_exp, align 8
  %tobool302 = icmp ne %struct.rtx_def* %162, null
  br i1 %tobool302, label %if.end.307, label %if.then.303

if.then.303:                                      ; preds = %if.then.301
  %163 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp304 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %163, i32 0, i32 0
  %164 = load %struct.rtx_def*, %struct.rtx_def** %exp304, align 8
  %call305 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %164)
  %165 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %canon_exp306 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %165, i32 0, i32 1
  store %struct.rtx_def* %call305, %struct.rtx_def** %canon_exp306, align 8
  br label %if.end.307

if.end.307:                                       ; preds = %if.then.303, %if.then.301
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %exp308 = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %d, i32 0, i32 1
  store %struct.rtx_def* %166, %struct.rtx_def** %exp308, align 8
  %167 = load i32, i32* %full_mode.addr, align 4
  %mode = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %d, i32 0, i32 0
  store i32 %167, i32* %mode, align 4
  %168 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %canon_exp309 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %168, i32 0, i32 1
  %169 = bitcast %struct.check_dependence_data* %d to i8*
  %call310 = call i32 @for_each_rtx(%struct.rtx_def** %canon_exp309, i32 (%struct.rtx_def**, i8*)* @check_dependence, i8* %169)
  %tobool311 = icmp ne i32 %call310, 0
  br i1 %tobool311, label %if.then.312, label %if.end.313

if.then.312:                                      ; preds = %if.end.307
  %170 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %171 = load i32, i32* %i, align 4
  call void @remove_from_table(%struct.table_elt* %170, i32 %171)
  br label %if.end.313

if.end.313:                                       ; preds = %if.then.312, %if.end.307
  br label %if.end.314

if.end.314:                                       ; preds = %if.end.313, %for.body.298
  br label %for.inc.315

for.inc.315:                                      ; preds = %if.end.314
  %172 = load %struct.table_elt*, %struct.table_elt** %next293, align 8
  store %struct.table_elt* %172, %struct.table_elt** %p, align 8
  br label %for.cond.296

for.end.316:                                      ; preds = %for.cond.296
  br label %for.inc.317

for.inc.317:                                      ; preds = %for.end.316
  %173 = load i32, i32* %i, align 4
  %inc318 = add nsw i32 %173, 1
  store i32 %inc318, i32* %i, align 4
  br label %for.cond.289

for.end.319:                                      ; preds = %for.cond.289
  br label %return

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 1971, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.invalidate, i32 0, i32 0)) #7
  unreachable

return:                                           ; preds = %for.end.319, %sw.bb.276, %for.end.275, %sw.bb.258, %if.end.257
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @remove_from_table(%struct.table_elt* %elt, i32 %hash) #0 {
entry:
  %elt.addr = alloca %struct.table_elt*, align 8
  %hash.addr = alloca i32, align 4
  %prev = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %newfirst = alloca %struct.table_elt*, align 8
  %prev11 = alloca %struct.table_elt*, align 8
  %next12 = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  store %struct.table_elt* %elt, %struct.table_elt** %elt.addr, align 8
  store i32 %hash, i32* %hash.addr, align 4
  %0 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp = icmp eq %struct.table_elt* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1, i32 0, i32 6
  store %struct.table_elt* null, %struct.table_elt** %first_same_value, align 8
  %2 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 5
  %3 = load %struct.table_elt*, %struct.table_elt** %prev_same_value, align 8
  store %struct.table_elt* %3, %struct.table_elt** %prev, align 8
  %4 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 4
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8
  %6 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %tobool = icmp ne %struct.table_elt* %6, null
  br i1 %tobool, label %if.then.1, label %if.end.3

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.table_elt*, %struct.table_elt** %prev, align 8
  %8 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %prev_same_value2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %8, i32 0, i32 5
  store %struct.table_elt* %7, %struct.table_elt** %prev_same_value2, align 8
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.1, %if.end
  %9 = load %struct.table_elt*, %struct.table_elt** %prev, align 8
  %tobool4 = icmp ne %struct.table_elt* %9, null
  br i1 %tobool4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.end.3
  %10 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %11 = load %struct.table_elt*, %struct.table_elt** %prev, align 8
  %next_same_value6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 4
  store %struct.table_elt* %10, %struct.table_elt** %next_same_value6, align 8
  br label %if.end.10

if.else:                                          ; preds = %if.end.3
  %12 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %12, %struct.table_elt** %newfirst, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %13 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %tobool7 = icmp ne %struct.table_elt* %13, null
  br i1 %tobool7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load %struct.table_elt*, %struct.table_elt** %newfirst, align 8
  %15 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %first_same_value8 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %15, i32 0, i32 6
  store %struct.table_elt* %14, %struct.table_elt** %first_same_value8, align 8
  %16 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %next_same_value9 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 4
  %17 = load %struct.table_elt*, %struct.table_elt** %next_same_value9, align 8
  store %struct.table_elt* %17, %struct.table_elt** %next, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.10

if.end.10:                                        ; preds = %while.end, %if.then.5
  %18 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %18, i32 0, i32 3
  %19 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash, align 8
  store %struct.table_elt* %19, %struct.table_elt** %prev11, align 8
  %20 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %20, i32 0, i32 2
  %21 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %21, %struct.table_elt** %next12, align 8
  %22 = load %struct.table_elt*, %struct.table_elt** %next12, align 8
  %tobool13 = icmp ne %struct.table_elt* %22, null
  br i1 %tobool13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.end.10
  %23 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8
  %24 = load %struct.table_elt*, %struct.table_elt** %next12, align 8
  %prev_same_hash15 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %24, i32 0, i32 3
  store %struct.table_elt* %23, %struct.table_elt** %prev_same_hash15, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %if.end.10
  %25 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8
  %tobool17 = icmp ne %struct.table_elt* %25, null
  br i1 %tobool17, label %if.then.18, label %if.else.20

if.then.18:                                       ; preds = %if.end.16
  %26 = load %struct.table_elt*, %struct.table_elt** %next12, align 8
  %27 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8
  %next_same_hash19 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 2
  store %struct.table_elt* %26, %struct.table_elt** %next_same_hash19, align 8
  br label %if.end.35

if.else.20:                                       ; preds = %if.end.16
  %28 = load i32, i32* %hash.addr, align 4
  %idxprom = zext i32 %28 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %29 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  %30 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp21 = icmp eq %struct.table_elt* %29, %30
  br i1 %cmp21, label %if.then.22, label %if.else.25

if.then.22:                                       ; preds = %if.else.20
  %31 = load %struct.table_elt*, %struct.table_elt** %next12, align 8
  %32 = load i32, i32* %hash.addr, align 4
  %idxprom23 = zext i32 %32 to i64
  %arrayidx24 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom23
  store %struct.table_elt* %31, %struct.table_elt** %arrayidx24, align 8
  br label %if.end.34

if.else.25:                                       ; preds = %if.else.20
  store i32 0, i32* %hash.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.25
  %33 = load i32, i32* %hash.addr, align 4
  %cmp26 = icmp ult i32 %33, 32
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %hash.addr, align 4
  %idxprom27 = zext i32 %34 to i64
  %arrayidx28 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom27
  %35 = load %struct.table_elt*, %struct.table_elt** %arrayidx28, align 8
  %36 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp29 = icmp eq %struct.table_elt* %35, %36
  br i1 %cmp29, label %if.then.30, label %if.end.33

if.then.30:                                       ; preds = %for.body
  %37 = load %struct.table_elt*, %struct.table_elt** %next12, align 8
  %38 = load i32, i32* %hash.addr, align 4
  %idxprom31 = zext i32 %38 to i64
  %arrayidx32 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom31
  store %struct.table_elt* %37, %struct.table_elt** %arrayidx32, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.30, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.33
  %39 = load i32, i32* %hash.addr, align 4
  %inc = add i32 %39, 1
  store i32 %inc, i32* %hash.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.34

if.end.34:                                        ; preds = %for.end, %if.then.22
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.18
  %40 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %40, i32 0, i32 7
  %41 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8
  %cmp36 = icmp ne %struct.table_elt* %41, null
  br i1 %cmp36, label %land.lhs.true, label %if.end.54

land.lhs.true:                                    ; preds = %if.end.35
  %42 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %related_value37 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %42, i32 0, i32 7
  %43 = load %struct.table_elt*, %struct.table_elt** %related_value37, align 8
  %44 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp38 = icmp ne %struct.table_elt* %43, %44
  br i1 %cmp38, label %if.then.39, label %if.end.54

if.then.39:                                       ; preds = %land.lhs.true
  %45 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %related_value40 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %45, i32 0, i32 7
  %46 = load %struct.table_elt*, %struct.table_elt** %related_value40, align 8
  store %struct.table_elt* %46, %struct.table_elt** %p, align 8
  br label %while.cond.41

while.cond.41:                                    ; preds = %while.body.44, %if.then.39
  %47 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value42 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 7
  %48 = load %struct.table_elt*, %struct.table_elt** %related_value42, align 8
  %49 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp43 = icmp ne %struct.table_elt* %48, %49
  br i1 %cmp43, label %while.body.44, label %while.end.46

while.body.44:                                    ; preds = %while.cond.41
  %50 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %50, i32 0, i32 7
  %51 = load %struct.table_elt*, %struct.table_elt** %related_value45, align 8
  store %struct.table_elt* %51, %struct.table_elt** %p, align 8
  br label %while.cond.41

while.end.46:                                     ; preds = %while.cond.41
  %52 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %related_value47 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %52, i32 0, i32 7
  %53 = load %struct.table_elt*, %struct.table_elt** %related_value47, align 8
  %54 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value48 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %54, i32 0, i32 7
  store %struct.table_elt* %53, %struct.table_elt** %related_value48, align 8
  %55 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value49 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 7
  %56 = load %struct.table_elt*, %struct.table_elt** %related_value49, align 8
  %57 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cmp50 = icmp eq %struct.table_elt* %56, %57
  br i1 %cmp50, label %if.then.51, label %if.end.53

if.then.51:                                       ; preds = %while.end.46
  %58 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value52 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %58, i32 0, i32 7
  store %struct.table_elt* null, %struct.table_elt** %related_value52, align 8
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.51, %while.end.46
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %land.lhs.true, %if.end.35
  %59 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8
  %60 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %next_same_hash55 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %60, i32 0, i32 2
  store %struct.table_elt* %59, %struct.table_elt** %next_same_hash55, align 8
  %61 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  store %struct.table_elt* %61, %struct.table_elt** @free_element_chain, align 8
  br label %return

return:                                           ; preds = %if.end.54, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.cse_reg_info* @get_cse_reg_info(i32 %regno) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %hash_head = alloca %struct.cse_reg_info**, align 8
  %p = alloca %struct.cse_reg_info*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  %0 = load i32, i32* %regno.addr, align 4
  %1 = load i32, i32* %regno.addr, align 4
  %shr = lshr i32 %1, 7
  %xor = xor i32 %0, %shr
  %and = and i32 %xor, 127
  %idxprom = zext i32 %and to i64
  %arrayidx = getelementptr inbounds [128 x %struct.cse_reg_info*], [128 x %struct.cse_reg_info*]* @reg_hash, i32 0, i64 %idxprom
  store %struct.cse_reg_info** %arrayidx, %struct.cse_reg_info*** %hash_head, align 8
  %2 = load %struct.cse_reg_info**, %struct.cse_reg_info*** %hash_head, align 8
  %3 = load %struct.cse_reg_info*, %struct.cse_reg_info** %2, align 8
  store %struct.cse_reg_info* %3, %struct.cse_reg_info** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %cmp = icmp ne %struct.cse_reg_info* %4, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %regno1 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %5, i32 0, i32 2
  %6 = load i32, i32* %regno1, align 4
  %7 = load i32, i32* %regno.addr, align 4
  %cmp2 = icmp eq i32 %6, %7
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %hash_next = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %8, i32 0, i32 0
  %9 = load %struct.cse_reg_info*, %struct.cse_reg_info** %hash_next, align 8
  store %struct.cse_reg_info* %9, %struct.cse_reg_info** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %cmp3 = icmp eq %struct.cse_reg_info* %10, null
  br i1 %cmp3, label %if.then.4, label %if.end.13

if.then.4:                                        ; preds = %for.end
  %11 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_free_list, align 8
  %tobool = icmp ne %struct.cse_reg_info* %11, null
  br i1 %tobool, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then.4
  %12 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_free_list, align 8
  store %struct.cse_reg_info* %12, %struct.cse_reg_info** %p, align 8
  %13 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %next = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %13, i32 0, i32 1
  %14 = load %struct.cse_reg_info*, %struct.cse_reg_info** %next, align 8
  store %struct.cse_reg_info* %14, %struct.cse_reg_info** @cse_reg_info_free_list, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.then.4
  %call = call noalias i8* @xmalloc(i64 32)
  %15 = bitcast i8* %call to %struct.cse_reg_info*
  store %struct.cse_reg_info* %15, %struct.cse_reg_info** %p, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %16 = load %struct.cse_reg_info**, %struct.cse_reg_info*** %hash_head, align 8
  %17 = load %struct.cse_reg_info*, %struct.cse_reg_info** %16, align 8
  %18 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %hash_next7 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %18, i32 0, i32 0
  store %struct.cse_reg_info* %17, %struct.cse_reg_info** %hash_next7, align 8
  %19 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %20 = load %struct.cse_reg_info**, %struct.cse_reg_info*** %hash_head, align 8
  store %struct.cse_reg_info* %19, %struct.cse_reg_info** %20, align 8
  %21 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %21, i32 0, i32 4
  store i32 1, i32* %reg_tick, align 4
  %22 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %22, i32 0, i32 5
  store i32 -1, i32* %reg_in_table, align 4
  %23 = load i32, i32* %regno.addr, align 4
  %24 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %24, i32 0, i32 3
  store i32 %23, i32* %reg_qty, align 4
  %25 = load i32, i32* %regno.addr, align 4
  %26 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %regno8 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %26, i32 0, i32 2
  store i32 %25, i32* %regno8, align 4
  %27 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_used_list, align 8
  %28 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  %next9 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %28, i32 0, i32 1
  store %struct.cse_reg_info* %27, %struct.cse_reg_info** %next9, align 8
  %29 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  store %struct.cse_reg_info* %29, %struct.cse_reg_info** @cse_reg_info_used_list, align 8
  %30 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_used_list_end, align 8
  %tobool10 = icmp ne %struct.cse_reg_info* %30, null
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.6
  %31 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  store %struct.cse_reg_info* %31, %struct.cse_reg_info** @cse_reg_info_used_list_end, align 8
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.end.6
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %for.end
  %32 = load i32, i32* %regno.addr, align 4
  store i32 %32, i32* @cached_regno, align 4
  %33 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  store %struct.cse_reg_info* %33, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %34 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8
  ret %struct.cse_reg_info* %34
}

; Function Attrs: nounwind uwtable
define internal i32 @canon_hash(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hash = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %regno = alloca i32, align 4
  %record = alloca i8, align 1
  %tem = alloca i64, align 8
  %tem84 = alloca i64, align 8
  %units = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  %tem514 = alloca %struct.rtx_def*, align 8
  %tem573 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  store i32 0, i32* %hash, align 4
  br label %repeat

repeat:                                           ; preds = %if.then.521, %for.end.474, %if.end.398, %if.end.262, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %repeat
  %1 = load i32, i32* %hash, align 4
  store i32 %1, i32* %retval
  br label %return

if.end:                                           ; preds = %repeat
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default [
    i32 61, label %sw.bb
    i32 63, label %sw.bb.39
    i32 54, label %sw.bb.61
    i32 55, label %sw.bb.69
    i32 56, label %sw.bb.104
    i32 67, label %sw.bb.124
    i32 68, label %sw.bb.132
    i32 66, label %sw.bb.139
    i32 48, label %sw.bb.267
    i32 96, label %sw.bb.404
    i32 97, label %sw.bb.404
    i32 98, label %sw.bb.404
    i32 99, label %sw.bb.404
    i32 100, label %sw.bb.404
    i32 101, label %sw.bb.404
    i32 59, label %sw.bb.404
    i32 69, label %sw.bb.404
    i32 50, label %sw.bb.404
    i32 43, label %sw.bb.404
    i32 41, label %sw.bb.405
  ]

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %6 = load i32, i32* %rtuint, align 4
  store i32 %6, i32* %regno, align 4
  %7 = load i32, i32* %regno, align 4
  %cmp1 = icmp uge i32 %7, 53
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %sw.bb
  store i8 1, i8* %record, align 1
  br label %if.end.32

if.else:                                          ; preds = %sw.bb
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp3 = icmp eq %struct.rtx_def* %8, %9
  br i1 %cmp3, label %if.then.11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp4 = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp4, label %if.then.11, label %lor.lhs.false.5

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp6 = icmp eq %struct.rtx_def* %12, %13
  br i1 %cmp6, label %if.then.11, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false.5
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp8 = icmp eq %struct.rtx_def* %14, %15
  br i1 %cmp8, label %if.then.11, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.7
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8
  %cmp10 = icmp eq %struct.rtx_def* %16, %17
  br i1 %cmp10, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %lor.lhs.false.9, %lor.lhs.false.7, %lor.lhs.false.5, %lor.lhs.false, %if.else
  store i8 1, i8* %record, align 1
  br label %if.end.31

if.else.12:                                       ; preds = %lor.lhs.false.9
  %18 = load i32, i32* %regno, align 4
  %idxprom = zext i32 %18 to i64
  %arrayidx13 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom
  %19 = load i8, i8* %arrayidx13, align 1
  %tobool = icmp ne i8 %19, 0
  br i1 %tobool, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %if.else.12
  store i8 0, i8* %record, align 1
  br label %if.end.30

if.else.15:                                       ; preds = %if.else.12
  %20 = load i32, i32* %regno, align 4
  %idxprom16 = zext i32 %20 to i64
  %arrayidx17 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom16
  %21 = load i8, i8* %arrayidx17, align 1
  %tobool18 = icmp ne i8 %21, 0
  br i1 %tobool18, label %if.then.19, label %if.else.20

if.then.19:                                       ; preds = %if.else.15
  store i8 1, i8* %record, align 1
  br label %if.end.29

if.else.20:                                       ; preds = %if.else.15
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load21 = load i32, i32* %23, align 8
  %bf.lshr = lshr i32 %bf.load21, 16
  %bf.clear22 = and i32 %bf.lshr, 255
  %idxprom23 = sext i32 %bf.clear22 to i64
  %arrayidx24 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom23
  %24 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %24, 4
  br i1 %cmp25, label %if.then.26, label %if.else.27

if.then.26:                                       ; preds = %if.else.20
  store i8 1, i8* %record, align 1
  br label %if.end.28

if.else.27:                                       ; preds = %if.else.20
  store i8 0, i8* %record, align 1
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.27, %if.then.26
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.then.19
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.then.14
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30, %if.then.11
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.2
  %25 = load i8, i8* %record, align 1
  %tobool33 = trunc i8 %25 to i1
  br i1 %tobool33, label %if.end.35, label %if.then.34

if.then.34:                                       ; preds = %if.end.32
  store i32 1, i32* @do_not_record, align 4
  store i32 0, i32* %retval
  br label %return

if.end.35:                                        ; preds = %if.end.32
  %26 = load i32, i32* %regno, align 4
  %27 = load i32, i32* @cached_regno, align 4
  %cmp36 = icmp eq i32 %26, %27
  br i1 %cmp36, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end.35
  %28 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool37 = icmp ne %struct.cse_reg_info* %28, null
  br i1 %tobool37, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %29 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end.35
  %30 = load i32, i32* %regno, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %30)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %29, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %31 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %31
  %32 = load i32, i32* %hash, align 4
  %add38 = add i32 %32, %add
  store i32 %add38, i32* %hash, align 4
  %33 = load i32, i32* %hash, align 4
  store i32 %33, i32* %retval
  br label %return

sw.bb.39:                                         ; preds = %if.end
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load42 = load i32, i32* %36, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 61
  br i1 %cmp44, label %if.then.45, label %if.end.60

if.then.45:                                       ; preds = %sw.bb.39
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rtx48, align 8
  %fld49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i32 0, i64 0
  %rtuint51 = bitcast %union.rtunion_def* %arrayidx50 to i32*
  %39 = load i32, i32* %rtuint51, align 4
  %add52 = add i32 8064, %39
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 1
  %rtuint55 = bitcast %union.rtunion_def* %arrayidx54 to i32*
  %41 = load i32, i32* %rtuint55, align 4
  %42 = load i32, i32* @target_flags, align 4
  %and = and i32 %42, 33554432
  %tobool56 = icmp ne i32 %and, 0
  %cond57 = select i1 %tobool56, i32 8, i32 4
  %div = udiv i32 %41, %cond57
  %add58 = add i32 %add52, %div
  %43 = load i32, i32* %hash, align 4
  %add59 = add i32 %43, %add58
  store i32 %add59, i32* %hash, align 4
  %44 = load i32, i32* %hash, align 4
  store i32 %44, i32* %retval
  br label %return

if.end.60:                                        ; preds = %sw.bb.39
  br label %sw.epilog

sw.bb.61:                                         ; preds = %if.end
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx63 to i64*
  %46 = load i64, i64* %rtwint, align 8
  store i64 %46, i64* %tem, align 8
  %47 = load i32, i32* %mode.addr, align 4
  %add64 = add i32 6912, %47
  %conv = zext i32 %add64 to i64
  %48 = load i64, i64* %tem, align 8
  %add65 = add i64 %conv, %48
  %49 = load i32, i32* %hash, align 4
  %conv66 = zext i32 %49 to i64
  %add67 = add i64 %conv66, %add65
  %conv68 = trunc i64 %add67 to i32
  store i32 %conv68, i32* %hash, align 4
  %50 = load i32, i32* %hash, align 4
  store i32 %50, i32* %retval
  br label %return

sw.bb.69:                                         ; preds = %if.end
  %51 = load i32, i32* %code, align 4
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load70 = load i32, i32* %53, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  %add73 = add i32 %51, %bf.clear72
  %54 = load i32, i32* %hash, align 4
  %add74 = add i32 %54, %add73
  store i32 %add74, i32* %hash, align 4
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load75 = load i32, i32* %56, align 8
  %bf.lshr76 = lshr i32 %bf.load75, 16
  %bf.clear77 = and i32 %bf.lshr76, 255
  %cmp78 = icmp ne i32 %bf.clear77, 0
  br i1 %cmp78, label %if.then.80, label %if.else.92

if.then.80:                                       ; preds = %sw.bb.69
  store i32 2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.80
  %57 = load i32, i32* %i, align 4
  %58 = load i8, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @rtx_length, i32 0, i64 55), align 1
  %conv81 = zext i8 %58 to i32
  %cmp82 = icmp slt i32 %57, %conv81
  br i1 %cmp82, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %59 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %59 to i64
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 %idxprom85
  %rtwint88 = bitcast %union.rtunion_def* %arrayidx87 to i64*
  %61 = load i64, i64* %rtwint88, align 8
  store i64 %61, i64* %tem84, align 8
  %62 = load i64, i64* %tem84, align 8
  %63 = load i32, i32* %hash, align 4
  %conv89 = zext i32 %63 to i64
  %add90 = add i64 %conv89, %62
  %conv91 = trunc i64 %add90 to i32
  store i32 %conv91, i32* %hash, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4
  %inc = add nsw i32 %64, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.103

if.else.92:                                       ; preds = %sw.bb.69
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 1
  %rtwint95 = bitcast %union.rtunion_def* %arrayidx94 to i64*
  %66 = load i64, i64* %rtwint95, align 8
  %conv96 = trunc i64 %66 to i32
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i32 0, i64 2
  %rtwint99 = bitcast %union.rtunion_def* %arrayidx98 to i64*
  %68 = load i64, i64* %rtwint99, align 8
  %conv100 = trunc i64 %68 to i32
  %add101 = add i32 %conv96, %conv100
  %69 = load i32, i32* %hash, align 4
  %add102 = add i32 %69, %add101
  store i32 %add102, i32* %hash, align 4
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.92, %for.end
  %70 = load i32, i32* %hash, align 4
  store i32 %70, i32* %retval
  br label %return

sw.bb.104:                                        ; preds = %if.end
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtvec_def**
  %72 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %72, i32 0, i32 0
  %73 = load i32, i32* %num_elem, align 4
  store i32 %73, i32* %units, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.107

for.cond.107:                                     ; preds = %for.inc.121, %sw.bb.104
  %74 = load i32, i32* %i, align 4
  %75 = load i32, i32* %units, align 4
  %cmp108 = icmp slt i32 %74, %75
  br i1 %cmp108, label %for.body.110, label %for.end.123

for.body.110:                                     ; preds = %for.cond.107
  %76 = load i32, i32* %i, align 4
  %idxprom111 = sext i32 %76 to i64
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtvec114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtvec_def**
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec114, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom111
  %79 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx115, align 8
  store %struct.rtx_def* %79, %struct.rtx_def** %elt, align 8
  %80 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load116 = load i32, i32* %82, align 8
  %bf.lshr117 = lshr i32 %bf.load116, 16
  %bf.clear118 = and i32 %bf.lshr117, 255
  %call119 = call i32 @canon_hash(%struct.rtx_def* %80, i32 %bf.clear118)
  %83 = load i32, i32* %hash, align 4
  %add120 = add i32 %83, %call119
  store i32 %add120, i32* %hash, align 4
  br label %for.inc.121

for.inc.121:                                      ; preds = %for.body.110
  %84 = load i32, i32* %i, align 4
  %inc122 = add nsw i32 %84, 1
  store i32 %inc122, i32* %i, align 4
  br label %for.cond.107

for.end.123:                                      ; preds = %for.cond.107
  %85 = load i32, i32* %hash, align 4
  store i32 %85, i32* %retval
  br label %return

sw.bb.124:                                        ; preds = %if.end
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %88 = ptrtoint %struct.rtx_def* %87 to i64
  %add128 = add i64 8576, %88
  %89 = load i32, i32* %hash, align 4
  %conv129 = zext i32 %89 to i64
  %add130 = add i64 %conv129, %add128
  %conv131 = trunc i64 %add130 to i32
  store i32 %conv131, i32* %hash, align 4
  %90 = load i32, i32* %hash, align 4
  store i32 %90, i32* %retval
  br label %return

sw.bb.132:                                        ; preds = %if.end
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i32 0, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx134 to i8**
  %92 = load i8*, i8** %rtstr, align 8
  %93 = ptrtoint i8* %92 to i64
  %add135 = add i64 8704, %93
  %94 = load i32, i32* %hash, align 4
  %conv136 = zext i32 %94 to i64
  %add137 = add i64 %conv136, %add135
  %conv138 = trunc i64 %add137 to i32
  store i32 %conv138, i32* %hash, align 4
  %95 = load i32, i32* %hash, align 4
  store i32 %95, i32* %retval
  br label %return

sw.bb.139:                                        ; preds = %if.end
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load140 = load i32, i32* %97, align 8
  %bf.lshr141 = lshr i32 %bf.load140, 27
  %bf.clear142 = and i32 %bf.lshr141, 1
  %tobool143 = icmp ne i32 %bf.clear142, 0
  br i1 %tobool143, label %if.then.150, label %lor.lhs.false.144

lor.lhs.false.144:                                ; preds = %sw.bb.139
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load145 = load i32, i32* %99, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 16
  %bf.clear147 = and i32 %bf.lshr146, 255
  %cmp148 = icmp eq i32 %bf.clear147, 51
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %lor.lhs.false.144, %sw.bb.139
  store i32 1, i32* @do_not_record, align 4
  store i32 0, i32* %retval
  br label %return

if.end.151:                                       ; preds = %lor.lhs.false.144
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load152 = load i32, i32* %101, align 8
  %bf.lshr153 = lshr i32 %bf.load152, 26
  %bf.clear154 = and i32 %bf.lshr153, 1
  %tobool155 = icmp ne i32 %bf.clear154, 0
  br i1 %tobool155, label %lor.lhs.false.156, label %if.then.261

lor.lhs.false.156:                                ; preds = %if.end.151
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i32 0, i64 0
  %rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx159, align 8
  %104 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp160 = icmp eq %struct.rtx_def* %103, %104
  br i1 %cmp160, label %if.then.261, label %lor.lhs.false.162

lor.lhs.false.162:                                ; preds = %lor.lhs.false.156
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 0
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp166 = icmp eq %struct.rtx_def* %106, %107
  br i1 %cmp166, label %if.then.261, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.162
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i32 0, i64 0
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx171, align 8
  %110 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp172 = icmp eq %struct.rtx_def* %109, %110
  br i1 %cmp172, label %land.lhs.true.174, label %lor.lhs.false.177

land.lhs.true.174:                                ; preds = %lor.lhs.false.168
  %111 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv175 = sext i8 %111 to i32
  %tobool176 = icmp ne i32 %conv175, 0
  br i1 %tobool176, label %if.then.261, label %lor.lhs.false.177

lor.lhs.false.177:                                ; preds = %land.lhs.true.174, %lor.lhs.false.168
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx180, align 8
  %114 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp181 = icmp eq %struct.rtx_def* %113, %114
  br i1 %cmp181, label %if.then.261, label %lor.lhs.false.183

lor.lhs.false.183:                                ; preds = %lor.lhs.false.177
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp187 = icmp eq %struct.rtx_def* %116, %117
  br i1 %cmp187, label %if.then.261, label %lor.lhs.false.189

lor.lhs.false.189:                                ; preds = %lor.lhs.false.183
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i32 0, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx192, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load193 = load i32, i32* %120, align 8
  %bf.clear194 = and i32 %bf.load193, 65535
  %cmp195 = icmp eq i32 %bf.clear194, 75
  br i1 %cmp195, label %land.lhs.true.197, label %lor.lhs.false.253

land.lhs.true.197:                                ; preds = %lor.lhs.false.189
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 0
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx200, align 8
  %fld201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i32 0, i64 1
  %rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rtx203, align 8
  %124 = bitcast %struct.rtx_def* %123 to i32*
  %bf.load204 = load i32, i32* %124, align 8
  %bf.clear205 = and i32 %bf.load204, 65535
  %cmp206 = icmp eq i32 %bf.clear205, 54
  br i1 %cmp206, label %land.lhs.true.208, label %lor.lhs.false.253

land.lhs.true.208:                                ; preds = %land.lhs.true.197
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i32 0, i64 0
  %rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rtx211, align 8
  %fld212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx213 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld212, i32 0, i64 0
  %rtx214 = bitcast %union.rtunion_def* %arrayidx213 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx214, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp215 = icmp eq %struct.rtx_def* %127, %128
  br i1 %cmp215, label %if.then.261, label %lor.lhs.false.217

lor.lhs.false.217:                                ; preds = %land.lhs.true.208
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i32 0, i64 0
  %rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rtx220, align 8
  %fld221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i32 0, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx223, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp224 = icmp eq %struct.rtx_def* %131, %132
  br i1 %cmp224, label %if.then.261, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %lor.lhs.false.217
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i32 0, i64 0
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx229, align 8
  %135 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp230 = icmp eq %struct.rtx_def* %134, %135
  br i1 %cmp230, label %land.lhs.true.232, label %lor.lhs.false.235

land.lhs.true.232:                                ; preds = %lor.lhs.false.226
  %136 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv233 = sext i8 %136 to i32
  %tobool234 = icmp ne i32 %conv233, 0
  br i1 %tobool234, label %if.then.261, label %lor.lhs.false.235

lor.lhs.false.235:                                ; preds = %land.lhs.true.232, %lor.lhs.false.226
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %fld239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i32 0, i64 0
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx241, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp242 = icmp eq %struct.rtx_def* %139, %140
  br i1 %cmp242, label %if.then.261, label %lor.lhs.false.244

lor.lhs.false.244:                                ; preds = %lor.lhs.false.235
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i32 0, i64 0
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx247, align 8
  %fld248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i32 0, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rtx250, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp251 = icmp eq %struct.rtx_def* %143, %144
  br i1 %cmp251, label %if.then.261, label %lor.lhs.false.253

lor.lhs.false.253:                                ; preds = %lor.lhs.false.244, %land.lhs.true.197, %lor.lhs.false.189
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rtx256, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load257 = load i32, i32* %147, align 8
  %bf.clear258 = and i32 %bf.load257, 65535
  %cmp259 = icmp eq i32 %bf.clear258, 70
  br i1 %cmp259, label %if.then.261, label %if.end.262

if.then.261:                                      ; preds = %lor.lhs.false.253, %lor.lhs.false.244, %lor.lhs.false.235, %land.lhs.true.232, %lor.lhs.false.217, %land.lhs.true.208, %lor.lhs.false.183, %lor.lhs.false.177, %land.lhs.true.174, %lor.lhs.false.162, %lor.lhs.false.156, %if.end.151
  store i32 1, i32* @hash_arg_in_memory, align 4
  br label %if.end.262

if.end.262:                                       ; preds = %if.then.261, %lor.lhs.false.253
  %148 = load i32, i32* %hash, align 4
  %add263 = add i32 %148, 66
  store i32 %add263, i32* %hash, align 4
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i32 0, i64 0
  %rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rtx266, align 8
  store %struct.rtx_def* %150, %struct.rtx_def** %x.addr, align 8
  br label %repeat

sw.bb.267:                                        ; preds = %if.end
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i32 0, i64 0
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx270, align 8
  %153 = bitcast %struct.rtx_def* %152 to i32*
  %bf.load271 = load i32, i32* %153, align 8
  %bf.clear272 = and i32 %bf.load271, 65535
  %cmp273 = icmp eq i32 %bf.clear272, 66
  br i1 %cmp273, label %land.lhs.true.275, label %if.end.403

land.lhs.true.275:                                ; preds = %sw.bb.267
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i32 0, i64 0
  %rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rtx278, align 8
  %156 = bitcast %struct.rtx_def* %155 to i32*
  %bf.load279 = load i32, i32* %156, align 8
  %bf.lshr280 = lshr i32 %bf.load279, 27
  %bf.clear281 = and i32 %bf.lshr280, 1
  %tobool282 = icmp ne i32 %bf.clear281, 0
  br i1 %tobool282, label %if.end.403, label %if.then.283

if.then.283:                                      ; preds = %land.lhs.true.275
  %157 = load i32, i32* %hash, align 4
  %add284 = add i32 %157, 48
  store i32 %add284, i32* %hash, align 4
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld285, i32 0, i64 0
  %rtx287 = bitcast %union.rtunion_def* %arrayidx286 to %struct.rtx_def**
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rtx287, align 8
  store %struct.rtx_def* %159, %struct.rtx_def** %x.addr, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load288 = load i32, i32* %161, align 8
  %bf.lshr289 = lshr i32 %bf.load288, 26
  %bf.clear290 = and i32 %bf.lshr289, 1
  %tobool291 = icmp ne i32 %bf.clear290, 0
  br i1 %tobool291, label %lor.lhs.false.292, label %if.then.397

lor.lhs.false.292:                                ; preds = %if.then.283
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i32 0, i64 0
  %rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx295, align 8
  %164 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp296 = icmp eq %struct.rtx_def* %163, %164
  br i1 %cmp296, label %if.then.397, label %lor.lhs.false.298

lor.lhs.false.298:                                ; preds = %lor.lhs.false.292
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i32 0, i64 0
  %rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx301, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp302 = icmp eq %struct.rtx_def* %166, %167
  br i1 %cmp302, label %if.then.397, label %lor.lhs.false.304

lor.lhs.false.304:                                ; preds = %lor.lhs.false.298
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i32 0, i64 0
  %rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rtx307, align 8
  %170 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp308 = icmp eq %struct.rtx_def* %169, %170
  br i1 %cmp308, label %land.lhs.true.310, label %lor.lhs.false.313

land.lhs.true.310:                                ; preds = %lor.lhs.false.304
  %171 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv311 = sext i8 %171 to i32
  %tobool312 = icmp ne i32 %conv311, 0
  br i1 %tobool312, label %if.then.397, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %land.lhs.true.310, %lor.lhs.false.304
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 0
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rtx316, align 8
  %174 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp317 = icmp eq %struct.rtx_def* %173, %174
  br i1 %cmp317, label %if.then.397, label %lor.lhs.false.319

lor.lhs.false.319:                                ; preds = %lor.lhs.false.313
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1
  %arrayidx321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld320, i32 0, i64 0
  %rtx322 = bitcast %union.rtunion_def* %arrayidx321 to %struct.rtx_def**
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rtx322, align 8
  %177 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp323 = icmp eq %struct.rtx_def* %176, %177
  br i1 %cmp323, label %if.then.397, label %lor.lhs.false.325

lor.lhs.false.325:                                ; preds = %lor.lhs.false.319
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i32 0, i64 0
  %rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rtx328, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load329 = load i32, i32* %180, align 8
  %bf.clear330 = and i32 %bf.load329, 65535
  %cmp331 = icmp eq i32 %bf.clear330, 75
  br i1 %cmp331, label %land.lhs.true.333, label %lor.lhs.false.389

land.lhs.true.333:                                ; preds = %lor.lhs.false.325
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i32 0, i64 0
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtx336, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 1
  %rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx339, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load340 = load i32, i32* %184, align 8
  %bf.clear341 = and i32 %bf.load340, 65535
  %cmp342 = icmp eq i32 %bf.clear341, 54
  br i1 %cmp342, label %land.lhs.true.344, label %lor.lhs.false.389

land.lhs.true.344:                                ; preds = %land.lhs.true.333
  %185 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx346 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld345, i32 0, i64 0
  %rtx347 = bitcast %union.rtunion_def* %arrayidx346 to %struct.rtx_def**
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtx347, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 0
  %rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx350, align 8
  %188 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp351 = icmp eq %struct.rtx_def* %187, %188
  br i1 %cmp351, label %if.then.397, label %lor.lhs.false.353

lor.lhs.false.353:                                ; preds = %land.lhs.true.344
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1
  %arrayidx355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld354, i32 0, i64 0
  %rtx356 = bitcast %union.rtunion_def* %arrayidx355 to %struct.rtx_def**
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rtx356, align 8
  %fld357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i32 0, i64 0
  %rtx359 = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rtx359, align 8
  %192 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp360 = icmp eq %struct.rtx_def* %191, %192
  br i1 %cmp360, label %if.then.397, label %lor.lhs.false.362

lor.lhs.false.362:                                ; preds = %lor.lhs.false.353
  %193 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 0
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  %194 = load %struct.rtx_def*, %struct.rtx_def** %rtx365, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp366 = icmp eq %struct.rtx_def* %194, %195
  br i1 %cmp366, label %land.lhs.true.368, label %lor.lhs.false.371

land.lhs.true.368:                                ; preds = %lor.lhs.false.362
  %196 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv369 = sext i8 %196 to i32
  %tobool370 = icmp ne i32 %conv369, 0
  br i1 %tobool370, label %if.then.397, label %lor.lhs.false.371

lor.lhs.false.371:                                ; preds = %land.lhs.true.368, %lor.lhs.false.362
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 0
  %rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx374, align 8
  %fld375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i32 0, i64 0
  %rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rtx377, align 8
  %200 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp378 = icmp eq %struct.rtx_def* %199, %200
  br i1 %cmp378, label %if.then.397, label %lor.lhs.false.380

lor.lhs.false.380:                                ; preds = %lor.lhs.false.371
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i32 0, i64 0
  %rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx383, align 8
  %fld384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i32 0, i64 0
  %rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rtx386, align 8
  %204 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp387 = icmp eq %struct.rtx_def* %203, %204
  br i1 %cmp387, label %if.then.397, label %lor.lhs.false.389

lor.lhs.false.389:                                ; preds = %lor.lhs.false.380, %land.lhs.true.333, %lor.lhs.false.325
  %205 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i32 0, i64 0
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rtx392, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load393 = load i32, i32* %207, align 8
  %bf.clear394 = and i32 %bf.load393, 65535
  %cmp395 = icmp eq i32 %bf.clear394, 70
  br i1 %cmp395, label %if.then.397, label %if.end.398

if.then.397:                                      ; preds = %lor.lhs.false.389, %lor.lhs.false.380, %lor.lhs.false.371, %land.lhs.true.368, %lor.lhs.false.353, %land.lhs.true.344, %lor.lhs.false.319, %lor.lhs.false.313, %land.lhs.true.310, %lor.lhs.false.298, %lor.lhs.false.292, %if.then.283
  store i32 1, i32* @hash_arg_in_memory, align 4
  br label %if.end.398

if.end.398:                                       ; preds = %if.then.397, %lor.lhs.false.389
  %208 = load i32, i32* %hash, align 4
  %add399 = add i32 %208, 66
  store i32 %add399, i32* %hash, align 4
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld400 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i32 0, i64 0
  %rtx402 = bitcast %union.rtunion_def* %arrayidx401 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx402, align 8
  store %struct.rtx_def* %210, %struct.rtx_def** %x.addr, align 8
  br label %repeat

if.end.403:                                       ; preds = %land.lhs.true.275, %sw.bb.267
  br label %sw.epilog

sw.bb.404:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 1, i32* @do_not_record, align 4
  store i32 0, i32* %retval
  br label %return

sw.bb.405:                                        ; preds = %if.end
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load406 = load i32, i32* %212, align 8
  %bf.lshr407 = lshr i32 %bf.load406, 27
  %bf.clear408 = and i32 %bf.lshr407, 1
  %tobool409 = icmp ne i32 %bf.clear408, 0
  br i1 %tobool409, label %if.then.410, label %if.else.411

if.then.410:                                      ; preds = %sw.bb.405
  store i32 1, i32* @do_not_record, align 4
  store i32 0, i32* %retval
  br label %return

if.else.411:                                      ; preds = %sw.bb.405
  %213 = load i32, i32* %code, align 4
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load412 = load i32, i32* %215, align 8
  %bf.lshr413 = lshr i32 %bf.load412, 16
  %bf.clear414 = and i32 %bf.lshr413, 255
  %add415 = add i32 %213, %bf.clear414
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtstr418 = bitcast %union.rtunion_def* %arrayidx417 to i8**
  %217 = load i8*, i8** %rtstr418, align 8
  %call419 = call i32 @canon_hash_string(i8* %217)
  %add420 = add i32 %add415, %call419
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i32 0, i64 1
  %rtstr423 = bitcast %union.rtunion_def* %arrayidx422 to i8**
  %219 = load i8*, i8** %rtstr423, align 8
  %call424 = call i32 @canon_hash_string(i8* %219)
  %add425 = add i32 %add420, %call424
  %220 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1
  %arrayidx427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld426, i32 0, i64 2
  %rtint = bitcast %union.rtunion_def* %arrayidx427 to i32*
  %221 = load i32, i32* %rtint, align 4
  %add428 = add i32 %add425, %221
  %222 = load i32, i32* %hash, align 4
  %add429 = add i32 %222, %add428
  store i32 %add429, i32* %hash, align 4
  %223 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1
  %arrayidx431 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld430, i32 0, i64 3
  %rtvec432 = bitcast %union.rtunion_def* %arrayidx431 to %struct.rtvec_def**
  %224 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec432, align 8
  %num_elem433 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %224, i32 0, i32 0
  %225 = load i32, i32* %num_elem433, align 4
  %tobool434 = icmp ne i32 %225, 0
  br i1 %tobool434, label %if.then.435, label %if.end.493

if.then.435:                                      ; preds = %if.else.411
  store i32 1, i32* %i, align 4
  br label %for.cond.436

for.cond.436:                                     ; preds = %for.inc.472, %if.then.435
  %226 = load i32, i32* %i, align 4
  %227 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1
  %arrayidx438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld437, i32 0, i64 3
  %rtvec439 = bitcast %union.rtunion_def* %arrayidx438 to %struct.rtvec_def**
  %228 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec439, align 8
  %num_elem440 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %228, i32 0, i32 0
  %229 = load i32, i32* %num_elem440, align 4
  %cmp441 = icmp slt i32 %226, %229
  br i1 %cmp441, label %for.body.443, label %for.end.474

for.body.443:                                     ; preds = %for.cond.436
  %230 = load i32, i32* %i, align 4
  %idxprom444 = sext i32 %230 to i64
  %231 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i32 0, i64 3
  %rtvec447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtvec_def**
  %232 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec447, align 8
  %elem448 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %232, i32 0, i32 1
  %arrayidx449 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem448, i32 0, i64 %idxprom444
  %233 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx449, align 8
  %234 = load i32, i32* %i, align 4
  %idxprom450 = sext i32 %234 to i64
  %235 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld451, i32 0, i64 3
  %rtvec453 = bitcast %union.rtunion_def* %arrayidx452 to %struct.rtvec_def**
  %236 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec453, align 8
  %elem454 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %236, i32 0, i32 1
  %arrayidx455 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem454, i32 0, i64 %idxprom450
  %237 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx455, align 8
  %238 = bitcast %struct.rtx_def* %237 to i32*
  %bf.load456 = load i32, i32* %238, align 8
  %bf.lshr457 = lshr i32 %bf.load456, 16
  %bf.clear458 = and i32 %bf.lshr457, 255
  %call459 = call i32 @canon_hash(%struct.rtx_def* %233, i32 %bf.clear458)
  %239 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %239 to i64
  %240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1
  %arrayidx462 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld461, i32 0, i64 4
  %rtvec463 = bitcast %union.rtunion_def* %arrayidx462 to %struct.rtvec_def**
  %241 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec463, align 8
  %elem464 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %241, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem464, i32 0, i64 %idxprom460
  %242 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx465, align 8
  %fld466 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1
  %arrayidx467 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld466, i32 0, i64 0
  %rtstr468 = bitcast %union.rtunion_def* %arrayidx467 to i8**
  %243 = load i8*, i8** %rtstr468, align 8
  %call469 = call i32 @canon_hash_string(i8* %243)
  %add470 = add i32 %call459, %call469
  %244 = load i32, i32* %hash, align 4
  %add471 = add i32 %244, %add470
  store i32 %add471, i32* %hash, align 4
  br label %for.inc.472

for.inc.472:                                      ; preds = %for.body.443
  %245 = load i32, i32* %i, align 4
  %inc473 = add nsw i32 %245, 1
  store i32 %inc473, i32* %i, align 4
  br label %for.cond.436

for.end.474:                                      ; preds = %for.cond.436
  %246 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld475, i32 0, i64 4
  %rtvec477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtvec_def**
  %247 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec477, align 8
  %elem478 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %247, i32 0, i32 1
  %arrayidx479 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem478, i32 0, i64 0
  %248 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx479, align 8
  %fld480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1
  %arrayidx481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld480, i32 0, i64 0
  %rtstr482 = bitcast %union.rtunion_def* %arrayidx481 to i8**
  %249 = load i8*, i8** %rtstr482, align 8
  %call483 = call i32 @canon_hash_string(i8* %249)
  %250 = load i32, i32* %hash, align 4
  %add484 = add i32 %250, %call483
  store i32 %add484, i32* %hash, align 4
  %251 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx486 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld485, i32 0, i64 3
  %rtvec487 = bitcast %union.rtunion_def* %arrayidx486 to %struct.rtvec_def**
  %252 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec487, align 8
  %elem488 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %252, i32 0, i32 1
  %arrayidx489 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem488, i32 0, i64 0
  %253 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx489, align 8
  store %struct.rtx_def* %253, %struct.rtx_def** %x.addr, align 8
  %254 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %255 = bitcast %struct.rtx_def* %254 to i32*
  %bf.load490 = load i32, i32* %255, align 8
  %bf.lshr491 = lshr i32 %bf.load490, 16
  %bf.clear492 = and i32 %bf.lshr491, 255
  store i32 %bf.clear492, i32* %mode.addr, align 4
  br label %repeat

if.end.493:                                       ; preds = %if.else.411
  %256 = load i32, i32* %hash, align 4
  store i32 %256, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.403, %if.end.60
  %257 = load i32, i32* %code, align 4
  %idxprom494 = sext i32 %257 to i64
  %arrayidx495 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom494
  %258 = load i8, i8* %arrayidx495, align 1
  %conv496 = zext i8 %258 to i32
  %sub = sub nsw i32 %conv496, 1
  store i32 %sub, i32* %i, align 4
  %259 = load i32, i32* %code, align 4
  %260 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %261 = bitcast %struct.rtx_def* %260 to i32*
  %bf.load497 = load i32, i32* %261, align 8
  %bf.lshr498 = lshr i32 %bf.load497, 16
  %bf.clear499 = and i32 %bf.lshr498, 255
  %add500 = add i32 %259, %bf.clear499
  %262 = load i32, i32* %hash, align 4
  %add501 = add i32 %262, %add500
  store i32 %add501, i32* %hash, align 4
  %263 = load i32, i32* %code, align 4
  %idxprom502 = sext i32 %263 to i64
  %arrayidx503 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom502
  %264 = load i8*, i8** %arrayidx503, align 8
  store i8* %264, i8** %fmt, align 8
  br label %for.cond.504

for.cond.504:                                     ; preds = %for.inc.598, %sw.epilog
  %265 = load i32, i32* %i, align 4
  %cmp505 = icmp sge i32 %265, 0
  br i1 %cmp505, label %for.body.507, label %for.end.599

for.body.507:                                     ; preds = %for.cond.504
  %266 = load i32, i32* %i, align 4
  %idxprom508 = sext i32 %266 to i64
  %267 = load i8*, i8** %fmt, align 8
  %arrayidx509 = getelementptr inbounds i8, i8* %267, i64 %idxprom508
  %268 = load i8, i8* %arrayidx509, align 1
  %conv510 = sext i8 %268 to i32
  %cmp511 = icmp eq i32 %conv510, 101
  br i1 %cmp511, label %if.then.513, label %if.else.525

if.then.513:                                      ; preds = %for.body.507
  %269 = load i32, i32* %i, align 4
  %idxprom515 = sext i32 %269 to i64
  %270 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %270, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 %idxprom515
  %rtx518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtx_def**
  %271 = load %struct.rtx_def*, %struct.rtx_def** %rtx518, align 8
  store %struct.rtx_def* %271, %struct.rtx_def** %tem514, align 8
  %272 = load i32, i32* %i, align 4
  %cmp519 = icmp eq i32 %272, 0
  br i1 %cmp519, label %if.then.521, label %if.end.522

if.then.521:                                      ; preds = %if.then.513
  %273 = load %struct.rtx_def*, %struct.rtx_def** %tem514, align 8
  store %struct.rtx_def* %273, %struct.rtx_def** %x.addr, align 8
  br label %repeat

if.end.522:                                       ; preds = %if.then.513
  %274 = load %struct.rtx_def*, %struct.rtx_def** %tem514, align 8
  %call523 = call i32 @canon_hash(%struct.rtx_def* %274, i32 0)
  %275 = load i32, i32* %hash, align 4
  %add524 = add i32 %275, %call523
  store i32 %add524, i32* %hash, align 4
  br label %if.end.597

if.else.525:                                      ; preds = %for.body.507
  %276 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %276 to i64
  %277 = load i8*, i8** %fmt, align 8
  %arrayidx527 = getelementptr inbounds i8, i8* %277, i64 %idxprom526
  %278 = load i8, i8* %arrayidx527, align 1
  %conv528 = sext i8 %278 to i32
  %cmp529 = icmp eq i32 %conv528, 69
  br i1 %cmp529, label %if.then.531, label %if.else.553

if.then.531:                                      ; preds = %if.else.525
  store i32 0, i32* %j, align 4
  br label %for.cond.532

for.cond.532:                                     ; preds = %for.inc.550, %if.then.531
  %279 = load i32, i32* %j, align 4
  %280 = load i32, i32* %i, align 4
  %idxprom533 = sext i32 %280 to i64
  %281 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %281, i32 0, i32 1
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i32 0, i64 %idxprom533
  %rtvec536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtvec_def**
  %282 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec536, align 8
  %num_elem537 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %282, i32 0, i32 0
  %283 = load i32, i32* %num_elem537, align 4
  %cmp538 = icmp slt i32 %279, %283
  br i1 %cmp538, label %for.body.540, label %for.end.552

for.body.540:                                     ; preds = %for.cond.532
  %284 = load i32, i32* %j, align 4
  %idxprom541 = sext i32 %284 to i64
  %285 = load i32, i32* %i, align 4
  %idxprom542 = sext i32 %285 to i64
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i32 0, i64 %idxprom542
  %rtvec545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtvec_def**
  %287 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec545, align 8
  %elem546 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %287, i32 0, i32 1
  %arrayidx547 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem546, i32 0, i64 %idxprom541
  %288 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx547, align 8
  %call548 = call i32 @canon_hash(%struct.rtx_def* %288, i32 0)
  %289 = load i32, i32* %hash, align 4
  %add549 = add i32 %289, %call548
  store i32 %add549, i32* %hash, align 4
  br label %for.inc.550

for.inc.550:                                      ; preds = %for.body.540
  %290 = load i32, i32* %j, align 4
  %inc551 = add nsw i32 %290, 1
  store i32 %inc551, i32* %j, align 4
  br label %for.cond.532

for.end.552:                                      ; preds = %for.cond.532
  br label %if.end.596

if.else.553:                                      ; preds = %if.else.525
  %291 = load i32, i32* %i, align 4
  %idxprom554 = sext i32 %291 to i64
  %292 = load i8*, i8** %fmt, align 8
  %arrayidx555 = getelementptr inbounds i8, i8* %292, i64 %idxprom554
  %293 = load i8, i8* %arrayidx555, align 1
  %conv556 = sext i8 %293 to i32
  %cmp557 = icmp eq i32 %conv556, 115
  br i1 %cmp557, label %if.then.559, label %if.else.566

if.then.559:                                      ; preds = %if.else.553
  %294 = load i32, i32* %i, align 4
  %idxprom560 = sext i32 %294 to i64
  %295 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld561 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1
  %arrayidx562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld561, i32 0, i64 %idxprom560
  %rtstr563 = bitcast %union.rtunion_def* %arrayidx562 to i8**
  %296 = load i8*, i8** %rtstr563, align 8
  %call564 = call i32 @canon_hash_string(i8* %296)
  %297 = load i32, i32* %hash, align 4
  %add565 = add i32 %297, %call564
  store i32 %add565, i32* %hash, align 4
  br label %if.end.595

if.else.566:                                      ; preds = %if.else.553
  %298 = load i32, i32* %i, align 4
  %idxprom567 = sext i32 %298 to i64
  %299 = load i8*, i8** %fmt, align 8
  %arrayidx568 = getelementptr inbounds i8, i8* %299, i64 %idxprom567
  %300 = load i8, i8* %arrayidx568, align 1
  %conv569 = sext i8 %300 to i32
  %cmp570 = icmp eq i32 %conv569, 105
  br i1 %cmp570, label %if.then.572, label %if.else.579

if.then.572:                                      ; preds = %if.else.566
  %301 = load i32, i32* %i, align 4
  %idxprom574 = sext i32 %301 to i64
  %302 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx576 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld575, i32 0, i64 %idxprom574
  %rtint577 = bitcast %union.rtunion_def* %arrayidx576 to i32*
  %303 = load i32, i32* %rtint577, align 4
  store i32 %303, i32* %tem573, align 4
  %304 = load i32, i32* %tem573, align 4
  %305 = load i32, i32* %hash, align 4
  %add578 = add i32 %305, %304
  store i32 %add578, i32* %hash, align 4
  br label %if.end.594

if.else.579:                                      ; preds = %if.else.566
  %306 = load i32, i32* %i, align 4
  %idxprom580 = sext i32 %306 to i64
  %307 = load i8*, i8** %fmt, align 8
  %arrayidx581 = getelementptr inbounds i8, i8* %307, i64 %idxprom580
  %308 = load i8, i8* %arrayidx581, align 1
  %conv582 = sext i8 %308 to i32
  %cmp583 = icmp eq i32 %conv582, 48
  br i1 %cmp583, label %if.then.591, label %lor.lhs.false.585

lor.lhs.false.585:                                ; preds = %if.else.579
  %309 = load i32, i32* %i, align 4
  %idxprom586 = sext i32 %309 to i64
  %310 = load i8*, i8** %fmt, align 8
  %arrayidx587 = getelementptr inbounds i8, i8* %310, i64 %idxprom586
  %311 = load i8, i8* %arrayidx587, align 1
  %conv588 = sext i8 %311 to i32
  %cmp589 = icmp eq i32 %conv588, 116
  br i1 %cmp589, label %if.then.591, label %if.else.592

if.then.591:                                      ; preds = %lor.lhs.false.585, %if.else.579
  br label %if.end.593

if.else.592:                                      ; preds = %lor.lhs.false.585
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 2488, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.canon_hash, i32 0, i32 0)) #7
  unreachable

if.end.593:                                       ; preds = %if.then.591
  br label %if.end.594

if.end.594:                                       ; preds = %if.end.593, %if.then.572
  br label %if.end.595

if.end.595:                                       ; preds = %if.end.594, %if.then.559
  br label %if.end.596

if.end.596:                                       ; preds = %if.end.595, %for.end.552
  br label %if.end.597

if.end.597:                                       ; preds = %if.end.596, %if.end.522
  br label %for.inc.598

for.inc.598:                                      ; preds = %if.end.597
  %312 = load i32, i32* %i, align 4
  %dec = add nsw i32 %312, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.504

for.end.599:                                      ; preds = %for.cond.504
  %313 = load i32, i32* %hash, align 4
  store i32 %313, i32* %retval
  br label %return

return:                                           ; preds = %for.end.599, %if.end.493, %if.then.410, %sw.bb.404, %if.then.150, %sw.bb.132, %sw.bb.124, %for.end.123, %if.end.103, %sw.bb.61, %if.then.45, %cond.end, %if.then.34, %if.then
  %314 = load i32, i32* %retval
  ret i32 %314
}

; Function Attrs: nounwind uwtable
define internal void @delete_reg_equiv(i32 %reg) #0 {
entry:
  %reg.addr = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %q = alloca i32, align 4
  %p = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  %0 = load i32, i32* %reg.addr, align 4
  %1 = load i32, i32* @cached_regno, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %3 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %reg.addr, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %3, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %5 = load i32, i32* %reg_qty, align 4
  store i32 %5, i32* %q, align 4
  %6 = load i32, i32* %q, align 4
  %7 = load i32, i32* %reg.addr, align 4
  %cmp1 = icmp eq i32 %6, %7
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br label %return

if.end:                                           ; preds = %cond.end
  %8 = load i32, i32* %q, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %9, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8
  %10 = load i32, i32* %reg.addr, align 4
  %idxprom2 = zext i32 %10 to i64
  %11 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx3 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %11, i64 %idxprom2
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx3, i32 0, i32 1
  %12 = load i32, i32* %prev, align 4
  store i32 %12, i32* %p, align 4
  %13 = load i32, i32* %reg.addr, align 4
  %idxprom4 = zext i32 %13 to i64
  %14 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx5 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %14, i64 %idxprom4
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx5, i32 0, i32 0
  %15 = load i32, i32* %next, align 4
  store i32 %15, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %cmp6 = icmp ne i32 %16, -1
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end
  %17 = load i32, i32* %p, align 4
  %18 = load i32, i32* %n, align 4
  %idxprom8 = sext i32 %18 to i64
  %19 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx9 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %19, i64 %idxprom8
  %prev10 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx9, i32 0, i32 1
  store i32 %17, i32* %prev10, align 4
  br label %if.end.11

if.else:                                          ; preds = %if.end
  %20 = load i32, i32* %p, align 4
  %21 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %21, i32 0, i32 5
  store i32 %20, i32* %last_reg, align 4
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.7
  %22 = load i32, i32* %p, align 4
  %cmp12 = icmp ne i32 %22, -1
  br i1 %cmp12, label %if.then.13, label %if.else.17

if.then.13:                                       ; preds = %if.end.11
  %23 = load i32, i32* %n, align 4
  %24 = load i32, i32* %p, align 4
  %idxprom14 = sext i32 %24 to i64
  %25 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx15 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %25, i64 %idxprom14
  %next16 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx15, i32 0, i32 0
  store i32 %23, i32* %next16, align 4
  br label %if.end.18

if.else.17:                                       ; preds = %if.end.11
  %26 = load i32, i32* %n, align 4
  %27 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %27, i32 0, i32 4
  store i32 %26, i32* %first_reg, align 4
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.17, %if.then.13
  %28 = load i32, i32* %reg.addr, align 4
  %29 = load i32, i32* %reg.addr, align 4
  %30 = load i32, i32* @cached_regno, align 4
  %cmp19 = icmp eq i32 %29, %30
  br i1 %cmp19, label %land.lhs.true.20, label %cond.false.23

land.lhs.true.20:                                 ; preds = %if.end.18
  %31 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool21 = icmp ne %struct.cse_reg_info* %31, null
  br i1 %tobool21, label %cond.true.22, label %cond.false.23

cond.true.22:                                     ; preds = %land.lhs.true.20
  %32 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.25

cond.false.23:                                    ; preds = %land.lhs.true.20, %if.end.18
  %33 = load i32, i32* %reg.addr, align 4
  %call24 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %33)
  br label %cond.end.25

cond.end.25:                                      ; preds = %cond.false.23, %cond.true.22
  %cond26 = phi %struct.cse_reg_info* [ %32, %cond.true.22 ], [ %call24, %cond.false.23 ]
  %reg_qty27 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond26, i32 0, i32 3
  store i32 %28, i32* %reg_qty27, align 4
  br label %return

return:                                           ; preds = %cond.end.25, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.table_elt* @lookup_for_remove(%struct.rtx_def* %x, i32 %hash, i32 %mode) #0 {
entry:
  %retval = alloca %struct.table_elt*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %hash, i32* %hash.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  store i32 %3, i32* %regno, align 4
  %4 = load i32, i32* %hash.addr, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx1 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %5 = load %struct.table_elt*, %struct.table_elt** %arrayidx1, align 8
  store %struct.table_elt* %5, %struct.table_elt** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %6, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load2 = load i32, i32* %9, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 61
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp5 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %10, i32 0, i32 0
  %11 = load %struct.rtx_def*, %struct.rtx_def** %exp5, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtuint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %12 = load i32, i32* %rtuint8, align 4
  %13 = load i32, i32* %regno, align 4
  %cmp9 = icmp eq i32 %12, %13
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %land.lhs.true
  %14 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  store %struct.table_elt* %14, %struct.table_elt** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %15 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %15, i32 0, i32 2
  %16 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %16, %struct.table_elt** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.28

if.else:                                          ; preds = %entry
  %17 = load i32, i32* %hash.addr, align 4
  %idxprom11 = zext i32 %17 to i64
  %arrayidx12 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom11
  %18 = load %struct.table_elt*, %struct.table_elt** %arrayidx12, align 8
  store %struct.table_elt* %18, %struct.table_elt** %p, align 8
  br label %for.cond.13

for.cond.13:                                      ; preds = %for.inc.25, %if.else
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool14 = icmp ne %struct.table_elt* %19, null
  br i1 %tobool14, label %for.body.15, label %for.end.27

for.body.15:                                      ; preds = %for.cond.13
  %20 = load i32, i32* %mode.addr, align 4
  %21 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %mode16 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %21, i32 0, i32 10
  %22 = load i32, i32* %mode16, align 4
  %cmp17 = icmp eq i32 %20, %22
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.24

land.lhs.true.18:                                 ; preds = %for.body.15
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %24 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp19 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %24, i32 0, i32 0
  %25 = load %struct.rtx_def*, %struct.rtx_def** %exp19, align 8
  %cmp20 = icmp eq %struct.rtx_def* %23, %25
  br i1 %cmp20, label %if.then.23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.18
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %27 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp21 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 0
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp21, align 8
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %26, %struct.rtx_def* %28, i32 0, i32 0)
  %tobool22 = icmp ne i32 %call, 0
  br i1 %tobool22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %lor.lhs.false, %land.lhs.true.18
  %29 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  store %struct.table_elt* %29, %struct.table_elt** %retval
  br label %return

if.end.24:                                        ; preds = %lor.lhs.false, %for.body.15
  br label %for.inc.25

for.inc.25:                                       ; preds = %if.end.24
  %30 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash26 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %30, i32 0, i32 2
  %31 = load %struct.table_elt*, %struct.table_elt** %next_same_hash26, align 8
  store %struct.table_elt* %31, %struct.table_elt** %p, align 8
  br label %for.cond.13

for.end.27:                                       ; preds = %for.cond.13
  br label %if.end.28

if.end.28:                                        ; preds = %for.end.27, %for.end
  store %struct.table_elt* null, %struct.table_elt** %retval
  br label %return

return:                                           ; preds = %if.end.28, %if.then.23, %if.then.10
  %32 = load %struct.table_elt*, %struct.table_elt** %retval
  ret %struct.table_elt* %32
}

declare %struct.rtx_def* @canon_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @check_dependence(%struct.rtx_def** %x, i8* %data) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.check_dependence_data*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.check_dependence_data*
  store %struct.check_dependence_data* %1, %struct.check_dependence_data** %d, align 8
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %tobool = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.check_dependence_data*, %struct.check_dependence_data** %d, align 8
  %exp = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %7, i32 0, i32 1
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %9 = load %struct.check_dependence_data*, %struct.check_dependence_data** %d, align 8
  %mode = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %9, i32 0, i32 0
  %10 = load i32, i32* %mode, align 4
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8
  %call = call i32 @true_dependence(%struct.rtx_def* %8, i32 %10, %struct.rtx_def* %12, i32 (%struct.rtx_def*, i32)* @cse_rtx_varies_p)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @canon_hash_string(i8* %ps) #5 {
entry:
  %ps.addr = alloca i8*, align 8
  %hash = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %ps, i8** %ps.addr, align 8
  store i32 0, i32* %hash, align 4
  %0 = load i8*, i8** %ps.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %p, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %2 = load i8*, i8** %p, align 8
  %3 = load i8, i8* %2, align 1
  %tobool1 = icmp ne i8 %3, 0
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %5 = load i8, i8* %4, align 1
  %conv = zext i8 %5 to i32
  %6 = load i32, i32* %hash, align 4
  %add = add i32 %6, %conv
  store i32 %add, i32* %hash, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %7 = load i32, i32* %hash, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @exp_equiv_p(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %validate, i32 %equal_values) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %validate.addr = alloca i32, align 4
  %equal_values.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %y_q = alloca i32, align 4
  %y_ent = alloca %struct.qty_table_elem*, align 8
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i347 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  store i32 %validate, i32* %validate.addr, align 4
  store i32 %equal_values, i32* %equal_values.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, %1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %validate.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp1 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp2 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp4 = icmp eq %struct.rtx_def* %5, %6
  %conv = zext i1 %cmp4 to i32
  store i32 %conv, i32* %retval
  br label %return

if.end.5:                                         ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load = load i32, i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %9 = load i32, i32* %code, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load6 = load i32, i32* %11, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp ne i32 %9, %bf.clear7
  br i1 %cmp8, label %if.then.10, label %if.end.230

if.then.10:                                       ; preds = %if.end.5
  %12 = load i32, i32* %equal_values.addr, align 4
  %tobool11 = icmp ne i32 %12, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.then.10
  store i32 0, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.then.10
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load14 = load i32, i32* %14, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 67
  br i1 %cmp16, label %land.lhs.true.53, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %if.end.13
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load19 = load i32, i32* %16, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 68
  br i1 %cmp21, label %land.lhs.true.53, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %lor.lhs.false.18
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load24 = load i32, i32* %18, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 54
  br i1 %cmp26, label %land.lhs.true.53, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %lor.lhs.false.23
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load29 = load i32, i32* %20, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 55
  br i1 %cmp31, label %land.lhs.true.53, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false.28
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load34 = load i32, i32* %22, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 58
  br i1 %cmp36, label %land.lhs.true.53, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.33
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load39 = load i32, i32* %24, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 134
  br i1 %cmp41, label %land.lhs.true.53, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %lor.lhs.false.38
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load44 = load i32, i32* %26, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 56
  br i1 %cmp46, label %land.lhs.true.53, label %lor.lhs.false.48

lor.lhs.false.48:                                 ; preds = %lor.lhs.false.43
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load49 = load i32, i32* %28, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp eq i32 %bf.clear50, 140
  br i1 %cmp51, label %land.lhs.true.53, label %if.end.133

land.lhs.true.53:                                 ; preds = %lor.lhs.false.48, %lor.lhs.false.43, %lor.lhs.false.38, %lor.lhs.false.33, %lor.lhs.false.28, %lor.lhs.false.23, %lor.lhs.false.18, %if.end.13
  %29 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load54 = load i32, i32* %30, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 61
  br i1 %cmp56, label %land.lhs.true.58, label %if.end.133

land.lhs.true.58:                                 ; preds = %land.lhs.true.53
  %31 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %32 = load i32, i32* %rtuint, align 4
  %33 = load i32, i32* @cached_regno, align 4
  %cmp59 = icmp eq i32 %32, %33
  br i1 %cmp59, label %land.lhs.true.61, label %cond.false

land.lhs.true.61:                                 ; preds = %land.lhs.true.58
  %34 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool62 = icmp ne %struct.cse_reg_info* %34, null
  br i1 %tobool62, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.61
  %35 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.61, %land.lhs.true.58
  %36 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i32 0, i64 0
  %rtuint65 = bitcast %union.rtunion_def* %arrayidx64 to i32*
  %37 = load i32, i32* %rtuint65, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %37)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %35, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %38 = load i32, i32* %reg_qty, align 4
  %39 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i32 0, i64 0
  %rtuint68 = bitcast %union.rtunion_def* %arrayidx67 to i32*
  %40 = load i32, i32* %rtuint68, align 4
  %cmp69 = icmp ne i32 %38, %40
  br i1 %cmp69, label %if.then.71, label %if.end.133

if.then.71:                                       ; preds = %cond.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i32 0, i64 0
  %rtuint74 = bitcast %union.rtunion_def* %arrayidx73 to i32*
  %42 = load i32, i32* %rtuint74, align 4
  %43 = load i32, i32* @cached_regno, align 4
  %cmp75 = icmp eq i32 %42, %43
  br i1 %cmp75, label %land.lhs.true.77, label %cond.false.80

land.lhs.true.77:                                 ; preds = %if.then.71
  %44 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool78 = icmp ne %struct.cse_reg_info* %44, null
  br i1 %tobool78, label %cond.true.79, label %cond.false.80

cond.true.79:                                     ; preds = %land.lhs.true.77
  %45 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.85

cond.false.80:                                    ; preds = %land.lhs.true.77, %if.then.71
  %46 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i32 0, i64 0
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %47 = load i32, i32* %rtuint83, align 4
  %call84 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %47)
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.80, %cond.true.79
  %cond86 = phi %struct.cse_reg_info* [ %45, %cond.true.79 ], [ %call84, %cond.false.80 ]
  %reg_qty87 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond86, i32 0, i32 3
  %48 = load i32, i32* %reg_qty87, align 4
  store i32 %48, i32* %y_q, align 4
  %49 = load i32, i32* %y_q, align 4
  %idxprom = sext i32 %49 to i64
  %50 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx88 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %50, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx88, %struct.qty_table_elem** %y_ent, align 8
  %51 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load89 = load i32, i32* %52, align 8
  %bf.lshr = lshr i32 %bf.load89, 16
  %bf.clear90 = and i32 %bf.lshr, 255
  %53 = load %struct.qty_table_elem*, %struct.qty_table_elem** %y_ent, align 8
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %53, i32 0, i32 6
  %54 = load i32, i32* %mode, align 4
  %cmp91 = icmp eq i32 %bf.clear90, %54
  br i1 %cmp91, label %land.lhs.true.93, label %if.end.132

land.lhs.true.93:                                 ; preds = %cond.end.85
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = load %struct.qty_table_elem*, %struct.qty_table_elem** %y_ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %56, i32 0, i32 0
  %57 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %call94 = call i32 @rtx_equal_p(%struct.rtx_def* %55, %struct.rtx_def* %57)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %land.lhs.true.96, label %if.end.132

land.lhs.true.96:                                 ; preds = %land.lhs.true.93
  %58 = load i32, i32* %validate.addr, align 4
  %tobool97 = icmp ne i32 %58, 0
  br i1 %tobool97, label %lor.lhs.false.98, label %if.then.131

lor.lhs.false.98:                                 ; preds = %land.lhs.true.96
  %59 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtuint101 = bitcast %union.rtunion_def* %arrayidx100 to i32*
  %60 = load i32, i32* %rtuint101, align 4
  %61 = load i32, i32* @cached_regno, align 4
  %cmp102 = icmp eq i32 %60, %61
  br i1 %cmp102, label %land.lhs.true.104, label %cond.false.107

land.lhs.true.104:                                ; preds = %lor.lhs.false.98
  %62 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool105 = icmp ne %struct.cse_reg_info* %62, null
  br i1 %tobool105, label %cond.true.106, label %cond.false.107

cond.true.106:                                    ; preds = %land.lhs.true.104
  %63 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.112

cond.false.107:                                   ; preds = %land.lhs.true.104, %lor.lhs.false.98
  %64 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i32 0, i64 0
  %rtuint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %65 = load i32, i32* %rtuint110, align 4
  %call111 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %65)
  br label %cond.end.112

cond.end.112:                                     ; preds = %cond.false.107, %cond.true.106
  %cond113 = phi %struct.cse_reg_info* [ %63, %cond.true.106 ], [ %call111, %cond.false.107 ]
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond113, i32 0, i32 5
  %66 = load i32, i32* %reg_in_table, align 4
  %67 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i32 0, i64 0
  %rtuint116 = bitcast %union.rtunion_def* %arrayidx115 to i32*
  %68 = load i32, i32* %rtuint116, align 4
  %69 = load i32, i32* @cached_regno, align 4
  %cmp117 = icmp eq i32 %68, %69
  br i1 %cmp117, label %land.lhs.true.119, label %cond.false.122

land.lhs.true.119:                                ; preds = %cond.end.112
  %70 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool120 = icmp ne %struct.cse_reg_info* %70, null
  br i1 %tobool120, label %cond.true.121, label %cond.false.122

cond.true.121:                                    ; preds = %land.lhs.true.119
  %71 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.127

cond.false.122:                                   ; preds = %land.lhs.true.119, %cond.end.112
  %72 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 0
  %rtuint125 = bitcast %union.rtunion_def* %arrayidx124 to i32*
  %73 = load i32, i32* %rtuint125, align 4
  %call126 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %73)
  br label %cond.end.127

cond.end.127:                                     ; preds = %cond.false.122, %cond.true.121
  %cond128 = phi %struct.cse_reg_info* [ %71, %cond.true.121 ], [ %call126, %cond.false.122 ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond128, i32 0, i32 4
  %74 = load i32, i32* %reg_tick, align 4
  %cmp129 = icmp eq i32 %66, %74
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %cond.end.127, %land.lhs.true.96
  store i32 1, i32* %retval
  br label %return

if.end.132:                                       ; preds = %cond.end.127, %land.lhs.true.93, %cond.end.85
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %cond.end, %land.lhs.true.53, %lor.lhs.false.48
  %75 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %76 = bitcast %struct.rtx_def* %75 to i32*
  %bf.load134 = load i32, i32* %76, align 8
  %bf.clear135 = and i32 %bf.load134, 65535
  %cmp136 = icmp eq i32 %bf.clear135, 67
  br i1 %cmp136, label %land.lhs.true.173, label %lor.lhs.false.138

lor.lhs.false.138:                                ; preds = %if.end.133
  %77 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load139 = load i32, i32* %78, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp eq i32 %bf.clear140, 68
  br i1 %cmp141, label %land.lhs.true.173, label %lor.lhs.false.143

lor.lhs.false.143:                                ; preds = %lor.lhs.false.138
  %79 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load144 = load i32, i32* %80, align 8
  %bf.clear145 = and i32 %bf.load144, 65535
  %cmp146 = icmp eq i32 %bf.clear145, 54
  br i1 %cmp146, label %land.lhs.true.173, label %lor.lhs.false.148

lor.lhs.false.148:                                ; preds = %lor.lhs.false.143
  %81 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load149 = load i32, i32* %82, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 55
  br i1 %cmp151, label %land.lhs.true.173, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %lor.lhs.false.148
  %83 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load154 = load i32, i32* %84, align 8
  %bf.clear155 = and i32 %bf.load154, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 58
  br i1 %cmp156, label %land.lhs.true.173, label %lor.lhs.false.158

lor.lhs.false.158:                                ; preds = %lor.lhs.false.153
  %85 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load159 = load i32, i32* %86, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 134
  br i1 %cmp161, label %land.lhs.true.173, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %lor.lhs.false.158
  %87 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %88 = bitcast %struct.rtx_def* %87 to i32*
  %bf.load164 = load i32, i32* %88, align 8
  %bf.clear165 = and i32 %bf.load164, 65535
  %cmp166 = icmp eq i32 %bf.clear165, 56
  br i1 %cmp166, label %land.lhs.true.173, label %lor.lhs.false.168

lor.lhs.false.168:                                ; preds = %lor.lhs.false.163
  %89 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load169 = load i32, i32* %90, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 140
  br i1 %cmp171, label %land.lhs.true.173, label %if.end.229

land.lhs.true.173:                                ; preds = %lor.lhs.false.168, %lor.lhs.false.163, %lor.lhs.false.158, %lor.lhs.false.153, %lor.lhs.false.148, %lor.lhs.false.143, %lor.lhs.false.138, %if.end.133
  %91 = load i32, i32* %code, align 4
  %cmp174 = icmp eq i32 %91, 61
  br i1 %cmp174, label %land.lhs.true.176, label %if.end.229

land.lhs.true.176:                                ; preds = %land.lhs.true.173
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtuint179 = bitcast %union.rtunion_def* %arrayidx178 to i32*
  %93 = load i32, i32* %rtuint179, align 4
  %94 = load i32, i32* @cached_regno, align 4
  %cmp180 = icmp eq i32 %93, %94
  br i1 %cmp180, label %land.lhs.true.182, label %cond.false.185

land.lhs.true.182:                                ; preds = %land.lhs.true.176
  %95 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool183 = icmp ne %struct.cse_reg_info* %95, null
  br i1 %tobool183, label %cond.true.184, label %cond.false.185

cond.true.184:                                    ; preds = %land.lhs.true.182
  %96 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.190

cond.false.185:                                   ; preds = %land.lhs.true.182, %land.lhs.true.176
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i32 0, i64 0
  %rtuint188 = bitcast %union.rtunion_def* %arrayidx187 to i32*
  %98 = load i32, i32* %rtuint188, align 4
  %call189 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %98)
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.185, %cond.true.184
  %cond191 = phi %struct.cse_reg_info* [ %96, %cond.true.184 ], [ %call189, %cond.false.185 ]
  %reg_qty192 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond191, i32 0, i32 3
  %99 = load i32, i32* %reg_qty192, align 4
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtuint195 = bitcast %union.rtunion_def* %arrayidx194 to i32*
  %101 = load i32, i32* %rtuint195, align 4
  %cmp196 = icmp ne i32 %99, %101
  br i1 %cmp196, label %if.then.198, label %if.end.229

if.then.198:                                      ; preds = %cond.end.190
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtuint201 = bitcast %union.rtunion_def* %arrayidx200 to i32*
  %103 = load i32, i32* %rtuint201, align 4
  %104 = load i32, i32* @cached_regno, align 4
  %cmp202 = icmp eq i32 %103, %104
  br i1 %cmp202, label %land.lhs.true.204, label %cond.false.207

land.lhs.true.204:                                ; preds = %if.then.198
  %105 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool205 = icmp ne %struct.cse_reg_info* %105, null
  br i1 %tobool205, label %cond.true.206, label %cond.false.207

cond.true.206:                                    ; preds = %land.lhs.true.204
  %106 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.212

cond.false.207:                                   ; preds = %land.lhs.true.204, %if.then.198
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtuint210 = bitcast %union.rtunion_def* %arrayidx209 to i32*
  %108 = load i32, i32* %rtuint210, align 4
  %call211 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %108)
  br label %cond.end.212

cond.end.212:                                     ; preds = %cond.false.207, %cond.true.206
  %cond213 = phi %struct.cse_reg_info* [ %106, %cond.true.206 ], [ %call211, %cond.false.207 ]
  %reg_qty214 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond213, i32 0, i32 3
  %109 = load i32, i32* %reg_qty214, align 4
  store i32 %109, i32* %x_q, align 4
  %110 = load i32, i32* %x_q, align 4
  %idxprom215 = sext i32 %110 to i64
  %111 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx216 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %111, i64 %idxprom215
  store %struct.qty_table_elem* %arrayidx216, %struct.qty_table_elem** %x_ent, align 8
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load217 = load i32, i32* %113, align 8
  %bf.lshr218 = lshr i32 %bf.load217, 16
  %bf.clear219 = and i32 %bf.lshr218, 255
  %114 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %mode220 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %114, i32 0, i32 6
  %115 = load i32, i32* %mode220, align 4
  %cmp221 = icmp eq i32 %bf.clear219, %115
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.228

land.lhs.true.223:                                ; preds = %cond.end.212
  %116 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %117 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_rtx224 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %117, i32 0, i32 0
  %118 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx224, align 8
  %call225 = call i32 @rtx_equal_p(%struct.rtx_def* %116, %struct.rtx_def* %118)
  %tobool226 = icmp ne i32 %call225, 0
  br i1 %tobool226, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %land.lhs.true.223
  store i32 1, i32* %retval
  br label %return

if.end.228:                                       ; preds = %land.lhs.true.223, %cond.end.212
  br label %if.end.229

if.end.229:                                       ; preds = %if.end.228, %cond.end.190, %land.lhs.true.173, %lor.lhs.false.168
  store i32 0, i32* %retval
  br label %return

if.end.230:                                       ; preds = %if.end.5
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %120 = bitcast %struct.rtx_def* %119 to i32*
  %bf.load231 = load i32, i32* %120, align 8
  %bf.lshr232 = lshr i32 %bf.load231, 16
  %bf.clear233 = and i32 %bf.lshr232, 255
  %121 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %122 = bitcast %struct.rtx_def* %121 to i32*
  %bf.load234 = load i32, i32* %122, align 8
  %bf.lshr235 = lshr i32 %bf.load234, 16
  %bf.clear236 = and i32 %bf.lshr235, 255
  %cmp237 = icmp ne i32 %bf.clear233, %bf.clear236
  br i1 %cmp237, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %if.end.230
  store i32 0, i32* %retval
  br label %return

if.end.240:                                       ; preds = %if.end.230
  %123 = load i32, i32* %code, align 4
  switch i32 %123, label %sw.default [
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 54, label %sw.bb
    i32 67, label %sw.bb.243
    i32 68, label %sw.bb.251
    i32 61, label %sw.bb.259
    i32 75, label %sw.bb.407
    i32 78, label %sw.bb.407
    i32 83, label %sw.bb.407
    i32 84, label %sw.bb.407
    i32 85, label %sw.bb.407
    i32 102, label %sw.bb.407
    i32 103, label %sw.bb.407
    i32 41, label %sw.bb.443
  ]

sw.bb:                                            ; preds = %if.end.240, %if.end.240, %if.end.240
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %cmp241 = icmp eq %struct.rtx_def* %124, %125
  %conv242 = zext i1 %cmp241 to i32
  store i32 %conv242, i32* %retval
  br label %return

sw.bb.243:                                        ; preds = %if.end.240
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld244, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx245 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx248, align 8
  %cmp249 = icmp eq %struct.rtx_def* %127, %129
  %conv250 = zext i1 %cmp249 to i32
  store i32 %conv250, i32* %retval
  br label %return

sw.bb.251:                                        ; preds = %if.end.240
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx253 to i8**
  %131 = load i8*, i8** %rtstr, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtstr256 = bitcast %union.rtunion_def* %arrayidx255 to i8**
  %133 = load i8*, i8** %rtstr256, align 8
  %cmp257 = icmp eq i8* %131, %133
  %conv258 = zext i1 %cmp257 to i32
  store i32 %conv258, i32* %retval
  br label %return

sw.bb.259:                                        ; preds = %if.end.240
  %134 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i32 0, i64 0
  %rtuint262 = bitcast %union.rtunion_def* %arrayidx261 to i32*
  %135 = load i32, i32* %rtuint262, align 4
  store i32 %135, i32* %regno, align 4
  %136 = load i32, i32* %regno, align 4
  %137 = load i32, i32* %regno, align 4
  %cmp263 = icmp uge i32 %137, 53
  br i1 %cmp263, label %cond.true.265, label %cond.false.266

cond.true.265:                                    ; preds = %sw.bb.259
  br label %cond.end.344

cond.false.266:                                   ; preds = %sw.bb.259
  %138 = load i32, i32* %regno, align 4
  %cmp267 = icmp uge i32 %138, 8
  br i1 %cmp267, label %land.lhs.true.269, label %lor.lhs.false.272

land.lhs.true.269:                                ; preds = %cond.false.266
  %139 = load i32, i32* %regno, align 4
  %cmp270 = icmp ule i32 %139, 15
  br i1 %cmp270, label %cond.true.290, label %lor.lhs.false.272

lor.lhs.false.272:                                ; preds = %land.lhs.true.269, %cond.false.266
  %140 = load i32, i32* %regno, align 4
  %cmp273 = icmp uge i32 %140, 21
  br i1 %cmp273, label %land.lhs.true.275, label %lor.lhs.false.278

land.lhs.true.275:                                ; preds = %lor.lhs.false.272
  %141 = load i32, i32* %regno, align 4
  %cmp276 = icmp ule i32 %141, 28
  br i1 %cmp276, label %cond.true.290, label %lor.lhs.false.278

lor.lhs.false.278:                                ; preds = %land.lhs.true.275, %lor.lhs.false.272
  %142 = load i32, i32* %regno, align 4
  %cmp279 = icmp uge i32 %142, 45
  br i1 %cmp279, label %land.lhs.true.281, label %lor.lhs.false.284

land.lhs.true.281:                                ; preds = %lor.lhs.false.278
  %143 = load i32, i32* %regno, align 4
  %cmp282 = icmp ule i32 %143, 52
  br i1 %cmp282, label %cond.true.290, label %lor.lhs.false.284

lor.lhs.false.284:                                ; preds = %land.lhs.true.281, %lor.lhs.false.278
  %144 = load i32, i32* %regno, align 4
  %cmp285 = icmp uge i32 %144, 29
  br i1 %cmp285, label %land.lhs.true.287, label %cond.false.306

land.lhs.true.287:                                ; preds = %lor.lhs.false.284
  %145 = load i32, i32* %regno, align 4
  %cmp288 = icmp ule i32 %145, 36
  br i1 %cmp288, label %cond.true.290, label %cond.false.306

cond.true.290:                                    ; preds = %land.lhs.true.287, %land.lhs.true.281, %land.lhs.true.275, %land.lhs.true.269
  %146 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %147 = bitcast %struct.rtx_def* %146 to i32*
  %bf.load291 = load i32, i32* %147, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 16
  %bf.clear293 = and i32 %bf.lshr292, 255
  %idxprom294 = sext i32 %bf.clear293 to i64
  %arrayidx295 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom294
  %148 = load i32, i32* %arrayidx295, align 4
  %cmp296 = icmp eq i32 %148, 5
  br i1 %cmp296, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.290
  %149 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load298 = load i32, i32* %150, align 8
  %bf.lshr299 = lshr i32 %bf.load298, 16
  %bf.clear300 = and i32 %bf.lshr299, 255
  %idxprom301 = sext i32 %bf.clear300 to i64
  %arrayidx302 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom301
  %151 = load i32, i32* %arrayidx302, align 4
  %cmp303 = icmp eq i32 %151, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.290
  %152 = phi i1 [ true, %cond.true.290 ], [ %cmp303, %lor.rhs ]
  %cond305 = select i1 %152, i32 2, i32 1
  br label %cond.end.342

cond.false.306:                                   ; preds = %land.lhs.true.287, %lor.lhs.false.284
  %153 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %154 = bitcast %struct.rtx_def* %153 to i32*
  %bf.load307 = load i32, i32* %154, align 8
  %bf.lshr308 = lshr i32 %bf.load307, 16
  %bf.clear309 = and i32 %bf.lshr308, 255
  %cmp310 = icmp eq i32 %bf.clear309, 18
  br i1 %cmp310, label %cond.true.312, label %cond.false.315

cond.true.312:                                    ; preds = %cond.false.306
  %155 = load i32, i32* @target_flags, align 4
  %and = and i32 %155, 33554432
  %tobool313 = icmp ne i32 %and, 0
  %cond314 = select i1 %tobool313, i32 2, i32 3
  br label %cond.end.340

cond.false.315:                                   ; preds = %cond.false.306
  %156 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load316 = load i32, i32* %157, align 8
  %bf.lshr317 = lshr i32 %bf.load316, 16
  %bf.clear318 = and i32 %bf.lshr317, 255
  %cmp319 = icmp eq i32 %bf.clear318, 24
  br i1 %cmp319, label %cond.true.321, label %cond.false.325

cond.true.321:                                    ; preds = %cond.false.315
  %158 = load i32, i32* @target_flags, align 4
  %and322 = and i32 %158, 33554432
  %tobool323 = icmp ne i32 %and322, 0
  %cond324 = select i1 %tobool323, i32 4, i32 6
  br label %cond.end.338

cond.false.325:                                   ; preds = %cond.false.315
  %159 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %160 = bitcast %struct.rtx_def* %159 to i32*
  %bf.load326 = load i32, i32* %160, align 8
  %bf.lshr327 = lshr i32 %bf.load326, 16
  %bf.clear328 = and i32 %bf.lshr327, 255
  %idxprom329 = sext i32 %bf.clear328 to i64
  %arrayidx330 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom329
  %161 = load i8, i8* %arrayidx330, align 1
  %conv331 = zext i8 %161 to i32
  %162 = load i32, i32* @target_flags, align 4
  %and332 = and i32 %162, 33554432
  %tobool333 = icmp ne i32 %and332, 0
  %cond334 = select i1 %tobool333, i32 8, i32 4
  %add = add nsw i32 %conv331, %cond334
  %sub = sub nsw i32 %add, 1
  %163 = load i32, i32* @target_flags, align 4
  %and335 = and i32 %163, 33554432
  %tobool336 = icmp ne i32 %and335, 0
  %cond337 = select i1 %tobool336, i32 8, i32 4
  %div = sdiv i32 %sub, %cond337
  br label %cond.end.338

cond.end.338:                                     ; preds = %cond.false.325, %cond.true.321
  %cond339 = phi i32 [ %cond324, %cond.true.321 ], [ %div, %cond.false.325 ]
  br label %cond.end.340

cond.end.340:                                     ; preds = %cond.end.338, %cond.true.312
  %cond341 = phi i32 [ %cond314, %cond.true.312 ], [ %cond339, %cond.end.338 ]
  br label %cond.end.342

cond.end.342:                                     ; preds = %cond.end.340, %lor.end
  %cond343 = phi i32 [ %cond305, %lor.end ], [ %cond341, %cond.end.340 ]
  br label %cond.end.344

cond.end.344:                                     ; preds = %cond.end.342, %cond.true.265
  %cond345 = phi i32 [ 1, %cond.true.265 ], [ %cond343, %cond.end.342 ]
  %add346 = add i32 %136, %cond345
  store i32 %add346, i32* %endregno, align 4
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i32 0, i64 0
  %rtuint350 = bitcast %union.rtunion_def* %arrayidx349 to i32*
  %165 = load i32, i32* %rtuint350, align 4
  %166 = load i32, i32* @cached_regno, align 4
  %cmp351 = icmp eq i32 %165, %166
  br i1 %cmp351, label %land.lhs.true.353, label %cond.false.356

land.lhs.true.353:                                ; preds = %cond.end.344
  %167 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool354 = icmp ne %struct.cse_reg_info* %167, null
  br i1 %tobool354, label %cond.true.355, label %cond.false.356

cond.true.355:                                    ; preds = %land.lhs.true.353
  %168 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.361

cond.false.356:                                   ; preds = %land.lhs.true.353, %cond.end.344
  %169 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i32 0, i64 0
  %rtuint359 = bitcast %union.rtunion_def* %arrayidx358 to i32*
  %170 = load i32, i32* %rtuint359, align 4
  %call360 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %170)
  br label %cond.end.361

cond.end.361:                                     ; preds = %cond.false.356, %cond.true.355
  %cond362 = phi %struct.cse_reg_info* [ %168, %cond.true.355 ], [ %call360, %cond.false.356 ]
  %reg_qty363 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond362, i32 0, i32 3
  %171 = load i32, i32* %reg_qty363, align 4
  %172 = load i32, i32* %regno, align 4
  %173 = load i32, i32* @cached_regno, align 4
  %cmp364 = icmp eq i32 %172, %173
  br i1 %cmp364, label %land.lhs.true.366, label %cond.false.369

land.lhs.true.366:                                ; preds = %cond.end.361
  %174 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool367 = icmp ne %struct.cse_reg_info* %174, null
  br i1 %tobool367, label %cond.true.368, label %cond.false.369

cond.true.368:                                    ; preds = %land.lhs.true.366
  %175 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.371

cond.false.369:                                   ; preds = %land.lhs.true.366, %cond.end.361
  %176 = load i32, i32* %regno, align 4
  %call370 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %176)
  br label %cond.end.371

cond.end.371:                                     ; preds = %cond.false.369, %cond.true.368
  %cond372 = phi %struct.cse_reg_info* [ %175, %cond.true.368 ], [ %call370, %cond.false.369 ]
  %reg_qty373 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond372, i32 0, i32 3
  %177 = load i32, i32* %reg_qty373, align 4
  %cmp374 = icmp ne i32 %171, %177
  br i1 %cmp374, label %if.then.376, label %if.end.377

if.then.376:                                      ; preds = %cond.end.371
  store i32 0, i32* %retval
  br label %return

if.end.377:                                       ; preds = %cond.end.371
  %178 = load i32, i32* %validate.addr, align 4
  %tobool378 = icmp ne i32 %178, 0
  br i1 %tobool378, label %if.end.380, label %if.then.379

if.then.379:                                      ; preds = %if.end.377
  store i32 1, i32* %retval
  br label %return

if.end.380:                                       ; preds = %if.end.377
  %179 = load i32, i32* %regno, align 4
  store i32 %179, i32* %i347, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.380
  %180 = load i32, i32* %i347, align 4
  %181 = load i32, i32* %endregno, align 4
  %cmp381 = icmp ult i32 %180, %181
  br i1 %cmp381, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %182 = load i32, i32* %i347, align 4
  %183 = load i32, i32* @cached_regno, align 4
  %cmp383 = icmp eq i32 %182, %183
  br i1 %cmp383, label %land.lhs.true.385, label %cond.false.388

land.lhs.true.385:                                ; preds = %for.body
  %184 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool386 = icmp ne %struct.cse_reg_info* %184, null
  br i1 %tobool386, label %cond.true.387, label %cond.false.388

cond.true.387:                                    ; preds = %land.lhs.true.385
  %185 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.390

cond.false.388:                                   ; preds = %land.lhs.true.385, %for.body
  %186 = load i32, i32* %i347, align 4
  %call389 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %186)
  br label %cond.end.390

cond.end.390:                                     ; preds = %cond.false.388, %cond.true.387
  %cond391 = phi %struct.cse_reg_info* [ %185, %cond.true.387 ], [ %call389, %cond.false.388 ]
  %reg_in_table392 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond391, i32 0, i32 5
  %187 = load i32, i32* %reg_in_table392, align 4
  %188 = load i32, i32* %i347, align 4
  %189 = load i32, i32* @cached_regno, align 4
  %cmp393 = icmp eq i32 %188, %189
  br i1 %cmp393, label %land.lhs.true.395, label %cond.false.398

land.lhs.true.395:                                ; preds = %cond.end.390
  %190 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool396 = icmp ne %struct.cse_reg_info* %190, null
  br i1 %tobool396, label %cond.true.397, label %cond.false.398

cond.true.397:                                    ; preds = %land.lhs.true.395
  %191 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.400

cond.false.398:                                   ; preds = %land.lhs.true.395, %cond.end.390
  %192 = load i32, i32* %i347, align 4
  %call399 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %192)
  br label %cond.end.400

cond.end.400:                                     ; preds = %cond.false.398, %cond.true.397
  %cond401 = phi %struct.cse_reg_info* [ %191, %cond.true.397 ], [ %call399, %cond.false.398 ]
  %reg_tick402 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond401, i32 0, i32 4
  %193 = load i32, i32* %reg_tick402, align 4
  %cmp403 = icmp ne i32 %187, %193
  br i1 %cmp403, label %if.then.405, label %if.end.406

if.then.405:                                      ; preds = %cond.end.400
  store i32 0, i32* %retval
  br label %return

if.end.406:                                       ; preds = %cond.end.400
  br label %for.inc

for.inc:                                          ; preds = %if.end.406
  %194 = load i32, i32* %i347, align 4
  %inc = add i32 %194, 1
  store i32 %inc, i32* %i347, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

sw.bb.407:                                        ; preds = %if.end.240, %if.end.240, %if.end.240, %if.end.240, %if.end.240, %if.end.240, %if.end.240
  %195 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld408, i32 0, i64 0
  %rtx410 = bitcast %union.rtunion_def* %arrayidx409 to %struct.rtx_def**
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rtx410, align 8
  %197 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1
  %arrayidx412 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld411, i32 0, i64 0
  %rtx413 = bitcast %union.rtunion_def* %arrayidx412 to %struct.rtx_def**
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rtx413, align 8
  %199 = load i32, i32* %validate.addr, align 4
  %200 = load i32, i32* %equal_values.addr, align 4
  %call414 = call i32 @exp_equiv_p(%struct.rtx_def* %196, %struct.rtx_def* %198, i32 %199, i32 %200)
  %tobool415 = icmp ne i32 %call414, 0
  br i1 %tobool415, label %land.lhs.true.416, label %lor.rhs.425

land.lhs.true.416:                                ; preds = %sw.bb.407
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld417 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1
  %arrayidx418 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld417, i32 0, i64 1
  %rtx419 = bitcast %union.rtunion_def* %arrayidx418 to %struct.rtx_def**
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rtx419, align 8
  %203 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1
  %arrayidx421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld420, i32 0, i64 1
  %rtx422 = bitcast %union.rtunion_def* %arrayidx421 to %struct.rtx_def**
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rtx422, align 8
  %205 = load i32, i32* %validate.addr, align 4
  %206 = load i32, i32* %equal_values.addr, align 4
  %call423 = call i32 @exp_equiv_p(%struct.rtx_def* %202, %struct.rtx_def* %204, i32 %205, i32 %206)
  %tobool424 = icmp ne i32 %call423, 0
  br i1 %tobool424, label %lor.end.442, label %lor.rhs.425

lor.rhs.425:                                      ; preds = %land.lhs.true.416, %sw.bb.407
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1
  %arrayidx427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld426, i32 0, i64 0
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rtx428, align 8
  %209 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i32 0, i64 1
  %rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rtx431, align 8
  %211 = load i32, i32* %validate.addr, align 4
  %212 = load i32, i32* %equal_values.addr, align 4
  %call432 = call i32 @exp_equiv_p(%struct.rtx_def* %208, %struct.rtx_def* %210, i32 %211, i32 %212)
  %tobool433 = icmp ne i32 %call432, 0
  br i1 %tobool433, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs.425
  %213 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i32 0, i64 1
  %rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rtx436, align 8
  %215 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1
  %arrayidx438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld437, i32 0, i64 0
  %rtx439 = bitcast %union.rtunion_def* %arrayidx438 to %struct.rtx_def**
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rtx439, align 8
  %217 = load i32, i32* %validate.addr, align 4
  %218 = load i32, i32* %equal_values.addr, align 4
  %call440 = call i32 @exp_equiv_p(%struct.rtx_def* %214, %struct.rtx_def* %216, i32 %217, i32 %218)
  %tobool441 = icmp ne i32 %call440, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs.425
  %219 = phi i1 [ false, %lor.rhs.425 ], [ %tobool441, %land.rhs ]
  br label %lor.end.442

lor.end.442:                                      ; preds = %land.end, %land.lhs.true.416
  %220 = phi i1 [ true, %land.lhs.true.416 ], [ %219, %land.end ]
  %lor.ext = zext i1 %220 to i32
  store i32 %lor.ext, i32* %retval
  br label %return

sw.bb.443:                                        ; preds = %if.end.240
  %221 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %222 = bitcast %struct.rtx_def* %221 to i32*
  %bf.load444 = load i32, i32* %222, align 8
  %bf.lshr445 = lshr i32 %bf.load444, 27
  %bf.clear446 = and i32 %bf.lshr445, 1
  %tobool447 = icmp ne i32 %bf.clear446, 0
  br i1 %tobool447, label %if.then.453, label %lor.lhs.false.448

lor.lhs.false.448:                                ; preds = %sw.bb.443
  %223 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load449 = load i32, i32* %224, align 8
  %bf.lshr450 = lshr i32 %bf.load449, 27
  %bf.clear451 = and i32 %bf.lshr450, 1
  %tobool452 = icmp ne i32 %bf.clear451, 0
  br i1 %tobool452, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %lor.lhs.false.448, %sw.bb.443
  store i32 0, i32* %retval
  br label %return

if.end.454:                                       ; preds = %lor.lhs.false.448
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %226 = bitcast %struct.rtx_def* %225 to i32*
  %bf.load455 = load i32, i32* %226, align 8
  %bf.lshr456 = lshr i32 %bf.load455, 16
  %bf.clear457 = and i32 %bf.lshr456, 255
  %227 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %228 = bitcast %struct.rtx_def* %227 to i32*
  %bf.load458 = load i32, i32* %228, align 8
  %bf.lshr459 = lshr i32 %bf.load458, 16
  %bf.clear460 = and i32 %bf.lshr459, 255
  %cmp461 = icmp ne i32 %bf.clear457, %bf.clear460
  br i1 %cmp461, label %if.then.498, label %lor.lhs.false.463

lor.lhs.false.463:                                ; preds = %if.end.454
  %229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i32 0, i64 0
  %rtstr466 = bitcast %union.rtunion_def* %arrayidx465 to i8**
  %230 = load i8*, i8** %rtstr466, align 8
  %231 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1
  %arrayidx468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld467, i32 0, i64 0
  %rtstr469 = bitcast %union.rtunion_def* %arrayidx468 to i8**
  %232 = load i8*, i8** %rtstr469, align 8
  %call470 = call i32 @strcmp(i8* %230, i8* %232) #8
  %tobool471 = icmp ne i32 %call470, 0
  br i1 %tobool471, label %if.then.498, label %lor.lhs.false.472

lor.lhs.false.472:                                ; preds = %lor.lhs.false.463
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld473 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %233, i32 0, i32 1
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i32 0, i64 1
  %rtstr475 = bitcast %union.rtunion_def* %arrayidx474 to i8**
  %234 = load i8*, i8** %rtstr475, align 8
  %235 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1
  %arrayidx477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld476, i32 0, i64 1
  %rtstr478 = bitcast %union.rtunion_def* %arrayidx477 to i8**
  %236 = load i8*, i8** %rtstr478, align 8
  %call479 = call i32 @strcmp(i8* %234, i8* %236) #8
  %tobool480 = icmp ne i32 %call479, 0
  br i1 %tobool480, label %if.then.498, label %lor.lhs.false.481

lor.lhs.false.481:                                ; preds = %lor.lhs.false.472
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1
  %arrayidx483 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld482, i32 0, i64 2
  %rtint = bitcast %union.rtunion_def* %arrayidx483 to i32*
  %238 = load i32, i32* %rtint, align 4
  %239 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i32 0, i64 2
  %rtint486 = bitcast %union.rtunion_def* %arrayidx485 to i32*
  %240 = load i32, i32* %rtint486, align 4
  %cmp487 = icmp ne i32 %238, %240
  br i1 %cmp487, label %if.then.498, label %lor.lhs.false.489

lor.lhs.false.489:                                ; preds = %lor.lhs.false.481
  %241 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld490 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1
  %arrayidx491 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld490, i32 0, i64 3
  %rtvec = bitcast %union.rtunion_def* %arrayidx491 to %struct.rtvec_def**
  %242 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %242, i32 0, i32 0
  %243 = load i32, i32* %num_elem, align 4
  %244 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1
  %arrayidx493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld492, i32 0, i64 3
  %rtvec494 = bitcast %union.rtunion_def* %arrayidx493 to %struct.rtvec_def**
  %245 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec494, align 8
  %num_elem495 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %245, i32 0, i32 0
  %246 = load i32, i32* %num_elem495, align 4
  %cmp496 = icmp ne i32 %243, %246
  br i1 %cmp496, label %if.then.498, label %if.end.499

if.then.498:                                      ; preds = %lor.lhs.false.489, %lor.lhs.false.481, %lor.lhs.false.472, %lor.lhs.false.463, %if.end.454
  store i32 0, i32* %retval
  br label %return

if.end.499:                                       ; preds = %lor.lhs.false.489
  %247 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1
  %arrayidx501 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld500, i32 0, i64 3
  %rtvec502 = bitcast %union.rtunion_def* %arrayidx501 to %struct.rtvec_def**
  %248 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec502, align 8
  %num_elem503 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %248, i32 0, i32 0
  %249 = load i32, i32* %num_elem503, align 4
  %tobool504 = icmp ne i32 %249, 0
  br i1 %tobool504, label %if.then.505, label %if.end.553

if.then.505:                                      ; preds = %if.end.499
  %250 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx507 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld506, i32 0, i64 3
  %rtvec508 = bitcast %union.rtunion_def* %arrayidx507 to %struct.rtvec_def**
  %251 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec508, align 8
  %num_elem509 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %251, i32 0, i32 0
  %252 = load i32, i32* %num_elem509, align 4
  %sub510 = sub nsw i32 %252, 1
  store i32 %sub510, i32* %i, align 4
  br label %for.cond.511

for.cond.511:                                     ; preds = %for.inc.551, %if.then.505
  %253 = load i32, i32* %i, align 4
  %cmp512 = icmp sge i32 %253, 0
  br i1 %cmp512, label %for.body.514, label %for.end.552

for.body.514:                                     ; preds = %for.cond.511
  %254 = load i32, i32* %i, align 4
  %idxprom515 = sext i32 %254 to i64
  %255 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %255, i32 0, i32 1
  %arrayidx517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld516, i32 0, i64 3
  %rtvec518 = bitcast %union.rtunion_def* %arrayidx517 to %struct.rtvec_def**
  %256 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec518, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %256, i32 0, i32 1
  %arrayidx519 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom515
  %257 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx519, align 8
  %258 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %258 to i64
  %259 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx522 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld521, i32 0, i64 3
  %rtvec523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtvec_def**
  %260 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec523, align 8
  %elem524 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %260, i32 0, i32 1
  %arrayidx525 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem524, i32 0, i64 %idxprom520
  %261 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx525, align 8
  %262 = load i32, i32* %validate.addr, align 4
  %263 = load i32, i32* %equal_values.addr, align 4
  %call526 = call i32 @exp_equiv_p(%struct.rtx_def* %257, %struct.rtx_def* %261, i32 %262, i32 %263)
  %tobool527 = icmp ne i32 %call526, 0
  br i1 %tobool527, label %lor.lhs.false.528, label %if.then.549

lor.lhs.false.528:                                ; preds = %for.body.514
  %264 = load i32, i32* %i, align 4
  %idxprom529 = sext i32 %264 to i64
  %265 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %265, i32 0, i32 1
  %arrayidx531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld530, i32 0, i64 4
  %rtvec532 = bitcast %union.rtunion_def* %arrayidx531 to %struct.rtvec_def**
  %266 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec532, align 8
  %elem533 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %266, i32 0, i32 1
  %arrayidx534 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem533, i32 0, i64 %idxprom529
  %267 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx534, align 8
  %fld535 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1
  %arrayidx536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld535, i32 0, i64 0
  %rtstr537 = bitcast %union.rtunion_def* %arrayidx536 to i8**
  %268 = load i8*, i8** %rtstr537, align 8
  %269 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %269 to i64
  %270 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld539 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %270, i32 0, i32 1
  %arrayidx540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld539, i32 0, i64 4
  %rtvec541 = bitcast %union.rtunion_def* %arrayidx540 to %struct.rtvec_def**
  %271 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec541, align 8
  %elem542 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %271, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem542, i32 0, i64 %idxprom538
  %272 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx543, align 8
  %fld544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx545 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld544, i32 0, i64 0
  %rtstr546 = bitcast %union.rtunion_def* %arrayidx545 to i8**
  %273 = load i8*, i8** %rtstr546, align 8
  %call547 = call i32 @strcmp(i8* %268, i8* %273) #8
  %tobool548 = icmp ne i32 %call547, 0
  br i1 %tobool548, label %if.then.549, label %if.end.550

if.then.549:                                      ; preds = %lor.lhs.false.528, %for.body.514
  store i32 0, i32* %retval
  br label %return

if.end.550:                                       ; preds = %lor.lhs.false.528
  br label %for.inc.551

for.inc.551:                                      ; preds = %if.end.550
  %274 = load i32, i32* %i, align 4
  %dec = add nsw i32 %274, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.511

for.end.552:                                      ; preds = %for.cond.511
  br label %if.end.553

if.end.553:                                       ; preds = %for.end.552, %if.end.499
  store i32 1, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end.240
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %275 = load i32, i32* %code, align 4
  %idxprom554 = sext i32 %275 to i64
  %arrayidx555 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom554
  %276 = load i8*, i8** %arrayidx555, align 8
  store i8* %276, i8** %fmt, align 8
  %277 = load i32, i32* %code, align 4
  %idxprom556 = sext i32 %277 to i64
  %arrayidx557 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom556
  %278 = load i8, i8* %arrayidx557, align 1
  %conv558 = zext i8 %278 to i32
  %sub559 = sub nsw i32 %conv558, 1
  store i32 %sub559, i32* %i, align 4
  br label %for.cond.560

for.cond.560:                                     ; preds = %for.inc.666, %sw.epilog
  %279 = load i32, i32* %i, align 4
  %cmp561 = icmp sge i32 %279, 0
  br i1 %cmp561, label %for.body.563, label %for.end.668

for.body.563:                                     ; preds = %for.cond.560
  %280 = load i32, i32* %i, align 4
  %idxprom564 = sext i32 %280 to i64
  %281 = load i8*, i8** %fmt, align 8
  %arrayidx565 = getelementptr inbounds i8, i8* %281, i64 %idxprom564
  %282 = load i8, i8* %arrayidx565, align 1
  %conv566 = sext i8 %282 to i32
  switch i32 %conv566, label %sw.default.664 [
    i32 101, label %sw.bb.567
    i32 69, label %sw.bb.580
    i32 115, label %sw.bb.625
    i32 105, label %sw.bb.638
    i32 119, label %sw.bb.651
    i32 48, label %sw.bb.663
    i32 116, label %sw.bb.663
  ]

sw.bb.567:                                        ; preds = %for.body.563
  %283 = load i32, i32* %i, align 4
  %idxprom568 = sext i32 %283 to i64
  %284 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx570 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld569, i32 0, i64 %idxprom568
  %rtx571 = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx571, align 8
  %286 = load i32, i32* %i, align 4
  %idxprom572 = sext i32 %286 to i64
  %287 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld573, i32 0, i64 %idxprom572
  %rtx575 = bitcast %union.rtunion_def* %arrayidx574 to %struct.rtx_def**
  %288 = load %struct.rtx_def*, %struct.rtx_def** %rtx575, align 8
  %289 = load i32, i32* %validate.addr, align 4
  %290 = load i32, i32* %equal_values.addr, align 4
  %call576 = call i32 @exp_equiv_p(%struct.rtx_def* %285, %struct.rtx_def* %288, i32 %289, i32 %290)
  %tobool577 = icmp ne i32 %call576, 0
  br i1 %tobool577, label %if.end.579, label %if.then.578

if.then.578:                                      ; preds = %sw.bb.567
  store i32 0, i32* %retval
  br label %return

if.end.579:                                       ; preds = %sw.bb.567
  br label %sw.epilog.665

sw.bb.580:                                        ; preds = %for.body.563
  %291 = load i32, i32* %i, align 4
  %idxprom581 = sext i32 %291 to i64
  %292 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld582, i32 0, i64 %idxprom581
  %rtvec584 = bitcast %union.rtunion_def* %arrayidx583 to %struct.rtvec_def**
  %293 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec584, align 8
  %num_elem585 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %293, i32 0, i32 0
  %294 = load i32, i32* %num_elem585, align 4
  %295 = load i32, i32* %i, align 4
  %idxprom586 = sext i32 %295 to i64
  %296 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1
  %arrayidx588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld587, i32 0, i64 %idxprom586
  %rtvec589 = bitcast %union.rtunion_def* %arrayidx588 to %struct.rtvec_def**
  %297 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec589, align 8
  %num_elem590 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %297, i32 0, i32 0
  %298 = load i32, i32* %num_elem590, align 4
  %cmp591 = icmp ne i32 %294, %298
  br i1 %cmp591, label %if.then.593, label %if.end.594

if.then.593:                                      ; preds = %sw.bb.580
  store i32 0, i32* %retval
  br label %return

if.end.594:                                       ; preds = %sw.bb.580
  store i32 0, i32* %j, align 4
  br label %for.cond.595

for.cond.595:                                     ; preds = %for.inc.622, %if.end.594
  %299 = load i32, i32* %j, align 4
  %300 = load i32, i32* %i, align 4
  %idxprom596 = sext i32 %300 to i64
  %301 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1
  %arrayidx598 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld597, i32 0, i64 %idxprom596
  %rtvec599 = bitcast %union.rtunion_def* %arrayidx598 to %struct.rtvec_def**
  %302 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec599, align 8
  %num_elem600 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %302, i32 0, i32 0
  %303 = load i32, i32* %num_elem600, align 4
  %cmp601 = icmp slt i32 %299, %303
  br i1 %cmp601, label %for.body.603, label %for.end.624

for.body.603:                                     ; preds = %for.cond.595
  %304 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %304 to i64
  %305 = load i32, i32* %i, align 4
  %idxprom605 = sext i32 %305 to i64
  %306 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx607 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld606, i32 0, i64 %idxprom605
  %rtvec608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtvec_def**
  %307 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec608, align 8
  %elem609 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %307, i32 0, i32 1
  %arrayidx610 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem609, i32 0, i64 %idxprom604
  %308 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx610, align 8
  %309 = load i32, i32* %j, align 4
  %idxprom611 = sext i32 %309 to i64
  %310 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %310 to i64
  %311 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld613 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1
  %arrayidx614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld613, i32 0, i64 %idxprom612
  %rtvec615 = bitcast %union.rtunion_def* %arrayidx614 to %struct.rtvec_def**
  %312 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec615, align 8
  %elem616 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %312, i32 0, i32 1
  %arrayidx617 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem616, i32 0, i64 %idxprom611
  %313 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx617, align 8
  %314 = load i32, i32* %validate.addr, align 4
  %315 = load i32, i32* %equal_values.addr, align 4
  %call618 = call i32 @exp_equiv_p(%struct.rtx_def* %308, %struct.rtx_def* %313, i32 %314, i32 %315)
  %tobool619 = icmp ne i32 %call618, 0
  br i1 %tobool619, label %if.end.621, label %if.then.620

if.then.620:                                      ; preds = %for.body.603
  store i32 0, i32* %retval
  br label %return

if.end.621:                                       ; preds = %for.body.603
  br label %for.inc.622

for.inc.622:                                      ; preds = %if.end.621
  %316 = load i32, i32* %j, align 4
  %inc623 = add nsw i32 %316, 1
  store i32 %inc623, i32* %j, align 4
  br label %for.cond.595

for.end.624:                                      ; preds = %for.cond.595
  br label %sw.epilog.665

sw.bb.625:                                        ; preds = %for.body.563
  %317 = load i32, i32* %i, align 4
  %idxprom626 = sext i32 %317 to i64
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld627, i32 0, i64 %idxprom626
  %rtstr629 = bitcast %union.rtunion_def* %arrayidx628 to i8**
  %319 = load i8*, i8** %rtstr629, align 8
  %320 = load i32, i32* %i, align 4
  %idxprom630 = sext i32 %320 to i64
  %321 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld631 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %321, i32 0, i32 1
  %arrayidx632 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld631, i32 0, i64 %idxprom630
  %rtstr633 = bitcast %union.rtunion_def* %arrayidx632 to i8**
  %322 = load i8*, i8** %rtstr633, align 8
  %call634 = call i32 @strcmp(i8* %319, i8* %322) #8
  %tobool635 = icmp ne i32 %call634, 0
  br i1 %tobool635, label %if.then.636, label %if.end.637

if.then.636:                                      ; preds = %sw.bb.625
  store i32 0, i32* %retval
  br label %return

if.end.637:                                       ; preds = %sw.bb.625
  br label %sw.epilog.665

sw.bb.638:                                        ; preds = %for.body.563
  %323 = load i32, i32* %i, align 4
  %idxprom639 = sext i32 %323 to i64
  %324 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1
  %arrayidx641 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld640, i32 0, i64 %idxprom639
  %rtint642 = bitcast %union.rtunion_def* %arrayidx641 to i32*
  %325 = load i32, i32* %rtint642, align 4
  %326 = load i32, i32* %i, align 4
  %idxprom643 = sext i32 %326 to i64
  %327 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1
  %arrayidx645 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld644, i32 0, i64 %idxprom643
  %rtint646 = bitcast %union.rtunion_def* %arrayidx645 to i32*
  %328 = load i32, i32* %rtint646, align 4
  %cmp647 = icmp ne i32 %325, %328
  br i1 %cmp647, label %if.then.649, label %if.end.650

if.then.649:                                      ; preds = %sw.bb.638
  store i32 0, i32* %retval
  br label %return

if.end.650:                                       ; preds = %sw.bb.638
  br label %sw.epilog.665

sw.bb.651:                                        ; preds = %for.body.563
  %329 = load i32, i32* %i, align 4
  %idxprom652 = sext i32 %329 to i64
  %330 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld653 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1
  %arrayidx654 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld653, i32 0, i64 %idxprom652
  %rtwint = bitcast %union.rtunion_def* %arrayidx654 to i64*
  %331 = load i64, i64* %rtwint, align 8
  %332 = load i32, i32* %i, align 4
  %idxprom655 = sext i32 %332 to i64
  %333 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8
  %fld656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1
  %arrayidx657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld656, i32 0, i64 %idxprom655
  %rtwint658 = bitcast %union.rtunion_def* %arrayidx657 to i64*
  %334 = load i64, i64* %rtwint658, align 8
  %cmp659 = icmp ne i64 %331, %334
  br i1 %cmp659, label %if.then.661, label %if.end.662

if.then.661:                                      ; preds = %sw.bb.651
  store i32 0, i32* %retval
  br label %return

if.end.662:                                       ; preds = %sw.bb.651
  br label %sw.epilog.665

sw.bb.663:                                        ; preds = %for.body.563, %for.body.563
  br label %sw.epilog.665

sw.default.664:                                   ; preds = %for.body.563
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 2707, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.exp_equiv_p, i32 0, i32 0)) #7
  unreachable

sw.epilog.665:                                    ; preds = %sw.bb.663, %if.end.662, %if.end.650, %if.end.637, %for.end.624, %if.end.579
  br label %for.inc.666

for.inc.666:                                      ; preds = %sw.epilog.665
  %335 = load i32, i32* %i, align 4
  %dec667 = add nsw i32 %335, -1
  store i32 %dec667, i32* %i, align 4
  br label %for.cond.560

for.end.668:                                      ; preds = %for.cond.560
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.668, %if.then.661, %if.then.649, %if.then.636, %if.then.620, %if.then.593, %if.then.578, %if.end.553, %if.then.549, %if.then.498, %if.then.453, %lor.end.442, %for.end, %if.then.405, %if.then.379, %if.then.376, %sw.bb.251, %sw.bb.243, %sw.bb, %if.then.239, %if.end.229, %if.then.227, %if.then.131, %if.then.12, %if.then.3, %if.then
  %336 = load i32, i32* %retval
  ret i32 %336
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

declare i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i32 (%struct.rtx_def*, i32)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @cse_rtx_varies_p(%struct.rtx_def* %x, i32 %from_alias) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %from_alias.addr = alloca i32, align 4
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %x0_q = alloca i32, align 4
  %x0_ent = alloca %struct.qty_table_elem*, align 8
  %x0_q192 = alloca i32, align 4
  %x1_q = alloca i32, align 4
  %x0_ent235 = alloca %struct.qty_table_elem*, align 8
  %x1_ent = alloca %struct.qty_table_elem*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %from_alias, i32* %from_alias.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end.32

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  %4 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %3, %4
  br i1 %cmp1, label %land.lhs.true.2, label %cond.false

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.2
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.2, %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %8 = load i32, i32* %rtuint5, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %6, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %9 = load i32, i32* %reg_qty, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtuint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %11 = load i32, i32* %rtuint8, align 4
  %cmp9 = icmp ne i32 %9, %11
  br i1 %cmp9, label %if.then, label %if.end.32

if.then:                                          ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtuint12 = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %13 = load i32, i32* %rtuint12, align 4
  %14 = load i32, i32* @cached_regno, align 4
  %cmp13 = icmp eq i32 %13, %14
  br i1 %cmp13, label %land.lhs.true.14, label %cond.false.17

land.lhs.true.14:                                 ; preds = %if.then
  %15 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool15 = icmp ne %struct.cse_reg_info* %15, null
  br i1 %tobool15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %land.lhs.true.14
  %16 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.22

cond.false.17:                                    ; preds = %land.lhs.true.14, %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %18 = load i32, i32* %rtuint20, align 4
  %call21 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %18)
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.17, %cond.true.16
  %cond23 = phi %struct.cse_reg_info* [ %16, %cond.true.16 ], [ %call21, %cond.false.17 ]
  %reg_qty24 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond23, i32 0, i32 3
  %19 = load i32, i32* %reg_qty24, align 4
  store i32 %19, i32* %x_q, align 4
  %20 = load i32, i32* %x_q, align 4
  %idxprom = sext i32 %20 to i64
  %21 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx25 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %21, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx25, %struct.qty_table_elem** %x_ent, align 8
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load26 = load i32, i32* %23, align 8
  %bf.lshr = lshr i32 %bf.load26, 16
  %bf.clear27 = and i32 %bf.lshr, 255
  %24 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %24, i32 0, i32 6
  %25 = load i32, i32* %mode, align 4
  %cmp28 = icmp eq i32 %bf.clear27, %25
  br i1 %cmp28, label %land.lhs.true.29, label %if.end

land.lhs.true.29:                                 ; preds = %cond.end.22
  %26 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %26, i32 0, i32 0
  %27 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %cmp30 = icmp ne %struct.rtx_def* %27, null
  br i1 %cmp30, label %if.then.31, label %if.end

if.then.31:                                       ; preds = %land.lhs.true.29
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.29, %cond.end.22
  br label %if.end.32

if.end.32:                                        ; preds = %if.end, %cond.end, %entry
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load33 = load i32, i32* %29, align 8
  %bf.clear34 = and i32 %bf.load33, 65535
  %cmp35 = icmp eq i32 %bf.clear34, 75
  br i1 %cmp35, label %land.lhs.true.36, label %if.end.115

land.lhs.true.36:                                 ; preds = %if.end.32
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load39 = load i32, i32* %32, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 54
  br i1 %cmp41, label %land.lhs.true.42, label %if.end.115

land.lhs.true.42:                                 ; preds = %land.lhs.true.36
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load46 = load i32, i32* %35, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 61
  br i1 %cmp48, label %land.lhs.true.49, label %if.end.115

land.lhs.true.49:                                 ; preds = %land.lhs.true.42
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 0
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtuint55 = bitcast %union.rtunion_def* %arrayidx54 to i32*
  %38 = load i32, i32* %rtuint55, align 4
  %39 = load i32, i32* @cached_regno, align 4
  %cmp56 = icmp eq i32 %38, %39
  br i1 %cmp56, label %land.lhs.true.57, label %cond.false.60

land.lhs.true.57:                                 ; preds = %land.lhs.true.49
  %40 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool58 = icmp ne %struct.cse_reg_info* %40, null
  br i1 %tobool58, label %cond.true.59, label %cond.false.60

cond.true.59:                                     ; preds = %land.lhs.true.57
  %41 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.68

cond.false.60:                                    ; preds = %land.lhs.true.57, %land.lhs.true.49
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %fld64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i32 0, i64 0
  %rtuint66 = bitcast %union.rtunion_def* %arrayidx65 to i32*
  %44 = load i32, i32* %rtuint66, align 4
  %call67 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %44)
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.60, %cond.true.59
  %cond69 = phi %struct.cse_reg_info* [ %41, %cond.true.59 ], [ %call67, %cond.false.60 ]
  %reg_qty70 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond69, i32 0, i32 3
  %45 = load i32, i32* %reg_qty70, align 4
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i32 0, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rtx73, align 8
  %fld74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i32 0, i64 0
  %rtuint76 = bitcast %union.rtunion_def* %arrayidx75 to i32*
  %48 = load i32, i32* %rtuint76, align 4
  %cmp77 = icmp ne i32 %45, %48
  br i1 %cmp77, label %if.then.78, label %if.end.115

if.then.78:                                       ; preds = %cond.end.68
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i32 0, i64 0
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rtx81, align 8
  %fld82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i32 0, i64 0
  %rtuint84 = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %51 = load i32, i32* %rtuint84, align 4
  %52 = load i32, i32* @cached_regno, align 4
  %cmp85 = icmp eq i32 %51, %52
  br i1 %cmp85, label %land.lhs.true.86, label %cond.false.89

land.lhs.true.86:                                 ; preds = %if.then.78
  %53 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool87 = icmp ne %struct.cse_reg_info* %53, null
  br i1 %tobool87, label %cond.true.88, label %cond.false.89

cond.true.88:                                     ; preds = %land.lhs.true.86
  %54 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.97

cond.false.89:                                    ; preds = %land.lhs.true.86, %if.then.78
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i32 0, i64 0
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx92, align 8
  %fld93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i32 0, i64 0
  %rtuint95 = bitcast %union.rtunion_def* %arrayidx94 to i32*
  %57 = load i32, i32* %rtuint95, align 4
  %call96 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %57)
  br label %cond.end.97

cond.end.97:                                      ; preds = %cond.false.89, %cond.true.88
  %cond98 = phi %struct.cse_reg_info* [ %54, %cond.true.88 ], [ %call96, %cond.false.89 ]
  %reg_qty99 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond98, i32 0, i32 3
  %58 = load i32, i32* %reg_qty99, align 4
  store i32 %58, i32* %x0_q, align 4
  %59 = load i32, i32* %x0_q, align 4
  %idxprom100 = sext i32 %59 to i64
  %60 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx101 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %60, i64 %idxprom100
  store %struct.qty_table_elem* %arrayidx101, %struct.qty_table_elem** %x0_ent, align 8
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %63 = bitcast %struct.rtx_def* %62 to i32*
  %bf.load105 = load i32, i32* %63, align 8
  %bf.lshr106 = lshr i32 %bf.load105, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %64 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent, align 8
  %mode108 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %64, i32 0, i32 6
  %65 = load i32, i32* %mode108, align 4
  %cmp109 = icmp eq i32 %bf.clear107, %65
  br i1 %cmp109, label %land.lhs.true.110, label %if.end.114

land.lhs.true.110:                                ; preds = %cond.end.97
  %66 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent, align 8
  %const_rtx111 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %66, i32 0, i32 0
  %67 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx111, align 8
  %cmp112 = icmp ne %struct.rtx_def* %67, null
  br i1 %cmp112, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %land.lhs.true.110
  store i32 0, i32* %retval
  br label %return

if.end.114:                                       ; preds = %land.lhs.true.110, %cond.end.97
  br label %if.end.115

if.end.115:                                       ; preds = %if.end.114, %cond.end.68, %land.lhs.true.42, %land.lhs.true.36, %if.end.32
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load116 = load i32, i32* %69, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 75
  br i1 %cmp118, label %land.lhs.true.119, label %if.end.265

land.lhs.true.119:                                ; preds = %if.end.115
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load123 = load i32, i32* %72, align 8
  %bf.clear124 = and i32 %bf.load123, 65535
  %cmp125 = icmp eq i32 %bf.clear124, 61
  br i1 %cmp125, label %land.lhs.true.126, label %if.end.265

land.lhs.true.126:                                ; preds = %land.lhs.true.119
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 1
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx129, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load130 = load i32, i32* %75, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  %cmp132 = icmp eq i32 %bf.clear131, 61
  br i1 %cmp132, label %land.lhs.true.133, label %if.end.265

land.lhs.true.133:                                ; preds = %land.lhs.true.126
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 0
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %fld137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i32 0, i64 0
  %rtuint139 = bitcast %union.rtunion_def* %arrayidx138 to i32*
  %78 = load i32, i32* %rtuint139, align 4
  %79 = load i32, i32* @cached_regno, align 4
  %cmp140 = icmp eq i32 %78, %79
  br i1 %cmp140, label %land.lhs.true.141, label %cond.false.144

land.lhs.true.141:                                ; preds = %land.lhs.true.133
  %80 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool142 = icmp ne %struct.cse_reg_info* %80, null
  br i1 %tobool142, label %cond.true.143, label %cond.false.144

cond.true.143:                                    ; preds = %land.lhs.true.141
  %81 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.152

cond.false.144:                                   ; preds = %land.lhs.true.141, %land.lhs.true.133
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx147, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtuint150 = bitcast %union.rtunion_def* %arrayidx149 to i32*
  %84 = load i32, i32* %rtuint150, align 4
  %call151 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %84)
  br label %cond.end.152

cond.end.152:                                     ; preds = %cond.false.144, %cond.true.143
  %cond153 = phi %struct.cse_reg_info* [ %81, %cond.true.143 ], [ %call151, %cond.false.144 ]
  %reg_qty154 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond153, i32 0, i32 3
  %85 = load i32, i32* %reg_qty154, align 4
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  %fld158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i32 0, i64 0
  %rtuint160 = bitcast %union.rtunion_def* %arrayidx159 to i32*
  %88 = load i32, i32* %rtuint160, align 4
  %cmp161 = icmp ne i32 %85, %88
  br i1 %cmp161, label %land.lhs.true.162, label %if.end.265

land.lhs.true.162:                                ; preds = %cond.end.152
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i32 0, i64 1
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx165, align 8
  %fld166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i32 0, i64 0
  %rtuint168 = bitcast %union.rtunion_def* %arrayidx167 to i32*
  %91 = load i32, i32* %rtuint168, align 4
  %92 = load i32, i32* @cached_regno, align 4
  %cmp169 = icmp eq i32 %91, %92
  br i1 %cmp169, label %land.lhs.true.170, label %cond.false.173

land.lhs.true.170:                                ; preds = %land.lhs.true.162
  %93 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool171 = icmp ne %struct.cse_reg_info* %93, null
  br i1 %tobool171, label %cond.true.172, label %cond.false.173

cond.true.172:                                    ; preds = %land.lhs.true.170
  %94 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.181

cond.false.173:                                   ; preds = %land.lhs.true.170, %land.lhs.true.162
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 1
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  %fld177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i32 0, i64 0
  %rtuint179 = bitcast %union.rtunion_def* %arrayidx178 to i32*
  %97 = load i32, i32* %rtuint179, align 4
  %call180 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %97)
  br label %cond.end.181

cond.end.181:                                     ; preds = %cond.false.173, %cond.true.172
  %cond182 = phi %struct.cse_reg_info* [ %94, %cond.true.172 ], [ %call180, %cond.false.173 ]
  %reg_qty183 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond182, i32 0, i32 3
  %98 = load i32, i32* %reg_qty183, align 4
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 1
  %rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx186, align 8
  %fld187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i32 0, i64 0
  %rtuint189 = bitcast %union.rtunion_def* %arrayidx188 to i32*
  %101 = load i32, i32* %rtuint189, align 4
  %cmp190 = icmp ne i32 %98, %101
  br i1 %cmp190, label %if.then.191, label %if.end.265

if.then.191:                                      ; preds = %cond.end.181
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i32 0, i64 0
  %rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rtx195, align 8
  %fld196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i32 0, i64 0
  %rtuint198 = bitcast %union.rtunion_def* %arrayidx197 to i32*
  %104 = load i32, i32* %rtuint198, align 4
  %105 = load i32, i32* @cached_regno, align 4
  %cmp199 = icmp eq i32 %104, %105
  br i1 %cmp199, label %land.lhs.true.200, label %cond.false.203

land.lhs.true.200:                                ; preds = %if.then.191
  %106 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool201 = icmp ne %struct.cse_reg_info* %106, null
  br i1 %tobool201, label %cond.true.202, label %cond.false.203

cond.true.202:                                    ; preds = %land.lhs.true.200
  %107 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.211

cond.false.203:                                   ; preds = %land.lhs.true.200, %if.then.191
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %fld207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i32 0, i64 0
  %rtuint209 = bitcast %union.rtunion_def* %arrayidx208 to i32*
  %110 = load i32, i32* %rtuint209, align 4
  %call210 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %110)
  br label %cond.end.211

cond.end.211:                                     ; preds = %cond.false.203, %cond.true.202
  %cond212 = phi %struct.cse_reg_info* [ %107, %cond.true.202 ], [ %call210, %cond.false.203 ]
  %reg_qty213 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond212, i32 0, i32 3
  %111 = load i32, i32* %reg_qty213, align 4
  store i32 %111, i32* %x0_q192, align 4
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 1
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx216, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 0
  %rtuint219 = bitcast %union.rtunion_def* %arrayidx218 to i32*
  %114 = load i32, i32* %rtuint219, align 4
  %115 = load i32, i32* @cached_regno, align 4
  %cmp220 = icmp eq i32 %114, %115
  br i1 %cmp220, label %land.lhs.true.221, label %cond.false.224

land.lhs.true.221:                                ; preds = %cond.end.211
  %116 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool222 = icmp ne %struct.cse_reg_info* %116, null
  br i1 %tobool222, label %cond.true.223, label %cond.false.224

cond.true.223:                                    ; preds = %land.lhs.true.221
  %117 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.232

cond.false.224:                                   ; preds = %land.lhs.true.221, %cond.end.211
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i32 0, i64 1
  %rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rtx227, align 8
  %fld228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld228, i32 0, i64 0
  %rtuint230 = bitcast %union.rtunion_def* %arrayidx229 to i32*
  %120 = load i32, i32* %rtuint230, align 4
  %call231 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %120)
  br label %cond.end.232

cond.end.232:                                     ; preds = %cond.false.224, %cond.true.223
  %cond233 = phi %struct.cse_reg_info* [ %117, %cond.true.223 ], [ %call231, %cond.false.224 ]
  %reg_qty234 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond233, i32 0, i32 3
  %121 = load i32, i32* %reg_qty234, align 4
  store i32 %121, i32* %x1_q, align 4
  %122 = load i32, i32* %x0_q192, align 4
  %idxprom236 = sext i32 %122 to i64
  %123 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx237 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %123, i64 %idxprom236
  store %struct.qty_table_elem* %arrayidx237, %struct.qty_table_elem** %x0_ent235, align 8
  %124 = load i32, i32* %x1_q, align 4
  %idxprom238 = sext i32 %124 to i64
  %125 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx239 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %125, i64 %idxprom238
  store %struct.qty_table_elem* %arrayidx239, %struct.qty_table_elem** %x1_ent, align 8
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  %128 = bitcast %struct.rtx_def* %127 to i32*
  %bf.load243 = load i32, i32* %128, align 8
  %bf.lshr244 = lshr i32 %bf.load243, 16
  %bf.clear245 = and i32 %bf.lshr244, 255
  %129 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent235, align 8
  %mode246 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %129, i32 0, i32 6
  %130 = load i32, i32* %mode246, align 4
  %cmp247 = icmp eq i32 %bf.clear245, %130
  br i1 %cmp247, label %land.lhs.true.248, label %if.end.264

land.lhs.true.248:                                ; preds = %cond.end.232
  %131 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent235, align 8
  %const_rtx249 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %131, i32 0, i32 0
  %132 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx249, align 8
  %cmp250 = icmp ne %struct.rtx_def* %132, null
  br i1 %cmp250, label %land.lhs.true.251, label %if.end.264

land.lhs.true.251:                                ; preds = %land.lhs.true.248
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i32 0, i64 1
  %rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rtx254, align 8
  %135 = bitcast %struct.rtx_def* %134 to i32*
  %bf.load255 = load i32, i32* %135, align 8
  %bf.lshr256 = lshr i32 %bf.load255, 16
  %bf.clear257 = and i32 %bf.lshr256, 255
  %136 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x1_ent, align 8
  %mode258 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %136, i32 0, i32 6
  %137 = load i32, i32* %mode258, align 4
  %cmp259 = icmp eq i32 %bf.clear257, %137
  br i1 %cmp259, label %land.lhs.true.260, label %if.end.264

land.lhs.true.260:                                ; preds = %land.lhs.true.251
  %138 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x1_ent, align 8
  %const_rtx261 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %138, i32 0, i32 0
  %139 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx261, align 8
  %cmp262 = icmp ne %struct.rtx_def* %139, null
  br i1 %cmp262, label %if.then.263, label %if.end.264

if.then.263:                                      ; preds = %land.lhs.true.260
  store i32 0, i32* %retval
  br label %return

if.end.264:                                       ; preds = %land.lhs.true.260, %land.lhs.true.251, %land.lhs.true.248, %cond.end.232
  br label %if.end.265

if.end.265:                                       ; preds = %if.end.264, %cond.end.181, %cond.end.152, %land.lhs.true.126, %land.lhs.true.119, %if.end.115
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %141 = load i32, i32* %from_alias.addr, align 4
  %call266 = call i32 @rtx_varies_p(%struct.rtx_def* %140, i32 %141)
  store i32 %call266, i32* %retval
  br label %return

return:                                           ; preds = %if.end.265, %if.then.263, %if.then.113, %if.then.31
  %142 = load i32, i32* %retval
  ret i32 %142
}

declare i32 @rtx_varies_p(%struct.rtx_def*, i32) #1

declare i32 @any_condjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @pc_set(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @fold_rtx(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %copied = alloca i32, align 4
  %must_swap = alloca i32, align 4
  %folded_arg0 = alloca %struct.rtx_def*, align 8
  %folded_arg1 = alloca %struct.rtx_def*, align 8
  %const_arg0 = alloca %struct.rtx_def*, align 8
  %const_arg1 = alloca %struct.rtx_def*, align 8
  %const_arg2 = alloca %struct.rtx_def*, align 8
  %mode_arg0 = alloca i32, align 4
  %next = alloca %struct.rtx_def*, align 8
  %imode = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %elt274 = alloca %struct.table_elt*, align 8
  %eltcode = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op0674 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %base = alloca %struct.rtx_def*, align 8
  %offset = alloca i64, align 8
  %addr_q = alloca i32, align 4
  %addr_ent = alloca %struct.qty_table_elem*, align 8
  %constant = alloca %struct.rtx_def*, align 8
  %const_mode = alloca i32, align 4
  %new1067 = alloca %struct.rtx_def*, align 8
  %label = alloca %struct.rtx_def*, align 8
  %table_insn = alloca %struct.rtx_def*, align 8
  %table = alloca %struct.rtx_def*, align 8
  %table1286 = alloca %struct.rtx_def*, align 8
  %arg = alloca %struct.rtx_def*, align 8
  %folded_arg = alloca %struct.rtx_def*, align 8
  %const_arg = alloca %struct.rtx_def*, align 8
  %mode_arg = alloca i32, align 4
  %cheap_arg = alloca %struct.rtx_def*, align 8
  %expensive_arg = alloca %struct.rtx_def*, align 8
  %replacements = alloca [2 x %struct.rtx_def*], align 16
  %j = alloca i32, align 4
  %arg_q = alloca i32, align 4
  %arg_ent = alloca %struct.qty_table_elem*, align 8
  %old_cost = alloca i32, align 4
  %new_cost = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %tem1847 = alloca %struct.rtx_def*, align 8
  %is_const = alloca i32, align 4
  %p0 = alloca %struct.table_elt*, align 8
  %p1 = alloca %struct.table_elt*, align 8
  %true_rtx = alloca %struct.rtx_def*, align 8
  %false_rtx = alloca %struct.rtx_def*, align 8
  %mode_arg1 = alloca i32, align 4
  %qty = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %y = alloca %struct.rtx_def*, align 8
  %inner_const = alloca %struct.rtx_def*, align 8
  %sign_bitnum = alloca i32, align 4
  %has_sign = alloca i32, align 4
  %true_rtx2346 = alloca %struct.rtx_def*, align 8
  %false_rtx2347 = alloca %struct.rtx_def*, align 8
  %y2418 = alloca %struct.rtx_def*, align 8
  %y2516 = alloca %struct.rtx_def*, align 8
  %new_const = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.table_elt*, align 8
  %y2670 = alloca %struct.rtx_def*, align 8
  %is_shift = alloca i32, align 4
  %y2714 = alloca %struct.rtx_def*, align 8
  %inner_const2716 = alloca %struct.rtx_def*, align 8
  %associate_code = alloca i32, align 4
  %new_const2717 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %new, align 8
  store i32 0, i32* %copied, align 4
  store i32 0, i32* %must_swap, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  store i32 %bf.clear, i32* %mode, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  store i32 %bf.clear2, i32* %code, align 4
  %6 = load i32, i32* %code, align 4
  switch i32 %6, label %sw.default [
    i32 58, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 61, label %sw.bb
    i32 3, label %sw.bb
    i32 70, label %sw.bb
    i32 59, label %sw.bb.3
    i32 63, label %sw.bb.46
    i32 86, label %sw.bb.889
    i32 77, label %sw.bb.889
    i32 66, label %sw.bb.902
    i32 50, label %sw.bb.1348
    i32 41, label %sw.bb.1438
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %7, %struct.rtx_def** %retval
  br label %return

sw.bb.3:                                          ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %tobool = icmp ne %struct.rtx_def* %8, null
  br i1 %tobool, label %land.lhs.true, label %if.end.45

land.lhs.true:                                    ; preds = %sw.bb.3
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load4 = load i32, i32* %10, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 33
  br i1 %cmp6, label %if.then.7, label %if.end.45

if.then.7:                                        ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %11)
  store %struct.rtx_def* %call, %struct.rtx_def** %next, align 8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %tobool8 = icmp ne %struct.rtx_def* %12, null
  br i1 %tobool8, label %land.lhs.true.9, label %if.end.44

land.lhs.true.9:                                  ; preds = %if.then.7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load10 = load i32, i32* %14, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 36
  br i1 %cmp12, label %land.lhs.true.13, label %if.end.44

land.lhs.true.13:                                 ; preds = %land.lhs.true.9
  %15 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %cmp14 = icmp ne %struct.rtx_def* %16, null
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.44

land.lhs.true.15:                                 ; preds = %land.lhs.true.13
  %17 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 2
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx18, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load19 = load i32, i32* %19, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 33
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.44

land.lhs.true.22:                                 ; preds = %land.lhs.true.15
  %20 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 2
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %fld26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i32 0, i64 3
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtx28, align 8
  %23 = bitcast %struct.rtx_def* %22 to i32*
  %bf.load29 = load i32, i32* %23, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 44
  br i1 %cmp31, label %if.then.41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.22
  %24 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %fld32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i32 0, i64 2
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rtx34, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 3
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx37, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load38 = load i32, i32* %27, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 45
  br i1 %cmp40, label %if.then.41, label %if.end.44

if.then.41:                                       ; preds = %lor.lhs.false, %land.lhs.true.22
  %28 = load i32, i32* @target_flags, align 4
  %and = and i32 %28, 33554432
  %tobool42 = icmp ne i32 %and, 0
  %cond = select i1 %tobool42, i32 5, i32 4
  %29 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8
  %call43 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %cond, %struct.rtx_def* %29)
  store %struct.rtx_def* %call43, %struct.rtx_def** %retval
  br label %return

if.end.44:                                        ; preds = %lor.lhs.false, %land.lhs.true.15, %land.lhs.true.13, %land.lhs.true.9, %if.then.7
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %land.lhs.true, %sw.bb.3
  br label %sw.epilog

sw.bb.46:                                         ; preds = %if.end
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call47 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %30, i32 54)
  store %struct.rtx_def* %call47, %struct.rtx_def** %new, align 8
  %cmp48 = icmp ne %struct.rtx_def* %call47, null
  br i1 %cmp48, label %if.then.52, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %sw.bb.46
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call50 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %31, i32 55)
  store %struct.rtx_def* %call50, %struct.rtx_def** %new, align 8
  %cmp51 = icmp ne %struct.rtx_def* %call50, null
  br i1 %cmp51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %lor.lhs.false.49, %sw.bb.46
  %32 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %32, %struct.rtx_def** %retval
  br label %return

if.end.53:                                        ; preds = %lor.lhs.false.49
  %33 = load i32, i32* %mode, align 4
  %idxprom = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %34 = load i8, i8* %arrayidx54, align 1
  %conv = zext i8 %34 to i32
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i32 0, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rtx57, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load58 = load i32, i32* %37, align 8
  %bf.lshr59 = lshr i32 %bf.load58, 16
  %bf.clear60 = and i32 %bf.lshr59, 255
  %idxprom61 = sext i32 %bf.clear60 to i64
  %arrayidx62 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom61
  %38 = load i8, i8* %arrayidx62, align 1
  %conv63 = zext i8 %38 to i32
  %cmp64 = icmp sgt i32 %conv, %conv63
  br i1 %cmp64, label %if.then.66, label %if.end.225

if.then.66:                                       ; preds = %if.end.53
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i32 0, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rtx69, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load70 = load i32, i32* %41, align 8
  %bf.lshr71 = lshr i32 %bf.load70, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  store i32 %bf.clear72, i32* %imode, align 4
  %42 = load i32, i32* %mode, align 4
  %idxprom73 = sext i32 %42 to i64
  %arrayidx74 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom73
  %43 = load i8, i8* %arrayidx74, align 1
  %conv75 = zext i8 %43 to i32
  %44 = load i32, i32* @target_flags, align 4
  %and76 = and i32 %44, 33554432
  %tobool77 = icmp ne i32 %and76, 0
  %cond78 = select i1 %tobool77, i32 8, i32 4
  %cmp79 = icmp sle i32 %conv75, %cond78
  br i1 %cmp79, label %land.lhs.true.81, label %if.end.224

land.lhs.true.81:                                 ; preds = %if.then.66
  %45 = load i32, i32* %imode, align 4
  %idxprom82 = sext i32 %45 to i64
  %arrayidx83 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom82
  %46 = load i8, i8* %arrayidx83, align 1
  %conv84 = zext i8 %46 to i32
  %47 = load i32, i32* @target_flags, align 4
  %and85 = and i32 %47, 33554432
  %tobool86 = icmp ne i32 %and85, 0
  %cond87 = select i1 %tobool86, i32 8, i32 4
  %cmp88 = icmp sle i32 %conv84, %cond87
  br i1 %cmp88, label %land.lhs.true.90, label %if.end.224

land.lhs.true.90:                                 ; preds = %land.lhs.true.81
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 0
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rtx93, align 8
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i32 0, i64 0
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rtx96, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load97 = load i32, i32* %52, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 61
  br i1 %cmp99, label %land.lhs.true.101, label %cond.false.128

land.lhs.true.101:                                ; preds = %land.lhs.true.90
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i32 0, i64 0
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtx104, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %55 = load i32, i32* %rtuint, align 4
  %cmp107 = icmp uge i32 %55, 53
  br i1 %cmp107, label %cond.true, label %cond.false.128

cond.true:                                        ; preds = %land.lhs.true.101
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i32 0, i64 0
  %rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rtx111, align 8
  %fld112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i32 0, i64 0
  %rtuint114 = bitcast %union.rtunion_def* %arrayidx113 to i32*
  %58 = load i32, i32* %rtuint114, align 4
  %59 = load i32, i32* @cached_regno, align 4
  %cmp115 = icmp eq i32 %58, %59
  br i1 %cmp115, label %land.lhs.true.117, label %cond.false

land.lhs.true.117:                                ; preds = %cond.true
  %60 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool118 = icmp ne %struct.cse_reg_info* %60, null
  br i1 %tobool118, label %cond.true.119, label %cond.false

cond.true.119:                                    ; preds = %land.lhs.true.117
  %61 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.117, %cond.true
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i32 0, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rtx122, align 8
  %fld123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i32 0, i64 0
  %rtuint125 = bitcast %union.rtunion_def* %arrayidx124 to i32*
  %64 = load i32, i32* %rtuint125, align 4
  %call126 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %64)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.119
  %cond127 = phi %struct.cse_reg_info* [ %61, %cond.true.119 ], [ %call126, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond127, i32 0, i32 3
  %65 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %65
  br label %cond.end.133

cond.false.128:                                   ; preds = %land.lhs.true.101, %land.lhs.true.90
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i32 0, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx131, align 8
  %68 = load i32, i32* %imode, align 4
  %call132 = call i32 @canon_hash(%struct.rtx_def* %67, i32 %68)
  br label %cond.end.133

cond.end.133:                                     ; preds = %cond.false.128, %cond.end
  %cond134 = phi i32 [ %add, %cond.end ], [ %call132, %cond.false.128 ]
  %and135 = and i32 %cond134, 31
  %69 = load i32, i32* %imode, align 4
  %call136 = call %struct.table_elt* @lookup(%struct.rtx_def* %49, i32 %and135, i32 %69)
  store %struct.table_elt* %call136, %struct.table_elt** %elt, align 8
  %cmp137 = icmp ne %struct.table_elt* %call136, null
  br i1 %cmp137, label %if.then.139, label %if.end.224

if.then.139:                                      ; preds = %cond.end.133
  %70 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %70, i32 0, i32 6
  %71 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %71, %struct.table_elt** %elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.139
  %72 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool140 = icmp ne %struct.table_elt* %72, null
  br i1 %tobool140, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %73 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %73, i32 0, i32 0
  %74 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load141 = load i32, i32* %75, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  %cmp143 = icmp eq i32 %bf.clear142, 67
  br i1 %cmp143, label %land.lhs.true.187, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %for.body
  %76 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp146 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %76, i32 0, i32 0
  %77 = load %struct.rtx_def*, %struct.rtx_def** %exp146, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load147 = load i32, i32* %78, align 8
  %bf.clear148 = and i32 %bf.load147, 65535
  %cmp149 = icmp eq i32 %bf.clear148, 68
  br i1 %cmp149, label %land.lhs.true.187, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %lor.lhs.false.145
  %79 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp152 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %79, i32 0, i32 0
  %80 = load %struct.rtx_def*, %struct.rtx_def** %exp152, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load153 = load i32, i32* %81, align 8
  %bf.clear154 = and i32 %bf.load153, 65535
  %cmp155 = icmp eq i32 %bf.clear154, 54
  br i1 %cmp155, label %land.lhs.true.187, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %lor.lhs.false.151
  %82 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp158 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %82, i32 0, i32 0
  %83 = load %struct.rtx_def*, %struct.rtx_def** %exp158, align 8
  %84 = bitcast %struct.rtx_def* %83 to i32*
  %bf.load159 = load i32, i32* %84, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %cmp161 = icmp eq i32 %bf.clear160, 55
  br i1 %cmp161, label %land.lhs.true.187, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %lor.lhs.false.157
  %85 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp164 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %85, i32 0, i32 0
  %86 = load %struct.rtx_def*, %struct.rtx_def** %exp164, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load165 = load i32, i32* %87, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 58
  br i1 %cmp167, label %land.lhs.true.187, label %lor.lhs.false.169

lor.lhs.false.169:                                ; preds = %lor.lhs.false.163
  %88 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp170 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 0
  %89 = load %struct.rtx_def*, %struct.rtx_def** %exp170, align 8
  %90 = bitcast %struct.rtx_def* %89 to i32*
  %bf.load171 = load i32, i32* %90, align 8
  %bf.clear172 = and i32 %bf.load171, 65535
  %cmp173 = icmp eq i32 %bf.clear172, 134
  br i1 %cmp173, label %land.lhs.true.187, label %lor.lhs.false.175

lor.lhs.false.175:                                ; preds = %lor.lhs.false.169
  %91 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp176 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %91, i32 0, i32 0
  %92 = load %struct.rtx_def*, %struct.rtx_def** %exp176, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load177 = load i32, i32* %93, align 8
  %bf.clear178 = and i32 %bf.load177, 65535
  %cmp179 = icmp eq i32 %bf.clear178, 56
  br i1 %cmp179, label %land.lhs.true.187, label %lor.lhs.false.181

lor.lhs.false.181:                                ; preds = %lor.lhs.false.175
  %94 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp182 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %94, i32 0, i32 0
  %95 = load %struct.rtx_def*, %struct.rtx_def** %exp182, align 8
  %96 = bitcast %struct.rtx_def* %95 to i32*
  %bf.load183 = load i32, i32* %96, align 8
  %bf.clear184 = and i32 %bf.load183, 65535
  %cmp185 = icmp eq i32 %bf.clear184, 140
  br i1 %cmp185, label %land.lhs.true.187, label %if.end.196

land.lhs.true.187:                                ; preds = %lor.lhs.false.181, %lor.lhs.false.175, %lor.lhs.false.169, %lor.lhs.false.163, %lor.lhs.false.157, %lor.lhs.false.151, %lor.lhs.false.145, %for.body
  %97 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp188 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %97, i32 0, i32 0
  %98 = load %struct.rtx_def*, %struct.rtx_def** %exp188, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load189 = load i32, i32* %99, align 8
  %bf.lshr190 = lshr i32 %bf.load189, 16
  %bf.clear191 = and i32 %bf.lshr190, 255
  %cmp192 = icmp eq i32 %bf.clear191, 0
  br i1 %cmp192, label %if.then.194, label %if.end.196

if.then.194:                                      ; preds = %land.lhs.true.187
  %100 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp195 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %100, i32 0, i32 0
  %101 = load %struct.rtx_def*, %struct.rtx_def** %exp195, align 8
  store %struct.rtx_def* %101, %struct.rtx_def** %retval
  br label %return

if.end.196:                                       ; preds = %land.lhs.true.187, %lor.lhs.false.181
  %102 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp197 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %102, i32 0, i32 0
  %103 = load %struct.rtx_def*, %struct.rtx_def** %exp197, align 8
  %104 = bitcast %struct.rtx_def* %103 to i32*
  %bf.load198 = load i32, i32* %104, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 63
  br i1 %cmp200, label %land.lhs.true.202, label %if.end.223

land.lhs.true.202:                                ; preds = %if.end.196
  %105 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp203 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %105, i32 0, i32 0
  %106 = load %struct.rtx_def*, %struct.rtx_def** %exp203, align 8
  %fld204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i32 0, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rtx206, align 8
  %108 = bitcast %struct.rtx_def* %107 to i32*
  %bf.load207 = load i32, i32* %108, align 8
  %bf.lshr208 = lshr i32 %bf.load207, 16
  %bf.clear209 = and i32 %bf.lshr208, 255
  %109 = load i32, i32* %mode, align 4
  %cmp210 = icmp eq i32 %bf.clear209, %109
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.223

land.lhs.true.212:                                ; preds = %land.lhs.true.202
  %110 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp213 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %110, i32 0, i32 0
  %111 = load %struct.rtx_def*, %struct.rtx_def** %exp213, align 8
  %112 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp214 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %112, i32 0, i32 0
  %113 = load %struct.rtx_def*, %struct.rtx_def** %exp214, align 8
  %call215 = call i32 @exp_equiv_p(%struct.rtx_def* %111, %struct.rtx_def* %113, i32 1, i32 0)
  %tobool216 = icmp ne i32 %call215, 0
  br i1 %tobool216, label %if.then.217, label %if.end.223

if.then.217:                                      ; preds = %land.lhs.true.212
  %114 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp218 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %114, i32 0, i32 0
  %115 = load %struct.rtx_def*, %struct.rtx_def** %exp218, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 0
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %call222 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %116)
  store %struct.rtx_def* %call222, %struct.rtx_def** %retval
  br label %return

if.end.223:                                       ; preds = %land.lhs.true.212, %land.lhs.true.202, %if.end.196
  br label %for.inc

for.inc:                                          ; preds = %if.end.223
  %117 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %117, i32 0, i32 4
  %118 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %118, %struct.table_elt** %elt, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.224

if.end.224:                                       ; preds = %for.end, %cond.end.133, %land.lhs.true.81, %if.then.66
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %119, %struct.rtx_def** %retval
  br label %return

if.end.225:                                       ; preds = %if.end.53
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i32 0, i64 0
  %rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rtx228, align 8
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call229 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %121, %struct.rtx_def* %122)
  store %struct.rtx_def* %call229, %struct.rtx_def** %folded_arg0, align 8
  %123 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %call230 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %123)
  store %struct.rtx_def* %call230, %struct.rtx_def** %const_arg0, align 8
  %124 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool231 = icmp ne %struct.rtx_def* %124, null
  br i1 %tobool231, label %if.then.232, label %if.end.233

if.then.232:                                      ; preds = %if.end.225
  %125 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  store %struct.rtx_def* %125, %struct.rtx_def** %folded_arg0, align 8
  br label %if.end.233

if.end.233:                                       ; preds = %if.then.232, %if.end.225
  %126 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %127 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx236, align 8
  %cmp237 = icmp ne %struct.rtx_def* %126, %128
  br i1 %cmp237, label %if.then.239, label %if.end.253

if.then.239:                                      ; preds = %if.end.233
  %129 = load i32, i32* %mode, align 4
  %130 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load243 = load i32, i32* %133, align 8
  %bf.lshr244 = lshr i32 %bf.load243, 16
  %bf.clear245 = and i32 %bf.lshr244, 255
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 1
  %rtuint248 = bitcast %union.rtunion_def* %arrayidx247 to i32*
  %135 = load i32, i32* %rtuint248, align 4
  %call249 = call %struct.rtx_def* @simplify_subreg(i32 %129, %struct.rtx_def* %130, i32 %bf.clear245, i32 %135)
  store %struct.rtx_def* %call249, %struct.rtx_def** %new, align 8
  %136 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool250 = icmp ne %struct.rtx_def* %136, null
  br i1 %tobool250, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %if.then.239
  %137 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %137, %struct.rtx_def** %retval
  br label %return

if.end.252:                                       ; preds = %if.then.239
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252, %if.end.233
  %138 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %139 = bitcast %struct.rtx_def* %138 to i32*
  %bf.load254 = load i32, i32* %139, align 8
  %bf.clear255 = and i32 %bf.load254, 65535
  %cmp256 = icmp eq i32 %bf.clear255, 61
  br i1 %cmp256, label %land.lhs.true.258, label %if.end.888

land.lhs.true.258:                                ; preds = %if.end.253
  %140 = load i32, i32* %mode, align 4
  %idxprom259 = sext i32 %140 to i64
  %arrayidx260 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom259
  %141 = load i8, i8* %arrayidx260, align 1
  %conv261 = zext i8 %141 to i32
  %142 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load262 = load i32, i32* %143, align 8
  %bf.lshr263 = lshr i32 %bf.load262, 16
  %bf.clear264 = and i32 %bf.lshr263, 255
  %idxprom265 = sext i32 %bf.clear264 to i64
  %arrayidx266 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom265
  %144 = load i8, i8* %arrayidx266, align 1
  %conv267 = zext i8 %144 to i32
  %cmp268 = icmp slt i32 %conv261, %conv267
  br i1 %cmp268, label %land.lhs.true.270, label %if.end.888

land.lhs.true.270:                                ; preds = %land.lhs.true.258
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call271 = call i32 @subreg_lowpart_p(%struct.rtx_def* %145)
  %tobool272 = icmp ne i32 %call271, 0
  br i1 %tobool272, label %if.then.273, label %if.end.888

if.then.273:                                      ; preds = %land.lhs.true.270
  %146 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load275 = load i32, i32* %148, align 8
  %bf.clear276 = and i32 %bf.load275, 65535
  %cmp277 = icmp eq i32 %bf.clear276, 61
  br i1 %cmp277, label %land.lhs.true.279, label %cond.false.303

land.lhs.true.279:                                ; preds = %if.then.273
  %149 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i32 0, i64 0
  %rtuint282 = bitcast %union.rtunion_def* %arrayidx281 to i32*
  %150 = load i32, i32* %rtuint282, align 4
  %cmp283 = icmp uge i32 %150, 53
  br i1 %cmp283, label %cond.true.285, label %cond.false.303

cond.true.285:                                    ; preds = %land.lhs.true.279
  %151 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 0
  %rtuint288 = bitcast %union.rtunion_def* %arrayidx287 to i32*
  %152 = load i32, i32* %rtuint288, align 4
  %153 = load i32, i32* @cached_regno, align 4
  %cmp289 = icmp eq i32 %152, %153
  br i1 %cmp289, label %land.lhs.true.291, label %cond.false.294

land.lhs.true.291:                                ; preds = %cond.true.285
  %154 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool292 = icmp ne %struct.cse_reg_info* %154, null
  br i1 %tobool292, label %cond.true.293, label %cond.false.294

cond.true.293:                                    ; preds = %land.lhs.true.291
  %155 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.299

cond.false.294:                                   ; preds = %land.lhs.true.291, %cond.true.285
  %156 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i32 0, i64 0
  %rtuint297 = bitcast %union.rtunion_def* %arrayidx296 to i32*
  %157 = load i32, i32* %rtuint297, align 4
  %call298 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %157)
  br label %cond.end.299

cond.end.299:                                     ; preds = %cond.false.294, %cond.true.293
  %cond300 = phi %struct.cse_reg_info* [ %155, %cond.true.293 ], [ %call298, %cond.false.294 ]
  %reg_qty301 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond300, i32 0, i32 3
  %158 = load i32, i32* %reg_qty301, align 4
  %add302 = add i32 7808, %158
  br label %cond.end.308

cond.false.303:                                   ; preds = %land.lhs.true.279, %if.then.273
  %159 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %160 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %161 = bitcast %struct.rtx_def* %160 to i32*
  %bf.load304 = load i32, i32* %161, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %call307 = call i32 @canon_hash(%struct.rtx_def* %159, i32 %bf.clear306)
  br label %cond.end.308

cond.end.308:                                     ; preds = %cond.false.303, %cond.end.299
  %cond309 = phi i32 [ %add302, %cond.end.299 ], [ %call307, %cond.false.303 ]
  %and310 = and i32 %cond309, 31
  %162 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %163 = bitcast %struct.rtx_def* %162 to i32*
  %bf.load311 = load i32, i32* %163, align 8
  %bf.lshr312 = lshr i32 %bf.load311, 16
  %bf.clear313 = and i32 %bf.lshr312, 255
  %call314 = call %struct.table_elt* @lookup(%struct.rtx_def* %146, i32 %and310, i32 %bf.clear313)
  store %struct.table_elt* %call314, %struct.table_elt** %elt274, align 8
  %164 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %tobool315 = icmp ne %struct.table_elt* %164, null
  br i1 %tobool315, label %if.then.316, label %if.end.318

if.then.316:                                      ; preds = %cond.end.308
  %165 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %first_same_value317 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %165, i32 0, i32 6
  %166 = load %struct.table_elt*, %struct.table_elt** %first_same_value317, align 8
  store %struct.table_elt* %166, %struct.table_elt** %elt274, align 8
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.316, %cond.end.308
  br label %for.cond.319

for.cond.319:                                     ; preds = %for.inc.885, %if.end.318
  %167 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %tobool320 = icmp ne %struct.table_elt* %167, null
  br i1 %tobool320, label %for.body.321, label %for.end.887

for.body.321:                                     ; preds = %for.cond.319
  %168 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp322 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %168, i32 0, i32 0
  %169 = load %struct.rtx_def*, %struct.rtx_def** %exp322, align 8
  %170 = bitcast %struct.rtx_def* %169 to i32*
  %bf.load323 = load i32, i32* %170, align 8
  %bf.clear324 = and i32 %bf.load323, 65535
  store i32 %bf.clear324, i32* %eltcode, align 4
  %171 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp325 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %171, i32 0, i32 0
  %172 = load %struct.rtx_def*, %struct.rtx_def** %exp325, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load326 = load i32, i32* %173, align 8
  %bf.clear327 = and i32 %bf.load326, 65535
  %idxprom328 = sext i32 %bf.clear327 to i64
  %arrayidx329 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom328
  %174 = load i8, i8* %arrayidx329, align 1
  %conv330 = sext i8 %174 to i32
  %cmp331 = icmp eq i32 %conv330, 49
  br i1 %cmp331, label %land.lhs.true.333, label %if.else

land.lhs.true.333:                                ; preds = %for.body.321
  %175 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp334 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %175, i32 0, i32 0
  %176 = load %struct.rtx_def*, %struct.rtx_def** %exp334, align 8
  %177 = bitcast %struct.rtx_def* %176 to i32*
  %bf.load335 = load i32, i32* %177, align 8
  %bf.clear336 = and i32 %bf.load335, 65535
  %cmp337 = icmp ne i32 %bf.clear336, 120
  br i1 %cmp337, label %land.lhs.true.339, label %if.else

land.lhs.true.339:                                ; preds = %land.lhs.true.333
  %178 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp340 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %178, i32 0, i32 0
  %179 = load %struct.rtx_def*, %struct.rtx_def** %exp340, align 8
  %180 = bitcast %struct.rtx_def* %179 to i32*
  %bf.load341 = load i32, i32* %180, align 8
  %bf.clear342 = and i32 %bf.load341, 65535
  %cmp343 = icmp ne i32 %bf.clear342, 121
  br i1 %cmp343, label %land.lhs.true.345, label %if.else

land.lhs.true.345:                                ; preds = %land.lhs.true.339
  %181 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp346 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %181, i32 0, i32 0
  %182 = load %struct.rtx_def*, %struct.rtx_def** %exp346, align 8
  %fld347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i32 0, i64 0
  %rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rtx349, align 8
  %184 = bitcast %struct.rtx_def* %183 to i32*
  %bf.load350 = load i32, i32* %184, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 63
  br i1 %cmp352, label %land.lhs.true.354, label %if.else

land.lhs.true.354:                                ; preds = %land.lhs.true.345
  %185 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp355 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %185, i32 0, i32 0
  %186 = load %struct.rtx_def*, %struct.rtx_def** %exp355, align 8
  %fld356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1
  %arrayidx357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld356, i32 0, i64 0
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rtx358, align 8
  %fld359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i32 0, i64 0
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rtx361, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load362 = load i32, i32* %189, align 8
  %bf.lshr363 = lshr i32 %bf.load362, 16
  %bf.clear364 = and i32 %bf.lshr363, 255
  %190 = load i32, i32* %mode, align 4
  %cmp365 = icmp eq i32 %bf.clear364, %190
  br i1 %cmp365, label %land.lhs.true.367, label %if.else

land.lhs.true.367:                                ; preds = %land.lhs.true.354
  %191 = load i32, i32* %mode, align 4
  %idxprom368 = sext i32 %191 to i64
  %arrayidx369 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom368
  %192 = load i32, i32* %arrayidx369, align 4
  %193 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp370 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %193, i32 0, i32 0
  %194 = load %struct.rtx_def*, %struct.rtx_def** %exp370, align 8
  %fld371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i32 0, i64 0
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rtx373, align 8
  %196 = bitcast %struct.rtx_def* %195 to i32*
  %bf.load374 = load i32, i32* %196, align 8
  %bf.lshr375 = lshr i32 %bf.load374, 16
  %bf.clear376 = and i32 %bf.lshr375, 255
  %idxprom377 = sext i32 %bf.clear376 to i64
  %arrayidx378 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom377
  %197 = load i32, i32* %arrayidx378, align 4
  %cmp379 = icmp eq i32 %192, %197
  br i1 %cmp379, label %if.then.381, label %if.else

if.then.381:                                      ; preds = %land.lhs.true.367
  %198 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp382 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %198, i32 0, i32 0
  %199 = load %struct.rtx_def*, %struct.rtx_def** %exp382, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 0
  %rtx385 = bitcast %union.rtunion_def* %arrayidx384 to %struct.rtx_def**
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rtx385, align 8
  %fld386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1
  %arrayidx387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld386, i32 0, i64 0
  %rtx388 = bitcast %union.rtunion_def* %arrayidx387 to %struct.rtx_def**
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rtx388, align 8
  store %struct.rtx_def* %201, %struct.rtx_def** %op0, align 8
  %202 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load389 = load i32, i32* %203, align 8
  %bf.clear390 = and i32 %bf.load389, 65535
  %cmp391 = icmp ne i32 %bf.clear390, 61
  br i1 %cmp391, label %land.lhs.true.393, label %if.end.435

land.lhs.true.393:                                ; preds = %if.then.381
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load394 = load i32, i32* %205, align 8
  %bf.clear395 = and i32 %bf.load394, 65535
  %cmp396 = icmp eq i32 %bf.clear395, 67
  br i1 %cmp396, label %if.end.435, label %lor.lhs.false.398

lor.lhs.false.398:                                ; preds = %land.lhs.true.393
  %206 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %207 = bitcast %struct.rtx_def* %206 to i32*
  %bf.load399 = load i32, i32* %207, align 8
  %bf.clear400 = and i32 %bf.load399, 65535
  %cmp401 = icmp eq i32 %bf.clear400, 68
  br i1 %cmp401, label %if.end.435, label %lor.lhs.false.403

lor.lhs.false.403:                                ; preds = %lor.lhs.false.398
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %209 = bitcast %struct.rtx_def* %208 to i32*
  %bf.load404 = load i32, i32* %209, align 8
  %bf.clear405 = and i32 %bf.load404, 65535
  %cmp406 = icmp eq i32 %bf.clear405, 54
  br i1 %cmp406, label %if.end.435, label %lor.lhs.false.408

lor.lhs.false.408:                                ; preds = %lor.lhs.false.403
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %211 = bitcast %struct.rtx_def* %210 to i32*
  %bf.load409 = load i32, i32* %211, align 8
  %bf.clear410 = and i32 %bf.load409, 65535
  %cmp411 = icmp eq i32 %bf.clear410, 55
  br i1 %cmp411, label %if.end.435, label %lor.lhs.false.413

lor.lhs.false.413:                                ; preds = %lor.lhs.false.408
  %212 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %213 = bitcast %struct.rtx_def* %212 to i32*
  %bf.load414 = load i32, i32* %213, align 8
  %bf.clear415 = and i32 %bf.load414, 65535
  %cmp416 = icmp eq i32 %bf.clear415, 58
  br i1 %cmp416, label %if.end.435, label %lor.lhs.false.418

lor.lhs.false.418:                                ; preds = %lor.lhs.false.413
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %215 = bitcast %struct.rtx_def* %214 to i32*
  %bf.load419 = load i32, i32* %215, align 8
  %bf.clear420 = and i32 %bf.load419, 65535
  %cmp421 = icmp eq i32 %bf.clear420, 134
  br i1 %cmp421, label %if.end.435, label %lor.lhs.false.423

lor.lhs.false.423:                                ; preds = %lor.lhs.false.418
  %216 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %217 = bitcast %struct.rtx_def* %216 to i32*
  %bf.load424 = load i32, i32* %217, align 8
  %bf.clear425 = and i32 %bf.load424, 65535
  %cmp426 = icmp eq i32 %bf.clear425, 56
  br i1 %cmp426, label %if.end.435, label %lor.lhs.false.428

lor.lhs.false.428:                                ; preds = %lor.lhs.false.423
  %218 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %219 = bitcast %struct.rtx_def* %218 to i32*
  %bf.load429 = load i32, i32* %219, align 8
  %bf.clear430 = and i32 %bf.load429, 65535
  %cmp431 = icmp eq i32 %bf.clear430, 140
  br i1 %cmp431, label %if.end.435, label %if.then.433

if.then.433:                                      ; preds = %lor.lhs.false.428
  %220 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call434 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %220, %struct.rtx_def* null)
  store %struct.rtx_def* %call434, %struct.rtx_def** %op0, align 8
  br label %if.end.435

if.end.435:                                       ; preds = %if.then.433, %lor.lhs.false.428, %lor.lhs.false.423, %lor.lhs.false.418, %lor.lhs.false.413, %lor.lhs.false.408, %lor.lhs.false.403, %lor.lhs.false.398, %land.lhs.true.393, %if.then.381
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %call436 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %221)
  store %struct.rtx_def* %call436, %struct.rtx_def** %op0, align 8
  %222 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %tobool437 = icmp ne %struct.rtx_def* %222, null
  br i1 %tobool437, label %if.then.438, label %if.end.443

if.then.438:                                      ; preds = %if.end.435
  %223 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp439 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %223, i32 0, i32 0
  %224 = load %struct.rtx_def*, %struct.rtx_def** %exp439, align 8
  %225 = bitcast %struct.rtx_def* %224 to i32*
  %bf.load440 = load i32, i32* %225, align 8
  %bf.clear441 = and i32 %bf.load440, 65535
  %226 = load i32, i32* %mode, align 4
  %227 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8
  %228 = load i32, i32* %mode, align 4
  %call442 = call %struct.rtx_def* @simplify_unary_operation(i32 %bf.clear441, i32 %226, %struct.rtx_def* %227, i32 %228)
  store %struct.rtx_def* %call442, %struct.rtx_def** %new, align 8
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.438, %if.end.435
  br label %if.end.881

if.else:                                          ; preds = %land.lhs.true.367, %land.lhs.true.354, %land.lhs.true.345, %land.lhs.true.339, %land.lhs.true.333, %for.body.321
  %229 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp444 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %229, i32 0, i32 0
  %230 = load %struct.rtx_def*, %struct.rtx_def** %exp444, align 8
  %231 = bitcast %struct.rtx_def* %230 to i32*
  %bf.load445 = load i32, i32* %231, align 8
  %bf.clear446 = and i32 %bf.load445, 65535
  %idxprom447 = sext i32 %bf.clear446 to i64
  %arrayidx448 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom447
  %232 = load i8, i8* %arrayidx448, align 1
  %conv449 = sext i8 %232 to i32
  %cmp450 = icmp eq i32 %conv449, 50
  br i1 %cmp450, label %land.lhs.true.461, label %lor.lhs.false.452

lor.lhs.false.452:                                ; preds = %if.else
  %233 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp453 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %233, i32 0, i32 0
  %234 = load %struct.rtx_def*, %struct.rtx_def** %exp453, align 8
  %235 = bitcast %struct.rtx_def* %234 to i32*
  %bf.load454 = load i32, i32* %235, align 8
  %bf.clear455 = and i32 %bf.load454, 65535
  %idxprom456 = sext i32 %bf.clear455 to i64
  %arrayidx457 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom456
  %236 = load i8, i8* %arrayidx457, align 1
  %conv458 = sext i8 %236 to i32
  %cmp459 = icmp eq i32 %conv458, 99
  br i1 %cmp459, label %land.lhs.true.461, label %if.else.840

land.lhs.true.461:                                ; preds = %lor.lhs.false.452, %if.else
  %237 = load i32, i32* %eltcode, align 4
  %cmp462 = icmp ne i32 %237, 79
  br i1 %cmp462, label %land.lhs.true.464, label %if.else.840

land.lhs.true.464:                                ; preds = %land.lhs.true.461
  %238 = load i32, i32* %eltcode, align 4
  %cmp465 = icmp ne i32 %238, 80
  br i1 %cmp465, label %land.lhs.true.467, label %if.else.840

land.lhs.true.467:                                ; preds = %land.lhs.true.464
  %239 = load i32, i32* %eltcode, align 4
  %cmp468 = icmp ne i32 %239, 81
  br i1 %cmp468, label %land.lhs.true.470, label %if.else.840

land.lhs.true.470:                                ; preds = %land.lhs.true.467
  %240 = load i32, i32* %eltcode, align 4
  %cmp471 = icmp ne i32 %240, 82
  br i1 %cmp471, label %land.lhs.true.473, label %if.else.840

land.lhs.true.473:                                ; preds = %land.lhs.true.470
  %241 = load i32, i32* %eltcode, align 4
  %cmp474 = icmp ne i32 %241, 89
  br i1 %cmp474, label %land.lhs.true.476, label %if.else.840

land.lhs.true.476:                                ; preds = %land.lhs.true.473
  %242 = load i32, i32* %eltcode, align 4
  %cmp477 = icmp ne i32 %242, 90
  br i1 %cmp477, label %land.lhs.true.479, label %if.else.840

land.lhs.true.479:                                ; preds = %land.lhs.true.476
  %243 = load i32, i32* %eltcode, align 4
  %cmp480 = icmp ne i32 %243, 88
  br i1 %cmp480, label %land.lhs.true.482, label %if.else.840

land.lhs.true.482:                                ; preds = %land.lhs.true.479
  %244 = load i32, i32* %eltcode, align 4
  %cmp483 = icmp ne i32 %244, 91
  br i1 %cmp483, label %land.lhs.true.485, label %if.else.840

land.lhs.true.485:                                ; preds = %land.lhs.true.482
  %245 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp486 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %245, i32 0, i32 0
  %246 = load %struct.rtx_def*, %struct.rtx_def** %exp486, align 8
  %fld487 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1
  %arrayidx488 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld487, i32 0, i64 0
  %rtx489 = bitcast %union.rtunion_def* %arrayidx488 to %struct.rtx_def**
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rtx489, align 8
  %248 = bitcast %struct.rtx_def* %247 to i32*
  %bf.load490 = load i32, i32* %248, align 8
  %bf.clear491 = and i32 %bf.load490, 65535
  %cmp492 = icmp eq i32 %bf.clear491, 63
  br i1 %cmp492, label %land.lhs.true.494, label %lor.lhs.false.507

land.lhs.true.494:                                ; preds = %land.lhs.true.485
  %249 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp495 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %249, i32 0, i32 0
  %250 = load %struct.rtx_def*, %struct.rtx_def** %exp495, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 0
  %rtx498 = bitcast %union.rtunion_def* %arrayidx497 to %struct.rtx_def**
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rtx498, align 8
  %fld499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1
  %arrayidx500 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld499, i32 0, i64 0
  %rtx501 = bitcast %union.rtunion_def* %arrayidx500 to %struct.rtx_def**
  %252 = load %struct.rtx_def*, %struct.rtx_def** %rtx501, align 8
  %253 = bitcast %struct.rtx_def* %252 to i32*
  %bf.load502 = load i32, i32* %253, align 8
  %bf.lshr503 = lshr i32 %bf.load502, 16
  %bf.clear504 = and i32 %bf.lshr503, 255
  %254 = load i32, i32* %mode, align 4
  %cmp505 = icmp eq i32 %bf.clear504, %254
  br i1 %cmp505, label %land.lhs.true.579, label %lor.lhs.false.507

lor.lhs.false.507:                                ; preds = %land.lhs.true.494, %land.lhs.true.485
  %255 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp508 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %255, i32 0, i32 0
  %256 = load %struct.rtx_def*, %struct.rtx_def** %exp508, align 8
  %fld509 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1
  %arrayidx510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld509, i32 0, i64 0
  %rtx511 = bitcast %union.rtunion_def* %arrayidx510 to %struct.rtx_def**
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rtx511, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load512 = load i32, i32* %258, align 8
  %bf.clear513 = and i32 %bf.load512, 65535
  %cmp514 = icmp eq i32 %bf.clear513, 67
  br i1 %cmp514, label %land.lhs.true.579, label %lor.lhs.false.516

lor.lhs.false.516:                                ; preds = %lor.lhs.false.507
  %259 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp517 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %259, i32 0, i32 0
  %260 = load %struct.rtx_def*, %struct.rtx_def** %exp517, align 8
  %fld518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i32 0, i64 0
  %rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**
  %261 = load %struct.rtx_def*, %struct.rtx_def** %rtx520, align 8
  %262 = bitcast %struct.rtx_def* %261 to i32*
  %bf.load521 = load i32, i32* %262, align 8
  %bf.clear522 = and i32 %bf.load521, 65535
  %cmp523 = icmp eq i32 %bf.clear522, 68
  br i1 %cmp523, label %land.lhs.true.579, label %lor.lhs.false.525

lor.lhs.false.525:                                ; preds = %lor.lhs.false.516
  %263 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp526 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %263, i32 0, i32 0
  %264 = load %struct.rtx_def*, %struct.rtx_def** %exp526, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 0
  %rtx529 = bitcast %union.rtunion_def* %arrayidx528 to %struct.rtx_def**
  %265 = load %struct.rtx_def*, %struct.rtx_def** %rtx529, align 8
  %266 = bitcast %struct.rtx_def* %265 to i32*
  %bf.load530 = load i32, i32* %266, align 8
  %bf.clear531 = and i32 %bf.load530, 65535
  %cmp532 = icmp eq i32 %bf.clear531, 54
  br i1 %cmp532, label %land.lhs.true.579, label %lor.lhs.false.534

lor.lhs.false.534:                                ; preds = %lor.lhs.false.525
  %267 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp535 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %267, i32 0, i32 0
  %268 = load %struct.rtx_def*, %struct.rtx_def** %exp535, align 8
  %fld536 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1
  %arrayidx537 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld536, i32 0, i64 0
  %rtx538 = bitcast %union.rtunion_def* %arrayidx537 to %struct.rtx_def**
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rtx538, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load539 = load i32, i32* %270, align 8
  %bf.clear540 = and i32 %bf.load539, 65535
  %cmp541 = icmp eq i32 %bf.clear540, 55
  br i1 %cmp541, label %land.lhs.true.579, label %lor.lhs.false.543

lor.lhs.false.543:                                ; preds = %lor.lhs.false.534
  %271 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp544 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %271, i32 0, i32 0
  %272 = load %struct.rtx_def*, %struct.rtx_def** %exp544, align 8
  %fld545 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1
  %arrayidx546 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld545, i32 0, i64 0
  %rtx547 = bitcast %union.rtunion_def* %arrayidx546 to %struct.rtx_def**
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rtx547, align 8
  %274 = bitcast %struct.rtx_def* %273 to i32*
  %bf.load548 = load i32, i32* %274, align 8
  %bf.clear549 = and i32 %bf.load548, 65535
  %cmp550 = icmp eq i32 %bf.clear549, 58
  br i1 %cmp550, label %land.lhs.true.579, label %lor.lhs.false.552

lor.lhs.false.552:                                ; preds = %lor.lhs.false.543
  %275 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp553 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %275, i32 0, i32 0
  %276 = load %struct.rtx_def*, %struct.rtx_def** %exp553, align 8
  %fld554 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx555 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld554, i32 0, i64 0
  %rtx556 = bitcast %union.rtunion_def* %arrayidx555 to %struct.rtx_def**
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rtx556, align 8
  %278 = bitcast %struct.rtx_def* %277 to i32*
  %bf.load557 = load i32, i32* %278, align 8
  %bf.clear558 = and i32 %bf.load557, 65535
  %cmp559 = icmp eq i32 %bf.clear558, 134
  br i1 %cmp559, label %land.lhs.true.579, label %lor.lhs.false.561

lor.lhs.false.561:                                ; preds = %lor.lhs.false.552
  %279 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp562 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %279, i32 0, i32 0
  %280 = load %struct.rtx_def*, %struct.rtx_def** %exp562, align 8
  %fld563 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx564 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld563, i32 0, i64 0
  %rtx565 = bitcast %union.rtunion_def* %arrayidx564 to %struct.rtx_def**
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rtx565, align 8
  %282 = bitcast %struct.rtx_def* %281 to i32*
  %bf.load566 = load i32, i32* %282, align 8
  %bf.clear567 = and i32 %bf.load566, 65535
  %cmp568 = icmp eq i32 %bf.clear567, 56
  br i1 %cmp568, label %land.lhs.true.579, label %lor.lhs.false.570

lor.lhs.false.570:                                ; preds = %lor.lhs.false.561
  %283 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp571 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %283, i32 0, i32 0
  %284 = load %struct.rtx_def*, %struct.rtx_def** %exp571, align 8
  %fld572 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %284, i32 0, i32 1
  %arrayidx573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld572, i32 0, i64 0
  %rtx574 = bitcast %union.rtunion_def* %arrayidx573 to %struct.rtx_def**
  %285 = load %struct.rtx_def*, %struct.rtx_def** %rtx574, align 8
  %286 = bitcast %struct.rtx_def* %285 to i32*
  %bf.load575 = load i32, i32* %286, align 8
  %bf.clear576 = and i32 %bf.load575, 65535
  %cmp577 = icmp eq i32 %bf.clear576, 140
  br i1 %cmp577, label %land.lhs.true.579, label %if.else.840

land.lhs.true.579:                                ; preds = %lor.lhs.false.570, %lor.lhs.false.561, %lor.lhs.false.552, %lor.lhs.false.543, %lor.lhs.false.534, %lor.lhs.false.525, %lor.lhs.false.516, %lor.lhs.false.507, %land.lhs.true.494
  %287 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp580 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %287, i32 0, i32 0
  %288 = load %struct.rtx_def*, %struct.rtx_def** %exp580, align 8
  %fld581 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1
  %arrayidx582 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld581, i32 0, i64 1
  %rtx583 = bitcast %union.rtunion_def* %arrayidx582 to %struct.rtx_def**
  %289 = load %struct.rtx_def*, %struct.rtx_def** %rtx583, align 8
  %290 = bitcast %struct.rtx_def* %289 to i32*
  %bf.load584 = load i32, i32* %290, align 8
  %bf.clear585 = and i32 %bf.load584, 65535
  %cmp586 = icmp eq i32 %bf.clear585, 63
  br i1 %cmp586, label %land.lhs.true.588, label %lor.lhs.false.601

land.lhs.true.588:                                ; preds = %land.lhs.true.579
  %291 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp589 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %291, i32 0, i32 0
  %292 = load %struct.rtx_def*, %struct.rtx_def** %exp589, align 8
  %fld590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %292, i32 0, i32 1
  %arrayidx591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld590, i32 0, i64 1
  %rtx592 = bitcast %union.rtunion_def* %arrayidx591 to %struct.rtx_def**
  %293 = load %struct.rtx_def*, %struct.rtx_def** %rtx592, align 8
  %fld593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1
  %arrayidx594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld593, i32 0, i64 0
  %rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**
  %294 = load %struct.rtx_def*, %struct.rtx_def** %rtx595, align 8
  %295 = bitcast %struct.rtx_def* %294 to i32*
  %bf.load596 = load i32, i32* %295, align 8
  %bf.lshr597 = lshr i32 %bf.load596, 16
  %bf.clear598 = and i32 %bf.lshr597, 255
  %296 = load i32, i32* %mode, align 4
  %cmp599 = icmp eq i32 %bf.clear598, %296
  br i1 %cmp599, label %if.then.673, label %lor.lhs.false.601

lor.lhs.false.601:                                ; preds = %land.lhs.true.588, %land.lhs.true.579
  %297 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp602 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %297, i32 0, i32 0
  %298 = load %struct.rtx_def*, %struct.rtx_def** %exp602, align 8
  %fld603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1
  %arrayidx604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld603, i32 0, i64 1
  %rtx605 = bitcast %union.rtunion_def* %arrayidx604 to %struct.rtx_def**
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rtx605, align 8
  %300 = bitcast %struct.rtx_def* %299 to i32*
  %bf.load606 = load i32, i32* %300, align 8
  %bf.clear607 = and i32 %bf.load606, 65535
  %cmp608 = icmp eq i32 %bf.clear607, 67
  br i1 %cmp608, label %if.then.673, label %lor.lhs.false.610

lor.lhs.false.610:                                ; preds = %lor.lhs.false.601
  %301 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp611 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %301, i32 0, i32 0
  %302 = load %struct.rtx_def*, %struct.rtx_def** %exp611, align 8
  %fld612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld612, i32 0, i64 1
  %rtx614 = bitcast %union.rtunion_def* %arrayidx613 to %struct.rtx_def**
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rtx614, align 8
  %304 = bitcast %struct.rtx_def* %303 to i32*
  %bf.load615 = load i32, i32* %304, align 8
  %bf.clear616 = and i32 %bf.load615, 65535
  %cmp617 = icmp eq i32 %bf.clear616, 68
  br i1 %cmp617, label %if.then.673, label %lor.lhs.false.619

lor.lhs.false.619:                                ; preds = %lor.lhs.false.610
  %305 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp620 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %305, i32 0, i32 0
  %306 = load %struct.rtx_def*, %struct.rtx_def** %exp620, align 8
  %fld621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1
  %arrayidx622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld621, i32 0, i64 1
  %rtx623 = bitcast %union.rtunion_def* %arrayidx622 to %struct.rtx_def**
  %307 = load %struct.rtx_def*, %struct.rtx_def** %rtx623, align 8
  %308 = bitcast %struct.rtx_def* %307 to i32*
  %bf.load624 = load i32, i32* %308, align 8
  %bf.clear625 = and i32 %bf.load624, 65535
  %cmp626 = icmp eq i32 %bf.clear625, 54
  br i1 %cmp626, label %if.then.673, label %lor.lhs.false.628

lor.lhs.false.628:                                ; preds = %lor.lhs.false.619
  %309 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp629 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %309, i32 0, i32 0
  %310 = load %struct.rtx_def*, %struct.rtx_def** %exp629, align 8
  %fld630 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1
  %arrayidx631 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld630, i32 0, i64 1
  %rtx632 = bitcast %union.rtunion_def* %arrayidx631 to %struct.rtx_def**
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rtx632, align 8
  %312 = bitcast %struct.rtx_def* %311 to i32*
  %bf.load633 = load i32, i32* %312, align 8
  %bf.clear634 = and i32 %bf.load633, 65535
  %cmp635 = icmp eq i32 %bf.clear634, 55
  br i1 %cmp635, label %if.then.673, label %lor.lhs.false.637

lor.lhs.false.637:                                ; preds = %lor.lhs.false.628
  %313 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp638 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %313, i32 0, i32 0
  %314 = load %struct.rtx_def*, %struct.rtx_def** %exp638, align 8
  %fld639 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1
  %arrayidx640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld639, i32 0, i64 1
  %rtx641 = bitcast %union.rtunion_def* %arrayidx640 to %struct.rtx_def**
  %315 = load %struct.rtx_def*, %struct.rtx_def** %rtx641, align 8
  %316 = bitcast %struct.rtx_def* %315 to i32*
  %bf.load642 = load i32, i32* %316, align 8
  %bf.clear643 = and i32 %bf.load642, 65535
  %cmp644 = icmp eq i32 %bf.clear643, 58
  br i1 %cmp644, label %if.then.673, label %lor.lhs.false.646

lor.lhs.false.646:                                ; preds = %lor.lhs.false.637
  %317 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp647 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %317, i32 0, i32 0
  %318 = load %struct.rtx_def*, %struct.rtx_def** %exp647, align 8
  %fld648 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i32 0, i64 1
  %rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rtx650, align 8
  %320 = bitcast %struct.rtx_def* %319 to i32*
  %bf.load651 = load i32, i32* %320, align 8
  %bf.clear652 = and i32 %bf.load651, 65535
  %cmp653 = icmp eq i32 %bf.clear652, 134
  br i1 %cmp653, label %if.then.673, label %lor.lhs.false.655

lor.lhs.false.655:                                ; preds = %lor.lhs.false.646
  %321 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp656 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %321, i32 0, i32 0
  %322 = load %struct.rtx_def*, %struct.rtx_def** %exp656, align 8
  %fld657 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1
  %arrayidx658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld657, i32 0, i64 1
  %rtx659 = bitcast %union.rtunion_def* %arrayidx658 to %struct.rtx_def**
  %323 = load %struct.rtx_def*, %struct.rtx_def** %rtx659, align 8
  %324 = bitcast %struct.rtx_def* %323 to i32*
  %bf.load660 = load i32, i32* %324, align 8
  %bf.clear661 = and i32 %bf.load660, 65535
  %cmp662 = icmp eq i32 %bf.clear661, 56
  br i1 %cmp662, label %if.then.673, label %lor.lhs.false.664

lor.lhs.false.664:                                ; preds = %lor.lhs.false.655
  %325 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp665 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %325, i32 0, i32 0
  %326 = load %struct.rtx_def*, %struct.rtx_def** %exp665, align 8
  %fld666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %326, i32 0, i32 1
  %arrayidx667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld666, i32 0, i64 1
  %rtx668 = bitcast %union.rtunion_def* %arrayidx667 to %struct.rtx_def**
  %327 = load %struct.rtx_def*, %struct.rtx_def** %rtx668, align 8
  %328 = bitcast %struct.rtx_def* %327 to i32*
  %bf.load669 = load i32, i32* %328, align 8
  %bf.clear670 = and i32 %bf.load669, 65535
  %cmp671 = icmp eq i32 %bf.clear670, 140
  br i1 %cmp671, label %if.then.673, label %if.else.840

if.then.673:                                      ; preds = %lor.lhs.false.664, %lor.lhs.false.655, %lor.lhs.false.646, %lor.lhs.false.637, %lor.lhs.false.628, %lor.lhs.false.619, %lor.lhs.false.610, %lor.lhs.false.601, %land.lhs.true.588
  %329 = load i32, i32* %mode, align 4
  %330 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp675 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %330, i32 0, i32 0
  %331 = load %struct.rtx_def*, %struct.rtx_def** %exp675, align 8
  %fld676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1
  %arrayidx677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i32 0, i64 0
  %rtx678 = bitcast %union.rtunion_def* %arrayidx677 to %struct.rtx_def**
  %332 = load %struct.rtx_def*, %struct.rtx_def** %rtx678, align 8
  %call679 = call %struct.rtx_def* @gen_lowpart_common(i32 %329, %struct.rtx_def* %332)
  store %struct.rtx_def* %call679, %struct.rtx_def** %op0674, align 8
  %333 = load i32, i32* %mode, align 4
  %334 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp680 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %334, i32 0, i32 0
  %335 = load %struct.rtx_def*, %struct.rtx_def** %exp680, align 8
  %fld681 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1
  %arrayidx682 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld681, i32 0, i64 1
  %rtx683 = bitcast %union.rtunion_def* %arrayidx682 to %struct.rtx_def**
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rtx683, align 8
  %call684 = call %struct.rtx_def* @gen_lowpart_common(i32 %333, %struct.rtx_def* %336)
  store %struct.rtx_def* %call684, %struct.rtx_def** %op1, align 8
  %337 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %tobool685 = icmp ne %struct.rtx_def* %337, null
  br i1 %tobool685, label %land.lhs.true.686, label %if.end.733

land.lhs.true.686:                                ; preds = %if.then.673
  %338 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %339 = bitcast %struct.rtx_def* %338 to i32*
  %bf.load687 = load i32, i32* %339, align 8
  %bf.clear688 = and i32 %bf.load687, 65535
  %cmp689 = icmp ne i32 %bf.clear688, 61
  br i1 %cmp689, label %land.lhs.true.691, label %if.end.733

land.lhs.true.691:                                ; preds = %land.lhs.true.686
  %340 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %341 = bitcast %struct.rtx_def* %340 to i32*
  %bf.load692 = load i32, i32* %341, align 8
  %bf.clear693 = and i32 %bf.load692, 65535
  %cmp694 = icmp eq i32 %bf.clear693, 67
  br i1 %cmp694, label %if.end.733, label %lor.lhs.false.696

lor.lhs.false.696:                                ; preds = %land.lhs.true.691
  %342 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %343 = bitcast %struct.rtx_def* %342 to i32*
  %bf.load697 = load i32, i32* %343, align 8
  %bf.clear698 = and i32 %bf.load697, 65535
  %cmp699 = icmp eq i32 %bf.clear698, 68
  br i1 %cmp699, label %if.end.733, label %lor.lhs.false.701

lor.lhs.false.701:                                ; preds = %lor.lhs.false.696
  %344 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %345 = bitcast %struct.rtx_def* %344 to i32*
  %bf.load702 = load i32, i32* %345, align 8
  %bf.clear703 = and i32 %bf.load702, 65535
  %cmp704 = icmp eq i32 %bf.clear703, 54
  br i1 %cmp704, label %if.end.733, label %lor.lhs.false.706

lor.lhs.false.706:                                ; preds = %lor.lhs.false.701
  %346 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %347 = bitcast %struct.rtx_def* %346 to i32*
  %bf.load707 = load i32, i32* %347, align 8
  %bf.clear708 = and i32 %bf.load707, 65535
  %cmp709 = icmp eq i32 %bf.clear708, 55
  br i1 %cmp709, label %if.end.733, label %lor.lhs.false.711

lor.lhs.false.711:                                ; preds = %lor.lhs.false.706
  %348 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %349 = bitcast %struct.rtx_def* %348 to i32*
  %bf.load712 = load i32, i32* %349, align 8
  %bf.clear713 = and i32 %bf.load712, 65535
  %cmp714 = icmp eq i32 %bf.clear713, 58
  br i1 %cmp714, label %if.end.733, label %lor.lhs.false.716

lor.lhs.false.716:                                ; preds = %lor.lhs.false.711
  %350 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %351 = bitcast %struct.rtx_def* %350 to i32*
  %bf.load717 = load i32, i32* %351, align 8
  %bf.clear718 = and i32 %bf.load717, 65535
  %cmp719 = icmp eq i32 %bf.clear718, 134
  br i1 %cmp719, label %if.end.733, label %lor.lhs.false.721

lor.lhs.false.721:                                ; preds = %lor.lhs.false.716
  %352 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %353 = bitcast %struct.rtx_def* %352 to i32*
  %bf.load722 = load i32, i32* %353, align 8
  %bf.clear723 = and i32 %bf.load722, 65535
  %cmp724 = icmp eq i32 %bf.clear723, 56
  br i1 %cmp724, label %if.end.733, label %lor.lhs.false.726

lor.lhs.false.726:                                ; preds = %lor.lhs.false.721
  %354 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %355 = bitcast %struct.rtx_def* %354 to i32*
  %bf.load727 = load i32, i32* %355, align 8
  %bf.clear728 = and i32 %bf.load727, 65535
  %cmp729 = icmp eq i32 %bf.clear728, 140
  br i1 %cmp729, label %if.end.733, label %if.then.731

if.then.731:                                      ; preds = %lor.lhs.false.726
  %356 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %call732 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %356, %struct.rtx_def* null)
  store %struct.rtx_def* %call732, %struct.rtx_def** %op0674, align 8
  br label %if.end.733

if.end.733:                                       ; preds = %if.then.731, %lor.lhs.false.726, %lor.lhs.false.721, %lor.lhs.false.716, %lor.lhs.false.711, %lor.lhs.false.706, %lor.lhs.false.701, %lor.lhs.false.696, %land.lhs.true.691, %land.lhs.true.686, %if.then.673
  %357 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %tobool734 = icmp ne %struct.rtx_def* %357, null
  br i1 %tobool734, label %if.then.735, label %if.end.737

if.then.735:                                      ; preds = %if.end.733
  %358 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %call736 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %358)
  store %struct.rtx_def* %call736, %struct.rtx_def** %op0674, align 8
  br label %if.end.737

if.end.737:                                       ; preds = %if.then.735, %if.end.733
  %359 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %tobool738 = icmp ne %struct.rtx_def* %359, null
  br i1 %tobool738, label %land.lhs.true.739, label %if.end.786

land.lhs.true.739:                                ; preds = %if.end.737
  %360 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %361 = bitcast %struct.rtx_def* %360 to i32*
  %bf.load740 = load i32, i32* %361, align 8
  %bf.clear741 = and i32 %bf.load740, 65535
  %cmp742 = icmp ne i32 %bf.clear741, 61
  br i1 %cmp742, label %land.lhs.true.744, label %if.end.786

land.lhs.true.744:                                ; preds = %land.lhs.true.739
  %362 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %363 = bitcast %struct.rtx_def* %362 to i32*
  %bf.load745 = load i32, i32* %363, align 8
  %bf.clear746 = and i32 %bf.load745, 65535
  %cmp747 = icmp eq i32 %bf.clear746, 67
  br i1 %cmp747, label %if.end.786, label %lor.lhs.false.749

lor.lhs.false.749:                                ; preds = %land.lhs.true.744
  %364 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %365 = bitcast %struct.rtx_def* %364 to i32*
  %bf.load750 = load i32, i32* %365, align 8
  %bf.clear751 = and i32 %bf.load750, 65535
  %cmp752 = icmp eq i32 %bf.clear751, 68
  br i1 %cmp752, label %if.end.786, label %lor.lhs.false.754

lor.lhs.false.754:                                ; preds = %lor.lhs.false.749
  %366 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %367 = bitcast %struct.rtx_def* %366 to i32*
  %bf.load755 = load i32, i32* %367, align 8
  %bf.clear756 = and i32 %bf.load755, 65535
  %cmp757 = icmp eq i32 %bf.clear756, 54
  br i1 %cmp757, label %if.end.786, label %lor.lhs.false.759

lor.lhs.false.759:                                ; preds = %lor.lhs.false.754
  %368 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %369 = bitcast %struct.rtx_def* %368 to i32*
  %bf.load760 = load i32, i32* %369, align 8
  %bf.clear761 = and i32 %bf.load760, 65535
  %cmp762 = icmp eq i32 %bf.clear761, 55
  br i1 %cmp762, label %if.end.786, label %lor.lhs.false.764

lor.lhs.false.764:                                ; preds = %lor.lhs.false.759
  %370 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %371 = bitcast %struct.rtx_def* %370 to i32*
  %bf.load765 = load i32, i32* %371, align 8
  %bf.clear766 = and i32 %bf.load765, 65535
  %cmp767 = icmp eq i32 %bf.clear766, 58
  br i1 %cmp767, label %if.end.786, label %lor.lhs.false.769

lor.lhs.false.769:                                ; preds = %lor.lhs.false.764
  %372 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %373 = bitcast %struct.rtx_def* %372 to i32*
  %bf.load770 = load i32, i32* %373, align 8
  %bf.clear771 = and i32 %bf.load770, 65535
  %cmp772 = icmp eq i32 %bf.clear771, 134
  br i1 %cmp772, label %if.end.786, label %lor.lhs.false.774

lor.lhs.false.774:                                ; preds = %lor.lhs.false.769
  %374 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %375 = bitcast %struct.rtx_def* %374 to i32*
  %bf.load775 = load i32, i32* %375, align 8
  %bf.clear776 = and i32 %bf.load775, 65535
  %cmp777 = icmp eq i32 %bf.clear776, 56
  br i1 %cmp777, label %if.end.786, label %lor.lhs.false.779

lor.lhs.false.779:                                ; preds = %lor.lhs.false.774
  %376 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %377 = bitcast %struct.rtx_def* %376 to i32*
  %bf.load780 = load i32, i32* %377, align 8
  %bf.clear781 = and i32 %bf.load780, 65535
  %cmp782 = icmp eq i32 %bf.clear781, 140
  br i1 %cmp782, label %if.end.786, label %if.then.784

if.then.784:                                      ; preds = %lor.lhs.false.779
  %378 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call785 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %378, %struct.rtx_def* null)
  store %struct.rtx_def* %call785, %struct.rtx_def** %op1, align 8
  br label %if.end.786

if.end.786:                                       ; preds = %if.then.784, %lor.lhs.false.779, %lor.lhs.false.774, %lor.lhs.false.769, %lor.lhs.false.764, %lor.lhs.false.759, %lor.lhs.false.754, %lor.lhs.false.749, %land.lhs.true.744, %land.lhs.true.739, %if.end.737
  %379 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %tobool787 = icmp ne %struct.rtx_def* %379, null
  br i1 %tobool787, label %if.then.788, label %if.end.790

if.then.788:                                      ; preds = %if.end.786
  %380 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call789 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %380)
  store %struct.rtx_def* %call789, %struct.rtx_def** %op1, align 8
  br label %if.end.790

if.end.790:                                       ; preds = %if.then.788, %if.end.786
  %381 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %tobool791 = icmp ne %struct.rtx_def* %381, null
  br i1 %tobool791, label %land.lhs.true.792, label %if.else.829

land.lhs.true.792:                                ; preds = %if.end.790
  %382 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %tobool793 = icmp ne %struct.rtx_def* %382, null
  br i1 %tobool793, label %land.lhs.true.794, label %if.else.829

land.lhs.true.794:                                ; preds = %land.lhs.true.792
  %383 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp795 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %383, i32 0, i32 0
  %384 = load %struct.rtx_def*, %struct.rtx_def** %exp795, align 8
  %385 = bitcast %struct.rtx_def* %384 to i32*
  %bf.load796 = load i32, i32* %385, align 8
  %bf.clear797 = and i32 %bf.load796, 65535
  %cmp798 = icmp eq i32 %bf.clear797, 87
  br i1 %cmp798, label %land.lhs.true.800, label %if.else.829

land.lhs.true.800:                                ; preds = %land.lhs.true.794
  %386 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %387 = bitcast %struct.rtx_def* %386 to i32*
  %bf.load801 = load i32, i32* %387, align 8
  %bf.clear802 = and i32 %bf.load801, 65535
  %cmp803 = icmp eq i32 %bf.clear802, 54
  br i1 %cmp803, label %land.lhs.true.805, label %if.else.829

land.lhs.true.805:                                ; preds = %land.lhs.true.800
  %388 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld806 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1
  %arrayidx807 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld806, i32 0, i64 0
  %rtwint = bitcast %union.rtunion_def* %arrayidx807 to i64*
  %389 = load i64, i64* %rtwint, align 8
  %390 = load i32, i32* %mode, align 4
  %idxprom808 = sext i32 %390 to i64
  %arrayidx809 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom808
  %391 = load i16, i16* %arrayidx809, align 2
  %conv810 = zext i16 %391 to i64
  %cmp811 = icmp sge i64 %389, %conv810
  br i1 %cmp811, label %if.then.813, label %if.else.829

if.then.813:                                      ; preds = %land.lhs.true.805
  %392 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %fld814 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1
  %arrayidx815 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld814, i32 0, i64 0
  %rtwint816 = bitcast %union.rtunion_def* %arrayidx815 to i64*
  %393 = load i64, i64* %rtwint816, align 8
  %394 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp817 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %394, i32 0, i32 0
  %395 = load %struct.rtx_def*, %struct.rtx_def** %exp817, align 8
  %396 = bitcast %struct.rtx_def* %395 to i32*
  %bf.load818 = load i32, i32* %396, align 8
  %bf.lshr819 = lshr i32 %bf.load818, 16
  %bf.clear820 = and i32 %bf.lshr819, 255
  %idxprom821 = sext i32 %bf.clear820 to i64
  %arrayidx822 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom821
  %397 = load i16, i16* %arrayidx822, align 2
  %conv823 = zext i16 %397 to i64
  %cmp824 = icmp slt i64 %393, %conv823
  br i1 %cmp824, label %if.then.826, label %if.else.827

if.then.826:                                      ; preds = %if.then.813
  %398 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %398, %struct.rtx_def** %new, align 8
  br label %if.end.828

if.else.827:                                      ; preds = %if.then.813
  store %struct.rtx_def* null, %struct.rtx_def** %new, align 8
  br label %if.end.828

if.end.828:                                       ; preds = %if.else.827, %if.then.826
  br label %if.end.839

if.else.829:                                      ; preds = %land.lhs.true.805, %land.lhs.true.800, %land.lhs.true.794, %land.lhs.true.792, %if.end.790
  %399 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %tobool830 = icmp ne %struct.rtx_def* %399, null
  br i1 %tobool830, label %land.lhs.true.831, label %if.end.838

land.lhs.true.831:                                ; preds = %if.else.829
  %400 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %tobool832 = icmp ne %struct.rtx_def* %400, null
  br i1 %tobool832, label %if.then.833, label %if.end.838

if.then.833:                                      ; preds = %land.lhs.true.831
  %401 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp834 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %401, i32 0, i32 0
  %402 = load %struct.rtx_def*, %struct.rtx_def** %exp834, align 8
  %403 = bitcast %struct.rtx_def* %402 to i32*
  %bf.load835 = load i32, i32* %403, align 8
  %bf.clear836 = and i32 %bf.load835, 65535
  %404 = load i32, i32* %mode, align 4
  %405 = load %struct.rtx_def*, %struct.rtx_def** %op0674, align 8
  %406 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8
  %call837 = call %struct.rtx_def* @simplify_binary_operation(i32 %bf.clear836, i32 %404, %struct.rtx_def* %405, %struct.rtx_def* %406)
  store %struct.rtx_def* %call837, %struct.rtx_def** %new, align 8
  br label %if.end.838

if.end.838:                                       ; preds = %if.then.833, %land.lhs.true.831, %if.else.829
  br label %if.end.839

if.end.839:                                       ; preds = %if.end.838, %if.end.828
  br label %if.end.880

if.else.840:                                      ; preds = %lor.lhs.false.664, %lor.lhs.false.570, %land.lhs.true.482, %land.lhs.true.479, %land.lhs.true.476, %land.lhs.true.473, %land.lhs.true.470, %land.lhs.true.467, %land.lhs.true.464, %land.lhs.true.461, %lor.lhs.false.452
  %407 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp841 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %407, i32 0, i32 0
  %408 = load %struct.rtx_def*, %struct.rtx_def** %exp841, align 8
  %409 = bitcast %struct.rtx_def* %408 to i32*
  %bf.load842 = load i32, i32* %409, align 8
  %bf.clear843 = and i32 %bf.load842, 65535
  %cmp844 = icmp eq i32 %bf.clear843, 63
  br i1 %cmp844, label %land.lhs.true.846, label %if.end.879

land.lhs.true.846:                                ; preds = %if.else.840
  %410 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp847 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %410, i32 0, i32 0
  %411 = load %struct.rtx_def*, %struct.rtx_def** %exp847, align 8
  %fld848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %411, i32 0, i32 1
  %arrayidx849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld848, i32 0, i64 0
  %rtx850 = bitcast %union.rtunion_def* %arrayidx849 to %struct.rtx_def**
  %412 = load %struct.rtx_def*, %struct.rtx_def** %rtx850, align 8
  %413 = bitcast %struct.rtx_def* %412 to i32*
  %bf.load851 = load i32, i32* %413, align 8
  %bf.lshr852 = lshr i32 %bf.load851, 16
  %bf.clear853 = and i32 %bf.lshr852, 255
  %414 = load i32, i32* %mode, align 4
  %cmp854 = icmp eq i32 %bf.clear853, %414
  br i1 %cmp854, label %land.lhs.true.856, label %if.end.879

land.lhs.true.856:                                ; preds = %land.lhs.true.846
  %415 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %416 = bitcast %struct.rtx_def* %415 to i32*
  %bf.load857 = load i32, i32* %416, align 8
  %bf.lshr858 = lshr i32 %bf.load857, 16
  %bf.clear859 = and i32 %bf.lshr858, 255
  %idxprom860 = sext i32 %bf.clear859 to i64
  %arrayidx861 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom860
  %417 = load i8, i8* %arrayidx861, align 1
  %conv862 = zext i8 %417 to i32
  %418 = load i32, i32* @target_flags, align 4
  %and863 = and i32 %418, 33554432
  %tobool864 = icmp ne i32 %and863, 0
  %cond865 = select i1 %tobool864, i32 8, i32 4
  %cmp866 = icmp sle i32 %conv862, %cond865
  br i1 %cmp866, label %land.lhs.true.868, label %if.end.879

land.lhs.true.868:                                ; preds = %land.lhs.true.856
  %419 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp869 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %419, i32 0, i32 0
  %420 = load %struct.rtx_def*, %struct.rtx_def** %exp869, align 8
  %421 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp870 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %421, i32 0, i32 0
  %422 = load %struct.rtx_def*, %struct.rtx_def** %exp870, align 8
  %call871 = call i32 @exp_equiv_p(%struct.rtx_def* %420, %struct.rtx_def* %422, i32 1, i32 0)
  %tobool872 = icmp ne i32 %call871, 0
  br i1 %tobool872, label %if.then.873, label %if.end.879

if.then.873:                                      ; preds = %land.lhs.true.868
  %423 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %exp874 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %423, i32 0, i32 0
  %424 = load %struct.rtx_def*, %struct.rtx_def** %exp874, align 8
  %fld875 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %424, i32 0, i32 1
  %arrayidx876 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld875, i32 0, i64 0
  %rtx877 = bitcast %union.rtunion_def* %arrayidx876 to %struct.rtx_def**
  %425 = load %struct.rtx_def*, %struct.rtx_def** %rtx877, align 8
  %call878 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %425)
  store %struct.rtx_def* %call878, %struct.rtx_def** %new, align 8
  br label %if.end.879

if.end.879:                                       ; preds = %if.then.873, %land.lhs.true.868, %land.lhs.true.856, %land.lhs.true.846, %if.else.840
  br label %if.end.880

if.end.880:                                       ; preds = %if.end.879, %if.end.839
  br label %if.end.881

if.end.881:                                       ; preds = %if.end.880, %if.end.443
  %426 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool882 = icmp ne %struct.rtx_def* %426, null
  br i1 %tobool882, label %if.then.883, label %if.end.884

if.then.883:                                      ; preds = %if.end.881
  %427 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %427, %struct.rtx_def** %retval
  br label %return

if.end.884:                                       ; preds = %if.end.881
  br label %for.inc.885

for.inc.885:                                      ; preds = %if.end.884
  %428 = load %struct.table_elt*, %struct.table_elt** %elt274, align 8
  %next_same_value886 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %428, i32 0, i32 4
  %429 = load %struct.table_elt*, %struct.table_elt** %next_same_value886, align 8
  store %struct.table_elt* %429, %struct.table_elt** %elt274, align 8
  br label %for.cond.319

for.end.887:                                      ; preds = %for.cond.319
  br label %if.end.888

if.end.888:                                       ; preds = %for.end.887, %land.lhs.true.270, %land.lhs.true.258, %if.end.253
  %430 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %430, %struct.rtx_def** %retval
  br label %return

sw.bb.889:                                        ; preds = %if.end, %if.end
  %431 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld890 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %431, i32 0, i32 1
  %arrayidx891 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld890, i32 0, i64 0
  %rtx892 = bitcast %union.rtunion_def* %arrayidx891 to %struct.rtx_def**
  %432 = load %struct.rtx_def*, %struct.rtx_def** %rtx892, align 8
  %433 = load i32, i32* %code, align 4
  %call893 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %432, i32 %433)
  store %struct.rtx_def* %call893, %struct.rtx_def** %new, align 8
  %434 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool894 = icmp ne %struct.rtx_def* %434, null
  br i1 %tobool894, label %if.then.895, label %if.end.901

if.then.895:                                      ; preds = %sw.bb.889
  %435 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %435, i32 0, i32 1
  %arrayidx897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld896, i32 0, i64 0
  %rtx898 = bitcast %union.rtunion_def* %arrayidx897 to %struct.rtx_def**
  %436 = load %struct.rtx_def*, %struct.rtx_def** %rtx898, align 8
  %call899 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %436)
  %437 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call900 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call899, %struct.rtx_def* %437)
  store %struct.rtx_def* %call900, %struct.rtx_def** %retval
  br label %return

if.end.901:                                       ; preds = %sw.bb.889
  br label %sw.epilog

sw.bb.902:                                        ; preds = %if.end
  %438 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp903 = icmp ne %struct.rtx_def* %438, null
  br i1 %cmp903, label %if.then.905, label %if.end.912

if.then.905:                                      ; preds = %sw.bb.902
  %439 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %440 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld906 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %440, i32 0, i32 1
  %arrayidx907 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld906, i32 0, i64 0
  %rtx908 = bitcast %union.rtunion_def* %arrayidx907 to %struct.rtx_def**
  %441 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %442 = bitcast %struct.rtx_def* %441 to i32*
  %bf.load909 = load i32, i32* %442, align 8
  %bf.lshr910 = lshr i32 %bf.load909, 16
  %bf.clear911 = and i32 %bf.lshr910, 255
  call void @find_best_addr(%struct.rtx_def* %439, %struct.rtx_def** %rtx908, i32 %bf.clear911)
  br label %if.end.912

if.end.912:                                       ; preds = %if.then.905, %sw.bb.902
  %443 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld913 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %443, i32 0, i32 1
  %arrayidx914 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld913, i32 0, i64 0
  %rtx915 = bitcast %union.rtunion_def* %arrayidx914 to %struct.rtx_def**
  %444 = load %struct.rtx_def*, %struct.rtx_def** %rtx915, align 8
  %call916 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %444, %struct.rtx_def* null)
  store %struct.rtx_def* %call916, %struct.rtx_def** %addr, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %base, align 8
  store i64 0, i64* %offset, align 8
  %445 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %446 = bitcast %struct.rtx_def* %445 to i32*
  %bf.load917 = load i32, i32* %446, align 8
  %bf.clear918 = and i32 %bf.load917, 65535
  %cmp919 = icmp eq i32 %bf.clear918, 61
  br i1 %cmp919, label %land.lhs.true.921, label %if.end.974

land.lhs.true.921:                                ; preds = %if.end.912
  %447 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld922 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %447, i32 0, i32 1
  %arrayidx923 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld922, i32 0, i64 0
  %rtuint924 = bitcast %union.rtunion_def* %arrayidx923 to i32*
  %448 = load i32, i32* %rtuint924, align 4
  %449 = load i32, i32* @cached_regno, align 4
  %cmp925 = icmp eq i32 %448, %449
  br i1 %cmp925, label %land.lhs.true.927, label %cond.false.930

land.lhs.true.927:                                ; preds = %land.lhs.true.921
  %450 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool928 = icmp ne %struct.cse_reg_info* %450, null
  br i1 %tobool928, label %cond.true.929, label %cond.false.930

cond.true.929:                                    ; preds = %land.lhs.true.927
  %451 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.935

cond.false.930:                                   ; preds = %land.lhs.true.927, %land.lhs.true.921
  %452 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld931 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %452, i32 0, i32 1
  %arrayidx932 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld931, i32 0, i64 0
  %rtuint933 = bitcast %union.rtunion_def* %arrayidx932 to i32*
  %453 = load i32, i32* %rtuint933, align 4
  %call934 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %453)
  br label %cond.end.935

cond.end.935:                                     ; preds = %cond.false.930, %cond.true.929
  %cond936 = phi %struct.cse_reg_info* [ %451, %cond.true.929 ], [ %call934, %cond.false.930 ]
  %reg_qty937 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond936, i32 0, i32 3
  %454 = load i32, i32* %reg_qty937, align 4
  %455 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld938 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %455, i32 0, i32 1
  %arrayidx939 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld938, i32 0, i64 0
  %rtuint940 = bitcast %union.rtunion_def* %arrayidx939 to i32*
  %456 = load i32, i32* %rtuint940, align 4
  %cmp941 = icmp ne i32 %454, %456
  br i1 %cmp941, label %if.then.943, label %if.end.974

if.then.943:                                      ; preds = %cond.end.935
  %457 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %457, i32 0, i32 1
  %arrayidx945 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld944, i32 0, i64 0
  %rtuint946 = bitcast %union.rtunion_def* %arrayidx945 to i32*
  %458 = load i32, i32* %rtuint946, align 4
  %459 = load i32, i32* @cached_regno, align 4
  %cmp947 = icmp eq i32 %458, %459
  br i1 %cmp947, label %land.lhs.true.949, label %cond.false.952

land.lhs.true.949:                                ; preds = %if.then.943
  %460 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool950 = icmp ne %struct.cse_reg_info* %460, null
  br i1 %tobool950, label %cond.true.951, label %cond.false.952

cond.true.951:                                    ; preds = %land.lhs.true.949
  %461 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.957

cond.false.952:                                   ; preds = %land.lhs.true.949, %if.then.943
  %462 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %462, i32 0, i32 1
  %arrayidx954 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld953, i32 0, i64 0
  %rtuint955 = bitcast %union.rtunion_def* %arrayidx954 to i32*
  %463 = load i32, i32* %rtuint955, align 4
  %call956 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %463)
  br label %cond.end.957

cond.end.957:                                     ; preds = %cond.false.952, %cond.true.951
  %cond958 = phi %struct.cse_reg_info* [ %461, %cond.true.951 ], [ %call956, %cond.false.952 ]
  %reg_qty959 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond958, i32 0, i32 3
  %464 = load i32, i32* %reg_qty959, align 4
  store i32 %464, i32* %addr_q, align 4
  %465 = load i32, i32* %addr_q, align 4
  %idxprom960 = sext i32 %465 to i64
  %466 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx961 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %466, i64 %idxprom960
  store %struct.qty_table_elem* %arrayidx961, %struct.qty_table_elem** %addr_ent, align 8
  %467 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %468 = bitcast %struct.rtx_def* %467 to i32*
  %bf.load962 = load i32, i32* %468, align 8
  %bf.lshr963 = lshr i32 %bf.load962, 16
  %bf.clear964 = and i32 %bf.lshr963, 255
  %469 = load %struct.qty_table_elem*, %struct.qty_table_elem** %addr_ent, align 8
  %mode965 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %469, i32 0, i32 6
  %470 = load i32, i32* %mode965, align 4
  %cmp966 = icmp eq i32 %bf.clear964, %470
  br i1 %cmp966, label %land.lhs.true.968, label %if.end.973

land.lhs.true.968:                                ; preds = %cond.end.957
  %471 = load %struct.qty_table_elem*, %struct.qty_table_elem** %addr_ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %471, i32 0, i32 0
  %472 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %cmp969 = icmp ne %struct.rtx_def* %472, null
  br i1 %cmp969, label %if.then.971, label %if.end.973

if.then.971:                                      ; preds = %land.lhs.true.968
  %473 = load %struct.qty_table_elem*, %struct.qty_table_elem** %addr_ent, align 8
  %const_rtx972 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %473, i32 0, i32 0
  %474 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx972, align 8
  store %struct.rtx_def* %474, %struct.rtx_def** %addr, align 8
  br label %if.end.973

if.end.973:                                       ; preds = %if.then.971, %land.lhs.true.968, %cond.end.957
  br label %if.end.974

if.end.974:                                       ; preds = %if.end.973, %cond.end.935, %if.end.912
  %475 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %476 = bitcast %struct.rtx_def* %475 to i32*
  %bf.load975 = load i32, i32* %476, align 8
  %bf.clear976 = and i32 %bf.load975, 65535
  %cmp977 = icmp eq i32 %bf.clear976, 68
  br i1 %cmp977, label %if.then.984, label %lor.lhs.false.979

lor.lhs.false.979:                                ; preds = %if.end.974
  %477 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %478 = bitcast %struct.rtx_def* %477 to i32*
  %bf.load980 = load i32, i32* %478, align 8
  %bf.clear981 = and i32 %bf.load980, 65535
  %cmp982 = icmp eq i32 %bf.clear981, 67
  br i1 %cmp982, label %if.then.984, label %if.else.985

if.then.984:                                      ; preds = %lor.lhs.false.979, %if.end.974
  %479 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  store %struct.rtx_def* %479, %struct.rtx_def** %base, align 8
  br label %if.end.1052

if.else.985:                                      ; preds = %lor.lhs.false.979
  %480 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %481 = bitcast %struct.rtx_def* %480 to i32*
  %bf.load986 = load i32, i32* %481, align 8
  %bf.clear987 = and i32 %bf.load986, 65535
  %cmp988 = icmp eq i32 %bf.clear987, 58
  br i1 %cmp988, label %land.lhs.true.990, label %if.else.1025

land.lhs.true.990:                                ; preds = %if.else.985
  %482 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld991 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1
  %arrayidx992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld991, i32 0, i64 0
  %rtx993 = bitcast %union.rtunion_def* %arrayidx992 to %struct.rtx_def**
  %483 = load %struct.rtx_def*, %struct.rtx_def** %rtx993, align 8
  %484 = bitcast %struct.rtx_def* %483 to i32*
  %bf.load994 = load i32, i32* %484, align 8
  %bf.clear995 = and i32 %bf.load994, 65535
  %cmp996 = icmp eq i32 %bf.clear995, 75
  br i1 %cmp996, label %land.lhs.true.998, label %if.else.1025

land.lhs.true.998:                                ; preds = %land.lhs.true.990
  %485 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld999 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1
  %arrayidx1000 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld999, i32 0, i64 0
  %rtx1001 = bitcast %union.rtunion_def* %arrayidx1000 to %struct.rtx_def**
  %486 = load %struct.rtx_def*, %struct.rtx_def** %rtx1001, align 8
  %fld1002 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %486, i32 0, i32 1
  %arrayidx1003 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1002, i32 0, i64 1
  %rtx1004 = bitcast %union.rtunion_def* %arrayidx1003 to %struct.rtx_def**
  %487 = load %struct.rtx_def*, %struct.rtx_def** %rtx1004, align 8
  %488 = bitcast %struct.rtx_def* %487 to i32*
  %bf.load1005 = load i32, i32* %488, align 8
  %bf.clear1006 = and i32 %bf.load1005, 65535
  %cmp1007 = icmp eq i32 %bf.clear1006, 54
  br i1 %cmp1007, label %if.then.1009, label %if.else.1025

if.then.1009:                                     ; preds = %land.lhs.true.998
  %489 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld1010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %489, i32 0, i32 1
  %arrayidx1011 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1010, i32 0, i64 0
  %rtx1012 = bitcast %union.rtunion_def* %arrayidx1011 to %struct.rtx_def**
  %490 = load %struct.rtx_def*, %struct.rtx_def** %rtx1012, align 8
  %fld1013 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %490, i32 0, i32 1
  %arrayidx1014 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1013, i32 0, i64 0
  %rtx1015 = bitcast %union.rtunion_def* %arrayidx1014 to %struct.rtx_def**
  %491 = load %struct.rtx_def*, %struct.rtx_def** %rtx1015, align 8
  store %struct.rtx_def* %491, %struct.rtx_def** %base, align 8
  %492 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld1016 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1
  %arrayidx1017 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1016, i32 0, i64 0
  %rtx1018 = bitcast %union.rtunion_def* %arrayidx1017 to %struct.rtx_def**
  %493 = load %struct.rtx_def*, %struct.rtx_def** %rtx1018, align 8
  %fld1019 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %493, i32 0, i32 1
  %arrayidx1020 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1019, i32 0, i64 1
  %rtx1021 = bitcast %union.rtunion_def* %arrayidx1020 to %struct.rtx_def**
  %494 = load %struct.rtx_def*, %struct.rtx_def** %rtx1021, align 8
  %fld1022 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %494, i32 0, i32 1
  %arrayidx1023 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1022, i32 0, i64 0
  %rtwint1024 = bitcast %union.rtunion_def* %arrayidx1023 to i64*
  %495 = load i64, i64* %rtwint1024, align 8
  store i64 %495, i64* %offset, align 8
  br label %if.end.1051

if.else.1025:                                     ; preds = %land.lhs.true.998, %land.lhs.true.990, %if.else.985
  %496 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %497 = bitcast %struct.rtx_def* %496 to i32*
  %bf.load1026 = load i32, i32* %497, align 8
  %bf.clear1027 = and i32 %bf.load1026, 65535
  %cmp1028 = icmp eq i32 %bf.clear1027, 135
  br i1 %cmp1028, label %land.lhs.true.1030, label %if.else.1042

land.lhs.true.1030:                               ; preds = %if.else.1025
  %498 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld1031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %498, i32 0, i32 1
  %arrayidx1032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1031, i32 0, i64 1
  %rtx1033 = bitcast %union.rtunion_def* %arrayidx1032 to %struct.rtx_def**
  %499 = load %struct.rtx_def*, %struct.rtx_def** %rtx1033, align 8
  %500 = bitcast %struct.rtx_def* %499 to i32*
  %bf.load1034 = load i32, i32* %500, align 8
  %bf.clear1035 = and i32 %bf.load1034, 65535
  %cmp1036 = icmp eq i32 %bf.clear1035, 68
  br i1 %cmp1036, label %if.then.1038, label %if.else.1042

if.then.1038:                                     ; preds = %land.lhs.true.1030
  %501 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld1039 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %501, i32 0, i32 1
  %arrayidx1040 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1039, i32 0, i64 1
  %rtx1041 = bitcast %union.rtunion_def* %arrayidx1040 to %struct.rtx_def**
  %502 = load %struct.rtx_def*, %struct.rtx_def** %rtx1041, align 8
  store %struct.rtx_def* %502, %struct.rtx_def** %base, align 8
  br label %if.end.1050

if.else.1042:                                     ; preds = %land.lhs.true.1030, %if.else.1025
  %503 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %504 = bitcast %struct.rtx_def* %503 to i32*
  %bf.load1043 = load i32, i32* %504, align 8
  %bf.clear1044 = and i32 %bf.load1043, 65535
  %cmp1045 = icmp eq i32 %bf.clear1044, 70
  br i1 %cmp1045, label %if.then.1047, label %if.end.1049

if.then.1047:                                     ; preds = %if.else.1042
  %505 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %506 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %call1048 = call %struct.rtx_def* @change_address(%struct.rtx_def* %505, i32 0, %struct.rtx_def* %506)
  store %struct.rtx_def* %call1048, %struct.rtx_def** %retval
  br label %return

if.end.1049:                                      ; preds = %if.else.1042
  br label %if.end.1050

if.end.1050:                                      ; preds = %if.end.1049, %if.then.1038
  br label %if.end.1051

if.end.1051:                                      ; preds = %if.end.1050, %if.then.1009
  br label %if.end.1052

if.end.1052:                                      ; preds = %if.end.1051, %if.then.984
  %507 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %tobool1053 = icmp ne %struct.rtx_def* %507, null
  br i1 %tobool1053, label %land.lhs.true.1054, label %if.end.1210

land.lhs.true.1054:                               ; preds = %if.end.1052
  %508 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %509 = bitcast %struct.rtx_def* %508 to i32*
  %bf.load1055 = load i32, i32* %509, align 8
  %bf.clear1056 = and i32 %bf.load1055, 65535
  %cmp1057 = icmp eq i32 %bf.clear1056, 68
  br i1 %cmp1057, label %land.lhs.true.1059, label %if.end.1210

land.lhs.true.1059:                               ; preds = %land.lhs.true.1054
  %510 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %511 = bitcast %struct.rtx_def* %510 to i32*
  %bf.load1060 = load i32, i32* %511, align 8
  %bf.lshr1061 = lshr i32 %bf.load1060, 26
  %bf.clear1062 = and i32 %bf.lshr1061, 1
  %tobool1063 = icmp ne i32 %bf.clear1062, 0
  br i1 %tobool1063, label %if.then.1064, label %if.end.1210

if.then.1064:                                     ; preds = %land.lhs.true.1059
  %512 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %call1065 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %512)
  store %struct.rtx_def* %call1065, %struct.rtx_def** %constant, align 8
  %513 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %call1066 = call i32 @get_pool_mode(%struct.rtx_def* %513)
  store i32 %call1066, i32* %const_mode, align 4
  %514 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %515 = bitcast %struct.rtx_def* %514 to i32*
  %bf.load1068 = load i32, i32* %515, align 8
  %bf.clear1069 = and i32 %bf.load1068, 65535
  %cmp1070 = icmp eq i32 %bf.clear1069, 67
  br i1 %cmp1070, label %land.lhs.true.1107, label %lor.lhs.false.1072

lor.lhs.false.1072:                               ; preds = %if.then.1064
  %516 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %517 = bitcast %struct.rtx_def* %516 to i32*
  %bf.load1073 = load i32, i32* %517, align 8
  %bf.clear1074 = and i32 %bf.load1073, 65535
  %cmp1075 = icmp eq i32 %bf.clear1074, 68
  br i1 %cmp1075, label %land.lhs.true.1107, label %lor.lhs.false.1077

lor.lhs.false.1077:                               ; preds = %lor.lhs.false.1072
  %518 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %519 = bitcast %struct.rtx_def* %518 to i32*
  %bf.load1078 = load i32, i32* %519, align 8
  %bf.clear1079 = and i32 %bf.load1078, 65535
  %cmp1080 = icmp eq i32 %bf.clear1079, 54
  br i1 %cmp1080, label %land.lhs.true.1107, label %lor.lhs.false.1082

lor.lhs.false.1082:                               ; preds = %lor.lhs.false.1077
  %520 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %521 = bitcast %struct.rtx_def* %520 to i32*
  %bf.load1083 = load i32, i32* %521, align 8
  %bf.clear1084 = and i32 %bf.load1083, 65535
  %cmp1085 = icmp eq i32 %bf.clear1084, 55
  br i1 %cmp1085, label %land.lhs.true.1107, label %lor.lhs.false.1087

lor.lhs.false.1087:                               ; preds = %lor.lhs.false.1082
  %522 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %523 = bitcast %struct.rtx_def* %522 to i32*
  %bf.load1088 = load i32, i32* %523, align 8
  %bf.clear1089 = and i32 %bf.load1088, 65535
  %cmp1090 = icmp eq i32 %bf.clear1089, 58
  br i1 %cmp1090, label %land.lhs.true.1107, label %lor.lhs.false.1092

lor.lhs.false.1092:                               ; preds = %lor.lhs.false.1087
  %524 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %525 = bitcast %struct.rtx_def* %524 to i32*
  %bf.load1093 = load i32, i32* %525, align 8
  %bf.clear1094 = and i32 %bf.load1093, 65535
  %cmp1095 = icmp eq i32 %bf.clear1094, 134
  br i1 %cmp1095, label %land.lhs.true.1107, label %lor.lhs.false.1097

lor.lhs.false.1097:                               ; preds = %lor.lhs.false.1092
  %526 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %527 = bitcast %struct.rtx_def* %526 to i32*
  %bf.load1098 = load i32, i32* %527, align 8
  %bf.clear1099 = and i32 %bf.load1098, 65535
  %cmp1100 = icmp eq i32 %bf.clear1099, 56
  br i1 %cmp1100, label %land.lhs.true.1107, label %lor.lhs.false.1102

lor.lhs.false.1102:                               ; preds = %lor.lhs.false.1097
  %528 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %529 = bitcast %struct.rtx_def* %528 to i32*
  %bf.load1103 = load i32, i32* %529, align 8
  %bf.clear1104 = and i32 %bf.load1103, 65535
  %cmp1105 = icmp eq i32 %bf.clear1104, 140
  br i1 %cmp1105, label %land.lhs.true.1107, label %if.end.1122

land.lhs.true.1107:                               ; preds = %lor.lhs.false.1102, %lor.lhs.false.1097, %lor.lhs.false.1092, %lor.lhs.false.1087, %lor.lhs.false.1082, %lor.lhs.false.1077, %lor.lhs.false.1072, %if.then.1064
  %530 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %531 = bitcast %struct.rtx_def* %530 to i32*
  %bf.load1108 = load i32, i32* %531, align 8
  %bf.clear1109 = and i32 %bf.load1108, 65535
  %cmp1110 = icmp ne i32 %bf.clear1109, 54
  br i1 %cmp1110, label %if.then.1112, label %if.end.1122

if.then.1112:                                     ; preds = %land.lhs.true.1107
  %532 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %533 = bitcast %struct.rtx_def* %532 to i32*
  %bf.load1113 = load i32, i32* %533, align 8
  %bf.clear1114 = and i32 %bf.load1113, 65535
  %cmp1115 = icmp eq i32 %bf.clear1114, 61
  br i1 %cmp1115, label %cond.true.1117, label %cond.false.1118

cond.true.1117:                                   ; preds = %if.then.1112
  br label %cond.end.1120

cond.false.1118:                                  ; preds = %if.then.1112
  %534 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %call1119 = call i32 @notreg_cost(%struct.rtx_def* %534, i32 47)
  br label %cond.end.1120

cond.end.1120:                                    ; preds = %cond.false.1118, %cond.true.1117
  %cond1121 = phi i32 [ 0, %cond.true.1117 ], [ %call1119, %cond.false.1118 ]
  store i32 %cond1121, i32* @constant_pool_entries_cost, align 4
  br label %if.end.1122

if.end.1122:                                      ; preds = %cond.end.1120, %land.lhs.true.1107, %lor.lhs.false.1102
  %535 = load i64, i64* %offset, align 8
  %cmp1123 = icmp eq i64 %535, 0
  br i1 %cmp1123, label %land.lhs.true.1125, label %if.end.1129

land.lhs.true.1125:                               ; preds = %if.end.1122
  %536 = load i32, i32* %mode, align 4
  %537 = load i32, i32* %const_mode, align 4
  %cmp1126 = icmp eq i32 %536, %537
  br i1 %cmp1126, label %if.then.1128, label %if.end.1129

if.then.1128:                                     ; preds = %land.lhs.true.1125
  %538 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  store %struct.rtx_def* %538, %struct.rtx_def** %retval
  br label %return

if.end.1129:                                      ; preds = %land.lhs.true.1125, %if.end.1122
  %539 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %540 = bitcast %struct.rtx_def* %539 to i32*
  %bf.load1130 = load i32, i32* %540, align 8
  %bf.clear1131 = and i32 %bf.load1130, 65535
  %cmp1132 = icmp eq i32 %bf.clear1131, 67
  br i1 %cmp1132, label %if.end.1170, label %lor.lhs.false.1134

lor.lhs.false.1134:                               ; preds = %if.end.1129
  %541 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %542 = bitcast %struct.rtx_def* %541 to i32*
  %bf.load1135 = load i32, i32* %542, align 8
  %bf.clear1136 = and i32 %bf.load1135, 65535
  %cmp1137 = icmp eq i32 %bf.clear1136, 68
  br i1 %cmp1137, label %if.end.1170, label %lor.lhs.false.1139

lor.lhs.false.1139:                               ; preds = %lor.lhs.false.1134
  %543 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %544 = bitcast %struct.rtx_def* %543 to i32*
  %bf.load1140 = load i32, i32* %544, align 8
  %bf.clear1141 = and i32 %bf.load1140, 65535
  %cmp1142 = icmp eq i32 %bf.clear1141, 54
  br i1 %cmp1142, label %if.end.1170, label %lor.lhs.false.1144

lor.lhs.false.1144:                               ; preds = %lor.lhs.false.1139
  %545 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %546 = bitcast %struct.rtx_def* %545 to i32*
  %bf.load1145 = load i32, i32* %546, align 8
  %bf.clear1146 = and i32 %bf.load1145, 65535
  %cmp1147 = icmp eq i32 %bf.clear1146, 55
  br i1 %cmp1147, label %if.end.1170, label %lor.lhs.false.1149

lor.lhs.false.1149:                               ; preds = %lor.lhs.false.1144
  %547 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %548 = bitcast %struct.rtx_def* %547 to i32*
  %bf.load1150 = load i32, i32* %548, align 8
  %bf.clear1151 = and i32 %bf.load1150, 65535
  %cmp1152 = icmp eq i32 %bf.clear1151, 58
  br i1 %cmp1152, label %if.end.1170, label %lor.lhs.false.1154

lor.lhs.false.1154:                               ; preds = %lor.lhs.false.1149
  %549 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %550 = bitcast %struct.rtx_def* %549 to i32*
  %bf.load1155 = load i32, i32* %550, align 8
  %bf.clear1156 = and i32 %bf.load1155, 65535
  %cmp1157 = icmp eq i32 %bf.clear1156, 134
  br i1 %cmp1157, label %if.end.1170, label %lor.lhs.false.1159

lor.lhs.false.1159:                               ; preds = %lor.lhs.false.1154
  %551 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %552 = bitcast %struct.rtx_def* %551 to i32*
  %bf.load1160 = load i32, i32* %552, align 8
  %bf.clear1161 = and i32 %bf.load1160, 65535
  %cmp1162 = icmp eq i32 %bf.clear1161, 56
  br i1 %cmp1162, label %if.end.1170, label %lor.lhs.false.1164

lor.lhs.false.1164:                               ; preds = %lor.lhs.false.1159
  %553 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %554 = bitcast %struct.rtx_def* %553 to i32*
  %bf.load1165 = load i32, i32* %554, align 8
  %bf.clear1166 = and i32 %bf.load1165, 65535
  %cmp1167 = icmp eq i32 %bf.clear1166, 140
  br i1 %cmp1167, label %if.end.1170, label %if.then.1169

if.then.1169:                                     ; preds = %lor.lhs.false.1164
  %555 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %555, %struct.rtx_def** %retval
  br label %return

if.end.1170:                                      ; preds = %lor.lhs.false.1164, %lor.lhs.false.1159, %lor.lhs.false.1154, %lor.lhs.false.1149, %lor.lhs.false.1144, %lor.lhs.false.1139, %lor.lhs.false.1134, %if.end.1129
  %556 = load i32, i32* %mode, align 4
  %idxprom1171 = sext i32 %556 to i64
  %arrayidx1172 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1171
  %557 = load i32, i32* %arrayidx1172, align 4
  %cmp1173 = icmp eq i32 %557, 1
  br i1 %cmp1173, label %land.lhs.true.1175, label %if.end.1201

land.lhs.true.1175:                               ; preds = %if.end.1170
  %558 = load i32, i32* %mode, align 4
  %idxprom1176 = sext i32 %558 to i64
  %arrayidx1177 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1176
  %559 = load i8, i8* %arrayidx1177, align 1
  %conv1178 = zext i8 %559 to i32
  %560 = load i32, i32* @target_flags, align 4
  %and1179 = and i32 %560, 33554432
  %tobool1180 = icmp ne i32 %and1179, 0
  %cond1181 = select i1 %tobool1180, i32 8, i32 4
  %cmp1182 = icmp eq i32 %conv1178, %cond1181
  br i1 %cmp1182, label %land.lhs.true.1184, label %if.end.1201

land.lhs.true.1184:                               ; preds = %land.lhs.true.1175
  %561 = load i64, i64* %offset, align 8
  %562 = load i32, i32* @target_flags, align 4
  %and1185 = and i32 %562, 33554432
  %tobool1186 = icmp ne i32 %and1185, 0
  %cond1187 = select i1 %tobool1186, i32 8, i32 4
  %conv1188 = sext i32 %cond1187 to i64
  %rem = srem i64 %561, %conv1188
  %cmp1189 = icmp eq i64 %rem, 0
  br i1 %cmp1189, label %land.lhs.true.1191, label %if.end.1201

land.lhs.true.1191:                               ; preds = %land.lhs.true.1184
  %563 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %564 = load i64, i64* %offset, align 8
  %565 = load i32, i32* @target_flags, align 4
  %and1192 = and i32 %565, 33554432
  %tobool1193 = icmp ne i32 %and1192, 0
  %cond1194 = select i1 %tobool1193, i32 8, i32 4
  %conv1195 = sext i32 %cond1194 to i64
  %div = sdiv i64 %564, %conv1195
  %conv1196 = trunc i64 %div to i32
  %566 = load i32, i32* %const_mode, align 4
  %call1197 = call %struct.rtx_def* @operand_subword(%struct.rtx_def* %563, i32 %conv1196, i32 0, i32 %566)
  store %struct.rtx_def* %call1197, %struct.rtx_def** %new1067, align 8
  %cmp1198 = icmp ne %struct.rtx_def* %call1197, null
  br i1 %cmp1198, label %if.then.1200, label %if.end.1201

if.then.1200:                                     ; preds = %land.lhs.true.1191
  %567 = load %struct.rtx_def*, %struct.rtx_def** %new1067, align 8
  store %struct.rtx_def* %567, %struct.rtx_def** %retval
  br label %return

if.end.1201:                                      ; preds = %land.lhs.true.1191, %land.lhs.true.1184, %land.lhs.true.1175, %if.end.1170
  %568 = load i64, i64* %offset, align 8
  %cmp1202 = icmp eq i64 %568, 0
  br i1 %cmp1202, label %land.lhs.true.1204, label %if.end.1209

land.lhs.true.1204:                               ; preds = %if.end.1201
  %569 = load i32, i32* %mode, align 4
  %570 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8
  %call1205 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %569, %struct.rtx_def* %570)
  store %struct.rtx_def* %call1205, %struct.rtx_def** %new1067, align 8
  %cmp1206 = icmp ne %struct.rtx_def* %call1205, null
  br i1 %cmp1206, label %if.then.1208, label %if.end.1209

if.then.1208:                                     ; preds = %land.lhs.true.1204
  %571 = load %struct.rtx_def*, %struct.rtx_def** %new1067, align 8
  store %struct.rtx_def* %571, %struct.rtx_def** %retval
  br label %return

if.end.1209:                                      ; preds = %land.lhs.true.1204, %if.end.1201
  br label %if.end.1210

if.end.1210:                                      ; preds = %if.end.1209, %land.lhs.true.1059, %land.lhs.true.1054, %if.end.1052
  %572 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %tobool1211 = icmp ne %struct.rtx_def* %572, null
  br i1 %tobool1211, label %land.lhs.true.1212, label %if.end.1347

land.lhs.true.1212:                               ; preds = %if.end.1210
  %573 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %574 = bitcast %struct.rtx_def* %573 to i32*
  %bf.load1213 = load i32, i32* %574, align 8
  %bf.clear1214 = and i32 %bf.load1213, 65535
  %cmp1215 = icmp eq i32 %bf.clear1214, 67
  br i1 %cmp1215, label %if.then.1217, label %if.end.1347

if.then.1217:                                     ; preds = %land.lhs.true.1212
  %575 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8
  %fld1218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %575, i32 0, i32 1
  %arrayidx1219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1218, i32 0, i64 0
  %rtx1220 = bitcast %union.rtunion_def* %arrayidx1219 to %struct.rtx_def**
  %576 = load %struct.rtx_def*, %struct.rtx_def** %rtx1220, align 8
  store %struct.rtx_def* %576, %struct.rtx_def** %label, align 8
  %577 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8
  %fld1221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %577, i32 0, i32 1
  %arrayidx1222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1221, i32 0, i64 2
  %rtx1223 = bitcast %union.rtunion_def* %arrayidx1222 to %struct.rtx_def**
  %578 = load %struct.rtx_def*, %struct.rtx_def** %rtx1223, align 8
  store %struct.rtx_def* %578, %struct.rtx_def** %table_insn, align 8
  %579 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %tobool1224 = icmp ne %struct.rtx_def* %579, null
  br i1 %tobool1224, label %land.lhs.true.1225, label %if.end.1270

land.lhs.true.1225:                               ; preds = %if.then.1217
  %580 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %581 = bitcast %struct.rtx_def* %580 to i32*
  %bf.load1226 = load i32, i32* %581, align 8
  %bf.clear1227 = and i32 %bf.load1226, 65535
  %cmp1228 = icmp eq i32 %bf.clear1227, 33
  br i1 %cmp1228, label %land.lhs.true.1230, label %if.end.1270

land.lhs.true.1230:                               ; preds = %land.lhs.true.1225
  %582 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %fld1231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %582, i32 0, i32 1
  %arrayidx1232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1231, i32 0, i64 3
  %rtx1233 = bitcast %union.rtunion_def* %arrayidx1232 to %struct.rtx_def**
  %583 = load %struct.rtx_def*, %struct.rtx_def** %rtx1233, align 8
  %584 = bitcast %struct.rtx_def* %583 to i32*
  %bf.load1234 = load i32, i32* %584, align 8
  %bf.clear1235 = and i32 %bf.load1234, 65535
  %cmp1236 = icmp eq i32 %bf.clear1235, 44
  br i1 %cmp1236, label %if.then.1238, label %if.end.1270

if.then.1238:                                     ; preds = %land.lhs.true.1230
  %585 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %fld1239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %585, i32 0, i32 1
  %arrayidx1240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1239, i32 0, i64 3
  %rtx1241 = bitcast %union.rtunion_def* %arrayidx1240 to %struct.rtx_def**
  %586 = load %struct.rtx_def*, %struct.rtx_def** %rtx1241, align 8
  store %struct.rtx_def* %586, %struct.rtx_def** %table, align 8
  %587 = load i64, i64* %offset, align 8
  %cmp1242 = icmp sge i64 %587, 0
  br i1 %cmp1242, label %land.lhs.true.1244, label %if.end.1269

land.lhs.true.1244:                               ; preds = %if.then.1238
  %588 = load i64, i64* %offset, align 8
  %589 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8
  %590 = bitcast %struct.rtx_def* %589 to i32*
  %bf.load1245 = load i32, i32* %590, align 8
  %bf.lshr1246 = lshr i32 %bf.load1245, 16
  %bf.clear1247 = and i32 %bf.lshr1246, 255
  %idxprom1248 = sext i32 %bf.clear1247 to i64
  %arrayidx1249 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1248
  %591 = load i8, i8* %arrayidx1249, align 1
  %conv1250 = zext i8 %591 to i64
  %div1251 = sdiv i64 %588, %conv1250
  %592 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8
  %fld1252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %592, i32 0, i32 1
  %arrayidx1253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1252, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx1253 to %struct.rtvec_def**
  %593 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %593, i32 0, i32 0
  %594 = load i32, i32* %num_elem, align 4
  %conv1254 = sext i32 %594 to i64
  %cmp1255 = icmp slt i64 %div1251, %conv1254
  br i1 %cmp1255, label %if.then.1257, label %if.end.1269

if.then.1257:                                     ; preds = %land.lhs.true.1244
  %595 = load i64, i64* %offset, align 8
  %596 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8
  %597 = bitcast %struct.rtx_def* %596 to i32*
  %bf.load1258 = load i32, i32* %597, align 8
  %bf.lshr1259 = lshr i32 %bf.load1258, 16
  %bf.clear1260 = and i32 %bf.lshr1259, 255
  %idxprom1261 = sext i32 %bf.clear1260 to i64
  %arrayidx1262 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1261
  %598 = load i8, i8* %arrayidx1262, align 1
  %conv1263 = zext i8 %598 to i64
  %div1264 = sdiv i64 %595, %conv1263
  %599 = load %struct.rtx_def*, %struct.rtx_def** %table, align 8
  %fld1265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %599, i32 0, i32 1
  %arrayidx1266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1265, i32 0, i64 0
  %rtvec1267 = bitcast %union.rtunion_def* %arrayidx1266 to %struct.rtvec_def**
  %600 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1267, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %600, i32 0, i32 1
  %arrayidx1268 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %div1264
  %601 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1268, align 8
  store %struct.rtx_def* %601, %struct.rtx_def** %retval
  br label %return

if.end.1269:                                      ; preds = %land.lhs.true.1244, %if.then.1238
  br label %if.end.1270

if.end.1270:                                      ; preds = %if.end.1269, %land.lhs.true.1230, %land.lhs.true.1225, %if.then.1217
  %602 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %tobool1271 = icmp ne %struct.rtx_def* %602, null
  br i1 %tobool1271, label %land.lhs.true.1272, label %if.end.1346

land.lhs.true.1272:                               ; preds = %if.end.1270
  %603 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %604 = bitcast %struct.rtx_def* %603 to i32*
  %bf.load1273 = load i32, i32* %604, align 8
  %bf.clear1274 = and i32 %bf.load1273, 65535
  %cmp1275 = icmp eq i32 %bf.clear1274, 33
  br i1 %cmp1275, label %land.lhs.true.1277, label %if.end.1346

land.lhs.true.1277:                               ; preds = %land.lhs.true.1272
  %605 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %fld1278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %605, i32 0, i32 1
  %arrayidx1279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1278, i32 0, i64 3
  %rtx1280 = bitcast %union.rtunion_def* %arrayidx1279 to %struct.rtx_def**
  %606 = load %struct.rtx_def*, %struct.rtx_def** %rtx1280, align 8
  %607 = bitcast %struct.rtx_def* %606 to i32*
  %bf.load1281 = load i32, i32* %607, align 8
  %bf.clear1282 = and i32 %bf.load1281, 65535
  %cmp1283 = icmp eq i32 %bf.clear1282, 45
  br i1 %cmp1283, label %if.then.1285, label %if.end.1346

if.then.1285:                                     ; preds = %land.lhs.true.1277
  %608 = load %struct.rtx_def*, %struct.rtx_def** %table_insn, align 8
  %fld1287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %608, i32 0, i32 1
  %arrayidx1288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1287, i32 0, i64 3
  %rtx1289 = bitcast %union.rtunion_def* %arrayidx1288 to %struct.rtx_def**
  %609 = load %struct.rtx_def*, %struct.rtx_def** %rtx1289, align 8
  store %struct.rtx_def* %609, %struct.rtx_def** %table1286, align 8
  %610 = load i64, i64* %offset, align 8
  %cmp1290 = icmp sge i64 %610, 0
  br i1 %cmp1290, label %land.lhs.true.1292, label %if.end.1345

land.lhs.true.1292:                               ; preds = %if.then.1285
  %611 = load i64, i64* %offset, align 8
  %612 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %613 = bitcast %struct.rtx_def* %612 to i32*
  %bf.load1293 = load i32, i32* %613, align 8
  %bf.lshr1294 = lshr i32 %bf.load1293, 16
  %bf.clear1295 = and i32 %bf.lshr1294, 255
  %idxprom1296 = sext i32 %bf.clear1295 to i64
  %arrayidx1297 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1296
  %614 = load i8, i8* %arrayidx1297, align 1
  %conv1298 = zext i8 %614 to i64
  %div1299 = sdiv i64 %611, %conv1298
  %615 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %fld1300 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %615, i32 0, i32 1
  %arrayidx1301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1300, i32 0, i64 1
  %rtvec1302 = bitcast %union.rtunion_def* %arrayidx1301 to %struct.rtvec_def**
  %616 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1302, align 8
  %num_elem1303 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %616, i32 0, i32 0
  %617 = load i32, i32* %num_elem1303, align 4
  %conv1304 = sext i32 %617 to i64
  %cmp1305 = icmp slt i64 %div1299, %conv1304
  br i1 %cmp1305, label %if.then.1307, label %if.end.1345

if.then.1307:                                     ; preds = %land.lhs.true.1292
  %618 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %619 = bitcast %struct.rtx_def* %618 to i32*
  %bf.load1308 = load i32, i32* %619, align 8
  %bf.lshr1309 = lshr i32 %bf.load1308, 16
  %bf.clear1310 = and i32 %bf.lshr1309, 255
  %idxprom1311 = sext i32 %bf.clear1310 to i64
  %arrayidx1312 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom1311
  %620 = load i8, i8* %arrayidx1312, align 1
  %conv1313 = zext i8 %620 to i64
  %621 = load i64, i64* %offset, align 8
  %div1314 = sdiv i64 %621, %conv1313
  store i64 %div1314, i64* %offset, align 8
  %622 = load i32, i32* @target_flags, align 4
  %and1315 = and i32 %622, 33554432
  %tobool1316 = icmp ne i32 %and1315, 0
  %cond1317 = select i1 %tobool1316, i32 5, i32 4
  %623 = load i64, i64* %offset, align 8
  %624 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %fld1318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %624, i32 0, i32 1
  %arrayidx1319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1318, i32 0, i64 1
  %rtvec1320 = bitcast %union.rtunion_def* %arrayidx1319 to %struct.rtvec_def**
  %625 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1320, align 8
  %elem1321 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %625, i32 0, i32 1
  %arrayidx1322 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1321, i32 0, i64 %623
  %626 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1322, align 8
  %627 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %fld1323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %627, i32 0, i32 1
  %arrayidx1324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1323, i32 0, i64 0
  %rtx1325 = bitcast %union.rtunion_def* %arrayidx1324 to %struct.rtx_def**
  %628 = load %struct.rtx_def*, %struct.rtx_def** %rtx1325, align 8
  %call1326 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %cond1317, %struct.rtx_def* %626, %struct.rtx_def* %628)
  store %struct.rtx_def* %call1326, %struct.rtx_def** %new, align 8
  %629 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %630 = bitcast %struct.rtx_def* %629 to i32*
  %bf.load1327 = load i32, i32* %630, align 8
  %bf.lshr1328 = lshr i32 %bf.load1327, 16
  %bf.clear1329 = and i32 %bf.lshr1328, 255
  %631 = load i32, i32* @target_flags, align 4
  %and1330 = and i32 %631, 33554432
  %tobool1331 = icmp ne i32 %and1330, 0
  %cond1332 = select i1 %tobool1331, i32 5, i32 4
  %cmp1333 = icmp ne i32 %bf.clear1329, %cond1332
  br i1 %cmp1333, label %if.then.1335, label %if.end.1340

if.then.1335:                                     ; preds = %if.then.1307
  %632 = load %struct.rtx_def*, %struct.rtx_def** %table1286, align 8
  %633 = bitcast %struct.rtx_def* %632 to i32*
  %bf.load1336 = load i32, i32* %633, align 8
  %bf.lshr1337 = lshr i32 %bf.load1336, 16
  %bf.clear1338 = and i32 %bf.lshr1337, 255
  %634 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call1339 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 %bf.clear1338, %struct.rtx_def* %634)
  store %struct.rtx_def* %call1339, %struct.rtx_def** %new, align 8
  br label %if.end.1340

if.end.1340:                                      ; preds = %if.then.1335, %if.then.1307
  %635 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %636 = bitcast %struct.rtx_def* %635 to i32*
  %bf.load1341 = load i32, i32* %636, align 8
  %bf.lshr1342 = lshr i32 %bf.load1341, 16
  %bf.clear1343 = and i32 %bf.lshr1342, 255
  %637 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call1344 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %bf.clear1343, %struct.rtx_def* %637)
  store %struct.rtx_def* %call1344, %struct.rtx_def** %retval
  br label %return

if.end.1345:                                      ; preds = %land.lhs.true.1292, %if.then.1285
  br label %if.end.1346

if.end.1346:                                      ; preds = %if.end.1345, %land.lhs.true.1277, %land.lhs.true.1272, %if.end.1270
  br label %if.end.1347

if.end.1347:                                      ; preds = %if.end.1346, %land.lhs.true.1212, %if.end.1210
  %638 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %638, %struct.rtx_def** %retval
  br label %return

sw.bb.1348:                                       ; preds = %if.end
  %639 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %639, i32 0, i32 1
  %arrayidx1350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1349, i32 0, i64 0
  %rtx1351 = bitcast %union.rtunion_def* %arrayidx1350 to %struct.rtx_def**
  %640 = load %struct.rtx_def*, %struct.rtx_def** %rtx1351, align 8
  %fld1352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %640, i32 0, i32 1
  %arrayidx1353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1352, i32 0, i64 0
  %rtx1354 = bitcast %union.rtunion_def* %arrayidx1353 to %struct.rtx_def**
  %641 = load %struct.rtx_def*, %struct.rtx_def** %rtx1354, align 8
  %642 = bitcast %struct.rtx_def* %641 to i32*
  %bf.load1355 = load i32, i32* %642, align 8
  %bf.clear1356 = and i32 %bf.load1355, 65535
  %cmp1357 = icmp eq i32 %bf.clear1356, 67
  br i1 %cmp1357, label %if.then.1436, label %lor.lhs.false.1359

lor.lhs.false.1359:                               ; preds = %sw.bb.1348
  %643 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1360 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %643, i32 0, i32 1
  %arrayidx1361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1360, i32 0, i64 0
  %rtx1362 = bitcast %union.rtunion_def* %arrayidx1361 to %struct.rtx_def**
  %644 = load %struct.rtx_def*, %struct.rtx_def** %rtx1362, align 8
  %fld1363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %644, i32 0, i32 1
  %arrayidx1364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1363, i32 0, i64 0
  %rtx1365 = bitcast %union.rtunion_def* %arrayidx1364 to %struct.rtx_def**
  %645 = load %struct.rtx_def*, %struct.rtx_def** %rtx1365, align 8
  %646 = bitcast %struct.rtx_def* %645 to i32*
  %bf.load1366 = load i32, i32* %646, align 8
  %bf.clear1367 = and i32 %bf.load1366, 65535
  %cmp1368 = icmp eq i32 %bf.clear1367, 68
  br i1 %cmp1368, label %if.then.1436, label %lor.lhs.false.1370

lor.lhs.false.1370:                               ; preds = %lor.lhs.false.1359
  %647 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %647, i32 0, i32 1
  %arrayidx1372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1371, i32 0, i64 0
  %rtx1373 = bitcast %union.rtunion_def* %arrayidx1372 to %struct.rtx_def**
  %648 = load %struct.rtx_def*, %struct.rtx_def** %rtx1373, align 8
  %fld1374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %648, i32 0, i32 1
  %arrayidx1375 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1374, i32 0, i64 0
  %rtx1376 = bitcast %union.rtunion_def* %arrayidx1375 to %struct.rtx_def**
  %649 = load %struct.rtx_def*, %struct.rtx_def** %rtx1376, align 8
  %650 = bitcast %struct.rtx_def* %649 to i32*
  %bf.load1377 = load i32, i32* %650, align 8
  %bf.clear1378 = and i32 %bf.load1377, 65535
  %cmp1379 = icmp eq i32 %bf.clear1378, 54
  br i1 %cmp1379, label %if.then.1436, label %lor.lhs.false.1381

lor.lhs.false.1381:                               ; preds = %lor.lhs.false.1370
  %651 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1382 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %651, i32 0, i32 1
  %arrayidx1383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1382, i32 0, i64 0
  %rtx1384 = bitcast %union.rtunion_def* %arrayidx1383 to %struct.rtx_def**
  %652 = load %struct.rtx_def*, %struct.rtx_def** %rtx1384, align 8
  %fld1385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %652, i32 0, i32 1
  %arrayidx1386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1385, i32 0, i64 0
  %rtx1387 = bitcast %union.rtunion_def* %arrayidx1386 to %struct.rtx_def**
  %653 = load %struct.rtx_def*, %struct.rtx_def** %rtx1387, align 8
  %654 = bitcast %struct.rtx_def* %653 to i32*
  %bf.load1388 = load i32, i32* %654, align 8
  %bf.clear1389 = and i32 %bf.load1388, 65535
  %cmp1390 = icmp eq i32 %bf.clear1389, 55
  br i1 %cmp1390, label %if.then.1436, label %lor.lhs.false.1392

lor.lhs.false.1392:                               ; preds = %lor.lhs.false.1381
  %655 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %655, i32 0, i32 1
  %arrayidx1394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1393, i32 0, i64 0
  %rtx1395 = bitcast %union.rtunion_def* %arrayidx1394 to %struct.rtx_def**
  %656 = load %struct.rtx_def*, %struct.rtx_def** %rtx1395, align 8
  %fld1396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %656, i32 0, i32 1
  %arrayidx1397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1396, i32 0, i64 0
  %rtx1398 = bitcast %union.rtunion_def* %arrayidx1397 to %struct.rtx_def**
  %657 = load %struct.rtx_def*, %struct.rtx_def** %rtx1398, align 8
  %658 = bitcast %struct.rtx_def* %657 to i32*
  %bf.load1399 = load i32, i32* %658, align 8
  %bf.clear1400 = and i32 %bf.load1399, 65535
  %cmp1401 = icmp eq i32 %bf.clear1400, 58
  br i1 %cmp1401, label %if.then.1436, label %lor.lhs.false.1403

lor.lhs.false.1403:                               ; preds = %lor.lhs.false.1392
  %659 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %659, i32 0, i32 1
  %arrayidx1405 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1404, i32 0, i64 0
  %rtx1406 = bitcast %union.rtunion_def* %arrayidx1405 to %struct.rtx_def**
  %660 = load %struct.rtx_def*, %struct.rtx_def** %rtx1406, align 8
  %fld1407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %660, i32 0, i32 1
  %arrayidx1408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1407, i32 0, i64 0
  %rtx1409 = bitcast %union.rtunion_def* %arrayidx1408 to %struct.rtx_def**
  %661 = load %struct.rtx_def*, %struct.rtx_def** %rtx1409, align 8
  %662 = bitcast %struct.rtx_def* %661 to i32*
  %bf.load1410 = load i32, i32* %662, align 8
  %bf.clear1411 = and i32 %bf.load1410, 65535
  %cmp1412 = icmp eq i32 %bf.clear1411, 134
  br i1 %cmp1412, label %if.then.1436, label %lor.lhs.false.1414

lor.lhs.false.1414:                               ; preds = %lor.lhs.false.1403
  %663 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %663, i32 0, i32 1
  %arrayidx1416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1415, i32 0, i64 0
  %rtx1417 = bitcast %union.rtunion_def* %arrayidx1416 to %struct.rtx_def**
  %664 = load %struct.rtx_def*, %struct.rtx_def** %rtx1417, align 8
  %fld1418 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %664, i32 0, i32 1
  %arrayidx1419 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1418, i32 0, i64 0
  %rtx1420 = bitcast %union.rtunion_def* %arrayidx1419 to %struct.rtx_def**
  %665 = load %struct.rtx_def*, %struct.rtx_def** %rtx1420, align 8
  %666 = bitcast %struct.rtx_def* %665 to i32*
  %bf.load1421 = load i32, i32* %666, align 8
  %bf.clear1422 = and i32 %bf.load1421, 65535
  %cmp1423 = icmp eq i32 %bf.clear1422, 56
  br i1 %cmp1423, label %if.then.1436, label %lor.lhs.false.1425

lor.lhs.false.1425:                               ; preds = %lor.lhs.false.1414
  %667 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1426 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %667, i32 0, i32 1
  %arrayidx1427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1426, i32 0, i64 0
  %rtx1428 = bitcast %union.rtunion_def* %arrayidx1427 to %struct.rtx_def**
  %668 = load %struct.rtx_def*, %struct.rtx_def** %rtx1428, align 8
  %fld1429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %668, i32 0, i32 1
  %arrayidx1430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1429, i32 0, i64 0
  %rtx1431 = bitcast %union.rtunion_def* %arrayidx1430 to %struct.rtx_def**
  %669 = load %struct.rtx_def*, %struct.rtx_def** %rtx1431, align 8
  %670 = bitcast %struct.rtx_def* %669 to i32*
  %bf.load1432 = load i32, i32* %670, align 8
  %bf.clear1433 = and i32 %bf.load1432, 65535
  %cmp1434 = icmp eq i32 %bf.clear1433, 140
  br i1 %cmp1434, label %if.then.1436, label %if.end.1437

if.then.1436:                                     ; preds = %lor.lhs.false.1425, %lor.lhs.false.1414, %lor.lhs.false.1403, %lor.lhs.false.1392, %lor.lhs.false.1381, %lor.lhs.false.1370, %lor.lhs.false.1359, %sw.bb.1348
  %671 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %671, %struct.rtx_def** %retval
  br label %return

if.end.1437:                                      ; preds = %lor.lhs.false.1425
  br label %sw.epilog

sw.bb.1438:                                       ; preds = %if.end
  %672 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %672, i32 0, i32 1
  %arrayidx1440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1439, i32 0, i64 3
  %rtvec1441 = bitcast %union.rtunion_def* %arrayidx1440 to %struct.rtvec_def**
  %673 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1441, align 8
  %num_elem1442 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %673, i32 0, i32 0
  %674 = load i32, i32* %num_elem1442, align 4
  %sub = sub nsw i32 %674, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond.1443

for.cond.1443:                                    ; preds = %for.inc.1461, %sw.bb.1438
  %675 = load i32, i32* %i, align 4
  %cmp1444 = icmp sge i32 %675, 0
  br i1 %cmp1444, label %for.body.1446, label %for.end.1462

for.body.1446:                                    ; preds = %for.cond.1443
  %676 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %677 = load i32, i32* %i, align 4
  %idxprom1447 = sext i32 %677 to i64
  %678 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1448 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %678, i32 0, i32 1
  %arrayidx1449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1448, i32 0, i64 3
  %rtvec1450 = bitcast %union.rtunion_def* %arrayidx1449 to %struct.rtvec_def**
  %679 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1450, align 8
  %elem1451 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %679, i32 0, i32 1
  %arrayidx1452 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1451, i32 0, i64 %idxprom1447
  %680 = load i32, i32* %i, align 4
  %idxprom1453 = sext i32 %680 to i64
  %681 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1454 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %681, i32 0, i32 1
  %arrayidx1455 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1454, i32 0, i64 3
  %rtvec1456 = bitcast %union.rtunion_def* %arrayidx1455 to %struct.rtvec_def**
  %682 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec1456, align 8
  %elem1457 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %682, i32 0, i32 1
  %arrayidx1458 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem1457, i32 0, i64 %idxprom1453
  %683 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1458, align 8
  %684 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1459 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %683, %struct.rtx_def* %684)
  %call1460 = call i32 @validate_change(%struct.rtx_def* %676, %struct.rtx_def** %arrayidx1452, %struct.rtx_def* %call1459, i32 0)
  br label %for.inc.1461

for.inc.1461:                                     ; preds = %for.body.1446
  %685 = load i32, i32* %i, align 4
  %dec = add nsw i32 %685, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.1443

for.end.1462:                                     ; preds = %for.cond.1443
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %for.end.1462, %if.end.1437, %if.end.901, %if.end.45
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg0, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg1, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg2, align 8
  store i32 0, i32* %mode_arg0, align 4
  %686 = load i32, i32* %code, align 4
  %idxprom1463 = sext i32 %686 to i64
  %arrayidx1464 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom1463
  %687 = load i8*, i8** %arrayidx1464, align 8
  store i8* %687, i8** %fmt, align 8
  %688 = load i32, i32* %code, align 4
  %idxprom1465 = sext i32 %688 to i64
  %arrayidx1466 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom1465
  %689 = load i8, i8* %arrayidx1466, align 1
  %conv1467 = zext i8 %689 to i32
  %sub1468 = sub nsw i32 %conv1467, 1
  store i32 %sub1468, i32* %i, align 4
  br label %for.cond.1469

for.cond.1469:                                    ; preds = %for.inc.1803, %sw.epilog
  %690 = load i32, i32* %i, align 4
  %cmp1470 = icmp sge i32 %690, 0
  br i1 %cmp1470, label %for.body.1472, label %for.end.1805

for.body.1472:                                    ; preds = %for.cond.1469
  %691 = load i32, i32* %i, align 4
  %idxprom1473 = sext i32 %691 to i64
  %692 = load i8*, i8** %fmt, align 8
  %arrayidx1474 = getelementptr inbounds i8, i8* %692, i64 %idxprom1473
  %693 = load i8, i8* %arrayidx1474, align 1
  %conv1475 = sext i8 %693 to i32
  %cmp1476 = icmp eq i32 %conv1475, 101
  br i1 %cmp1476, label %if.then.1478, label %if.else.1794

if.then.1478:                                     ; preds = %for.body.1472
  %694 = load i32, i32* %i, align 4
  %idxprom1479 = sext i32 %694 to i64
  %695 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %695, i32 0, i32 1
  %arrayidx1481 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1480, i32 0, i64 %idxprom1479
  %rtx1482 = bitcast %union.rtunion_def* %arrayidx1481 to %struct.rtx_def**
  %696 = load %struct.rtx_def*, %struct.rtx_def** %rtx1482, align 8
  store %struct.rtx_def* %696, %struct.rtx_def** %arg, align 8
  %697 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  store %struct.rtx_def* %697, %struct.rtx_def** %folded_arg, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg, align 8
  %698 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %699 = bitcast %struct.rtx_def* %698 to i32*
  %bf.load1483 = load i32, i32* %699, align 8
  %bf.lshr1484 = lshr i32 %bf.load1483, 16
  %bf.clear1485 = and i32 %bf.lshr1484, 255
  store i32 %bf.clear1485, i32* %mode_arg, align 4
  %700 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %701 = bitcast %struct.rtx_def* %700 to i32*
  %bf.load1486 = load i32, i32* %701, align 8
  %bf.clear1487 = and i32 %bf.load1486, 65535
  switch i32 %bf.clear1487, label %sw.default.1553 [
    i32 61, label %sw.bb.1488
    i32 58, label %sw.bb.1552
    i32 54, label %sw.bb.1552
    i32 68, label %sw.bb.1552
    i32 67, label %sw.bb.1552
    i32 55, label %sw.bb.1552
    i32 56, label %sw.bb.1552
  ]

sw.bb.1488:                                       ; preds = %if.then.1478
  %702 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %fld1489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %702, i32 0, i32 1
  %arrayidx1490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1489, i32 0, i64 0
  %rtuint1491 = bitcast %union.rtunion_def* %arrayidx1490 to i32*
  %703 = load i32, i32* %rtuint1491, align 4
  %704 = load i32, i32* @cached_regno, align 4
  %cmp1492 = icmp eq i32 %703, %704
  br i1 %cmp1492, label %land.lhs.true.1494, label %cond.false.1497

land.lhs.true.1494:                               ; preds = %sw.bb.1488
  %705 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1495 = icmp ne %struct.cse_reg_info* %705, null
  br i1 %tobool1495, label %cond.true.1496, label %cond.false.1497

cond.true.1496:                                   ; preds = %land.lhs.true.1494
  %706 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1502

cond.false.1497:                                  ; preds = %land.lhs.true.1494, %sw.bb.1488
  %707 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %fld1498 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %707, i32 0, i32 1
  %arrayidx1499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1498, i32 0, i64 0
  %rtuint1500 = bitcast %union.rtunion_def* %arrayidx1499 to i32*
  %708 = load i32, i32* %rtuint1500, align 4
  %call1501 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %708)
  br label %cond.end.1502

cond.end.1502:                                    ; preds = %cond.false.1497, %cond.true.1496
  %cond1503 = phi %struct.cse_reg_info* [ %706, %cond.true.1496 ], [ %call1501, %cond.false.1497 ]
  %reg_qty1504 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1503, i32 0, i32 3
  %709 = load i32, i32* %reg_qty1504, align 4
  %710 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %fld1505 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %710, i32 0, i32 1
  %arrayidx1506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1505, i32 0, i64 0
  %rtuint1507 = bitcast %union.rtunion_def* %arrayidx1506 to i32*
  %711 = load i32, i32* %rtuint1507, align 4
  %cmp1508 = icmp ne i32 %709, %711
  br i1 %cmp1508, label %if.then.1510, label %if.end.1551

if.then.1510:                                     ; preds = %cond.end.1502
  %712 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %fld1511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %712, i32 0, i32 1
  %arrayidx1512 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1511, i32 0, i64 0
  %rtuint1513 = bitcast %union.rtunion_def* %arrayidx1512 to i32*
  %713 = load i32, i32* %rtuint1513, align 4
  %714 = load i32, i32* @cached_regno, align 4
  %cmp1514 = icmp eq i32 %713, %714
  br i1 %cmp1514, label %land.lhs.true.1516, label %cond.false.1519

land.lhs.true.1516:                               ; preds = %if.then.1510
  %715 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool1517 = icmp ne %struct.cse_reg_info* %715, null
  br i1 %tobool1517, label %cond.true.1518, label %cond.false.1519

cond.true.1518:                                   ; preds = %land.lhs.true.1516
  %716 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.1524

cond.false.1519:                                  ; preds = %land.lhs.true.1516, %if.then.1510
  %717 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %fld1520 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %717, i32 0, i32 1
  %arrayidx1521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1520, i32 0, i64 0
  %rtuint1522 = bitcast %union.rtunion_def* %arrayidx1521 to i32*
  %718 = load i32, i32* %rtuint1522, align 4
  %call1523 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %718)
  br label %cond.end.1524

cond.end.1524:                                    ; preds = %cond.false.1519, %cond.true.1518
  %cond1525 = phi %struct.cse_reg_info* [ %716, %cond.true.1518 ], [ %call1523, %cond.false.1519 ]
  %reg_qty1526 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond1525, i32 0, i32 3
  %719 = load i32, i32* %reg_qty1526, align 4
  store i32 %719, i32* %arg_q, align 4
  %720 = load i32, i32* %arg_q, align 4
  %idxprom1527 = sext i32 %720 to i64
  %721 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx1528 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %721, i64 %idxprom1527
  store %struct.qty_table_elem* %arrayidx1528, %struct.qty_table_elem** %arg_ent, align 8
  %722 = load %struct.qty_table_elem*, %struct.qty_table_elem** %arg_ent, align 8
  %const_rtx1529 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %722, i32 0, i32 0
  %723 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx1529, align 8
  %cmp1530 = icmp ne %struct.rtx_def* %723, null
  br i1 %cmp1530, label %land.lhs.true.1532, label %if.end.1550

land.lhs.true.1532:                               ; preds = %cond.end.1524
  %724 = load %struct.qty_table_elem*, %struct.qty_table_elem** %arg_ent, align 8
  %const_rtx1533 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %724, i32 0, i32 0
  %725 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx1533, align 8
  %726 = bitcast %struct.rtx_def* %725 to i32*
  %bf.load1534 = load i32, i32* %726, align 8
  %bf.clear1535 = and i32 %bf.load1534, 65535
  %cmp1536 = icmp ne i32 %bf.clear1535, 61
  br i1 %cmp1536, label %land.lhs.true.1538, label %if.end.1550

land.lhs.true.1538:                               ; preds = %land.lhs.true.1532
  %727 = load %struct.qty_table_elem*, %struct.qty_table_elem** %arg_ent, align 8
  %const_rtx1539 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %727, i32 0, i32 0
  %728 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx1539, align 8
  %729 = bitcast %struct.rtx_def* %728 to i32*
  %bf.load1540 = load i32, i32* %729, align 8
  %bf.clear1541 = and i32 %bf.load1540, 65535
  %cmp1542 = icmp ne i32 %bf.clear1541, 75
  br i1 %cmp1542, label %if.then.1544, label %if.end.1550

if.then.1544:                                     ; preds = %land.lhs.true.1538
  %730 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %731 = bitcast %struct.rtx_def* %730 to i32*
  %bf.load1545 = load i32, i32* %731, align 8
  %bf.lshr1546 = lshr i32 %bf.load1545, 16
  %bf.clear1547 = and i32 %bf.lshr1546, 255
  %732 = load %struct.qty_table_elem*, %struct.qty_table_elem** %arg_ent, align 8
  %const_rtx1548 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %732, i32 0, i32 0
  %733 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx1548, align 8
  %call1549 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %bf.clear1547, %struct.rtx_def* %733)
  store %struct.rtx_def* %call1549, %struct.rtx_def** %const_arg, align 8
  br label %if.end.1550

if.end.1550:                                      ; preds = %if.then.1544, %land.lhs.true.1538, %land.lhs.true.1532, %cond.end.1524
  br label %if.end.1551

if.end.1551:                                      ; preds = %if.end.1550, %cond.end.1502
  br label %sw.epilog.1556

sw.bb.1552:                                       ; preds = %if.then.1478, %if.then.1478, %if.then.1478, %if.then.1478, %if.then.1478, %if.then.1478
  %734 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  store %struct.rtx_def* %734, %struct.rtx_def** %const_arg, align 8
  br label %sw.epilog.1556

sw.default.1553:                                  ; preds = %if.then.1478
  %735 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8
  %736 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call1554 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %735, %struct.rtx_def* %736)
  store %struct.rtx_def* %call1554, %struct.rtx_def** %folded_arg, align 8
  %737 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  %call1555 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %737)
  store %struct.rtx_def* %call1555, %struct.rtx_def** %const_arg, align 8
  br label %sw.epilog.1556

sw.epilog.1556:                                   ; preds = %sw.default.1553, %sw.bb.1552, %if.end.1551
  %738 = load i32, i32* %i, align 4
  switch i32 %738, label %sw.epilog.1560 [
    i32 0, label %sw.bb.1557
    i32 1, label %sw.bb.1558
    i32 2, label %sw.bb.1559
  ]

sw.bb.1557:                                       ; preds = %sw.epilog.1556
  %739 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  store %struct.rtx_def* %739, %struct.rtx_def** %folded_arg0, align 8
  %740 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  store %struct.rtx_def* %740, %struct.rtx_def** %const_arg0, align 8
  %741 = load i32, i32* %mode_arg, align 4
  store i32 %741, i32* %mode_arg0, align 4
  br label %sw.epilog.1560

sw.bb.1558:                                       ; preds = %sw.epilog.1556
  %742 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  store %struct.rtx_def* %742, %struct.rtx_def** %folded_arg1, align 8
  %743 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  store %struct.rtx_def* %743, %struct.rtx_def** %const_arg1, align 8
  br label %sw.epilog.1560

sw.bb.1559:                                       ; preds = %sw.epilog.1556
  %744 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  store %struct.rtx_def* %744, %struct.rtx_def** %const_arg2, align 8
  br label %sw.epilog.1560

sw.epilog.1560:                                   ; preds = %sw.epilog.1556, %sw.bb.1559, %sw.bb.1558, %sw.bb.1557
  %745 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  %cmp1561 = icmp eq %struct.rtx_def* %745, null
  br i1 %cmp1561, label %if.then.1587, label %lor.lhs.false.1563

lor.lhs.false.1563:                               ; preds = %sw.epilog.1560
  %746 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  %747 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  %cmp1564 = icmp eq %struct.rtx_def* %746, %747
  br i1 %cmp1564, label %if.then.1587, label %lor.lhs.false.1566

lor.lhs.false.1566:                               ; preds = %lor.lhs.false.1563
  %748 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  %749 = bitcast %struct.rtx_def* %748 to i32*
  %bf.load1567 = load i32, i32* %749, align 8
  %bf.clear1568 = and i32 %bf.load1567, 65535
  %cmp1569 = icmp eq i32 %bf.clear1568, 61
  br i1 %cmp1569, label %cond.true.1571, label %cond.false.1572

cond.true.1571:                                   ; preds = %lor.lhs.false.1566
  br label %cond.end.1574

cond.false.1572:                                  ; preds = %lor.lhs.false.1566
  %750 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  %751 = load i32, i32* %code, align 4
  %call1573 = call i32 @notreg_cost(%struct.rtx_def* %750, i32 %751)
  br label %cond.end.1574

cond.end.1574:                                    ; preds = %cond.false.1572, %cond.true.1571
  %cond1575 = phi i32 [ 0, %cond.true.1571 ], [ %call1573, %cond.false.1572 ]
  %752 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  %753 = bitcast %struct.rtx_def* %752 to i32*
  %bf.load1576 = load i32, i32* %753, align 8
  %bf.clear1577 = and i32 %bf.load1576, 65535
  %cmp1578 = icmp eq i32 %bf.clear1577, 61
  br i1 %cmp1578, label %cond.true.1580, label %cond.false.1581

cond.true.1580:                                   ; preds = %cond.end.1574
  br label %cond.end.1583

cond.false.1581:                                  ; preds = %cond.end.1574
  %754 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  %755 = load i32, i32* %code, align 4
  %call1582 = call i32 @notreg_cost(%struct.rtx_def* %754, i32 %755)
  br label %cond.end.1583

cond.end.1583:                                    ; preds = %cond.false.1581, %cond.true.1580
  %cond1584 = phi i32 [ 0, %cond.true.1580 ], [ %call1582, %cond.false.1581 ]
  %cmp1585 = icmp sgt i32 %cond1575, %cond1584
  br i1 %cmp1585, label %if.then.1587, label %if.else.1588

if.then.1587:                                     ; preds = %cond.end.1583, %lor.lhs.false.1563, %sw.epilog.1560
  %756 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  store %struct.rtx_def* %756, %struct.rtx_def** %cheap_arg, align 8
  %757 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  store %struct.rtx_def* %757, %struct.rtx_def** %expensive_arg, align 8
  br label %if.end.1589

if.else.1588:                                     ; preds = %cond.end.1583
  %758 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8
  store %struct.rtx_def* %758, %struct.rtx_def** %cheap_arg, align 8
  %759 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8
  store %struct.rtx_def* %759, %struct.rtx_def** %expensive_arg, align 8
  br label %if.end.1589

if.end.1589:                                      ; preds = %if.else.1588, %if.then.1587
  %760 = load %struct.rtx_def*, %struct.rtx_def** %cheap_arg, align 8
  %761 = load i32, i32* %i, align 4
  %idxprom1590 = sext i32 %761 to i64
  %762 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %762, i32 0, i32 1
  %arrayidx1592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1591, i32 0, i64 %idxprom1590
  %rtx1593 = bitcast %union.rtunion_def* %arrayidx1592 to %struct.rtx_def**
  %763 = load %struct.rtx_def*, %struct.rtx_def** %rtx1593, align 8
  %cmp1594 = icmp eq %struct.rtx_def* %760, %763
  br i1 %cmp1594, label %if.then.1596, label %if.end.1597

if.then.1596:                                     ; preds = %if.end.1589
  br label %for.inc.1803

if.end.1597:                                      ; preds = %if.end.1589
  %764 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp1598 = icmp eq %struct.rtx_def* %764, null
  br i1 %cmp1598, label %land.lhs.true.1600, label %if.end.1604

land.lhs.true.1600:                               ; preds = %if.end.1597
  %765 = load i32, i32* %copied, align 4
  %tobool1601 = icmp ne i32 %765, 0
  br i1 %tobool1601, label %if.end.1604, label %if.then.1602

if.then.1602:                                     ; preds = %land.lhs.true.1600
  %766 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1603 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %766)
  store %struct.rtx_def* %call1603, %struct.rtx_def** %x.addr, align 8
  store i32 1, i32* %copied, align 4
  br label %if.end.1604

if.end.1604:                                      ; preds = %if.then.1602, %land.lhs.true.1600, %if.end.1597
  %767 = load %struct.rtx_def*, %struct.rtx_def** %cheap_arg, align 8
  %arrayidx1605 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 0
  store %struct.rtx_def* %767, %struct.rtx_def** %arrayidx1605, align 8
  %768 = load %struct.rtx_def*, %struct.rtx_def** %expensive_arg, align 8
  %arrayidx1606 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 1
  store %struct.rtx_def* %768, %struct.rtx_def** %arrayidx1606, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond.1607

for.cond.1607:                                    ; preds = %for.inc.1792, %if.end.1604
  %769 = load i32, i32* %j, align 4
  %cmp1608 = icmp slt i32 %769, 2
  br i1 %cmp1608, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.1607
  %770 = load i32, i32* %j, align 4
  %idxprom1610 = sext i32 %770 to i64
  %arrayidx1611 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 %idxprom1610
  %771 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1611, align 8
  %tobool1612 = icmp ne %struct.rtx_def* %771, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.1607
  %772 = phi i1 [ false, %for.cond.1607 ], [ %tobool1612, %land.rhs ]
  br i1 %772, label %for.body.1613, label %for.end.1793

for.body.1613:                                    ; preds = %land.end
  %773 = load i32, i32* %i, align 4
  %idxprom1614 = sext i32 %773 to i64
  %774 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %774, i32 0, i32 1
  %arrayidx1616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1615, i32 0, i64 %idxprom1614
  %rtx1617 = bitcast %union.rtunion_def* %arrayidx1616 to %struct.rtx_def**
  %775 = load %struct.rtx_def*, %struct.rtx_def** %rtx1617, align 8
  %776 = bitcast %struct.rtx_def* %775 to i32*
  %bf.load1618 = load i32, i32* %776, align 8
  %bf.clear1619 = and i32 %bf.load1618, 65535
  %cmp1620 = icmp eq i32 %bf.clear1619, 61
  br i1 %cmp1620, label %cond.true.1622, label %cond.false.1623

cond.true.1622:                                   ; preds = %for.body.1613
  br label %cond.end.1629

cond.false.1623:                                  ; preds = %for.body.1613
  %777 = load i32, i32* %i, align 4
  %idxprom1624 = sext i32 %777 to i64
  %778 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %778, i32 0, i32 1
  %arrayidx1626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1625, i32 0, i64 %idxprom1624
  %rtx1627 = bitcast %union.rtunion_def* %arrayidx1626 to %struct.rtx_def**
  %779 = load %struct.rtx_def*, %struct.rtx_def** %rtx1627, align 8
  %780 = load i32, i32* %code, align 4
  %call1628 = call i32 @notreg_cost(%struct.rtx_def* %779, i32 %780)
  br label %cond.end.1629

cond.end.1629:                                    ; preds = %cond.false.1623, %cond.true.1622
  %cond1630 = phi i32 [ 0, %cond.true.1622 ], [ %call1628, %cond.false.1623 ]
  store i32 %cond1630, i32* %old_cost, align 4
  %781 = load i32, i32* %j, align 4
  %idxprom1631 = sext i32 %781 to i64
  %arrayidx1632 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 %idxprom1631
  %782 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1632, align 8
  %783 = bitcast %struct.rtx_def* %782 to i32*
  %bf.load1633 = load i32, i32* %783, align 8
  %bf.clear1634 = and i32 %bf.load1633, 65535
  %cmp1635 = icmp eq i32 %bf.clear1634, 61
  br i1 %cmp1635, label %cond.true.1637, label %cond.false.1638

cond.true.1637:                                   ; preds = %cond.end.1629
  br label %cond.end.1642

cond.false.1638:                                  ; preds = %cond.end.1629
  %784 = load i32, i32* %j, align 4
  %idxprom1639 = sext i32 %784 to i64
  %arrayidx1640 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 %idxprom1639
  %785 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1640, align 8
  %786 = load i32, i32* %code, align 4
  %call1641 = call i32 @notreg_cost(%struct.rtx_def* %785, i32 %786)
  br label %cond.end.1642

cond.end.1642:                                    ; preds = %cond.false.1638, %cond.true.1637
  %cond1643 = phi i32 [ 0, %cond.true.1637 ], [ %call1641, %cond.false.1638 ]
  store i32 %cond1643, i32* %new_cost, align 4
  %787 = load i32, i32* %new_cost, align 4
  %788 = load i32, i32* %old_cost, align 4
  %cmp1644 = icmp sgt i32 %787, %788
  br i1 %cmp1644, label %if.then.1721, label %lor.lhs.false.1646

lor.lhs.false.1646:                               ; preds = %cond.end.1642
  %789 = load i32, i32* %new_cost, align 4
  %790 = load i32, i32* %old_cost, align 4
  %cmp1647 = icmp eq i32 %789, %790
  br i1 %cmp1647, label %land.lhs.true.1649, label %if.end.1722

land.lhs.true.1649:                               ; preds = %lor.lhs.false.1646
  %791 = load i32, i32* %i, align 4
  %idxprom1650 = sext i32 %791 to i64
  %792 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %792, i32 0, i32 1
  %arrayidx1652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1651, i32 0, i64 %idxprom1650
  %rtx1653 = bitcast %union.rtunion_def* %arrayidx1652 to %struct.rtx_def**
  %793 = load %struct.rtx_def*, %struct.rtx_def** %rtx1653, align 8
  %794 = bitcast %struct.rtx_def* %793 to i32*
  %bf.load1654 = load i32, i32* %794, align 8
  %bf.clear1655 = and i32 %bf.load1654, 65535
  %cmp1656 = icmp eq i32 %bf.clear1655, 67
  br i1 %cmp1656, label %if.then.1721, label %lor.lhs.false.1658

lor.lhs.false.1658:                               ; preds = %land.lhs.true.1649
  %795 = load i32, i32* %i, align 4
  %idxprom1659 = sext i32 %795 to i64
  %796 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1660 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %796, i32 0, i32 1
  %arrayidx1661 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1660, i32 0, i64 %idxprom1659
  %rtx1662 = bitcast %union.rtunion_def* %arrayidx1661 to %struct.rtx_def**
  %797 = load %struct.rtx_def*, %struct.rtx_def** %rtx1662, align 8
  %798 = bitcast %struct.rtx_def* %797 to i32*
  %bf.load1663 = load i32, i32* %798, align 8
  %bf.clear1664 = and i32 %bf.load1663, 65535
  %cmp1665 = icmp eq i32 %bf.clear1664, 68
  br i1 %cmp1665, label %if.then.1721, label %lor.lhs.false.1667

lor.lhs.false.1667:                               ; preds = %lor.lhs.false.1658
  %799 = load i32, i32* %i, align 4
  %idxprom1668 = sext i32 %799 to i64
  %800 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %800, i32 0, i32 1
  %arrayidx1670 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1669, i32 0, i64 %idxprom1668
  %rtx1671 = bitcast %union.rtunion_def* %arrayidx1670 to %struct.rtx_def**
  %801 = load %struct.rtx_def*, %struct.rtx_def** %rtx1671, align 8
  %802 = bitcast %struct.rtx_def* %801 to i32*
  %bf.load1672 = load i32, i32* %802, align 8
  %bf.clear1673 = and i32 %bf.load1672, 65535
  %cmp1674 = icmp eq i32 %bf.clear1673, 54
  br i1 %cmp1674, label %if.then.1721, label %lor.lhs.false.1676

lor.lhs.false.1676:                               ; preds = %lor.lhs.false.1667
  %803 = load i32, i32* %i, align 4
  %idxprom1677 = sext i32 %803 to i64
  %804 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %804, i32 0, i32 1
  %arrayidx1679 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1678, i32 0, i64 %idxprom1677
  %rtx1680 = bitcast %union.rtunion_def* %arrayidx1679 to %struct.rtx_def**
  %805 = load %struct.rtx_def*, %struct.rtx_def** %rtx1680, align 8
  %806 = bitcast %struct.rtx_def* %805 to i32*
  %bf.load1681 = load i32, i32* %806, align 8
  %bf.clear1682 = and i32 %bf.load1681, 65535
  %cmp1683 = icmp eq i32 %bf.clear1682, 55
  br i1 %cmp1683, label %if.then.1721, label %lor.lhs.false.1685

lor.lhs.false.1685:                               ; preds = %lor.lhs.false.1676
  %807 = load i32, i32* %i, align 4
  %idxprom1686 = sext i32 %807 to i64
  %808 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %808, i32 0, i32 1
  %arrayidx1688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1687, i32 0, i64 %idxprom1686
  %rtx1689 = bitcast %union.rtunion_def* %arrayidx1688 to %struct.rtx_def**
  %809 = load %struct.rtx_def*, %struct.rtx_def** %rtx1689, align 8
  %810 = bitcast %struct.rtx_def* %809 to i32*
  %bf.load1690 = load i32, i32* %810, align 8
  %bf.clear1691 = and i32 %bf.load1690, 65535
  %cmp1692 = icmp eq i32 %bf.clear1691, 58
  br i1 %cmp1692, label %if.then.1721, label %lor.lhs.false.1694

lor.lhs.false.1694:                               ; preds = %lor.lhs.false.1685
  %811 = load i32, i32* %i, align 4
  %idxprom1695 = sext i32 %811 to i64
  %812 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %812, i32 0, i32 1
  %arrayidx1697 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1696, i32 0, i64 %idxprom1695
  %rtx1698 = bitcast %union.rtunion_def* %arrayidx1697 to %struct.rtx_def**
  %813 = load %struct.rtx_def*, %struct.rtx_def** %rtx1698, align 8
  %814 = bitcast %struct.rtx_def* %813 to i32*
  %bf.load1699 = load i32, i32* %814, align 8
  %bf.clear1700 = and i32 %bf.load1699, 65535
  %cmp1701 = icmp eq i32 %bf.clear1700, 134
  br i1 %cmp1701, label %if.then.1721, label %lor.lhs.false.1703

lor.lhs.false.1703:                               ; preds = %lor.lhs.false.1694
  %815 = load i32, i32* %i, align 4
  %idxprom1704 = sext i32 %815 to i64
  %816 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %816, i32 0, i32 1
  %arrayidx1706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1705, i32 0, i64 %idxprom1704
  %rtx1707 = bitcast %union.rtunion_def* %arrayidx1706 to %struct.rtx_def**
  %817 = load %struct.rtx_def*, %struct.rtx_def** %rtx1707, align 8
  %818 = bitcast %struct.rtx_def* %817 to i32*
  %bf.load1708 = load i32, i32* %818, align 8
  %bf.clear1709 = and i32 %bf.load1708, 65535
  %cmp1710 = icmp eq i32 %bf.clear1709, 56
  br i1 %cmp1710, label %if.then.1721, label %lor.lhs.false.1712

lor.lhs.false.1712:                               ; preds = %lor.lhs.false.1703
  %819 = load i32, i32* %i, align 4
  %idxprom1713 = sext i32 %819 to i64
  %820 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %820, i32 0, i32 1
  %arrayidx1715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1714, i32 0, i64 %idxprom1713
  %rtx1716 = bitcast %union.rtunion_def* %arrayidx1715 to %struct.rtx_def**
  %821 = load %struct.rtx_def*, %struct.rtx_def** %rtx1716, align 8
  %822 = bitcast %struct.rtx_def* %821 to i32*
  %bf.load1717 = load i32, i32* %822, align 8
  %bf.clear1718 = and i32 %bf.load1717, 65535
  %cmp1719 = icmp eq i32 %bf.clear1718, 140
  br i1 %cmp1719, label %if.then.1721, label %if.end.1722

if.then.1721:                                     ; preds = %lor.lhs.false.1712, %lor.lhs.false.1703, %lor.lhs.false.1694, %lor.lhs.false.1685, %lor.lhs.false.1676, %lor.lhs.false.1667, %lor.lhs.false.1658, %land.lhs.true.1649, %cond.end.1642
  br label %for.end.1793

if.end.1722:                                      ; preds = %lor.lhs.false.1712, %lor.lhs.false.1646
  %823 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %824 = load i32, i32* %i, align 4
  %idxprom1723 = sext i32 %824 to i64
  %825 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %825, i32 0, i32 1
  %arrayidx1725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1724, i32 0, i64 %idxprom1723
  %rtx1726 = bitcast %union.rtunion_def* %arrayidx1725 to %struct.rtx_def**
  %826 = load i32, i32* %j, align 4
  %idxprom1727 = sext i32 %826 to i64
  %arrayidx1728 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 %idxprom1727
  %827 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1728, align 8
  %call1729 = call i32 @validate_change(%struct.rtx_def* %823, %struct.rtx_def** %rtx1726, %struct.rtx_def* %827, i32 0)
  %tobool1730 = icmp ne i32 %call1729, 0
  br i1 %tobool1730, label %if.then.1731, label %if.end.1732

if.then.1731:                                     ; preds = %if.end.1722
  br label %for.end.1793

if.end.1732:                                      ; preds = %if.end.1722
  %828 = load i32, i32* %code, align 4
  %cmp1733 = icmp eq i32 %828, 102
  br i1 %cmp1733, label %if.then.1756, label %lor.lhs.false.1735

lor.lhs.false.1735:                               ; preds = %if.end.1732
  %829 = load i32, i32* %code, align 4
  %cmp1736 = icmp eq i32 %829, 103
  br i1 %cmp1736, label %if.then.1756, label %lor.lhs.false.1738

lor.lhs.false.1738:                               ; preds = %lor.lhs.false.1735
  %830 = load i32, i32* %code, align 4
  %idxprom1739 = sext i32 %830 to i64
  %arrayidx1740 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1739
  %831 = load i8, i8* %arrayidx1740, align 1
  %conv1741 = sext i8 %831 to i32
  %cmp1742 = icmp eq i32 %conv1741, 99
  br i1 %cmp1742, label %if.then.1756, label %lor.lhs.false.1744

lor.lhs.false.1744:                               ; preds = %lor.lhs.false.1738
  %832 = load i32, i32* %code, align 4
  %cmp1745 = icmp eq i32 %832, 119
  br i1 %cmp1745, label %if.then.1756, label %lor.lhs.false.1747

lor.lhs.false.1747:                               ; preds = %lor.lhs.false.1744
  %833 = load i32, i32* %code, align 4
  %cmp1748 = icmp eq i32 %833, 114
  br i1 %cmp1748, label %if.then.1756, label %lor.lhs.false.1750

lor.lhs.false.1750:                               ; preds = %lor.lhs.false.1747
  %834 = load i32, i32* %code, align 4
  %cmp1751 = icmp eq i32 %834, 113
  br i1 %cmp1751, label %if.then.1756, label %lor.lhs.false.1753

lor.lhs.false.1753:                               ; preds = %lor.lhs.false.1750
  %835 = load i32, i32* %code, align 4
  %cmp1754 = icmp eq i32 %835, 112
  br i1 %cmp1754, label %if.then.1756, label %if.end.1791

if.then.1756:                                     ; preds = %lor.lhs.false.1753, %lor.lhs.false.1750, %lor.lhs.false.1747, %lor.lhs.false.1744, %lor.lhs.false.1738, %lor.lhs.false.1735, %if.end.1732
  %836 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %837 = load i32, i32* %i, align 4
  %idxprom1757 = sext i32 %837 to i64
  %838 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %838, i32 0, i32 1
  %arrayidx1759 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1758, i32 0, i64 %idxprom1757
  %rtx1760 = bitcast %union.rtunion_def* %arrayidx1759 to %struct.rtx_def**
  %839 = load i32, i32* %i, align 4
  %sub1761 = sub nsw i32 1, %839
  %idxprom1762 = sext i32 %sub1761 to i64
  %840 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %840, i32 0, i32 1
  %arrayidx1764 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1763, i32 0, i64 %idxprom1762
  %rtx1765 = bitcast %union.rtunion_def* %arrayidx1764 to %struct.rtx_def**
  %841 = load %struct.rtx_def*, %struct.rtx_def** %rtx1765, align 8
  %call1766 = call i32 @validate_change(%struct.rtx_def* %836, %struct.rtx_def** %rtx1760, %struct.rtx_def* %841, i32 1)
  %842 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %843 = load i32, i32* %i, align 4
  %sub1767 = sub nsw i32 1, %843
  %idxprom1768 = sext i32 %sub1767 to i64
  %844 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1769 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %844, i32 0, i32 1
  %arrayidx1770 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1769, i32 0, i64 %idxprom1768
  %rtx1771 = bitcast %union.rtunion_def* %arrayidx1770 to %struct.rtx_def**
  %845 = load i32, i32* %j, align 4
  %idxprom1772 = sext i32 %845 to i64
  %arrayidx1773 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %replacements, i32 0, i64 %idxprom1772
  %846 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1773, align 8
  %call1774 = call i32 @validate_change(%struct.rtx_def* %842, %struct.rtx_def** %rtx1771, %struct.rtx_def* %846, i32 1)
  %call1775 = call i32 @apply_change_group()
  %tobool1776 = icmp ne i32 %call1775, 0
  br i1 %tobool1776, label %if.then.1777, label %if.end.1790

if.then.1777:                                     ; preds = %if.then.1756
  %847 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %847, i32 0, i32 1
  %arrayidx1779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1778, i32 0, i64 0
  %rtx1780 = bitcast %union.rtunion_def* %arrayidx1779 to %struct.rtx_def**
  %848 = load %struct.rtx_def*, %struct.rtx_def** %rtx1780, align 8
  store %struct.rtx_def* %848, %struct.rtx_def** %tem, align 8
  %849 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1781 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %849, i32 0, i32 1
  %arrayidx1782 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1781, i32 0, i64 1
  %rtx1783 = bitcast %union.rtunion_def* %arrayidx1782 to %struct.rtx_def**
  %850 = load %struct.rtx_def*, %struct.rtx_def** %rtx1783, align 8
  %851 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1784 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %851, i32 0, i32 1
  %arrayidx1785 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1784, i32 0, i64 0
  %rtx1786 = bitcast %union.rtunion_def* %arrayidx1785 to %struct.rtx_def**
  store %struct.rtx_def* %850, %struct.rtx_def** %rtx1786, align 8
  %852 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %853 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %853, i32 0, i32 1
  %arrayidx1788 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1787, i32 0, i64 1
  %rtx1789 = bitcast %union.rtunion_def* %arrayidx1788 to %struct.rtx_def**
  store %struct.rtx_def* %852, %struct.rtx_def** %rtx1789, align 8
  store i32 1, i32* %must_swap, align 4
  br label %for.end.1793

if.end.1790:                                      ; preds = %if.then.1756
  br label %if.end.1791

if.end.1791:                                      ; preds = %if.end.1790, %lor.lhs.false.1753
  br label %for.inc.1792

for.inc.1792:                                     ; preds = %if.end.1791
  %854 = load i32, i32* %j, align 4
  %inc = add nsw i32 %854, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.1607

for.end.1793:                                     ; preds = %if.then.1777, %if.then.1731, %if.then.1721, %land.end
  br label %if.end.1802

if.else.1794:                                     ; preds = %for.body.1472
  %855 = load i32, i32* %i, align 4
  %idxprom1795 = sext i32 %855 to i64
  %856 = load i8*, i8** %fmt, align 8
  %arrayidx1796 = getelementptr inbounds i8, i8* %856, i64 %idxprom1795
  %857 = load i8, i8* %arrayidx1796, align 1
  %conv1797 = sext i8 %857 to i32
  %cmp1798 = icmp eq i32 %conv1797, 69
  br i1 %cmp1798, label %if.then.1800, label %if.end.1801

if.then.1800:                                     ; preds = %if.else.1794
  br label %if.end.1801

if.end.1801:                                      ; preds = %if.then.1800, %if.else.1794
  br label %if.end.1802

if.end.1802:                                      ; preds = %if.end.1801, %for.end.1793
  br label %for.inc.1803

for.inc.1803:                                     ; preds = %if.end.1802, %if.then.1596
  %858 = load i32, i32* %i, align 4
  %dec1804 = add nsw i32 %858, -1
  store i32 %dec1804, i32* %i, align 4
  br label %for.cond.1469

for.end.1805:                                     ; preds = %for.cond.1469
  %859 = load i32, i32* %code, align 4
  %cmp1806 = icmp eq i32 %859, 103
  br i1 %cmp1806, label %if.then.1829, label %lor.lhs.false.1808

lor.lhs.false.1808:                               ; preds = %for.end.1805
  %860 = load i32, i32* %code, align 4
  %cmp1809 = icmp eq i32 %860, 102
  br i1 %cmp1809, label %if.then.1829, label %lor.lhs.false.1811

lor.lhs.false.1811:                               ; preds = %lor.lhs.false.1808
  %861 = load i32, i32* %code, align 4
  %idxprom1812 = sext i32 %861 to i64
  %arrayidx1813 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1812
  %862 = load i8, i8* %arrayidx1813, align 1
  %conv1814 = sext i8 %862 to i32
  %cmp1815 = icmp eq i32 %conv1814, 99
  br i1 %cmp1815, label %if.then.1829, label %lor.lhs.false.1817

lor.lhs.false.1817:                               ; preds = %lor.lhs.false.1811
  %863 = load i32, i32* %code, align 4
  %cmp1818 = icmp eq i32 %863, 119
  br i1 %cmp1818, label %if.then.1829, label %lor.lhs.false.1820

lor.lhs.false.1820:                               ; preds = %lor.lhs.false.1817
  %864 = load i32, i32* %code, align 4
  %cmp1821 = icmp eq i32 %864, 114
  br i1 %cmp1821, label %if.then.1829, label %lor.lhs.false.1823

lor.lhs.false.1823:                               ; preds = %lor.lhs.false.1820
  %865 = load i32, i32* %code, align 4
  %cmp1824 = icmp eq i32 %865, 113
  br i1 %cmp1824, label %if.then.1829, label %lor.lhs.false.1826

lor.lhs.false.1826:                               ; preds = %lor.lhs.false.1823
  %866 = load i32, i32* %code, align 4
  %cmp1827 = icmp eq i32 %866, 112
  br i1 %cmp1827, label %if.then.1829, label %if.end.1874

if.then.1829:                                     ; preds = %lor.lhs.false.1826, %lor.lhs.false.1823, %lor.lhs.false.1820, %lor.lhs.false.1817, %lor.lhs.false.1811, %lor.lhs.false.1808, %for.end.1805
  %867 = load i32, i32* %must_swap, align 4
  %tobool1830 = icmp ne i32 %867, 0
  br i1 %tobool1830, label %if.then.1846, label %lor.lhs.false.1831

lor.lhs.false.1831:                               ; preds = %if.then.1829
  %868 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool1832 = icmp ne %struct.rtx_def* %868, null
  br i1 %tobool1832, label %land.lhs.true.1833, label %if.end.1873

land.lhs.true.1833:                               ; preds = %lor.lhs.false.1831
  %869 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %cmp1834 = icmp eq %struct.rtx_def* %869, null
  br i1 %cmp1834, label %if.then.1846, label %lor.lhs.false.1836

lor.lhs.false.1836:                               ; preds = %land.lhs.true.1833
  %870 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %871 = bitcast %struct.rtx_def* %870 to i32*
  %bf.load1837 = load i32, i32* %871, align 8
  %bf.clear1838 = and i32 %bf.load1837, 65535
  %cmp1839 = icmp eq i32 %bf.clear1838, 54
  br i1 %cmp1839, label %land.lhs.true.1841, label %if.end.1873

land.lhs.true.1841:                               ; preds = %lor.lhs.false.1836
  %872 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %873 = bitcast %struct.rtx_def* %872 to i32*
  %bf.load1842 = load i32, i32* %873, align 8
  %bf.clear1843 = and i32 %bf.load1842, 65535
  %cmp1844 = icmp ne i32 %bf.clear1843, 54
  br i1 %cmp1844, label %if.then.1846, label %if.end.1873

if.then.1846:                                     ; preds = %land.lhs.true.1841, %land.lhs.true.1833, %if.then.1829
  %874 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %874, i32 0, i32 1
  %arrayidx1849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1848, i32 0, i64 0
  %rtx1850 = bitcast %union.rtunion_def* %arrayidx1849 to %struct.rtx_def**
  %875 = load %struct.rtx_def*, %struct.rtx_def** %rtx1850, align 8
  store %struct.rtx_def* %875, %struct.rtx_def** %tem1847, align 8
  %876 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp1851 = icmp eq %struct.rtx_def* %876, null
  br i1 %cmp1851, label %land.lhs.true.1853, label %if.end.1857

land.lhs.true.1853:                               ; preds = %if.then.1846
  %877 = load i32, i32* %copied, align 4
  %tobool1854 = icmp ne i32 %877, 0
  br i1 %tobool1854, label %if.end.1857, label %if.then.1855

if.then.1855:                                     ; preds = %land.lhs.true.1853
  %878 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call1856 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %878)
  store %struct.rtx_def* %call1856, %struct.rtx_def** %x.addr, align 8
  store i32 1, i32* %copied, align 4
  br label %if.end.1857

if.end.1857:                                      ; preds = %if.then.1855, %land.lhs.true.1853, %if.then.1846
  %879 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %880 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1858 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %880, i32 0, i32 1
  %arrayidx1859 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1858, i32 0, i64 0
  %rtx1860 = bitcast %union.rtunion_def* %arrayidx1859 to %struct.rtx_def**
  %881 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1861 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %881, i32 0, i32 1
  %arrayidx1862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1861, i32 0, i64 1
  %rtx1863 = bitcast %union.rtunion_def* %arrayidx1862 to %struct.rtx_def**
  %882 = load %struct.rtx_def*, %struct.rtx_def** %rtx1863, align 8
  %call1864 = call i32 @validate_change(%struct.rtx_def* %879, %struct.rtx_def** %rtx1860, %struct.rtx_def* %882, i32 1)
  %883 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %884 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld1865 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %884, i32 0, i32 1
  %arrayidx1866 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1865, i32 0, i64 1
  %rtx1867 = bitcast %union.rtunion_def* %arrayidx1866 to %struct.rtx_def**
  %885 = load %struct.rtx_def*, %struct.rtx_def** %tem1847, align 8
  %call1868 = call i32 @validate_change(%struct.rtx_def* %883, %struct.rtx_def** %rtx1867, %struct.rtx_def* %885, i32 1)
  %call1869 = call i32 @apply_change_group()
  %tobool1870 = icmp ne i32 %call1869, 0
  br i1 %tobool1870, label %if.then.1871, label %if.end.1872

if.then.1871:                                     ; preds = %if.end.1857
  %886 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  store %struct.rtx_def* %886, %struct.rtx_def** %tem1847, align 8
  %887 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  store %struct.rtx_def* %887, %struct.rtx_def** %const_arg0, align 8
  %888 = load %struct.rtx_def*, %struct.rtx_def** %tem1847, align 8
  store %struct.rtx_def* %888, %struct.rtx_def** %const_arg1, align 8
  %889 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  store %struct.rtx_def* %889, %struct.rtx_def** %tem1847, align 8
  %890 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  store %struct.rtx_def* %890, %struct.rtx_def** %folded_arg0, align 8
  %891 = load %struct.rtx_def*, %struct.rtx_def** %tem1847, align 8
  store %struct.rtx_def* %891, %struct.rtx_def** %folded_arg1, align 8
  br label %if.end.1872

if.end.1872:                                      ; preds = %if.then.1871, %if.end.1857
  br label %if.end.1873

if.end.1873:                                      ; preds = %if.end.1872, %land.lhs.true.1841, %lor.lhs.false.1836, %lor.lhs.false.1831
  br label %if.end.1874

if.end.1874:                                      ; preds = %if.end.1873, %lor.lhs.false.1826
  %892 = load i32, i32* %code, align 4
  %idxprom1875 = sext i32 %892 to i64
  %arrayidx1876 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom1875
  %893 = load i8, i8* %arrayidx1876, align 1
  %conv1877 = sext i8 %893 to i32
  switch i32 %conv1877, label %sw.epilog.2892 [
    i32 49, label %sw.bb.1878
    i32 60, label %sw.bb.1914
    i32 50, label %sw.bb.2409
    i32 99, label %sw.bb.2409
    i32 111, label %sw.bb.2843
    i32 51, label %sw.bb.2862
    i32 98, label %sw.bb.2862
    i32 120, label %sw.bb.2882
  ]

sw.bb.1878:                                       ; preds = %if.end.1874
  store i32 0, i32* %is_const, align 4
  %894 = load i32, i32* %code, align 4
  %cmp1879 = icmp eq i32 %894, 121
  br i1 %cmp1879, label %land.lhs.true.1884, label %lor.lhs.false.1881

lor.lhs.false.1881:                               ; preds = %sw.bb.1878
  %895 = load i32, i32* %code, align 4
  %cmp1882 = icmp eq i32 %895, 120
  br i1 %cmp1882, label %land.lhs.true.1884, label %if.end.1888

land.lhs.true.1884:                               ; preds = %lor.lhs.false.1881, %sw.bb.1878
  %896 = load i32, i32* %mode_arg0, align 4
  %cmp1885 = icmp eq i32 %896, 0
  br i1 %cmp1885, label %if.then.1887, label %if.end.1888

if.then.1887:                                     ; preds = %land.lhs.true.1884
  br label %sw.epilog.2892

if.end.1888:                                      ; preds = %land.lhs.true.1884, %lor.lhs.false.1881
  %897 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %cmp1889 = icmp ne %struct.rtx_def* %897, null
  br i1 %cmp1889, label %land.lhs.true.1891, label %if.end.1900

land.lhs.true.1891:                               ; preds = %if.end.1888
  %898 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %899 = bitcast %struct.rtx_def* %898 to i32*
  %bf.load1892 = load i32, i32* %899, align 8
  %bf.clear1893 = and i32 %bf.load1892, 65535
  %cmp1894 = icmp eq i32 %bf.clear1893, 58
  br i1 %cmp1894, label %if.then.1896, label %if.end.1900

if.then.1896:                                     ; preds = %land.lhs.true.1891
  store i32 1, i32* %is_const, align 4
  %900 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %fld1897 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %900, i32 0, i32 1
  %arrayidx1898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1897, i32 0, i64 0
  %rtx1899 = bitcast %union.rtunion_def* %arrayidx1898 to %struct.rtx_def**
  %901 = load %struct.rtx_def*, %struct.rtx_def** %rtx1899, align 8
  store %struct.rtx_def* %901, %struct.rtx_def** %const_arg0, align 8
  br label %if.end.1900

if.end.1900:                                      ; preds = %if.then.1896, %land.lhs.true.1891, %if.end.1888
  %902 = load i32, i32* %code, align 4
  %903 = load i32, i32* %mode, align 4
  %904 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool1901 = icmp ne %struct.rtx_def* %904, null
  br i1 %tobool1901, label %cond.true.1902, label %cond.false.1903

cond.true.1902:                                   ; preds = %if.end.1900
  %905 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.1904

cond.false.1903:                                  ; preds = %if.end.1900
  %906 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.1904

cond.end.1904:                                    ; preds = %cond.false.1903, %cond.true.1902
  %cond1905 = phi %struct.rtx_def* [ %905, %cond.true.1902 ], [ %906, %cond.false.1903 ]
  %907 = load i32, i32* %mode_arg0, align 4
  %call1906 = call %struct.rtx_def* @simplify_unary_operation(i32 %902, i32 %903, %struct.rtx_def* %cond1905, i32 %907)
  store %struct.rtx_def* %call1906, %struct.rtx_def** %new, align 8
  %908 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %cmp1907 = icmp ne %struct.rtx_def* %908, null
  br i1 %cmp1907, label %land.lhs.true.1909, label %if.end.1913

land.lhs.true.1909:                               ; preds = %cond.end.1904
  %909 = load i32, i32* %is_const, align 4
  %tobool1910 = icmp ne i32 %909, 0
  br i1 %tobool1910, label %if.then.1911, label %if.end.1913

if.then.1911:                                     ; preds = %land.lhs.true.1909
  %910 = load i32, i32* %mode, align 4
  %911 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call1912 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %910, %struct.rtx_def* %911)
  store %struct.rtx_def* %call1912, %struct.rtx_def** %new, align 8
  br label %if.end.1913

if.end.1913:                                      ; preds = %if.then.1911, %land.lhs.true.1909, %cond.end.1904
  br label %sw.epilog.2892

sw.bb.1914:                                       ; preds = %if.end.1874
  %912 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %cmp1915 = icmp eq %struct.rtx_def* %912, null
  br i1 %cmp1915, label %if.then.1920, label %lor.lhs.false.1917

lor.lhs.false.1917:                               ; preds = %sw.bb.1914
  %913 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %cmp1918 = icmp eq %struct.rtx_def* %913, null
  br i1 %cmp1918, label %if.then.1920, label %if.end.2307

if.then.1920:                                     ; preds = %lor.lhs.false.1917, %sw.bb.1914
  %914 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  store %struct.rtx_def* %914, %struct.rtx_def** %true_rtx, align 8
  %915 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %915, %struct.rtx_def** %false_rtx, align 8
  %916 = load i32, i32* %code, align 4
  %call1921 = call i32 @find_comparison_args(i32 %916, %struct.rtx_def** %folded_arg0, %struct.rtx_def** %folded_arg1, i32* %mode_arg0, i32* %mode_arg1)
  store i32 %call1921, i32* %code, align 4
  %917 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %call1922 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %917)
  store %struct.rtx_def* %call1922, %struct.rtx_def** %const_arg0, align 8
  %918 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %call1923 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %918)
  store %struct.rtx_def* %call1923, %struct.rtx_def** %const_arg1, align 8
  %919 = load i32, i32* %mode_arg0, align 4
  %cmp1924 = icmp eq i32 %919, 0
  br i1 %cmp1924, label %if.then.1931, label %lor.lhs.false.1926

lor.lhs.false.1926:                               ; preds = %if.then.1920
  %920 = load i32, i32* %mode_arg0, align 4
  %idxprom1927 = sext i32 %920 to i64
  %arrayidx1928 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom1927
  %921 = load i32, i32* %arrayidx1928, align 4
  %cmp1929 = icmp eq i32 %921, 4
  br i1 %cmp1929, label %if.then.1931, label %if.end.1932

if.then.1931:                                     ; preds = %lor.lhs.false.1926, %if.then.1920
  br label %sw.epilog.2892

if.end.1932:                                      ; preds = %lor.lhs.false.1926
  %922 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %cmp1933 = icmp eq %struct.rtx_def* %922, null
  br i1 %cmp1933, label %if.then.1938, label %lor.lhs.false.1935

lor.lhs.false.1935:                               ; preds = %if.end.1932
  %923 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %cmp1936 = icmp eq %struct.rtx_def* %923, null
  br i1 %cmp1936, label %if.then.1938, label %if.end.2306

if.then.1938:                                     ; preds = %lor.lhs.false.1935, %if.end.1932
  %924 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %925 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp1939 = icmp eq %struct.rtx_def* %924, %925
  br i1 %cmp1939, label %land.lhs.true.1941, label %if.end.2061

land.lhs.true.1941:                               ; preds = %if.then.1938
  %926 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %927 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp1942 = icmp eq %struct.rtx_def* %926, %927
  br i1 %cmp1942, label %if.then.2051, label %lor.lhs.false.1944

lor.lhs.false.1944:                               ; preds = %land.lhs.true.1941
  %928 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %929 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp1945 = icmp eq %struct.rtx_def* %928, %929
  br i1 %cmp1945, label %if.then.2051, label %lor.lhs.false.1947

lor.lhs.false.1947:                               ; preds = %lor.lhs.false.1944
  %930 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %931 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp1948 = icmp eq %struct.rtx_def* %930, %931
  br i1 %cmp1948, label %if.then.2051, label %lor.lhs.false.1950

lor.lhs.false.1950:                               ; preds = %lor.lhs.false.1947
  %932 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %933 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp1951 = icmp eq %struct.rtx_def* %932, %933
  br i1 %cmp1951, label %if.then.2051, label %lor.lhs.false.1953

lor.lhs.false.1953:                               ; preds = %lor.lhs.false.1950
  %934 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %935 = bitcast %struct.rtx_def* %934 to i32*
  %bf.load1954 = load i32, i32* %935, align 8
  %bf.clear1955 = and i32 %bf.load1954, 65535
  %cmp1956 = icmp eq i32 %bf.clear1955, 75
  br i1 %cmp1956, label %land.lhs.true.1958, label %lor.lhs.false.1996

land.lhs.true.1958:                               ; preds = %lor.lhs.false.1953
  %936 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld1959 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %936, i32 0, i32 1
  %arrayidx1960 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1959, i32 0, i64 1
  %rtx1961 = bitcast %union.rtunion_def* %arrayidx1960 to %struct.rtx_def**
  %937 = load %struct.rtx_def*, %struct.rtx_def** %rtx1961, align 8
  %938 = bitcast %struct.rtx_def* %937 to i32*
  %bf.load1962 = load i32, i32* %938, align 8
  %bf.clear1963 = and i32 %bf.load1962, 65535
  %cmp1964 = icmp eq i32 %bf.clear1963, 54
  br i1 %cmp1964, label %land.lhs.true.1966, label %lor.lhs.false.1996

land.lhs.true.1966:                               ; preds = %land.lhs.true.1958
  %939 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld1967 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %939, i32 0, i32 1
  %arrayidx1968 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1967, i32 0, i64 0
  %rtx1969 = bitcast %union.rtunion_def* %arrayidx1968 to %struct.rtx_def**
  %940 = load %struct.rtx_def*, %struct.rtx_def** %rtx1969, align 8
  %941 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp1970 = icmp eq %struct.rtx_def* %940, %941
  br i1 %cmp1970, label %if.then.2051, label %lor.lhs.false.1972

lor.lhs.false.1972:                               ; preds = %land.lhs.true.1966
  %942 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld1973 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %942, i32 0, i32 1
  %arrayidx1974 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1973, i32 0, i64 0
  %rtx1975 = bitcast %union.rtunion_def* %arrayidx1974 to %struct.rtx_def**
  %943 = load %struct.rtx_def*, %struct.rtx_def** %rtx1975, align 8
  %944 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp1976 = icmp eq %struct.rtx_def* %943, %944
  br i1 %cmp1976, label %if.then.2051, label %lor.lhs.false.1978

lor.lhs.false.1978:                               ; preds = %lor.lhs.false.1972
  %945 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %946 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp1979 = icmp eq %struct.rtx_def* %945, %946
  br i1 %cmp1979, label %land.lhs.true.1981, label %lor.lhs.false.1984

land.lhs.true.1981:                               ; preds = %lor.lhs.false.1978
  %947 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv1982 = sext i8 %947 to i32
  %tobool1983 = icmp ne i32 %conv1982, 0
  br i1 %tobool1983, label %if.then.2051, label %lor.lhs.false.1984

lor.lhs.false.1984:                               ; preds = %land.lhs.true.1981, %lor.lhs.false.1978
  %948 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld1985 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %948, i32 0, i32 1
  %arrayidx1986 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1985, i32 0, i64 0
  %rtx1987 = bitcast %union.rtunion_def* %arrayidx1986 to %struct.rtx_def**
  %949 = load %struct.rtx_def*, %struct.rtx_def** %rtx1987, align 8
  %950 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp1988 = icmp eq %struct.rtx_def* %949, %950
  br i1 %cmp1988, label %if.then.2051, label %lor.lhs.false.1990

lor.lhs.false.1990:                               ; preds = %lor.lhs.false.1984
  %951 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld1991 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %951, i32 0, i32 1
  %arrayidx1992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1991, i32 0, i64 0
  %rtx1993 = bitcast %union.rtunion_def* %arrayidx1992 to %struct.rtx_def**
  %952 = load %struct.rtx_def*, %struct.rtx_def** %rtx1993, align 8
  %953 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp1994 = icmp eq %struct.rtx_def* %952, %953
  br i1 %cmp1994, label %if.then.2051, label %lor.lhs.false.1996

lor.lhs.false.1996:                               ; preds = %lor.lhs.false.1990, %land.lhs.true.1958, %lor.lhs.false.1953
  %954 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %955 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp1997 = icmp eq %struct.rtx_def* %954, %955
  br i1 %cmp1997, label %if.then.2051, label %lor.lhs.false.1999

lor.lhs.false.1999:                               ; preds = %lor.lhs.false.1996
  %956 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %957 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 8), align 8
  %cmp2000 = icmp eq %struct.rtx_def* %956, %957
  br i1 %cmp2000, label %if.then.2051, label %lor.lhs.false.2002

lor.lhs.false.2002:                               ; preds = %lor.lhs.false.1999
  %958 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %959 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 9), align 8
  %cmp2003 = icmp eq %struct.rtx_def* %958, %959
  br i1 %cmp2003, label %if.then.2051, label %lor.lhs.false.2005

lor.lhs.false.2005:                               ; preds = %lor.lhs.false.2002
  %960 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %961 = bitcast %struct.rtx_def* %960 to i32*
  %bf.load2006 = load i32, i32* %961, align 8
  %bf.clear2007 = and i32 %bf.load2006, 65535
  %cmp2008 = icmp eq i32 %bf.clear2007, 75
  br i1 %cmp2008, label %land.lhs.true.2010, label %lor.lhs.false.2036

land.lhs.true.2010:                               ; preds = %lor.lhs.false.2005
  %962 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %962, i32 0, i32 1
  %arrayidx2012 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2011, i32 0, i64 1
  %rtx2013 = bitcast %union.rtunion_def* %arrayidx2012 to %struct.rtx_def**
  %963 = load %struct.rtx_def*, %struct.rtx_def** %rtx2013, align 8
  %964 = bitcast %struct.rtx_def* %963 to i32*
  %bf.load2014 = load i32, i32* %964, align 8
  %bf.clear2015 = and i32 %bf.load2014, 65535
  %cmp2016 = icmp eq i32 %bf.clear2015, 54
  br i1 %cmp2016, label %land.lhs.true.2018, label %lor.lhs.false.2036

land.lhs.true.2018:                               ; preds = %land.lhs.true.2010
  %965 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2019 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %965, i32 0, i32 1
  %arrayidx2020 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2019, i32 0, i64 0
  %rtx2021 = bitcast %union.rtunion_def* %arrayidx2020 to %struct.rtx_def**
  %966 = load %struct.rtx_def*, %struct.rtx_def** %rtx2021, align 8
  %967 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp2022 = icmp eq %struct.rtx_def* %966, %967
  br i1 %cmp2022, label %if.then.2051, label %lor.lhs.false.2024

lor.lhs.false.2024:                               ; preds = %land.lhs.true.2018
  %968 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2025 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %968, i32 0, i32 1
  %arrayidx2026 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2025, i32 0, i64 0
  %rtx2027 = bitcast %union.rtunion_def* %arrayidx2026 to %struct.rtx_def**
  %969 = load %struct.rtx_def*, %struct.rtx_def** %rtx2027, align 8
  %970 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 8), align 8
  %cmp2028 = icmp eq %struct.rtx_def* %969, %970
  br i1 %cmp2028, label %if.then.2051, label %lor.lhs.false.2030

lor.lhs.false.2030:                               ; preds = %lor.lhs.false.2024
  %971 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2031 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %971, i32 0, i32 1
  %arrayidx2032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2031, i32 0, i64 0
  %rtx2033 = bitcast %union.rtunion_def* %arrayidx2032 to %struct.rtx_def**
  %972 = load %struct.rtx_def*, %struct.rtx_def** %rtx2033, align 8
  %973 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 9), align 8
  %cmp2034 = icmp eq %struct.rtx_def* %972, %973
  br i1 %cmp2034, label %if.then.2051, label %lor.lhs.false.2036

lor.lhs.false.2036:                               ; preds = %lor.lhs.false.2030, %land.lhs.true.2010, %lor.lhs.false.2005
  %974 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %975 = bitcast %struct.rtx_def* %974 to i32*
  %bf.load2037 = load i32, i32* %975, align 8
  %bf.clear2038 = and i32 %bf.load2037, 65535
  %cmp2039 = icmp eq i32 %bf.clear2038, 70
  br i1 %cmp2039, label %if.then.2051, label %lor.lhs.false.2041

lor.lhs.false.2041:                               ; preds = %lor.lhs.false.2036
  %976 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %977 = bitcast %struct.rtx_def* %976 to i32*
  %bf.load2042 = load i32, i32* %977, align 8
  %bf.clear2043 = and i32 %bf.load2042, 65535
  %cmp2044 = icmp eq i32 %bf.clear2043, 67
  br i1 %cmp2044, label %if.then.2051, label %lor.lhs.false.2046

lor.lhs.false.2046:                               ; preds = %lor.lhs.false.2041
  %978 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %979 = bitcast %struct.rtx_def* %978 to i32*
  %bf.load2047 = load i32, i32* %979, align 8
  %bf.clear2048 = and i32 %bf.load2047, 65535
  %cmp2049 = icmp eq i32 %bf.clear2048, 58
  br i1 %cmp2049, label %if.then.2051, label %if.end.2061

if.then.2051:                                     ; preds = %lor.lhs.false.2046, %lor.lhs.false.2041, %lor.lhs.false.2036, %lor.lhs.false.2030, %lor.lhs.false.2024, %land.lhs.true.2018, %lor.lhs.false.2002, %lor.lhs.false.1999, %lor.lhs.false.1996, %lor.lhs.false.1990, %lor.lhs.false.1984, %land.lhs.true.1981, %lor.lhs.false.1972, %land.lhs.true.1966, %lor.lhs.false.1950, %lor.lhs.false.1947, %lor.lhs.false.1944, %land.lhs.true.1941
  %980 = load i32, i32* %code, align 4
  %cmp2052 = icmp eq i32 %980, 103
  br i1 %cmp2052, label %if.then.2054, label %if.else.2055

if.then.2054:                                     ; preds = %if.then.2051
  %981 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %981, %struct.rtx_def** %retval
  br label %return

if.else.2055:                                     ; preds = %if.then.2051
  %982 = load i32, i32* %code, align 4
  %cmp2056 = icmp eq i32 %982, 102
  br i1 %cmp2056, label %if.then.2058, label %if.end.2059

if.then.2058:                                     ; preds = %if.else.2055
  %983 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %983, %struct.rtx_def** %retval
  br label %return

if.end.2059:                                      ; preds = %if.else.2055
  br label %if.end.2060

if.end.2060:                                      ; preds = %if.end.2059
  br label %if.end.2061

if.end.2061:                                      ; preds = %if.end.2060, %lor.lhs.false.2046, %if.then.1938
  %984 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %985 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %cmp2062 = icmp eq %struct.rtx_def* %984, %985
  br i1 %cmp2062, label %if.then.2124, label %lor.lhs.false.2064

lor.lhs.false.2064:                               ; preds = %if.end.2061
  %986 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %987 = bitcast %struct.rtx_def* %986 to i32*
  %bf.load2065 = load i32, i32* %987, align 8
  %bf.clear2066 = and i32 %bf.load2065, 65535
  %cmp2067 = icmp eq i32 %bf.clear2066, 61
  br i1 %cmp2067, label %land.lhs.true.2069, label %lor.lhs.false.2109

land.lhs.true.2069:                               ; preds = %lor.lhs.false.2064
  %988 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %989 = bitcast %struct.rtx_def* %988 to i32*
  %bf.load2070 = load i32, i32* %989, align 8
  %bf.clear2071 = and i32 %bf.load2070, 65535
  %cmp2072 = icmp eq i32 %bf.clear2071, 61
  br i1 %cmp2072, label %land.lhs.true.2074, label %lor.lhs.false.2109

land.lhs.true.2074:                               ; preds = %land.lhs.true.2069
  %990 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2075 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %990, i32 0, i32 1
  %arrayidx2076 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2075, i32 0, i64 0
  %rtuint2077 = bitcast %union.rtunion_def* %arrayidx2076 to i32*
  %991 = load i32, i32* %rtuint2077, align 4
  %992 = load i32, i32* @cached_regno, align 4
  %cmp2078 = icmp eq i32 %991, %992
  br i1 %cmp2078, label %land.lhs.true.2080, label %cond.false.2083

land.lhs.true.2080:                               ; preds = %land.lhs.true.2074
  %993 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2081 = icmp ne %struct.cse_reg_info* %993, null
  br i1 %tobool2081, label %cond.true.2082, label %cond.false.2083

cond.true.2082:                                   ; preds = %land.lhs.true.2080
  %994 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2088

cond.false.2083:                                  ; preds = %land.lhs.true.2080, %land.lhs.true.2074
  %995 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2084 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %995, i32 0, i32 1
  %arrayidx2085 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2084, i32 0, i64 0
  %rtuint2086 = bitcast %union.rtunion_def* %arrayidx2085 to i32*
  %996 = load i32, i32* %rtuint2086, align 4
  %call2087 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %996)
  br label %cond.end.2088

cond.end.2088:                                    ; preds = %cond.false.2083, %cond.true.2082
  %cond2089 = phi %struct.cse_reg_info* [ %994, %cond.true.2082 ], [ %call2087, %cond.false.2083 ]
  %reg_qty2090 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2089, i32 0, i32 3
  %997 = load i32, i32* %reg_qty2090, align 4
  %998 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %fld2091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %998, i32 0, i32 1
  %arrayidx2092 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2091, i32 0, i64 0
  %rtuint2093 = bitcast %union.rtunion_def* %arrayidx2092 to i32*
  %999 = load i32, i32* %rtuint2093, align 4
  %1000 = load i32, i32* @cached_regno, align 4
  %cmp2094 = icmp eq i32 %999, %1000
  br i1 %cmp2094, label %land.lhs.true.2096, label %cond.false.2099

land.lhs.true.2096:                               ; preds = %cond.end.2088
  %1001 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2097 = icmp ne %struct.cse_reg_info* %1001, null
  br i1 %tobool2097, label %cond.true.2098, label %cond.false.2099

cond.true.2098:                                   ; preds = %land.lhs.true.2096
  %1002 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2104

cond.false.2099:                                  ; preds = %land.lhs.true.2096, %cond.end.2088
  %1003 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %fld2100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1003, i32 0, i32 1
  %arrayidx2101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2100, i32 0, i64 0
  %rtuint2102 = bitcast %union.rtunion_def* %arrayidx2101 to i32*
  %1004 = load i32, i32* %rtuint2102, align 4
  %call2103 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1004)
  br label %cond.end.2104

cond.end.2104:                                    ; preds = %cond.false.2099, %cond.true.2098
  %cond2105 = phi %struct.cse_reg_info* [ %1002, %cond.true.2098 ], [ %call2103, %cond.false.2099 ]
  %reg_qty2106 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2105, i32 0, i32 3
  %1005 = load i32, i32* %reg_qty2106, align 4
  %cmp2107 = icmp eq i32 %997, %1005
  br i1 %cmp2107, label %if.then.2124, label %lor.lhs.false.2109

lor.lhs.false.2109:                               ; preds = %cond.end.2104, %land.lhs.true.2069, %lor.lhs.false.2064
  %1006 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1007 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1008 = load i32, i32* %mode_arg0, align 4
  %call2110 = call i32 @safe_hash(%struct.rtx_def* %1007, i32 %1008)
  %and2111 = and i32 %call2110, 31
  %1009 = load i32, i32* %mode_arg0, align 4
  %call2112 = call %struct.table_elt* @lookup(%struct.rtx_def* %1006, i32 %and2111, i32 %1009)
  store %struct.table_elt* %call2112, %struct.table_elt** %p0, align 8
  %tobool2113 = icmp ne %struct.table_elt* %call2112, null
  br i1 %tobool2113, label %land.lhs.true.2114, label %if.else.2193

land.lhs.true.2114:                               ; preds = %lor.lhs.false.2109
  %1010 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1011 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1012 = load i32, i32* %mode_arg0, align 4
  %call2115 = call i32 @safe_hash(%struct.rtx_def* %1011, i32 %1012)
  %and2116 = and i32 %call2115, 31
  %1013 = load i32, i32* %mode_arg0, align 4
  %call2117 = call %struct.table_elt* @lookup(%struct.rtx_def* %1010, i32 %and2116, i32 %1013)
  store %struct.table_elt* %call2117, %struct.table_elt** %p1, align 8
  %tobool2118 = icmp ne %struct.table_elt* %call2117, null
  br i1 %tobool2118, label %land.lhs.true.2119, label %if.else.2193

land.lhs.true.2119:                               ; preds = %land.lhs.true.2114
  %1014 = load %struct.table_elt*, %struct.table_elt** %p0, align 8
  %first_same_value2120 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1014, i32 0, i32 6
  %1015 = load %struct.table_elt*, %struct.table_elt** %first_same_value2120, align 8
  %1016 = load %struct.table_elt*, %struct.table_elt** %p1, align 8
  %first_same_value2121 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1016, i32 0, i32 6
  %1017 = load %struct.table_elt*, %struct.table_elt** %first_same_value2121, align 8
  %cmp2122 = icmp eq %struct.table_elt* %1015, %1017
  br i1 %cmp2122, label %if.then.2124, label %if.else.2193

if.then.2124:                                     ; preds = %land.lhs.true.2119, %cond.end.2104, %if.end.2061
  %1018 = load i32, i32* %mode_arg0, align 4
  %idxprom2125 = sext i32 %1018 to i64
  %arrayidx2126 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2125
  %1019 = load i32, i32* %arrayidx2126, align 4
  %cmp2127 = icmp eq i32 %1019, 2
  br i1 %cmp2127, label %lor.lhs.false.2139, label %lor.lhs.false.2129

lor.lhs.false.2129:                               ; preds = %if.then.2124
  %1020 = load i32, i32* %mode_arg0, align 4
  %idxprom2130 = sext i32 %1020 to i64
  %arrayidx2131 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2130
  %1021 = load i32, i32* %arrayidx2131, align 4
  %cmp2132 = icmp eq i32 %1021, 6
  br i1 %cmp2132, label %lor.lhs.false.2139, label %lor.lhs.false.2134

lor.lhs.false.2134:                               ; preds = %lor.lhs.false.2129
  %1022 = load i32, i32* %mode_arg0, align 4
  %idxprom2135 = sext i32 %1022 to i64
  %arrayidx2136 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2135
  %1023 = load i32, i32* %arrayidx2136, align 4
  %cmp2137 = icmp eq i32 %1023, 8
  br i1 %cmp2137, label %lor.lhs.false.2139, label %if.then.2141

lor.lhs.false.2139:                               ; preds = %lor.lhs.false.2134, %lor.lhs.false.2129, %if.then.2124
  %1024 = load i32, i32* @flag_unsafe_math_optimizations, align 4
  %tobool2140 = icmp ne i32 %1024, 0
  br i1 %tobool2140, label %if.then.2141, label %if.end.2172

if.then.2141:                                     ; preds = %lor.lhs.false.2139, %lor.lhs.false.2134
  %1025 = load i32, i32* %code, align 4
  %cmp2142 = icmp eq i32 %1025, 103
  br i1 %cmp2142, label %cond.true.2168, label %lor.lhs.false.2144

lor.lhs.false.2144:                               ; preds = %if.then.2141
  %1026 = load i32, i32* %code, align 4
  %cmp2145 = icmp eq i32 %1026, 106
  br i1 %cmp2145, label %cond.true.2168, label %lor.lhs.false.2147

lor.lhs.false.2147:                               ; preds = %lor.lhs.false.2144
  %1027 = load i32, i32* %code, align 4
  %cmp2148 = icmp eq i32 %1027, 104
  br i1 %cmp2148, label %cond.true.2168, label %lor.lhs.false.2150

lor.lhs.false.2150:                               ; preds = %lor.lhs.false.2147
  %1028 = load i32, i32* %code, align 4
  %cmp2151 = icmp eq i32 %1028, 110
  br i1 %cmp2151, label %cond.true.2168, label %lor.lhs.false.2153

lor.lhs.false.2153:                               ; preds = %lor.lhs.false.2150
  %1029 = load i32, i32* %code, align 4
  %cmp2154 = icmp eq i32 %1029, 108
  br i1 %cmp2154, label %cond.true.2168, label %lor.lhs.false.2156

lor.lhs.false.2156:                               ; preds = %lor.lhs.false.2153
  %1030 = load i32, i32* %code, align 4
  %cmp2157 = icmp eq i32 %1030, 114
  br i1 %cmp2157, label %cond.true.2168, label %lor.lhs.false.2159

lor.lhs.false.2159:                               ; preds = %lor.lhs.false.2156
  %1031 = load i32, i32* %code, align 4
  %cmp2160 = icmp eq i32 %1031, 117
  br i1 %cmp2160, label %cond.true.2168, label %lor.lhs.false.2162

lor.lhs.false.2162:                               ; preds = %lor.lhs.false.2159
  %1032 = load i32, i32* %code, align 4
  %cmp2163 = icmp eq i32 %1032, 115
  br i1 %cmp2163, label %cond.true.2168, label %lor.lhs.false.2165

lor.lhs.false.2165:                               ; preds = %lor.lhs.false.2162
  %1033 = load i32, i32* %code, align 4
  %cmp2166 = icmp eq i32 %1033, 113
  br i1 %cmp2166, label %cond.true.2168, label %cond.false.2169

cond.true.2168:                                   ; preds = %lor.lhs.false.2165, %lor.lhs.false.2162, %lor.lhs.false.2159, %lor.lhs.false.2156, %lor.lhs.false.2153, %lor.lhs.false.2150, %lor.lhs.false.2147, %lor.lhs.false.2144, %if.then.2141
  %1034 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  br label %cond.end.2170

cond.false.2169:                                  ; preds = %lor.lhs.false.2165
  %1035 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  br label %cond.end.2170

cond.end.2170:                                    ; preds = %cond.false.2169, %cond.true.2168
  %cond2171 = phi %struct.rtx_def* [ %1034, %cond.true.2168 ], [ %1035, %cond.false.2169 ]
  store %struct.rtx_def* %cond2171, %struct.rtx_def** %retval
  br label %return

if.end.2172:                                      ; preds = %lor.lhs.false.2139
  %1036 = load i32, i32* %code, align 4
  %cmp2173 = icmp eq i32 %1036, 114
  br i1 %cmp2173, label %if.then.2181, label %lor.lhs.false.2175

lor.lhs.false.2175:                               ; preds = %if.end.2172
  %1037 = load i32, i32* %code, align 4
  %cmp2176 = icmp eq i32 %1037, 117
  br i1 %cmp2176, label %if.then.2181, label %lor.lhs.false.2178

lor.lhs.false.2178:                               ; preds = %lor.lhs.false.2175
  %1038 = load i32, i32* %code, align 4
  %cmp2179 = icmp eq i32 %1038, 115
  br i1 %cmp2179, label %if.then.2181, label %if.end.2182

if.then.2181:                                     ; preds = %lor.lhs.false.2178, %lor.lhs.false.2175, %if.end.2172
  %1039 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  store %struct.rtx_def* %1039, %struct.rtx_def** %retval
  br label %return

if.end.2182:                                      ; preds = %lor.lhs.false.2178
  %1040 = load i32, i32* %code, align 4
  %cmp2183 = icmp eq i32 %1040, 119
  br i1 %cmp2183, label %if.then.2191, label %lor.lhs.false.2185

lor.lhs.false.2185:                               ; preds = %if.end.2182
  %1041 = load i32, i32* %code, align 4
  %cmp2186 = icmp eq i32 %1041, 107
  br i1 %cmp2186, label %if.then.2191, label %lor.lhs.false.2188

lor.lhs.false.2188:                               ; preds = %lor.lhs.false.2185
  %1042 = load i32, i32* %code, align 4
  %cmp2189 = icmp eq i32 %1042, 105
  br i1 %cmp2189, label %if.then.2191, label %if.end.2192

if.then.2191:                                     ; preds = %lor.lhs.false.2188, %lor.lhs.false.2185, %if.end.2182
  %1043 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  store %struct.rtx_def* %1043, %struct.rtx_def** %retval
  br label %return

if.end.2192:                                      ; preds = %lor.lhs.false.2188
  br label %if.end.2305

if.else.2193:                                     ; preds = %land.lhs.true.2119, %land.lhs.true.2114, %lor.lhs.false.2109
  %1044 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1045 = bitcast %struct.rtx_def* %1044 to i32*
  %bf.load2194 = load i32, i32* %1045, align 8
  %bf.clear2195 = and i32 %bf.load2194, 65535
  %cmp2196 = icmp eq i32 %bf.clear2195, 61
  br i1 %cmp2196, label %if.then.2198, label %if.end.2304

if.then.2198:                                     ; preds = %if.else.2193
  %1046 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1046, i32 0, i32 1
  %arrayidx2200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2199, i32 0, i64 0
  %rtuint2201 = bitcast %union.rtunion_def* %arrayidx2200 to i32*
  %1047 = load i32, i32* %rtuint2201, align 4
  %1048 = load i32, i32* @cached_regno, align 4
  %cmp2202 = icmp eq i32 %1047, %1048
  br i1 %cmp2202, label %land.lhs.true.2204, label %cond.false.2207

land.lhs.true.2204:                               ; preds = %if.then.2198
  %1049 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2205 = icmp ne %struct.cse_reg_info* %1049, null
  br i1 %tobool2205, label %cond.true.2206, label %cond.false.2207

cond.true.2206:                                   ; preds = %land.lhs.true.2204
  %1050 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2212

cond.false.2207:                                  ; preds = %land.lhs.true.2204, %if.then.2198
  %1051 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1051, i32 0, i32 1
  %arrayidx2209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2208, i32 0, i64 0
  %rtuint2210 = bitcast %union.rtunion_def* %arrayidx2209 to i32*
  %1052 = load i32, i32* %rtuint2210, align 4
  %call2211 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1052)
  br label %cond.end.2212

cond.end.2212:                                    ; preds = %cond.false.2207, %cond.true.2206
  %cond2213 = phi %struct.cse_reg_info* [ %1050, %cond.true.2206 ], [ %call2211, %cond.false.2207 ]
  %reg_qty2214 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2213, i32 0, i32 3
  %1053 = load i32, i32* %reg_qty2214, align 4
  store i32 %1053, i32* %qty, align 4
  %1054 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1054, i32 0, i32 1
  %arrayidx2216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2215, i32 0, i64 0
  %rtuint2217 = bitcast %union.rtunion_def* %arrayidx2216 to i32*
  %1055 = load i32, i32* %rtuint2217, align 4
  %1056 = load i32, i32* @cached_regno, align 4
  %cmp2218 = icmp eq i32 %1055, %1056
  br i1 %cmp2218, label %land.lhs.true.2220, label %cond.false.2223

land.lhs.true.2220:                               ; preds = %cond.end.2212
  %1057 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2221 = icmp ne %struct.cse_reg_info* %1057, null
  br i1 %tobool2221, label %cond.true.2222, label %cond.false.2223

cond.true.2222:                                   ; preds = %land.lhs.true.2220
  %1058 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2228

cond.false.2223:                                  ; preds = %land.lhs.true.2220, %cond.end.2212
  %1059 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1059, i32 0, i32 1
  %arrayidx2225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2224, i32 0, i64 0
  %rtuint2226 = bitcast %union.rtunion_def* %arrayidx2225 to i32*
  %1060 = load i32, i32* %rtuint2226, align 4
  %call2227 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1060)
  br label %cond.end.2228

cond.end.2228:                                    ; preds = %cond.false.2223, %cond.true.2222
  %cond2229 = phi %struct.cse_reg_info* [ %1058, %cond.true.2222 ], [ %call2227, %cond.false.2223 ]
  %reg_qty2230 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2229, i32 0, i32 3
  %1061 = load i32, i32* %reg_qty2230, align 4
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %fld2231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1062, i32 0, i32 1
  %arrayidx2232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2231, i32 0, i64 0
  %rtuint2233 = bitcast %union.rtunion_def* %arrayidx2232 to i32*
  %1063 = load i32, i32* %rtuint2233, align 4
  %cmp2234 = icmp ne i32 %1061, %1063
  br i1 %cmp2234, label %if.then.2236, label %if.end.2303

if.then.2236:                                     ; preds = %cond.end.2228
  %1064 = load i32, i32* %qty, align 4
  %idxprom2237 = sext i32 %1064 to i64
  %1065 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx2238 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1065, i64 %idxprom2237
  store %struct.qty_table_elem* %arrayidx2238, %struct.qty_table_elem** %ent, align 8
  %1066 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1066, i32 0, i32 7
  %1067 = load i32, i32* %comparison_code, align 4
  %1068 = load i32, i32* %code, align 4
  %call2239 = call i32 @comparison_dominates_p(i32 %1067, i32 %1068)
  %tobool2240 = icmp ne i32 %call2239, 0
  br i1 %tobool2240, label %land.lhs.true.2261, label %lor.lhs.false.2241

lor.lhs.false.2241:                               ; preds = %if.then.2236
  %1069 = load i32, i32* %mode_arg0, align 4
  %idxprom2242 = sext i32 %1069 to i64
  %arrayidx2243 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2242
  %1070 = load i32, i32* %arrayidx2243, align 4
  %cmp2244 = icmp eq i32 %1070, 2
  br i1 %cmp2244, label %if.end.2302, label %lor.lhs.false.2246

lor.lhs.false.2246:                               ; preds = %lor.lhs.false.2241
  %1071 = load i32, i32* %mode_arg0, align 4
  %idxprom2247 = sext i32 %1071 to i64
  %arrayidx2248 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2247
  %1072 = load i32, i32* %arrayidx2248, align 4
  %cmp2249 = icmp eq i32 %1072, 6
  br i1 %cmp2249, label %if.end.2302, label %lor.lhs.false.2251

lor.lhs.false.2251:                               ; preds = %lor.lhs.false.2246
  %1073 = load i32, i32* %mode_arg0, align 4
  %idxprom2252 = sext i32 %1073 to i64
  %arrayidx2253 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom2252
  %1074 = load i32, i32* %arrayidx2253, align 4
  %cmp2254 = icmp eq i32 %1074, 8
  br i1 %cmp2254, label %if.end.2302, label %land.lhs.true.2256

land.lhs.true.2256:                               ; preds = %lor.lhs.false.2251
  %1075 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_code2257 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1075, i32 0, i32 7
  %1076 = load i32, i32* %comparison_code2257, align 4
  %1077 = load i32, i32* %code, align 4
  %call2258 = call i32 @reverse_condition(i32 %1077)
  %call2259 = call i32 @comparison_dominates_p(i32 %1076, i32 %call2258)
  %tobool2260 = icmp ne i32 %call2259, 0
  br i1 %tobool2260, label %land.lhs.true.2261, label %if.end.2302

land.lhs.true.2261:                               ; preds = %land.lhs.true.2256, %if.then.2236
  %1078 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_const = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1078, i32 0, i32 2
  %1079 = load %struct.rtx_def*, %struct.rtx_def** %comparison_const, align 8
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %call2262 = call i32 @rtx_equal_p(%struct.rtx_def* %1079, %struct.rtx_def* %1080)
  %tobool2263 = icmp ne i32 %call2262, 0
  br i1 %tobool2263, label %if.then.2294, label %lor.lhs.false.2264

lor.lhs.false.2264:                               ; preds = %land.lhs.true.2261
  %1081 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2265 = icmp ne %struct.rtx_def* %1081, null
  br i1 %tobool2265, label %land.lhs.true.2266, label %lor.lhs.false.2270

land.lhs.true.2266:                               ; preds = %lor.lhs.false.2264
  %1082 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_const2267 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1082, i32 0, i32 2
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %comparison_const2267, align 8
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %call2268 = call i32 @rtx_equal_p(%struct.rtx_def* %1083, %struct.rtx_def* %1084)
  %tobool2269 = icmp ne i32 %call2268, 0
  br i1 %tobool2269, label %if.then.2294, label %lor.lhs.false.2270

lor.lhs.false.2270:                               ; preds = %land.lhs.true.2266, %lor.lhs.false.2264
  %1085 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1086 = bitcast %struct.rtx_def* %1085 to i32*
  %bf.load2271 = load i32, i32* %1086, align 8
  %bf.clear2272 = and i32 %bf.load2271, 65535
  %cmp2273 = icmp eq i32 %bf.clear2272, 61
  br i1 %cmp2273, label %land.lhs.true.2275, label %if.end.2302

land.lhs.true.2275:                               ; preds = %lor.lhs.false.2270
  %1087 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %fld2276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1087, i32 0, i32 1
  %arrayidx2277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2276, i32 0, i64 0
  %rtuint2278 = bitcast %union.rtunion_def* %arrayidx2277 to i32*
  %1088 = load i32, i32* %rtuint2278, align 4
  %1089 = load i32, i32* @cached_regno, align 4
  %cmp2279 = icmp eq i32 %1088, %1089
  br i1 %cmp2279, label %land.lhs.true.2281, label %cond.false.2284

land.lhs.true.2281:                               ; preds = %land.lhs.true.2275
  %1090 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2282 = icmp ne %struct.cse_reg_info* %1090, null
  br i1 %tobool2282, label %cond.true.2283, label %cond.false.2284

cond.true.2283:                                   ; preds = %land.lhs.true.2281
  %1091 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.2289

cond.false.2284:                                  ; preds = %land.lhs.true.2281, %land.lhs.true.2275
  %1092 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %fld2285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1092, i32 0, i32 1
  %arrayidx2286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2285, i32 0, i64 0
  %rtuint2287 = bitcast %union.rtunion_def* %arrayidx2286 to i32*
  %1093 = load i32, i32* %rtuint2287, align 4
  %call2288 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1093)
  br label %cond.end.2289

cond.end.2289:                                    ; preds = %cond.false.2284, %cond.true.2283
  %cond2290 = phi %struct.cse_reg_info* [ %1091, %cond.true.2283 ], [ %call2288, %cond.false.2284 ]
  %reg_qty2291 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond2290, i32 0, i32 3
  %1094 = load i32, i32* %reg_qty2291, align 4
  %1095 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_qty = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1095, i32 0, i32 3
  %1096 = load i32, i32* %comparison_qty, align 4
  %cmp2292 = icmp eq i32 %1094, %1096
  br i1 %cmp2292, label %if.then.2294, label %if.end.2302

if.then.2294:                                     ; preds = %cond.end.2289, %land.lhs.true.2266, %land.lhs.true.2261
  %1097 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_code2295 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1097, i32 0, i32 7
  %1098 = load i32, i32* %comparison_code2295, align 4
  %1099 = load i32, i32* %code, align 4
  %call2296 = call i32 @comparison_dominates_p(i32 %1098, i32 %1099)
  %tobool2297 = icmp ne i32 %call2296, 0
  br i1 %tobool2297, label %cond.true.2298, label %cond.false.2299

cond.true.2298:                                   ; preds = %if.then.2294
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8
  br label %cond.end.2300

cond.false.2299:                                  ; preds = %if.then.2294
  %1101 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8
  br label %cond.end.2300

cond.end.2300:                                    ; preds = %cond.false.2299, %cond.true.2298
  %cond2301 = phi %struct.rtx_def* [ %1100, %cond.true.2298 ], [ %1101, %cond.false.2299 ]
  store %struct.rtx_def* %cond2301, %struct.rtx_def** %retval
  br label %return

if.end.2302:                                      ; preds = %cond.end.2289, %lor.lhs.false.2270, %land.lhs.true.2256, %lor.lhs.false.2251, %lor.lhs.false.2246, %lor.lhs.false.2241
  br label %if.end.2303

if.end.2303:                                      ; preds = %if.end.2302, %cond.end.2228
  br label %if.end.2304

if.end.2304:                                      ; preds = %if.end.2303, %if.else.2193
  br label %if.end.2305

if.end.2305:                                      ; preds = %if.end.2304, %if.end.2192
  br label %if.end.2306

if.end.2306:                                      ; preds = %if.end.2305, %lor.lhs.false.1935
  br label %if.end.2307

if.end.2307:                                      ; preds = %if.end.2306, %lor.lhs.false.1917
  %1102 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp2308 = icmp eq %struct.rtx_def* %1102, %1103
  br i1 %cmp2308, label %if.then.2310, label %if.end.2361

if.then.2310:                                     ; preds = %if.end.2307
  %1104 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %call2311 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1104, i32 84)
  store %struct.rtx_def* %call2311, %struct.rtx_def** %y, align 8
  %1105 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %cmp2312 = icmp ne %struct.rtx_def* %1105, null
  br i1 %cmp2312, label %land.lhs.true.2314, label %if.end.2360

land.lhs.true.2314:                               ; preds = %if.then.2310
  %1106 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %fld2315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1106, i32 0, i32 1
  %arrayidx2316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2315, i32 0, i64 1
  %rtx2317 = bitcast %union.rtunion_def* %arrayidx2316 to %struct.rtx_def**
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %rtx2317, align 8
  %call2318 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %1107)
  store %struct.rtx_def* %call2318, %struct.rtx_def** %inner_const, align 8
  %cmp2319 = icmp ne %struct.rtx_def* %call2318, null
  br i1 %cmp2319, label %land.lhs.true.2321, label %if.end.2360

land.lhs.true.2321:                               ; preds = %land.lhs.true.2314
  %1108 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8
  %1109 = bitcast %struct.rtx_def* %1108 to i32*
  %bf.load2322 = load i32, i32* %1109, align 8
  %bf.clear2323 = and i32 %bf.load2322, 65535
  %cmp2324 = icmp eq i32 %bf.clear2323, 54
  br i1 %cmp2324, label %land.lhs.true.2326, label %if.end.2360

land.lhs.true.2326:                               ; preds = %land.lhs.true.2321
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8
  %fld2327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1110, i32 0, i32 1
  %arrayidx2328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2327, i32 0, i64 0
  %rtwint2329 = bitcast %union.rtunion_def* %arrayidx2328 to i64*
  %1111 = load i64, i64* %rtwint2329, align 8
  %cmp2330 = icmp ne i64 %1111, 0
  br i1 %cmp2330, label %if.then.2332, label %if.end.2360

if.then.2332:                                     ; preds = %land.lhs.true.2326
  %1112 = load i32, i32* %mode_arg0, align 4
  %idxprom2333 = sext i32 %1112 to i64
  %arrayidx2334 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2333
  %1113 = load i16, i16* %arrayidx2334, align 2
  %conv2335 = zext i16 %1113 to i32
  %sub2336 = sub nsw i32 %conv2335, 1
  store i32 %sub2336, i32* %sign_bitnum, align 4
  %1114 = load i32, i32* %sign_bitnum, align 4
  %cmp2337 = icmp sge i32 64, %1114
  br i1 %cmp2337, label %land.rhs.2339, label %land.end.2345

land.rhs.2339:                                    ; preds = %if.then.2332
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8
  %fld2340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1115, i32 0, i32 1
  %arrayidx2341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2340, i32 0, i64 0
  %rtwint2342 = bitcast %union.rtunion_def* %arrayidx2341 to i64*
  %1116 = load i64, i64* %rtwint2342, align 8
  %1117 = load i32, i32* %sign_bitnum, align 4
  %sh_prom = zext i32 %1117 to i64
  %shl = shl i64 1, %sh_prom
  %and2343 = and i64 %1116, %shl
  %tobool2344 = icmp ne i64 %and2343, 0
  br label %land.end.2345

land.end.2345:                                    ; preds = %land.rhs.2339, %if.then.2332
  %1118 = phi i1 [ false, %if.then.2332 ], [ %tobool2344, %land.rhs.2339 ]
  %land.ext = zext i1 %1118 to i32
  store i32 %land.ext, i32* %has_sign, align 4
  %1119 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8
  store %struct.rtx_def* %1119, %struct.rtx_def** %true_rtx2346, align 8
  %1120 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  store %struct.rtx_def* %1120, %struct.rtx_def** %false_rtx2347, align 8
  %1121 = load i32, i32* %code, align 4
  switch i32 %1121, label %sw.default.2358 [
    i32 103, label %sw.bb.2348
    i32 102, label %sw.bb.2349
    i32 107, label %sw.bb.2350
    i32 106, label %sw.bb.2350
    i32 105, label %sw.bb.2354
    i32 104, label %sw.bb.2354
  ]

sw.bb.2348:                                       ; preds = %land.end.2345
  %1122 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx2347, align 8
  store %struct.rtx_def* %1122, %struct.rtx_def** %retval
  br label %return

sw.bb.2349:                                       ; preds = %land.end.2345
  %1123 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx2346, align 8
  store %struct.rtx_def* %1123, %struct.rtx_def** %retval
  br label %return

sw.bb.2350:                                       ; preds = %land.end.2345, %land.end.2345
  %1124 = load i32, i32* %has_sign, align 4
  %tobool2351 = icmp ne i32 %1124, 0
  br i1 %tobool2351, label %if.then.2352, label %if.end.2353

if.then.2352:                                     ; preds = %sw.bb.2350
  %1125 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx2346, align 8
  store %struct.rtx_def* %1125, %struct.rtx_def** %retval
  br label %return

if.end.2353:                                      ; preds = %sw.bb.2350
  br label %sw.epilog.2359

sw.bb.2354:                                       ; preds = %land.end.2345, %land.end.2345
  %1126 = load i32, i32* %has_sign, align 4
  %tobool2355 = icmp ne i32 %1126, 0
  br i1 %tobool2355, label %if.then.2356, label %if.end.2357

if.then.2356:                                     ; preds = %sw.bb.2354
  %1127 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx2347, align 8
  store %struct.rtx_def* %1127, %struct.rtx_def** %retval
  br label %return

if.end.2357:                                      ; preds = %sw.bb.2354
  br label %sw.epilog.2359

sw.default.2358:                                  ; preds = %land.end.2345
  br label %sw.epilog.2359

sw.epilog.2359:                                   ; preds = %sw.default.2358, %if.end.2357, %if.end.2353
  br label %if.end.2360

if.end.2360:                                      ; preds = %sw.epilog.2359, %land.lhs.true.2326, %land.lhs.true.2321, %land.lhs.true.2314, %if.then.2310
  br label %if.end.2361

if.end.2361:                                      ; preds = %if.end.2360, %if.end.2307
  %1128 = load i32, i32* %code, align 4
  %1129 = load i32, i32* %mode_arg0, align 4
  %cmp2362 = icmp ne i32 %1129, 0
  br i1 %cmp2362, label %cond.true.2364, label %cond.false.2365

cond.true.2364:                                   ; preds = %if.end.2361
  %1130 = load i32, i32* %mode_arg0, align 4
  br label %cond.end.2396

cond.false.2365:                                  ; preds = %if.end.2361
  %1131 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2366 = icmp ne %struct.rtx_def* %1131, null
  br i1 %tobool2366, label %cond.true.2367, label %cond.false.2368

cond.true.2367:                                   ; preds = %cond.false.2365
  %1132 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.2369

cond.false.2368:                                  ; preds = %cond.false.2365
  %1133 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2369

cond.end.2369:                                    ; preds = %cond.false.2368, %cond.true.2367
  %cond2370 = phi %struct.rtx_def* [ %1132, %cond.true.2367 ], [ %1133, %cond.false.2368 ]
  %1134 = bitcast %struct.rtx_def* %cond2370 to i32*
  %bf.load2371 = load i32, i32* %1134, align 8
  %bf.lshr2372 = lshr i32 %bf.load2371, 16
  %bf.clear2373 = and i32 %bf.lshr2372, 255
  %cmp2374 = icmp ne i32 %bf.clear2373, 0
  br i1 %cmp2374, label %cond.true.2376, label %cond.false.2385

cond.true.2376:                                   ; preds = %cond.end.2369
  %1135 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2377 = icmp ne %struct.rtx_def* %1135, null
  br i1 %tobool2377, label %cond.true.2378, label %cond.false.2379

cond.true.2378:                                   ; preds = %cond.true.2376
  %1136 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.2380

cond.false.2379:                                  ; preds = %cond.true.2376
  %1137 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2380

cond.end.2380:                                    ; preds = %cond.false.2379, %cond.true.2378
  %cond2381 = phi %struct.rtx_def* [ %1136, %cond.true.2378 ], [ %1137, %cond.false.2379 ]
  %1138 = bitcast %struct.rtx_def* %cond2381 to i32*
  %bf.load2382 = load i32, i32* %1138, align 8
  %bf.lshr2383 = lshr i32 %bf.load2382, 16
  %bf.clear2384 = and i32 %bf.lshr2383, 255
  br label %cond.end.2394

cond.false.2385:                                  ; preds = %cond.end.2369
  %1139 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2386 = icmp ne %struct.rtx_def* %1139, null
  br i1 %tobool2386, label %cond.true.2387, label %cond.false.2388

cond.true.2387:                                   ; preds = %cond.false.2385
  %1140 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  br label %cond.end.2389

cond.false.2388:                                  ; preds = %cond.false.2385
  %1141 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2389

cond.end.2389:                                    ; preds = %cond.false.2388, %cond.true.2387
  %cond2390 = phi %struct.rtx_def* [ %1140, %cond.true.2387 ], [ %1141, %cond.false.2388 ]
  %1142 = bitcast %struct.rtx_def* %cond2390 to i32*
  %bf.load2391 = load i32, i32* %1142, align 8
  %bf.lshr2392 = lshr i32 %bf.load2391, 16
  %bf.clear2393 = and i32 %bf.lshr2392, 255
  br label %cond.end.2394

cond.end.2394:                                    ; preds = %cond.end.2389, %cond.end.2380
  %cond2395 = phi i32 [ %bf.clear2384, %cond.end.2380 ], [ %bf.clear2393, %cond.end.2389 ]
  br label %cond.end.2396

cond.end.2396:                                    ; preds = %cond.end.2394, %cond.true.2364
  %cond2397 = phi i32 [ %1130, %cond.true.2364 ], [ %cond2395, %cond.end.2394 ]
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2398 = icmp ne %struct.rtx_def* %1143, null
  br i1 %tobool2398, label %cond.true.2399, label %cond.false.2400

cond.true.2399:                                   ; preds = %cond.end.2396
  %1144 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.2401

cond.false.2400:                                  ; preds = %cond.end.2396
  %1145 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2401

cond.end.2401:                                    ; preds = %cond.false.2400, %cond.true.2399
  %cond2402 = phi %struct.rtx_def* [ %1144, %cond.true.2399 ], [ %1145, %cond.false.2400 ]
  %1146 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2403 = icmp ne %struct.rtx_def* %1146, null
  br i1 %tobool2403, label %cond.true.2404, label %cond.false.2405

cond.true.2404:                                   ; preds = %cond.end.2401
  %1147 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  br label %cond.end.2406

cond.false.2405:                                  ; preds = %cond.end.2401
  %1148 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2406

cond.end.2406:                                    ; preds = %cond.false.2405, %cond.true.2404
  %cond2407 = phi %struct.rtx_def* [ %1147, %cond.true.2404 ], [ %1148, %cond.false.2405 ]
  %call2408 = call %struct.rtx_def* @simplify_relational_operation(i32 %1128, i32 %cond2397, %struct.rtx_def* %cond2402, %struct.rtx_def* %cond2407)
  store %struct.rtx_def* %call2408, %struct.rtx_def** %new, align 8
  br label %sw.epilog.2892

sw.bb.2409:                                       ; preds = %if.end.1874, %if.end.1874
  %1149 = load i32, i32* %code, align 4
  switch i32 %1149, label %sw.default.2830 [
    i32 75, label %sw.bb.2410
    i32 76, label %sw.bb.2661
    i32 92, label %sw.bb.2694
    i32 93, label %sw.bb.2694
    i32 94, label %sw.bb.2694
    i32 95, label %sw.bb.2694
    i32 84, label %sw.bb.2694
    i32 83, label %sw.bb.2694
    i32 85, label %sw.bb.2694
    i32 78, label %sw.bb.2694
    i32 79, label %sw.bb.2694
    i32 81, label %sw.bb.2694
    i32 87, label %sw.bb.2694
    i32 90, label %sw.bb.2694
    i32 89, label %sw.bb.2694
  ]

sw.bb.2410:                                       ; preds = %sw.bb.2409
  %1150 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2411 = icmp ne %struct.rtx_def* %1150, null
  br i1 %tobool2411, label %land.lhs.true.2412, label %if.end.2508

land.lhs.true.2412:                               ; preds = %sw.bb.2410
  %1151 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1152 = bitcast %struct.rtx_def* %1151 to i32*
  %bf.load2413 = load i32, i32* %1152, align 8
  %bf.clear2414 = and i32 %bf.load2413, 65535
  %cmp2415 = icmp eq i32 %bf.clear2414, 67
  br i1 %cmp2415, label %if.then.2417, label %if.end.2508

if.then.2417:                                     ; preds = %land.lhs.true.2412
  %1153 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1154 = bitcast %struct.rtx_def* %1153 to i32*
  %bf.load2419 = load i32, i32* %1154, align 8
  %bf.clear2420 = and i32 %bf.load2419, 65535
  %cmp2421 = icmp eq i32 %bf.clear2420, 76
  br i1 %cmp2421, label %cond.true.2423, label %cond.false.2424

cond.true.2423:                                   ; preds = %if.then.2417
  %1155 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2426

cond.false.2424:                                  ; preds = %if.then.2417
  %1156 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %call2425 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1156, i32 76)
  br label %cond.end.2426

cond.end.2426:                                    ; preds = %cond.false.2424, %cond.true.2423
  %cond2427 = phi %struct.rtx_def* [ %1155, %cond.true.2423 ], [ %call2425, %cond.false.2424 ]
  store %struct.rtx_def* %cond2427, %struct.rtx_def** %y2418, align 8
  %1157 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %cmp2428 = icmp ne %struct.rtx_def* %1157, null
  br i1 %cmp2428, label %land.lhs.true.2430, label %if.end.2454

land.lhs.true.2430:                               ; preds = %cond.end.2426
  %1158 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1158, i32 0, i32 1
  %arrayidx2432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2431, i32 0, i64 1
  %rtx2433 = bitcast %union.rtunion_def* %arrayidx2432 to %struct.rtx_def**
  %1159 = load %struct.rtx_def*, %struct.rtx_def** %rtx2433, align 8
  %1160 = bitcast %struct.rtx_def* %1159 to i32*
  %bf.load2434 = load i32, i32* %1160, align 8
  %bf.clear2435 = and i32 %bf.load2434, 65535
  %cmp2436 = icmp eq i32 %bf.clear2435, 67
  br i1 %cmp2436, label %land.lhs.true.2438, label %if.end.2454

land.lhs.true.2438:                               ; preds = %land.lhs.true.2430
  %1161 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1161, i32 0, i32 1
  %arrayidx2440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2439, i32 0, i64 1
  %rtx2441 = bitcast %union.rtunion_def* %arrayidx2440 to %struct.rtx_def**
  %1162 = load %struct.rtx_def*, %struct.rtx_def** %rtx2441, align 8
  %fld2442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1162, i32 0, i32 1
  %arrayidx2443 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2442, i32 0, i64 0
  %rtx2444 = bitcast %union.rtunion_def* %arrayidx2443 to %struct.rtx_def**
  %1163 = load %struct.rtx_def*, %struct.rtx_def** %rtx2444, align 8
  %1164 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1164, i32 0, i32 1
  %arrayidx2446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2445, i32 0, i64 0
  %rtx2447 = bitcast %union.rtunion_def* %arrayidx2446 to %struct.rtx_def**
  %1165 = load %struct.rtx_def*, %struct.rtx_def** %rtx2447, align 8
  %cmp2448 = icmp eq %struct.rtx_def* %1163, %1165
  br i1 %cmp2448, label %if.then.2450, label %if.end.2454

if.then.2450:                                     ; preds = %land.lhs.true.2438
  %1166 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1166, i32 0, i32 1
  %arrayidx2452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2451, i32 0, i64 0
  %rtx2453 = bitcast %union.rtunion_def* %arrayidx2452 to %struct.rtx_def**
  %1167 = load %struct.rtx_def*, %struct.rtx_def** %rtx2453, align 8
  store %struct.rtx_def* %1167, %struct.rtx_def** %retval
  br label %return

if.end.2454:                                      ; preds = %land.lhs.true.2438, %land.lhs.true.2430, %cond.end.2426
  %1168 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1169 = bitcast %struct.rtx_def* %1168 to i32*
  %bf.load2455 = load i32, i32* %1169, align 8
  %bf.clear2456 = and i32 %bf.load2455, 65535
  %cmp2457 = icmp eq i32 %bf.clear2456, 58
  br i1 %cmp2457, label %cond.true.2459, label %cond.false.2460

cond.true.2459:                                   ; preds = %if.end.2454
  %1170 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2462

cond.false.2460:                                  ; preds = %if.end.2454
  %1171 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %call2461 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1171, i32 58)
  br label %cond.end.2462

cond.end.2462:                                    ; preds = %cond.false.2460, %cond.true.2459
  %cond2463 = phi %struct.rtx_def* [ %1170, %cond.true.2459 ], [ %call2461, %cond.false.2460 ]
  store %struct.rtx_def* %cond2463, %struct.rtx_def** %y2418, align 8
  %cmp2464 = icmp ne %struct.rtx_def* %cond2463, null
  br i1 %cmp2464, label %land.lhs.true.2466, label %if.end.2507

land.lhs.true.2466:                               ; preds = %cond.end.2462
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1172, i32 0, i32 1
  %arrayidx2468 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2467, i32 0, i64 0
  %rtx2469 = bitcast %union.rtunion_def* %arrayidx2468 to %struct.rtx_def**
  %1173 = load %struct.rtx_def*, %struct.rtx_def** %rtx2469, align 8
  %1174 = bitcast %struct.rtx_def* %1173 to i32*
  %bf.load2470 = load i32, i32* %1174, align 8
  %bf.clear2471 = and i32 %bf.load2470, 65535
  %cmp2472 = icmp eq i32 %bf.clear2471, 76
  br i1 %cmp2472, label %land.lhs.true.2474, label %if.end.2507

land.lhs.true.2474:                               ; preds = %land.lhs.true.2466
  %1175 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1175, i32 0, i32 1
  %arrayidx2476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2475, i32 0, i64 0
  %rtx2477 = bitcast %union.rtunion_def* %arrayidx2476 to %struct.rtx_def**
  %1176 = load %struct.rtx_def*, %struct.rtx_def** %rtx2477, align 8
  %fld2478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1176, i32 0, i32 1
  %arrayidx2479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2478, i32 0, i64 1
  %rtx2480 = bitcast %union.rtunion_def* %arrayidx2479 to %struct.rtx_def**
  %1177 = load %struct.rtx_def*, %struct.rtx_def** %rtx2480, align 8
  %1178 = bitcast %struct.rtx_def* %1177 to i32*
  %bf.load2481 = load i32, i32* %1178, align 8
  %bf.clear2482 = and i32 %bf.load2481, 65535
  %cmp2483 = icmp eq i32 %bf.clear2482, 67
  br i1 %cmp2483, label %land.lhs.true.2485, label %if.end.2507

land.lhs.true.2485:                               ; preds = %land.lhs.true.2474
  %1179 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1179, i32 0, i32 1
  %arrayidx2487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2486, i32 0, i64 0
  %rtx2488 = bitcast %union.rtunion_def* %arrayidx2487 to %struct.rtx_def**
  %1180 = load %struct.rtx_def*, %struct.rtx_def** %rtx2488, align 8
  %fld2489 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1180, i32 0, i32 1
  %arrayidx2490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2489, i32 0, i64 1
  %rtx2491 = bitcast %union.rtunion_def* %arrayidx2490 to %struct.rtx_def**
  %1181 = load %struct.rtx_def*, %struct.rtx_def** %rtx2491, align 8
  %fld2492 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1181, i32 0, i32 1
  %arrayidx2493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2492, i32 0, i64 0
  %rtx2494 = bitcast %union.rtunion_def* %arrayidx2493 to %struct.rtx_def**
  %1182 = load %struct.rtx_def*, %struct.rtx_def** %rtx2494, align 8
  %1183 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1183, i32 0, i32 1
  %arrayidx2496 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2495, i32 0, i64 0
  %rtx2497 = bitcast %union.rtunion_def* %arrayidx2496 to %struct.rtx_def**
  %1184 = load %struct.rtx_def*, %struct.rtx_def** %rtx2497, align 8
  %cmp2498 = icmp eq %struct.rtx_def* %1182, %1184
  br i1 %cmp2498, label %if.then.2500, label %if.end.2507

if.then.2500:                                     ; preds = %land.lhs.true.2485
  %1185 = load %struct.rtx_def*, %struct.rtx_def** %y2418, align 8
  %fld2501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1185, i32 0, i32 1
  %arrayidx2502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2501, i32 0, i64 0
  %rtx2503 = bitcast %union.rtunion_def* %arrayidx2502 to %struct.rtx_def**
  %1186 = load %struct.rtx_def*, %struct.rtx_def** %rtx2503, align 8
  %fld2504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1186, i32 0, i32 1
  %arrayidx2505 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2504, i32 0, i64 0
  %rtx2506 = bitcast %union.rtunion_def* %arrayidx2505 to %struct.rtx_def**
  %1187 = load %struct.rtx_def*, %struct.rtx_def** %rtx2506, align 8
  store %struct.rtx_def* %1187, %struct.rtx_def** %retval
  br label %return

if.end.2507:                                      ; preds = %land.lhs.true.2485, %land.lhs.true.2474, %land.lhs.true.2466, %cond.end.2462
  br label %if.end.2508

if.end.2508:                                      ; preds = %if.end.2507, %land.lhs.true.2412, %sw.bb.2410
  %1188 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2509 = icmp ne %struct.rtx_def* %1188, null
  br i1 %tobool2509, label %land.lhs.true.2510, label %if.end.2606

land.lhs.true.2510:                               ; preds = %if.end.2508
  %1189 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %1190 = bitcast %struct.rtx_def* %1189 to i32*
  %bf.load2511 = load i32, i32* %1190, align 8
  %bf.clear2512 = and i32 %bf.load2511, 65535
  %cmp2513 = icmp eq i32 %bf.clear2512, 67
  br i1 %cmp2513, label %if.then.2515, label %if.end.2606

if.then.2515:                                     ; preds = %land.lhs.true.2510
  %1191 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1192 = bitcast %struct.rtx_def* %1191 to i32*
  %bf.load2517 = load i32, i32* %1192, align 8
  %bf.clear2518 = and i32 %bf.load2517, 65535
  %cmp2519 = icmp eq i32 %bf.clear2518, 76
  br i1 %cmp2519, label %cond.true.2521, label %cond.false.2522

cond.true.2521:                                   ; preds = %if.then.2515
  %1193 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2524

cond.false.2522:                                  ; preds = %if.then.2515
  %1194 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %call2523 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1194, i32 76)
  br label %cond.end.2524

cond.end.2524:                                    ; preds = %cond.false.2522, %cond.true.2521
  %cond2525 = phi %struct.rtx_def* [ %1193, %cond.true.2521 ], [ %call2523, %cond.false.2522 ]
  store %struct.rtx_def* %cond2525, %struct.rtx_def** %y2516, align 8
  %1195 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %cmp2526 = icmp ne %struct.rtx_def* %1195, null
  br i1 %cmp2526, label %land.lhs.true.2528, label %if.end.2552

land.lhs.true.2528:                               ; preds = %cond.end.2524
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2529 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1196, i32 0, i32 1
  %arrayidx2530 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2529, i32 0, i64 1
  %rtx2531 = bitcast %union.rtunion_def* %arrayidx2530 to %struct.rtx_def**
  %1197 = load %struct.rtx_def*, %struct.rtx_def** %rtx2531, align 8
  %1198 = bitcast %struct.rtx_def* %1197 to i32*
  %bf.load2532 = load i32, i32* %1198, align 8
  %bf.clear2533 = and i32 %bf.load2532, 65535
  %cmp2534 = icmp eq i32 %bf.clear2533, 67
  br i1 %cmp2534, label %land.lhs.true.2536, label %if.end.2552

land.lhs.true.2536:                               ; preds = %land.lhs.true.2528
  %1199 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1199, i32 0, i32 1
  %arrayidx2538 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2537, i32 0, i64 1
  %rtx2539 = bitcast %union.rtunion_def* %arrayidx2538 to %struct.rtx_def**
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %rtx2539, align 8
  %fld2540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1200, i32 0, i32 1
  %arrayidx2541 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2540, i32 0, i64 0
  %rtx2542 = bitcast %union.rtunion_def* %arrayidx2541 to %struct.rtx_def**
  %1201 = load %struct.rtx_def*, %struct.rtx_def** %rtx2542, align 8
  %1202 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %fld2543 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1202, i32 0, i32 1
  %arrayidx2544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2543, i32 0, i64 0
  %rtx2545 = bitcast %union.rtunion_def* %arrayidx2544 to %struct.rtx_def**
  %1203 = load %struct.rtx_def*, %struct.rtx_def** %rtx2545, align 8
  %cmp2546 = icmp eq %struct.rtx_def* %1201, %1203
  br i1 %cmp2546, label %if.then.2548, label %if.end.2552

if.then.2548:                                     ; preds = %land.lhs.true.2536
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1204, i32 0, i32 1
  %arrayidx2550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2549, i32 0, i64 0
  %rtx2551 = bitcast %union.rtunion_def* %arrayidx2550 to %struct.rtx_def**
  %1205 = load %struct.rtx_def*, %struct.rtx_def** %rtx2551, align 8
  store %struct.rtx_def* %1205, %struct.rtx_def** %retval
  br label %return

if.end.2552:                                      ; preds = %land.lhs.true.2536, %land.lhs.true.2528, %cond.end.2524
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1207 = bitcast %struct.rtx_def* %1206 to i32*
  %bf.load2553 = load i32, i32* %1207, align 8
  %bf.clear2554 = and i32 %bf.load2553, 65535
  %cmp2555 = icmp eq i32 %bf.clear2554, 58
  br i1 %cmp2555, label %cond.true.2557, label %cond.false.2558

cond.true.2557:                                   ; preds = %if.end.2552
  %1208 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2560

cond.false.2558:                                  ; preds = %if.end.2552
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %call2559 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1209, i32 58)
  br label %cond.end.2560

cond.end.2560:                                    ; preds = %cond.false.2558, %cond.true.2557
  %cond2561 = phi %struct.rtx_def* [ %1208, %cond.true.2557 ], [ %call2559, %cond.false.2558 ]
  store %struct.rtx_def* %cond2561, %struct.rtx_def** %y2516, align 8
  %cmp2562 = icmp ne %struct.rtx_def* %cond2561, null
  br i1 %cmp2562, label %land.lhs.true.2564, label %if.end.2605

land.lhs.true.2564:                               ; preds = %cond.end.2560
  %1210 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2565 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1210, i32 0, i32 1
  %arrayidx2566 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2565, i32 0, i64 0
  %rtx2567 = bitcast %union.rtunion_def* %arrayidx2566 to %struct.rtx_def**
  %1211 = load %struct.rtx_def*, %struct.rtx_def** %rtx2567, align 8
  %1212 = bitcast %struct.rtx_def* %1211 to i32*
  %bf.load2568 = load i32, i32* %1212, align 8
  %bf.clear2569 = and i32 %bf.load2568, 65535
  %cmp2570 = icmp eq i32 %bf.clear2569, 76
  br i1 %cmp2570, label %land.lhs.true.2572, label %if.end.2605

land.lhs.true.2572:                               ; preds = %land.lhs.true.2564
  %1213 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2573 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1213, i32 0, i32 1
  %arrayidx2574 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2573, i32 0, i64 0
  %rtx2575 = bitcast %union.rtunion_def* %arrayidx2574 to %struct.rtx_def**
  %1214 = load %struct.rtx_def*, %struct.rtx_def** %rtx2575, align 8
  %fld2576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1214, i32 0, i32 1
  %arrayidx2577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2576, i32 0, i64 1
  %rtx2578 = bitcast %union.rtunion_def* %arrayidx2577 to %struct.rtx_def**
  %1215 = load %struct.rtx_def*, %struct.rtx_def** %rtx2578, align 8
  %1216 = bitcast %struct.rtx_def* %1215 to i32*
  %bf.load2579 = load i32, i32* %1216, align 8
  %bf.clear2580 = and i32 %bf.load2579, 65535
  %cmp2581 = icmp eq i32 %bf.clear2580, 67
  br i1 %cmp2581, label %land.lhs.true.2583, label %if.end.2605

land.lhs.true.2583:                               ; preds = %land.lhs.true.2572
  %1217 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1217, i32 0, i32 1
  %arrayidx2585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2584, i32 0, i64 0
  %rtx2586 = bitcast %union.rtunion_def* %arrayidx2585 to %struct.rtx_def**
  %1218 = load %struct.rtx_def*, %struct.rtx_def** %rtx2586, align 8
  %fld2587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1218, i32 0, i32 1
  %arrayidx2588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2587, i32 0, i64 1
  %rtx2589 = bitcast %union.rtunion_def* %arrayidx2588 to %struct.rtx_def**
  %1219 = load %struct.rtx_def*, %struct.rtx_def** %rtx2589, align 8
  %fld2590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1219, i32 0, i32 1
  %arrayidx2591 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2590, i32 0, i64 0
  %rtx2592 = bitcast %union.rtunion_def* %arrayidx2591 to %struct.rtx_def**
  %1220 = load %struct.rtx_def*, %struct.rtx_def** %rtx2592, align 8
  %1221 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %fld2593 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1221, i32 0, i32 1
  %arrayidx2594 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2593, i32 0, i64 0
  %rtx2595 = bitcast %union.rtunion_def* %arrayidx2594 to %struct.rtx_def**
  %1222 = load %struct.rtx_def*, %struct.rtx_def** %rtx2595, align 8
  %cmp2596 = icmp eq %struct.rtx_def* %1220, %1222
  br i1 %cmp2596, label %if.then.2598, label %if.end.2605

if.then.2598:                                     ; preds = %land.lhs.true.2583
  %1223 = load %struct.rtx_def*, %struct.rtx_def** %y2516, align 8
  %fld2599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1223, i32 0, i32 1
  %arrayidx2600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2599, i32 0, i64 0
  %rtx2601 = bitcast %union.rtunion_def* %arrayidx2600 to %struct.rtx_def**
  %1224 = load %struct.rtx_def*, %struct.rtx_def** %rtx2601, align 8
  %fld2602 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1224, i32 0, i32 1
  %arrayidx2603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2602, i32 0, i64 0
  %rtx2604 = bitcast %union.rtunion_def* %arrayidx2603 to %struct.rtx_def**
  %1225 = load %struct.rtx_def*, %struct.rtx_def** %rtx2604, align 8
  store %struct.rtx_def* %1225, %struct.rtx_def** %retval
  br label %return

if.end.2605:                                      ; preds = %land.lhs.true.2583, %land.lhs.true.2572, %land.lhs.true.2564, %cond.end.2560
  br label %if.end.2606

if.end.2606:                                      ; preds = %if.end.2605, %land.lhs.true.2510, %if.end.2508
  %1226 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %cmp2607 = icmp ne %struct.rtx_def* %1226, null
  br i1 %cmp2607, label %land.lhs.true.2609, label %if.end.2660

land.lhs.true.2609:                               ; preds = %if.end.2606
  %1227 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1228 = bitcast %struct.rtx_def* %1227 to i32*
  %bf.load2610 = load i32, i32* %1228, align 8
  %bf.clear2611 = and i32 %bf.load2610, 65535
  %cmp2612 = icmp eq i32 %bf.clear2611, 54
  br i1 %cmp2612, label %land.lhs.true.2614, label %if.end.2660

land.lhs.true.2614:                               ; preds = %land.lhs.true.2609
  %1229 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1229, i32 0, i32 1
  %arrayidx2616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2615, i32 0, i64 0
  %rtwint2617 = bitcast %union.rtunion_def* %arrayidx2616 to i64*
  %1230 = load i64, i64* %rtwint2617, align 8
  %cmp2618 = icmp slt i64 %1230, 0
  br i1 %cmp2618, label %land.lhs.true.2620, label %if.end.2660

land.lhs.true.2620:                               ; preds = %land.lhs.true.2614
  %1231 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1231, i32 0, i32 1
  %arrayidx2622 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2621, i32 0, i64 0
  %rtwint2623 = bitcast %union.rtunion_def* %arrayidx2622 to i64*
  %1232 = load i64, i64* %rtwint2623, align 8
  %cmp2624 = icmp ne i64 %1232, -9223372036854775808
  br i1 %cmp2624, label %land.lhs.true.2626, label %if.end.2660

land.lhs.true.2626:                               ; preds = %land.lhs.true.2620
  %1233 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  %1234 = bitcast %struct.rtx_def* %1233 to i32*
  %bf.load2627 = load i32, i32* %1234, align 8
  %bf.clear2628 = and i32 %bf.load2627, 65535
  %cmp2629 = icmp eq i32 %bf.clear2628, 61
  br i1 %cmp2629, label %if.then.2631, label %if.end.2660

if.then.2631:                                     ; preds = %land.lhs.true.2626
  %1235 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1235, i32 0, i32 1
  %arrayidx2633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2632, i32 0, i64 0
  %rtwint2634 = bitcast %union.rtunion_def* %arrayidx2633 to i64*
  %1236 = load i64, i64* %rtwint2634, align 8
  %sub2635 = sub nsw i64 0, %1236
  %call2636 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub2635)
  store %struct.rtx_def* %call2636, %struct.rtx_def** %new_const, align 8
  %1237 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8
  %1238 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8
  %1239 = load i32, i32* %mode, align 4
  %call2637 = call i32 @safe_hash(%struct.rtx_def* %1238, i32 %1239)
  %and2638 = and i32 %call2637, 31
  %1240 = load i32, i32* %mode, align 4
  %call2639 = call %struct.table_elt* @lookup(%struct.rtx_def* %1237, i32 %and2638, i32 %1240)
  store %struct.table_elt* %call2639, %struct.table_elt** %p, align 8
  %1241 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool2640 = icmp ne %struct.table_elt* %1241, null
  br i1 %tobool2640, label %if.then.2641, label %if.end.2659

if.then.2641:                                     ; preds = %if.then.2631
  %1242 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %first_same_value2642 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1242, i32 0, i32 6
  %1243 = load %struct.table_elt*, %struct.table_elt** %first_same_value2642, align 8
  store %struct.table_elt* %1243, %struct.table_elt** %p, align 8
  br label %for.cond.2643

for.cond.2643:                                    ; preds = %for.inc.2656, %if.then.2641
  %1244 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool2644 = icmp ne %struct.table_elt* %1244, null
  br i1 %tobool2644, label %for.body.2645, label %for.end.2658

for.body.2645:                                    ; preds = %for.cond.2643
  %1245 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp2646 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1245, i32 0, i32 0
  %1246 = load %struct.rtx_def*, %struct.rtx_def** %exp2646, align 8
  %1247 = bitcast %struct.rtx_def* %1246 to i32*
  %bf.load2647 = load i32, i32* %1247, align 8
  %bf.clear2648 = and i32 %bf.load2647, 65535
  %cmp2649 = icmp eq i32 %bf.clear2648, 61
  br i1 %cmp2649, label %if.then.2651, label %if.end.2655

if.then.2651:                                     ; preds = %for.body.2645
  %1248 = load i32, i32* %mode, align 4
  %1249 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1250 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp2652 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1250, i32 0, i32 0
  %1251 = load %struct.rtx_def*, %struct.rtx_def** %exp2652, align 8
  %call2653 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %1251, %struct.rtx_def* null)
  %call2654 = call %struct.rtx_def* @simplify_gen_binary(i32 76, i32 %1248, %struct.rtx_def* %1249, %struct.rtx_def* %call2653)
  store %struct.rtx_def* %call2654, %struct.rtx_def** %retval
  br label %return

if.end.2655:                                      ; preds = %for.body.2645
  br label %for.inc.2656

for.inc.2656:                                     ; preds = %if.end.2655
  %1252 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value2657 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1252, i32 0, i32 4
  %1253 = load %struct.table_elt*, %struct.table_elt** %next_same_value2657, align 8
  store %struct.table_elt* %1253, %struct.table_elt** %p, align 8
  br label %for.cond.2643

for.end.2658:                                     ; preds = %for.cond.2643
  br label %if.end.2659

if.end.2659:                                      ; preds = %for.end.2658, %if.then.2631
  br label %if.end.2660

if.end.2660:                                      ; preds = %if.end.2659, %land.lhs.true.2626, %land.lhs.true.2620, %land.lhs.true.2614, %land.lhs.true.2609, %if.end.2606
  br label %from_plus

sw.bb.2661:                                       ; preds = %sw.bb.2409
  %1254 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %cmp2662 = icmp ne %struct.rtx_def* %1254, null
  br i1 %cmp2662, label %land.lhs.true.2664, label %if.end.2693

land.lhs.true.2664:                               ; preds = %sw.bb.2661
  %1255 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1256 = bitcast %struct.rtx_def* %1255 to i32*
  %bf.load2665 = load i32, i32* %1256, align 8
  %bf.clear2666 = and i32 %bf.load2665, 65535
  %cmp2667 = icmp eq i32 %bf.clear2666, 54
  br i1 %cmp2667, label %if.then.2669, label %if.end.2693

if.then.2669:                                     ; preds = %land.lhs.true.2664
  %1257 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1257, i32 0, i32 1
  %arrayidx2672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2671, i32 0, i64 0
  %rtx2673 = bitcast %union.rtunion_def* %arrayidx2672 to %struct.rtx_def**
  %1258 = load %struct.rtx_def*, %struct.rtx_def** %rtx2673, align 8
  %call2674 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1258, i32 75)
  store %struct.rtx_def* %call2674, %struct.rtx_def** %y2670, align 8
  %1259 = load %struct.rtx_def*, %struct.rtx_def** %y2670, align 8
  %tobool2675 = icmp ne %struct.rtx_def* %1259, null
  br i1 %tobool2675, label %land.lhs.true.2676, label %if.end.2692

land.lhs.true.2676:                               ; preds = %if.then.2669
  %1260 = load %struct.rtx_def*, %struct.rtx_def** %y2670, align 8
  %fld2677 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1260, i32 0, i32 1
  %arrayidx2678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2677, i32 0, i64 1
  %rtx2679 = bitcast %union.rtunion_def* %arrayidx2678 to %struct.rtx_def**
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %rtx2679, align 8
  %1262 = bitcast %struct.rtx_def* %1261 to i32*
  %bf.load2680 = load i32, i32* %1262, align 8
  %bf.clear2681 = and i32 %bf.load2680, 65535
  %cmp2682 = icmp eq i32 %bf.clear2681, 54
  br i1 %cmp2682, label %if.then.2684, label %if.end.2692

if.then.2684:                                     ; preds = %land.lhs.true.2676
  %1263 = load %struct.rtx_def*, %struct.rtx_def** %y2670, align 8
  %call2685 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1263)
  %1264 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1264, i32 0, i32 1
  %arrayidx2687 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2686, i32 0, i64 0
  %rtwint2688 = bitcast %union.rtunion_def* %arrayidx2687 to i64*
  %1265 = load i64, i64* %rtwint2688, align 8
  %sub2689 = sub nsw i64 0, %1265
  %call2690 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call2685, i64 %sub2689)
  %call2691 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call2690, %struct.rtx_def* null)
  store %struct.rtx_def* %call2691, %struct.rtx_def** %retval
  br label %return

if.end.2692:                                      ; preds = %land.lhs.true.2676, %if.then.2669
  br label %if.end.2693

if.end.2693:                                      ; preds = %if.end.2692, %land.lhs.true.2664, %sw.bb.2661
  br label %from_plus

from_plus:                                        ; preds = %if.end.2693, %if.end.2660
  br label %sw.bb.2694

sw.bb.2694:                                       ; preds = %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %sw.bb.2409, %from_plus
  %1266 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1267 = bitcast %struct.rtx_def* %1266 to i32*
  %bf.load2695 = load i32, i32* %1267, align 8
  %bf.clear2696 = and i32 %bf.load2695, 65535
  %cmp2697 = icmp eq i32 %bf.clear2696, 61
  br i1 %cmp2697, label %land.lhs.true.2699, label %if.end.2829

land.lhs.true.2699:                               ; preds = %sw.bb.2694
  %1268 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2700 = icmp ne %struct.rtx_def* %1268, null
  br i1 %tobool2700, label %land.lhs.true.2701, label %if.end.2829

land.lhs.true.2701:                               ; preds = %land.lhs.true.2699
  %1269 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1270 = bitcast %struct.rtx_def* %1269 to i32*
  %bf.load2702 = load i32, i32* %1270, align 8
  %bf.clear2703 = and i32 %bf.load2702, 65535
  %cmp2704 = icmp eq i32 %bf.clear2703, 54
  br i1 %cmp2704, label %if.then.2706, label %if.end.2829

if.then.2706:                                     ; preds = %land.lhs.true.2701
  %1271 = load i32, i32* %code, align 4
  %cmp2707 = icmp eq i32 %1271, 87
  br i1 %cmp2707, label %lor.end, label %lor.lhs.false.2709

lor.lhs.false.2709:                               ; preds = %if.then.2706
  %1272 = load i32, i32* %code, align 4
  %cmp2710 = icmp eq i32 %1272, 89
  br i1 %cmp2710, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.2709
  %1273 = load i32, i32* %code, align 4
  %cmp2712 = icmp eq i32 %1273, 90
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.2709, %if.then.2706
  %1274 = phi i1 [ true, %lor.lhs.false.2709 ], [ true, %if.then.2706 ], [ %cmp2712, %lor.rhs ]
  %lor.ext = zext i1 %1274 to i32
  store i32 %lor.ext, i32* %is_shift, align 4
  %1275 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1276 = load i32, i32* %code, align 4
  %call2715 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %1275, i32 %1276)
  store %struct.rtx_def* %call2715, %struct.rtx_def** %y2714, align 8
  %1277 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %cmp2718 = icmp eq %struct.rtx_def* %1277, null
  br i1 %cmp2718, label %if.then.2739, label %lor.lhs.false.2720

lor.lhs.false.2720:                               ; preds = %lor.end
  %1278 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %fld2721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1278, i32 0, i32 1
  %arrayidx2722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2721, i32 0, i64 1
  %rtx2723 = bitcast %union.rtunion_def* %arrayidx2722 to %struct.rtx_def**
  %1279 = load %struct.rtx_def*, %struct.rtx_def** %rtx2723, align 8
  %call2724 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %1279, %struct.rtx_def* null)
  %call2725 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %call2724)
  store %struct.rtx_def* %call2725, %struct.rtx_def** %inner_const2716, align 8
  %cmp2726 = icmp eq %struct.rtx_def* null, %call2725
  br i1 %cmp2726, label %if.then.2739, label %lor.lhs.false.2728

lor.lhs.false.2728:                               ; preds = %lor.lhs.false.2720
  %1280 = load %struct.rtx_def*, %struct.rtx_def** %inner_const2716, align 8
  %1281 = bitcast %struct.rtx_def* %1280 to i32*
  %bf.load2729 = load i32, i32* %1281, align 8
  %bf.clear2730 = and i32 %bf.load2729, 65535
  %cmp2731 = icmp ne i32 %bf.clear2730, 54
  br i1 %cmp2731, label %if.then.2739, label %lor.lhs.false.2733

lor.lhs.false.2733:                               ; preds = %lor.lhs.false.2728
  %1282 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %fld2734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1282, i32 0, i32 1
  %arrayidx2735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2734, i32 0, i64 0
  %rtx2736 = bitcast %union.rtunion_def* %arrayidx2735 to %struct.rtx_def**
  %1283 = load %struct.rtx_def*, %struct.rtx_def** %rtx2736, align 8
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %cmp2737 = icmp eq %struct.rtx_def* %1283, %1284
  br i1 %cmp2737, label %if.then.2739, label %if.end.2740

if.then.2739:                                     ; preds = %lor.lhs.false.2733, %lor.lhs.false.2728, %lor.lhs.false.2720, %lor.end
  br label %sw.epilog.2831

if.end.2740:                                      ; preds = %lor.lhs.false.2733
  %1285 = load i32, i32* %code, align 4
  %cmp2741 = icmp eq i32 %1285, 75
  br i1 %cmp2741, label %land.lhs.true.2743, label %if.end.2762

land.lhs.true.2743:                               ; preds = %if.end.2740
  %1286 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1286, i32 0, i32 1
  %arrayidx2745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2744, i32 0, i64 0
  %rtwint2746 = bitcast %union.rtunion_def* %arrayidx2745 to i64*
  %1287 = load i64, i64* %rtwint2746, align 8
  %1288 = load %struct.rtx_def*, %struct.rtx_def** %inner_const2716, align 8
  %fld2747 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1288, i32 0, i32 1
  %arrayidx2748 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2747, i32 0, i64 0
  %rtwint2749 = bitcast %union.rtunion_def* %arrayidx2748 to i64*
  %1289 = load i64, i64* %rtwint2749, align 8
  %cmp2750 = icmp eq i64 %1287, %1289
  br i1 %cmp2750, label %land.lhs.true.2752, label %if.end.2762

land.lhs.true.2752:                               ; preds = %land.lhs.true.2743
  br i1 false, label %land.lhs.true.2753, label %if.end.2762

land.lhs.true.2753:                               ; preds = %land.lhs.true.2752
  %1290 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %fld2754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1290, i32 0, i32 1
  %arrayidx2755 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2754, i32 0, i64 0
  %rtwint2756 = bitcast %union.rtunion_def* %arrayidx2755 to i64*
  %1291 = load i64, i64* %rtwint2756, align 8
  %sub2757 = sub nsw i64 0, %1291
  %call2758 = call i32 @exact_log2_wide(i64 %sub2757)
  %cmp2759 = icmp sge i32 %call2758, 0
  br i1 %cmp2759, label %if.then.2761, label %if.end.2762

if.then.2761:                                     ; preds = %land.lhs.true.2753
  br label %sw.epilog.2831

if.end.2762:                                      ; preds = %land.lhs.true.2753, %land.lhs.true.2752, %land.lhs.true.2743, %if.end.2740
  %1292 = load i32, i32* %code, align 4
  %cmp2763 = icmp eq i32 %1292, 78
  br i1 %cmp2763, label %cond.true.2771, label %lor.lhs.false.2765

lor.lhs.false.2765:                               ; preds = %if.end.2762
  %1293 = load i32, i32* %code, align 4
  %cmp2766 = icmp eq i32 %1293, 79
  br i1 %cmp2766, label %cond.true.2771, label %lor.lhs.false.2768

lor.lhs.false.2768:                               ; preds = %lor.lhs.false.2765
  %1294 = load i32, i32* %code, align 4
  %cmp2769 = icmp eq i32 %1294, 81
  br i1 %cmp2769, label %cond.true.2771, label %cond.false.2772

cond.true.2771:                                   ; preds = %lor.lhs.false.2768, %lor.lhs.false.2765, %if.end.2762
  br label %cond.end.2784

cond.false.2772:                                  ; preds = %lor.lhs.false.2768
  %1295 = load i32, i32* %is_shift, align 4
  %tobool2773 = icmp ne i32 %1295, 0
  br i1 %tobool2773, label %cond.true.2780, label %lor.lhs.false.2774

lor.lhs.false.2774:                               ; preds = %cond.false.2772
  %1296 = load i32, i32* %code, align 4
  %cmp2775 = icmp eq i32 %1296, 75
  br i1 %cmp2775, label %cond.true.2780, label %lor.lhs.false.2777

lor.lhs.false.2777:                               ; preds = %lor.lhs.false.2774
  %1297 = load i32, i32* %code, align 4
  %cmp2778 = icmp eq i32 %1297, 76
  br i1 %cmp2778, label %cond.true.2780, label %cond.false.2781

cond.true.2780:                                   ; preds = %lor.lhs.false.2777, %lor.lhs.false.2774, %cond.false.2772
  br label %cond.end.2782

cond.false.2781:                                  ; preds = %lor.lhs.false.2777
  %1298 = load i32, i32* %code, align 4
  br label %cond.end.2782

cond.end.2782:                                    ; preds = %cond.false.2781, %cond.true.2780
  %cond2783 = phi i32 [ 75, %cond.true.2780 ], [ %1298, %cond.false.2781 ]
  br label %cond.end.2784

cond.end.2784:                                    ; preds = %cond.end.2782, %cond.true.2771
  %cond2785 = phi i32 [ 78, %cond.true.2771 ], [ %cond2783, %cond.end.2782 ]
  store i32 %cond2785, i32* %associate_code, align 4
  %1299 = load i32, i32* %associate_code, align 4
  %1300 = load i32, i32* %mode, align 4
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %1302 = load %struct.rtx_def*, %struct.rtx_def** %inner_const2716, align 8
  %call2786 = call %struct.rtx_def* @simplify_binary_operation(i32 %1299, i32 %1300, %struct.rtx_def* %1301, %struct.rtx_def* %1302)
  store %struct.rtx_def* %call2786, %struct.rtx_def** %new_const2717, align 8
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %new_const2717, align 8
  %cmp2787 = icmp eq %struct.rtx_def* %1303, null
  br i1 %cmp2787, label %if.then.2789, label %if.end.2790

if.then.2789:                                     ; preds = %cond.end.2784
  br label %sw.epilog.2831

if.end.2790:                                      ; preds = %cond.end.2784
  %1304 = load i32, i32* %is_shift, align 4
  %tobool2791 = icmp ne i32 %1304, 0
  br i1 %tobool2791, label %land.lhs.true.2792, label %if.end.2818

land.lhs.true.2792:                               ; preds = %if.end.2790
  %1305 = load %struct.rtx_def*, %struct.rtx_def** %new_const2717, align 8
  %1306 = bitcast %struct.rtx_def* %1305 to i32*
  %bf.load2793 = load i32, i32* %1306, align 8
  %bf.clear2794 = and i32 %bf.load2793, 65535
  %cmp2795 = icmp eq i32 %bf.clear2794, 54
  br i1 %cmp2795, label %land.lhs.true.2797, label %if.end.2818

land.lhs.true.2797:                               ; preds = %land.lhs.true.2792
  %1307 = load %struct.rtx_def*, %struct.rtx_def** %new_const2717, align 8
  %fld2798 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1307, i32 0, i32 1
  %arrayidx2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2798, i32 0, i64 0
  %rtwint2800 = bitcast %union.rtunion_def* %arrayidx2799 to i64*
  %1308 = load i64, i64* %rtwint2800, align 8
  %1309 = load i32, i32* %mode, align 4
  %idxprom2801 = sext i32 %1309 to i64
  %arrayidx2802 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2801
  %1310 = load i16, i16* %arrayidx2802, align 2
  %conv2803 = zext i16 %1310 to i64
  %cmp2804 = icmp sge i64 %1308, %conv2803
  br i1 %cmp2804, label %if.then.2806, label %if.end.2818

if.then.2806:                                     ; preds = %land.lhs.true.2797
  %1311 = load i32, i32* %code, align 4
  %cmp2807 = icmp eq i32 %1311, 89
  br i1 %cmp2807, label %if.then.2809, label %if.else.2816

if.then.2809:                                     ; preds = %if.then.2806
  %1312 = load i32, i32* %mode, align 4
  %idxprom2810 = sext i32 %1312 to i64
  %arrayidx2811 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom2810
  %1313 = load i16, i16* %arrayidx2811, align 2
  %conv2812 = zext i16 %1313 to i32
  %sub2813 = sub nsw i32 %conv2812, 1
  %conv2814 = sext i32 %sub2813 to i64
  %call2815 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv2814)
  store %struct.rtx_def* %call2815, %struct.rtx_def** %new_const2717, align 8
  br label %if.end.2817

if.else.2816:                                     ; preds = %if.then.2806
  br label %sw.epilog.2831

if.end.2817:                                      ; preds = %if.then.2809
  br label %if.end.2818

if.end.2818:                                      ; preds = %if.end.2817, %land.lhs.true.2797, %land.lhs.true.2792, %if.end.2790
  %1314 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %fld2819 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1314, i32 0, i32 1
  %arrayidx2820 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2819, i32 0, i64 0
  %rtx2821 = bitcast %union.rtunion_def* %arrayidx2820 to %struct.rtx_def**
  %1315 = load %struct.rtx_def*, %struct.rtx_def** %rtx2821, align 8
  %call2822 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1315)
  store %struct.rtx_def* %call2822, %struct.rtx_def** %y2714, align 8
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  %1317 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %call2823 = call i32 @reg_mentioned_p(%struct.rtx_def* %1316, %struct.rtx_def* %1317)
  %tobool2824 = icmp ne i32 %call2823, 0
  br i1 %tobool2824, label %if.end.2827, label %if.then.2825

if.then.2825:                                     ; preds = %if.end.2818
  %1318 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %1319 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call2826 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %1318, %struct.rtx_def* %1319)
  store %struct.rtx_def* %call2826, %struct.rtx_def** %y2714, align 8
  br label %if.end.2827

if.end.2827:                                      ; preds = %if.then.2825, %if.end.2818
  %1320 = load i32, i32* %code, align 4
  %1321 = load i32, i32* %mode, align 4
  %1322 = load %struct.rtx_def*, %struct.rtx_def** %y2714, align 8
  %1323 = load %struct.rtx_def*, %struct.rtx_def** %new_const2717, align 8
  %call2828 = call %struct.rtx_def* @simplify_gen_binary(i32 %1320, i32 %1321, %struct.rtx_def* %1322, %struct.rtx_def* %1323)
  store %struct.rtx_def* %call2828, %struct.rtx_def** %retval
  br label %return

if.end.2829:                                      ; preds = %land.lhs.true.2701, %land.lhs.true.2699, %sw.bb.2694
  br label %sw.epilog.2831

sw.default.2830:                                  ; preds = %sw.bb.2409
  br label %sw.epilog.2831

sw.epilog.2831:                                   ; preds = %sw.default.2830, %if.end.2829, %if.else.2816, %if.then.2789, %if.then.2761, %if.then.2739
  %1324 = load i32, i32* %code, align 4
  %1325 = load i32, i32* %mode, align 4
  %1326 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2832 = icmp ne %struct.rtx_def* %1326, null
  br i1 %tobool2832, label %cond.true.2833, label %cond.false.2834

cond.true.2833:                                   ; preds = %sw.epilog.2831
  %1327 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.2835

cond.false.2834:                                  ; preds = %sw.epilog.2831
  %1328 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2835

cond.end.2835:                                    ; preds = %cond.false.2834, %cond.true.2833
  %cond2836 = phi %struct.rtx_def* [ %1327, %cond.true.2833 ], [ %1328, %cond.false.2834 ]
  %1329 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2837 = icmp ne %struct.rtx_def* %1329, null
  br i1 %tobool2837, label %cond.true.2838, label %cond.false.2839

cond.true.2838:                                   ; preds = %cond.end.2835
  %1330 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  br label %cond.end.2840

cond.false.2839:                                  ; preds = %cond.end.2835
  %1331 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2840

cond.end.2840:                                    ; preds = %cond.false.2839, %cond.true.2838
  %cond2841 = phi %struct.rtx_def* [ %1330, %cond.true.2838 ], [ %1331, %cond.false.2839 ]
  %call2842 = call %struct.rtx_def* @simplify_binary_operation(i32 %1324, i32 %1325, %struct.rtx_def* %cond2836, %struct.rtx_def* %cond2841)
  store %struct.rtx_def* %call2842, %struct.rtx_def** %new, align 8
  br label %sw.epilog.2892

sw.bb.2843:                                       ; preds = %if.end.1874
  %1332 = load i32, i32* %code, align 4
  %cmp2844 = icmp eq i32 %1332, 135
  br i1 %cmp2844, label %land.lhs.true.2846, label %if.end.2861

land.lhs.true.2846:                               ; preds = %sw.bb.2843
  %1333 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %cmp2847 = icmp ne %struct.rtx_def* %1333, null
  br i1 %cmp2847, label %land.lhs.true.2849, label %if.end.2861

land.lhs.true.2849:                               ; preds = %land.lhs.true.2846
  %1334 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %1335 = bitcast %struct.rtx_def* %1334 to i32*
  %bf.load2850 = load i32, i32* %1335, align 8
  %bf.clear2851 = and i32 %bf.load2850, 65535
  %cmp2852 = icmp eq i32 %bf.clear2851, 134
  br i1 %cmp2852, label %land.lhs.true.2854, label %if.end.2861

land.lhs.true.2854:                               ; preds = %land.lhs.true.2849
  %1336 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %fld2855 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1336, i32 0, i32 1
  %arrayidx2856 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2855, i32 0, i64 0
  %rtx2857 = bitcast %union.rtunion_def* %arrayidx2856 to %struct.rtx_def**
  %1337 = load %struct.rtx_def*, %struct.rtx_def** %rtx2857, align 8
  %1338 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %call2858 = call i32 @rtx_equal_p(%struct.rtx_def* %1337, %struct.rtx_def* %1338)
  %tobool2859 = icmp ne i32 %call2858, 0
  br i1 %tobool2859, label %if.then.2860, label %if.end.2861

if.then.2860:                                     ; preds = %land.lhs.true.2854
  %1339 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  store %struct.rtx_def* %1339, %struct.rtx_def** %retval
  br label %return

if.end.2861:                                      ; preds = %land.lhs.true.2854, %land.lhs.true.2849, %land.lhs.true.2846, %sw.bb.2843
  br label %sw.epilog.2892

sw.bb.2862:                                       ; preds = %if.end.1874, %if.end.1874
  %1340 = load i32, i32* %code, align 4
  %1341 = load i32, i32* %mode, align 4
  %1342 = load i32, i32* %mode_arg0, align 4
  %1343 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2863 = icmp ne %struct.rtx_def* %1343, null
  br i1 %tobool2863, label %cond.true.2864, label %cond.false.2865

cond.true.2864:                                   ; preds = %sw.bb.2862
  %1344 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  br label %cond.end.2866

cond.false.2865:                                  ; preds = %sw.bb.2862
  %1345 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8
  br label %cond.end.2866

cond.end.2866:                                    ; preds = %cond.false.2865, %cond.true.2864
  %cond2867 = phi %struct.rtx_def* [ %1344, %cond.true.2864 ], [ %1345, %cond.false.2865 ]
  %1346 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  %tobool2868 = icmp ne %struct.rtx_def* %1346, null
  br i1 %tobool2868, label %cond.true.2869, label %cond.false.2870

cond.true.2869:                                   ; preds = %cond.end.2866
  %1347 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8
  br label %cond.end.2871

cond.false.2870:                                  ; preds = %cond.end.2866
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8
  br label %cond.end.2871

cond.end.2871:                                    ; preds = %cond.false.2870, %cond.true.2869
  %cond2872 = phi %struct.rtx_def* [ %1347, %cond.true.2869 ], [ %1348, %cond.false.2870 ]
  %1349 = load %struct.rtx_def*, %struct.rtx_def** %const_arg2, align 8
  %tobool2873 = icmp ne %struct.rtx_def* %1349, null
  br i1 %tobool2873, label %cond.true.2874, label %cond.false.2875

cond.true.2874:                                   ; preds = %cond.end.2871
  %1350 = load %struct.rtx_def*, %struct.rtx_def** %const_arg2, align 8
  br label %cond.end.2879

cond.false.2875:                                  ; preds = %cond.end.2871
  %1351 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld2876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1351, i32 0, i32 1
  %arrayidx2877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2876, i32 0, i64 2
  %rtx2878 = bitcast %union.rtunion_def* %arrayidx2877 to %struct.rtx_def**
  %1352 = load %struct.rtx_def*, %struct.rtx_def** %rtx2878, align 8
  br label %cond.end.2879

cond.end.2879:                                    ; preds = %cond.false.2875, %cond.true.2874
  %cond2880 = phi %struct.rtx_def* [ %1350, %cond.true.2874 ], [ %1352, %cond.false.2875 ]
  %call2881 = call %struct.rtx_def* @simplify_ternary_operation(i32 %1340, i32 %1341, i32 %1342, %struct.rtx_def* %cond2867, %struct.rtx_def* %cond2872, %struct.rtx_def* %cond2880)
  store %struct.rtx_def* %call2881, %struct.rtx_def** %new, align 8
  br label %sw.epilog.2892

sw.bb.2882:                                       ; preds = %if.end.1874
  %1353 = load i32, i32* %code, align 4
  %cmp2883 = icmp eq i32 %1353, 140
  br i1 %cmp2883, label %if.then.2885, label %if.end.2891

if.then.2885:                                     ; preds = %sw.bb.2882
  %1354 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8
  %tobool2886 = icmp ne %struct.rtx_def* %1354, null
  br i1 %tobool2886, label %cond.true.2887, label %cond.false.2888

cond.true.2887:                                   ; preds = %if.then.2885
  %1355 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 65), align 8
  br label %cond.end.2889

cond.false.2888:                                  ; preds = %if.then.2885
  %1356 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  br label %cond.end.2889

cond.end.2889:                                    ; preds = %cond.false.2888, %cond.true.2887
  %cond2890 = phi %struct.rtx_def* [ %1355, %cond.true.2887 ], [ %1356, %cond.false.2888 ]
  store %struct.rtx_def* %cond2890, %struct.rtx_def** %retval
  br label %return

if.end.2891:                                      ; preds = %sw.bb.2882
  br label %sw.epilog.2892

sw.epilog.2892:                                   ; preds = %if.end.1874, %if.end.2891, %cond.end.2879, %if.end.2861, %cond.end.2840, %cond.end.2406, %if.then.1931, %if.end.1913, %if.then.1887
  %1357 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %tobool2893 = icmp ne %struct.rtx_def* %1357, null
  br i1 %tobool2893, label %cond.true.2894, label %cond.false.2895

cond.true.2894:                                   ; preds = %sw.epilog.2892
  %1358 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  br label %cond.end.2896

cond.false.2895:                                  ; preds = %sw.epilog.2892
  %1359 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.2896

cond.end.2896:                                    ; preds = %cond.false.2895, %cond.true.2894
  %cond2897 = phi %struct.rtx_def* [ %1358, %cond.true.2894 ], [ %1359, %cond.false.2895 ]
  store %struct.rtx_def* %cond2897, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %cond.end.2896, %cond.end.2889, %if.then.2860, %if.end.2827, %if.then.2684, %if.then.2651, %if.then.2598, %if.then.2548, %if.then.2500, %if.then.2450, %if.then.2356, %if.then.2352, %sw.bb.2349, %sw.bb.2348, %cond.end.2300, %if.then.2191, %if.then.2181, %cond.end.2170, %if.then.2058, %if.then.2054, %if.then.1436, %if.end.1347, %if.end.1340, %if.then.1257, %if.then.1208, %if.then.1200, %if.then.1169, %if.then.1128, %if.then.1047, %if.then.895, %if.end.888, %if.then.883, %if.then.251, %if.end.224, %if.then.217, %if.then.194, %if.then.52, %if.then.41, %sw.bb, %if.then
  %1360 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %1360
}

; Function Attrs: nounwind uwtable
define internal i32 @find_comparison_args(i32 %code, %struct.rtx_def** %parg1, %struct.rtx_def** %parg2, i32* %pmode1, i32* %pmode2) #0 {
entry:
  %code.addr = alloca i32, align 4
  %parg1.addr = alloca %struct.rtx_def**, align 8
  %parg2.addr = alloca %struct.rtx_def**, align 8
  %pmode1.addr = alloca i32*, align 8
  %pmode2.addr = alloca i32*, align 8
  %arg1 = alloca %struct.rtx_def*, align 8
  %arg2 = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %reverse_code = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %inner_mode = alloca i32, align 4
  %reversed = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store %struct.rtx_def** %parg1, %struct.rtx_def*** %parg1.addr, align 8
  store %struct.rtx_def** %parg2, %struct.rtx_def*** %parg2.addr, align 8
  store i32* %pmode1, i32** %pmode1.addr, align 8
  store i32* %pmode2, i32** %pmode2.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %parg1.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %arg1, align 8
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %parg2.addr, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %arg2, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.294, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x %struct.rtx_def*], [59 x %struct.rtx_def*]* getelementptr inbounds ([3 x [59 x %struct.rtx_def*]], [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i32 0, i64 0), i32 0, i64 %idxprom
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8
  %cmp = icmp eq %struct.rtx_def* %4, %7
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store %struct.rtx_def* null, %struct.rtx_def** %x, align 8
  store i32 0, i32* %reverse_code, align 4
  store %struct.table_elt* null, %struct.table_elt** %p, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load1 = load i32, i32* %9, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 74
  br i1 %cmp3, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i32 0, i64 64), align 8
  %cmp4 = icmp eq %struct.rtx_def* %10, %11
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  store %struct.rtx_def* %12, %struct.rtx_def** %x, align 8
  br label %if.end.44

if.else:                                          ; preds = %land.lhs.true, %while.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load5 = load i32, i32* %14, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %idxprom7 = sext i32 %bf.clear6 to i64
  %arrayidx8 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom7
  %15 = load i8, i8* %arrayidx8, align 1
  %conv = sext i8 %15 to i32
  %cmp9 = icmp eq i32 %conv, 60
  br i1 %cmp9, label %if.then.11, label %if.end.43

if.then.11:                                       ; preds = %if.else
  %16 = load i32, i32* %code.addr, align 4
  %cmp12 = icmp eq i32 %16, 102
  br i1 %cmp12, label %if.then.25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %18 = bitcast %struct.rtx_def* %17 to i32*
  %bf.load14 = load i32, i32* %18, align 8
  %bf.lshr15 = lshr i32 %bf.load14, 16
  %bf.clear16 = and i32 %bf.lshr15, 255
  %idxprom17 = sext i32 %bf.clear16 to i64
  %arrayidx18 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom17
  %19 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp eq i32 %19, 1
  br i1 %cmp19, label %land.lhs.true.21, label %if.else.26

land.lhs.true.21:                                 ; preds = %lor.lhs.false
  %20 = load i32, i32* %code.addr, align 4
  %cmp22 = icmp eq i32 %20, 107
  br i1 %cmp22, label %land.lhs.true.24, label %if.else.26

land.lhs.true.24:                                 ; preds = %land.lhs.true.21
  br i1 false, label %if.then.25, label %if.else.26

if.then.25:                                       ; preds = %land.lhs.true.24, %if.then.11
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  store %struct.rtx_def* %21, %struct.rtx_def** %x, align 8
  br label %if.end.42

if.else.26:                                       ; preds = %land.lhs.true.24, %land.lhs.true.21, %lor.lhs.false
  %22 = load i32, i32* %code.addr, align 4
  %cmp27 = icmp eq i32 %22, 103
  br i1 %cmp27, label %if.then.41, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %if.else.26
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load30 = load i32, i32* %24, align 8
  %bf.lshr31 = lshr i32 %bf.load30, 16
  %bf.clear32 = and i32 %bf.lshr31, 255
  %idxprom33 = sext i32 %bf.clear32 to i64
  %arrayidx34 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom33
  %25 = load i32, i32* %arrayidx34, align 4
  %cmp35 = icmp eq i32 %25, 1
  br i1 %cmp35, label %land.lhs.true.37, label %if.end

land.lhs.true.37:                                 ; preds = %lor.lhs.false.29
  %26 = load i32, i32* %code.addr, align 4
  %cmp38 = icmp eq i32 %26, 104
  br i1 %cmp38, label %land.lhs.true.40, label %if.end

land.lhs.true.40:                                 ; preds = %land.lhs.true.37
  br i1 false, label %if.then.41, label %if.end

if.then.41:                                       ; preds = %land.lhs.true.40, %if.else.26
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  store %struct.rtx_def* %27, %struct.rtx_def** %x, align 8
  store i32 1, i32* %reverse_code, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.41, %land.lhs.true.40, %land.lhs.true.37, %lor.lhs.false.29
  br label %if.end.42

if.end.42:                                        ; preds = %if.end, %if.then.25
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.else
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.then
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %cmp45 = icmp eq %struct.rtx_def* %28, null
  br i1 %cmp45, label %if.then.47, label %if.end.55

if.then.47:                                       ; preds = %if.end.44
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load48 = load i32, i32* %32, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %call = call i32 @safe_hash(%struct.rtx_def* %30, i32 %bf.clear50)
  %and = and i32 %call, 31
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load51 = load i32, i32* %34, align 8
  %bf.lshr52 = lshr i32 %bf.load51, 16
  %bf.clear53 = and i32 %bf.lshr52, 255
  %call54 = call %struct.table_elt* @lookup(%struct.rtx_def* %29, i32 %and, i32 %bf.clear53)
  store %struct.table_elt* %call54, %struct.table_elt** %p, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.47, %if.end.44
  %35 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %35, null
  br i1 %tobool, label %if.then.56, label %if.end.60

if.then.56:                                       ; preds = %if.end.55
  %36 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %36, i32 0, i32 6
  %37 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %37, %struct.table_elt** %p, align 8
  %38 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 12
  %39 = load i8, i8* %is_const, align 1
  %tobool57 = icmp ne i8 %39, 0
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.then.56
  br label %while.end

if.end.59:                                        ; preds = %if.then.56
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.end.55
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.60
  %40 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool61 = icmp ne %struct.table_elt* %40, null
  br i1 %tobool61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %41 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 0
  %42 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load62 = load i32, i32* %43, align 8
  %bf.lshr63 = lshr i32 %bf.load62, 16
  %bf.clear64 = and i32 %bf.lshr63, 255
  store i32 %bf.clear64, i32* %inner_mode, align 4
  %44 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp65 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %44, i32 0, i32 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp65, align 8
  %46 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp66 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %46, i32 0, i32 0
  %47 = load %struct.rtx_def*, %struct.rtx_def** %exp66, align 8
  %call67 = call i32 @exp_equiv_p(%struct.rtx_def* %45, %struct.rtx_def* %47, i32 1, i32 0)
  %tobool68 = icmp ne i32 %call67, 0
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %for.body
  br label %for.inc

if.end.70:                                        ; preds = %for.body
  %48 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp71 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %48, i32 0, i32 0
  %49 = load %struct.rtx_def*, %struct.rtx_def** %exp71, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load72 = load i32, i32* %50, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 74
  br i1 %cmp74, label %if.then.108, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %if.end.70
  %51 = load i32, i32* %code.addr, align 4
  %cmp77 = icmp eq i32 %51, 102
  br i1 %cmp77, label %land.lhs.true.99, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %lor.lhs.false.76
  %52 = load i32, i32* %code.addr, align 4
  %cmp80 = icmp eq i32 %52, 107
  br i1 %cmp80, label %land.lhs.true.82, label %if.else.110

land.lhs.true.82:                                 ; preds = %lor.lhs.false.79
  %53 = load i32, i32* %inner_mode, align 4
  %idxprom83 = sext i32 %53 to i64
  %arrayidx84 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom83
  %54 = load i32, i32* %arrayidx84, align 4
  %cmp85 = icmp eq i32 %54, 1
  br i1 %cmp85, label %land.lhs.true.87, label %if.else.110

land.lhs.true.87:                                 ; preds = %land.lhs.true.82
  %55 = load i32, i32* %inner_mode, align 4
  %idxprom88 = sext i32 %55 to i64
  %arrayidx89 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom88
  %56 = load i16, i16* %arrayidx89, align 2
  %conv90 = zext i16 %56 to i32
  %cmp91 = icmp sle i32 %conv90, 64
  br i1 %cmp91, label %land.lhs.true.93, label %if.else.110

land.lhs.true.93:                                 ; preds = %land.lhs.true.87
  %57 = load i32, i32* %inner_mode, align 4
  %idxprom94 = sext i32 %57 to i64
  %arrayidx95 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom94
  %58 = load i16, i16* %arrayidx95, align 2
  %conv96 = zext i16 %58 to i32
  %sub = sub nsw i32 %conv96, 1
  %sh_prom = zext i32 %sub to i64
  %shl = shl i64 1, %sh_prom
  %and97 = and i64 1, %shl
  %tobool98 = icmp ne i64 %and97, 0
  br i1 %tobool98, label %land.lhs.true.99, label %if.else.110

land.lhs.true.99:                                 ; preds = %land.lhs.true.93, %lor.lhs.false.76
  %59 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp100 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %59, i32 0, i32 0
  %60 = load %struct.rtx_def*, %struct.rtx_def** %exp100, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load101 = load i32, i32* %61, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %idxprom103 = sext i32 %bf.clear102 to i64
  %arrayidx104 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom103
  %62 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %62 to i32
  %cmp106 = icmp eq i32 %conv105, 60
  br i1 %cmp106, label %if.then.108, label %if.else.110

if.then.108:                                      ; preds = %land.lhs.true.99, %if.end.70
  %63 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp109 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %63, i32 0, i32 0
  %64 = load %struct.rtx_def*, %struct.rtx_def** %exp109, align 8
  store %struct.rtx_def* %64, %struct.rtx_def** %x, align 8
  br label %for.end

if.else.110:                                      ; preds = %land.lhs.true.99, %land.lhs.true.93, %land.lhs.true.87, %land.lhs.true.82, %lor.lhs.false.79
  %65 = load i32, i32* %code.addr, align 4
  %cmp111 = icmp eq i32 %65, 103
  br i1 %cmp111, label %land.lhs.true.136, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %if.else.110
  %66 = load i32, i32* %code.addr, align 4
  %cmp114 = icmp eq i32 %66, 104
  br i1 %cmp114, label %land.lhs.true.116, label %if.else.147

land.lhs.true.116:                                ; preds = %lor.lhs.false.113
  %67 = load i32, i32* %inner_mode, align 4
  %idxprom117 = sext i32 %67 to i64
  %arrayidx118 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom117
  %68 = load i32, i32* %arrayidx118, align 4
  %cmp119 = icmp eq i32 %68, 1
  br i1 %cmp119, label %land.lhs.true.121, label %if.else.147

land.lhs.true.121:                                ; preds = %land.lhs.true.116
  %69 = load i32, i32* %inner_mode, align 4
  %idxprom122 = sext i32 %69 to i64
  %arrayidx123 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom122
  %70 = load i16, i16* %arrayidx123, align 2
  %conv124 = zext i16 %70 to i32
  %cmp125 = icmp sle i32 %conv124, 64
  br i1 %cmp125, label %land.lhs.true.127, label %if.else.147

land.lhs.true.127:                                ; preds = %land.lhs.true.121
  %71 = load i32, i32* %inner_mode, align 4
  %idxprom128 = sext i32 %71 to i64
  %arrayidx129 = getelementptr inbounds [59 x i16], [59 x i16]* @mode_bitsize, i32 0, i64 %idxprom128
  %72 = load i16, i16* %arrayidx129, align 2
  %conv130 = zext i16 %72 to i32
  %sub131 = sub nsw i32 %conv130, 1
  %sh_prom132 = zext i32 %sub131 to i64
  %shl133 = shl i64 1, %sh_prom132
  %and134 = and i64 1, %shl133
  %tobool135 = icmp ne i64 %and134, 0
  br i1 %tobool135, label %land.lhs.true.136, label %if.else.147

land.lhs.true.136:                                ; preds = %land.lhs.true.127, %if.else.110
  %73 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp137 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %73, i32 0, i32 0
  %74 = load %struct.rtx_def*, %struct.rtx_def** %exp137, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load138 = load i32, i32* %75, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %idxprom140 = sext i32 %bf.clear139 to i64
  %arrayidx141 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom140
  %76 = load i8, i8* %arrayidx141, align 1
  %conv142 = sext i8 %76 to i32
  %cmp143 = icmp eq i32 %conv142, 60
  br i1 %cmp143, label %if.then.145, label %if.else.147

if.then.145:                                      ; preds = %land.lhs.true.136
  store i32 1, i32* %reverse_code, align 4
  %77 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp146 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %77, i32 0, i32 0
  %78 = load %struct.rtx_def*, %struct.rtx_def** %exp146, align 8
  store %struct.rtx_def* %78, %struct.rtx_def** %x, align 8
  br label %for.end

if.else.147:                                      ; preds = %land.lhs.true.136, %land.lhs.true.127, %land.lhs.true.121, %land.lhs.true.116, %lor.lhs.false.113
  %79 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp148 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %79, i32 0, i32 0
  %80 = load %struct.rtx_def*, %struct.rtx_def** %exp148, align 8
  %81 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp149 = icmp eq %struct.rtx_def* %80, %81
  br i1 %cmp149, label %if.then.265, label %lor.lhs.false.151

lor.lhs.false.151:                                ; preds = %if.else.147
  %82 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp152 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %82, i32 0, i32 0
  %83 = load %struct.rtx_def*, %struct.rtx_def** %exp152, align 8
  %84 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp153 = icmp eq %struct.rtx_def* %83, %84
  br i1 %cmp153, label %if.then.265, label %lor.lhs.false.155

lor.lhs.false.155:                                ; preds = %lor.lhs.false.151
  %85 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp156 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %85, i32 0, i32 0
  %86 = load %struct.rtx_def*, %struct.rtx_def** %exp156, align 8
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp157 = icmp eq %struct.rtx_def* %86, %87
  br i1 %cmp157, label %if.then.265, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %lor.lhs.false.155
  %88 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp160 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 0
  %89 = load %struct.rtx_def*, %struct.rtx_def** %exp160, align 8
  %90 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp161 = icmp eq %struct.rtx_def* %89, %90
  br i1 %cmp161, label %if.then.265, label %lor.lhs.false.163

lor.lhs.false.163:                                ; preds = %lor.lhs.false.159
  %91 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp164 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %91, i32 0, i32 0
  %92 = load %struct.rtx_def*, %struct.rtx_def** %exp164, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load165 = load i32, i32* %93, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 75
  br i1 %cmp167, label %land.lhs.true.169, label %lor.lhs.false.211

land.lhs.true.169:                                ; preds = %lor.lhs.false.163
  %94 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp170 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %94, i32 0, i32 0
  %95 = load %struct.rtx_def*, %struct.rtx_def** %exp170, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %97 = bitcast %struct.rtx_def* %96 to i32*
  %bf.load172 = load i32, i32* %97, align 8
  %bf.clear173 = and i32 %bf.load172, 65535
  %cmp174 = icmp eq i32 %bf.clear173, 54
  br i1 %cmp174, label %land.lhs.true.176, label %lor.lhs.false.211

land.lhs.true.176:                                ; preds = %land.lhs.true.169
  %98 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp177 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %98, i32 0, i32 0
  %99 = load %struct.rtx_def*, %struct.rtx_def** %exp177, align 8
  %fld178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i32 0, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %100 = load %struct.rtx_def*, %struct.rtx_def** %rtx180, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp181 = icmp eq %struct.rtx_def* %100, %101
  br i1 %cmp181, label %if.then.265, label %lor.lhs.false.183

lor.lhs.false.183:                                ; preds = %land.lhs.true.176
  %102 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp184 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %102, i32 0, i32 0
  %103 = load %struct.rtx_def*, %struct.rtx_def** %exp184, align 8
  %fld185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i32 0, i64 0
  %rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rtx187, align 8
  %105 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp188 = icmp eq %struct.rtx_def* %104, %105
  br i1 %cmp188, label %if.then.265, label %lor.lhs.false.190

lor.lhs.false.190:                                ; preds = %lor.lhs.false.183
  %106 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp191 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %106, i32 0, i32 0
  %107 = load %struct.rtx_def*, %struct.rtx_def** %exp191, align 8
  %108 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp192 = icmp eq %struct.rtx_def* %107, %108
  br i1 %cmp192, label %land.lhs.true.194, label %lor.lhs.false.197

land.lhs.true.194:                                ; preds = %lor.lhs.false.190
  %109 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv195 = sext i8 %109 to i32
  %tobool196 = icmp ne i32 %conv195, 0
  br i1 %tobool196, label %if.then.265, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %land.lhs.true.194, %lor.lhs.false.190
  %110 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp198 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %110, i32 0, i32 0
  %111 = load %struct.rtx_def*, %struct.rtx_def** %exp198, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 0
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  %113 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp202 = icmp eq %struct.rtx_def* %112, %113
  br i1 %cmp202, label %if.then.265, label %lor.lhs.false.204

lor.lhs.false.204:                                ; preds = %lor.lhs.false.197
  %114 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp205 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %114, i32 0, i32 0
  %115 = load %struct.rtx_def*, %struct.rtx_def** %exp205, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 0
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rtx208, align 8
  %117 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp209 = icmp eq %struct.rtx_def* %116, %117
  br i1 %cmp209, label %if.then.265, label %lor.lhs.false.211

lor.lhs.false.211:                                ; preds = %lor.lhs.false.204, %land.lhs.true.169, %lor.lhs.false.163
  %118 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp212 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %118, i32 0, i32 0
  %119 = load %struct.rtx_def*, %struct.rtx_def** %exp212, align 8
  %120 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp213 = icmp eq %struct.rtx_def* %119, %120
  br i1 %cmp213, label %if.then.265, label %lor.lhs.false.215

lor.lhs.false.215:                                ; preds = %lor.lhs.false.211
  %121 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp216 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %121, i32 0, i32 0
  %122 = load %struct.rtx_def*, %struct.rtx_def** %exp216, align 8
  %123 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 8), align 8
  %cmp217 = icmp eq %struct.rtx_def* %122, %123
  br i1 %cmp217, label %if.then.265, label %lor.lhs.false.219

lor.lhs.false.219:                                ; preds = %lor.lhs.false.215
  %124 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp220 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %124, i32 0, i32 0
  %125 = load %struct.rtx_def*, %struct.rtx_def** %exp220, align 8
  %126 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 9), align 8
  %cmp221 = icmp eq %struct.rtx_def* %125, %126
  br i1 %cmp221, label %if.then.265, label %lor.lhs.false.223

lor.lhs.false.223:                                ; preds = %lor.lhs.false.219
  %127 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp224 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %127, i32 0, i32 0
  %128 = load %struct.rtx_def*, %struct.rtx_def** %exp224, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load225 = load i32, i32* %129, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 75
  br i1 %cmp227, label %land.lhs.true.229, label %lor.lhs.false.259

land.lhs.true.229:                                ; preds = %lor.lhs.false.223
  %130 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp230 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %130, i32 0, i32 0
  %131 = load %struct.rtx_def*, %struct.rtx_def** %exp230, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 1
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load234 = load i32, i32* %133, align 8
  %bf.clear235 = and i32 %bf.load234, 65535
  %cmp236 = icmp eq i32 %bf.clear235, 54
  br i1 %cmp236, label %land.lhs.true.238, label %lor.lhs.false.259

land.lhs.true.238:                                ; preds = %land.lhs.true.229
  %134 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp239 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %134, i32 0, i32 0
  %135 = load %struct.rtx_def*, %struct.rtx_def** %exp239, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  %137 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  %cmp243 = icmp eq %struct.rtx_def* %136, %137
  br i1 %cmp243, label %if.then.265, label %lor.lhs.false.245

lor.lhs.false.245:                                ; preds = %land.lhs.true.238
  %138 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp246 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %138, i32 0, i32 0
  %139 = load %struct.rtx_def*, %struct.rtx_def** %exp246, align 8
  %fld247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i32 0, i64 0
  %rtx249 = bitcast %union.rtunion_def* %arrayidx248 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx249, align 8
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 8), align 8
  %cmp250 = icmp eq %struct.rtx_def* %140, %141
  br i1 %cmp250, label %if.then.265, label %lor.lhs.false.252

lor.lhs.false.252:                                ; preds = %lor.lhs.false.245
  %142 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp253 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %142, i32 0, i32 0
  %143 = load %struct.rtx_def*, %struct.rtx_def** %exp253, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rtx256, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 9), align 8
  %cmp257 = icmp eq %struct.rtx_def* %144, %145
  br i1 %cmp257, label %if.then.265, label %lor.lhs.false.259

lor.lhs.false.259:                                ; preds = %lor.lhs.false.252, %land.lhs.true.229, %lor.lhs.false.223
  %146 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp260 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %146, i32 0, i32 0
  %147 = load %struct.rtx_def*, %struct.rtx_def** %exp260, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load261 = load i32, i32* %148, align 8
  %bf.clear262 = and i32 %bf.load261, 65535
  %cmp263 = icmp eq i32 %bf.clear262, 70
  br i1 %cmp263, label %if.then.265, label %if.end.267

if.then.265:                                      ; preds = %lor.lhs.false.259, %lor.lhs.false.252, %lor.lhs.false.245, %land.lhs.true.238, %lor.lhs.false.219, %lor.lhs.false.215, %lor.lhs.false.211, %lor.lhs.false.204, %lor.lhs.false.197, %land.lhs.true.194, %lor.lhs.false.183, %land.lhs.true.176, %lor.lhs.false.159, %lor.lhs.false.155, %lor.lhs.false.151, %if.else.147
  %149 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp266 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %149, i32 0, i32 0
  %150 = load %struct.rtx_def*, %struct.rtx_def** %exp266, align 8
  store %struct.rtx_def* %150, %struct.rtx_def** %arg1, align 8
  br label %for.inc

if.end.267:                                       ; preds = %lor.lhs.false.259
  br label %if.end.268

if.end.268:                                       ; preds = %if.end.267
  br label %if.end.269

if.end.269:                                       ; preds = %if.end.268
  br label %for.inc

for.inc:                                          ; preds = %if.end.269, %if.then.265, %if.then.69
  %151 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %151, i32 0, i32 4
  %152 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %152, %struct.table_elt** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.145, %if.then.108, %for.cond
  %153 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %cmp270 = icmp eq %struct.rtx_def* %153, null
  br i1 %cmp270, label %if.then.272, label %if.end.273

if.then.272:                                      ; preds = %for.end
  br label %while.end

if.end.273:                                       ; preds = %for.end
  %154 = load i32, i32* %reverse_code, align 4
  %tobool274 = icmp ne i32 %154, 0
  br i1 %tobool274, label %if.then.275, label %if.else.282

if.then.275:                                      ; preds = %if.end.273
  %155 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %call276 = call i32 @reversed_comparison_code(%struct.rtx_def* %155, %struct.rtx_def* null)
  store i32 %call276, i32* %reversed, align 4
  %156 = load i32, i32* %reversed, align 4
  %cmp277 = icmp eq i32 %156, 0
  br i1 %cmp277, label %if.then.279, label %if.else.280

if.then.279:                                      ; preds = %if.then.275
  br label %while.end

if.else.280:                                      ; preds = %if.then.275
  %157 = load i32, i32* %reversed, align 4
  store i32 %157, i32* %code.addr, align 4
  br label %if.end.281

if.end.281:                                       ; preds = %if.else.280
  br label %if.end.294

if.else.282:                                      ; preds = %if.end.273
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %159 = bitcast %struct.rtx_def* %158 to i32*
  %bf.load283 = load i32, i32* %159, align 8
  %bf.clear284 = and i32 %bf.load283, 65535
  %idxprom285 = sext i32 %bf.clear284 to i64
  %arrayidx286 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom285
  %160 = load i8, i8* %arrayidx286, align 1
  %conv287 = sext i8 %160 to i32
  %cmp288 = icmp eq i32 %conv287, 60
  br i1 %cmp288, label %if.then.290, label %if.end.293

if.then.290:                                      ; preds = %if.else.282
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %162 = bitcast %struct.rtx_def* %161 to i32*
  %bf.load291 = load i32, i32* %162, align 8
  %bf.clear292 = and i32 %bf.load291, 65535
  store i32 %bf.clear292, i32* %code.addr, align 4
  br label %if.end.293

if.end.293:                                       ; preds = %if.then.290, %if.else.282
  br label %if.end.294

if.end.294:                                       ; preds = %if.end.293, %if.end.281
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i32 0, i64 0
  %rtx297 = bitcast %union.rtunion_def* %arrayidx296 to %struct.rtx_def**
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rtx297, align 8
  store %struct.rtx_def* %164, %struct.rtx_def** %arg1, align 8
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i32 0, i64 1
  %rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtx300, align 8
  store %struct.rtx_def* %166, %struct.rtx_def** %arg2, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then.279, %if.then.272, %if.then.58, %while.cond
  %167 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %168 = bitcast %struct.rtx_def* %167 to i32*
  %bf.load301 = load i32, i32* %168, align 8
  %bf.lshr302 = lshr i32 %bf.load301, 16
  %bf.clear303 = and i32 %bf.lshr302, 255
  %169 = load i32*, i32** %pmode1.addr, align 8
  store i32 %bf.clear303, i32* %169, align 4
  %170 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8
  %171 = bitcast %struct.rtx_def* %170 to i32*
  %bf.load304 = load i32, i32* %171, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %172 = load i32*, i32** %pmode2.addr, align 8
  store i32 %bf.clear306, i32* %172, align 4
  %173 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8
  %call307 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %173, %struct.rtx_def* null)
  %174 = load %struct.rtx_def**, %struct.rtx_def*** %parg1.addr, align 8
  store %struct.rtx_def* %call307, %struct.rtx_def** %174, align 8
  %175 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8
  %call308 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %175, %struct.rtx_def* null)
  %176 = load %struct.rtx_def**, %struct.rtx_def*** %parg2.addr, align 8
  store %struct.rtx_def* %call308, %struct.rtx_def** %176, align 8
  %177 = load i32, i32* %code.addr, align 4
  ret i32 %177
}

declare i32 @reversed_comparison_code_parts(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @record_jump_cond(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %reversed_nonequality) #0 {
entry:
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %reversed_nonequality.addr = alloca i32, align 4
  %op0_hash = alloca i32, align 4
  %op1_hash = alloca i32, align 4
  %op0_in_memory = alloca i32, align 4
  %op1_in_memory = alloca i32, align 4
  %op0_elt = alloca %struct.table_elt*, align 8
  %op1_elt = alloca %struct.table_elt*, align 8
  %inner_mode = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %inner_mode50 = alloca i32, align 4
  %tem57 = alloca %struct.rtx_def*, align 8
  %inner_mode98 = alloca i32, align 4
  %tem105 = alloca %struct.rtx_def*, align 8
  %inner_mode146 = alloca i32, align 4
  %tem153 = alloca %struct.rtx_def*, align 8
  %ent = alloca %struct.qty_table_elem*, align 8
  %qty = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  store i32 %reversed_nonequality, i32* %reversed_nonequality.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  %cmp = icmp eq i32 %0, 103
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 63
  br i1 %cmp1, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load3 = load i32, i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load3, 16
  %bf.clear4 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear4 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load6 = load i32, i32* %8, align 8
  %bf.lshr7 = lshr i32 %bf.load6, 16
  %bf.clear8 = and i32 %bf.lshr7, 255
  %idxprom9 = sext i32 %bf.clear8 to i64
  %arrayidx10 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom9
  %9 = load i8, i8* %arrayidx10, align 1
  %conv11 = zext i8 %9 to i32
  %cmp12 = icmp sgt i32 %conv, %conv11
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.2
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtx16, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load17 = load i32, i32* %12, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  store i32 %bf.clear19, i32* %inner_mode, align 4
  %13 = load i32, i32* %inner_mode, align 4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %13, %struct.rtx_def* %14)
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8
  %15 = load i32, i32* %code.addr, align 4
  %16 = load i32, i32* %mode.addr, align 4
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtx22, align 8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  %tobool = icmp ne %struct.rtx_def* %19, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %21 = load i32, i32* %inner_mode, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call23 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %21, %struct.rtx_def* %22, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %20, %cond.true ], [ %call23, %cond.false ]
  %23 = load i32, i32* %reversed_nonequality.addr, align 4
  call void @record_jump_cond(i32 %15, i32 %16, %struct.rtx_def* %18, %struct.rtx_def* %cond, i32 %23)
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true.2, %land.lhs.true, %entry
  %24 = load i32, i32* %code.addr, align 4
  %cmp24 = icmp eq i32 %24, 103
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.68

land.lhs.true.26:                                 ; preds = %if.end
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load27 = load i32, i32* %26, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 63
  br i1 %cmp29, label %land.lhs.true.31, label %if.end.68

land.lhs.true.31:                                 ; preds = %land.lhs.true.26
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load32 = load i32, i32* %28, align 8
  %bf.lshr33 = lshr i32 %bf.load32, 16
  %bf.clear34 = and i32 %bf.lshr33, 255
  %idxprom35 = sext i32 %bf.clear34 to i64
  %arrayidx36 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom35
  %29 = load i8, i8* %arrayidx36, align 1
  %conv37 = zext i8 %29 to i32
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtx40, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load41 = load i32, i32* %32, align 8
  %bf.lshr42 = lshr i32 %bf.load41, 16
  %bf.clear43 = and i32 %bf.lshr42, 255
  %idxprom44 = sext i32 %bf.clear43 to i64
  %arrayidx45 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom44
  %33 = load i8, i8* %arrayidx45, align 1
  %conv46 = zext i8 %33 to i32
  %cmp47 = icmp sgt i32 %conv37, %conv46
  br i1 %cmp47, label %if.then.49, label %if.end.68

if.then.49:                                       ; preds = %land.lhs.true.31
  %34 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i32 0, i64 0
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx53, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load54 = load i32, i32* %36, align 8
  %bf.lshr55 = lshr i32 %bf.load54, 16
  %bf.clear56 = and i32 %bf.lshr55, 255
  store i32 %bf.clear56, i32* %inner_mode50, align 4
  %37 = load i32, i32* %inner_mode50, align 4
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call58 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %37, %struct.rtx_def* %38)
  store %struct.rtx_def* %call58, %struct.rtx_def** %tem57, align 8
  %39 = load i32, i32* %code.addr, align 4
  %40 = load i32, i32* %mode.addr, align 4
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i32 0, i64 0
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rtx61, align 8
  %43 = load %struct.rtx_def*, %struct.rtx_def** %tem57, align 8
  %tobool62 = icmp ne %struct.rtx_def* %43, null
  br i1 %tobool62, label %cond.true.63, label %cond.false.64

cond.true.63:                                     ; preds = %if.then.49
  %44 = load %struct.rtx_def*, %struct.rtx_def** %tem57, align 8
  br label %cond.end.66

cond.false.64:                                    ; preds = %if.then.49
  %45 = load i32, i32* %inner_mode50, align 4
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call65 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %45, %struct.rtx_def* %46, i32 0)
  br label %cond.end.66

cond.end.66:                                      ; preds = %cond.false.64, %cond.true.63
  %cond67 = phi %struct.rtx_def* [ %44, %cond.true.63 ], [ %call65, %cond.false.64 ]
  %47 = load i32, i32* %reversed_nonequality.addr, align 4
  call void @record_jump_cond(i32 %39, i32 %40, %struct.rtx_def* %42, %struct.rtx_def* %cond67, i32 %47)
  br label %if.end.68

if.end.68:                                        ; preds = %cond.end.66, %land.lhs.true.31, %land.lhs.true.26, %if.end
  %48 = load i32, i32* %code.addr, align 4
  %cmp69 = icmp eq i32 %48, 102
  br i1 %cmp69, label %land.lhs.true.71, label %if.end.116

land.lhs.true.71:                                 ; preds = %if.end.68
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load72 = load i32, i32* %50, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 63
  br i1 %cmp74, label %land.lhs.true.76, label %if.end.116

land.lhs.true.76:                                 ; preds = %land.lhs.true.71
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call77 = call i32 @subreg_lowpart_p(%struct.rtx_def* %51)
  %tobool78 = icmp ne i32 %call77, 0
  br i1 %tobool78, label %land.lhs.true.79, label %if.end.116

land.lhs.true.79:                                 ; preds = %land.lhs.true.76
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %53 = bitcast %struct.rtx_def* %52 to i32*
  %bf.load80 = load i32, i32* %53, align 8
  %bf.lshr81 = lshr i32 %bf.load80, 16
  %bf.clear82 = and i32 %bf.lshr81, 255
  %idxprom83 = sext i32 %bf.clear82 to i64
  %arrayidx84 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom83
  %54 = load i8, i8* %arrayidx84, align 1
  %conv85 = zext i8 %54 to i32
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i32 0, i64 0
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx88, align 8
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load89 = load i32, i32* %57, align 8
  %bf.lshr90 = lshr i32 %bf.load89, 16
  %bf.clear91 = and i32 %bf.lshr90, 255
  %idxprom92 = sext i32 %bf.clear91 to i64
  %arrayidx93 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom92
  %58 = load i8, i8* %arrayidx93, align 1
  %conv94 = zext i8 %58 to i32
  %cmp95 = icmp slt i32 %conv85, %conv94
  br i1 %cmp95, label %if.then.97, label %if.end.116

if.then.97:                                       ; preds = %land.lhs.true.79
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load102 = load i32, i32* %61, align 8
  %bf.lshr103 = lshr i32 %bf.load102, 16
  %bf.clear104 = and i32 %bf.lshr103, 255
  store i32 %bf.clear104, i32* %inner_mode98, align 4
  %62 = load i32, i32* %inner_mode98, align 4
  %63 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call106 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %62, %struct.rtx_def* %63)
  store %struct.rtx_def* %call106, %struct.rtx_def** %tem105, align 8
  %64 = load i32, i32* %code.addr, align 4
  %65 = load i32, i32* %mode.addr, align 4
  %66 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i32 0, i64 0
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx109, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %tem105, align 8
  %tobool110 = icmp ne %struct.rtx_def* %68, null
  br i1 %tobool110, label %cond.true.111, label %cond.false.112

cond.true.111:                                    ; preds = %if.then.97
  %69 = load %struct.rtx_def*, %struct.rtx_def** %tem105, align 8
  br label %cond.end.114

cond.false.112:                                   ; preds = %if.then.97
  %70 = load i32, i32* %inner_mode98, align 4
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call113 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %70, %struct.rtx_def* %71, i32 0)
  br label %cond.end.114

cond.end.114:                                     ; preds = %cond.false.112, %cond.true.111
  %cond115 = phi %struct.rtx_def* [ %69, %cond.true.111 ], [ %call113, %cond.false.112 ]
  %72 = load i32, i32* %reversed_nonequality.addr, align 4
  call void @record_jump_cond(i32 %64, i32 %65, %struct.rtx_def* %67, %struct.rtx_def* %cond115, i32 %72)
  br label %if.end.116

if.end.116:                                       ; preds = %cond.end.114, %land.lhs.true.79, %land.lhs.true.76, %land.lhs.true.71, %if.end.68
  %73 = load i32, i32* %code.addr, align 4
  %cmp117 = icmp eq i32 %73, 102
  br i1 %cmp117, label %land.lhs.true.119, label %if.end.164

land.lhs.true.119:                                ; preds = %if.end.116
  %74 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load120 = load i32, i32* %75, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 63
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.164

land.lhs.true.124:                                ; preds = %land.lhs.true.119
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call125 = call i32 @subreg_lowpart_p(%struct.rtx_def* %76)
  %tobool126 = icmp ne i32 %call125, 0
  br i1 %tobool126, label %land.lhs.true.127, label %if.end.164

land.lhs.true.127:                                ; preds = %land.lhs.true.124
  %77 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %78 = bitcast %struct.rtx_def* %77 to i32*
  %bf.load128 = load i32, i32* %78, align 8
  %bf.lshr129 = lshr i32 %bf.load128, 16
  %bf.clear130 = and i32 %bf.lshr129, 255
  %idxprom131 = sext i32 %bf.clear130 to i64
  %arrayidx132 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom131
  %79 = load i8, i8* %arrayidx132, align 1
  %conv133 = zext i8 %79 to i32
  %80 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i32 0, i64 0
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtx136, align 8
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load137 = load i32, i32* %82, align 8
  %bf.lshr138 = lshr i32 %bf.load137, 16
  %bf.clear139 = and i32 %bf.lshr138, 255
  %idxprom140 = sext i32 %bf.clear139 to i64
  %arrayidx141 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom140
  %83 = load i8, i8* %arrayidx141, align 1
  %conv142 = zext i8 %83 to i32
  %cmp143 = icmp slt i32 %conv133, %conv142
  br i1 %cmp143, label %if.then.145, label %if.end.164

if.then.145:                                      ; preds = %land.lhs.true.127
  %84 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 0
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rtx149, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load150 = load i32, i32* %86, align 8
  %bf.lshr151 = lshr i32 %bf.load150, 16
  %bf.clear152 = and i32 %bf.lshr151, 255
  store i32 %bf.clear152, i32* %inner_mode146, align 4
  %87 = load i32, i32* %inner_mode146, align 4
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call154 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %87, %struct.rtx_def* %88)
  store %struct.rtx_def* %call154, %struct.rtx_def** %tem153, align 8
  %89 = load i32, i32* %code.addr, align 4
  %90 = load i32, i32* %mode.addr, align 4
  %91 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i32 0, i64 0
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rtx157, align 8
  %93 = load %struct.rtx_def*, %struct.rtx_def** %tem153, align 8
  %tobool158 = icmp ne %struct.rtx_def* %93, null
  br i1 %tobool158, label %cond.true.159, label %cond.false.160

cond.true.159:                                    ; preds = %if.then.145
  %94 = load %struct.rtx_def*, %struct.rtx_def** %tem153, align 8
  br label %cond.end.162

cond.false.160:                                   ; preds = %if.then.145
  %95 = load i32, i32* %inner_mode146, align 4
  %96 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call161 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %95, %struct.rtx_def* %96, i32 0)
  br label %cond.end.162

cond.end.162:                                     ; preds = %cond.false.160, %cond.true.159
  %cond163 = phi %struct.rtx_def* [ %94, %cond.true.159 ], [ %call161, %cond.false.160 ]
  %97 = load i32, i32* %reversed_nonequality.addr, align 4
  call void @record_jump_cond(i32 %89, i32 %90, %struct.rtx_def* %92, %struct.rtx_def* %cond163, i32 %97)
  br label %if.end.164

if.end.164:                                       ; preds = %cond.end.162, %land.lhs.true.127, %land.lhs.true.124, %land.lhs.true.119, %if.end.116
  store i32 0, i32* @do_not_record, align 4
  store i32 0, i32* @hash_arg_in_memory, align 4
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %99 = bitcast %struct.rtx_def* %98 to i32*
  %bf.load165 = load i32, i32* %99, align 8
  %bf.clear166 = and i32 %bf.load165, 65535
  %cmp167 = icmp eq i32 %bf.clear166, 61
  br i1 %cmp167, label %land.lhs.true.169, label %cond.false.190

land.lhs.true.169:                                ; preds = %if.end.164
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx171 to i32*
  %101 = load i32, i32* %rtuint, align 4
  %cmp172 = icmp uge i32 %101, 53
  br i1 %cmp172, label %cond.true.174, label %cond.false.190

cond.true.174:                                    ; preds = %land.lhs.true.169
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i32 0, i64 0
  %rtuint177 = bitcast %union.rtunion_def* %arrayidx176 to i32*
  %103 = load i32, i32* %rtuint177, align 4
  %104 = load i32, i32* @cached_regno, align 4
  %cmp178 = icmp eq i32 %103, %104
  br i1 %cmp178, label %land.lhs.true.180, label %cond.false.183

land.lhs.true.180:                                ; preds = %cond.true.174
  %105 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool181 = icmp ne %struct.cse_reg_info* %105, null
  br i1 %tobool181, label %cond.true.182, label %cond.false.183

cond.true.182:                                    ; preds = %land.lhs.true.180
  %106 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.188

cond.false.183:                                   ; preds = %land.lhs.true.180, %cond.true.174
  %107 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i32 0, i64 0
  %rtuint186 = bitcast %union.rtunion_def* %arrayidx185 to i32*
  %108 = load i32, i32* %rtuint186, align 4
  %call187 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %108)
  br label %cond.end.188

cond.end.188:                                     ; preds = %cond.false.183, %cond.true.182
  %cond189 = phi %struct.cse_reg_info* [ %106, %cond.true.182 ], [ %call187, %cond.false.183 ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond189, i32 0, i32 3
  %109 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %109
  br label %cond.end.192

cond.false.190:                                   ; preds = %land.lhs.true.169, %if.end.164
  %110 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %111 = load i32, i32* %mode.addr, align 4
  %call191 = call i32 @canon_hash(%struct.rtx_def* %110, i32 %111)
  br label %cond.end.192

cond.end.192:                                     ; preds = %cond.false.190, %cond.end.188
  %cond193 = phi i32 [ %add, %cond.end.188 ], [ %call191, %cond.false.190 ]
  %and = and i32 %cond193, 31
  store i32 %and, i32* %op0_hash, align 4
  %112 = load i32, i32* @hash_arg_in_memory, align 4
  store i32 %112, i32* %op0_in_memory, align 4
  %113 = load i32, i32* @do_not_record, align 4
  %tobool194 = icmp ne i32 %113, 0
  br i1 %tobool194, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %cond.end.192
  br label %return

if.end.196:                                       ; preds = %cond.end.192
  store i32 0, i32* @do_not_record, align 4
  store i32 0, i32* @hash_arg_in_memory, align 4
  %114 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load197 = load i32, i32* %115, align 8
  %bf.clear198 = and i32 %bf.load197, 65535
  %cmp199 = icmp eq i32 %bf.clear198, 61
  br i1 %cmp199, label %land.lhs.true.201, label %cond.false.225

land.lhs.true.201:                                ; preds = %if.end.196
  %116 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i32 0, i64 0
  %rtuint204 = bitcast %union.rtunion_def* %arrayidx203 to i32*
  %117 = load i32, i32* %rtuint204, align 4
  %cmp205 = icmp uge i32 %117, 53
  br i1 %cmp205, label %cond.true.207, label %cond.false.225

cond.true.207:                                    ; preds = %land.lhs.true.201
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 0
  %rtuint210 = bitcast %union.rtunion_def* %arrayidx209 to i32*
  %119 = load i32, i32* %rtuint210, align 4
  %120 = load i32, i32* @cached_regno, align 4
  %cmp211 = icmp eq i32 %119, %120
  br i1 %cmp211, label %land.lhs.true.213, label %cond.false.216

land.lhs.true.213:                                ; preds = %cond.true.207
  %121 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool214 = icmp ne %struct.cse_reg_info* %121, null
  br i1 %tobool214, label %cond.true.215, label %cond.false.216

cond.true.215:                                    ; preds = %land.lhs.true.213
  %122 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.221

cond.false.216:                                   ; preds = %land.lhs.true.213, %cond.true.207
  %123 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 0
  %rtuint219 = bitcast %union.rtunion_def* %arrayidx218 to i32*
  %124 = load i32, i32* %rtuint219, align 4
  %call220 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %124)
  br label %cond.end.221

cond.end.221:                                     ; preds = %cond.false.216, %cond.true.215
  %cond222 = phi %struct.cse_reg_info* [ %122, %cond.true.215 ], [ %call220, %cond.false.216 ]
  %reg_qty223 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond222, i32 0, i32 3
  %125 = load i32, i32* %reg_qty223, align 4
  %add224 = add i32 7808, %125
  br label %cond.end.227

cond.false.225:                                   ; preds = %land.lhs.true.201, %if.end.196
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %127 = load i32, i32* %mode.addr, align 4
  %call226 = call i32 @canon_hash(%struct.rtx_def* %126, i32 %127)
  br label %cond.end.227

cond.end.227:                                     ; preds = %cond.false.225, %cond.end.221
  %cond228 = phi i32 [ %add224, %cond.end.221 ], [ %call226, %cond.false.225 ]
  %and229 = and i32 %cond228, 31
  store i32 %and229, i32* %op1_hash, align 4
  %128 = load i32, i32* @hash_arg_in_memory, align 4
  store i32 %128, i32* %op1_in_memory, align 4
  %129 = load i32, i32* @do_not_record, align 4
  %tobool230 = icmp ne i32 %129, 0
  br i1 %tobool230, label %if.then.231, label %if.end.232

if.then.231:                                      ; preds = %cond.end.227
  br label %return

if.end.232:                                       ; preds = %cond.end.227
  %130 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %131 = load i32, i32* %op0_hash, align 4
  %132 = load i32, i32* %mode.addr, align 4
  %call233 = call %struct.table_elt* @lookup(%struct.rtx_def* %130, i32 %131, i32 %132)
  store %struct.table_elt* %call233, %struct.table_elt** %op0_elt, align 8
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %134 = load i32, i32* %op1_hash, align 4
  %135 = load i32, i32* %mode.addr, align 4
  %call234 = call %struct.table_elt* @lookup(%struct.rtx_def* %133, i32 %134, i32 %135)
  store %struct.table_elt* %call234, %struct.table_elt** %op1_elt, align 8
  %136 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %cmp235 = icmp ne %struct.table_elt* %136, null
  br i1 %cmp235, label %land.lhs.true.237, label %lor.lhs.false

land.lhs.true.237:                                ; preds = %if.end.232
  %137 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %cmp238 = icmp ne %struct.table_elt* %137, null
  br i1 %cmp238, label %land.lhs.true.240, label %lor.lhs.false

land.lhs.true.240:                                ; preds = %land.lhs.true.237
  %138 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %138, i32 0, i32 6
  %139 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  %140 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %first_same_value241 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %140, i32 0, i32 6
  %141 = load %struct.table_elt*, %struct.table_elt** %first_same_value241, align 8
  %cmp242 = icmp eq %struct.table_elt* %139, %141
  br i1 %cmp242, label %if.then.249, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.240, %land.lhs.true.237, %if.end.232
  %142 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %cmp244 = icmp eq %struct.rtx_def* %142, %143
  br i1 %cmp244, label %if.then.249, label %lor.lhs.false.246

lor.lhs.false.246:                                ; preds = %lor.lhs.false
  %144 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call247 = call i32 @rtx_equal_p(%struct.rtx_def* %144, %struct.rtx_def* %145)
  %tobool248 = icmp ne i32 %call247, 0
  br i1 %tobool248, label %if.then.249, label %if.end.250

if.then.249:                                      ; preds = %lor.lhs.false.246, %lor.lhs.false, %land.lhs.true.240
  br label %return

if.end.250:                                       ; preds = %lor.lhs.false.246
  %146 = load i32, i32* %code.addr, align 4
  %cmp251 = icmp ne i32 %146, 103
  br i1 %cmp251, label %if.then.277, label %lor.lhs.false.253

lor.lhs.false.253:                                ; preds = %if.end.250
  %147 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %148 = bitcast %struct.rtx_def* %147 to i32*
  %bf.load254 = load i32, i32* %148, align 8
  %bf.lshr255 = lshr i32 %bf.load254, 16
  %bf.clear256 = and i32 %bf.lshr255, 255
  %idxprom257 = sext i32 %bf.clear256 to i64
  %arrayidx258 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom257
  %149 = load i32, i32* %arrayidx258, align 4
  %cmp259 = icmp eq i32 %149, 2
  br i1 %cmp259, label %if.then.277, label %lor.lhs.false.261

lor.lhs.false.261:                                ; preds = %lor.lhs.false.253
  %150 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %151 = bitcast %struct.rtx_def* %150 to i32*
  %bf.load262 = load i32, i32* %151, align 8
  %bf.lshr263 = lshr i32 %bf.load262, 16
  %bf.clear264 = and i32 %bf.lshr263, 255
  %idxprom265 = sext i32 %bf.clear264 to i64
  %arrayidx266 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom265
  %152 = load i32, i32* %arrayidx266, align 4
  %cmp267 = icmp eq i32 %152, 6
  br i1 %cmp267, label %if.then.277, label %lor.lhs.false.269

lor.lhs.false.269:                                ; preds = %lor.lhs.false.261
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %154 = bitcast %struct.rtx_def* %153 to i32*
  %bf.load270 = load i32, i32* %154, align 8
  %bf.lshr271 = lshr i32 %bf.load270, 16
  %bf.clear272 = and i32 %bf.lshr271, 255
  %idxprom273 = sext i32 %bf.clear272 to i64
  %arrayidx274 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom273
  %155 = load i32, i32* %arrayidx274, align 4
  %cmp275 = icmp eq i32 %155, 8
  br i1 %cmp275, label %if.then.277, label %if.end.515

if.then.277:                                      ; preds = %lor.lhs.false.269, %lor.lhs.false.261, %lor.lhs.false.253, %if.end.250
  %156 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %157 = bitcast %struct.rtx_def* %156 to i32*
  %bf.load278 = load i32, i32* %157, align 8
  %bf.clear279 = and i32 %bf.load278, 65535
  %cmp280 = icmp ne i32 %bf.clear279, 61
  br i1 %cmp280, label %if.then.282, label %if.end.284

if.then.282:                                      ; preds = %if.then.277
  %158 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call283 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %158)
  store %struct.rtx_def* %call283, %struct.rtx_def** %op1.addr, align 8
  br label %if.end.284

if.end.284:                                       ; preds = %if.then.282, %if.then.277
  %159 = load i32, i32* %reversed_nonequality.addr, align 4
  %tobool285 = icmp ne i32 %159, 0
  br i1 %tobool285, label %land.lhs.true.286, label %lor.lhs.false.301

land.lhs.true.286:                                ; preds = %if.end.284
  %160 = load i32, i32* %mode.addr, align 4
  %idxprom287 = sext i32 %160 to i64
  %arrayidx288 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom287
  %161 = load i32, i32* %arrayidx288, align 4
  %cmp289 = icmp eq i32 %161, 2
  br i1 %cmp289, label %if.then.309, label %lor.lhs.false.291

lor.lhs.false.291:                                ; preds = %land.lhs.true.286
  %162 = load i32, i32* %mode.addr, align 4
  %idxprom292 = sext i32 %162 to i64
  %arrayidx293 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom292
  %163 = load i32, i32* %arrayidx293, align 4
  %cmp294 = icmp eq i32 %163, 6
  br i1 %cmp294, label %if.then.309, label %lor.lhs.false.296

lor.lhs.false.296:                                ; preds = %lor.lhs.false.291
  %164 = load i32, i32* %mode.addr, align 4
  %idxprom297 = sext i32 %164 to i64
  %arrayidx298 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom297
  %165 = load i32, i32* %arrayidx298, align 4
  %cmp299 = icmp eq i32 %165, 8
  br i1 %cmp299, label %if.then.309, label %lor.lhs.false.301

lor.lhs.false.301:                                ; preds = %lor.lhs.false.296, %if.end.284
  %166 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %167 = bitcast %struct.rtx_def* %166 to i32*
  %bf.load302 = load i32, i32* %167, align 8
  %bf.clear303 = and i32 %bf.load302, 65535
  %cmp304 = icmp ne i32 %bf.clear303, 61
  br i1 %cmp304, label %if.then.309, label %lor.lhs.false.306

lor.lhs.false.306:                                ; preds = %lor.lhs.false.301
  %168 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %cmp307 = icmp eq %struct.rtx_def* %168, null
  br i1 %cmp307, label %if.then.309, label %if.end.310

if.then.309:                                      ; preds = %lor.lhs.false.306, %lor.lhs.false.301, %lor.lhs.false.296, %lor.lhs.false.291, %land.lhs.true.286
  br label %return

if.end.310:                                       ; preds = %lor.lhs.false.306
  %169 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %cmp311 = icmp eq %struct.table_elt* %169, null
  br i1 %cmp311, label %if.then.313, label %if.end.427

if.then.313:                                      ; preds = %if.end.310
  %170 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call314 = call i32 @insert_regs(%struct.rtx_def* %170, %struct.table_elt* null, i32 0)
  %tobool315 = icmp ne i32 %call314, 0
  br i1 %tobool315, label %if.then.316, label %if.end.424

if.then.316:                                      ; preds = %if.then.313
  %171 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  call void @rehash_using_reg(%struct.rtx_def* %171)
  %172 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %173 = bitcast %struct.rtx_def* %172 to i32*
  %bf.load317 = load i32, i32* %173, align 8
  %bf.clear318 = and i32 %bf.load317, 65535
  %cmp319 = icmp eq i32 %bf.clear318, 61
  br i1 %cmp319, label %land.lhs.true.321, label %cond.false.345

land.lhs.true.321:                                ; preds = %if.then.316
  %174 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i32 0, i64 0
  %rtuint324 = bitcast %union.rtunion_def* %arrayidx323 to i32*
  %175 = load i32, i32* %rtuint324, align 4
  %cmp325 = icmp uge i32 %175, 53
  br i1 %cmp325, label %cond.true.327, label %cond.false.345

cond.true.327:                                    ; preds = %land.lhs.true.321
  %176 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 0
  %rtuint330 = bitcast %union.rtunion_def* %arrayidx329 to i32*
  %177 = load i32, i32* %rtuint330, align 4
  %178 = load i32, i32* @cached_regno, align 4
  %cmp331 = icmp eq i32 %177, %178
  br i1 %cmp331, label %land.lhs.true.333, label %cond.false.336

land.lhs.true.333:                                ; preds = %cond.true.327
  %179 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool334 = icmp ne %struct.cse_reg_info* %179, null
  br i1 %tobool334, label %cond.true.335, label %cond.false.336

cond.true.335:                                    ; preds = %land.lhs.true.333
  %180 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.341

cond.false.336:                                   ; preds = %land.lhs.true.333, %cond.true.327
  %181 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i32 0, i64 0
  %rtuint339 = bitcast %union.rtunion_def* %arrayidx338 to i32*
  %182 = load i32, i32* %rtuint339, align 4
  %call340 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %182)
  br label %cond.end.341

cond.end.341:                                     ; preds = %cond.false.336, %cond.true.335
  %cond342 = phi %struct.cse_reg_info* [ %180, %cond.true.335 ], [ %call340, %cond.false.336 ]
  %reg_qty343 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond342, i32 0, i32 3
  %183 = load i32, i32* %reg_qty343, align 4
  %add344 = add i32 7808, %183
  br label %cond.end.347

cond.false.345:                                   ; preds = %land.lhs.true.321, %if.then.316
  %184 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %185 = load i32, i32* %mode.addr, align 4
  %call346 = call i32 @canon_hash(%struct.rtx_def* %184, i32 %185)
  br label %cond.end.347

cond.end.347:                                     ; preds = %cond.false.345, %cond.end.341
  %cond348 = phi i32 [ %add344, %cond.end.341 ], [ %call346, %cond.false.345 ]
  %and349 = and i32 %cond348, 31
  store i32 %and349, i32* %op0_hash, align 4
  %186 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %187 = bitcast %struct.rtx_def* %186 to i32*
  %bf.load350 = load i32, i32* %187, align 8
  %bf.clear351 = and i32 %bf.load350, 65535
  %cmp352 = icmp eq i32 %bf.clear351, 67
  br i1 %cmp352, label %if.end.423, label %lor.lhs.false.354

lor.lhs.false.354:                                ; preds = %cond.end.347
  %188 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %189 = bitcast %struct.rtx_def* %188 to i32*
  %bf.load355 = load i32, i32* %189, align 8
  %bf.clear356 = and i32 %bf.load355, 65535
  %cmp357 = icmp eq i32 %bf.clear356, 68
  br i1 %cmp357, label %if.end.423, label %lor.lhs.false.359

lor.lhs.false.359:                                ; preds = %lor.lhs.false.354
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %191 = bitcast %struct.rtx_def* %190 to i32*
  %bf.load360 = load i32, i32* %191, align 8
  %bf.clear361 = and i32 %bf.load360, 65535
  %cmp362 = icmp eq i32 %bf.clear361, 54
  br i1 %cmp362, label %if.end.423, label %lor.lhs.false.364

lor.lhs.false.364:                                ; preds = %lor.lhs.false.359
  %192 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %193 = bitcast %struct.rtx_def* %192 to i32*
  %bf.load365 = load i32, i32* %193, align 8
  %bf.clear366 = and i32 %bf.load365, 65535
  %cmp367 = icmp eq i32 %bf.clear366, 55
  br i1 %cmp367, label %if.end.423, label %lor.lhs.false.369

lor.lhs.false.369:                                ; preds = %lor.lhs.false.364
  %194 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load370 = load i32, i32* %195, align 8
  %bf.clear371 = and i32 %bf.load370, 65535
  %cmp372 = icmp eq i32 %bf.clear371, 58
  br i1 %cmp372, label %if.end.423, label %lor.lhs.false.374

lor.lhs.false.374:                                ; preds = %lor.lhs.false.369
  %196 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load375 = load i32, i32* %197, align 8
  %bf.clear376 = and i32 %bf.load375, 65535
  %cmp377 = icmp eq i32 %bf.clear376, 134
  br i1 %cmp377, label %if.end.423, label %lor.lhs.false.379

lor.lhs.false.379:                                ; preds = %lor.lhs.false.374
  %198 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %199 = bitcast %struct.rtx_def* %198 to i32*
  %bf.load380 = load i32, i32* %199, align 8
  %bf.clear381 = and i32 %bf.load380, 65535
  %cmp382 = icmp eq i32 %bf.clear381, 56
  br i1 %cmp382, label %if.end.423, label %lor.lhs.false.384

lor.lhs.false.384:                                ; preds = %lor.lhs.false.379
  %200 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %201 = bitcast %struct.rtx_def* %200 to i32*
  %bf.load385 = load i32, i32* %201, align 8
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 140
  br i1 %cmp387, label %if.end.423, label %if.then.389

if.then.389:                                      ; preds = %lor.lhs.false.384
  %202 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %203 = bitcast %struct.rtx_def* %202 to i32*
  %bf.load390 = load i32, i32* %203, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp eq i32 %bf.clear391, 61
  br i1 %cmp392, label %land.lhs.true.394, label %cond.false.418

land.lhs.true.394:                                ; preds = %if.then.389
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i32 0, i64 0
  %rtuint397 = bitcast %union.rtunion_def* %arrayidx396 to i32*
  %205 = load i32, i32* %rtuint397, align 4
  %cmp398 = icmp uge i32 %205, 53
  br i1 %cmp398, label %cond.true.400, label %cond.false.418

cond.true.400:                                    ; preds = %land.lhs.true.394
  %206 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1
  %arrayidx402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld401, i32 0, i64 0
  %rtuint403 = bitcast %union.rtunion_def* %arrayidx402 to i32*
  %207 = load i32, i32* %rtuint403, align 4
  %208 = load i32, i32* @cached_regno, align 4
  %cmp404 = icmp eq i32 %207, %208
  br i1 %cmp404, label %land.lhs.true.406, label %cond.false.409

land.lhs.true.406:                                ; preds = %cond.true.400
  %209 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool407 = icmp ne %struct.cse_reg_info* %209, null
  br i1 %tobool407, label %cond.true.408, label %cond.false.409

cond.true.408:                                    ; preds = %land.lhs.true.406
  %210 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.414

cond.false.409:                                   ; preds = %land.lhs.true.406, %cond.true.400
  %211 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i32 0, i64 0
  %rtuint412 = bitcast %union.rtunion_def* %arrayidx411 to i32*
  %212 = load i32, i32* %rtuint412, align 4
  %call413 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %212)
  br label %cond.end.414

cond.end.414:                                     ; preds = %cond.false.409, %cond.true.408
  %cond415 = phi %struct.cse_reg_info* [ %210, %cond.true.408 ], [ %call413, %cond.false.409 ]
  %reg_qty416 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond415, i32 0, i32 3
  %213 = load i32, i32* %reg_qty416, align 4
  %add417 = add i32 7808, %213
  br label %cond.end.420

cond.false.418:                                   ; preds = %land.lhs.true.394, %if.then.389
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %215 = load i32, i32* %mode.addr, align 4
  %call419 = call i32 @canon_hash(%struct.rtx_def* %214, i32 %215)
  br label %cond.end.420

cond.end.420:                                     ; preds = %cond.false.418, %cond.end.414
  %cond421 = phi i32 [ %add417, %cond.end.414 ], [ %call419, %cond.false.418 ]
  %and422 = and i32 %cond421, 31
  store i32 %and422, i32* %op1_hash, align 4
  br label %if.end.423

if.end.423:                                       ; preds = %cond.end.420, %lor.lhs.false.384, %lor.lhs.false.379, %lor.lhs.false.374, %lor.lhs.false.369, %lor.lhs.false.364, %lor.lhs.false.359, %lor.lhs.false.354, %cond.end.347
  br label %if.end.424

if.end.424:                                       ; preds = %if.end.423, %if.then.313
  %216 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %217 = load i32, i32* %op0_hash, align 4
  %218 = load i32, i32* %mode.addr, align 4
  %call425 = call %struct.table_elt* @insert(%struct.rtx_def* %216, %struct.table_elt* null, i32 %217, i32 %218)
  store %struct.table_elt* %call425, %struct.table_elt** %op0_elt, align 8
  %219 = load i32, i32* %op0_in_memory, align 4
  %conv426 = trunc i32 %219 to i8
  %220 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %220, i32 0, i32 11
  store i8 %conv426, i8* %in_memory, align 1
  br label %if.end.427

if.end.427:                                       ; preds = %if.end.424, %if.end.310
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i32 0, i64 0
  %rtuint430 = bitcast %union.rtunion_def* %arrayidx429 to i32*
  %222 = load i32, i32* %rtuint430, align 4
  %223 = load i32, i32* @cached_regno, align 4
  %cmp431 = icmp eq i32 %222, %223
  br i1 %cmp431, label %land.lhs.true.433, label %cond.false.436

land.lhs.true.433:                                ; preds = %if.end.427
  %224 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool434 = icmp ne %struct.cse_reg_info* %224, null
  br i1 %tobool434, label %cond.true.435, label %cond.false.436

cond.true.435:                                    ; preds = %land.lhs.true.433
  %225 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.441

cond.false.436:                                   ; preds = %land.lhs.true.433, %if.end.427
  %226 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1
  %arrayidx438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld437, i32 0, i64 0
  %rtuint439 = bitcast %union.rtunion_def* %arrayidx438 to i32*
  %227 = load i32, i32* %rtuint439, align 4
  %call440 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %227)
  br label %cond.end.441

cond.end.441:                                     ; preds = %cond.false.436, %cond.true.435
  %cond442 = phi %struct.cse_reg_info* [ %225, %cond.true.435 ], [ %call440, %cond.false.436 ]
  %reg_qty443 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond442, i32 0, i32 3
  %228 = load i32, i32* %reg_qty443, align 4
  store i32 %228, i32* %qty, align 4
  %229 = load i32, i32* %qty, align 4
  %idxprom444 = sext i32 %229 to i64
  %230 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx445 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %230, i64 %idxprom444
  store %struct.qty_table_elem* %arrayidx445, %struct.qty_table_elem** %ent, align 8
  %231 = load i32, i32* %code.addr, align 4
  %232 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %232, i32 0, i32 7
  store i32 %231, i32* %comparison_code, align 4
  %233 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %234 = bitcast %struct.rtx_def* %233 to i32*
  %bf.load446 = load i32, i32* %234, align 8
  %bf.clear447 = and i32 %bf.load446, 65535
  %cmp448 = icmp eq i32 %bf.clear447, 61
  br i1 %cmp448, label %if.then.450, label %if.else

if.then.450:                                      ; preds = %cond.end.441
  %235 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %236 = load i32, i32* %op1_hash, align 4
  %237 = load i32, i32* %mode.addr, align 4
  %call451 = call %struct.table_elt* @lookup(%struct.rtx_def* %235, i32 %236, i32 %237)
  store %struct.table_elt* %call451, %struct.table_elt** %op1_elt, align 8
  %238 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %cmp452 = icmp eq %struct.table_elt* %238, null
  br i1 %cmp452, label %if.then.454, label %if.end.495

if.then.454:                                      ; preds = %if.then.450
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call455 = call i32 @insert_regs(%struct.rtx_def* %239, %struct.table_elt* null, i32 0)
  %tobool456 = icmp ne i32 %call455, 0
  br i1 %tobool456, label %if.then.457, label %if.end.491

if.then.457:                                      ; preds = %if.then.454
  %240 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  call void @rehash_using_reg(%struct.rtx_def* %240)
  %241 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %242 = bitcast %struct.rtx_def* %241 to i32*
  %bf.load458 = load i32, i32* %242, align 8
  %bf.clear459 = and i32 %bf.load458, 65535
  %cmp460 = icmp eq i32 %bf.clear459, 61
  br i1 %cmp460, label %land.lhs.true.462, label %cond.false.486

land.lhs.true.462:                                ; preds = %if.then.457
  %243 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %arrayidx464 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld463, i32 0, i64 0
  %rtuint465 = bitcast %union.rtunion_def* %arrayidx464 to i32*
  %244 = load i32, i32* %rtuint465, align 4
  %cmp466 = icmp uge i32 %244, 53
  br i1 %cmp466, label %cond.true.468, label %cond.false.486

cond.true.468:                                    ; preds = %land.lhs.true.462
  %245 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld469 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1
  %arrayidx470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld469, i32 0, i64 0
  %rtuint471 = bitcast %union.rtunion_def* %arrayidx470 to i32*
  %246 = load i32, i32* %rtuint471, align 4
  %247 = load i32, i32* @cached_regno, align 4
  %cmp472 = icmp eq i32 %246, %247
  br i1 %cmp472, label %land.lhs.true.474, label %cond.false.477

land.lhs.true.474:                                ; preds = %cond.true.468
  %248 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool475 = icmp ne %struct.cse_reg_info* %248, null
  br i1 %tobool475, label %cond.true.476, label %cond.false.477

cond.true.476:                                    ; preds = %land.lhs.true.474
  %249 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.482

cond.false.477:                                   ; preds = %land.lhs.true.474, %cond.true.468
  %250 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1
  %arrayidx479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld478, i32 0, i64 0
  %rtuint480 = bitcast %union.rtunion_def* %arrayidx479 to i32*
  %251 = load i32, i32* %rtuint480, align 4
  %call481 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %251)
  br label %cond.end.482

cond.end.482:                                     ; preds = %cond.false.477, %cond.true.476
  %cond483 = phi %struct.cse_reg_info* [ %249, %cond.true.476 ], [ %call481, %cond.false.477 ]
  %reg_qty484 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond483, i32 0, i32 3
  %252 = load i32, i32* %reg_qty484, align 4
  %add485 = add i32 7808, %252
  br label %cond.end.488

cond.false.486:                                   ; preds = %land.lhs.true.462, %if.then.457
  %253 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %254 = load i32, i32* %mode.addr, align 4
  %call487 = call i32 @canon_hash(%struct.rtx_def* %253, i32 %254)
  br label %cond.end.488

cond.end.488:                                     ; preds = %cond.false.486, %cond.end.482
  %cond489 = phi i32 [ %add485, %cond.end.482 ], [ %call487, %cond.false.486 ]
  %and490 = and i32 %cond489, 31
  store i32 %and490, i32* %op1_hash, align 4
  br label %if.end.491

if.end.491:                                       ; preds = %cond.end.488, %if.then.454
  %255 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %256 = load i32, i32* %op1_hash, align 4
  %257 = load i32, i32* %mode.addr, align 4
  %call492 = call %struct.table_elt* @insert(%struct.rtx_def* %255, %struct.table_elt* null, i32 %256, i32 %257)
  store %struct.table_elt* %call492, %struct.table_elt** %op1_elt, align 8
  %258 = load i32, i32* %op1_in_memory, align 4
  %conv493 = trunc i32 %258 to i8
  %259 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %in_memory494 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %259, i32 0, i32 11
  store i8 %conv493, i8* %in_memory494, align 1
  br label %if.end.495

if.end.495:                                       ; preds = %if.end.491, %if.then.450
  %260 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_const = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %260, i32 0, i32 2
  store %struct.rtx_def* null, %struct.rtx_def** %comparison_const, align 8
  %261 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1
  %arrayidx497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld496, i32 0, i64 0
  %rtuint498 = bitcast %union.rtunion_def* %arrayidx497 to i32*
  %262 = load i32, i32* %rtuint498, align 4
  %263 = load i32, i32* @cached_regno, align 4
  %cmp499 = icmp eq i32 %262, %263
  br i1 %cmp499, label %land.lhs.true.501, label %cond.false.504

land.lhs.true.501:                                ; preds = %if.end.495
  %264 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool502 = icmp ne %struct.cse_reg_info* %264, null
  br i1 %tobool502, label %cond.true.503, label %cond.false.504

cond.true.503:                                    ; preds = %land.lhs.true.501
  %265 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.509

cond.false.504:                                   ; preds = %land.lhs.true.501, %if.end.495
  %266 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld505 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1
  %arrayidx506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld505, i32 0, i64 0
  %rtuint507 = bitcast %union.rtunion_def* %arrayidx506 to i32*
  %267 = load i32, i32* %rtuint507, align 4
  %call508 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %267)
  br label %cond.end.509

cond.end.509:                                     ; preds = %cond.false.504, %cond.true.503
  %cond510 = phi %struct.cse_reg_info* [ %265, %cond.true.503 ], [ %call508, %cond.false.504 ]
  %reg_qty511 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond510, i32 0, i32 3
  %268 = load i32, i32* %reg_qty511, align 4
  %269 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_qty = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %269, i32 0, i32 3
  store i32 %268, i32* %comparison_qty, align 4
  br label %if.end.514

if.else:                                          ; preds = %cond.end.441
  %270 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %271 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_const512 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %271, i32 0, i32 2
  store %struct.rtx_def* %270, %struct.rtx_def** %comparison_const512, align 8
  %272 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_qty513 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %272, i32 0, i32 3
  store i32 -1, i32* %comparison_qty513, align 4
  br label %if.end.514

if.end.514:                                       ; preds = %if.else, %cond.end.509
  br label %return

if.end.515:                                       ; preds = %lor.lhs.false.269
  %273 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %cmp516 = icmp eq %struct.table_elt* %273, null
  br i1 %cmp516, label %if.then.518, label %if.end.559

if.then.518:                                      ; preds = %if.end.515
  %274 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %call519 = call i32 @insert_regs(%struct.rtx_def* %274, %struct.table_elt* null, i32 0)
  %tobool520 = icmp ne i32 %call519, 0
  br i1 %tobool520, label %if.then.521, label %if.end.555

if.then.521:                                      ; preds = %if.then.518
  %275 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  call void @rehash_using_reg(%struct.rtx_def* %275)
  %276 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %277 = bitcast %struct.rtx_def* %276 to i32*
  %bf.load522 = load i32, i32* %277, align 8
  %bf.clear523 = and i32 %bf.load522, 65535
  %cmp524 = icmp eq i32 %bf.clear523, 61
  br i1 %cmp524, label %land.lhs.true.526, label %cond.false.550

land.lhs.true.526:                                ; preds = %if.then.521
  %278 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1
  %arrayidx528 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld527, i32 0, i64 0
  %rtuint529 = bitcast %union.rtunion_def* %arrayidx528 to i32*
  %279 = load i32, i32* %rtuint529, align 4
  %cmp530 = icmp uge i32 %279, 53
  br i1 %cmp530, label %cond.true.532, label %cond.false.550

cond.true.532:                                    ; preds = %land.lhs.true.526
  %280 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1
  %arrayidx534 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld533, i32 0, i64 0
  %rtuint535 = bitcast %union.rtunion_def* %arrayidx534 to i32*
  %281 = load i32, i32* %rtuint535, align 4
  %282 = load i32, i32* @cached_regno, align 4
  %cmp536 = icmp eq i32 %281, %282
  br i1 %cmp536, label %land.lhs.true.538, label %cond.false.541

land.lhs.true.538:                                ; preds = %cond.true.532
  %283 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool539 = icmp ne %struct.cse_reg_info* %283, null
  br i1 %tobool539, label %cond.true.540, label %cond.false.541

cond.true.540:                                    ; preds = %land.lhs.true.538
  %284 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.546

cond.false.541:                                   ; preds = %land.lhs.true.538, %cond.true.532
  %285 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %fld542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %285, i32 0, i32 1
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i32 0, i64 0
  %rtuint544 = bitcast %union.rtunion_def* %arrayidx543 to i32*
  %286 = load i32, i32* %rtuint544, align 4
  %call545 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %286)
  br label %cond.end.546

cond.end.546:                                     ; preds = %cond.false.541, %cond.true.540
  %cond547 = phi %struct.cse_reg_info* [ %284, %cond.true.540 ], [ %call545, %cond.false.541 ]
  %reg_qty548 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond547, i32 0, i32 3
  %287 = load i32, i32* %reg_qty548, align 4
  %add549 = add i32 7808, %287
  br label %cond.end.552

cond.false.550:                                   ; preds = %land.lhs.true.526, %if.then.521
  %288 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %289 = load i32, i32* %mode.addr, align 4
  %call551 = call i32 @canon_hash(%struct.rtx_def* %288, i32 %289)
  br label %cond.end.552

cond.end.552:                                     ; preds = %cond.false.550, %cond.end.546
  %cond553 = phi i32 [ %add549, %cond.end.546 ], [ %call551, %cond.false.550 ]
  %and554 = and i32 %cond553, 31
  store i32 %and554, i32* %op0_hash, align 4
  br label %if.end.555

if.end.555:                                       ; preds = %cond.end.552, %if.then.518
  %290 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8
  %291 = load i32, i32* %op0_hash, align 4
  %292 = load i32, i32* %mode.addr, align 4
  %call556 = call %struct.table_elt* @insert(%struct.rtx_def* %290, %struct.table_elt* null, i32 %291, i32 %292)
  store %struct.table_elt* %call556, %struct.table_elt** %op0_elt, align 8
  %293 = load i32, i32* %op0_in_memory, align 4
  %conv557 = trunc i32 %293 to i8
  %294 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %in_memory558 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %294, i32 0, i32 11
  store i8 %conv557, i8* %in_memory558, align 1
  br label %if.end.559

if.end.559:                                       ; preds = %if.end.555, %if.end.515
  %295 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %cmp560 = icmp eq %struct.table_elt* %295, null
  br i1 %cmp560, label %if.then.562, label %if.end.603

if.then.562:                                      ; preds = %if.end.559
  %296 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %call563 = call i32 @insert_regs(%struct.rtx_def* %296, %struct.table_elt* null, i32 0)
  %tobool564 = icmp ne i32 %call563, 0
  br i1 %tobool564, label %if.then.565, label %if.end.599

if.then.565:                                      ; preds = %if.then.562
  %297 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  call void @rehash_using_reg(%struct.rtx_def* %297)
  %298 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %299 = bitcast %struct.rtx_def* %298 to i32*
  %bf.load566 = load i32, i32* %299, align 8
  %bf.clear567 = and i32 %bf.load566, 65535
  %cmp568 = icmp eq i32 %bf.clear567, 61
  br i1 %cmp568, label %land.lhs.true.570, label %cond.false.594

land.lhs.true.570:                                ; preds = %if.then.565
  %300 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i32 0, i64 0
  %rtuint573 = bitcast %union.rtunion_def* %arrayidx572 to i32*
  %301 = load i32, i32* %rtuint573, align 4
  %cmp574 = icmp uge i32 %301, 53
  br i1 %cmp574, label %cond.true.576, label %cond.false.594

cond.true.576:                                    ; preds = %land.lhs.true.570
  %302 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i32 0, i64 0
  %rtuint579 = bitcast %union.rtunion_def* %arrayidx578 to i32*
  %303 = load i32, i32* %rtuint579, align 4
  %304 = load i32, i32* @cached_regno, align 4
  %cmp580 = icmp eq i32 %303, %304
  br i1 %cmp580, label %land.lhs.true.582, label %cond.false.585

land.lhs.true.582:                                ; preds = %cond.true.576
  %305 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool583 = icmp ne %struct.cse_reg_info* %305, null
  br i1 %tobool583, label %cond.true.584, label %cond.false.585

cond.true.584:                                    ; preds = %land.lhs.true.582
  %306 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.590

cond.false.585:                                   ; preds = %land.lhs.true.582, %cond.true.576
  %307 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %fld586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1
  %arrayidx587 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld586, i32 0, i64 0
  %rtuint588 = bitcast %union.rtunion_def* %arrayidx587 to i32*
  %308 = load i32, i32* %rtuint588, align 4
  %call589 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %308)
  br label %cond.end.590

cond.end.590:                                     ; preds = %cond.false.585, %cond.true.584
  %cond591 = phi %struct.cse_reg_info* [ %306, %cond.true.584 ], [ %call589, %cond.false.585 ]
  %reg_qty592 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond591, i32 0, i32 3
  %309 = load i32, i32* %reg_qty592, align 4
  %add593 = add i32 7808, %309
  br label %cond.end.596

cond.false.594:                                   ; preds = %land.lhs.true.570, %if.then.565
  %310 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %311 = load i32, i32* %mode.addr, align 4
  %call595 = call i32 @canon_hash(%struct.rtx_def* %310, i32 %311)
  br label %cond.end.596

cond.end.596:                                     ; preds = %cond.false.594, %cond.end.590
  %cond597 = phi i32 [ %add593, %cond.end.590 ], [ %call595, %cond.false.594 ]
  %and598 = and i32 %cond597, 31
  store i32 %and598, i32* %op1_hash, align 4
  br label %if.end.599

if.end.599:                                       ; preds = %cond.end.596, %if.then.562
  %312 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8
  %313 = load i32, i32* %op1_hash, align 4
  %314 = load i32, i32* %mode.addr, align 4
  %call600 = call %struct.table_elt* @insert(%struct.rtx_def* %312, %struct.table_elt* null, i32 %313, i32 %314)
  store %struct.table_elt* %call600, %struct.table_elt** %op1_elt, align 8
  %315 = load i32, i32* %op1_in_memory, align 4
  %conv601 = trunc i32 %315 to i8
  %316 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  %in_memory602 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %316, i32 0, i32 11
  store i8 %conv601, i8* %in_memory602, align 1
  br label %if.end.603

if.end.603:                                       ; preds = %if.end.599, %if.end.559
  %317 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  %318 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8
  call void @merge_equiv_classes(%struct.table_elt* %317, %struct.table_elt* %318)
  %319 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8
  store %struct.table_elt* %319, %struct.table_elt** @last_jump_equiv_class, align 8
  br label %return

return:                                           ; preds = %if.end.603, %if.end.514, %if.then.309, %if.then.249, %if.then.231, %if.then.195
  ret void
}

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %x, i32 %code) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @safe_hash(%struct.rtx_def* %1, i32 0)
  %and = and i32 %call, 31
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call1 = call %struct.table_elt* @lookup(%struct.rtx_def* %0, i32 %and, i32 %bf.clear)
  store %struct.table_elt* %call1, %struct.table_elt** %p, align 8
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cmp = icmp eq %struct.table_elt* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %code.addr, align 4
  %cmp2 = icmp eq i32 %5, 54
  br i1 %cmp2, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load4 = load i32, i32* %7, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %idxprom = sext i32 %bf.clear6 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %8 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %8 to i32
  %9 = load i32, i32* @word_mode, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom7
  %10 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %10 to i32
  %cmp10 = icmp slt i32 %conv, %conv9
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.3
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call12 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %11)
  store %struct.rtx_def* %call12, %struct.rtx_def** %x.addr, align 8
  %12 = load i32, i32* @word_mode, align 4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load13 = load i32, i32* %14, align 8
  %bf.value = and i32 %12, 255
  %bf.shl = shl i32 %bf.value, 16
  %bf.clear14 = and i32 %bf.load13, -16711681
  %bf.set = or i32 %bf.clear14, %bf.shl
  store i32 %bf.set, i32* %14, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call15 = call i32 @safe_hash(%struct.rtx_def* %16, i32 0)
  %and16 = and i32 %call15, 31
  %17 = load i32, i32* @word_mode, align 4
  %call17 = call %struct.table_elt* @lookup(%struct.rtx_def* %15, i32 %and16, i32 %17)
  store %struct.table_elt* %call17, %struct.table_elt** %p, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.3, %land.lhs.true, %entry
  %18 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cmp18 = icmp eq %struct.table_elt* %18, null
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.21:                                        ; preds = %if.end
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 6
  %20 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %20, %struct.table_elt** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.21
  %21 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %21, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %22, i32 0, i32 0
  %23 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load22 = load i32, i32* %24, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %25 = load i32, i32* %code.addr, align 4
  %cmp24 = icmp eq i32 %bf.clear23, %25
  br i1 %cmp24, label %land.lhs.true.26, label %if.end.33

land.lhs.true.26:                                 ; preds = %for.body
  %26 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp27 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 0
  %27 = load %struct.rtx_def*, %struct.rtx_def** %exp27, align 8
  %28 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp28 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %28, i32 0, i32 0
  %29 = load %struct.rtx_def*, %struct.rtx_def** %exp28, align 8
  %call29 = call i32 @exp_equiv_p(%struct.rtx_def* %27, %struct.rtx_def* %29, i32 1, i32 0)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %land.lhs.true.26
  %30 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp32 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %30, i32 0, i32 0
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp32, align 8
  store %struct.rtx_def* %31, %struct.rtx_def** %retval
  br label %return

if.end.33:                                        ; preds = %land.lhs.true.26, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.33
  %32 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %32, i32 0, i32 4
  %33 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %33, %struct.table_elt** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.31, %if.then.20
  %34 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %34
}

; Function Attrs: nounwind uwtable
define internal %struct.table_elt* @lookup(%struct.rtx_def* %x, i32 %hash, i32 %mode) #0 {
entry:
  %retval = alloca %struct.table_elt*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %hash, i32* %hash.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* %hash.addr, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %1 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %1, %struct.table_elt** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %mode.addr, align 4
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %mode1 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 10
  %5 = load i32, i32* %mode1, align 4
  %cmp = icmp eq i32 %3, %5
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %cmp2 = icmp eq %struct.rtx_def* %6, %8
  br i1 %cmp2, label %land.lhs.true.3, label %lor.lhs.false

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load = load i32, i32* %10, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3, %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %12 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp5 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 0
  %13 = load %struct.rtx_def*, %struct.rtx_def** %exp5, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load6 = load i32, i32* %15, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp ne i32 %bf.clear7, 61
  %conv = zext i1 %cmp8 to i32
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %11, %struct.rtx_def* %13, i32 %conv, i32 0)
  %tobool9 = icmp ne i32 %call, 0
  br i1 %tobool9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true.3
  %16 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  store %struct.table_elt* %16, %struct.table_elt** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %17, i32 0, i32 2
  %18 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %18, %struct.table_elt** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.table_elt* null, %struct.table_elt** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %19 = load %struct.table_elt*, %struct.table_elt** %retval
  ret %struct.table_elt* %19
}

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @equiv_constant(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %elt = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end.32

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  %4 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %3, %4
  br i1 %cmp1, label %land.lhs.true.2, label %cond.false

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.2
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.2, %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %8 = load i32, i32* %rtuint5, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %6, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %9 = load i32, i32* %reg_qty, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtuint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %11 = load i32, i32* %rtuint8, align 4
  %cmp9 = icmp ne i32 %9, %11
  br i1 %cmp9, label %if.then, label %if.end.32

if.then:                                          ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtuint12 = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %13 = load i32, i32* %rtuint12, align 4
  %14 = load i32, i32* @cached_regno, align 4
  %cmp13 = icmp eq i32 %13, %14
  br i1 %cmp13, label %land.lhs.true.14, label %cond.false.17

land.lhs.true.14:                                 ; preds = %if.then
  %15 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool15 = icmp ne %struct.cse_reg_info* %15, null
  br i1 %tobool15, label %cond.true.16, label %cond.false.17

cond.true.16:                                     ; preds = %land.lhs.true.14
  %16 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.22

cond.false.17:                                    ; preds = %land.lhs.true.14, %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %18 = load i32, i32* %rtuint20, align 4
  %call21 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %18)
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.17, %cond.true.16
  %cond23 = phi %struct.cse_reg_info* [ %16, %cond.true.16 ], [ %call21, %cond.false.17 ]
  %reg_qty24 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond23, i32 0, i32 3
  %19 = load i32, i32* %reg_qty24, align 4
  store i32 %19, i32* %x_q, align 4
  %20 = load i32, i32* %x_q, align 4
  %idxprom = sext i32 %20 to i64
  %21 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx25 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %21, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx25, %struct.qty_table_elem** %x_ent, align 8
  %22 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %22, i32 0, i32 0
  %23 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8
  %tobool26 = icmp ne %struct.rtx_def* %23, null
  br i1 %tobool26, label %if.then.27, label %if.end

if.then.27:                                       ; preds = %cond.end.22
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load28 = load i32, i32* %25, align 8
  %bf.lshr = lshr i32 %bf.load28, 16
  %bf.clear29 = and i32 %bf.lshr, 255
  %26 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_rtx30 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %26, i32 0, i32 0
  %27 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx30, align 8
  %call31 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %bf.clear29, %struct.rtx_def* %27)
  store %struct.rtx_def* %call31, %struct.rtx_def** %x.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.27, %cond.end.22
  br label %if.end.32

if.end.32:                                        ; preds = %if.end, %cond.end, %entry
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp33 = icmp eq %struct.rtx_def* %28, null
  br i1 %cmp33, label %if.then.65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.32
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load34 = load i32, i32* %30, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 67
  br i1 %cmp36, label %if.then.65, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load38 = load i32, i32* %32, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 68
  br i1 %cmp40, label %if.then.65, label %lor.lhs.false.41

lor.lhs.false.41:                                 ; preds = %lor.lhs.false.37
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load42 = load i32, i32* %34, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 54
  br i1 %cmp44, label %if.then.65, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %lor.lhs.false.41
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load46 = load i32, i32* %36, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 55
  br i1 %cmp48, label %if.then.65, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %lor.lhs.false.45
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load50 = load i32, i32* %38, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 58
  br i1 %cmp52, label %if.then.65, label %lor.lhs.false.53

lor.lhs.false.53:                                 ; preds = %lor.lhs.false.49
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load54 = load i32, i32* %40, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 134
  br i1 %cmp56, label %if.then.65, label %lor.lhs.false.57

lor.lhs.false.57:                                 ; preds = %lor.lhs.false.53
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load58 = load i32, i32* %42, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 56
  br i1 %cmp60, label %if.then.65, label %lor.lhs.false.61

lor.lhs.false.61:                                 ; preds = %lor.lhs.false.57
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load62 = load i32, i32* %44, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 140
  br i1 %cmp64, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %lor.lhs.false.61, %lor.lhs.false.57, %lor.lhs.false.53, %lor.lhs.false.49, %lor.lhs.false.45, %lor.lhs.false.41, %lor.lhs.false.37, %lor.lhs.false, %if.end.32
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %45, %struct.rtx_def** %retval
  br label %return

if.end.66:                                        ; preds = %lor.lhs.false.61
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load67 = load i32, i32* %47, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 66
  br i1 %cmp69, label %if.then.70, label %if.end.168

if.then.70:                                       ; preds = %if.end.66
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call71 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %48, %struct.rtx_def* null)
  store %struct.rtx_def* %call71, %struct.rtx_def** %x.addr, align 8
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %50 = bitcast %struct.rtx_def* %49 to i32*
  %bf.load72 = load i32, i32* %50, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 67
  br i1 %cmp74, label %if.then.103, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %if.then.70
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load76 = load i32, i32* %52, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 68
  br i1 %cmp78, label %if.then.103, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %lor.lhs.false.75
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load80 = load i32, i32* %54, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 54
  br i1 %cmp82, label %if.then.103, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.79
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load84 = load i32, i32* %56, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  %cmp86 = icmp eq i32 %bf.clear85, 55
  br i1 %cmp86, label %if.then.103, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.83
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load88 = load i32, i32* %58, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 58
  br i1 %cmp90, label %if.then.103, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %lor.lhs.false.87
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load92 = load i32, i32* %60, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 134
  br i1 %cmp94, label %if.then.103, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %lor.lhs.false.91
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load96 = load i32, i32* %62, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 56
  br i1 %cmp98, label %if.then.103, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %lor.lhs.false.95
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load100 = load i32, i32* %64, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 140
  br i1 %cmp102, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %lor.lhs.false.99, %lor.lhs.false.95, %lor.lhs.false.91, %lor.lhs.false.87, %lor.lhs.false.83, %lor.lhs.false.79, %lor.lhs.false.75, %if.then.70
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %65, %struct.rtx_def** %retval
  br label %return

if.end.104:                                       ; preds = %lor.lhs.false.99
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load105 = load i32, i32* %69, align 8
  %bf.lshr106 = lshr i32 %bf.load105, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %call108 = call i32 @safe_hash(%struct.rtx_def* %67, i32 %bf.clear107)
  %and = and i32 %call108, 31
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load109 = load i32, i32* %71, align 8
  %bf.lshr110 = lshr i32 %bf.load109, 16
  %bf.clear111 = and i32 %bf.lshr110, 255
  %call112 = call %struct.table_elt* @lookup(%struct.rtx_def* %66, i32 %and, i32 %bf.clear111)
  store %struct.table_elt* %call112, %struct.table_elt** %elt, align 8
  %72 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cmp113 = icmp eq %struct.table_elt* %72, null
  br i1 %cmp113, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %if.end.104
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.115:                                       ; preds = %if.end.104
  %73 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %73, i32 0, i32 6
  %74 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %74, %struct.table_elt** %elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.115
  %75 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool116 = icmp ne %struct.table_elt* %75, null
  br i1 %tobool116, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %76 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %76, i32 0, i32 12
  %77 = load i8, i8* %is_const, align 1
  %conv = sext i8 %77 to i32
  %tobool117 = icmp ne i32 %conv, 0
  br i1 %tobool117, label %land.lhs.true.118, label %if.end.167

land.lhs.true.118:                                ; preds = %for.body
  %78 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %78, i32 0, i32 0
  %79 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load119 = load i32, i32* %80, align 8
  %bf.clear120 = and i32 %bf.load119, 65535
  %cmp121 = icmp eq i32 %bf.clear120, 67
  br i1 %cmp121, label %if.then.165, label %lor.lhs.false.123

lor.lhs.false.123:                                ; preds = %land.lhs.true.118
  %81 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp124 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %81, i32 0, i32 0
  %82 = load %struct.rtx_def*, %struct.rtx_def** %exp124, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load125 = load i32, i32* %83, align 8
  %bf.clear126 = and i32 %bf.load125, 65535
  %cmp127 = icmp eq i32 %bf.clear126, 68
  br i1 %cmp127, label %if.then.165, label %lor.lhs.false.129

lor.lhs.false.129:                                ; preds = %lor.lhs.false.123
  %84 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp130 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %84, i32 0, i32 0
  %85 = load %struct.rtx_def*, %struct.rtx_def** %exp130, align 8
  %86 = bitcast %struct.rtx_def* %85 to i32*
  %bf.load131 = load i32, i32* %86, align 8
  %bf.clear132 = and i32 %bf.load131, 65535
  %cmp133 = icmp eq i32 %bf.clear132, 54
  br i1 %cmp133, label %if.then.165, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.129
  %87 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp136 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %87, i32 0, i32 0
  %88 = load %struct.rtx_def*, %struct.rtx_def** %exp136, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load137 = load i32, i32* %89, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 55
  br i1 %cmp139, label %if.then.165, label %lor.lhs.false.141

lor.lhs.false.141:                                ; preds = %lor.lhs.false.135
  %90 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp142 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %90, i32 0, i32 0
  %91 = load %struct.rtx_def*, %struct.rtx_def** %exp142, align 8
  %92 = bitcast %struct.rtx_def* %91 to i32*
  %bf.load143 = load i32, i32* %92, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 58
  br i1 %cmp145, label %if.then.165, label %lor.lhs.false.147

lor.lhs.false.147:                                ; preds = %lor.lhs.false.141
  %93 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp148 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %93, i32 0, i32 0
  %94 = load %struct.rtx_def*, %struct.rtx_def** %exp148, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load149 = load i32, i32* %95, align 8
  %bf.clear150 = and i32 %bf.load149, 65535
  %cmp151 = icmp eq i32 %bf.clear150, 134
  br i1 %cmp151, label %if.then.165, label %lor.lhs.false.153

lor.lhs.false.153:                                ; preds = %lor.lhs.false.147
  %96 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp154 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %96, i32 0, i32 0
  %97 = load %struct.rtx_def*, %struct.rtx_def** %exp154, align 8
  %98 = bitcast %struct.rtx_def* %97 to i32*
  %bf.load155 = load i32, i32* %98, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp eq i32 %bf.clear156, 56
  br i1 %cmp157, label %if.then.165, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %lor.lhs.false.153
  %99 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp160 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %99, i32 0, i32 0
  %100 = load %struct.rtx_def*, %struct.rtx_def** %exp160, align 8
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load161 = load i32, i32* %101, align 8
  %bf.clear162 = and i32 %bf.load161, 65535
  %cmp163 = icmp eq i32 %bf.clear162, 140
  br i1 %cmp163, label %if.then.165, label %if.end.167

if.then.165:                                      ; preds = %lor.lhs.false.159, %lor.lhs.false.153, %lor.lhs.false.147, %lor.lhs.false.141, %lor.lhs.false.135, %lor.lhs.false.129, %lor.lhs.false.123, %land.lhs.true.118
  %102 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp166 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %102, i32 0, i32 0
  %103 = load %struct.rtx_def*, %struct.rtx_def** %exp166, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %retval
  br label %return

if.end.167:                                       ; preds = %lor.lhs.false.159, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.167
  %104 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %104, i32 0, i32 4
  %105 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %105, %struct.table_elt** %elt, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.168

if.end.168:                                       ; preds = %for.end, %if.end.66
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.168, %if.then.165, %if.then.114, %if.then.103, %if.then.65
  %106 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %106
}

declare %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare i32 @subreg_lowpart_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @find_best_addr(%struct.rtx_def* %insn, %struct.rtx_def** %loc, i32 %mode) #0 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %mode.addr = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.table_elt*, align 8
  %found_better = alloca i32, align 4
  %save_do_not_record = alloca i32, align 4
  %save_hash_arg_in_memory = alloca i32, align 4
  %addr_volatile = alloca i32, align 4
  %regno = alloca i32, align 4
  %hash = alloca i32, align 4
  %folded = alloca %struct.rtx_def*, align 8
  %addr_folded_cost = alloca i32, align 4
  %addr_cost = alloca i32, align 4
  %best_addr_cost = alloca i32, align 4
  %best_rtx_cost = alloca i32, align 4
  %exp_cost = alloca i32, align 4
  %best_elt = alloca %struct.table_elt*, align 8
  %c = alloca %struct.rtx_def*, align 8
  %best_addr_cost275 = alloca i32, align 4
  %best_rtx_cost277 = alloca i32, align 4
  %best_elt289 = alloca %struct.table_elt*, align 8
  %best_rtx = alloca %struct.rtx_def*, align 8
  %count = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %new_cost = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %addr, align 8
  store i32 1, i32* %found_better, align 4
  %2 = load i32, i32* @do_not_record, align 4
  store i32 %2, i32* %save_do_not_record, align 4
  %3 = load i32, i32* @hash_arg_in_memory, align 4
  store i32 %3, i32* %save_hash_arg_in_memory, align 4
  %4 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 75
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false.20

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load1 = load i32, i32* %8, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %land.lhs.true.4, label %lor.lhs.false.20

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load8 = load i32, i32* %11, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 54
  br i1 %cmp10, label %land.lhs.true.11, label %lor.lhs.false.20

land.lhs.true.11:                                 ; preds = %land.lhs.true.4
  %12 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %fld15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %14 = load i32, i32* %rtuint, align 4
  store i32 %14, i32* %regno, align 4
  %15 = load i32, i32* %regno, align 4
  %cmp17 = icmp eq i32 %15, 20
  br i1 %cmp17, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.11
  %16 = load i32, i32* %regno, align 4
  %cmp18 = icmp eq i32 %16, 6
  br i1 %cmp18, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %17 = load i32, i32* %regno, align 4
  %cmp19 = icmp eq i32 %17, 16
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.lhs.true.11
  %18 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true.11 ], [ %cmp19, %lor.rhs ]
  br i1 %18, label %if.then, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.end, %land.lhs.true.4, %land.lhs.true, %entry
  %19 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load21 = load i32, i32* %20, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 61
  br i1 %cmp23, label %land.lhs.true.24, label %lor.lhs.false.34

land.lhs.true.24:                                 ; preds = %lor.lhs.false.20
  %21 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtuint27 = bitcast %union.rtunion_def* %arrayidx26 to i32*
  %22 = load i32, i32* %rtuint27, align 4
  store i32 %22, i32* %regno, align 4
  %23 = load i32, i32* %regno, align 4
  %cmp28 = icmp eq i32 %23, 20
  br i1 %cmp28, label %lor.end.33, label %lor.lhs.false.29

lor.lhs.false.29:                                 ; preds = %land.lhs.true.24
  %24 = load i32, i32* %regno, align 4
  %cmp30 = icmp eq i32 %24, 6
  br i1 %cmp30, label %lor.end.33, label %lor.rhs.31

lor.rhs.31:                                       ; preds = %lor.lhs.false.29
  %25 = load i32, i32* %regno, align 4
  %cmp32 = icmp eq i32 %25, 16
  br label %lor.end.33

lor.end.33:                                       ; preds = %lor.rhs.31, %lor.lhs.false.29, %land.lhs.true.24
  %26 = phi i1 [ true, %lor.lhs.false.29 ], [ true, %land.lhs.true.24 ], [ %cmp32, %lor.rhs.31 ]
  br i1 %26, label %if.then, label %lor.lhs.false.34

lor.lhs.false.34:                                 ; preds = %lor.end.33, %lor.lhs.false.20
  %27 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load35 = load i32, i32* %28, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 70
  br i1 %cmp37, label %if.then, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.34
  %29 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load39 = load i32, i32* %30, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 67
  br i1 %cmp41, label %if.then, label %lor.lhs.false.42

lor.lhs.false.42:                                 ; preds = %lor.lhs.false.38
  %31 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load43 = load i32, i32* %32, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 68
  br i1 %cmp45, label %if.then, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.42
  %33 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load47 = load i32, i32* %34, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 54
  br i1 %cmp49, label %if.then, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.46
  %35 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load51 = load i32, i32* %36, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 58
  br i1 %cmp53, label %if.then, label %lor.lhs.false.54

lor.lhs.false.54:                                 ; preds = %lor.lhs.false.50
  %37 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load55 = load i32, i32* %38, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 55
  br i1 %cmp57, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.54, %lor.lhs.false.50, %lor.lhs.false.46, %lor.lhs.false.42, %lor.lhs.false.38, %lor.lhs.false.34, %lor.end.33, %lor.end
  br label %if.end.366

if.end:                                           ; preds = %lor.lhs.false.54
  %39 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load58 = load i32, i32* %40, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp ne i32 %bf.clear59, 61
  br i1 %cmp60, label %if.then.61, label %if.end.80

if.then.61:                                       ; preds = %if.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %41)
  %call62 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call, %struct.rtx_def* null)
  store %struct.rtx_def* %call62, %struct.rtx_def** %folded, align 8
  %42 = load %struct.rtx_def*, %struct.rtx_def** %folded, align 8
  %43 = load i32, i32* %mode.addr, align 4
  %call63 = call i32 @address_cost(%struct.rtx_def* %42, i32 %43)
  store i32 %call63, i32* %addr_folded_cost, align 4
  %44 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %45 = load i32, i32* %mode.addr, align 4
  %call64 = call i32 @address_cost(%struct.rtx_def* %44, i32 %45)
  store i32 %call64, i32* %addr_cost, align 4
  %46 = load i32, i32* %addr_folded_cost, align 4
  %47 = load i32, i32* %addr_cost, align 4
  %cmp65 = icmp slt i32 %46, %47
  br i1 %cmp65, label %land.lhs.true.76, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %if.then.61
  %48 = load i32, i32* %addr_folded_cost, align 4
  %49 = load i32, i32* %addr_cost, align 4
  %cmp67 = icmp eq i32 %48, %49
  br i1 %cmp67, label %land.lhs.true.68, label %if.end.79

land.lhs.true.68:                                 ; preds = %lor.lhs.false.66
  %50 = load %struct.rtx_def*, %struct.rtx_def** %folded, align 8
  %call69 = call i32 @rtx_cost(%struct.rtx_def* %50, i32 66)
  %51 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %call70 = call i32 @rtx_cost(%struct.rtx_def* %51, i32 66)
  %cmp71 = icmp sgt i32 %call69, %call70
  br i1 %cmp71, label %land.lhs.true.76, label %lor.lhs.false.72

lor.lhs.false.72:                                 ; preds = %land.lhs.true.68
  %52 = load %struct.rtx_def*, %struct.rtx_def** %folded, align 8
  %call73 = call i32 @approx_reg_cost(%struct.rtx_def* %52)
  %53 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %call74 = call i32 @approx_reg_cost(%struct.rtx_def* %53)
  %cmp75 = icmp slt i32 %call73, %call74
  br i1 %cmp75, label %land.lhs.true.76, label %if.end.79

land.lhs.true.76:                                 ; preds = %lor.lhs.false.72, %land.lhs.true.68, %if.then.61
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %55 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %56 = load %struct.rtx_def*, %struct.rtx_def** %folded, align 8
  %call77 = call i32 @validate_change(%struct.rtx_def* %54, %struct.rtx_def** %55, %struct.rtx_def* %56, i32 0)
  %tobool = icmp ne i32 %call77, 0
  br i1 %tobool, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %land.lhs.true.76
  %57 = load %struct.rtx_def*, %struct.rtx_def** %folded, align 8
  store %struct.rtx_def* %57, %struct.rtx_def** %addr, align 8
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.78, %land.lhs.true.76, %lor.lhs.false.72, %lor.lhs.false.66
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.end
  store i32 0, i32* @do_not_record, align 4
  %58 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %59 = bitcast %struct.rtx_def* %58 to i32*
  %bf.load81 = load i32, i32* %59, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 61
  br i1 %cmp83, label %land.lhs.true.84, label %cond.false.100

land.lhs.true.84:                                 ; preds = %if.end.80
  %60 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i32 0, i64 0
  %rtuint87 = bitcast %union.rtunion_def* %arrayidx86 to i32*
  %61 = load i32, i32* %rtuint87, align 4
  %cmp88 = icmp uge i32 %61, 53
  br i1 %cmp88, label %cond.true, label %cond.false.100

cond.true:                                        ; preds = %land.lhs.true.84
  %62 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 0
  %rtuint91 = bitcast %union.rtunion_def* %arrayidx90 to i32*
  %63 = load i32, i32* %rtuint91, align 4
  %64 = load i32, i32* @cached_regno, align 4
  %cmp92 = icmp eq i32 %63, %64
  br i1 %cmp92, label %land.lhs.true.93, label %cond.false

land.lhs.true.93:                                 ; preds = %cond.true
  %65 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool94 = icmp ne %struct.cse_reg_info* %65, null
  br i1 %tobool94, label %cond.true.95, label %cond.false

cond.true.95:                                     ; preds = %land.lhs.true.93
  %66 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.93, %cond.true
  %67 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %fld96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i32 0, i64 0
  %rtuint98 = bitcast %union.rtunion_def* %arrayidx97 to i32*
  %68 = load i32, i32* %rtuint98, align 4
  %call99 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %68)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.95
  %cond = phi %struct.cse_reg_info* [ %66, %cond.true.95 ], [ %call99, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %69 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %69
  br label %cond.end.104

cond.false.100:                                   ; preds = %land.lhs.true.84, %if.end.80
  %70 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %71 = load i32, i32* @target_flags, align 4
  %and = and i32 %71, 33554432
  %tobool101 = icmp ne i32 %and, 0
  %cond102 = select i1 %tobool101, i32 5, i32 4
  %call103 = call i32 @canon_hash(%struct.rtx_def* %70, i32 %cond102)
  br label %cond.end.104

cond.end.104:                                     ; preds = %cond.false.100, %cond.end
  %cond105 = phi i32 [ %add, %cond.end ], [ %call103, %cond.false.100 ]
  %and106 = and i32 %cond105, 31
  store i32 %and106, i32* %hash, align 4
  %72 = load i32, i32* @do_not_record, align 4
  store i32 %72, i32* %addr_volatile, align 4
  %73 = load i32, i32* %save_do_not_record, align 4
  store i32 %73, i32* @do_not_record, align 4
  %74 = load i32, i32* %save_hash_arg_in_memory, align 4
  store i32 %74, i32* @hash_arg_in_memory, align 4
  %75 = load i32, i32* %addr_volatile, align 4
  %tobool107 = icmp ne i32 %75, 0
  br i1 %tobool107, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %cond.end.104
  br label %if.end.366

if.end.109:                                       ; preds = %cond.end.104
  %76 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8
  %77 = load i32, i32* %hash, align 4
  %78 = load i32, i32* @target_flags, align 4
  %and110 = and i32 %78, 33554432
  %tobool111 = icmp ne i32 %and110, 0
  %cond112 = select i1 %tobool111, i32 5, i32 4
  %call113 = call %struct.table_elt* @lookup(%struct.rtx_def* %76, i32 %77, i32 %cond112)
  store %struct.table_elt* %call113, %struct.table_elt** %elt, align 8
  %79 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool114 = icmp ne %struct.table_elt* %79, null
  br i1 %tobool114, label %if.then.115, label %if.end.166

if.then.115:                                      ; preds = %if.end.109
  %80 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %80, i32 0, i32 6
  %81 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %81, %struct.table_elt** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.115
  %82 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool116 = icmp ne %struct.table_elt* %82, null
  br i1 %tobool116, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %83 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %flag = getelementptr inbounds %struct.table_elt, %struct.table_elt* %83, i32 0, i32 13
  store i8 0, i8* %flag, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %84 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %84, i32 0, i32 4
  %85 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %85, %struct.table_elt** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end.165, %for.end
  %86 = load i32, i32* %found_better, align 4
  %tobool117 = icmp ne i32 %86, 0
  br i1 %tobool117, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %87 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %88 = load %struct.rtx_def*, %struct.rtx_def** %87, align 8
  %89 = load i32, i32* %mode.addr, align 4
  %call118 = call i32 @address_cost(%struct.rtx_def* %88, i32 %89)
  store i32 %call118, i32* %best_addr_cost, align 4
  %90 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %90, i32 0, i32 8
  %91 = load i32, i32* %cost, align 4
  %add119 = add nsw i32 %91, 1
  %shr = ashr i32 %add119, 1
  store i32 %shr, i32* %best_rtx_cost, align 4
  %92 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  store %struct.table_elt* %92, %struct.table_elt** %best_elt, align 8
  store i32 0, i32* %found_better, align 4
  %93 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value120 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %93, i32 0, i32 6
  %94 = load %struct.table_elt*, %struct.table_elt** %first_same_value120, align 8
  store %struct.table_elt* %94, %struct.table_elt** %p, align 8
  br label %for.cond.121

for.cond.121:                                     ; preds = %for.inc.152, %while.body
  %95 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool122 = icmp ne %struct.table_elt* %95, null
  br i1 %tobool122, label %for.body.123, label %for.end.154

for.body.123:                                     ; preds = %for.cond.121
  %96 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %flag124 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %96, i32 0, i32 13
  %97 = load i8, i8* %flag124, align 1
  %tobool125 = icmp ne i8 %97, 0
  br i1 %tobool125, label %if.end.151, label %if.then.126

if.then.126:                                      ; preds = %for.body.123
  %98 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %98, i32 0, i32 0
  %99 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %100 = bitcast %struct.rtx_def* %99 to i32*
  %bf.load127 = load i32, i32* %100, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear128, 61
  br i1 %cmp129, label %land.lhs.true.135, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %if.then.126
  %101 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp131 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %101, i32 0, i32 0
  %102 = load %struct.rtx_def*, %struct.rtx_def** %exp131, align 8
  %103 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp132 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %103, i32 0, i32 0
  %104 = load %struct.rtx_def*, %struct.rtx_def** %exp132, align 8
  %call133 = call i32 @exp_equiv_p(%struct.rtx_def* %102, %struct.rtx_def* %104, i32 1, i32 0)
  %tobool134 = icmp ne i32 %call133, 0
  br i1 %tobool134, label %land.lhs.true.135, label %if.end.150

land.lhs.true.135:                                ; preds = %lor.lhs.false.130, %if.then.126
  %105 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp136 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %105, i32 0, i32 0
  %106 = load %struct.rtx_def*, %struct.rtx_def** %exp136, align 8
  %107 = load i32, i32* %mode.addr, align 4
  %call137 = call i32 @address_cost(%struct.rtx_def* %106, i32 %107)
  store i32 %call137, i32* %exp_cost, align 4
  %108 = load i32, i32* %best_addr_cost, align 4
  %cmp138 = icmp slt i32 %call137, %108
  br i1 %cmp138, label %if.then.146, label %lor.lhs.false.139

lor.lhs.false.139:                                ; preds = %land.lhs.true.135
  %109 = load i32, i32* %exp_cost, align 4
  %110 = load i32, i32* %best_addr_cost, align 4
  %cmp140 = icmp eq i32 %109, %110
  br i1 %cmp140, label %land.lhs.true.141, label %if.end.150

land.lhs.true.141:                                ; preds = %lor.lhs.false.139
  %111 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cost142 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %111, i32 0, i32 8
  %112 = load i32, i32* %cost142, align 4
  %add143 = add nsw i32 %112, 1
  %shr144 = ashr i32 %add143, 1
  %113 = load i32, i32* %best_rtx_cost, align 4
  %cmp145 = icmp sgt i32 %shr144, %113
  br i1 %cmp145, label %if.then.146, label %if.end.150

if.then.146:                                      ; preds = %land.lhs.true.141, %land.lhs.true.135
  store i32 1, i32* %found_better, align 4
  %114 = load i32, i32* %exp_cost, align 4
  store i32 %114, i32* %best_addr_cost, align 4
  %115 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cost147 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %115, i32 0, i32 8
  %116 = load i32, i32* %cost147, align 4
  %add148 = add nsw i32 %116, 1
  %shr149 = ashr i32 %add148, 1
  store i32 %shr149, i32* %best_rtx_cost, align 4
  %117 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  store %struct.table_elt* %117, %struct.table_elt** %best_elt, align 8
  br label %if.end.150

if.end.150:                                       ; preds = %if.then.146, %land.lhs.true.141, %lor.lhs.false.139, %lor.lhs.false.130
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150, %for.body.123
  br label %for.inc.152

for.inc.152:                                      ; preds = %if.end.151
  %118 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value153 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %118, i32 0, i32 4
  %119 = load %struct.table_elt*, %struct.table_elt** %next_same_value153, align 8
  store %struct.table_elt* %119, %struct.table_elt** %p, align 8
  br label %for.cond.121

for.end.154:                                      ; preds = %for.cond.121
  %120 = load i32, i32* %found_better, align 4
  %tobool155 = icmp ne i32 %120, 0
  br i1 %tobool155, label %if.then.156, label %if.end.165

if.then.156:                                      ; preds = %for.end.154
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %122 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %123 = load %struct.table_elt*, %struct.table_elt** %best_elt, align 8
  %exp157 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %123, i32 0, i32 0
  %124 = load %struct.rtx_def*, %struct.rtx_def** %exp157, align 8
  %call158 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %124)
  %call159 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %call158, %struct.rtx_def* null)
  %call160 = call i32 @validate_change(%struct.rtx_def* %121, %struct.rtx_def** %122, %struct.rtx_def* %call159, i32 0)
  %tobool161 = icmp ne i32 %call160, 0
  br i1 %tobool161, label %if.then.162, label %if.else

if.then.162:                                      ; preds = %if.then.156
  br label %if.end.366

if.else:                                          ; preds = %if.then.156
  %125 = load %struct.table_elt*, %struct.table_elt** %best_elt, align 8
  %flag163 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %125, i32 0, i32 13
  store i8 1, i8* %flag163, align 1
  br label %if.end.164

if.end.164:                                       ; preds = %if.else
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %for.end.154
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.166

if.end.166:                                       ; preds = %while.end, %if.end.109
  %126 = load i32, i32* @flag_expensive_optimizations, align 4
  %tobool167 = icmp ne i32 %126, 0
  br i1 %tobool167, label %land.lhs.true.168, label %if.end.366

land.lhs.true.168:                                ; preds = %if.end.166
  %127 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** %127, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load169 = load i32, i32* %129, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %idxprom = sext i32 %bf.clear170 to i64
  %arrayidx171 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %130 = load i8, i8* %arrayidx171, align 1
  %conv = sext i8 %130 to i32
  %cmp172 = icmp eq i32 %conv, 50
  br i1 %cmp172, label %land.lhs.true.182, label %lor.lhs.false.174

lor.lhs.false.174:                                ; preds = %land.lhs.true.168
  %131 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %132 = load %struct.rtx_def*, %struct.rtx_def** %131, align 8
  %133 = bitcast %struct.rtx_def* %132 to i32*
  %bf.load175 = load i32, i32* %133, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %idxprom177 = sext i32 %bf.clear176 to i64
  %arrayidx178 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom177
  %134 = load i8, i8* %arrayidx178, align 1
  %conv179 = sext i8 %134 to i32
  %cmp180 = icmp eq i32 %conv179, 99
  br i1 %cmp180, label %land.lhs.true.182, label %if.end.366

land.lhs.true.182:                                ; preds = %lor.lhs.false.174, %land.lhs.true.168
  %135 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %136 = load %struct.rtx_def*, %struct.rtx_def** %135, align 8
  %fld183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1
  %arrayidx184 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld183, i32 0, i64 0
  %rtx185 = bitcast %union.rtunion_def* %arrayidx184 to %struct.rtx_def**
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rtx185, align 8
  %138 = bitcast %struct.rtx_def* %137 to i32*
  %bf.load186 = load i32, i32* %138, align 8
  %bf.clear187 = and i32 %bf.load186, 65535
  %cmp188 = icmp eq i32 %bf.clear187, 61
  br i1 %cmp188, label %land.lhs.true.190, label %if.end.366

land.lhs.true.190:                                ; preds = %land.lhs.true.182
  %139 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %140 = load %struct.rtx_def*, %struct.rtx_def** %139, align 8
  %fld191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i32 0, i64 1
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rtx193, align 8
  %142 = bitcast %struct.rtx_def* %141 to i32*
  %bf.load194 = load i32, i32* %142, align 8
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 54
  br i1 %cmp196, label %if.then.198, label %if.end.366

if.then.198:                                      ; preds = %land.lhs.true.190
  %143 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %144 = load %struct.rtx_def*, %struct.rtx_def** %143, align 8
  %fld199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i32 0, i64 1
  %rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx201, align 8
  store %struct.rtx_def* %145, %struct.rtx_def** %c, align 8
  store i32 0, i32* @do_not_record, align 4
  %146 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %147 = load %struct.rtx_def*, %struct.rtx_def** %146, align 8
  %fld202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i32 0, i64 0
  %rtx204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rtx204, align 8
  %149 = bitcast %struct.rtx_def* %148 to i32*
  %bf.load205 = load i32, i32* %149, align 8
  %bf.clear206 = and i32 %bf.load205, 65535
  %cmp207 = icmp eq i32 %bf.clear206, 61
  br i1 %cmp207, label %land.lhs.true.209, label %cond.false.242

land.lhs.true.209:                                ; preds = %if.then.198
  %150 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %151 = load %struct.rtx_def*, %struct.rtx_def** %150, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 0
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %fld213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i32 0, i64 0
  %rtuint215 = bitcast %union.rtunion_def* %arrayidx214 to i32*
  %153 = load i32, i32* %rtuint215, align 4
  %cmp216 = icmp uge i32 %153, 53
  br i1 %cmp216, label %cond.true.218, label %cond.false.242

cond.true.218:                                    ; preds = %land.lhs.true.209
  %154 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %155 = load %struct.rtx_def*, %struct.rtx_def** %154, align 8
  %fld219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i32 0, i64 0
  %rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rtx221, align 8
  %fld222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i32 0, i64 0
  %rtuint224 = bitcast %union.rtunion_def* %arrayidx223 to i32*
  %157 = load i32, i32* %rtuint224, align 4
  %158 = load i32, i32* @cached_regno, align 4
  %cmp225 = icmp eq i32 %157, %158
  br i1 %cmp225, label %land.lhs.true.227, label %cond.false.230

land.lhs.true.227:                                ; preds = %cond.true.218
  %159 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool228 = icmp ne %struct.cse_reg_info* %159, null
  br i1 %tobool228, label %cond.true.229, label %cond.false.230

cond.true.229:                                    ; preds = %land.lhs.true.227
  %160 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.238

cond.false.230:                                   ; preds = %land.lhs.true.227, %cond.true.218
  %161 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %162 = load %struct.rtx_def*, %struct.rtx_def** %161, align 8
  %fld231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i32 0, i64 0
  %rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtx233, align 8
  %fld234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i32 0, i64 0
  %rtuint236 = bitcast %union.rtunion_def* %arrayidx235 to i32*
  %164 = load i32, i32* %rtuint236, align 4
  %call237 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %164)
  br label %cond.end.238

cond.end.238:                                     ; preds = %cond.false.230, %cond.true.229
  %cond239 = phi %struct.cse_reg_info* [ %160, %cond.true.229 ], [ %call237, %cond.false.230 ]
  %reg_qty240 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond239, i32 0, i32 3
  %165 = load i32, i32* %reg_qty240, align 4
  %add241 = add i32 7808, %165
  br label %cond.end.250

cond.false.242:                                   ; preds = %land.lhs.true.209, %if.then.198
  %166 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %167 = load %struct.rtx_def*, %struct.rtx_def** %166, align 8
  %fld243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i32 0, i64 0
  %rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rtx245, align 8
  %169 = load i32, i32* @target_flags, align 4
  %and246 = and i32 %169, 33554432
  %tobool247 = icmp ne i32 %and246, 0
  %cond248 = select i1 %tobool247, i32 5, i32 4
  %call249 = call i32 @canon_hash(%struct.rtx_def* %168, i32 %cond248)
  br label %cond.end.250

cond.end.250:                                     ; preds = %cond.false.242, %cond.end.238
  %cond251 = phi i32 [ %add241, %cond.end.238 ], [ %call249, %cond.false.242 ]
  %and252 = and i32 %cond251, 31
  store i32 %and252, i32* %hash, align 4
  %170 = load i32, i32* %save_do_not_record, align 4
  store i32 %170, i32* @do_not_record, align 4
  %171 = load i32, i32* %save_hash_arg_in_memory, align 4
  store i32 %171, i32* @hash_arg_in_memory, align 4
  %172 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %173 = load %struct.rtx_def*, %struct.rtx_def** %172, align 8
  %fld253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i32 0, i64 0
  %rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rtx255, align 8
  %175 = load i32, i32* %hash, align 4
  %176 = load i32, i32* @target_flags, align 4
  %and256 = and i32 %176, 33554432
  %tobool257 = icmp ne i32 %and256, 0
  %cond258 = select i1 %tobool257, i32 5, i32 4
  %call259 = call %struct.table_elt* @lookup(%struct.rtx_def* %174, i32 %175, i32 %cond258)
  store %struct.table_elt* %call259, %struct.table_elt** %elt, align 8
  %177 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cmp260 = icmp eq %struct.table_elt* %177, null
  br i1 %cmp260, label %if.then.262, label %if.end.263

if.then.262:                                      ; preds = %cond.end.250
  br label %if.end.366

if.end.263:                                       ; preds = %cond.end.250
  %178 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value264 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %178, i32 0, i32 6
  %179 = load %struct.table_elt*, %struct.table_elt** %first_same_value264, align 8
  store %struct.table_elt* %179, %struct.table_elt** %p, align 8
  br label %for.cond.265

for.cond.265:                                     ; preds = %for.inc.269, %if.end.263
  %180 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool266 = icmp ne %struct.table_elt* %180, null
  br i1 %tobool266, label %for.body.267, label %for.end.271

for.body.267:                                     ; preds = %for.cond.265
  %181 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %flag268 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %181, i32 0, i32 13
  store i8 0, i8* %flag268, align 1
  br label %for.inc.269

for.inc.269:                                      ; preds = %for.body.267
  %182 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value270 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %182, i32 0, i32 4
  %183 = load %struct.table_elt*, %struct.table_elt** %next_same_value270, align 8
  store %struct.table_elt* %183, %struct.table_elt** %p, align 8
  br label %for.cond.265

for.end.271:                                      ; preds = %for.cond.265
  br label %while.cond.272

while.cond.272:                                   ; preds = %if.end.364, %for.end.271
  %184 = load i32, i32* %found_better, align 4
  %tobool273 = icmp ne i32 %184, 0
  br i1 %tobool273, label %while.body.274, label %while.end.365

while.body.274:                                   ; preds = %while.cond.272
  %185 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %186 = load %struct.rtx_def*, %struct.rtx_def** %185, align 8
  %187 = load i32, i32* %mode.addr, align 4
  %call276 = call i32 @address_cost(%struct.rtx_def* %186, i32 %187)
  store i32 %call276, i32* %best_addr_cost275, align 4
  %188 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %189 = load %struct.rtx_def*, %struct.rtx_def** %188, align 8
  %190 = bitcast %struct.rtx_def* %189 to i32*
  %bf.load278 = load i32, i32* %190, align 8
  %bf.clear279 = and i32 %bf.load278, 65535
  %cmp280 = icmp eq i32 %bf.clear279, 61
  br i1 %cmp280, label %cond.true.282, label %cond.false.283

cond.true.282:                                    ; preds = %while.body.274
  br label %cond.end.285

cond.false.283:                                   ; preds = %while.body.274
  %191 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %192 = load %struct.rtx_def*, %struct.rtx_def** %191, align 8
  %call284 = call i32 @notreg_cost(%struct.rtx_def* %192, i32 47)
  br label %cond.end.285

cond.end.285:                                     ; preds = %cond.false.283, %cond.true.282
  %cond286 = phi i32 [ 0, %cond.true.282 ], [ %call284, %cond.false.283 ]
  %add287 = add nsw i32 %cond286, 1
  %shr288 = ashr i32 %add287, 1
  store i32 %shr288, i32* %best_rtx_cost277, align 4
  %193 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  store %struct.table_elt* %193, %struct.table_elt** %best_elt289, align 8
  %194 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %195 = load %struct.rtx_def*, %struct.rtx_def** %194, align 8
  store %struct.rtx_def* %195, %struct.rtx_def** %best_rtx, align 8
  store i32 0, i32* %found_better, align 4
  %196 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value290 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %196, i32 0, i32 6
  %197 = load %struct.table_elt*, %struct.table_elt** %first_same_value290, align 8
  store %struct.table_elt* %197, %struct.table_elt** %p, align 8
  store i32 0, i32* %count, align 4
  br label %for.cond.291

for.cond.291:                                     ; preds = %for.inc.351, %cond.end.285
  %198 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool292 = icmp ne %struct.table_elt* %198, null
  br i1 %tobool292, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.291
  %199 = load i32, i32* %count, align 4
  %cmp293 = icmp slt i32 %199, 32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.291
  %200 = phi i1 [ false, %for.cond.291 ], [ %cmp293, %land.rhs ]
  br i1 %200, label %for.body.295, label %for.end.353

for.body.295:                                     ; preds = %land.end
  %201 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %flag296 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %201, i32 0, i32 13
  %202 = load i8, i8* %flag296, align 1
  %tobool297 = icmp ne i8 %202, 0
  br i1 %tobool297, label %if.end.350, label %land.lhs.true.298

land.lhs.true.298:                                ; preds = %for.body.295
  %203 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp299 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %203, i32 0, i32 0
  %204 = load %struct.rtx_def*, %struct.rtx_def** %exp299, align 8
  %205 = bitcast %struct.rtx_def* %204 to i32*
  %bf.load300 = load i32, i32* %205, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 61
  br i1 %cmp302, label %if.then.309, label %lor.lhs.false.304

lor.lhs.false.304:                                ; preds = %land.lhs.true.298
  %206 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp305 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %206, i32 0, i32 0
  %207 = load %struct.rtx_def*, %struct.rtx_def** %exp305, align 8
  %208 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp306 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %208, i32 0, i32 0
  %209 = load %struct.rtx_def*, %struct.rtx_def** %exp306, align 8
  %call307 = call i32 @exp_equiv_p(%struct.rtx_def* %207, %struct.rtx_def* %209, i32 1, i32 0)
  %tobool308 = icmp ne i32 %call307, 0
  br i1 %tobool308, label %if.then.309, label %if.end.350

if.then.309:                                      ; preds = %lor.lhs.false.304, %land.lhs.true.298
  %210 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %211 = load %struct.rtx_def*, %struct.rtx_def** %210, align 8
  %212 = bitcast %struct.rtx_def* %211 to i32*
  %bf.load310 = load i32, i32* %212, align 8
  %bf.clear311 = and i32 %bf.load310, 65535
  %213 = load i32, i32* @target_flags, align 4
  %and312 = and i32 %213, 33554432
  %tobool313 = icmp ne i32 %and312, 0
  %cond314 = select i1 %tobool313, i32 5, i32 4
  %214 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp315 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %214, i32 0, i32 0
  %215 = load %struct.rtx_def*, %struct.rtx_def** %exp315, align 8
  %216 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8
  %call316 = call %struct.rtx_def* @simplify_gen_binary(i32 %bf.clear311, i32 %cond314, %struct.rtx_def* %215, %struct.rtx_def* %216)
  store %struct.rtx_def* %call316, %struct.rtx_def** %new, align 8
  %217 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %218 = load i32, i32* %mode.addr, align 4
  %call317 = call i32 @address_cost(%struct.rtx_def* %217, i32 %218)
  store i32 %call317, i32* %new_cost, align 4
  %219 = load i32, i32* %new_cost, align 4
  %220 = load i32, i32* %best_addr_cost275, align 4
  %cmp318 = icmp slt i32 %219, %220
  br i1 %cmp318, label %if.then.337, label %lor.lhs.false.320

lor.lhs.false.320:                                ; preds = %if.then.309
  %221 = load i32, i32* %new_cost, align 4
  %222 = load i32, i32* %best_addr_cost275, align 4
  %cmp321 = icmp eq i32 %221, %222
  br i1 %cmp321, label %land.lhs.true.323, label %if.end.349

land.lhs.true.323:                                ; preds = %lor.lhs.false.320
  %223 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %224 = bitcast %struct.rtx_def* %223 to i32*
  %bf.load324 = load i32, i32* %224, align 8
  %bf.clear325 = and i32 %bf.load324, 65535
  %cmp326 = icmp eq i32 %bf.clear325, 61
  br i1 %cmp326, label %cond.true.328, label %cond.false.329

cond.true.328:                                    ; preds = %land.lhs.true.323
  br label %cond.end.331

cond.false.329:                                   ; preds = %land.lhs.true.323
  %225 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call330 = call i32 @notreg_cost(%struct.rtx_def* %225, i32 47)
  br label %cond.end.331

cond.end.331:                                     ; preds = %cond.false.329, %cond.true.328
  %cond332 = phi i32 [ 0, %cond.true.328 ], [ %call330, %cond.false.329 ]
  %add333 = add nsw i32 %cond332, 1
  %shr334 = ashr i32 %add333, 1
  %226 = load i32, i32* %best_rtx_cost277, align 4
  %cmp335 = icmp sgt i32 %shr334, %226
  br i1 %cmp335, label %if.then.337, label %if.end.349

if.then.337:                                      ; preds = %cond.end.331, %if.then.309
  store i32 1, i32* %found_better, align 4
  %227 = load i32, i32* %new_cost, align 4
  store i32 %227, i32* %best_addr_cost275, align 4
  %228 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %229 = bitcast %struct.rtx_def* %228 to i32*
  %bf.load338 = load i32, i32* %229, align 8
  %bf.clear339 = and i32 %bf.load338, 65535
  %cmp340 = icmp eq i32 %bf.clear339, 61
  br i1 %cmp340, label %cond.true.342, label %cond.false.343

cond.true.342:                                    ; preds = %if.then.337
  br label %cond.end.345

cond.false.343:                                   ; preds = %if.then.337
  %230 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call344 = call i32 @notreg_cost(%struct.rtx_def* %230, i32 47)
  br label %cond.end.345

cond.end.345:                                     ; preds = %cond.false.343, %cond.true.342
  %cond346 = phi i32 [ 0, %cond.true.342 ], [ %call344, %cond.false.343 ]
  %add347 = add nsw i32 %cond346, 1
  %shr348 = ashr i32 %add347, 1
  store i32 %shr348, i32* %best_rtx_cost277, align 4
  %231 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  store %struct.table_elt* %231, %struct.table_elt** %best_elt289, align 8
  %232 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  store %struct.rtx_def* %232, %struct.rtx_def** %best_rtx, align 8
  br label %if.end.349

if.end.349:                                       ; preds = %cond.end.345, %cond.end.331, %lor.lhs.false.320
  br label %if.end.350

if.end.350:                                       ; preds = %if.end.349, %lor.lhs.false.304, %for.body.295
  br label %for.inc.351

for.inc.351:                                      ; preds = %if.end.350
  %233 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value352 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %233, i32 0, i32 4
  %234 = load %struct.table_elt*, %struct.table_elt** %next_same_value352, align 8
  store %struct.table_elt* %234, %struct.table_elt** %p, align 8
  %235 = load i32, i32* %count, align 4
  %inc = add nsw i32 %235, 1
  store i32 %inc, i32* %count, align 4
  br label %for.cond.291

for.end.353:                                      ; preds = %land.end
  %236 = load i32, i32* %found_better, align 4
  %tobool354 = icmp ne i32 %236, 0
  br i1 %tobool354, label %if.then.355, label %if.end.364

if.then.355:                                      ; preds = %for.end.353
  %237 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %238 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8
  %239 = load %struct.rtx_def*, %struct.rtx_def** %best_rtx, align 8
  %call356 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %239)
  %call357 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %call356, %struct.rtx_def* null)
  %call358 = call i32 @validate_change(%struct.rtx_def* %237, %struct.rtx_def** %238, %struct.rtx_def* %call357, i32 0)
  %tobool359 = icmp ne i32 %call358, 0
  br i1 %tobool359, label %if.then.360, label %if.else.361

if.then.360:                                      ; preds = %if.then.355
  br label %if.end.366

if.else.361:                                      ; preds = %if.then.355
  %240 = load %struct.table_elt*, %struct.table_elt** %best_elt289, align 8
  %flag362 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %240, i32 0, i32 13
  store i8 1, i8* %flag362, align 1
  br label %if.end.363

if.end.363:                                       ; preds = %if.else.361
  br label %if.end.364

if.end.364:                                       ; preds = %if.end.363, %for.end.353
  br label %while.cond.272

while.end.365:                                    ; preds = %while.cond.272
  br label %if.end.366

if.end.366:                                       ; preds = %if.then, %if.then.108, %if.then.162, %if.then.262, %if.then.360, %while.end.365, %land.lhs.true.190, %land.lhs.true.182, %lor.lhs.false.174, %if.end.166
  ret void
}

declare %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #1

declare i32 @get_pool_mode(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @notreg_cost(%struct.rtx_def* %x, i32 %outer) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %outer.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %outer, i32* %outer.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %land.lhs.true.4, label %cond.false

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load5 = load i32, i32* %6, align 8
  %bf.lshr = lshr i32 %bf.load5, 16
  %bf.clear6 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %7 = load i32, i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %7, 1
  br i1 %cmp8, label %land.lhs.true.9, label %cond.false

land.lhs.true.9:                                  ; preds = %land.lhs.true.4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx12, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load13 = load i32, i32* %10, align 8
  %bf.lshr14 = lshr i32 %bf.load13, 16
  %bf.clear15 = and i32 %bf.lshr14, 255
  %idxprom16 = sext i32 %bf.clear15 to i64
  %arrayidx17 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom16
  %11 = load i32, i32* %arrayidx17, align 4
  %cmp18 = icmp eq i32 %11, 1
  br i1 %cmp18, label %land.lhs.true.19, label %cond.false

land.lhs.true.19:                                 ; preds = %land.lhs.true.9
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load20 = load i32, i32* %13, align 8
  %bf.lshr21 = lshr i32 %bf.load20, 16
  %bf.clear22 = and i32 %bf.lshr21, 255
  %idxprom23 = sext i32 %bf.clear22 to i64
  %arrayidx24 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom23
  %14 = load i8, i8* %arrayidx24, align 1
  %conv = zext i8 %14 to i32
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i32 0, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx27, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load28 = load i32, i32* %17, align 8
  %bf.lshr29 = lshr i32 %bf.load28, 16
  %bf.clear30 = and i32 %bf.lshr29, 255
  %idxprom31 = sext i32 %bf.clear30 to i64
  %arrayidx32 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom31
  %18 = load i8, i8* %arrayidx32, align 1
  %conv33 = zext i8 %18 to i32
  %cmp34 = icmp slt i32 %conv, %conv33
  br i1 %cmp34, label %land.lhs.true.36, label %cond.false

land.lhs.true.36:                                 ; preds = %land.lhs.true.19
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call i32 @subreg_lowpart_p(%struct.rtx_def* %19)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.36
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.36, %land.lhs.true.19, %land.lhs.true.9, %land.lhs.true.4, %land.lhs.true, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %21 = load i32, i32* %outer.addr, align 4
  %call37 = call i32 @rtx_cost(%struct.rtx_def* %20, i32 %21)
  %mul = mul nsw i32 %call37, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %mul, %cond.false ]
  ret i32 %cond
}

declare %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #1

declare i32 @apply_change_group() #1

; Function Attrs: nounwind uwtable
define internal i32 @safe_hash(%struct.rtx_def* %x, i32 %mode) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %save_do_not_record = alloca i32, align 4
  %save_hash_arg_in_memory = alloca i32, align 4
  %hash = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* @do_not_record, align 4
  store i32 %0, i32* %save_do_not_record, align 4
  %1 = load i32, i32* @hash_arg_in_memory, align 4
  store i32 %1, i32* %save_hash_arg_in_memory, align 4
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = load i32, i32* %mode.addr, align 4
  %call = call i32 @canon_hash(%struct.rtx_def* %2, i32 %3)
  store i32 %call, i32* %hash, align 4
  %4 = load i32, i32* %save_hash_arg_in_memory, align 4
  store i32 %4, i32* @hash_arg_in_memory, align 4
  %5 = load i32, i32* %save_do_not_record, align 4
  store i32 %5, i32* @do_not_record, align 4
  %6 = load i32, i32* %hash, align 4
  ret i32 %6
}

declare i32 @comparison_dominates_p(i32, i32) #1

declare i32 @reverse_condition(i32) #1

declare %struct.rtx_def* @simplify_relational_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @canon_reg(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %first = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %j = alloca i32, align 4
  %new = alloca %struct.rtx_def*, align 8
  %insn_code = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %4 = load i32, i32* %code, align 4
  switch i32 %4, label %sw.default [
    i32 59, label %sw.bb
    i32 69, label %sw.bb
    i32 58, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 61, label %sw.bb.1
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %5, %struct.rtx_def** %retval
  br label %return

sw.bb.1:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %7 = load i32, i32* %rtuint, align 4
  %cmp2 = icmp ult i32 %7, 53
  br i1 %cmp2, label %if.then.14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.1
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %9 = load i32, i32* %rtuint5, align 4
  %10 = load i32, i32* @cached_regno, align 4
  %cmp6 = icmp eq i32 %9, %10
  br i1 %cmp6, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %11, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %12 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtuint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %14 = load i32, i32* %rtuint9, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %14)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %12, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %15 = load i32, i32* %reg_qty, align 4
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i32 0, i64 0
  %rtuint12 = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %17 = load i32, i32* %rtuint12, align 4
  %cmp13 = icmp ne i32 %15, %17
  br i1 %cmp13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %cond.end, %sw.bb.1
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %18, %struct.rtx_def** %retval
  br label %return

if.end.15:                                        ; preds = %cond.end
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i32 0, i64 0
  %rtuint18 = bitcast %union.rtunion_def* %arrayidx17 to i32*
  %20 = load i32, i32* %rtuint18, align 4
  %21 = load i32, i32* @cached_regno, align 4
  %cmp19 = icmp eq i32 %20, %21
  br i1 %cmp19, label %land.lhs.true.20, label %cond.false.23

land.lhs.true.20:                                 ; preds = %if.end.15
  %22 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool21 = icmp ne %struct.cse_reg_info* %22, null
  br i1 %tobool21, label %cond.true.22, label %cond.false.23

cond.true.22:                                     ; preds = %land.lhs.true.20
  %23 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.28

cond.false.23:                                    ; preds = %land.lhs.true.20, %if.end.15
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i32 0, i64 0
  %rtuint26 = bitcast %union.rtunion_def* %arrayidx25 to i32*
  %25 = load i32, i32* %rtuint26, align 4
  %call27 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %25)
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.23, %cond.true.22
  %cond29 = phi %struct.cse_reg_info* [ %23, %cond.true.22 ], [ %call27, %cond.false.23 ]
  %reg_qty30 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond29, i32 0, i32 3
  %26 = load i32, i32* %reg_qty30, align 4
  store i32 %26, i32* %q, align 4
  %27 = load i32, i32* %q, align 4
  %idxprom = sext i32 %27 to i64
  %28 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx31 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %28, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx31, %struct.qty_table_elem** %ent, align 8
  %29 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %29, i32 0, i32 4
  %30 = load i32, i32* %first_reg, align 4
  store i32 %30, i32* %first, align 4
  %31 = load i32, i32* %first, align 4
  %cmp32 = icmp sge i32 %31, 53
  br i1 %cmp32, label %cond.true.33, label %cond.false.36

cond.true.33:                                     ; preds = %cond.end.28
  %32 = load i32, i32* %first, align 4
  %idxprom34 = sext i32 %32 to i64
  %33 = load %struct.function*, %struct.function** @cfun, align 8
  %emit = getelementptr inbounds %struct.function, %struct.function* %33, i32 0, i32 3
  %34 = load %struct.emit_status*, %struct.emit_status** %emit, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status, %struct.emit_status* %34, i32 0, i32 12
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %x_regno_reg_rtx, align 8
  %arrayidx35 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %35, i64 %idxprom34
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8
  br label %cond.end.45

cond.false.36:                                    ; preds = %cond.end.28
  %37 = load i32, i32* %first, align 4
  %idxprom37 = sext i32 %37 to i64
  %arrayidx38 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom37
  %38 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %38, 0
  br i1 %cmp39, label %cond.true.40, label %cond.false.41

cond.true.40:                                     ; preds = %cond.false.36
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  br label %cond.end.43

cond.false.41:                                    ; preds = %cond.false.36
  %40 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %40, i32 0, i32 6
  %41 = load i32, i32* %mode, align 4
  %42 = load i32, i32* %first, align 4
  %call42 = call %struct.rtx_def* @gen_rtx_REG(i32 %41, i32 %42)
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.false.41, %cond.true.40
  %cond44 = phi %struct.rtx_def* [ %39, %cond.true.40 ], [ %call42, %cond.false.41 ]
  br label %cond.end.45

cond.end.45:                                      ; preds = %cond.end.43, %cond.true.33
  %cond46 = phi %struct.rtx_def* [ %36, %cond.true.33 ], [ %cond44, %cond.end.43 ]
  store %struct.rtx_def* %cond46, %struct.rtx_def** %retval
  br label %return

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %43 = load i32, i32* %code, align 4
  %idxprom47 = sext i32 %43 to i64
  %arrayidx48 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom47
  %44 = load i8*, i8** %arrayidx48, align 8
  store i8* %44, i8** %fmt, align 8
  %45 = load i32, i32* %code, align 4
  %idxprom49 = sext i32 %45 to i64
  %arrayidx50 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom49
  %46 = load i8, i8* %arrayidx50, align 1
  %conv = zext i8 %46 to i32
  %sub = sub nsw i32 %conv, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.161, %sw.epilog
  %47 = load i32, i32* %i, align 4
  %cmp51 = icmp sge i32 %47, 0
  br i1 %cmp51, label %for.body, label %for.end.162

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %48 to i64
  %49 = load i8*, i8** %fmt, align 8
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 %idxprom53
  %50 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %50 to i32
  %cmp56 = icmp eq i32 %conv55, 101
  br i1 %cmp56, label %if.then.58, label %if.else.131

if.then.58:                                       ; preds = %for.body
  %51 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %51 to i64
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i32 0, i64 %idxprom59
  %rtx = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call62 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %53, %struct.rtx_def* %54)
  store %struct.rtx_def* %call62, %struct.rtx_def** %new, align 8
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %cmp63 = icmp ne %struct.rtx_def* %55, null
  br i1 %cmp63, label %land.lhs.true.65, label %if.else

land.lhs.true.65:                                 ; preds = %if.then.58
  %56 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %cmp66 = icmp ne %struct.rtx_def* %56, null
  br i1 %cmp66, label %land.lhs.true.68, label %if.else

land.lhs.true.68:                                 ; preds = %land.lhs.true.65
  %57 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %58 = bitcast %struct.rtx_def* %57 to i32*
  %bf.load69 = load i32, i32* %58, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 61
  br i1 %cmp71, label %land.lhs.true.73, label %if.else

land.lhs.true.73:                                 ; preds = %land.lhs.true.68
  %59 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %59 to i64
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i32 0, i64 %idxprom74
  %rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtx77, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load78 = load i32, i32* %62, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 61
  br i1 %cmp80, label %land.lhs.true.82, label %if.else

land.lhs.true.82:                                 ; preds = %land.lhs.true.73
  %63 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %fld83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i32 0, i64 0
  %rtuint85 = bitcast %union.rtunion_def* %arrayidx84 to i32*
  %64 = load i32, i32* %rtuint85, align 4
  %cmp86 = icmp ult i32 %64, 53
  %conv87 = zext i1 %cmp86 to i32
  %65 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %65 to i64
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i32 0, i64 %idxprom88
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rtx91, align 8
  %fld92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i32 0, i64 0
  %rtuint94 = bitcast %union.rtunion_def* %arrayidx93 to i32*
  %68 = load i32, i32* %rtuint94, align 4
  %cmp95 = icmp ult i32 %68, 53
  %conv96 = zext i1 %cmp95 to i32
  %cmp97 = icmp ne i32 %conv87, %conv96
  br i1 %cmp97, label %if.then.120, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %land.lhs.true.82
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i32 0, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx101 to i32*
  %70 = load i32, i32* %rtint, align 4
  %cmp102 = icmp sge i32 %70, 0
  br i1 %cmp102, label %cond.true.104, label %cond.false.108

cond.true.104:                                    ; preds = %lor.lhs.false.99
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %fld105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i32 0, i64 4
  %rtint107 = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %72 = load i32, i32* %rtint107, align 4
  br label %cond.end.110

cond.false.108:                                   ; preds = %lor.lhs.false.99
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call109 = call i32 @recog_memoized_1(%struct.rtx_def* %73)
  br label %cond.end.110

cond.end.110:                                     ; preds = %cond.false.108, %cond.true.104
  %cond111 = phi i32 [ %72, %cond.true.104 ], [ %call109, %cond.false.108 ]
  store i32 %cond111, i32* %insn_code, align 4
  %cmp112 = icmp slt i32 %cond111, 0
  br i1 %cmp112, label %if.then.120, label %lor.lhs.false.114

lor.lhs.false.114:                                ; preds = %cond.end.110
  %74 = load i32, i32* %insn_code, align 4
  %idxprom115 = sext i32 %74 to i64
  %arrayidx116 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i32 0, i64 %idxprom115
  %n_dups = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx116, i32 0, i32 5
  %75 = load i8, i8* %n_dups, align 1
  %conv117 = sext i8 %75 to i32
  %cmp118 = icmp sgt i32 %conv117, 0
  br i1 %cmp118, label %if.then.120, label %if.else

if.then.120:                                      ; preds = %lor.lhs.false.114, %cond.end.110, %land.lhs.true.82
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %77 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %77 to i64
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i32 0, i64 %idxprom121
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %call125 = call i32 @validate_change(%struct.rtx_def* %76, %struct.rtx_def** %rtx124, %struct.rtx_def* %79, i32 1)
  br label %if.end.130

if.else:                                          ; preds = %lor.lhs.false.114, %land.lhs.true.73, %land.lhs.true.68, %land.lhs.true.65, %if.then.58
  %80 = load %struct.rtx_def*, %struct.rtx_def** %new, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom126 = sext i32 %81 to i64
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i32 0, i64 %idxprom126
  %rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**
  store %struct.rtx_def* %80, %struct.rtx_def** %rtx129, align 8
  br label %if.end.130

if.end.130:                                       ; preds = %if.else, %if.then.120
  br label %if.end.160

if.else.131:                                      ; preds = %for.body
  %83 = load i32, i32* %i, align 4
  %idxprom132 = sext i32 %83 to i64
  %84 = load i8*, i8** %fmt, align 8
  %arrayidx133 = getelementptr inbounds i8, i8* %84, i64 %idxprom132
  %85 = load i8, i8* %arrayidx133, align 1
  %conv134 = sext i8 %85 to i32
  %cmp135 = icmp eq i32 %conv134, 69
  br i1 %cmp135, label %if.then.137, label %if.end.159

if.then.137:                                      ; preds = %if.else.131
  store i32 0, i32* %j, align 4
  br label %for.cond.138

for.cond.138:                                     ; preds = %for.inc, %if.then.137
  %86 = load i32, i32* %j, align 4
  %87 = load i32, i32* %i, align 4
  %idxprom139 = sext i32 %87 to i64
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i32 0, i64 %idxprom139
  %rtvec = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtvec_def**
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i32 0, i32 0
  %90 = load i32, i32* %num_elem, align 4
  %cmp142 = icmp slt i32 %86, %90
  br i1 %cmp142, label %for.body.144, label %for.end

for.body.144:                                     ; preds = %for.cond.138
  %91 = load i32, i32* %j, align 4
  %idxprom145 = sext i32 %91 to i64
  %92 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %92 to i64
  %93 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i32 0, i64 %idxprom146
  %rtvec149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtvec_def**
  %94 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec149, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %94, i32 0, i32 1
  %arrayidx150 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom145
  %95 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx150, align 8
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %call151 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %95, %struct.rtx_def* %96)
  %97 = load i32, i32* %j, align 4
  %idxprom152 = sext i32 %97 to i64
  %98 = load i32, i32* %i, align 4
  %idxprom153 = sext i32 %98 to i64
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i32 0, i64 %idxprom153
  %rtvec156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtvec_def**
  %100 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec156, align 8
  %elem157 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %100, i32 0, i32 1
  %arrayidx158 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem157, i32 0, i64 %idxprom152
  store %struct.rtx_def* %call151, %struct.rtx_def** %arrayidx158, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body.144
  %101 = load i32, i32* %j, align 4
  %inc = add nsw i32 %101, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.138

for.end:                                          ; preds = %for.cond.138
  br label %if.end.159

if.end.159:                                       ; preds = %for.end, %if.else.131
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159, %if.end.130
  br label %for.inc.161

for.inc.161:                                      ; preds = %if.end.160
  %102 = load i32, i32* %i, align 4
  %dec = add nsw i32 %102, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end.162:                                      ; preds = %for.cond
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %103, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %for.end.162, %cond.end.45, %if.then.14, %sw.bb, %if.then
  %104 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %104
}

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_ternary_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @approx_reg_cost(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.bitmap_head_def, align 8
  %i = alloca i32, align 4
  %cost = alloca i32, align 4
  %hardregs = alloca i32, align 4
  %ptr_ = alloca %struct.bitmap_element_def*, align 8
  %indx_ = alloca i32, align 4
  %bit_num_ = alloca i32, align 4
  %word_num_ = alloca i32, align 4
  %word_ = alloca i64, align 8
  %mask_ = alloca i64, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %hardregs, align 4
  %call = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %set)
  %0 = bitcast %struct.bitmap_head_def* %set to i8*
  %call1 = call i32 @for_each_rtx(%struct.rtx_def** %x.addr, i32 (%struct.rtx_def**, i8*)* @approx_reg_cost_1, i8* %0)
  br label %do.body

do.body:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %set, i32 0, i32 0
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %ptr_, align 8
  store i32 0, i32* %indx_, align 4
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %2 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp = icmp ne %struct.bitmap_element_def* %2, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %3, i32 0, i32 2
  %4 = load i32, i32* %indx, align 4
  %5 = load i32, i32* %indx_, align 4
  %cmp2 = icmp ult i32 %4, %5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %7, i32 0, i32 0
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8
  store %struct.bitmap_element_def* %8, %struct.bitmap_element_def** %ptr_, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp3 = icmp ne %struct.bitmap_element_def* %9, null
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end
  %10 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx4 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %10, i32 0, i32 2
  %11 = load i32, i32* %indx4, align 4
  %12 = load i32, i32* %indx_, align 4
  %cmp5 = icmp ne i32 %11, %12
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %bit_num_, align 4
  store i32 0, i32* %word_num_, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc.69, %if.end
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %cmp6 = icmp ne %struct.bitmap_element_def* %13, null
  br i1 %cmp6, label %for.body, label %for.end.71

for.body:                                         ; preds = %for.cond
  br label %for.cond.7

for.cond.7:                                       ; preds = %for.inc.66, %for.body
  %14 = load i32, i32* %word_num_, align 4
  %cmp8 = icmp ult i32 %14, 2
  br i1 %cmp8, label %for.body.9, label %for.end.68

for.body.9:                                       ; preds = %for.cond.7
  %15 = load i32, i32* %word_num_, align 4
  %idxprom = zext i32 %15 to i64
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i32 0, i64 %idxprom
  %17 = load i64, i64* %arrayidx, align 8
  store i64 %17, i64* %word_, align 8
  %18 = load i64, i64* %word_, align 8
  %cmp10 = icmp ne i64 %18, 0
  br i1 %cmp10, label %if.then.11, label %if.end.65

if.then.11:                                       ; preds = %for.body.9
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc, %if.then.11
  %19 = load i32, i32* %bit_num_, align 4
  %cmp13 = icmp ult i32 %19, 64
  br i1 %cmp13, label %for.body.14, label %for.end

for.body.14:                                      ; preds = %for.cond.12
  %20 = load i32, i32* %bit_num_, align 4
  %sh_prom = zext i32 %20 to i64
  %shl = shl i64 1, %sh_prom
  store i64 %shl, i64* %mask_, align 8
  %21 = load i64, i64* %word_, align 8
  %22 = load i64, i64* %mask_, align 8
  %and = and i64 %21, %22
  %cmp15 = icmp ne i64 %and, 0
  br i1 %cmp15, label %if.then.16, label %if.end.63

if.then.16:                                       ; preds = %for.body.14
  %23 = load i64, i64* %mask_, align 8
  %neg = xor i64 %23, -1
  %24 = load i64, i64* %word_, align 8
  %and17 = and i64 %24, %neg
  store i64 %and17, i64* %word_, align 8
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %indx18 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 2
  %26 = load i32, i32* %indx18, align 4
  %mul = mul i32 %26, 128
  %27 = load i32, i32* %word_num_, align 4
  %mul19 = mul i32 %27, 64
  %add = add i32 %mul, %mul19
  %28 = load i32, i32* %bit_num_, align 4
  %add20 = add i32 %add, %28
  store i32 %add20, i32* %i, align 4
  %29 = load i32, i32* %i, align 4
  %cmp21 = icmp eq i32 %29, 20
  br i1 %cmp21, label %if.end.58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.16
  %30 = load i32, i32* %i, align 4
  %cmp22 = icmp eq i32 %30, 6
  br i1 %cmp22, label %if.end.58, label %lor.lhs.false.23

lor.lhs.false.23:                                 ; preds = %lor.lhs.false
  %31 = load i32, i32* %i, align 4
  %cmp24 = icmp eq i32 %31, 7
  br i1 %cmp24, label %if.end.58, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %lor.lhs.false.23
  %32 = load i32, i32* %i, align 4
  %cmp26 = icmp eq i32 %32, 16
  br i1 %cmp26, label %if.end.58, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %lor.lhs.false.25
  %33 = load i32, i32* %i, align 4
  %cmp28 = icmp sge i32 %33, 53
  br i1 %cmp28, label %land.lhs.true.29, label %lor.lhs.false.31

land.lhs.true.29:                                 ; preds = %lor.lhs.false.27
  %34 = load i32, i32* %i, align 4
  %cmp30 = icmp sle i32 %34, 57
  br i1 %cmp30, label %if.end.58, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %land.lhs.true.29, %lor.lhs.false.27
  %35 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %35, 53
  br i1 %cmp32, label %land.lhs.true.33, label %if.then.50

land.lhs.true.33:                                 ; preds = %lor.lhs.false.31
  %36 = load i32, i32* %i, align 4
  %cmp34 = icmp eq i32 %36, 20
  br i1 %cmp34, label %land.lhs.true.45, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %land.lhs.true.33
  %37 = load i32, i32* %i, align 4
  %cmp36 = icmp eq i32 %37, 6
  br i1 %cmp36, label %land.lhs.true.45, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.35
  %38 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %38 to i64
  %arrayidx39 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom38
  %39 = load i8, i8* %arrayidx39, align 1
  %conv = sext i8 %39 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true.45, label %lor.lhs.false.40

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.37
  %40 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %40 to i64
  %arrayidx42 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom41
  %41 = load i8, i8* %arrayidx42, align 1
  %conv43 = sext i8 %41 to i32
  %tobool44 = icmp ne i32 %conv43, 0
  br i1 %tobool44, label %land.lhs.true.45, label %if.then.50

land.lhs.true.45:                                 ; preds = %lor.lhs.false.40, %lor.lhs.false.37, %lor.lhs.false.35, %land.lhs.true.33
  %42 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %42 to i64
  %arrayidx47 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom46
  %43 = load i32, i32* %arrayidx47, align 4
  %cmp48 = icmp ne i32 %43, 0
  br i1 %cmp48, label %if.end.58, label %if.then.50

if.then.50:                                       ; preds = %land.lhs.true.45, %lor.lhs.false.40, %lor.lhs.false.31
  %44 = load i32, i32* %i, align 4
  %cmp51 = icmp slt i32 %44, 53
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.then.50
  %45 = load i32, i32* %hardregs, align 4
  %inc = add nsw i32 %45, 1
  store i32 %inc, i32* %hardregs, align 4
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.then.50
  %46 = load i32, i32* %i, align 4
  %cmp55 = icmp slt i32 %46, 53
  %cond = select i1 %cmp55, i32 2, i32 1
  %47 = load i32, i32* %cost, align 4
  %add57 = add nsw i32 %47, %cond
  store i32 %add57, i32* %cost, align 4
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.54, %land.lhs.true.45, %land.lhs.true.29, %lor.lhs.false.25, %lor.lhs.false.23, %lor.lhs.false, %if.then.16
  %48 = load i64, i64* %word_, align 8
  %cmp59 = icmp eq i64 %48, 0
  br i1 %cmp59, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  br label %for.end

if.end.62:                                        ; preds = %if.end.58
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %for.body.14
  br label %for.inc

for.inc:                                          ; preds = %if.end.63
  %49 = load i32, i32* %bit_num_, align 4
  %inc64 = add i32 %49, 1
  store i32 %inc64, i32* %bit_num_, align 4
  br label %for.cond.12

for.end:                                          ; preds = %if.then.61, %for.cond.12
  br label %if.end.65

if.end.65:                                        ; preds = %for.end, %for.body.9
  store i32 0, i32* %bit_num_, align 4
  br label %for.inc.66

for.inc.66:                                       ; preds = %if.end.65
  %50 = load i32, i32* %word_num_, align 4
  %inc67 = add i32 %50, 1
  store i32 %inc67, i32* %word_num_, align 4
  br label %for.cond.7

for.end.68:                                       ; preds = %for.cond.7
  store i32 0, i32* %word_num_, align 4
  br label %for.inc.69

for.inc.69:                                       ; preds = %for.end.68
  %51 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %ptr_, align 8
  %next70 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %51, i32 0, i32 0
  %52 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next70, align 8
  store %struct.bitmap_element_def* %52, %struct.bitmap_element_def** %ptr_, align 8
  br label %for.cond

for.end.71:                                       ; preds = %for.cond
  br label %do.end

do.end:                                           ; preds = %for.end.71
  call void @bitmap_clear(%struct.bitmap_head_def* %set)
  %53 = load i32, i32* %hardregs, align 4
  %tobool72 = icmp ne i32 %53, 0
  br i1 %tobool72, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %54 = load i32, i32* %cost, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond73 = phi i32 [ 2147483647, %cond.true ], [ %54, %cond.false ]
  ret i32 %cond73
}

declare %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define internal i32 @approx_reg_cost_1(%struct.rtx_def** %xp, i8* %data) #0 {
entry:
  %xp.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.bitmap_head_def*, align 8
  store %struct.rtx_def** %xp, %struct.rtx_def*** %xp.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %xp.addr, align 8
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8
  %2 = load i8*, i8** %data.addr, align 8
  %3 = bitcast i8* %2 to %struct.bitmap_head_def*
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %set, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %tobool = icmp ne %struct.rtx_def* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %set, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %9 = load i32, i32* %rtuint, align 4
  call void @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %9)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0
}

declare void @bitmap_clear(%struct.bitmap_head_def*) #1

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare i32 @recog_memoized_1(%struct.rtx_def*) #1

declare i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @insert_regs(%struct.rtx_def* %x, %struct.table_elt* %classp, i32 %modified) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %classp.addr = alloca %struct.table_elt*, align 8
  %modified.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %qty_valid = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  store i32 %modified, i32* %modified.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  store i32 %3, i32* %regno, align 4
  %4 = load i32, i32* %regno, align 4
  %5 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %4, %5
  br i1 %cmp1, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %6, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %8 = load i32, i32* %regno, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %7, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %9 = load i32, i32* %reg_qty, align 4
  %10 = load i32, i32* %regno, align 4
  %cmp2 = icmp ne i32 %9, %10
  %conv = zext i1 %cmp2 to i32
  store i32 %conv, i32* %qty_valid, align 4
  %11 = load i32, i32* %qty_valid, align 4
  %tobool3 = icmp ne i32 %11, 0
  br i1 %tobool3, label %if.then.4, label %if.end.21

if.then.4:                                        ; preds = %cond.end
  %12 = load i32, i32* %regno, align 4
  %13 = load i32, i32* @cached_regno, align 4
  %cmp5 = icmp eq i32 %12, %13
  br i1 %cmp5, label %land.lhs.true.7, label %cond.false.10

land.lhs.true.7:                                  ; preds = %if.then.4
  %14 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool8 = icmp ne %struct.cse_reg_info* %14, null
  br i1 %tobool8, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %land.lhs.true.7
  %15 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.12

cond.false.10:                                    ; preds = %land.lhs.true.7, %if.then.4
  %16 = load i32, i32* %regno, align 4
  %call11 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %16)
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.10, %cond.true.9
  %cond13 = phi %struct.cse_reg_info* [ %15, %cond.true.9 ], [ %call11, %cond.false.10 ]
  %reg_qty14 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond13, i32 0, i32 3
  %17 = load i32, i32* %reg_qty14, align 4
  %idxprom = sext i32 %17 to i64
  %18 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx15 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %18, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx15, %struct.qty_table_elem** %ent, align 8
  %19 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %19, i32 0, i32 6
  %20 = load i32, i32* %mode, align 4
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %22 = bitcast %struct.rtx_def* %21 to i32*
  %bf.load16 = load i32, i32* %22, align 8
  %bf.lshr = lshr i32 %bf.load16, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  %cmp18 = icmp ne i32 %20, %bf.clear17
  br i1 %cmp18, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %cond.end.12
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.12
  br label %if.end.21

if.end.21:                                        ; preds = %if.end, %cond.end
  %23 = load i32, i32* %modified.addr, align 4
  %tobool22 = icmp ne i32 %23, 0
  br i1 %tobool22, label %if.then.24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.21
  %24 = load i32, i32* %qty_valid, align 4
  %tobool23 = icmp ne i32 %24, 0
  br i1 %tobool23, label %if.end.100, label %if.then.24

if.then.24:                                       ; preds = %lor.lhs.false, %if.end.21
  %25 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %tobool25 = icmp ne %struct.table_elt* %25, null
  br i1 %tobool25, label %if.then.26, label %if.end.49

if.then.26:                                       ; preds = %if.then.24
  %26 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 6
  %27 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %27, %struct.table_elt** %classp.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.26
  %28 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %cmp27 = icmp ne %struct.table_elt* %28, null
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %29, i32 0, i32 0
  %30 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load29 = load i32, i32* %31, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 61
  br i1 %cmp31, label %land.lhs.true.33, label %if.end.48

land.lhs.true.33:                                 ; preds = %for.body
  %32 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp34 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %32, i32 0, i32 0
  %33 = load %struct.rtx_def*, %struct.rtx_def** %exp34, align 8
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load35 = load i32, i32* %34, align 8
  %bf.lshr36 = lshr i32 %bf.load35, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load38 = load i32, i32* %36, align 8
  %bf.lshr39 = lshr i32 %bf.load38, 16
  %bf.clear40 = and i32 %bf.lshr39, 255
  %cmp41 = icmp eq i32 %bf.clear37, %bf.clear40
  br i1 %cmp41, label %if.then.43, label %if.end.48

if.then.43:                                       ; preds = %land.lhs.true.33
  %37 = load i32, i32* %regno, align 4
  %38 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp44 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 0
  %39 = load %struct.rtx_def*, %struct.rtx_def** %exp44, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %40 = load i32, i32* %rtuint47, align 4
  call void @make_regs_eqv(i32 %37, i32 %40)
  store i32 1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %land.lhs.true.33, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.48
  %41 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 4
  %42 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %42, %struct.table_elt** %classp.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.49

if.end.49:                                        ; preds = %for.end, %if.then.24
  %43 = load i32, i32* %modified.addr, align 4
  %tobool50 = icmp ne i32 %43, 0
  br i1 %tobool50, label %if.end.96, label %land.lhs.true.51

land.lhs.true.51:                                 ; preds = %if.end.49
  %44 = load i32, i32* %regno, align 4
  %45 = load i32, i32* @cached_regno, align 4
  %cmp52 = icmp eq i32 %44, %45
  br i1 %cmp52, label %land.lhs.true.54, label %cond.false.57

land.lhs.true.54:                                 ; preds = %land.lhs.true.51
  %46 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool55 = icmp ne %struct.cse_reg_info* %46, null
  br i1 %tobool55, label %cond.true.56, label %cond.false.57

cond.true.56:                                     ; preds = %land.lhs.true.54
  %47 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.59

cond.false.57:                                    ; preds = %land.lhs.true.54, %land.lhs.true.51
  %48 = load i32, i32* %regno, align 4
  %call58 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %48)
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.57, %cond.true.56
  %cond60 = phi %struct.cse_reg_info* [ %47, %cond.true.56 ], [ %call58, %cond.false.57 ]
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond60, i32 0, i32 5
  %49 = load i32, i32* %reg_in_table, align 4
  %cmp61 = icmp sge i32 %49, 0
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.96

land.lhs.true.63:                                 ; preds = %cond.end.59
  %50 = load i32, i32* %regno, align 4
  %51 = load i32, i32* @cached_regno, align 4
  %cmp64 = icmp eq i32 %50, %51
  br i1 %cmp64, label %land.lhs.true.66, label %cond.false.69

land.lhs.true.66:                                 ; preds = %land.lhs.true.63
  %52 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool67 = icmp ne %struct.cse_reg_info* %52, null
  br i1 %tobool67, label %cond.true.68, label %cond.false.69

cond.true.68:                                     ; preds = %land.lhs.true.66
  %53 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.71

cond.false.69:                                    ; preds = %land.lhs.true.66, %land.lhs.true.63
  %54 = load i32, i32* %regno, align 4
  %call70 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %54)
  br label %cond.end.71

cond.end.71:                                      ; preds = %cond.false.69, %cond.true.68
  %cond72 = phi %struct.cse_reg_info* [ %53, %cond.true.68 ], [ %call70, %cond.false.69 ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond72, i32 0, i32 4
  %55 = load i32, i32* %reg_tick, align 4
  %56 = load i32, i32* %regno, align 4
  %57 = load i32, i32* @cached_regno, align 4
  %cmp73 = icmp eq i32 %56, %57
  br i1 %cmp73, label %land.lhs.true.75, label %cond.false.78

land.lhs.true.75:                                 ; preds = %cond.end.71
  %58 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool76 = icmp ne %struct.cse_reg_info* %58, null
  br i1 %tobool76, label %cond.true.77, label %cond.false.78

cond.true.77:                                     ; preds = %land.lhs.true.75
  %59 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.80

cond.false.78:                                    ; preds = %land.lhs.true.75, %cond.end.71
  %60 = load i32, i32* %regno, align 4
  %call79 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %60)
  br label %cond.end.80

cond.end.80:                                      ; preds = %cond.false.78, %cond.true.77
  %cond81 = phi %struct.cse_reg_info* [ %59, %cond.true.77 ], [ %call79, %cond.false.78 ]
  %reg_in_table82 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond81, i32 0, i32 5
  %61 = load i32, i32* %reg_in_table82, align 4
  %add = add nsw i32 %61, 1
  %cmp83 = icmp eq i32 %55, %add
  br i1 %cmp83, label %if.then.85, label %if.end.96

if.then.85:                                       ; preds = %cond.end.80
  %62 = load i32, i32* %regno, align 4
  %63 = load i32, i32* @cached_regno, align 4
  %cmp86 = icmp eq i32 %62, %63
  br i1 %cmp86, label %land.lhs.true.88, label %cond.false.91

land.lhs.true.88:                                 ; preds = %if.then.85
  %64 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool89 = icmp ne %struct.cse_reg_info* %64, null
  br i1 %tobool89, label %cond.true.90, label %cond.false.91

cond.true.90:                                     ; preds = %land.lhs.true.88
  %65 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.93

cond.false.91:                                    ; preds = %land.lhs.true.88, %if.then.85
  %66 = load i32, i32* %regno, align 4
  %call92 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %66)
  br label %cond.end.93

cond.end.93:                                      ; preds = %cond.false.91, %cond.true.90
  %cond94 = phi %struct.cse_reg_info* [ %65, %cond.true.90 ], [ %call92, %cond.false.91 ]
  %reg_tick95 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond94, i32 0, i32 4
  %67 = load i32, i32* %reg_tick95, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %reg_tick95, align 4
  br label %if.end.96

if.end.96:                                        ; preds = %cond.end.93, %cond.end.80, %cond.end.59, %if.end.49
  %68 = load i32, i32* %regno, align 4
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %70 = bitcast %struct.rtx_def* %69 to i32*
  %bf.load97 = load i32, i32* %70, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  call void @make_new_qty(i32 %68, i32 %bf.clear99)
  store i32 1, i32* %retval
  br label %return

if.end.100:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %72 = bitcast %struct.rtx_def* %71 to i32*
  %bf.load101 = load i32, i32* %72, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 63
  br i1 %cmp103, label %land.lhs.true.105, label %if.else.149

land.lhs.true.105:                                ; preds = %if.else
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %75 = bitcast %struct.rtx_def* %74 to i32*
  %bf.load108 = load i32, i32* %75, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 61
  br i1 %cmp110, label %land.lhs.true.112, label %if.else.149

land.lhs.true.112:                                ; preds = %land.lhs.true.105
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i32 0, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rtx115, align 8
  %fld116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i32 0, i64 0
  %rtuint118 = bitcast %union.rtunion_def* %arrayidx117 to i32*
  %78 = load i32, i32* %rtuint118, align 4
  %79 = load i32, i32* @cached_regno, align 4
  %cmp119 = icmp eq i32 %78, %79
  br i1 %cmp119, label %land.lhs.true.121, label %cond.false.124

land.lhs.true.121:                                ; preds = %land.lhs.true.112
  %80 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool122 = icmp ne %struct.cse_reg_info* %80, null
  br i1 %tobool122, label %cond.true.123, label %cond.false.124

cond.true.123:                                    ; preds = %land.lhs.true.121
  %81 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.132

cond.false.124:                                   ; preds = %land.lhs.true.121, %land.lhs.true.112
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rtx127, align 8
  %fld128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i32 0, i64 0
  %rtuint130 = bitcast %union.rtunion_def* %arrayidx129 to i32*
  %84 = load i32, i32* %rtuint130, align 4
  %call131 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %84)
  br label %cond.end.132

cond.end.132:                                     ; preds = %cond.false.124, %cond.true.123
  %cond133 = phi %struct.cse_reg_info* [ %81, %cond.true.123 ], [ %call131, %cond.false.124 ]
  %reg_qty134 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond133, i32 0, i32 3
  %85 = load i32, i32* %reg_qty134, align 4
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rtx137, align 8
  %fld138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i32 0, i64 0
  %rtuint140 = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %88 = load i32, i32* %rtuint140, align 4
  %cmp141 = icmp ne i32 %85, %88
  br i1 %cmp141, label %if.else.149, label %if.then.143

if.then.143:                                      ; preds = %cond.end.132
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i32 0, i64 0
  %rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rtx146, align 8
  %call147 = call i32 @insert_regs(%struct.rtx_def* %90, %struct.table_elt* null, i32 0)
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call148 = call i32 @mention_regs(%struct.rtx_def* %91)
  store i32 1, i32* %retval
  br label %return

if.else.149:                                      ; preds = %cond.end.132, %land.lhs.true.105, %if.else
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call150 = call i32 @mention_regs(%struct.rtx_def* %92)
  store i32 %call150, i32* %retval
  br label %return

return:                                           ; preds = %if.else.149, %if.then.143, %if.end.100, %if.end.96, %if.then.43, %if.then.20
  %93 = load i32, i32* %retval
  ret i32 %93
}

; Function Attrs: nounwind uwtable
define internal void @rehash_using_reg(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %hash = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load1 = load i32, i32* %5, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp ne i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then.42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %7 = load i32, i32* %rtuint, align 4
  %8 = load i32, i32* @cached_regno, align 4
  %cmp6 = icmp eq i32 %7, %8
  br i1 %cmp6, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %9, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i32 0, i64 0
  %rtuint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %12 = load i32, i32* %rtuint9, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %12)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %10, %cond.true ], [ %call, %cond.false ]
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 5
  %13 = load i32, i32* %reg_in_table, align 4
  %cmp10 = icmp slt i32 %13, 0
  br i1 %cmp10, label %if.then.42, label %lor.lhs.false.11

lor.lhs.false.11:                                 ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 0
  %rtuint14 = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %15 = load i32, i32* %rtuint14, align 4
  %16 = load i32, i32* @cached_regno, align 4
  %cmp15 = icmp eq i32 %15, %16
  br i1 %cmp15, label %land.lhs.true.16, label %cond.false.19

land.lhs.true.16:                                 ; preds = %lor.lhs.false.11
  %17 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool17 = icmp ne %struct.cse_reg_info* %17, null
  br i1 %tobool17, label %cond.true.18, label %cond.false.19

cond.true.18:                                     ; preds = %land.lhs.true.16
  %18 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.24

cond.false.19:                                    ; preds = %land.lhs.true.16, %lor.lhs.false.11
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i32 0, i64 0
  %rtuint22 = bitcast %union.rtunion_def* %arrayidx21 to i32*
  %20 = load i32, i32* %rtuint22, align 4
  %call23 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %20)
  br label %cond.end.24

cond.end.24:                                      ; preds = %cond.false.19, %cond.true.18
  %cond25 = phi %struct.cse_reg_info* [ %18, %cond.true.18 ], [ %call23, %cond.false.19 ]
  %reg_in_table26 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond25, i32 0, i32 5
  %21 = load i32, i32* %reg_in_table26, align 4
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 0
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %23 = load i32, i32* %rtuint29, align 4
  %24 = load i32, i32* @cached_regno, align 4
  %cmp30 = icmp eq i32 %23, %24
  br i1 %cmp30, label %land.lhs.true.31, label %cond.false.34

land.lhs.true.31:                                 ; preds = %cond.end.24
  %25 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool32 = icmp ne %struct.cse_reg_info* %25, null
  br i1 %tobool32, label %cond.true.33, label %cond.false.34

cond.true.33:                                     ; preds = %land.lhs.true.31
  %26 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.39

cond.false.34:                                    ; preds = %land.lhs.true.31, %cond.end.24
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i32 0, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %28 = load i32, i32* %rtuint37, align 4
  %call38 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %28)
  br label %cond.end.39

cond.end.39:                                      ; preds = %cond.false.34, %cond.true.33
  %cond40 = phi %struct.cse_reg_info* [ %26, %cond.true.33 ], [ %call38, %cond.false.34 ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond40, i32 0, i32 4
  %29 = load i32, i32* %reg_tick, align 4
  %cmp41 = icmp ne i32 %21, %29
  br i1 %cmp41, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %cond.end.39, %cond.end, %if.end
  br label %for.end.98

if.end.43:                                        ; preds = %cond.end.39
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.97, %if.end.43
  %30 = load i32, i32* %i, align 4
  %cmp44 = icmp ult i32 %30, 32
  br i1 %cmp44, label %for.body, label %for.end.98

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %i, align 4
  %idxprom = zext i32 %31 to i64
  %arrayidx45 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %32 = load %struct.table_elt*, %struct.table_elt** %arrayidx45, align 8
  store %struct.table_elt* %32, %struct.table_elt** %p, align 8
  br label %for.cond.46

for.cond.46:                                      ; preds = %for.inc, %for.body
  %33 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool47 = icmp ne %struct.table_elt* %33, null
  br i1 %tobool47, label %for.body.48, label %for.end

for.body.48:                                      ; preds = %for.cond.46
  %34 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %34, i32 0, i32 2
  %35 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %35, %struct.table_elt** %next, align 8
  %36 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %36, i32 0, i32 0
  %37 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load49 = load i32, i32* %38, align 8
  %bf.clear50 = and i32 %bf.load49, 65535
  %cmp51 = icmp ne i32 %bf.clear50, 61
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.96

land.lhs.true.52:                                 ; preds = %for.body.48
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %40 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp53 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %40, i32 0, i32 0
  %41 = load %struct.rtx_def*, %struct.rtx_def** %exp53, align 8
  %call54 = call i32 @reg_mentioned_p(%struct.rtx_def* %39, %struct.rtx_def* %41)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %land.lhs.true.56, label %if.end.96

land.lhs.true.56:                                 ; preds = %land.lhs.true.52
  %42 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp57 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %42, i32 0, i32 0
  %43 = load %struct.rtx_def*, %struct.rtx_def** %exp57, align 8
  %44 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp58 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %44, i32 0, i32 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp58, align 8
  %call59 = call i32 @exp_equiv_p(%struct.rtx_def* %43, %struct.rtx_def* %45, i32 1, i32 0)
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %land.lhs.true.61, label %if.end.96

land.lhs.true.61:                                 ; preds = %land.lhs.true.56
  %46 = load i32, i32* %i, align 4
  %47 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp62 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 0
  %48 = load %struct.rtx_def*, %struct.rtx_def** %exp62, align 8
  %49 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %mode = getelementptr inbounds %struct.table_elt, %struct.table_elt* %49, i32 0, i32 10
  %50 = load i32, i32* %mode, align 4
  %call63 = call i32 @safe_hash(%struct.rtx_def* %48, i32 %50)
  %and = and i32 %call63, 31
  store i32 %and, i32* %hash, align 4
  %cmp64 = icmp ne i32 %46, %and
  br i1 %cmp64, label %if.then.65, label %if.end.96

if.then.65:                                       ; preds = %land.lhs.true.61
  %51 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash66 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %51, i32 0, i32 2
  %52 = load %struct.table_elt*, %struct.table_elt** %next_same_hash66, align 8
  %tobool67 = icmp ne %struct.table_elt* %52, null
  br i1 %tobool67, label %if.then.68, label %if.end.71

if.then.68:                                       ; preds = %if.then.65
  %53 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %53, i32 0, i32 3
  %54 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash, align 8
  %55 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash69 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 2
  %56 = load %struct.table_elt*, %struct.table_elt** %next_same_hash69, align 8
  %prev_same_hash70 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %56, i32 0, i32 3
  store %struct.table_elt* %54, %struct.table_elt** %prev_same_hash70, align 8
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.68, %if.then.65
  %57 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %prev_same_hash72 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %57, i32 0, i32 3
  %58 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash72, align 8
  %tobool73 = icmp ne %struct.table_elt* %58, null
  br i1 %tobool73, label %if.then.74, label %if.else

if.then.74:                                       ; preds = %if.end.71
  %59 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash75 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %59, i32 0, i32 2
  %60 = load %struct.table_elt*, %struct.table_elt** %next_same_hash75, align 8
  %61 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %prev_same_hash76 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %61, i32 0, i32 3
  %62 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash76, align 8
  %next_same_hash77 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %62, i32 0, i32 2
  store %struct.table_elt* %60, %struct.table_elt** %next_same_hash77, align 8
  br label %if.end.81

if.else:                                          ; preds = %if.end.71
  %63 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash78 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %63, i32 0, i32 2
  %64 = load %struct.table_elt*, %struct.table_elt** %next_same_hash78, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom79 = zext i32 %65 to i64
  %arrayidx80 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom79
  store %struct.table_elt* %64, %struct.table_elt** %arrayidx80, align 8
  br label %if.end.81

if.end.81:                                        ; preds = %if.else, %if.then.74
  %66 = load i32, i32* %hash, align 4
  %idxprom82 = zext i32 %66 to i64
  %arrayidx83 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom82
  %67 = load %struct.table_elt*, %struct.table_elt** %arrayidx83, align 8
  %68 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash84 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %68, i32 0, i32 2
  store %struct.table_elt* %67, %struct.table_elt** %next_same_hash84, align 8
  %69 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %prev_same_hash85 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %69, i32 0, i32 3
  store %struct.table_elt* null, %struct.table_elt** %prev_same_hash85, align 8
  %70 = load i32, i32* %hash, align 4
  %idxprom86 = zext i32 %70 to i64
  %arrayidx87 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom86
  %71 = load %struct.table_elt*, %struct.table_elt** %arrayidx87, align 8
  %tobool88 = icmp ne %struct.table_elt* %71, null
  br i1 %tobool88, label %if.then.89, label %if.end.93

if.then.89:                                       ; preds = %if.end.81
  %72 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %73 = load i32, i32* %hash, align 4
  %idxprom90 = zext i32 %73 to i64
  %arrayidx91 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom90
  %74 = load %struct.table_elt*, %struct.table_elt** %arrayidx91, align 8
  %prev_same_hash92 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %74, i32 0, i32 3
  store %struct.table_elt* %72, %struct.table_elt** %prev_same_hash92, align 8
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.89, %if.end.81
  %75 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %76 = load i32, i32* %hash, align 4
  %idxprom94 = zext i32 %76 to i64
  %arrayidx95 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom94
  store %struct.table_elt* %75, %struct.table_elt** %arrayidx95, align 8
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.93, %land.lhs.true.61, %land.lhs.true.56, %land.lhs.true.52, %for.body.48
  br label %for.inc

for.inc:                                          ; preds = %if.end.96
  %77 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %77, %struct.table_elt** %p, align 8
  br label %for.cond.46

for.end:                                          ; preds = %for.cond.46
  br label %for.inc.97

for.inc.97:                                       ; preds = %for.end
  %78 = load i32, i32* %i, align 4
  %inc = add i32 %78, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.98:                                       ; preds = %if.then.42, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.table_elt* @insert(%struct.rtx_def* %x, %struct.table_elt* %classp, i32 %hash, i32 %mode) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %classp.addr = alloca %struct.table_elt*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %p260 = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %exp_q = alloca i32, align 4
  %exp_ent = alloca %struct.qty_table_elem*, align 8
  %p357 = alloca %struct.table_elt*, align 8
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %subexp = alloca %struct.rtx_def*, align 8
  %subhash = alloca i32, align 4
  %subelt = alloca %struct.table_elt*, align 8
  %subelt_prev = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  store i32 %hash, i32* %hash.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32, i32* %rtuint, align 4
  %4 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %3, %4
  br i1 %cmp1, label %land.lhs.true.2, label %cond.false

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.2
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.2, %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i32 0, i64 0
  %rtuint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %8 = load i32, i32* %rtuint5, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %6, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %9 = load i32, i32* %reg_qty, align 4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i32 0, i64 0
  %rtuint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %11 = load i32, i32* %rtuint8, align 4
  %cmp9 = icmp ne i32 %9, %11
  br i1 %cmp9, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 1565, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__FUNCTION__.insert, i32 0, i32 0)) #7
  unreachable

if.end:                                           ; preds = %cond.end, %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load10 = load i32, i32* %13, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 61
  br i1 %cmp12, label %land.lhs.true.13, label %if.end.86

land.lhs.true.13:                                 ; preds = %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i32 0, i64 0
  %rtuint16 = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %15 = load i32, i32* %rtuint16, align 4
  %cmp17 = icmp ult i32 %15, 53
  br i1 %cmp17, label %if.then.18, label %if.end.86

if.then.18:                                       ; preds = %land.lhs.true.13
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtuint21 = bitcast %union.rtunion_def* %arrayidx20 to i32*
  %17 = load i32, i32* %rtuint21, align 4
  store i32 %17, i32* %regno, align 4
  %18 = load i32, i32* %regno, align 4
  %19 = load i32, i32* %regno, align 4
  %cmp22 = icmp uge i32 %19, 8
  br i1 %cmp22, label %land.lhs.true.23, label %lor.lhs.false

land.lhs.true.23:                                 ; preds = %if.then.18
  %20 = load i32, i32* %regno, align 4
  %cmp24 = icmp ule i32 %20, 15
  br i1 %cmp24, label %cond.true.36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.23, %if.then.18
  %21 = load i32, i32* %regno, align 4
  %cmp25 = icmp uge i32 %21, 21
  br i1 %cmp25, label %land.lhs.true.26, label %lor.lhs.false.28

land.lhs.true.26:                                 ; preds = %lor.lhs.false
  %22 = load i32, i32* %regno, align 4
  %cmp27 = icmp ule i32 %22, 28
  br i1 %cmp27, label %cond.true.36, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %land.lhs.true.26, %lor.lhs.false
  %23 = load i32, i32* %regno, align 4
  %cmp29 = icmp uge i32 %23, 45
  br i1 %cmp29, label %land.lhs.true.30, label %lor.lhs.false.32

land.lhs.true.30:                                 ; preds = %lor.lhs.false.28
  %24 = load i32, i32* %regno, align 4
  %cmp31 = icmp ule i32 %24, 52
  br i1 %cmp31, label %cond.true.36, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %land.lhs.true.30, %lor.lhs.false.28
  %25 = load i32, i32* %regno, align 4
  %cmp33 = icmp uge i32 %25, 29
  br i1 %cmp33, label %land.lhs.true.34, label %cond.false.48

land.lhs.true.34:                                 ; preds = %lor.lhs.false.32
  %26 = load i32, i32* %regno, align 4
  %cmp35 = icmp ule i32 %26, 36
  br i1 %cmp35, label %cond.true.36, label %cond.false.48

cond.true.36:                                     ; preds = %land.lhs.true.34, %land.lhs.true.30, %land.lhs.true.26, %land.lhs.true.23
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %28 = bitcast %struct.rtx_def* %27 to i32*
  %bf.load37 = load i32, i32* %28, align 8
  %bf.lshr = lshr i32 %bf.load37, 16
  %bf.clear38 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear38 to i64
  %arrayidx39 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %29 = load i32, i32* %arrayidx39, align 4
  %cmp40 = icmp eq i32 %29, 5
  br i1 %cmp40, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.36
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load41 = load i32, i32* %31, align 8
  %bf.lshr42 = lshr i32 %bf.load41, 16
  %bf.clear43 = and i32 %bf.lshr42, 255
  %idxprom44 = sext i32 %bf.clear43 to i64
  %arrayidx45 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom44
  %32 = load i32, i32* %arrayidx45, align 4
  %cmp46 = icmp eq i32 %32, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.36
  %33 = phi i1 [ true, %cond.true.36 ], [ %cmp46, %lor.rhs ]
  %cond47 = select i1 %33, i32 2, i32 1
  br label %cond.end.81

cond.false.48:                                    ; preds = %land.lhs.true.34, %lor.lhs.false.32
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load49 = load i32, i32* %35, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %cmp52 = icmp eq i32 %bf.clear51, 18
  br i1 %cmp52, label %cond.true.53, label %cond.false.56

cond.true.53:                                     ; preds = %cond.false.48
  %36 = load i32, i32* @target_flags, align 4
  %and = and i32 %36, 33554432
  %tobool54 = icmp ne i32 %and, 0
  %cond55 = select i1 %tobool54, i32 2, i32 3
  br label %cond.end.79

cond.false.56:                                    ; preds = %cond.false.48
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %38 = bitcast %struct.rtx_def* %37 to i32*
  %bf.load57 = load i32, i32* %38, align 8
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 24
  br i1 %cmp60, label %cond.true.61, label %cond.false.65

cond.true.61:                                     ; preds = %cond.false.56
  %39 = load i32, i32* @target_flags, align 4
  %and62 = and i32 %39, 33554432
  %tobool63 = icmp ne i32 %and62, 0
  %cond64 = select i1 %tobool63, i32 4, i32 6
  br label %cond.end.77

cond.false.65:                                    ; preds = %cond.false.56
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %41 = bitcast %struct.rtx_def* %40 to i32*
  %bf.load66 = load i32, i32* %41, align 8
  %bf.lshr67 = lshr i32 %bf.load66, 16
  %bf.clear68 = and i32 %bf.lshr67, 255
  %idxprom69 = sext i32 %bf.clear68 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom69
  %42 = load i8, i8* %arrayidx70, align 1
  %conv = zext i8 %42 to i32
  %43 = load i32, i32* @target_flags, align 4
  %and71 = and i32 %43, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  %cond73 = select i1 %tobool72, i32 8, i32 4
  %add = add nsw i32 %conv, %cond73
  %sub = sub nsw i32 %add, 1
  %44 = load i32, i32* @target_flags, align 4
  %and74 = and i32 %44, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  %cond76 = select i1 %tobool75, i32 8, i32 4
  %div = sdiv i32 %sub, %cond76
  br label %cond.end.77

cond.end.77:                                      ; preds = %cond.false.65, %cond.true.61
  %cond78 = phi i32 [ %cond64, %cond.true.61 ], [ %div, %cond.false.65 ]
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.end.77, %cond.true.53
  %cond80 = phi i32 [ %cond55, %cond.true.53 ], [ %cond78, %cond.end.77 ]
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.end.79, %lor.end
  %cond82 = phi i32 [ %cond47, %lor.end ], [ %cond80, %cond.end.79 ]
  %add83 = add i32 %18, %cond82
  store i32 %add83, i32* %endregno, align 4
  %45 = load i32, i32* %regno, align 4
  store i32 %45, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.81
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %endregno, align 4
  %cmp84 = icmp ult i32 %46, %47
  br i1 %cmp84, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4
  %sh_prom = zext i32 %48 to i64
  %shl = shl i64 1, %sh_prom
  %49 = load i64, i64* @hard_regs_in_table, align 8
  %or = or i64 %49, %shl
  store i64 %or, i64* @hard_regs_in_table, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4
  %inc = add i32 %50, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.86

if.end.86:                                        ; preds = %for.end, %land.lhs.true.13, %if.end
  %51 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8
  store %struct.table_elt* %51, %struct.table_elt** %elt, align 8
  %52 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool87 = icmp ne %struct.table_elt* %52, null
  br i1 %tobool87, label %if.then.88, label %if.else

if.then.88:                                       ; preds = %if.end.86
  %53 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %53, i32 0, i32 2
  %54 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %54, %struct.table_elt** @free_element_chain, align 8
  br label %if.end.91

if.else:                                          ; preds = %if.end.86
  %55 = load i32, i32* @n_elements_made, align 4
  %inc89 = add nsw i32 %55, 1
  store i32 %inc89, i32* @n_elements_made, align 4
  %call90 = call noalias i8* @xmalloc(i64 80)
  %56 = bitcast i8* %call90 to %struct.table_elt*
  store %struct.table_elt* %56, %struct.table_elt** %elt, align 8
  br label %if.end.91

if.end.91:                                        ; preds = %if.else, %if.then.88
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %58 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %58, i32 0, i32 0
  store %struct.rtx_def* %57, %struct.rtx_def** %exp, align 8
  %59 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %canon_exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %59, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %canon_exp, align 8
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %61 = bitcast %struct.rtx_def* %60 to i32*
  %bf.load92 = load i32, i32* %61, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 61
  br i1 %cmp94, label %cond.true.96, label %cond.false.97

cond.true.96:                                     ; preds = %if.end.91
  br label %cond.end.99

cond.false.97:                                    ; preds = %if.end.91
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call98 = call i32 @notreg_cost(%struct.rtx_def* %62, i32 47)
  br label %cond.end.99

cond.end.99:                                      ; preds = %cond.false.97, %cond.true.96
  %cond100 = phi i32 [ 0, %cond.true.96 ], [ %call98, %cond.false.97 ]
  %63 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %63, i32 0, i32 8
  store i32 %cond100, i32* %cost, align 4
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call101 = call i32 @approx_reg_cost(%struct.rtx_def* %64)
  %65 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %regcost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %65, i32 0, i32 9
  store i32 %call101, i32* %regcost, align 4
  %66 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %66, i32 0, i32 4
  store %struct.table_elt* null, %struct.table_elt** %next_same_value, align 8
  %67 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %67, i32 0, i32 5
  store %struct.table_elt* null, %struct.table_elt** %prev_same_value, align 8
  %68 = load i32, i32* %hash.addr, align 4
  %idxprom102 = zext i32 %68 to i64
  %arrayidx103 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom102
  %69 = load %struct.table_elt*, %struct.table_elt** %arrayidx103, align 8
  %70 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_hash104 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %70, i32 0, i32 2
  store %struct.table_elt* %69, %struct.table_elt** %next_same_hash104, align 8
  %71 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %71, i32 0, i32 3
  store %struct.table_elt* null, %struct.table_elt** %prev_same_hash, align 8
  %72 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %72, i32 0, i32 7
  store %struct.table_elt* null, %struct.table_elt** %related_value, align 8
  %73 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %73, i32 0, i32 11
  store i8 0, i8* %in_memory, align 1
  %74 = load i32, i32* %mode.addr, align 4
  %75 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %mode105 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %75, i32 0, i32 10
  store i32 %74, i32* %mode105, align 4
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load106 = load i32, i32* %77, align 8
  %bf.clear107 = and i32 %bf.load106, 65535
  %cmp108 = icmp eq i32 %bf.clear107, 67
  br i1 %cmp108, label %lor.end.227, label %lor.lhs.false.110

lor.lhs.false.110:                                ; preds = %cond.end.99
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %79 = bitcast %struct.rtx_def* %78 to i32*
  %bf.load111 = load i32, i32* %79, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 68
  br i1 %cmp113, label %lor.end.227, label %lor.lhs.false.115

lor.lhs.false.115:                                ; preds = %lor.lhs.false.110
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %81 = bitcast %struct.rtx_def* %80 to i32*
  %bf.load116 = load i32, i32* %81, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 54
  br i1 %cmp118, label %lor.end.227, label %lor.lhs.false.120

lor.lhs.false.120:                                ; preds = %lor.lhs.false.115
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %83 = bitcast %struct.rtx_def* %82 to i32*
  %bf.load121 = load i32, i32* %83, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 55
  br i1 %cmp123, label %lor.end.227, label %lor.lhs.false.125

lor.lhs.false.125:                                ; preds = %lor.lhs.false.120
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %85 = bitcast %struct.rtx_def* %84 to i32*
  %bf.load126 = load i32, i32* %85, align 8
  %bf.clear127 = and i32 %bf.load126, 65535
  %cmp128 = icmp eq i32 %bf.clear127, 58
  br i1 %cmp128, label %lor.end.227, label %lor.lhs.false.130

lor.lhs.false.130:                                ; preds = %lor.lhs.false.125
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %87 = bitcast %struct.rtx_def* %86 to i32*
  %bf.load131 = load i32, i32* %87, align 8
  %bf.clear132 = and i32 %bf.load131, 65535
  %cmp133 = icmp eq i32 %bf.clear132, 134
  br i1 %cmp133, label %lor.end.227, label %lor.lhs.false.135

lor.lhs.false.135:                                ; preds = %lor.lhs.false.130
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %89 = bitcast %struct.rtx_def* %88 to i32*
  %bf.load136 = load i32, i32* %89, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %cmp138 = icmp eq i32 %bf.clear137, 56
  br i1 %cmp138, label %lor.end.227, label %lor.lhs.false.140

lor.lhs.false.140:                                ; preds = %lor.lhs.false.135
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %91 = bitcast %struct.rtx_def* %90 to i32*
  %bf.load141 = load i32, i32* %91, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  %cmp143 = icmp eq i32 %bf.clear142, 140
  br i1 %cmp143, label %lor.end.227, label %lor.lhs.false.145

lor.lhs.false.145:                                ; preds = %lor.lhs.false.140
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load146 = load i32, i32* %93, align 8
  %bf.lshr147 = lshr i32 %bf.load146, 26
  %bf.clear148 = and i32 %bf.lshr147, 1
  %tobool149 = icmp ne i32 %bf.clear148, 0
  br i1 %tobool149, label %land.lhs.true.150, label %lor.rhs.161

land.lhs.true.150:                                ; preds = %lor.lhs.false.145
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %95 = bitcast %struct.rtx_def* %94 to i32*
  %bf.load151 = load i32, i32* %95, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 61
  br i1 %cmp153, label %land.lhs.true.155, label %lor.rhs.161

land.lhs.true.155:                                ; preds = %land.lhs.true.150
  %96 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtuint158 = bitcast %union.rtunion_def* %arrayidx157 to i32*
  %97 = load i32, i32* %rtuint158, align 4
  %cmp159 = icmp uge i32 %97, 53
  br i1 %cmp159, label %lor.end.227, label %lor.rhs.161

lor.rhs.161:                                      ; preds = %land.lhs.true.155, %land.lhs.true.150, %lor.lhs.false.145
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %99 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp162 = icmp eq %struct.rtx_def* %98, %99
  br i1 %cmp162, label %lor.end.226, label %lor.lhs.false.164

lor.lhs.false.164:                                ; preds = %lor.rhs.161
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %101 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp165 = icmp eq %struct.rtx_def* %100, %101
  br i1 %cmp165, label %lor.end.226, label %lor.lhs.false.167

lor.lhs.false.167:                                ; preds = %lor.lhs.false.164
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %103 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp168 = icmp eq %struct.rtx_def* %102, %103
  br i1 %cmp168, label %land.lhs.true.170, label %lor.lhs.false.173

land.lhs.true.170:                                ; preds = %lor.lhs.false.167
  %104 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv171 = sext i8 %104 to i32
  %tobool172 = icmp ne i32 %conv171, 0
  br i1 %tobool172, label %lor.end.226, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %land.lhs.true.170, %lor.lhs.false.167
  %105 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %106 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp174 = icmp eq %struct.rtx_def* %105, %106
  br i1 %cmp174, label %lor.end.226, label %lor.lhs.false.176

lor.lhs.false.176:                                ; preds = %lor.lhs.false.173
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %108 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp177 = icmp eq %struct.rtx_def* %107, %108
  br i1 %cmp177, label %lor.end.226, label %lor.lhs.false.179

lor.lhs.false.179:                                ; preds = %lor.lhs.false.176
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %110 = bitcast %struct.rtx_def* %109 to i32*
  %bf.load180 = load i32, i32* %110, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %cmp182 = icmp eq i32 %bf.clear181, 75
  br i1 %cmp182, label %land.lhs.true.184, label %lor.rhs.221

land.lhs.true.184:                                ; preds = %lor.lhs.false.179
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i32 0, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load187 = load i32, i32* %113, align 8
  %bf.clear188 = and i32 %bf.load187, 65535
  %cmp189 = icmp eq i32 %bf.clear188, 54
  br i1 %cmp189, label %land.lhs.true.191, label %lor.rhs.221

land.lhs.true.191:                                ; preds = %land.lhs.true.184
  %114 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 0
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  %116 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 3), align 8
  %cmp195 = icmp eq %struct.rtx_def* %115, %116
  br i1 %cmp195, label %lor.end.226, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %land.lhs.true.191
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i32 0, i64 0
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rtx200, align 8
  %119 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 4), align 8
  %cmp201 = icmp eq %struct.rtx_def* %118, %119
  br i1 %cmp201, label %lor.end.226, label %lor.lhs.false.203

lor.lhs.false.203:                                ; preds = %lor.lhs.false.197
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %121 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 5), align 8
  %cmp204 = icmp eq %struct.rtx_def* %120, %121
  br i1 %cmp204, label %land.lhs.true.206, label %lor.lhs.false.209

land.lhs.true.206:                                ; preds = %lor.lhs.false.203
  %122 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 16), align 1
  %conv207 = sext i8 %122 to i32
  %tobool208 = icmp ne i32 %conv207, 0
  br i1 %tobool208, label %lor.end.226, label %lor.lhs.false.209

lor.lhs.false.209:                                ; preds = %land.lhs.true.206, %lor.lhs.false.203
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i32 0, i64 0
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rtx212, align 8
  %125 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 7), align 8
  %cmp213 = icmp eq %struct.rtx_def* %124, %125
  br i1 %cmp213, label %lor.end.226, label %lor.lhs.false.215

lor.lhs.false.215:                                ; preds = %lor.lhs.false.209
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1
  %arrayidx217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i32 0, i64 0
  %rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rtx218, align 8
  %128 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 6), align 8
  %cmp219 = icmp eq %struct.rtx_def* %127, %128
  br i1 %cmp219, label %lor.end.226, label %lor.rhs.221

lor.rhs.221:                                      ; preds = %lor.lhs.false.215, %land.lhs.true.184, %lor.lhs.false.179
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load222 = load i32, i32* %130, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 70
  br label %lor.end.226

lor.end.226:                                      ; preds = %lor.rhs.221, %lor.lhs.false.215, %lor.lhs.false.209, %land.lhs.true.206, %lor.lhs.false.197, %land.lhs.true.191, %lor.lhs.false.176, %lor.lhs.false.173, %land.lhs.true.170, %lor.lhs.false.164, %lor.rhs.161
  %131 = phi i1 [ true, %lor.lhs.false.215 ], [ true, %lor.lhs.false.209 ], [ true, %land.lhs.true.206 ], [ true, %lor.lhs.false.197 ], [ true, %land.lhs.true.191 ], [ true, %lor.lhs.false.176 ], [ true, %lor.lhs.false.173 ], [ true, %land.lhs.true.170 ], [ true, %lor.lhs.false.164 ], [ true, %lor.rhs.161 ], [ %cmp224, %lor.rhs.221 ]
  br label %lor.end.227

lor.end.227:                                      ; preds = %lor.end.226, %land.lhs.true.155, %lor.lhs.false.140, %lor.lhs.false.135, %lor.lhs.false.130, %lor.lhs.false.125, %lor.lhs.false.120, %lor.lhs.false.115, %lor.lhs.false.110, %cond.end.99
  %132 = phi i1 [ true, %land.lhs.true.155 ], [ true, %lor.lhs.false.140 ], [ true, %lor.lhs.false.135 ], [ true, %lor.lhs.false.130 ], [ true, %lor.lhs.false.125 ], [ true, %lor.lhs.false.120 ], [ true, %lor.lhs.false.115 ], [ true, %lor.lhs.false.110 ], [ true, %cond.end.99 ], [ %131, %lor.end.226 ]
  %lor.ext = zext i1 %132 to i32
  %conv228 = trunc i32 %lor.ext to i8
  %133 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %133, i32 0, i32 12
  store i8 %conv228, i8* %is_const, align 1
  %134 = load i32, i32* %hash.addr, align 4
  %idxprom229 = zext i32 %134 to i64
  %arrayidx230 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom229
  %135 = load %struct.table_elt*, %struct.table_elt** %arrayidx230, align 8
  %tobool231 = icmp ne %struct.table_elt* %135, null
  br i1 %tobool231, label %if.then.232, label %if.end.236

if.then.232:                                      ; preds = %lor.end.227
  %136 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %137 = load i32, i32* %hash.addr, align 4
  %idxprom233 = zext i32 %137 to i64
  %arrayidx234 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom233
  %138 = load %struct.table_elt*, %struct.table_elt** %arrayidx234, align 8
  %prev_same_hash235 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %138, i32 0, i32 3
  store %struct.table_elt* %136, %struct.table_elt** %prev_same_hash235, align 8
  br label %if.end.236

if.end.236:                                       ; preds = %if.then.232, %lor.end.227
  %139 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %140 = load i32, i32* %hash.addr, align 4
  %idxprom237 = zext i32 %140 to i64
  %arrayidx238 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom237
  store %struct.table_elt* %139, %struct.table_elt** %arrayidx238, align 8
  %141 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %tobool239 = icmp ne %struct.table_elt* %141, null
  br i1 %tobool239, label %if.then.240, label %if.else.283

if.then.240:                                      ; preds = %if.end.236
  %142 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %142, i32 0, i32 6
  %143 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %143, %struct.table_elt** %classp.addr, align 8
  %144 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cost241 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %144, i32 0, i32 8
  %145 = load i32, i32* %cost241, align 4
  %146 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %regcost242 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %146, i32 0, i32 9
  %147 = load i32, i32* %regcost242, align 4
  %148 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %cost243 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %148, i32 0, i32 8
  %149 = load i32, i32* %cost243, align 4
  %150 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %regcost244 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %150, i32 0, i32 9
  %151 = load i32, i32* %regcost244, align 4
  %call245 = call i32 @preferrable(i32 %145, i32 %147, i32 %149, i32 %151)
  %cmp246 = icmp slt i32 %call245, 0
  br i1 %cmp246, label %if.then.248, label %if.else.259

if.then.248:                                      ; preds = %if.then.240
  %152 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %153 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value249 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %153, i32 0, i32 4
  store %struct.table_elt* %152, %struct.table_elt** %next_same_value249, align 8
  %154 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %155 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %prev_same_value250 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %155, i32 0, i32 5
  store %struct.table_elt* %154, %struct.table_elt** %prev_same_value250, align 8
  %156 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %157 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value251 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %157, i32 0, i32 6
  store %struct.table_elt* %156, %struct.table_elt** %first_same_value251, align 8
  %158 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  store %struct.table_elt* %158, %struct.table_elt** %p, align 8
  br label %for.cond.252

for.cond.252:                                     ; preds = %for.inc.256, %if.then.248
  %159 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool253 = icmp ne %struct.table_elt* %159, null
  br i1 %tobool253, label %for.body.254, label %for.end.258

for.body.254:                                     ; preds = %for.cond.252
  %160 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %161 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %first_same_value255 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %161, i32 0, i32 6
  store %struct.table_elt* %160, %struct.table_elt** %first_same_value255, align 8
  br label %for.inc.256

for.inc.256:                                      ; preds = %for.body.254
  %162 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_value257 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %162, i32 0, i32 4
  %163 = load %struct.table_elt*, %struct.table_elt** %next_same_value257, align 8
  store %struct.table_elt* %163, %struct.table_elt** %p, align 8
  br label %for.cond.252

for.end.258:                                      ; preds = %for.cond.252
  br label %if.end.282

if.else.259:                                      ; preds = %if.then.240
  %164 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  store %struct.table_elt* %164, %struct.table_elt** %p260, align 8
  br label %for.cond.261

for.cond.261:                                     ; preds = %for.inc.272, %if.else.259
  %165 = load %struct.table_elt*, %struct.table_elt** %p260, align 8
  %next_same_value262 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %165, i32 0, i32 4
  %166 = load %struct.table_elt*, %struct.table_elt** %next_same_value262, align 8
  store %struct.table_elt* %166, %struct.table_elt** %next, align 8
  %tobool263 = icmp ne %struct.table_elt* %166, null
  br i1 %tobool263, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.261
  %167 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %cost264 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %167, i32 0, i32 8
  %168 = load i32, i32* %cost264, align 4
  %169 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %regcost265 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %169, i32 0, i32 9
  %170 = load i32, i32* %regcost265, align 4
  %171 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %cost266 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %171, i32 0, i32 8
  %172 = load i32, i32* %cost266, align 4
  %173 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %regcost267 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %173, i32 0, i32 9
  %174 = load i32, i32* %regcost267, align 4
  %call268 = call i32 @preferrable(i32 %168, i32 %170, i32 %172, i32 %174)
  %cmp269 = icmp slt i32 %call268, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.261
  %175 = phi i1 [ false, %for.cond.261 ], [ %cmp269, %land.rhs ]
  br i1 %175, label %for.body.271, label %for.end.273

for.body.271:                                     ; preds = %land.end
  br label %for.inc.272

for.inc.272:                                      ; preds = %for.body.271
  %176 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %176, %struct.table_elt** %p260, align 8
  br label %for.cond.261

for.end.273:                                      ; preds = %land.end
  %177 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %178 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value274 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %178, i32 0, i32 4
  store %struct.table_elt* %177, %struct.table_elt** %next_same_value274, align 8
  %179 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %tobool275 = icmp ne %struct.table_elt* %179, null
  br i1 %tobool275, label %if.then.276, label %if.end.278

if.then.276:                                      ; preds = %for.end.273
  %180 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %181 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  %prev_same_value277 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %181, i32 0, i32 5
  store %struct.table_elt* %180, %struct.table_elt** %prev_same_value277, align 8
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.276, %for.end.273
  %182 = load %struct.table_elt*, %struct.table_elt** %p260, align 8
  %183 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %prev_same_value279 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %183, i32 0, i32 5
  store %struct.table_elt* %182, %struct.table_elt** %prev_same_value279, align 8
  %184 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %185 = load %struct.table_elt*, %struct.table_elt** %p260, align 8
  %next_same_value280 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %185, i32 0, i32 4
  store %struct.table_elt* %184, %struct.table_elt** %next_same_value280, align 8
  %186 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %187 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value281 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %187, i32 0, i32 6
  store %struct.table_elt* %186, %struct.table_elt** %first_same_value281, align 8
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.278, %for.end.258
  br label %if.end.285

if.else.283:                                      ; preds = %if.end.236
  %188 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %189 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %first_same_value284 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %189, i32 0, i32 6
  store %struct.table_elt* %188, %struct.table_elt** %first_same_value284, align 8
  br label %if.end.285

if.end.285:                                       ; preds = %if.else.283, %if.end.282
  %190 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %is_const286 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %190, i32 0, i32 12
  %191 = load i8, i8* %is_const286, align 1
  %conv287 = sext i8 %191 to i32
  %tobool288 = icmp ne i32 %conv287, 0
  br i1 %tobool288, label %land.lhs.true.289, label %if.else.325

land.lhs.true.289:                                ; preds = %if.end.285
  %192 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %tobool290 = icmp ne %struct.table_elt* %192, null
  br i1 %tobool290, label %land.lhs.true.291, label %if.else.325

land.lhs.true.291:                                ; preds = %land.lhs.true.289
  %193 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp292 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %193, i32 0, i32 0
  %194 = load %struct.rtx_def*, %struct.rtx_def** %exp292, align 8
  %195 = bitcast %struct.rtx_def* %194 to i32*
  %bf.load293 = load i32, i32* %195, align 8
  %bf.clear294 = and i32 %bf.load293, 65535
  %cmp295 = icmp eq i32 %bf.clear294, 61
  br i1 %cmp295, label %land.lhs.true.297, label %if.else.325

land.lhs.true.297:                                ; preds = %land.lhs.true.291
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %197 = bitcast %struct.rtx_def* %196 to i32*
  %bf.load298 = load i32, i32* %197, align 8
  %bf.clear299 = and i32 %bf.load298, 65535
  %cmp300 = icmp ne i32 %bf.clear299, 61
  br i1 %cmp300, label %if.then.302, label %if.else.325

if.then.302:                                      ; preds = %land.lhs.true.297
  %198 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp303 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %198, i32 0, i32 0
  %199 = load %struct.rtx_def*, %struct.rtx_def** %exp303, align 8
  %fld304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i32 0, i64 0
  %rtuint306 = bitcast %union.rtunion_def* %arrayidx305 to i32*
  %200 = load i32, i32* %rtuint306, align 4
  %201 = load i32, i32* @cached_regno, align 4
  %cmp307 = icmp eq i32 %200, %201
  br i1 %cmp307, label %land.lhs.true.309, label %cond.false.312

land.lhs.true.309:                                ; preds = %if.then.302
  %202 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool310 = icmp ne %struct.cse_reg_info* %202, null
  br i1 %tobool310, label %cond.true.311, label %cond.false.312

cond.true.311:                                    ; preds = %land.lhs.true.309
  %203 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.318

cond.false.312:                                   ; preds = %land.lhs.true.309, %if.then.302
  %204 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %exp313 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %204, i32 0, i32 0
  %205 = load %struct.rtx_def*, %struct.rtx_def** %exp313, align 8
  %fld314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1
  %arrayidx315 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld314, i32 0, i64 0
  %rtuint316 = bitcast %union.rtunion_def* %arrayidx315 to i32*
  %206 = load i32, i32* %rtuint316, align 4
  %call317 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %206)
  br label %cond.end.318

cond.end.318:                                     ; preds = %cond.false.312, %cond.true.311
  %cond319 = phi %struct.cse_reg_info* [ %203, %cond.true.311 ], [ %call317, %cond.false.312 ]
  %reg_qty320 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond319, i32 0, i32 3
  %207 = load i32, i32* %reg_qty320, align 4
  store i32 %207, i32* %exp_q, align 4
  %208 = load i32, i32* %exp_q, align 4
  %idxprom321 = sext i32 %208 to i64
  %209 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx322 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %209, i64 %idxprom321
  store %struct.qty_table_elem* %arrayidx322, %struct.qty_table_elem** %exp_ent, align 8
  %210 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8
  %mode323 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %210, i32 0, i32 6
  %211 = load i32, i32* %mode323, align 4
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call324 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %211, %struct.rtx_def* %212)
  %213 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %213, i32 0, i32 0
  store %struct.rtx_def* %call324, %struct.rtx_def** %const_rtx, align 8
  %214 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %215 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8
  %const_insn = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %215, i32 0, i32 1
  store %struct.rtx_def* %214, %struct.rtx_def** %const_insn, align 8
  br label %if.end.474

if.else.325:                                      ; preds = %land.lhs.true.297, %land.lhs.true.291, %land.lhs.true.289, %if.end.285
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %217 = bitcast %struct.rtx_def* %216 to i32*
  %bf.load326 = load i32, i32* %217, align 8
  %bf.clear327 = and i32 %bf.load326, 65535
  %cmp328 = icmp eq i32 %bf.clear327, 61
  br i1 %cmp328, label %land.lhs.true.330, label %if.else.401

land.lhs.true.330:                                ; preds = %if.else.325
  %218 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  %tobool331 = icmp ne %struct.table_elt* %218, null
  br i1 %tobool331, label %land.lhs.true.332, label %if.else.401

land.lhs.true.332:                                ; preds = %land.lhs.true.330
  %219 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i32 0, i64 0
  %rtuint335 = bitcast %union.rtunion_def* %arrayidx334 to i32*
  %220 = load i32, i32* %rtuint335, align 4
  %221 = load i32, i32* @cached_regno, align 4
  %cmp336 = icmp eq i32 %220, %221
  br i1 %cmp336, label %land.lhs.true.338, label %cond.false.341

land.lhs.true.338:                                ; preds = %land.lhs.true.332
  %222 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool339 = icmp ne %struct.cse_reg_info* %222, null
  br i1 %tobool339, label %cond.true.340, label %cond.false.341

cond.true.340:                                    ; preds = %land.lhs.true.338
  %223 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.346

cond.false.341:                                   ; preds = %land.lhs.true.338, %land.lhs.true.332
  %224 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1
  %arrayidx343 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld342, i32 0, i64 0
  %rtuint344 = bitcast %union.rtunion_def* %arrayidx343 to i32*
  %225 = load i32, i32* %rtuint344, align 4
  %call345 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %225)
  br label %cond.end.346

cond.end.346:                                     ; preds = %cond.false.341, %cond.true.340
  %cond347 = phi %struct.cse_reg_info* [ %223, %cond.true.340 ], [ %call345, %cond.false.341 ]
  %reg_qty348 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond347, i32 0, i32 3
  %226 = load i32, i32* %reg_qty348, align 4
  %idxprom349 = sext i32 %226 to i64
  %227 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx350 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %227, i64 %idxprom349
  %const_rtx351 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx350, i32 0, i32 0
  %228 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx351, align 8
  %tobool352 = icmp ne %struct.rtx_def* %228, null
  br i1 %tobool352, label %if.else.401, label %land.lhs.true.353

land.lhs.true.353:                                ; preds = %cond.end.346
  %229 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %is_const354 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %229, i32 0, i32 12
  %230 = load i8, i8* %is_const354, align 1
  %tobool355 = icmp ne i8 %230, 0
  br i1 %tobool355, label %if.else.401, label %if.then.356

if.then.356:                                      ; preds = %land.lhs.true.353
  %231 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8
  store %struct.table_elt* %231, %struct.table_elt** %p357, align 8
  br label %for.cond.358

for.cond.358:                                     ; preds = %for.inc.398, %if.then.356
  %232 = load %struct.table_elt*, %struct.table_elt** %p357, align 8
  %cmp359 = icmp ne %struct.table_elt* %232, null
  br i1 %cmp359, label %for.body.361, label %for.end.400

for.body.361:                                     ; preds = %for.cond.358
  %233 = load %struct.table_elt*, %struct.table_elt** %p357, align 8
  %is_const362 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %233, i32 0, i32 12
  %234 = load i8, i8* %is_const362, align 1
  %conv363 = sext i8 %234 to i32
  %tobool364 = icmp ne i32 %conv363, 0
  br i1 %tobool364, label %land.lhs.true.365, label %if.end.397

land.lhs.true.365:                                ; preds = %for.body.361
  %235 = load %struct.table_elt*, %struct.table_elt** %p357, align 8
  %exp366 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %235, i32 0, i32 0
  %236 = load %struct.rtx_def*, %struct.rtx_def** %exp366, align 8
  %237 = bitcast %struct.rtx_def* %236 to i32*
  %bf.load367 = load i32, i32* %237, align 8
  %bf.clear368 = and i32 %bf.load367, 65535
  %cmp369 = icmp ne i32 %bf.clear368, 61
  br i1 %cmp369, label %if.then.371, label %if.end.397

if.then.371:                                      ; preds = %land.lhs.true.365
  %238 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i32 0, i64 0
  %rtuint374 = bitcast %union.rtunion_def* %arrayidx373 to i32*
  %239 = load i32, i32* %rtuint374, align 4
  %240 = load i32, i32* @cached_regno, align 4
  %cmp375 = icmp eq i32 %239, %240
  br i1 %cmp375, label %land.lhs.true.377, label %cond.false.380

land.lhs.true.377:                                ; preds = %if.then.371
  %241 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool378 = icmp ne %struct.cse_reg_info* %241, null
  br i1 %tobool378, label %cond.true.379, label %cond.false.380

cond.true.379:                                    ; preds = %land.lhs.true.377
  %242 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.385

cond.false.380:                                   ; preds = %land.lhs.true.377, %if.then.371
  %243 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i32 0, i64 0
  %rtuint383 = bitcast %union.rtunion_def* %arrayidx382 to i32*
  %244 = load i32, i32* %rtuint383, align 4
  %call384 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %244)
  br label %cond.end.385

cond.end.385:                                     ; preds = %cond.false.380, %cond.true.379
  %cond386 = phi %struct.cse_reg_info* [ %242, %cond.true.379 ], [ %call384, %cond.false.380 ]
  %reg_qty387 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond386, i32 0, i32 3
  %245 = load i32, i32* %reg_qty387, align 4
  store i32 %245, i32* %x_q, align 4
  %246 = load i32, i32* %x_q, align 4
  %idxprom388 = sext i32 %246 to i64
  %247 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx389 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %247, i64 %idxprom388
  store %struct.qty_table_elem* %arrayidx389, %struct.qty_table_elem** %x_ent, align 8
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %249 = bitcast %struct.rtx_def* %248 to i32*
  %bf.load390 = load i32, i32* %249, align 8
  %bf.lshr391 = lshr i32 %bf.load390, 16
  %bf.clear392 = and i32 %bf.lshr391, 255
  %250 = load %struct.table_elt*, %struct.table_elt** %p357, align 8
  %exp393 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %250, i32 0, i32 0
  %251 = load %struct.rtx_def*, %struct.rtx_def** %exp393, align 8
  %call394 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %bf.clear392, %struct.rtx_def* %251)
  %252 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_rtx395 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %252, i32 0, i32 0
  store %struct.rtx_def* %call394, %struct.rtx_def** %const_rtx395, align 8
  %253 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %254 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8
  %const_insn396 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %254, i32 0, i32 1
  store %struct.rtx_def* %253, %struct.rtx_def** %const_insn396, align 8
  br label %for.end.400

if.end.397:                                       ; preds = %land.lhs.true.365, %for.body.361
  br label %for.inc.398

for.inc.398:                                      ; preds = %if.end.397
  %255 = load %struct.table_elt*, %struct.table_elt** %p357, align 8
  %next_same_value399 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %255, i32 0, i32 4
  %256 = load %struct.table_elt*, %struct.table_elt** %next_same_value399, align 8
  store %struct.table_elt* %256, %struct.table_elt** %p357, align 8
  br label %for.cond.358

for.end.400:                                      ; preds = %cond.end.385, %for.cond.358
  br label %if.end.473

if.else.401:                                      ; preds = %land.lhs.true.353, %cond.end.346, %land.lhs.true.330, %if.else.325
  %257 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %258 = bitcast %struct.rtx_def* %257 to i32*
  %bf.load402 = load i32, i32* %258, align 8
  %bf.clear403 = and i32 %bf.load402, 65535
  %cmp404 = icmp eq i32 %bf.clear403, 61
  br i1 %cmp404, label %land.lhs.true.406, label %if.end.472

land.lhs.true.406:                                ; preds = %if.else.401
  %259 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld407 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1
  %arrayidx408 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i32 0, i64 0
  %rtuint409 = bitcast %union.rtunion_def* %arrayidx408 to i32*
  %260 = load i32, i32* %rtuint409, align 4
  %261 = load i32, i32* @cached_regno, align 4
  %cmp410 = icmp eq i32 %260, %261
  br i1 %cmp410, label %land.lhs.true.412, label %cond.false.415

land.lhs.true.412:                                ; preds = %land.lhs.true.406
  %262 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool413 = icmp ne %struct.cse_reg_info* %262, null
  br i1 %tobool413, label %cond.true.414, label %cond.false.415

cond.true.414:                                    ; preds = %land.lhs.true.412
  %263 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.420

cond.false.415:                                   ; preds = %land.lhs.true.412, %land.lhs.true.406
  %264 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1
  %arrayidx417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld416, i32 0, i64 0
  %rtuint418 = bitcast %union.rtunion_def* %arrayidx417 to i32*
  %265 = load i32, i32* %rtuint418, align 4
  %call419 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %265)
  br label %cond.end.420

cond.end.420:                                     ; preds = %cond.false.415, %cond.true.414
  %cond421 = phi %struct.cse_reg_info* [ %263, %cond.true.414 ], [ %call419, %cond.false.415 ]
  %reg_qty422 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond421, i32 0, i32 3
  %266 = load i32, i32* %reg_qty422, align 4
  %idxprom423 = sext i32 %266 to i64
  %267 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx424 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %267, i64 %idxprom423
  %const_rtx425 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx424, i32 0, i32 0
  %268 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx425, align 8
  %tobool426 = icmp ne %struct.rtx_def* %268, null
  br i1 %tobool426, label %land.lhs.true.427, label %if.end.472

land.lhs.true.427:                                ; preds = %cond.end.420
  %269 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %270 = bitcast %struct.rtx_def* %269 to i32*
  %bf.load428 = load i32, i32* %270, align 8
  %bf.lshr429 = lshr i32 %bf.load428, 16
  %bf.clear430 = and i32 %bf.lshr429, 255
  %271 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i32 0, i64 0
  %rtuint433 = bitcast %union.rtunion_def* %arrayidx432 to i32*
  %272 = load i32, i32* %rtuint433, align 4
  %273 = load i32, i32* @cached_regno, align 4
  %cmp434 = icmp eq i32 %272, %273
  br i1 %cmp434, label %land.lhs.true.436, label %cond.false.439

land.lhs.true.436:                                ; preds = %land.lhs.true.427
  %274 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool437 = icmp ne %struct.cse_reg_info* %274, null
  br i1 %tobool437, label %cond.true.438, label %cond.false.439

cond.true.438:                                    ; preds = %land.lhs.true.436
  %275 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.444

cond.false.439:                                   ; preds = %land.lhs.true.436, %land.lhs.true.427
  %276 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i32 0, i64 0
  %rtuint442 = bitcast %union.rtunion_def* %arrayidx441 to i32*
  %277 = load i32, i32* %rtuint442, align 4
  %call443 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %277)
  br label %cond.end.444

cond.end.444:                                     ; preds = %cond.false.439, %cond.true.438
  %cond445 = phi %struct.cse_reg_info* [ %275, %cond.true.438 ], [ %call443, %cond.false.439 ]
  %reg_qty446 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond445, i32 0, i32 3
  %278 = load i32, i32* %reg_qty446, align 4
  %idxprom447 = sext i32 %278 to i64
  %279 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx448 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %279, i64 %idxprom447
  %mode449 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx448, i32 0, i32 6
  %280 = load i32, i32* %mode449, align 4
  %cmp450 = icmp eq i32 %bf.clear430, %280
  br i1 %cmp450, label %if.then.452, label %if.end.472

if.then.452:                                      ; preds = %cond.end.444
  %281 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8
  %282 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld453 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %282, i32 0, i32 1
  %arrayidx454 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld453, i32 0, i64 0
  %rtuint455 = bitcast %union.rtunion_def* %arrayidx454 to i32*
  %283 = load i32, i32* %rtuint455, align 4
  %284 = load i32, i32* @cached_regno, align 4
  %cmp456 = icmp eq i32 %283, %284
  br i1 %cmp456, label %land.lhs.true.458, label %cond.false.461

land.lhs.true.458:                                ; preds = %if.then.452
  %285 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool459 = icmp ne %struct.cse_reg_info* %285, null
  br i1 %tobool459, label %cond.true.460, label %cond.false.461

cond.true.460:                                    ; preds = %land.lhs.true.458
  %286 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.466

cond.false.461:                                   ; preds = %land.lhs.true.458, %if.then.452
  %287 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %287, i32 0, i32 1
  %arrayidx463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld462, i32 0, i64 0
  %rtuint464 = bitcast %union.rtunion_def* %arrayidx463 to i32*
  %288 = load i32, i32* %rtuint464, align 4
  %call465 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %288)
  br label %cond.end.466

cond.end.466:                                     ; preds = %cond.false.461, %cond.true.460
  %cond467 = phi %struct.cse_reg_info* [ %286, %cond.true.460 ], [ %call465, %cond.false.461 ]
  %reg_qty468 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond467, i32 0, i32 3
  %289 = load i32, i32* %reg_qty468, align 4
  %idxprom469 = sext i32 %289 to i64
  %290 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx470 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %290, i64 %idxprom469
  %const_insn471 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx470, i32 0, i32 1
  store %struct.rtx_def* %281, %struct.rtx_def** %const_insn471, align 8
  br label %if.end.472

if.end.472:                                       ; preds = %cond.end.466, %cond.end.444, %cond.end.420, %if.else.401
  br label %if.end.473

if.end.473:                                       ; preds = %if.end.472, %for.end.400
  br label %if.end.474

if.end.474:                                       ; preds = %if.end.473, %cond.end.318
  %291 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %292 = bitcast %struct.rtx_def* %291 to i32*
  %bf.load475 = load i32, i32* %292, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 58
  br i1 %cmp477, label %if.then.479, label %if.end.506

if.then.479:                                      ; preds = %if.end.474
  %293 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call480 = call %struct.rtx_def* @get_related_value(%struct.rtx_def* %293)
  store %struct.rtx_def* %call480, %struct.rtx_def** %subexp, align 8
  %294 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %cmp481 = icmp ne %struct.rtx_def* %294, null
  br i1 %cmp481, label %if.then.483, label %if.end.505

if.then.483:                                      ; preds = %if.then.479
  %295 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %296 = load i32, i32* %mode.addr, align 4
  %call484 = call i32 @safe_hash(%struct.rtx_def* %295, i32 %296)
  %and485 = and i32 %call484, 31
  store i32 %and485, i32* %subhash, align 4
  %297 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %298 = load i32, i32* %subhash, align 4
  %299 = load i32, i32* %mode.addr, align 4
  %call486 = call %struct.table_elt* @lookup(%struct.rtx_def* %297, i32 %298, i32 %299)
  store %struct.table_elt* %call486, %struct.table_elt** %subelt, align 8
  %300 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  %cmp487 = icmp eq %struct.table_elt* %300, null
  br i1 %cmp487, label %if.then.489, label %if.end.491

if.then.489:                                      ; preds = %if.then.483
  %301 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %302 = load i32, i32* %subhash, align 4
  %303 = load i32, i32* %mode.addr, align 4
  %call490 = call %struct.table_elt* @insert(%struct.rtx_def* %301, %struct.table_elt* null, i32 %302, i32 %303)
  store %struct.table_elt* %call490, %struct.table_elt** %subelt, align 8
  br label %if.end.491

if.end.491:                                       ; preds = %if.then.489, %if.then.483
  %304 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  %related_value492 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %304, i32 0, i32 7
  %305 = load %struct.table_elt*, %struct.table_elt** %related_value492, align 8
  %cmp493 = icmp eq %struct.table_elt* %305, null
  br i1 %cmp493, label %if.then.495, label %if.end.497

if.then.495:                                      ; preds = %if.end.491
  %306 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  %307 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  %related_value496 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %307, i32 0, i32 7
  store %struct.table_elt* %306, %struct.table_elt** %related_value496, align 8
  br label %if.end.497

if.end.497:                                       ; preds = %if.then.495, %if.end.491
  %308 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  store %struct.table_elt* %308, %struct.table_elt** %subelt_prev, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.497
  %309 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8
  %related_value498 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %309, i32 0, i32 7
  %310 = load %struct.table_elt*, %struct.table_elt** %related_value498, align 8
  %311 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8
  %cmp499 = icmp ne %struct.table_elt* %310, %311
  br i1 %cmp499, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %312 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8
  %related_value501 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %312, i32 0, i32 7
  %313 = load %struct.table_elt*, %struct.table_elt** %related_value501, align 8
  store %struct.table_elt* %313, %struct.table_elt** %subelt_prev, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %314 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8
  %related_value502 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %314, i32 0, i32 7
  %315 = load %struct.table_elt*, %struct.table_elt** %related_value502, align 8
  %316 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %related_value503 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %316, i32 0, i32 7
  store %struct.table_elt* %315, %struct.table_elt** %related_value503, align 8
  %317 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %318 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8
  %related_value504 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %318, i32 0, i32 7
  store %struct.table_elt* %317, %struct.table_elt** %related_value504, align 8
  br label %if.end.505

if.end.505:                                       ; preds = %while.end, %if.then.479
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.505, %if.end.474
  %319 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  ret %struct.table_elt* %319
}

; Function Attrs: nounwind uwtable
define internal void @merge_equiv_classes(%struct.table_elt* %class1, %struct.table_elt* %class2) #0 {
entry:
  %class1.addr = alloca %struct.table_elt*, align 8
  %class2.addr = alloca %struct.table_elt*, align 8
  %elt = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %new = alloca %struct.table_elt*, align 8
  %hash = alloca i32, align 4
  %exp = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.table_elt* %class1, %struct.table_elt** %class1.addr, align 8
  store %struct.table_elt* %class2, %struct.table_elt** %class2.addr, align 8
  %0 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %0, i32 0, i32 6
  %1 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %1, %struct.table_elt** %class1.addr, align 8
  %2 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8
  %first_same_value1 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 6
  %3 = load %struct.table_elt*, %struct.table_elt** %first_same_value1, align 8
  store %struct.table_elt* %3, %struct.table_elt** %class2.addr, align 8
  %4 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8
  %5 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8
  %cmp = icmp eq %struct.table_elt* %4, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %6 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8
  store %struct.table_elt* %6, %struct.table_elt** %elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %tobool = icmp ne %struct.table_elt* %7, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %exp2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %8, i32 0, i32 0
  %9 = load %struct.rtx_def*, %struct.rtx_def** %exp2, align 8
  store %struct.rtx_def* %9, %struct.rtx_def** %exp, align 8
  %10 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %mode3 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %10, i32 0, i32 10
  %11 = load i32, i32* %mode3, align 4
  store i32 %11, i32* %mode, align 4
  %12 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 4
  %13 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %13, %struct.table_elt** %next, align 8
  %14 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load = load i32, i32* %15, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %if.then.6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %17 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %16, %struct.rtx_def* %17, i32 1, i32 0)
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %if.then.6, label %if.end.69

if.then.6:                                        ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* @hash_arg_in_memory, align 4
  %18 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load7 = load i32, i32* %19, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %land.lhs.true, label %cond.false.22

land.lhs.true:                                    ; preds = %if.then.6
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %21 = load i32, i32* %rtuint, align 4
  %cmp10 = icmp uge i32 %21, 53
  br i1 %cmp10, label %cond.true, label %cond.false.22

cond.true:                                        ; preds = %land.lhs.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtuint13 = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %23 = load i32, i32* %rtuint13, align 4
  %24 = load i32, i32* @cached_regno, align 4
  %cmp14 = icmp eq i32 %23, %24
  br i1 %cmp14, label %land.lhs.true.15, label %cond.false

land.lhs.true.15:                                 ; preds = %cond.true
  %25 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool16 = icmp ne %struct.cse_reg_info* %25, null
  br i1 %tobool16, label %cond.true.17, label %cond.false

cond.true.17:                                     ; preds = %land.lhs.true.15
  %26 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.15, %cond.true
  %27 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %28 = load i32, i32* %rtuint20, align 4
  %call21 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %28)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.17
  %cond = phi %struct.cse_reg_info* [ %26, %cond.true.17 ], [ %call21, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %29 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %29
  br label %cond.end.24

cond.false.22:                                    ; preds = %land.lhs.true, %if.then.6
  %30 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %31 = load i32, i32* %mode, align 4
  %call23 = call i32 @canon_hash(%struct.rtx_def* %30, i32 %31)
  br label %cond.end.24

cond.end.24:                                      ; preds = %cond.false.22, %cond.end
  %cond25 = phi i32 [ %add, %cond.end ], [ %call23, %cond.false.22 ]
  %and = and i32 %cond25, 31
  store i32 %and, i32* %hash, align 4
  %32 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load26 = load i32, i32* %33, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 61
  br i1 %cmp28, label %if.then.29, label %if.end.33

if.then.29:                                       ; preds = %cond.end.24
  %34 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i32 0, i64 0
  %rtuint32 = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %35 = load i32, i32* %rtuint32, align 4
  call void @delete_reg_equiv(i32 %35)
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.29, %cond.end.24
  %36 = load %struct.table_elt*, %struct.table_elt** %elt, align 8
  %37 = load i32, i32* %hash, align 4
  call void @remove_from_table(%struct.table_elt* %36, i32 %37)
  %38 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %39 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8
  %call34 = call i32 @insert_regs(%struct.rtx_def* %38, %struct.table_elt* %39, i32 0)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then.36, label %if.end.67

if.then.36:                                       ; preds = %if.end.33
  %40 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  call void @rehash_using_reg(%struct.rtx_def* %40)
  %41 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load37 = load i32, i32* %42, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 61
  br i1 %cmp39, label %land.lhs.true.40, label %cond.false.62

land.lhs.true.40:                                 ; preds = %if.then.36
  %43 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i32 0, i64 0
  %rtuint43 = bitcast %union.rtunion_def* %arrayidx42 to i32*
  %44 = load i32, i32* %rtuint43, align 4
  %cmp44 = icmp uge i32 %44, 53
  br i1 %cmp44, label %cond.true.45, label %cond.false.62

cond.true.45:                                     ; preds = %land.lhs.true.40
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtuint48 = bitcast %union.rtunion_def* %arrayidx47 to i32*
  %46 = load i32, i32* %rtuint48, align 4
  %47 = load i32, i32* @cached_regno, align 4
  %cmp49 = icmp eq i32 %46, %47
  br i1 %cmp49, label %land.lhs.true.50, label %cond.false.53

land.lhs.true.50:                                 ; preds = %cond.true.45
  %48 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool51 = icmp ne %struct.cse_reg_info* %48, null
  br i1 %tobool51, label %cond.true.52, label %cond.false.53

cond.true.52:                                     ; preds = %land.lhs.true.50
  %49 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.58

cond.false.53:                                    ; preds = %land.lhs.true.50, %cond.true.45
  %50 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i32 0, i64 0
  %rtuint56 = bitcast %union.rtunion_def* %arrayidx55 to i32*
  %51 = load i32, i32* %rtuint56, align 4
  %call57 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %51)
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.53, %cond.true.52
  %cond59 = phi %struct.cse_reg_info* [ %49, %cond.true.52 ], [ %call57, %cond.false.53 ]
  %reg_qty60 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond59, i32 0, i32 3
  %52 = load i32, i32* %reg_qty60, align 4
  %add61 = add i32 7808, %52
  br label %cond.end.64

cond.false.62:                                    ; preds = %land.lhs.true.40, %if.then.36
  %53 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %54 = load i32, i32* %mode, align 4
  %call63 = call i32 @canon_hash(%struct.rtx_def* %53, i32 %54)
  br label %cond.end.64

cond.end.64:                                      ; preds = %cond.false.62, %cond.end.58
  %cond65 = phi i32 [ %add61, %cond.end.58 ], [ %call63, %cond.false.62 ]
  %and66 = and i32 %cond65, 31
  store i32 %and66, i32* %hash, align 4
  br label %if.end.67

if.end.67:                                        ; preds = %cond.end.64, %if.end.33
  %55 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %56 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8
  %57 = load i32, i32* %hash, align 4
  %58 = load i32, i32* %mode, align 4
  %call68 = call %struct.table_elt* @insert(%struct.rtx_def* %55, %struct.table_elt* %56, i32 %57, i32 %58)
  store %struct.table_elt* %call68, %struct.table_elt** %new, align 8
  %59 = load i32, i32* @hash_arg_in_memory, align 4
  %conv = trunc i32 %59 to i8
  %60 = load %struct.table_elt*, %struct.table_elt** %new, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %60, i32 0, i32 11
  store i8 %conv, i8* %in_memory, align 1
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.67, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %61 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %61, %struct.table_elt** %elt, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_regs_eqv(i32 %new, i32 %old) #0 {
entry:
  %new.addr = alloca i32, align 4
  %old.addr = alloca i32, align 4
  %lastr = alloca i32, align 4
  %firstr = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  store i32 %new, i32* %new.addr, align 4
  store i32 %old, i32* %old.addr, align 4
  %0 = load i32, i32* %old.addr, align 4
  %1 = load i32, i32* @cached_regno, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %3 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %old.addr, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %3, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %5 = load i32, i32* %reg_qty, align 4
  store i32 %5, i32* %q, align 4
  %6 = load i32, i32* %q, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %7, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8
  %8 = load i32, i32* %old.addr, align 4
  %9 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %8, %9
  br i1 %cmp1, label %land.lhs.true.2, label %cond.false.5

land.lhs.true.2:                                  ; preds = %cond.end
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool3 = icmp ne %struct.cse_reg_info* %10, null
  br i1 %tobool3, label %cond.true.4, label %cond.false.5

cond.true.4:                                      ; preds = %land.lhs.true.2
  %11 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.7

cond.false.5:                                     ; preds = %land.lhs.true.2, %cond.end
  %12 = load i32, i32* %old.addr, align 4
  %call6 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %12)
  br label %cond.end.7

cond.end.7:                                       ; preds = %cond.false.5, %cond.true.4
  %cond8 = phi %struct.cse_reg_info* [ %11, %cond.true.4 ], [ %call6, %cond.false.5 ]
  %reg_qty9 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond8, i32 0, i32 3
  %13 = load i32, i32* %reg_qty9, align 4
  %14 = load i32, i32* %old.addr, align 4
  %cmp10 = icmp ne i32 %13, %14
  br i1 %cmp10, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end.7
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 1080, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.make_regs_eqv, i32 0, i32 0)) #7
  unreachable

if.end:                                           ; preds = %cond.end.7
  %15 = load i32, i32* %q, align 4
  %16 = load i32, i32* %new.addr, align 4
  %17 = load i32, i32* @cached_regno, align 4
  %cmp11 = icmp eq i32 %16, %17
  br i1 %cmp11, label %land.lhs.true.12, label %cond.false.15

land.lhs.true.12:                                 ; preds = %if.end
  %18 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool13 = icmp ne %struct.cse_reg_info* %18, null
  br i1 %tobool13, label %cond.true.14, label %cond.false.15

cond.true.14:                                     ; preds = %land.lhs.true.12
  %19 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.17

cond.false.15:                                    ; preds = %land.lhs.true.12, %if.end
  %20 = load i32, i32* %new.addr, align 4
  %call16 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %20)
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.false.15, %cond.true.14
  %cond18 = phi %struct.cse_reg_info* [ %19, %cond.true.14 ], [ %call16, %cond.false.15 ]
  %reg_qty19 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond18, i32 0, i32 3
  store i32 %15, i32* %reg_qty19, align 4
  %21 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %21, i32 0, i32 4
  %22 = load i32, i32* %first_reg, align 4
  store i32 %22, i32* %firstr, align 4
  %23 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %23, i32 0, i32 5
  %24 = load i32, i32* %last_reg, align 4
  store i32 %24, i32* %lastr, align 4
  %25 = load i32, i32* %firstr, align 4
  %cmp20 = icmp ult i32 %25, 53
  br i1 %cmp20, label %land.lhs.true.21, label %land.lhs.true.33

land.lhs.true.21:                                 ; preds = %cond.end.17
  %26 = load i32, i32* %firstr, align 4
  %cmp22 = icmp eq i32 %26, 20
  br i1 %cmp22, label %if.else, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.21
  %27 = load i32, i32* %firstr, align 4
  %cmp23 = icmp eq i32 %27, 6
  br i1 %cmp23, label %if.else, label %lor.lhs.false.24

lor.lhs.false.24:                                 ; preds = %lor.lhs.false
  %28 = load i32, i32* %firstr, align 4
  %idxprom25 = zext i32 %28 to i64
  %arrayidx26 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom25
  %29 = load i8, i8* %arrayidx26, align 1
  %conv = sext i8 %29 to i32
  %tobool27 = icmp ne i32 %conv, 0
  br i1 %tobool27, label %if.else, label %lor.lhs.false.28

lor.lhs.false.28:                                 ; preds = %lor.lhs.false.24
  %30 = load i32, i32* %firstr, align 4
  %idxprom29 = zext i32 %30 to i64
  %arrayidx30 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom29
  %31 = load i8, i8* %arrayidx30, align 1
  %conv31 = sext i8 %31 to i32
  %tobool32 = icmp ne i32 %conv31, 0
  br i1 %tobool32, label %if.else, label %land.lhs.true.33

land.lhs.true.33:                                 ; preds = %lor.lhs.false.28, %cond.end.17
  %32 = load i32, i32* %new.addr, align 4
  %cmp34 = icmp uge i32 %32, 53
  br i1 %cmp34, label %land.lhs.true.41, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %land.lhs.true.33
  %33 = load i32, i32* %new.addr, align 4
  %idxprom37 = zext i32 %33 to i64
  %arrayidx38 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom37
  %34 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp ne i32 %34, 0
  br i1 %cmp39, label %land.lhs.true.41, label %if.else

land.lhs.true.41:                                 ; preds = %lor.lhs.false.36, %land.lhs.true.33
  %35 = load i32, i32* %new.addr, align 4
  %cmp42 = icmp ult i32 %35, 53
  br i1 %cmp42, label %land.lhs.true.44, label %lor.lhs.false.60

land.lhs.true.44:                                 ; preds = %land.lhs.true.41
  %36 = load i32, i32* %new.addr, align 4
  %cmp45 = icmp eq i32 %36, 20
  br i1 %cmp45, label %if.then.99, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %land.lhs.true.44
  %37 = load i32, i32* %new.addr, align 4
  %cmp48 = icmp eq i32 %37, 6
  br i1 %cmp48, label %if.then.99, label %lor.lhs.false.50

lor.lhs.false.50:                                 ; preds = %lor.lhs.false.47
  %38 = load i32, i32* %new.addr, align 4
  %idxprom51 = zext i32 %38 to i64
  %arrayidx52 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom51
  %39 = load i8, i8* %arrayidx52, align 1
  %conv53 = sext i8 %39 to i32
  %tobool54 = icmp ne i32 %conv53, 0
  br i1 %tobool54, label %if.then.99, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false.50
  %40 = load i32, i32* %new.addr, align 4
  %idxprom56 = zext i32 %40 to i64
  %arrayidx57 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom56
  %41 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %41 to i32
  %tobool59 = icmp ne i32 %conv58, 0
  br i1 %tobool59, label %if.then.99, label %lor.lhs.false.60

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.55, %land.lhs.true.41
  %42 = load i32, i32* %new.addr, align 4
  %cmp61 = icmp uge i32 %42, 53
  br i1 %cmp61, label %land.lhs.true.63, label %if.else

land.lhs.true.63:                                 ; preds = %lor.lhs.false.60
  %43 = load i32, i32* %firstr, align 4
  %cmp64 = icmp ult i32 %43, 53
  br i1 %cmp64, label %if.then.99, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %land.lhs.true.63
  %44 = load i32, i32* %new.addr, align 4
  %idxprom67 = zext i32 %44 to i64
  %45 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %45, i32 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx68 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg, i32 0, i64 %idxprom67
  %46 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx68, align 8
  %last_uid = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %46, i32 0, i32 1
  %47 = load i32, i32* %last_uid, align 4
  %idxprom69 = sext i32 %47 to i64
  %48 = load i32*, i32** @uid_cuid, align 8
  %arrayidx70 = getelementptr inbounds i32, i32* %48, i64 %idxprom69
  %49 = load i32, i32* %arrayidx70, align 4
  %50 = load i32, i32* @cse_basic_block_end, align 4
  %cmp71 = icmp sgt i32 %49, %50
  br i1 %cmp71, label %land.lhs.true.82, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %lor.lhs.false.66
  %51 = load i32, i32* %new.addr, align 4
  %idxprom74 = zext i32 %51 to i64
  %52 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data75 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %52, i32 0, i32 4
  %reg76 = bitcast %union.varray_data_tag* %data75 to [1 x %struct.reg_info_def*]*
  %arrayidx77 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg76, i32 0, i64 %idxprom74
  %53 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx77, align 8
  %first_uid = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %53, i32 0, i32 0
  %54 = load i32, i32* %first_uid, align 4
  %idxprom78 = sext i32 %54 to i64
  %55 = load i32*, i32** @uid_cuid, align 8
  %arrayidx79 = getelementptr inbounds i32, i32* %55, i64 %idxprom78
  %56 = load i32, i32* %arrayidx79, align 4
  %57 = load i32, i32* @cse_basic_block_start, align 4
  %cmp80 = icmp slt i32 %56, %57
  br i1 %cmp80, label %land.lhs.true.82, label %if.else

land.lhs.true.82:                                 ; preds = %lor.lhs.false.73, %lor.lhs.false.66
  %58 = load i32, i32* %new.addr, align 4
  %idxprom83 = zext i32 %58 to i64
  %59 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data84 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %59, i32 0, i32 4
  %reg85 = bitcast %union.varray_data_tag* %data84 to [1 x %struct.reg_info_def*]*
  %arrayidx86 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg85, i32 0, i64 %idxprom83
  %60 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx86, align 8
  %last_uid87 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %60, i32 0, i32 1
  %61 = load i32, i32* %last_uid87, align 4
  %idxprom88 = sext i32 %61 to i64
  %62 = load i32*, i32** @uid_cuid, align 8
  %arrayidx89 = getelementptr inbounds i32, i32* %62, i64 %idxprom88
  %63 = load i32, i32* %arrayidx89, align 4
  %64 = load i32, i32* %firstr, align 4
  %idxprom90 = zext i32 %64 to i64
  %65 = load %struct.varray_head_tag*, %struct.varray_head_tag** @reg_n_info, align 8
  %data91 = getelementptr inbounds %struct.varray_head_tag, %struct.varray_head_tag* %65, i32 0, i32 4
  %reg92 = bitcast %union.varray_data_tag* %data91 to [1 x %struct.reg_info_def*]*
  %arrayidx93 = getelementptr inbounds [1 x %struct.reg_info_def*], [1 x %struct.reg_info_def*]* %reg92, i32 0, i64 %idxprom90
  %66 = load %struct.reg_info_def*, %struct.reg_info_def** %arrayidx93, align 8
  %last_uid94 = getelementptr inbounds %struct.reg_info_def, %struct.reg_info_def* %66, i32 0, i32 1
  %67 = load i32, i32* %last_uid94, align 4
  %idxprom95 = sext i32 %67 to i64
  %68 = load i32*, i32** @uid_cuid, align 8
  %arrayidx96 = getelementptr inbounds i32, i32* %68, i64 %idxprom95
  %69 = load i32, i32* %arrayidx96, align 4
  %cmp97 = icmp sgt i32 %63, %69
  br i1 %cmp97, label %if.then.99, label %if.else

if.then.99:                                       ; preds = %land.lhs.true.82, %land.lhs.true.63, %lor.lhs.false.55, %lor.lhs.false.50, %lor.lhs.false.47, %land.lhs.true.44
  %70 = load i32, i32* %new.addr, align 4
  %71 = load i32, i32* %firstr, align 4
  %idxprom100 = zext i32 %71 to i64
  %72 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx101 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %72, i64 %idxprom100
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx101, i32 0, i32 1
  store i32 %70, i32* %prev, align 4
  %73 = load i32, i32* %firstr, align 4
  %74 = load i32, i32* %new.addr, align 4
  %idxprom102 = zext i32 %74 to i64
  %75 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx103 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %75, i64 %idxprom102
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx103, i32 0, i32 0
  store i32 %73, i32* %next, align 4
  %76 = load i32, i32* %new.addr, align 4
  %idxprom104 = zext i32 %76 to i64
  %77 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx105 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %77, i64 %idxprom104
  %prev106 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx105, i32 0, i32 1
  store i32 -1, i32* %prev106, align 4
  %78 = load i32, i32* %new.addr, align 4
  %79 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %first_reg107 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %79, i32 0, i32 4
  store i32 %78, i32* %first_reg107, align 4
  br label %if.end.171

if.else:                                          ; preds = %land.lhs.true.82, %lor.lhs.false.73, %lor.lhs.false.60, %lor.lhs.false.36, %lor.lhs.false.28, %lor.lhs.false.24, %lor.lhs.false, %land.lhs.true.21
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %80 = load i32, i32* %lastr, align 4
  %cmp108 = icmp ult i32 %80, 53
  br i1 %cmp108, label %land.lhs.true.110, label %land.end

land.lhs.true.110:                                ; preds = %while.cond
  %81 = load i32, i32* %lastr, align 4
  %idxprom111 = zext i32 %81 to i64
  %82 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx112 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %82, i64 %idxprom111
  %prev113 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx112, i32 0, i32 1
  %83 = load i32, i32* %prev113, align 4
  %cmp114 = icmp sge i32 %83, 0
  br i1 %cmp114, label %land.lhs.true.116, label %land.end

land.lhs.true.116:                                ; preds = %land.lhs.true.110
  %84 = load i32, i32* %lastr, align 4
  %idxprom117 = zext i32 %84 to i64
  %arrayidx118 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i32 0, i64 %idxprom117
  %85 = load i32, i32* %arrayidx118, align 4
  %cmp119 = icmp eq i32 %85, 0
  br i1 %cmp119, label %land.rhs, label %lor.lhs.false.121

lor.lhs.false.121:                                ; preds = %land.lhs.true.116
  %86 = load i32, i32* %lastr, align 4
  %cmp122 = icmp eq i32 %86, 20
  br i1 %cmp122, label %land.end, label %lor.lhs.false.124

lor.lhs.false.124:                                ; preds = %lor.lhs.false.121
  %87 = load i32, i32* %lastr, align 4
  %cmp125 = icmp eq i32 %87, 6
  br i1 %cmp125, label %land.end, label %lor.lhs.false.127

lor.lhs.false.127:                                ; preds = %lor.lhs.false.124
  %88 = load i32, i32* %lastr, align 4
  %idxprom128 = zext i32 %88 to i64
  %arrayidx129 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i32 0, i64 %idxprom128
  %89 = load i8, i8* %arrayidx129, align 1
  %conv130 = sext i8 %89 to i32
  %tobool131 = icmp ne i32 %conv130, 0
  br i1 %tobool131, label %land.end, label %lor.lhs.false.132

lor.lhs.false.132:                                ; preds = %lor.lhs.false.127
  %90 = load i32, i32* %lastr, align 4
  %idxprom133 = zext i32 %90 to i64
  %arrayidx134 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i32 0, i64 %idxprom133
  %91 = load i8, i8* %arrayidx134, align 1
  %conv135 = sext i8 %91 to i32
  %tobool136 = icmp ne i32 %conv135, 0
  br i1 %tobool136, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %lor.lhs.false.132, %land.lhs.true.116
  %92 = load i32, i32* %new.addr, align 4
  %cmp137 = icmp uge i32 %92, 53
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false.132, %lor.lhs.false.127, %lor.lhs.false.124, %lor.lhs.false.121, %land.lhs.true.110, %while.cond
  %93 = phi i1 [ false, %lor.lhs.false.132 ], [ false, %lor.lhs.false.127 ], [ false, %lor.lhs.false.124 ], [ false, %lor.lhs.false.121 ], [ false, %land.lhs.true.110 ], [ false, %while.cond ], [ %cmp137, %land.rhs ]
  br i1 %93, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %94 = load i32, i32* %lastr, align 4
  %idxprom139 = zext i32 %94 to i64
  %95 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx140 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %95, i64 %idxprom139
  %prev141 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx140, i32 0, i32 1
  %96 = load i32, i32* %prev141, align 4
  store i32 %96, i32* %lastr, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %97 = load i32, i32* %lastr, align 4
  %idxprom142 = zext i32 %97 to i64
  %98 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx143 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %98, i64 %idxprom142
  %next144 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx143, i32 0, i32 0
  %99 = load i32, i32* %next144, align 4
  %100 = load i32, i32* %new.addr, align 4
  %idxprom145 = zext i32 %100 to i64
  %101 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx146 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %101, i64 %idxprom145
  %next147 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx146, i32 0, i32 0
  store i32 %99, i32* %next147, align 4
  %102 = load i32, i32* %lastr, align 4
  %idxprom148 = zext i32 %102 to i64
  %103 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx149 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %103, i64 %idxprom148
  %next150 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx149, i32 0, i32 0
  %104 = load i32, i32* %next150, align 4
  %cmp151 = icmp sge i32 %104, 0
  br i1 %cmp151, label %if.then.153, label %if.else.160

if.then.153:                                      ; preds = %while.end
  %105 = load i32, i32* %new.addr, align 4
  %106 = load i32, i32* %lastr, align 4
  %idxprom154 = zext i32 %106 to i64
  %107 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx155 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %107, i64 %idxprom154
  %next156 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx155, i32 0, i32 0
  %108 = load i32, i32* %next156, align 4
  %idxprom157 = sext i32 %108 to i64
  %109 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx158 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %109, i64 %idxprom157
  %prev159 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx158, i32 0, i32 1
  store i32 %105, i32* %prev159, align 4
  br label %if.end.164

if.else.160:                                      ; preds = %while.end
  %110 = load i32, i32* %new.addr, align 4
  %111 = load i32, i32* %q, align 4
  %idxprom161 = sext i32 %111 to i64
  %112 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx162 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %112, i64 %idxprom161
  %last_reg163 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx162, i32 0, i32 5
  store i32 %110, i32* %last_reg163, align 4
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.160, %if.then.153
  %113 = load i32, i32* %new.addr, align 4
  %114 = load i32, i32* %lastr, align 4
  %idxprom165 = zext i32 %114 to i64
  %115 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx166 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %115, i64 %idxprom165
  %next167 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx166, i32 0, i32 0
  store i32 %113, i32* %next167, align 4
  %116 = load i32, i32* %lastr, align 4
  %117 = load i32, i32* %new.addr, align 4
  %idxprom168 = zext i32 %117 to i64
  %118 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx169 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %118, i64 %idxprom168
  %prev170 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx169, i32 0, i32 1
  store i32 %116, i32* %prev170, align 4
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.164, %if.then.99
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_new_qty(i32 %reg, i32 %mode) #0 {
entry:
  %reg.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %eqv = alloca %struct.reg_eqv_elem*, align 8
  store i32 %reg, i32* %reg.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* @next_qty, align 4
  %1 = load i32, i32* @max_qty, align 4
  %cmp = icmp sge i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 1051, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.make_new_qty, i32 0, i32 0)) #7
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @next_qty, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @next_qty, align 4
  %3 = load i32, i32* %reg.addr, align 4
  %4 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %3, %4
  br i1 %cmp1, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %7 = load i32, i32* %reg.addr, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %7)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %6, %cond.true ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  store i32 %2, i32* %reg_qty, align 4
  store i32 %2, i32* %q, align 4
  %8 = load i32, i32* %q, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %9, i64 %idxprom
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8
  %10 = load i32, i32* %reg.addr, align 4
  %11 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %11, i32 0, i32 4
  store i32 %10, i32* %first_reg, align 4
  %12 = load i32, i32* %reg.addr, align 4
  %13 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %13, i32 0, i32 5
  store i32 %12, i32* %last_reg, align 4
  %14 = load i32, i32* %mode.addr, align 4
  %15 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %mode2 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %15, i32 0, i32 6
  store i32 %14, i32* %mode2, align 4
  %16 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_insn = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %16, i32 0, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %const_insn, align 8
  %17 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %17, i32 0, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %const_rtx, align 8
  %18 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %18, i32 0, i32 7
  store i32 0, i32* %comparison_code, align 4
  %19 = load i32, i32* %reg.addr, align 4
  %idxprom3 = zext i32 %19 to i64
  %20 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8
  %arrayidx4 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %20, i64 %idxprom3
  store %struct.reg_eqv_elem* %arrayidx4, %struct.reg_eqv_elem** %eqv, align 8
  %21 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** %eqv, align 8
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %21, i32 0, i32 1
  store i32 -1, i32* %prev, align 4
  %22 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** %eqv, align 8
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %22, i32 0, i32 0
  store i32 -1, i32* %next, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @mention_regs(%struct.rtx_def* %x) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %changed = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i64 = alloca i32, align 4
  %i141 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store i32 0, i32* %changed, align 4
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load = load i32, i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %3 = load i32, i32* %code, align 4
  %cmp1 = icmp eq i32 %3, 61
  br i1 %cmp1, label %if.then.2, label %if.end.121

if.then.2:                                        ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32, i32* %rtuint, align 4
  store i32 %5, i32* %regno, align 4
  %6 = load i32, i32* %regno, align 4
  %7 = load i32, i32* %regno, align 4
  %cmp3 = icmp uge i32 %7, 53
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.2
  br label %cond.end.61

cond.false:                                       ; preds = %if.then.2
  %8 = load i32, i32* %regno, align 4
  %cmp4 = icmp uge i32 %8, 8
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %cond.false
  %9 = load i32, i32* %regno, align 4
  %cmp5 = icmp ule i32 %9, 15
  br i1 %cmp5, label %cond.true.17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.false
  %10 = load i32, i32* %regno, align 4
  %cmp6 = icmp uge i32 %10, 21
  br i1 %cmp6, label %land.lhs.true.7, label %lor.lhs.false.9

land.lhs.true.7:                                  ; preds = %lor.lhs.false
  %11 = load i32, i32* %regno, align 4
  %cmp8 = icmp ule i32 %11, 28
  br i1 %cmp8, label %cond.true.17, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %land.lhs.true.7, %lor.lhs.false
  %12 = load i32, i32* %regno, align 4
  %cmp10 = icmp uge i32 %12, 45
  br i1 %cmp10, label %land.lhs.true.11, label %lor.lhs.false.13

land.lhs.true.11:                                 ; preds = %lor.lhs.false.9
  %13 = load i32, i32* %regno, align 4
  %cmp12 = icmp ule i32 %13, 52
  br i1 %cmp12, label %cond.true.17, label %lor.lhs.false.13

lor.lhs.false.13:                                 ; preds = %land.lhs.true.11, %lor.lhs.false.9
  %14 = load i32, i32* %regno, align 4
  %cmp14 = icmp uge i32 %14, 29
  br i1 %cmp14, label %land.lhs.true.15, label %cond.false.28

land.lhs.true.15:                                 ; preds = %lor.lhs.false.13
  %15 = load i32, i32* %regno, align 4
  %cmp16 = icmp ule i32 %15, 36
  br i1 %cmp16, label %cond.true.17, label %cond.false.28

cond.true.17:                                     ; preds = %land.lhs.true.15, %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load18 = load i32, i32* %17, align 8
  %bf.lshr = lshr i32 %bf.load18, 16
  %bf.clear19 = and i32 %bf.lshr, 255
  %idxprom = sext i32 %bf.clear19 to i64
  %arrayidx20 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom
  %18 = load i32, i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %18, 5
  br i1 %cmp21, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.17
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %20 = bitcast %struct.rtx_def* %19 to i32*
  %bf.load22 = load i32, i32* %20, align 8
  %bf.lshr23 = lshr i32 %bf.load22, 16
  %bf.clear24 = and i32 %bf.lshr23, 255
  %idxprom25 = sext i32 %bf.clear24 to i64
  %arrayidx26 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom25
  %21 = load i32, i32* %arrayidx26, align 4
  %cmp27 = icmp eq i32 %21, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.17
  %22 = phi i1 [ true, %cond.true.17 ], [ %cmp27, %lor.rhs ]
  %cond = select i1 %22, i32 2, i32 1
  br label %cond.end.59

cond.false.28:                                    ; preds = %land.lhs.true.15, %lor.lhs.false.13
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load29 = load i32, i32* %24, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 18
  br i1 %cmp32, label %cond.true.33, label %cond.false.35

cond.true.33:                                     ; preds = %cond.false.28
  %25 = load i32, i32* @target_flags, align 4
  %and = and i32 %25, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond34 = select i1 %tobool, i32 2, i32 3
  br label %cond.end.57

cond.false.35:                                    ; preds = %cond.false.28
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %27 = bitcast %struct.rtx_def* %26 to i32*
  %bf.load36 = load i32, i32* %27, align 8
  %bf.lshr37 = lshr i32 %bf.load36, 16
  %bf.clear38 = and i32 %bf.lshr37, 255
  %cmp39 = icmp eq i32 %bf.clear38, 24
  br i1 %cmp39, label %cond.true.40, label %cond.false.44

cond.true.40:                                     ; preds = %cond.false.35
  %28 = load i32, i32* @target_flags, align 4
  %and41 = and i32 %28, 33554432
  %tobool42 = icmp ne i32 %and41, 0
  %cond43 = select i1 %tobool42, i32 4, i32 6
  br label %cond.end

cond.false.44:                                    ; preds = %cond.false.35
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %30 = bitcast %struct.rtx_def* %29 to i32*
  %bf.load45 = load i32, i32* %30, align 8
  %bf.lshr46 = lshr i32 %bf.load45, 16
  %bf.clear47 = and i32 %bf.lshr46, 255
  %idxprom48 = sext i32 %bf.clear47 to i64
  %arrayidx49 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom48
  %31 = load i8, i8* %arrayidx49, align 1
  %conv = zext i8 %31 to i32
  %32 = load i32, i32* @target_flags, align 4
  %and50 = and i32 %32, 33554432
  %tobool51 = icmp ne i32 %and50, 0
  %cond52 = select i1 %tobool51, i32 8, i32 4
  %add = add nsw i32 %conv, %cond52
  %sub = sub nsw i32 %add, 1
  %33 = load i32, i32* @target_flags, align 4
  %and53 = and i32 %33, 33554432
  %tobool54 = icmp ne i32 %and53, 0
  %cond55 = select i1 %tobool54, i32 8, i32 4
  %div = sdiv i32 %sub, %cond55
  br label %cond.end

cond.end:                                         ; preds = %cond.false.44, %cond.true.40
  %cond56 = phi i32 [ %cond43, %cond.true.40 ], [ %div, %cond.false.44 ]
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.end, %cond.true.33
  %cond58 = phi i32 [ %cond34, %cond.true.33 ], [ %cond56, %cond.end ]
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.end.57, %lor.end
  %cond60 = phi i32 [ %cond, %lor.end ], [ %cond58, %cond.end.57 ]
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.end.59, %cond.true
  %cond62 = phi i32 [ 1, %cond.true ], [ %cond60, %cond.end.59 ]
  %add63 = add i32 %6, %cond62
  store i32 %add63, i32* %endregno, align 4
  %34 = load i32, i32* %regno, align 4
  store i32 %34, i32* %i64, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.61
  %35 = load i32, i32* %i64, align 4
  %36 = load i32, i32* %endregno, align 4
  %cmp65 = icmp ult i32 %35, %36
  br i1 %cmp65, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %i64, align 4
  %38 = load i32, i32* @cached_regno, align 4
  %cmp67 = icmp eq i32 %37, %38
  br i1 %cmp67, label %land.lhs.true.69, label %cond.false.72

land.lhs.true.69:                                 ; preds = %for.body
  %39 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool70 = icmp ne %struct.cse_reg_info* %39, null
  br i1 %tobool70, label %cond.true.71, label %cond.false.72

cond.true.71:                                     ; preds = %land.lhs.true.69
  %40 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.73

cond.false.72:                                    ; preds = %land.lhs.true.69, %for.body
  %41 = load i32, i32* %i64, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %41)
  br label %cond.end.73

cond.end.73:                                      ; preds = %cond.false.72, %cond.true.71
  %cond74 = phi %struct.cse_reg_info* [ %40, %cond.true.71 ], [ %call, %cond.false.72 ]
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond74, i32 0, i32 5
  %42 = load i32, i32* %reg_in_table, align 4
  %cmp75 = icmp sge i32 %42, 0
  br i1 %cmp75, label %land.lhs.true.77, label %if.end.100

land.lhs.true.77:                                 ; preds = %cond.end.73
  %43 = load i32, i32* %i64, align 4
  %44 = load i32, i32* @cached_regno, align 4
  %cmp78 = icmp eq i32 %43, %44
  br i1 %cmp78, label %land.lhs.true.80, label %cond.false.83

land.lhs.true.80:                                 ; preds = %land.lhs.true.77
  %45 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool81 = icmp ne %struct.cse_reg_info* %45, null
  br i1 %tobool81, label %cond.true.82, label %cond.false.83

cond.true.82:                                     ; preds = %land.lhs.true.80
  %46 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.85

cond.false.83:                                    ; preds = %land.lhs.true.80, %land.lhs.true.77
  %47 = load i32, i32* %i64, align 4
  %call84 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %47)
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.83, %cond.true.82
  %cond86 = phi %struct.cse_reg_info* [ %46, %cond.true.82 ], [ %call84, %cond.false.83 ]
  %reg_in_table87 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond86, i32 0, i32 5
  %48 = load i32, i32* %reg_in_table87, align 4
  %49 = load i32, i32* %i64, align 4
  %50 = load i32, i32* @cached_regno, align 4
  %cmp88 = icmp eq i32 %49, %50
  br i1 %cmp88, label %land.lhs.true.90, label %cond.false.93

land.lhs.true.90:                                 ; preds = %cond.end.85
  %51 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool91 = icmp ne %struct.cse_reg_info* %51, null
  br i1 %tobool91, label %cond.true.92, label %cond.false.93

cond.true.92:                                     ; preds = %land.lhs.true.90
  %52 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.95

cond.false.93:                                    ; preds = %land.lhs.true.90, %cond.end.85
  %53 = load i32, i32* %i64, align 4
  %call94 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %53)
  br label %cond.end.95

cond.end.95:                                      ; preds = %cond.false.93, %cond.true.92
  %cond96 = phi %struct.cse_reg_info* [ %52, %cond.true.92 ], [ %call94, %cond.false.93 ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond96, i32 0, i32 4
  %54 = load i32, i32* %reg_tick, align 4
  %cmp97 = icmp ne i32 %48, %54
  br i1 %cmp97, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %cond.end.95
  %55 = load i32, i32* %i64, align 4
  call void @remove_invalid_refs(i32 %55)
  br label %if.end.100

if.end.100:                                       ; preds = %if.then.99, %cond.end.95, %cond.end.73
  %56 = load i32, i32* %i64, align 4
  %57 = load i32, i32* @cached_regno, align 4
  %cmp101 = icmp eq i32 %56, %57
  br i1 %cmp101, label %land.lhs.true.103, label %cond.false.106

land.lhs.true.103:                                ; preds = %if.end.100
  %58 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool104 = icmp ne %struct.cse_reg_info* %58, null
  br i1 %tobool104, label %cond.true.105, label %cond.false.106

cond.true.105:                                    ; preds = %land.lhs.true.103
  %59 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.108

cond.false.106:                                   ; preds = %land.lhs.true.103, %if.end.100
  %60 = load i32, i32* %i64, align 4
  %call107 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %60)
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.106, %cond.true.105
  %cond109 = phi %struct.cse_reg_info* [ %59, %cond.true.105 ], [ %call107, %cond.false.106 ]
  %reg_tick110 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond109, i32 0, i32 4
  %61 = load i32, i32* %reg_tick110, align 4
  %62 = load i32, i32* %i64, align 4
  %63 = load i32, i32* @cached_regno, align 4
  %cmp111 = icmp eq i32 %62, %63
  br i1 %cmp111, label %land.lhs.true.113, label %cond.false.116

land.lhs.true.113:                                ; preds = %cond.end.108
  %64 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool114 = icmp ne %struct.cse_reg_info* %64, null
  br i1 %tobool114, label %cond.true.115, label %cond.false.116

cond.true.115:                                    ; preds = %land.lhs.true.113
  %65 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.118

cond.false.116:                                   ; preds = %land.lhs.true.113, %cond.end.108
  %66 = load i32, i32* %i64, align 4
  %call117 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %66)
  br label %cond.end.118

cond.end.118:                                     ; preds = %cond.false.116, %cond.true.115
  %cond119 = phi %struct.cse_reg_info* [ %65, %cond.true.115 ], [ %call117, %cond.false.116 ]
  %reg_in_table120 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond119, i32 0, i32 5
  store i32 %61, i32* %reg_in_table120, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end.118
  %67 = load i32, i32* %i64, align 4
  %inc = add i32 %67, 1
  store i32 %inc, i32* %i64, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

if.end.121:                                       ; preds = %if.end
  %68 = load i32, i32* %code, align 4
  %cmp122 = icmp eq i32 %68, 63
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.236

land.lhs.true.124:                                ; preds = %if.end.121
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %71 = bitcast %struct.rtx_def* %70 to i32*
  %bf.load127 = load i32, i32* %71, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear128, 61
  br i1 %cmp129, label %land.lhs.true.131, label %if.end.236

land.lhs.true.131:                                ; preds = %land.lhs.true.124
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i32 0, i64 0
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rtx134, align 8
  %fld135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i32 0, i64 0
  %rtuint137 = bitcast %union.rtunion_def* %arrayidx136 to i32*
  %74 = load i32, i32* %rtuint137, align 4
  %cmp138 = icmp uge i32 %74, 53
  br i1 %cmp138, label %if.then.140, label %if.end.236

if.then.140:                                      ; preds = %land.lhs.true.131
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i32 0, i64 0
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx144, align 8
  %fld145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i32 0, i64 0
  %rtuint147 = bitcast %union.rtunion_def* %arrayidx146 to i32*
  %77 = load i32, i32* %rtuint147, align 4
  store i32 %77, i32* %i141, align 4
  %78 = load i32, i32* %i141, align 4
  %79 = load i32, i32* @cached_regno, align 4
  %cmp148 = icmp eq i32 %78, %79
  br i1 %cmp148, label %land.lhs.true.150, label %cond.false.153

land.lhs.true.150:                                ; preds = %if.then.140
  %80 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool151 = icmp ne %struct.cse_reg_info* %80, null
  br i1 %tobool151, label %cond.true.152, label %cond.false.153

cond.true.152:                                    ; preds = %land.lhs.true.150
  %81 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.155

cond.false.153:                                   ; preds = %land.lhs.true.150, %if.then.140
  %82 = load i32, i32* %i141, align 4
  %call154 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %82)
  br label %cond.end.155

cond.end.155:                                     ; preds = %cond.false.153, %cond.true.152
  %cond156 = phi %struct.cse_reg_info* [ %81, %cond.true.152 ], [ %call154, %cond.false.153 ]
  %reg_in_table157 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond156, i32 0, i32 5
  %83 = load i32, i32* %reg_in_table157, align 4
  %cmp158 = icmp sge i32 %83, 0
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.215

land.lhs.true.160:                                ; preds = %cond.end.155
  %84 = load i32, i32* %i141, align 4
  %85 = load i32, i32* @cached_regno, align 4
  %cmp161 = icmp eq i32 %84, %85
  br i1 %cmp161, label %land.lhs.true.163, label %cond.false.166

land.lhs.true.163:                                ; preds = %land.lhs.true.160
  %86 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool164 = icmp ne %struct.cse_reg_info* %86, null
  br i1 %tobool164, label %cond.true.165, label %cond.false.166

cond.true.165:                                    ; preds = %land.lhs.true.163
  %87 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.168

cond.false.166:                                   ; preds = %land.lhs.true.163, %land.lhs.true.160
  %88 = load i32, i32* %i141, align 4
  %call167 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %88)
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.false.166, %cond.true.165
  %cond169 = phi %struct.cse_reg_info* [ %87, %cond.true.165 ], [ %call167, %cond.false.166 ]
  %reg_in_table170 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond169, i32 0, i32 5
  %89 = load i32, i32* %reg_in_table170, align 4
  %90 = load i32, i32* %i141, align 4
  %91 = load i32, i32* @cached_regno, align 4
  %cmp171 = icmp eq i32 %90, %91
  br i1 %cmp171, label %land.lhs.true.173, label %cond.false.176

land.lhs.true.173:                                ; preds = %cond.end.168
  %92 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool174 = icmp ne %struct.cse_reg_info* %92, null
  br i1 %tobool174, label %cond.true.175, label %cond.false.176

cond.true.175:                                    ; preds = %land.lhs.true.173
  %93 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.178

cond.false.176:                                   ; preds = %land.lhs.true.173, %cond.end.168
  %94 = load i32, i32* %i141, align 4
  %call177 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %94)
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.false.176, %cond.true.175
  %cond179 = phi %struct.cse_reg_info* [ %93, %cond.true.175 ], [ %call177, %cond.false.176 ]
  %reg_tick180 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond179, i32 0, i32 4
  %95 = load i32, i32* %reg_tick180, align 4
  %cmp181 = icmp ne i32 %89, %95
  br i1 %cmp181, label %if.then.183, label %if.end.215

if.then.183:                                      ; preds = %cond.end.178
  %96 = load i32, i32* %i141, align 4
  %97 = load i32, i32* @cached_regno, align 4
  %cmp184 = icmp eq i32 %96, %97
  br i1 %cmp184, label %land.lhs.true.186, label %cond.false.189

land.lhs.true.186:                                ; preds = %if.then.183
  %98 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool187 = icmp ne %struct.cse_reg_info* %98, null
  br i1 %tobool187, label %cond.true.188, label %cond.false.189

cond.true.188:                                    ; preds = %land.lhs.true.186
  %99 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.191

cond.false.189:                                   ; preds = %land.lhs.true.186, %if.then.183
  %100 = load i32, i32* %i141, align 4
  %call190 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %100)
  br label %cond.end.191

cond.end.191:                                     ; preds = %cond.false.189, %cond.true.188
  %cond192 = phi %struct.cse_reg_info* [ %99, %cond.true.188 ], [ %call190, %cond.false.189 ]
  %reg_in_table193 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond192, i32 0, i32 5
  %101 = load i32, i32* %reg_in_table193, align 4
  %102 = load i32, i32* %i141, align 4
  %103 = load i32, i32* @cached_regno, align 4
  %cmp194 = icmp eq i32 %102, %103
  br i1 %cmp194, label %land.lhs.true.196, label %cond.false.199

land.lhs.true.196:                                ; preds = %cond.end.191
  %104 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool197 = icmp ne %struct.cse_reg_info* %104, null
  br i1 %tobool197, label %cond.true.198, label %cond.false.199

cond.true.198:                                    ; preds = %land.lhs.true.196
  %105 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.201

cond.false.199:                                   ; preds = %land.lhs.true.196, %cond.end.191
  %106 = load i32, i32* %i141, align 4
  %call200 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %106)
  br label %cond.end.201

cond.end.201:                                     ; preds = %cond.false.199, %cond.true.198
  %cond202 = phi %struct.cse_reg_info* [ %105, %cond.true.198 ], [ %call200, %cond.false.199 ]
  %reg_tick203 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond202, i32 0, i32 4
  %107 = load i32, i32* %reg_tick203, align 4
  %sub204 = sub nsw i32 %107, 1
  %cmp205 = icmp ne i32 %101, %sub204
  br i1 %cmp205, label %if.then.207, label %if.else

if.then.207:                                      ; preds = %cond.end.201
  %108 = load i32, i32* %i141, align 4
  call void @remove_invalid_refs(i32 %108)
  br label %if.end.214

if.else:                                          ; preds = %cond.end.201
  %109 = load i32, i32* %i141, align 4
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i32 0, i64 1
  %rtuint210 = bitcast %union.rtunion_def* %arrayidx209 to i32*
  %111 = load i32, i32* %rtuint210, align 4
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %113 = bitcast %struct.rtx_def* %112 to i32*
  %bf.load211 = load i32, i32* %113, align 8
  %bf.lshr212 = lshr i32 %bf.load211, 16
  %bf.clear213 = and i32 %bf.lshr212, 255
  call void @remove_invalid_subreg_refs(i32 %109, i32 %111, i32 %bf.clear213)
  br label %if.end.214

if.end.214:                                       ; preds = %if.else, %if.then.207
  br label %if.end.215

if.end.215:                                       ; preds = %if.end.214, %cond.end.178, %cond.end.155
  %114 = load i32, i32* %i141, align 4
  %115 = load i32, i32* @cached_regno, align 4
  %cmp216 = icmp eq i32 %114, %115
  br i1 %cmp216, label %land.lhs.true.218, label %cond.false.221

land.lhs.true.218:                                ; preds = %if.end.215
  %116 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool219 = icmp ne %struct.cse_reg_info* %116, null
  br i1 %tobool219, label %cond.true.220, label %cond.false.221

cond.true.220:                                    ; preds = %land.lhs.true.218
  %117 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.223

cond.false.221:                                   ; preds = %land.lhs.true.218, %if.end.215
  %118 = load i32, i32* %i141, align 4
  %call222 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %118)
  br label %cond.end.223

cond.end.223:                                     ; preds = %cond.false.221, %cond.true.220
  %cond224 = phi %struct.cse_reg_info* [ %117, %cond.true.220 ], [ %call222, %cond.false.221 ]
  %reg_tick225 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond224, i32 0, i32 4
  %119 = load i32, i32* %reg_tick225, align 4
  %120 = load i32, i32* %i141, align 4
  %121 = load i32, i32* @cached_regno, align 4
  %cmp226 = icmp eq i32 %120, %121
  br i1 %cmp226, label %land.lhs.true.228, label %cond.false.231

land.lhs.true.228:                                ; preds = %cond.end.223
  %122 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool229 = icmp ne %struct.cse_reg_info* %122, null
  br i1 %tobool229, label %cond.true.230, label %cond.false.231

cond.true.230:                                    ; preds = %land.lhs.true.228
  %123 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.233

cond.false.231:                                   ; preds = %land.lhs.true.228, %cond.end.223
  %124 = load i32, i32* %i141, align 4
  %call232 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %124)
  br label %cond.end.233

cond.end.233:                                     ; preds = %cond.false.231, %cond.true.230
  %cond234 = phi %struct.cse_reg_info* [ %123, %cond.true.230 ], [ %call232, %cond.false.231 ]
  %reg_in_table235 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond234, i32 0, i32 5
  store i32 %119, i32* %reg_in_table235, align 4
  store i32 0, i32* %retval
  br label %return

if.end.236:                                       ; preds = %land.lhs.true.131, %land.lhs.true.124, %if.end.121
  %125 = load i32, i32* %code, align 4
  %cmp237 = icmp eq i32 %125, 74
  br i1 %cmp237, label %if.then.245, label %lor.lhs.false.239

lor.lhs.false.239:                                ; preds = %if.end.236
  %126 = load i32, i32* %code, align 4
  %idxprom240 = sext i32 %126 to i64
  %arrayidx241 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom240
  %127 = load i8, i8* %arrayidx241, align 1
  %conv242 = sext i8 %127 to i32
  %cmp243 = icmp eq i32 %conv242, 60
  br i1 %cmp243, label %if.then.245, label %if.end.345

if.then.245:                                      ; preds = %lor.lhs.false.239, %if.end.236
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i32 0, i64 0
  %rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rtx248, align 8
  %130 = bitcast %struct.rtx_def* %129 to i32*
  %bf.load249 = load i32, i32* %130, align 8
  %bf.clear250 = and i32 %bf.load249, 65535
  %cmp251 = icmp eq i32 %bf.clear250, 61
  br i1 %cmp251, label %land.lhs.true.253, label %if.end.294

land.lhs.true.253:                                ; preds = %if.then.245
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i32 0, i64 0
  %rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rtx256, align 8
  %fld257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i32 0, i64 0
  %rtuint259 = bitcast %union.rtunion_def* %arrayidx258 to i32*
  %133 = load i32, i32* %rtuint259, align 4
  %134 = load i32, i32* @cached_regno, align 4
  %cmp260 = icmp eq i32 %133, %134
  br i1 %cmp260, label %land.lhs.true.262, label %cond.false.265

land.lhs.true.262:                                ; preds = %land.lhs.true.253
  %135 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool263 = icmp ne %struct.cse_reg_info* %135, null
  br i1 %tobool263, label %cond.true.264, label %cond.false.265

cond.true.264:                                    ; preds = %land.lhs.true.262
  %136 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.273

cond.false.265:                                   ; preds = %land.lhs.true.262, %land.lhs.true.253
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1
  %arrayidx267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld266, i32 0, i64 0
  %rtx268 = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtx_def**
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rtx268, align 8
  %fld269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i32 0, i64 0
  %rtuint271 = bitcast %union.rtunion_def* %arrayidx270 to i32*
  %139 = load i32, i32* %rtuint271, align 4
  %call272 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %139)
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.false.265, %cond.true.264
  %cond274 = phi %struct.cse_reg_info* [ %136, %cond.true.264 ], [ %call272, %cond.false.265 ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond274, i32 0, i32 3
  %140 = load i32, i32* %reg_qty, align 4
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i32 0, i64 0
  %rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx277, align 8
  %fld278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i32 0, i64 0
  %rtuint280 = bitcast %union.rtunion_def* %arrayidx279 to i32*
  %143 = load i32, i32* %rtuint280, align 4
  %cmp281 = icmp ne i32 %140, %143
  br i1 %cmp281, label %if.end.294, label %if.then.283

if.then.283:                                      ; preds = %cond.end.273
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i32 0, i64 0
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rtx286, align 8
  %call287 = call i32 @insert_regs(%struct.rtx_def* %145, %struct.table_elt* null, i32 0)
  %tobool288 = icmp ne i32 %call287, 0
  br i1 %tobool288, label %if.then.289, label %if.end.293

if.then.289:                                      ; preds = %if.then.283
  %146 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i32 0, i64 0
  %rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rtx292, align 8
  call void @rehash_using_reg(%struct.rtx_def* %147)
  store i32 1, i32* %changed, align 4
  br label %if.end.293

if.end.293:                                       ; preds = %if.then.289, %if.then.283
  br label %if.end.294

if.end.294:                                       ; preds = %if.end.293, %cond.end.273, %if.then.245
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld295, i32 0, i64 1
  %rtx297 = bitcast %union.rtunion_def* %arrayidx296 to %struct.rtx_def**
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rtx297, align 8
  %150 = bitcast %struct.rtx_def* %149 to i32*
  %bf.load298 = load i32, i32* %150, align 8
  %bf.clear299 = and i32 %bf.load298, 65535
  %cmp300 = icmp eq i32 %bf.clear299, 61
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.344

land.lhs.true.302:                                ; preds = %if.end.294
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i32 0, i64 1
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rtx305, align 8
  %fld306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i32 0, i64 0
  %rtuint308 = bitcast %union.rtunion_def* %arrayidx307 to i32*
  %153 = load i32, i32* %rtuint308, align 4
  %154 = load i32, i32* @cached_regno, align 4
  %cmp309 = icmp eq i32 %153, %154
  br i1 %cmp309, label %land.lhs.true.311, label %cond.false.314

land.lhs.true.311:                                ; preds = %land.lhs.true.302
  %155 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool312 = icmp ne %struct.cse_reg_info* %155, null
  br i1 %tobool312, label %cond.true.313, label %cond.false.314

cond.true.313:                                    ; preds = %land.lhs.true.311
  %156 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.322

cond.false.314:                                   ; preds = %land.lhs.true.311, %land.lhs.true.302
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i32 0, i64 1
  %rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rtx317, align 8
  %fld318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i32 0, i64 0
  %rtuint320 = bitcast %union.rtunion_def* %arrayidx319 to i32*
  %159 = load i32, i32* %rtuint320, align 4
  %call321 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %159)
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.false.314, %cond.true.313
  %cond323 = phi %struct.cse_reg_info* [ %156, %cond.true.313 ], [ %call321, %cond.false.314 ]
  %reg_qty324 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond323, i32 0, i32 3
  %160 = load i32, i32* %reg_qty324, align 4
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1
  %arrayidx326 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld325, i32 0, i64 1
  %rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rtx327, align 8
  %fld328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i32 0, i64 0
  %rtuint330 = bitcast %union.rtunion_def* %arrayidx329 to i32*
  %163 = load i32, i32* %rtuint330, align 4
  %cmp331 = icmp ne i32 %160, %163
  br i1 %cmp331, label %if.end.344, label %if.then.333

if.then.333:                                      ; preds = %cond.end.322
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i32 0, i64 1
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rtx336, align 8
  %call337 = call i32 @insert_regs(%struct.rtx_def* %165, %struct.table_elt* null, i32 0)
  %tobool338 = icmp ne i32 %call337, 0
  br i1 %tobool338, label %if.then.339, label %if.end.343

if.then.339:                                      ; preds = %if.then.333
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i32 0, i64 1
  %rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rtx342, align 8
  call void @rehash_using_reg(%struct.rtx_def* %167)
  store i32 1, i32* %changed, align 4
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.339, %if.then.333
  br label %if.end.344

if.end.344:                                       ; preds = %if.end.343, %cond.end.322, %if.end.294
  br label %if.end.345

if.end.345:                                       ; preds = %if.end.344, %lor.lhs.false.239
  %168 = load i32, i32* %code, align 4
  %idxprom346 = sext i32 %168 to i64
  %arrayidx347 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i64 %idxprom346
  %169 = load i8*, i8** %arrayidx347, align 8
  store i8* %169, i8** %fmt, align 8
  %170 = load i32, i32* %code, align 4
  %idxprom348 = sext i32 %170 to i64
  %arrayidx349 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i64 %idxprom348
  %171 = load i8, i8* %arrayidx349, align 1
  %conv350 = zext i8 %171 to i32
  %sub351 = sub nsw i32 %conv350, 1
  store i32 %sub351, i32* %i, align 4
  br label %for.cond.352

for.cond.352:                                     ; preds = %for.inc.394, %if.end.345
  %172 = load i32, i32* %i, align 4
  %cmp353 = icmp sge i32 %172, 0
  br i1 %cmp353, label %for.body.355, label %for.end.395

for.body.355:                                     ; preds = %for.cond.352
  %173 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %173 to i64
  %174 = load i8*, i8** %fmt, align 8
  %arrayidx357 = getelementptr inbounds i8, i8* %174, i64 %idxprom356
  %175 = load i8, i8* %arrayidx357, align 1
  %conv358 = sext i8 %175 to i32
  %cmp359 = icmp eq i32 %conv358, 101
  br i1 %cmp359, label %if.then.361, label %if.else.367

if.then.361:                                      ; preds = %for.body.355
  %176 = load i32, i32* %i, align 4
  %idxprom362 = sext i32 %176 to i64
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i32 0, i64 %idxprom362
  %rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**
  %178 = load %struct.rtx_def*, %struct.rtx_def** %rtx365, align 8
  %call366 = call i32 @mention_regs(%struct.rtx_def* %178)
  %179 = load i32, i32* %changed, align 4
  %or = or i32 %179, %call366
  store i32 %or, i32* %changed, align 4
  br label %if.end.393

if.else.367:                                      ; preds = %for.body.355
  %180 = load i32, i32* %i, align 4
  %idxprom368 = sext i32 %180 to i64
  %181 = load i8*, i8** %fmt, align 8
  %arrayidx369 = getelementptr inbounds i8, i8* %181, i64 %idxprom368
  %182 = load i8, i8* %arrayidx369, align 1
  %conv370 = sext i8 %182 to i32
  %cmp371 = icmp eq i32 %conv370, 69
  br i1 %cmp371, label %if.then.373, label %if.end.392

if.then.373:                                      ; preds = %if.else.367
  store i32 0, i32* %j, align 4
  br label %for.cond.374

for.cond.374:                                     ; preds = %for.inc.389, %if.then.373
  %183 = load i32, i32* %j, align 4
  %184 = load i32, i32* %i, align 4
  %idxprom375 = sext i32 %184 to i64
  %185 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1
  %arrayidx377 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i32 0, i64 %idxprom375
  %rtvec = bitcast %union.rtunion_def* %arrayidx377 to %struct.rtvec_def**
  %186 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %186, i32 0, i32 0
  %187 = load i32, i32* %num_elem, align 4
  %cmp378 = icmp slt i32 %183, %187
  br i1 %cmp378, label %for.body.380, label %for.end.391

for.body.380:                                     ; preds = %for.cond.374
  %188 = load i32, i32* %j, align 4
  %idxprom381 = sext i32 %188 to i64
  %189 = load i32, i32* %i, align 4
  %idxprom382 = sext i32 %189 to i64
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1
  %arrayidx384 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld383, i32 0, i64 %idxprom382
  %rtvec385 = bitcast %union.rtunion_def* %arrayidx384 to %struct.rtvec_def**
  %191 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec385, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %191, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom381
  %192 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx386, align 8
  %call387 = call i32 @mention_regs(%struct.rtx_def* %192)
  %193 = load i32, i32* %changed, align 4
  %or388 = or i32 %193, %call387
  store i32 %or388, i32* %changed, align 4
  br label %for.inc.389

for.inc.389:                                      ; preds = %for.body.380
  %194 = load i32, i32* %j, align 4
  %inc390 = add nsw i32 %194, 1
  store i32 %inc390, i32* %j, align 4
  br label %for.cond.374

for.end.391:                                      ; preds = %for.cond.374
  br label %if.end.392

if.end.392:                                       ; preds = %for.end.391, %if.else.367
  br label %if.end.393

if.end.393:                                       ; preds = %if.end.392, %if.then.361
  br label %for.inc.394

for.inc.394:                                      ; preds = %if.end.393
  %195 = load i32, i32* %i, align 4
  %dec = add nsw i32 %195, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.352

for.end.395:                                      ; preds = %for.cond.352
  %196 = load i32, i32* %changed, align 4
  store i32 %196, i32* %retval
  br label %return

return:                                           ; preds = %for.end.395, %cond.end.233, %for.end, %if.then
  %197 = load i32, i32* %retval
  ret i32 %197
}

; Function Attrs: nounwind uwtable
define internal void @remove_invalid_refs(i32 %regno) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.6, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp ult i32 %0, 32
  br i1 %cmp, label %for.body, label %for.end.7

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %3, null
  br i1 %tobool, label %for.body.2, label %for.end

for.body.2:                                       ; preds = %for.cond.1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 2
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 0
  %7 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load = load i32, i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp ne i32 %bf.clear, 61
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body.2
  %9 = load i32, i32* %regno.addr, align 4
  %10 = load i32, i32* %regno.addr, align 4
  %add = add i32 %10, 1
  %11 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp4 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 0
  %12 = load %struct.rtx_def*, %struct.rtx_def** %exp4, align 8
  %call = call i32 @refers_to_regno_p(i32 %9, i32 %add, %struct.rtx_def* %12, %struct.rtx_def** null)
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %14 = load i32, i32* %i, align 4
  call void @remove_from_table(%struct.table_elt* %13, i32 %14)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body.2
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %15 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %15, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6

for.inc.6:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %inc = add i32 %16, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.7:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @remove_invalid_subreg_refs(i32 %regno, i32 %offset, i32 %mode) #0 {
entry:
  %regno.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %end = alloca i32, align 4
  %exp = alloca %struct.rtx_def*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  store i32 %offset, i32* %offset.addr, align 4
  store i32 %mode, i32* %mode.addr, align 4
  %0 = load i32, i32* %offset.addr, align 4
  %1 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %2 to i32
  %sub = sub nsw i32 %conv, 1
  %add = add i32 %0, %sub
  store i32 %add, i32* %end, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.49, %entry
  %3 = load i32, i32* %i, align 4
  %cmp = icmp ult i32 %3, 32
  br i1 %cmp, label %for.body, label %for.end.50

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %idxprom2 = zext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom2
  %5 = load %struct.table_elt*, %struct.table_elt** %arrayidx3, align 8
  store %struct.table_elt* %5, %struct.table_elt** %p, align 8
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc, %for.body
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %6, null
  br i1 %tobool, label %for.body.5, label %for.end

for.body.5:                                       ; preds = %for.cond.4
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp6, align 8
  store %struct.rtx_def* %8, %struct.rtx_def** %exp, align 8
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 2
  %10 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %10, %struct.table_elt** %next, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load = load i32, i32* %12, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp7 = icmp ne i32 %bf.clear, 61
  br i1 %cmp7, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body.5
  %13 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load9 = load i32, i32* %14, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp ne i32 %bf.clear10, 63
  br i1 %cmp11, label %land.lhs.true.45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %17 = bitcast %struct.rtx_def* %16 to i32*
  %bf.load14 = load i32, i32* %17, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp ne i32 %bf.clear15, 61
  br i1 %cmp16, label %land.lhs.true.45, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %lor.lhs.false
  %18 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i32 0, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtx21, align 8
  %fld22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %20 = load i32, i32* %rtuint, align 4
  %21 = load i32, i32* %regno.addr, align 4
  %cmp24 = icmp ne i32 %20, %21
  br i1 %cmp24, label %land.lhs.true.45, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.18
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i32 0, i64 1
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %23 = load i32, i32* %rtuint29, align 4
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load30 = load i32, i32* %25, align 8
  %bf.lshr = lshr i32 %bf.load30, 16
  %bf.clear31 = and i32 %bf.lshr, 255
  %idxprom32 = sext i32 %bf.clear31 to i64
  %arrayidx33 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom32
  %26 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %26 to i32
  %sub35 = sub nsw i32 %conv34, 1
  %add36 = add i32 %23, %sub35
  %27 = load i32, i32* %offset.addr, align 4
  %cmp37 = icmp uge i32 %add36, %27
  br i1 %cmp37, label %land.lhs.true.39, label %if.end

land.lhs.true.39:                                 ; preds = %lor.lhs.false.26
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %fld40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i32 0, i64 1
  %rtuint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %29 = load i32, i32* %rtuint42, align 4
  %30 = load i32, i32* %end, align 4
  %cmp43 = icmp ule i32 %29, %30
  br i1 %cmp43, label %land.lhs.true.45, label %if.end

land.lhs.true.45:                                 ; preds = %land.lhs.true.39, %lor.lhs.false.18, %lor.lhs.false, %land.lhs.true
  %31 = load i32, i32* %regno.addr, align 4
  %32 = load i32, i32* %regno.addr, align 4
  %add46 = add i32 %32, 1
  %33 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp47 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %33, i32 0, i32 0
  %34 = load %struct.rtx_def*, %struct.rtx_def** %exp47, align 8
  %call = call i32 @refers_to_regno_p(i32 %31, i32 %add46, %struct.rtx_def* %34, %struct.rtx_def** null)
  %tobool48 = icmp ne i32 %call, 0
  br i1 %tobool48, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.45
  %35 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %36 = load i32, i32* %i, align 4
  call void @remove_from_table(%struct.table_elt* %35, i32 %36)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.45, %land.lhs.true.39, %lor.lhs.false.26, %for.body.5
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %37 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %37, %struct.table_elt** %p, align 8
  br label %for.cond.4

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.49

for.inc.49:                                       ; preds = %for.end
  %38 = load i32, i32* %i, align 4
  %inc = add i32 %38, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.50:                                       ; preds = %for.cond
  ret void
}

declare i32 @refers_to_regno_p(i32, i32, %struct.rtx_def*, %struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define internal i32 @preferrable(i32 %cost_a, i32 %regcost_a, i32 %cost_b, i32 %regcost_b) #0 {
entry:
  %retval = alloca i32, align 4
  %cost_a.addr = alloca i32, align 4
  %regcost_a.addr = alloca i32, align 4
  %cost_b.addr = alloca i32, align 4
  %regcost_b.addr = alloca i32, align 4
  store i32 %cost_a, i32* %cost_a.addr, align 4
  store i32 %regcost_a, i32* %regcost_a.addr, align 4
  store i32 %cost_b, i32* %cost_b.addr, align 4
  store i32 %regcost_b, i32* %regcost_b.addr, align 4
  %0 = load i32, i32* %cost_a.addr, align 4
  %1 = load i32, i32* %cost_b.addr, align 4
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end.6

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cost_a.addr, align 4
  %cmp1 = icmp eq i32 %2, 2147483647
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %3 = load i32, i32* %cost_b.addr, align 4
  %cmp3 = icmp eq i32 %3, 2147483647
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %entry
  %4 = load i32, i32* %regcost_a.addr, align 4
  %5 = load i32, i32* %regcost_b.addr, align 4
  %cmp7 = icmp ne i32 %4, %5
  br i1 %cmp7, label %if.then.8, label %if.end.15

if.then.8:                                        ; preds = %if.end.6
  %6 = load i32, i32* %regcost_a.addr, align 4
  %cmp9 = icmp eq i32 %6, 2147483647
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.then.8
  store i32 1, i32* %retval
  br label %return

if.end.11:                                        ; preds = %if.then.8
  %7 = load i32, i32* %regcost_b.addr, align 4
  %cmp12 = icmp eq i32 %7, 2147483647
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.11
  store i32 -1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.11
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end.6
  %8 = load i32, i32* %cost_a.addr, align 4
  %9 = load i32, i32* %cost_b.addr, align 4
  %cmp16 = icmp ne i32 %8, %9
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %10 = load i32, i32* %cost_a.addr, align 4
  %11 = load i32, i32* %cost_b.addr, align 4
  %sub = sub nsw i32 %10, %11
  store i32 %sub, i32* %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  %12 = load i32, i32* %regcost_a.addr, align 4
  %13 = load i32, i32* %regcost_b.addr, align 4
  %cmp19 = icmp ne i32 %12, %13
  br i1 %cmp19, label %if.then.20, label %if.end.22

if.then.20:                                       ; preds = %if.end.18
  %14 = load i32, i32* %regcost_a.addr, align 4
  %15 = load i32, i32* %regcost_b.addr, align 4
  %sub21 = sub nsw i32 %14, %15
  store i32 %sub21, i32* %retval
  br label %return

if.end.22:                                        ; preds = %if.end.18
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.22, %if.then.20, %if.then.17, %if.then.13, %if.then.10, %if.then.4, %if.then.2
  %16 = load i32, i32* %retval
  ret i32 %16
}

declare %struct.rtx_def* @get_related_value(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @invalidate_memory() #0 {
entry:
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.4, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 32
  br i1 %cmp, label %for.body, label %for.end.5

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool = icmp ne %struct.table_elt* %3, null
  br i1 %tobool, label %for.body.2, label %for.end

for.body.2:                                       ; preds = %for.cond.1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 2
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 11
  %7 = load i8, i8* %in_memory, align 1
  %tobool3 = icmp ne i8 %7, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.2
  %8 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %9 = load i32, i32* %i, align 4
  call void @remove_from_table(%struct.table_elt* %8, i32 %9)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.2
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %10, %struct.table_elt** %p, align 8
  br label %for.cond.1

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.4

for.inc.4:                                        ; preds = %for.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end.5:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @invalidate_for_call() #0 {
entry:
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i = alloca i32, align 4
  %hash = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %in_table = alloca i32, align 4
  store i32 0, i32* %in_table, align 4
  store i32 0, i32* %regno, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %regno, align 4
  %cmp = icmp ult i32 %0, 53
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* @regs_invalidated_by_call, align 8
  %2 = load i32, i32* %regno, align 4
  %sh_prom = zext i32 %2 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %1, %shl
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end.18

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %regno, align 4
  call void @delete_reg_equiv(i32 %3)
  %4 = load i32, i32* %regno, align 4
  %5 = load i32, i32* @cached_regno, align 4
  %cmp1 = icmp eq i32 %4, %5
  br i1 %cmp1, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool2 = icmp ne %struct.cse_reg_info* %6, null
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %8 = load i32, i32* %regno, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %7, %cond.true ], [ %call, %cond.false ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 4
  %9 = load i32, i32* %reg_tick, align 4
  %cmp3 = icmp sge i32 %9, 0
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %cond.end
  %10 = load i32, i32* %regno, align 4
  %11 = load i32, i32* @cached_regno, align 4
  %cmp5 = icmp eq i32 %10, %11
  br i1 %cmp5, label %land.lhs.true.6, label %cond.false.9

land.lhs.true.6:                                  ; preds = %if.then.4
  %12 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool7 = icmp ne %struct.cse_reg_info* %12, null
  br i1 %tobool7, label %cond.true.8, label %cond.false.9

cond.true.8:                                      ; preds = %land.lhs.true.6
  %13 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.11

cond.false.9:                                     ; preds = %land.lhs.true.6, %if.then.4
  %14 = load i32, i32* %regno, align 4
  %call10 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %14)
  br label %cond.end.11

cond.end.11:                                      ; preds = %cond.false.9, %cond.true.8
  %cond12 = phi %struct.cse_reg_info* [ %13, %cond.true.8 ], [ %call10, %cond.false.9 ]
  %reg_tick13 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond12, i32 0, i32 4
  %15 = load i32, i32* %reg_tick13, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %reg_tick13, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.11, %cond.end
  %16 = load i64, i64* @hard_regs_in_table, align 8
  %17 = load i32, i32* %regno, align 4
  %sh_prom14 = zext i32 %17 to i64
  %shl15 = shl i64 1, %sh_prom14
  %and16 = and i64 %16, %shl15
  %cmp17 = icmp ne i64 %and16, 0
  %conv = zext i1 %cmp17 to i32
  %18 = load i32, i32* %in_table, align 4
  %or = or i32 %18, %conv
  store i32 %or, i32* %in_table, align 4
  br label %if.end.18

if.end.18:                                        ; preds = %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.18
  %19 = load i32, i32* %regno, align 4
  %inc19 = add i32 %19, 1
  store i32 %inc19, i32* %regno, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %in_table, align 4
  %tobool20 = icmp ne i32 %20, 0
  br i1 %tobool20, label %if.then.21, label %if.end.142

if.then.21:                                       ; preds = %for.end
  store i32 0, i32* %hash, align 4
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc.139, %if.then.21
  %21 = load i32, i32* %hash, align 4
  %cmp23 = icmp ult i32 %21, 32
  br i1 %cmp23, label %for.body.25, label %for.end.141

for.body.25:                                      ; preds = %for.cond.22
  %22 = load i32, i32* %hash, align 4
  %idxprom = zext i32 %22 to i64
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i32 0, i64 %idxprom
  %23 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8
  store %struct.table_elt* %23, %struct.table_elt** %p, align 8
  br label %for.cond.26

for.cond.26:                                      ; preds = %for.inc.137, %for.body.25
  %24 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %tobool27 = icmp ne %struct.table_elt* %24, null
  br i1 %tobool27, label %for.body.28, label %for.end.138

for.body.28:                                      ; preds = %for.cond.26
  %25 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %25, i32 0, i32 2
  %26 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8
  store %struct.table_elt* %26, %struct.table_elt** %next, align 8
  %27 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 0
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load = load i32, i32* %29, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp29 = icmp ne i32 %bf.clear, 61
  br i1 %cmp29, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.28
  %30 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp31 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %30, i32 0, i32 0
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp31, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %32 = load i32, i32* %rtuint, align 4
  %cmp33 = icmp uge i32 %32, 53
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %lor.lhs.false, %for.body.28
  br label %for.inc.137

if.end.36:                                        ; preds = %lor.lhs.false
  %33 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp37 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %33, i32 0, i32 0
  %34 = load %struct.rtx_def*, %struct.rtx_def** %exp37, align 8
  %fld38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i32 0, i64 0
  %rtuint40 = bitcast %union.rtunion_def* %arrayidx39 to i32*
  %35 = load i32, i32* %rtuint40, align 4
  store i32 %35, i32* %regno, align 4
  %36 = load i32, i32* %regno, align 4
  %37 = load i32, i32* %regno, align 4
  %cmp41 = icmp uge i32 %37, 8
  br i1 %cmp41, label %land.lhs.true.43, label %lor.lhs.false.46

land.lhs.true.43:                                 ; preds = %if.end.36
  %38 = load i32, i32* %regno, align 4
  %cmp44 = icmp ule i32 %38, 15
  br i1 %cmp44, label %cond.true.64, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %land.lhs.true.43, %if.end.36
  %39 = load i32, i32* %regno, align 4
  %cmp47 = icmp uge i32 %39, 21
  br i1 %cmp47, label %land.lhs.true.49, label %lor.lhs.false.52

land.lhs.true.49:                                 ; preds = %lor.lhs.false.46
  %40 = load i32, i32* %regno, align 4
  %cmp50 = icmp ule i32 %40, 28
  br i1 %cmp50, label %cond.true.64, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %land.lhs.true.49, %lor.lhs.false.46
  %41 = load i32, i32* %regno, align 4
  %cmp53 = icmp uge i32 %41, 45
  br i1 %cmp53, label %land.lhs.true.55, label %lor.lhs.false.58

land.lhs.true.55:                                 ; preds = %lor.lhs.false.52
  %42 = load i32, i32* %regno, align 4
  %cmp56 = icmp ule i32 %42, 52
  br i1 %cmp56, label %cond.true.64, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %land.lhs.true.55, %lor.lhs.false.52
  %43 = load i32, i32* %regno, align 4
  %cmp59 = icmp uge i32 %43, 29
  br i1 %cmp59, label %land.lhs.true.61, label %cond.false.81

land.lhs.true.61:                                 ; preds = %lor.lhs.false.58
  %44 = load i32, i32* %regno, align 4
  %cmp62 = icmp ule i32 %44, 36
  br i1 %cmp62, label %cond.true.64, label %cond.false.81

cond.true.64:                                     ; preds = %land.lhs.true.61, %land.lhs.true.55, %land.lhs.true.49, %land.lhs.true.43
  %45 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp65 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %45, i32 0, i32 0
  %46 = load %struct.rtx_def*, %struct.rtx_def** %exp65, align 8
  %47 = bitcast %struct.rtx_def* %46 to i32*
  %bf.load66 = load i32, i32* %47, align 8
  %bf.lshr = lshr i32 %bf.load66, 16
  %bf.clear67 = and i32 %bf.lshr, 255
  %idxprom68 = sext i32 %bf.clear67 to i64
  %arrayidx69 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom68
  %48 = load i32, i32* %arrayidx69, align 4
  %cmp70 = icmp eq i32 %48, 5
  br i1 %cmp70, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true.64
  %49 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp72 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %49, i32 0, i32 0
  %50 = load %struct.rtx_def*, %struct.rtx_def** %exp72, align 8
  %51 = bitcast %struct.rtx_def* %50 to i32*
  %bf.load73 = load i32, i32* %51, align 8
  %bf.lshr74 = lshr i32 %bf.load73, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %idxprom76 = sext i32 %bf.clear75 to i64
  %arrayidx77 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i64 %idxprom76
  %52 = load i32, i32* %arrayidx77, align 4
  %cmp78 = icmp eq i32 %52, 6
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.true.64
  %53 = phi i1 [ true, %cond.true.64 ], [ %cmp78, %lor.rhs ]
  %cond80 = select i1 %53, i32 2, i32 1
  br label %cond.end.121

cond.false.81:                                    ; preds = %land.lhs.true.61, %lor.lhs.false.58
  %54 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp82 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %54, i32 0, i32 0
  %55 = load %struct.rtx_def*, %struct.rtx_def** %exp82, align 8
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load83 = load i32, i32* %56, align 8
  %bf.lshr84 = lshr i32 %bf.load83, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %cmp86 = icmp eq i32 %bf.clear85, 18
  br i1 %cmp86, label %cond.true.88, label %cond.false.92

cond.true.88:                                     ; preds = %cond.false.81
  %57 = load i32, i32* @target_flags, align 4
  %and89 = and i32 %57, 33554432
  %tobool90 = icmp ne i32 %and89, 0
  %cond91 = select i1 %tobool90, i32 2, i32 3
  br label %cond.end.119

cond.false.92:                                    ; preds = %cond.false.81
  %58 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp93 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %58, i32 0, i32 0
  %59 = load %struct.rtx_def*, %struct.rtx_def** %exp93, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load94 = load i32, i32* %60, align 8
  %bf.lshr95 = lshr i32 %bf.load94, 16
  %bf.clear96 = and i32 %bf.lshr95, 255
  %cmp97 = icmp eq i32 %bf.clear96, 24
  br i1 %cmp97, label %cond.true.99, label %cond.false.103

cond.true.99:                                     ; preds = %cond.false.92
  %61 = load i32, i32* @target_flags, align 4
  %and100 = and i32 %61, 33554432
  %tobool101 = icmp ne i32 %and100, 0
  %cond102 = select i1 %tobool101, i32 4, i32 6
  br label %cond.end.117

cond.false.103:                                   ; preds = %cond.false.92
  %62 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp104 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %62, i32 0, i32 0
  %63 = load %struct.rtx_def*, %struct.rtx_def** %exp104, align 8
  %64 = bitcast %struct.rtx_def* %63 to i32*
  %bf.load105 = load i32, i32* %64, align 8
  %bf.lshr106 = lshr i32 %bf.load105, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %idxprom108 = sext i32 %bf.clear107 to i64
  %arrayidx109 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i64 %idxprom108
  %65 = load i8, i8* %arrayidx109, align 1
  %conv110 = zext i8 %65 to i32
  %66 = load i32, i32* @target_flags, align 4
  %and111 = and i32 %66, 33554432
  %tobool112 = icmp ne i32 %and111, 0
  %cond113 = select i1 %tobool112, i32 8, i32 4
  %add = add nsw i32 %conv110, %cond113
  %sub = sub nsw i32 %add, 1
  %67 = load i32, i32* @target_flags, align 4
  %and114 = and i32 %67, 33554432
  %tobool115 = icmp ne i32 %and114, 0
  %cond116 = select i1 %tobool115, i32 8, i32 4
  %div = sdiv i32 %sub, %cond116
  br label %cond.end.117

cond.end.117:                                     ; preds = %cond.false.103, %cond.true.99
  %cond118 = phi i32 [ %cond102, %cond.true.99 ], [ %div, %cond.false.103 ]
  br label %cond.end.119

cond.end.119:                                     ; preds = %cond.end.117, %cond.true.88
  %cond120 = phi i32 [ %cond91, %cond.true.88 ], [ %cond118, %cond.end.117 ]
  br label %cond.end.121

cond.end.121:                                     ; preds = %cond.end.119, %lor.end
  %cond122 = phi i32 [ %cond80, %lor.end ], [ %cond120, %cond.end.119 ]
  %add123 = add i32 %36, %cond122
  store i32 %add123, i32* %endregno, align 4
  %68 = load i32, i32* %regno, align 4
  store i32 %68, i32* %i, align 4
  br label %for.cond.124

for.cond.124:                                     ; preds = %for.inc.134, %cond.end.121
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %endregno, align 4
  %cmp125 = icmp ult i32 %69, %70
  br i1 %cmp125, label %for.body.127, label %for.end.136

for.body.127:                                     ; preds = %for.cond.124
  %71 = load i64, i64* @regs_invalidated_by_call, align 8
  %72 = load i32, i32* %i, align 4
  %sh_prom128 = zext i32 %72 to i64
  %shl129 = shl i64 1, %sh_prom128
  %and130 = and i64 %71, %shl129
  %tobool131 = icmp ne i64 %and130, 0
  br i1 %tobool131, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %for.body.127
  %73 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %74 = load i32, i32* %hash, align 4
  call void @remove_from_table(%struct.table_elt* %73, i32 %74)
  br label %for.end.136

if.end.133:                                       ; preds = %for.body.127
  br label %for.inc.134

for.inc.134:                                      ; preds = %if.end.133
  %75 = load i32, i32* %i, align 4
  %inc135 = add i32 %75, 1
  store i32 %inc135, i32* %i, align 4
  br label %for.cond.124

for.end.136:                                      ; preds = %if.then.132, %for.cond.124
  br label %for.inc.137

for.inc.137:                                      ; preds = %for.end.136, %if.then.35
  %76 = load %struct.table_elt*, %struct.table_elt** %next, align 8
  store %struct.table_elt* %76, %struct.table_elt** %p, align 8
  br label %for.cond.26

for.end.138:                                      ; preds = %for.cond.26
  br label %for.inc.139

for.inc.139:                                      ; preds = %for.end.138
  %77 = load i32, i32* %hash, align 4
  %inc140 = add i32 %77, 1
  store i32 %inc140, i32* %hash, align 4
  br label %for.cond.22

for.end.141:                                      ; preds = %for.cond.22
  br label %if.end.142

if.end.142:                                       ; preds = %for.end.141, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @invalidate_from_clobbers(%struct.rtx_def* %x) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %ref = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %ref44 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 49
  br i1 %cmp, label %if.then, label %if.else.28

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  store %struct.rtx_def* %3, %struct.rtx_def** %ref, align 8
  %4 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %tobool = icmp ne %struct.rtx_def* %4, null
  br i1 %tobool, label %if.then.1, label %if.end.27

if.then.1:                                        ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load2 = load i32, i32* %6, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 61
  br i1 %cmp4, label %if.then.12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load5 = load i32, i32* %8, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 63
  br i1 %cmp7, label %if.then.12, label %lor.lhs.false.8

lor.lhs.false.8:                                  ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load9 = load i32, i32* %10, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %lor.lhs.false.8, %lor.lhs.false, %if.then.1
  %11 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  call void @invalidate(%struct.rtx_def* %11, i32 0)
  br label %if.end.26

if.else:                                          ; preds = %lor.lhs.false.8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load13 = load i32, i32* %13, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 64
  br i1 %cmp15, label %if.then.20, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %if.else
  %14 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load17 = load i32, i32* %15, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 133
  br i1 %cmp19, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %lor.lhs.false.16, %if.else
  %16 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load24 = load i32, i32* %19, align 8
  %bf.lshr = lshr i32 %bf.load24, 16
  %bf.clear25 = and i32 %bf.lshr, 255
  call void @invalidate(%struct.rtx_def* %17, i32 %bf.clear25)
  br label %if.end

if.end:                                           ; preds = %if.then.20, %lor.lhs.false.16
  br label %if.end.26

if.end.26:                                        ; preds = %if.end, %if.then.12
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  br label %if.end.79

if.else.28:                                       ; preds = %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load29 = load i32, i32* %21, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 39
  br i1 %cmp31, label %if.then.32, label %if.end.78

if.then.32:                                       ; preds = %if.else.28
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i32 0, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtvec_def**
  %23 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec, align 8
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %23, i32 0, i32 0
  %24 = load i32, i32* %num_elem, align 4
  %sub = sub nsw i32 %24, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.32
  %25 = load i32, i32* %i, align 4
  %cmp35 = icmp sge i32 %25, 0
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4
  %idxprom = sext i32 %26 to i64
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i32 0, i64 0
  %rtvec38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rtvec38, align 8
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %28, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i32 0, i64 %idxprom
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8
  store %struct.rtx_def* %29, %struct.rtx_def** %y, align 8
  %30 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %31 = bitcast %struct.rtx_def* %30 to i32*
  %bf.load40 = load i32, i32* %31, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 49
  br i1 %cmp42, label %if.then.43, label %if.end.77

if.then.43:                                       ; preds = %for.body
  %32 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8
  %fld45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i32 0, i64 0
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtx47, align 8
  store %struct.rtx_def* %33, %struct.rtx_def** %ref44, align 8
  %34 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %35 = bitcast %struct.rtx_def* %34 to i32*
  %bf.load48 = load i32, i32* %35, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 61
  br i1 %cmp50, label %if.then.59, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %if.then.43
  %36 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %37 = bitcast %struct.rtx_def* %36 to i32*
  %bf.load52 = load i32, i32* %37, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 63
  br i1 %cmp54, label %if.then.59, label %lor.lhs.false.55

lor.lhs.false.55:                                 ; preds = %lor.lhs.false.51
  %38 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %39 = bitcast %struct.rtx_def* %38 to i32*
  %bf.load56 = load i32, i32* %39, align 8
  %bf.clear57 = and i32 %bf.load56, 65535
  %cmp58 = icmp eq i32 %bf.clear57, 66
  br i1 %cmp58, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %lor.lhs.false.55, %lor.lhs.false.51, %if.then.43
  %40 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  call void @invalidate(%struct.rtx_def* %40, i32 0)
  br label %if.end.76

if.else.60:                                       ; preds = %lor.lhs.false.55
  %41 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %42 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load61 = load i32, i32* %42, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 64
  br i1 %cmp63, label %if.then.68, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %if.else.60
  %43 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load65 = load i32, i32* %44, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 133
  br i1 %cmp67, label %if.then.68, label %if.end.75

if.then.68:                                       ; preds = %lor.lhs.false.64, %if.else.60
  %45 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %fld69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i32 0, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtx71, align 8
  %47 = load %struct.rtx_def*, %struct.rtx_def** %ref44, align 8
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load72 = load i32, i32* %48, align 8
  %bf.lshr73 = lshr i32 %bf.load72, 16
  %bf.clear74 = and i32 %bf.lshr73, 255
  call void @invalidate(%struct.rtx_def* %46, i32 %bf.clear74)
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.68, %lor.lhs.false.64
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %if.then.59
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.77
  %49 = load i32, i32* %i, align 4
  %dec = add nsw i32 %49, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.78

if.end.78:                                        ; preds = %for.end, %if.else.28
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.end.27
  ret void
}

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @invalidate_skipped_set(%struct.rtx_def* %dest, %struct.rtx_def* %set, i8* %data) #0 {
entry:
  %dest.addr = alloca %struct.rtx_def*, align 8
  %set.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  store i32 %bf.clear, i32* %code, align 4
  %2 = load i32, i32* %code, align 4
  %cmp = icmp eq i32 %2, 66
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %call = call i32 @addr_affects_sp_p(%struct.rtx_def* %3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load2 = load i32, i32* %5, align 8
  %bf.lshr = lshr i32 %bf.load2, 28
  %bf.clear3 = and i32 %bf.lshr, 1
  %tobool4 = icmp ne i32 %bf.clear3, 0
  br i1 %tobool4, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load5 = load i32, i32* %7, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 51
  br i1 %cmp8, label %if.then, label %lor.lhs.false.9

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %call10 = call i32 @cse_rtx_varies_p(%struct.rtx_def* %9, i32 0)
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.9, %lor.lhs.false, %land.lhs.true.1
  call void @invalidate_memory()
  br label %if.end.36

if.end:                                           ; preds = %lor.lhs.false.9, %land.lhs.true, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load12 = load i32, i32* %11, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 49
  br i1 %cmp14, label %if.then.17, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 0), align 8
  %cmp16 = icmp eq %struct.rtx_def* %12, %13
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %lor.lhs.false.15, %if.end
  br label %if.end.36

if.end.18:                                        ; preds = %lor.lhs.false.15
  %14 = load i32, i32* %code, align 4
  %cmp19 = icmp eq i32 %14, 64
  br i1 %cmp19, label %if.then.22, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %if.end.18
  %15 = load i32, i32* %code, align 4
  %cmp21 = icmp eq i32 %15, 133
  br i1 %cmp21, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %lor.lhs.false.20, %if.end.18
  %16 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 0
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %18 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load26 = load i32, i32* %19, align 8
  %bf.lshr27 = lshr i32 %bf.load26, 16
  %bf.clear28 = and i32 %bf.lshr27, 255
  call void @invalidate(%struct.rtx_def* %17, i32 %bf.clear28)
  br label %if.end.36

if.else:                                          ; preds = %lor.lhs.false.20
  %20 = load i32, i32* %code, align 4
  %cmp29 = icmp eq i32 %20, 61
  br i1 %cmp29, label %if.then.34, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %if.else
  %21 = load i32, i32* %code, align 4
  %cmp31 = icmp eq i32 %21, 63
  br i1 %cmp31, label %if.then.34, label %lor.lhs.false.32

lor.lhs.false.32:                                 ; preds = %lor.lhs.false.30
  %22 = load i32, i32* %code, align 4
  %cmp33 = icmp eq i32 %22, 66
  br i1 %cmp33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %lor.lhs.false.32, %lor.lhs.false.30, %if.else
  %23 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8
  call void @invalidate(%struct.rtx_def* %23, i32 0)
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.34, %lor.lhs.false.32
  br label %if.end.36

if.end.36:                                        ; preds = %if.then, %if.then.17, %if.end.35, %if.then.22
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @addr_affects_sp_p(%struct.rtx_def* %addr) #0 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %addr, %struct.rtx_def** %addr.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom = sext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 97
  br i1 %cmp, label %land.lhs.true, label %if.end.34

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load3 = load i32, i32* %5, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 61
  br i1 %cmp5, label %land.lhs.true.7, label %if.end.34

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %8 = load i32, i32* %rtuint, align 4
  %cmp13 = icmp eq i32 %8, 7
  br i1 %cmp13, label %if.then, label %if.end.34

if.then:                                          ; preds = %land.lhs.true.7
  %9 = load i32, i32* @cached_regno, align 4
  %cmp15 = icmp eq i32 7, %9
  br i1 %cmp15, label %land.lhs.true.17, label %cond.false

land.lhs.true.17:                                 ; preds = %if.then
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %10, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.17
  %11 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.17, %if.then
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 7)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cse_reg_info* [ %11, %cond.true ], [ %call, %cond.false ]
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 4
  %12 = load i32, i32* %reg_tick, align 4
  %cmp18 = icmp sge i32 %12, 0
  br i1 %cmp18, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %cond.end
  %13 = load i32, i32* @cached_regno, align 4
  %cmp21 = icmp eq i32 7, %13
  br i1 %cmp21, label %land.lhs.true.23, label %cond.false.26

land.lhs.true.23:                                 ; preds = %if.then.20
  %14 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool24 = icmp ne %struct.cse_reg_info* %14, null
  br i1 %tobool24, label %cond.true.25, label %cond.false.26

cond.true.25:                                     ; preds = %land.lhs.true.23
  %15 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end.28

cond.false.26:                                    ; preds = %land.lhs.true.23, %if.then.20
  %call27 = call %struct.cse_reg_info* @get_cse_reg_info(i32 7)
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.26, %cond.true.25
  %cond29 = phi %struct.cse_reg_info* [ %15, %cond.true.25 ], [ %call27, %cond.false.26 ]
  %reg_tick30 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond29, i32 0, i32 4
  %16 = load i32, i32* %reg_tick30, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %reg_tick30, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end.28, %cond.end
  %17 = load i64, i64* @hard_regs_in_table, align 8
  %and = and i64 %17, 128
  %tobool31 = icmp ne i64 %and, 0
  br i1 %tobool31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i32 0, i64 2), align 8
  call void @invalidate(%struct.rtx_def* %18, i32 0)
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.32, %if.end
  store i32 1, i32* %retval
  br label %return

if.end.34:                                        ; preds = %land.lhs.true.7, %land.lhs.true, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.34, %if.end.33
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @use_related_value(%struct.rtx_def* %x, %struct.table_elt* %elt) #0 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %elt.addr = alloca %struct.table_elt*, align 8
  %relt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  %q = alloca %struct.table_elt*, align 8
  %offset = alloca i64, align 8
  %subexp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.table_elt* %elt, %struct.table_elt** %elt.addr, align 8
  store %struct.table_elt* null, %struct.table_elt** %relt, align 8
  %0 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp = icmp ne %struct.table_elt* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1, i32 0, i32 7
  %2 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8
  %cmp1 = icmp ne %struct.table_elt* %2, null
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  store %struct.table_elt* %3, %struct.table_elt** %relt, align 8
  br label %if.end.16

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8
  %cmp2 = icmp eq %struct.table_elt* %4, null
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.15

land.lhs.true.3:                                  ; preds = %if.else
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %6 = bitcast %struct.rtx_def* %5 to i32*
  %bf.load = load i32, i32* %6, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 58
  br i1 %cmp4, label %if.then.5, label %if.end.15

if.then.5:                                        ; preds = %land.lhs.true.3
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call = call %struct.rtx_def* @get_related_value(%struct.rtx_def* %7)
  store %struct.rtx_def* %call, %struct.rtx_def** %subexp, align 8
  %8 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %cmp6 = icmp ne %struct.rtx_def* %8, null
  br i1 %cmp6, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %if.then.5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load8 = load i32, i32* %12, align 8
  %bf.lshr = lshr i32 %bf.load8, 16
  %bf.clear9 = and i32 %bf.lshr, 255
  %call10 = call i32 @safe_hash(%struct.rtx_def* %10, i32 %bf.clear9)
  %and = and i32 %call10, 31
  %13 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8
  %14 = bitcast %struct.rtx_def* %13 to i32*
  %bf.load11 = load i32, i32* %14, align 8
  %bf.lshr12 = lshr i32 %bf.load11, 16
  %bf.clear13 = and i32 %bf.lshr12, 255
  %call14 = call %struct.table_elt* @lookup(%struct.rtx_def* %9, i32 %and, i32 %bf.clear13)
  store %struct.table_elt* %call14, %struct.table_elt** %relt, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.7, %if.then.5
  br label %if.end.15

if.end.15:                                        ; preds = %if.end, %land.lhs.true.3, %if.else
  br label %if.end.16

if.end.16:                                        ; preds = %if.end.15, %if.then
  %15 = load %struct.table_elt*, %struct.table_elt** %relt, align 8
  %cmp17 = icmp eq %struct.table_elt* %15, null
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.16
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.19:                                        ; preds = %if.end.16
  %16 = load %struct.table_elt*, %struct.table_elt** %relt, align 8
  store %struct.table_elt* %16, %struct.table_elt** %p, align 8
  br label %while.body

while.body:                                       ; preds = %if.end.19, %if.end.38
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %18 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %18, i32 0, i32 0
  %19 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %call20 = call i32 @rtx_equal_p(%struct.rtx_def* %17, %struct.rtx_def* %19)
  %tobool = icmp ne i32 %call20, 0
  br i1 %tobool, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %while.body
  store %struct.table_elt* null, %struct.table_elt** %q, align 8
  br label %if.end.30

if.else.22:                                       ; preds = %while.body
  %20 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %20, i32 0, i32 6
  %21 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %21, %struct.table_elt** %q, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.22
  %22 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %tobool23 = icmp ne %struct.table_elt* %22, null
  br i1 %tobool23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %exp24 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp24, align 8
  %25 = bitcast %struct.rtx_def* %24 to i32*
  %bf.load25 = load i32, i32* %25, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 61
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %for.body
  br label %for.end

if.end.29:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.29
  %26 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 4
  %27 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %27, %struct.table_elt** %q, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.28, %for.cond
  br label %if.end.30

if.end.30:                                        ; preds = %for.end, %if.then.21
  %28 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %tobool31 = icmp ne %struct.table_elt* %28, null
  br i1 %tobool31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.30
  br label %while.end

if.end.33:                                        ; preds = %if.end.30
  %29 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %related_value34 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %29, i32 0, i32 7
  %30 = load %struct.table_elt*, %struct.table_elt** %related_value34, align 8
  store %struct.table_elt* %30, %struct.table_elt** %p, align 8
  %31 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %32 = load %struct.table_elt*, %struct.table_elt** %relt, align 8
  %cmp35 = icmp eq %struct.table_elt* %31, %32
  br i1 %cmp35, label %if.then.37, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.33
  %33 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %cmp36 = icmp eq %struct.table_elt* %33, null
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %lor.lhs.false, %if.end.33
  br label %while.end

if.end.38:                                        ; preds = %lor.lhs.false
  br label %while.body

while.end:                                        ; preds = %if.then.37, %if.then.32
  %34 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %cmp39 = icmp eq %struct.table_elt* %34, null
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %while.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval
  br label %return

if.end.41:                                        ; preds = %while.end
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %call42 = call i64 @get_integer_term(%struct.rtx_def* %35)
  %36 = load %struct.table_elt*, %struct.table_elt** %p, align 8
  %exp43 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %36, i32 0, i32 0
  %37 = load %struct.rtx_def*, %struct.rtx_def** %exp43, align 8
  %call44 = call i64 @get_integer_term(%struct.rtx_def* %37)
  %sub = sub nsw i64 %call42, %call44
  store i64 %sub, i64* %offset, align 8
  %38 = load %struct.table_elt*, %struct.table_elt** %q, align 8
  %exp45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 0
  %39 = load %struct.rtx_def*, %struct.rtx_def** %exp45, align 8
  %40 = load i64, i64* %offset, align 8
  %call46 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %39, i64 %40)
  store %struct.rtx_def* %call46, %struct.rtx_def** %retval
  br label %return

return:                                           ; preds = %if.end.41, %if.then.40, %if.then.18
  %41 = load %struct.rtx_def*, %struct.rtx_def** %retval
  ret %struct.rtx_def* %41
}

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #1

declare i32 @condjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare void @never_reached_warning(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

declare i64 @get_integer_term(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @cse_set_around_loop(%struct.rtx_def* %x, %struct.rtx_def* %insn, %struct.rtx_def* %loop_start) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %loop_start.addr = alloca %struct.rtx_def*, align 8
  %src_elt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %q = alloca %struct.rtx_def*, align 8
  %cse_check_loop_start_value = alloca %struct.rtx_def*, align 8
  %nregs = alloca i32, align 4
  %move = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store %struct.rtx_def* %loop_start, %struct.rtx_def** %loop_start.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32, i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %land.lhs.true, label %if.end.235

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %4 = bitcast %struct.rtx_def* %3 to i32*
  %bf.load1 = load i32, i32* %4, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp ne i32 %bf.clear2, 59
  br i1 %cmp3, label %land.lhs.true.4, label %if.end.235

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i32 0, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtx7, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load8 = load i32, i32* %7, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp ne i32 %bf.clear9, 69
  br i1 %cmp10, label %land.lhs.true.11, label %if.end.235

land.lhs.true.11:                                 ; preds = %land.lhs.true.4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i32 0, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtx14, align 8
  %10 = bitcast %struct.rtx_def* %9 to i32*
  %bf.load15 = load i32, i32* %10, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp ne i32 %bf.clear16, 61
  br i1 %cmp17, label %if.then, label %if.end.235

if.then:                                          ; preds = %land.lhs.true.11
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i32 0, i64 1
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtx20, align 8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i32 0, i64 1
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtx23, align 8
  %15 = bitcast %struct.rtx_def* %14 to i32*
  %bf.load24 = load i32, i32* %15, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 61
  br i1 %cmp26, label %land.lhs.true.27, label %cond.false.49

land.lhs.true.27:                                 ; preds = %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i32 0, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rtx30, align 8
  %fld31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx32 to i32*
  %18 = load i32, i32* %rtuint, align 4
  %cmp33 = icmp uge i32 %18, 53
  br i1 %cmp33, label %cond.true, label %cond.false.49

cond.true:                                        ; preds = %land.lhs.true.27
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i32 0, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtx36, align 8
  %fld37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i32 0, i64 0
  %rtuint39 = bitcast %union.rtunion_def* %arrayidx38 to i32*
  %21 = load i32, i32* %rtuint39, align 4
  %22 = load i32, i32* @cached_regno, align 4
  %cmp40 = icmp eq i32 %21, %22
  br i1 %cmp40, label %land.lhs.true.41, label %cond.false

land.lhs.true.41:                                 ; preds = %cond.true
  %23 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  %tobool = icmp ne %struct.cse_reg_info* %23, null
  br i1 %tobool, label %cond.true.42, label %cond.false

cond.true.42:                                     ; preds = %land.lhs.true.41
  %24 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cached_cse_reg_info, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.41, %cond.true
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i32 0, i64 1
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtx45, align 8
  %fld46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i32 0, i64 0
  %rtuint48 = bitcast %union.rtunion_def* %arrayidx47 to i32*
  %27 = load i32, i32* %rtuint48, align 4
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %27)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.42
  %cond = phi %struct.cse_reg_info* [ %24, %cond.true.42 ], [ %call, %cond.false ]
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %cond, i32 0, i32 3
  %28 = load i32, i32* %reg_qty, align 4
  %add = add i32 7808, %28
  br label %cond.end.59

cond.false.49:                                    ; preds = %land.lhs.true.27, %if.then
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i32 0, i64 1
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rtx52, align 8
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i32 0, i64 0
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rtx55, align 8
  %33 = bitcast %struct.rtx_def* %32 to i32*
  %bf.load56 = load i32, i32* %33, align 8
  %bf.lshr = lshr i32 %bf.load56, 16
  %bf.clear57 = and i32 %bf.lshr, 255
  %call58 = call i32 @canon_hash(%struct.rtx_def* %30, i32 %bf.clear57)
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.49, %cond.end
  %cond60 = phi i32 [ %add, %cond.end ], [ %call58, %cond.false.49 ]
  %and = and i32 %cond60, 31
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i32 0, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rtx63, align 8
  %36 = bitcast %struct.rtx_def* %35 to i32*
  %bf.load64 = load i32, i32* %36, align 8
  %bf.lshr65 = lshr i32 %bf.load64, 16
  %bf.clear66 = and i32 %bf.lshr65, 255
  %call67 = call %struct.table_elt* @lookup(%struct.rtx_def* %12, i32 %and, i32 %bf.clear66)
  store %struct.table_elt* %call67, %struct.table_elt** %src_elt, align 8
  %37 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %tobool68 = icmp ne %struct.table_elt* %37, null
  br i1 %tobool68, label %if.then.69, label %if.end.234

if.then.69:                                       ; preds = %cond.end.59
  %38 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 6
  %39 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8
  store %struct.table_elt* %39, %struct.table_elt** %src_elt, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.232, %if.then.69
  %40 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %tobool70 = icmp ne %struct.table_elt* %40, null
  br i1 %tobool70, label %for.body, label %for.end.233

for.body:                                         ; preds = %for.cond
  %41 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 0
  %42 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8
  %43 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load71 = load i32, i32* %43, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 61
  br i1 %cmp73, label %land.lhs.true.74, label %if.end.231

land.lhs.true.74:                                 ; preds = %for.body
  %44 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp75 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %44, i32 0, i32 0
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp75, align 8
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load76 = load i32, i32* %46, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 28
  %bf.clear78 = and i32 %bf.lshr77, 1
  %tobool79 = icmp ne i32 %bf.clear78, 0
  br i1 %tobool79, label %land.lhs.true.80, label %if.end.231

land.lhs.true.80:                                 ; preds = %land.lhs.true.74
  %47 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp81 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 0
  %48 = load %struct.rtx_def*, %struct.rtx_def** %exp81, align 8
  %49 = bitcast %struct.rtx_def* %48 to i32*
  %bf.load82 = load i32, i32* %49, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 61
  br i1 %cmp84, label %cond.true.85, label %cond.false.86

cond.true.85:                                     ; preds = %land.lhs.true.80
  br label %cond.end.89

cond.false.86:                                    ; preds = %land.lhs.true.80
  %50 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp87 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %50, i32 0, i32 0
  %51 = load %struct.rtx_def*, %struct.rtx_def** %exp87, align 8
  %call88 = call i32 @notreg_cost(%struct.rtx_def* %51, i32 47)
  br label %cond.end.89

cond.end.89:                                      ; preds = %cond.false.86, %cond.true.85
  %cond90 = phi i32 [ 0, %cond.true.85 ], [ %call88, %cond.false.86 ]
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i32 0, i64 1
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rtx93, align 8
  %54 = bitcast %struct.rtx_def* %53 to i32*
  %bf.load94 = load i32, i32* %54, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 61
  br i1 %cmp96, label %cond.true.97, label %cond.false.98

cond.true.97:                                     ; preds = %cond.end.89
  br label %cond.end.103

cond.false.98:                                    ; preds = %cond.end.89
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i32 0, i64 1
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtx101, align 8
  %call102 = call i32 @notreg_cost(%struct.rtx_def* %56, i32 47)
  br label %cond.end.103

cond.end.103:                                     ; preds = %cond.false.98, %cond.true.97
  %cond104 = phi i32 [ 0, %cond.true.97 ], [ %call102, %cond.false.98 ]
  %cmp105 = icmp slt i32 %cond90, %cond104
  br i1 %cmp105, label %if.then.106, label %if.end.231

if.then.106:                                      ; preds = %cond.end.103
  %57 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  %call107 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %57)
  store %struct.rtx_def* %call107, %struct.rtx_def** %p, align 8
  br label %for.cond.108

for.cond.108:                                     ; preds = %for.inc.228, %if.then.106
  %58 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %tobool109 = icmp ne %struct.rtx_def* %58, null
  br i1 %tobool109, label %land.lhs.true.110, label %land.end

land.lhs.true.110:                                ; preds = %for.cond.108
  %59 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %60 = bitcast %struct.rtx_def* %59 to i32*
  %bf.load111 = load i32, i32* %60, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp ne i32 %bf.clear112, 34
  br i1 %cmp113, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.110
  %61 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %62 = bitcast %struct.rtx_def* %61 to i32*
  %bf.load114 = load i32, i32* %62, align 8
  %bf.clear115 = and i32 %bf.load114, 65535
  %cmp116 = icmp ne i32 %bf.clear115, 36
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.110, %for.cond.108
  %63 = phi i1 [ false, %land.lhs.true.110 ], [ false, %for.cond.108 ], [ %cmp116, %land.rhs ]
  br i1 %63, label %for.body.117, label %for.end.230

for.body.117:                                     ; preds = %land.end
  %64 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %65 = bitcast %struct.rtx_def* %64 to i32*
  %bf.load118 = load i32, i32* %65, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %idxprom = sext i32 %bf.clear119 to i64
  %arrayidx120 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom
  %66 = load i8, i8* %arrayidx120, align 1
  %conv = sext i8 %66 to i32
  %cmp121 = icmp eq i32 %conv, 105
  br i1 %cmp121, label %cond.true.123, label %cond.false.142

cond.true.123:                                    ; preds = %for.body.117
  %67 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i32 0, i64 3
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rtx126, align 8
  %69 = bitcast %struct.rtx_def* %68 to i32*
  %bf.load127 = load i32, i32* %69, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %cmp129 = icmp eq i32 %bf.clear128, 47
  br i1 %cmp129, label %cond.true.131, label %cond.false.135

cond.true.131:                                    ; preds = %cond.true.123
  %70 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i32 0, i64 3
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rtx134, align 8
  br label %cond.end.140

cond.false.135:                                   ; preds = %cond.true.123
  %72 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %73 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %fld136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i32 0, i64 3
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rtx138, align 8
  %call139 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %72, %struct.rtx_def* %74)
  br label %cond.end.140

cond.end.140:                                     ; preds = %cond.false.135, %cond.true.131
  %cond141 = phi %struct.rtx_def* [ %71, %cond.true.131 ], [ %call139, %cond.false.135 ]
  br label %cond.end.143

cond.false.142:                                   ; preds = %for.body.117
  br label %cond.end.143

cond.end.143:                                     ; preds = %cond.false.142, %cond.end.140
  %cond144 = phi %struct.rtx_def* [ %cond141, %cond.end.140 ], [ null, %cond.false.142 ]
  store %struct.rtx_def* %cond144, %struct.rtx_def** %set, align 8
  %cmp145 = icmp ne %struct.rtx_def* %cond144, null
  br i1 %cmp145, label %land.lhs.true.147, label %if.end.227

land.lhs.true.147:                                ; preds = %cond.end.143
  %75 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i32 0, i64 0
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtx150, align 8
  %77 = bitcast %struct.rtx_def* %76 to i32*
  %bf.load151 = load i32, i32* %77, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 61
  br i1 %cmp153, label %land.lhs.true.155, label %if.end.227

land.lhs.true.155:                                ; preds = %land.lhs.true.147
  %78 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i32 0, i64 0
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rtx158, align 8
  %80 = bitcast %struct.rtx_def* %79 to i32*
  %bf.load159 = load i32, i32* %80, align 8
  %bf.lshr160 = lshr i32 %bf.load159, 16
  %bf.clear161 = and i32 %bf.lshr160, 255
  %81 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %mode = getelementptr inbounds %struct.table_elt, %struct.table_elt* %81, i32 0, i32 10
  %82 = load i32, i32* %mode, align 4
  %cmp162 = icmp eq i32 %bf.clear161, %82
  br i1 %cmp162, label %land.lhs.true.164, label %if.end.227

land.lhs.true.164:                                ; preds = %land.lhs.true.155
  %83 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i32 0, i64 1
  %rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rtx167, align 8
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i32 0, i64 1
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rtx170, align 8
  %call171 = call i32 @rtx_equal_p(%struct.rtx_def* %84, %struct.rtx_def* %86)
  %tobool172 = icmp ne i32 %call171, 0
  br i1 %tobool172, label %if.then.173, label %if.end.227

if.then.173:                                      ; preds = %land.lhs.true.164
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1
  %arrayidx175 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i32 0, i64 1
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rtx176, align 8
  store %struct.rtx_def* %88, %struct.rtx_def** %cse_check_loop_start_value, align 8
  %89 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  store %struct.rtx_def* %89, %struct.rtx_def** %q, align 8
  br label %for.cond.177

for.cond.177:                                     ; preds = %for.inc, %if.then.173
  %90 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %91 = load %struct.rtx_def*, %struct.rtx_def** %loop_start.addr, align 8
  %cmp178 = icmp ne %struct.rtx_def* %90, %91
  br i1 %cmp178, label %for.body.180, label %for.end

for.body.180:                                     ; preds = %for.cond.177
  %92 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %93 = bitcast %struct.rtx_def* %92 to i32*
  %bf.load181 = load i32, i32* %93, align 8
  %bf.clear182 = and i32 %bf.load181, 65535
  %idxprom183 = sext i32 %bf.clear182 to i64
  %arrayidx184 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i64 %idxprom183
  %94 = load i8, i8* %arrayidx184, align 1
  %conv185 = sext i8 %94 to i32
  %cmp186 = icmp eq i32 %conv185, 105
  br i1 %cmp186, label %if.then.188, label %if.end

if.then.188:                                      ; preds = %for.body.180
  %95 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i32 0, i64 3
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rtx191, align 8
  %97 = bitcast %struct.rtx_def** %cse_check_loop_start_value to i8*
  call void @note_stores(%struct.rtx_def* %96, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @cse_check_loop_start, i8* %97)
  br label %if.end

if.end:                                           ; preds = %if.then.188, %for.body.180
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %98 = load %struct.rtx_def*, %struct.rtx_def** %q, align 8
  %fld192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i32 0, i64 2
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rtx194, align 8
  store %struct.rtx_def* %99, %struct.rtx_def** %q, align 8
  br label %for.cond.177

for.end:                                          ; preds = %for.cond.177
  %100 = load %struct.rtx_def*, %struct.rtx_def** %cse_check_loop_start_value, align 8
  %tobool195 = icmp ne %struct.rtx_def* %100, null
  br i1 %tobool195, label %land.lhs.true.196, label %if.end.226

land.lhs.true.196:                                ; preds = %for.end
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i32 0, i64 1
  %rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**
  %103 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp200 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %103, i32 0, i32 0
  %104 = load %struct.rtx_def*, %struct.rtx_def** %exp200, align 8
  %call201 = call i32 @validate_change(%struct.rtx_def* %101, %struct.rtx_def** %rtx199, %struct.rtx_def* %104, i32 0)
  %tobool202 = icmp ne i32 %call201, 0
  br i1 %tobool202, label %if.then.203, label %if.end.226

if.then.203:                                      ; preds = %land.lhs.true.196
  %call204 = call i32 @max_reg_num()
  store i32 %call204, i32* %nregs, align 4
  %105 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %exp205 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %105, i32 0, i32 0
  %106 = load %struct.rtx_def*, %struct.rtx_def** %exp205, align 8
  %107 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i32 0, i64 0
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rtx208, align 8
  %call209 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %106, %struct.rtx_def* %108)
  store %struct.rtx_def* %call209, %struct.rtx_def** %move, align 8
  %109 = load i32, i32* %nregs, align 4
  %call210 = call i32 @max_reg_num()
  %cmp211 = icmp ne i32 %109, %call210
  br i1 %cmp211, label %if.then.213, label %if.else

if.then.213:                                      ; preds = %if.then.203
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i32 0, i64 1
  %rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**
  %112 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8
  %fld217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i32 0, i64 1
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rtx219, align 8
  %call220 = call i32 @validate_change(%struct.rtx_def* %110, %struct.rtx_def** %rtx216, %struct.rtx_def* %113, i32 0)
  %tobool221 = icmp ne i32 %call220, 0
  br i1 %tobool221, label %if.end.223, label %if.then.222

if.then.222:                                      ; preds = %if.then.213
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 6786, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.cse_set_around_loop, i32 0, i32 0)) #7
  unreachable

if.end.223:                                       ; preds = %if.then.213
  br label %if.end.225

if.else:                                          ; preds = %if.then.203
  %114 = load %struct.rtx_def*, %struct.rtx_def** %move, align 8
  %115 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call224 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %114, %struct.rtx_def* %115)
  br label %if.end.225

if.end.225:                                       ; preds = %if.else, %if.end.223
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.225, %land.lhs.true.196, %for.end
  br label %for.end.230

if.end.227:                                       ; preds = %land.lhs.true.164, %land.lhs.true.155, %land.lhs.true.147, %cond.end.143
  br label %for.inc.228

for.inc.228:                                      ; preds = %if.end.227
  %116 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8
  %call229 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %116)
  store %struct.rtx_def* %call229, %struct.rtx_def** %p, align 8
  br label %for.cond.108

for.end.230:                                      ; preds = %if.end.226, %land.end
  br label %if.end.231

if.end.231:                                       ; preds = %for.end.230, %cond.end.103, %land.lhs.true.74, %for.body
  br label %for.inc.232

for.inc.232:                                      ; preds = %if.end.231
  %117 = load %struct.table_elt*, %struct.table_elt** %src_elt, align 8
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %117, i32 0, i32 4
  %118 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8
  store %struct.table_elt* %118, %struct.table_elt** %src_elt, align 8
  br label %for.cond

for.end.233:                                      ; preds = %for.cond
  br label %if.end.234

if.end.234:                                       ; preds = %for.end.233, %cond.end.59
  br label %if.end.235

if.end.235:                                       ; preds = %if.end.234, %land.lhs.true.11, %land.lhs.true.4, %land.lhs.true, %entry
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i32 0, i64 0
  %rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rtx238, align 8
  %call239 = call i32 @addr_affects_sp_p(%struct.rtx_def* %120)
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1
  %arrayidx241 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld240, i32 0, i64 0
  %rtx242 = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rtx242, align 8
  %123 = bitcast %struct.rtx_def* %122 to i32*
  %bf.load243 = load i32, i32* %123, align 8
  %bf.clear244 = and i32 %bf.load243, 65535
  %cmp245 = icmp eq i32 %bf.clear244, 61
  br i1 %cmp245, label %if.then.262, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.235
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i32 0, i64 0
  %rtx249 = bitcast %union.rtunion_def* %arrayidx248 to %struct.rtx_def**
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rtx249, align 8
  %126 = bitcast %struct.rtx_def* %125 to i32*
  %bf.load250 = load i32, i32* %126, align 8
  %bf.clear251 = and i32 %bf.load250, 65535
  %cmp252 = icmp eq i32 %bf.clear251, 63
  br i1 %cmp252, label %if.then.262, label %lor.lhs.false.254

lor.lhs.false.254:                                ; preds = %lor.lhs.false
  %127 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i32 0, i64 0
  %rtx257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtx_def**
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rtx257, align 8
  %129 = bitcast %struct.rtx_def* %128 to i32*
  %bf.load258 = load i32, i32* %129, align 8
  %bf.clear259 = and i32 %bf.load258, 65535
  %cmp260 = icmp eq i32 %bf.clear259, 66
  br i1 %cmp260, label %if.then.262, label %if.else.266

if.then.262:                                      ; preds = %lor.lhs.false.254, %lor.lhs.false, %if.end.235
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i32 0, i64 0
  %rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rtx265, align 8
  call void @invalidate(%struct.rtx_def* %131, i32 0)
  br label %if.end.296

if.else.266:                                      ; preds = %lor.lhs.false.254
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i32 0, i64 0
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rtx269, align 8
  %134 = bitcast %struct.rtx_def* %133 to i32*
  %bf.load270 = load i32, i32* %134, align 8
  %bf.clear271 = and i32 %bf.load270, 65535
  %cmp272 = icmp eq i32 %bf.clear271, 64
  br i1 %cmp272, label %if.then.282, label %lor.lhs.false.274

lor.lhs.false.274:                                ; preds = %if.else.266
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i32 0, i64 0
  %rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rtx277, align 8
  %137 = bitcast %struct.rtx_def* %136 to i32*
  %bf.load278 = load i32, i32* %137, align 8
  %bf.clear279 = and i32 %bf.load278, 65535
  %cmp280 = icmp eq i32 %bf.clear279, 133
  br i1 %cmp280, label %if.then.282, label %if.end.295

if.then.282:                                      ; preds = %lor.lhs.false.274, %if.else.266
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i32 0, i64 0
  %rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rtx285, align 8
  %fld286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i32 0, i64 0
  %rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rtx288, align 8
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %fld289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i32 0, i64 0
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rtx291, align 8
  %143 = bitcast %struct.rtx_def* %142 to i32*
  %bf.load292 = load i32, i32* %143, align 8
  %bf.lshr293 = lshr i32 %bf.load292, 16
  %bf.clear294 = and i32 %bf.lshr293, 255
  call void @invalidate(%struct.rtx_def* %140, i32 %bf.clear294)
  br label %if.end.295

if.end.295:                                       ; preds = %if.then.282, %lor.lhs.false.274
  br label %if.end.296

if.end.296:                                       ; preds = %if.end.295, %if.then.262
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cse_check_loop_start(%struct.rtx_def* %x, %struct.rtx_def* %set, i8* %data) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %set.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %cse_check_loop_start_value = alloca %struct.rtx_def**, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.rtx_def**
  store %struct.rtx_def** %1, %struct.rtx_def*** %cse_check_loop_start_value, align 8
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %cse_check_loop_start_value, align 8
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8
  %cmp = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %5 = bitcast %struct.rtx_def* %4 to i32*
  %bf.load = load i32, i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 69
  br i1 %cmp1, label %if.then, label %lor.lhs.false.2

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load3 = load i32, i32* %7, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 59
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.2, %lor.lhs.false, %entry
  br label %if.end.14

if.end:                                           ; preds = %lor.lhs.false.2
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load6 = load i32, i32* %9, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 66
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false.12

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %cse_check_loop_start_value, align 8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load9 = load i32, i32* %12, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 66
  br i1 %cmp11, label %if.then.13, label %lor.lhs.false.12

lor.lhs.false.12:                                 ; preds = %land.lhs.true, %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %cse_check_loop_start_value, align 8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %13, %struct.rtx_def* %15)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %lor.lhs.false.12, %land.lhs.true
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %cse_check_loop_start_value, align 8
  store %struct.rtx_def* null, %struct.rtx_def** %16, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then, %if.then.13, %lor.lhs.false.12
  ret void
}

declare i32 @max_reg_num() #1

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i1 @set_live_p(%struct.rtx_def* %set, %struct.rtx_def* %insn, i32* %counts) #0 {
entry:
  %retval = alloca i1, align 1
  %set.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  store i32* %counts, i32** %counts.addr, align 8
  %0 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %call = call i32 @set_noop_p(%struct.rtx_def* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %if.end.28

if.else:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i32 0, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtx, align 8
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load = load i32, i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 61
  br i1 %cmp, label %if.then.27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %4 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1, i32 0, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtx3, align 8
  %fld4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i32 0, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %6 = load i32, i32* %rtuint, align 4
  %cmp6 = icmp ult i32 %6, 53
  br i1 %cmp6, label %if.then.27, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i32 0, i64 0
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rtx10, align 8
  %fld11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i32 0, i64 0
  %rtuint13 = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %9 = load i32, i32* %rtuint13, align 4
  %idxprom = zext i32 %9 to i64
  %10 = load i32*, i32** %counts.addr, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %10, i64 %idxprom
  %11 = load i32, i32* %arrayidx14, align 4
  %cmp15 = icmp ne i32 %11, 0
  br i1 %cmp15, label %if.then.27, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false.7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i32 0, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtx19, align 8
  %call20 = call i32 @side_effects_p(%struct.rtx_def* %13)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.then.27, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false.16
  %14 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8
  %fld23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i32 0, i64 0
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtx25, align 8
  %16 = load %struct.function*, %struct.function** @cfun, align 8
  %internal_arg_pointer = getelementptr inbounds %struct.function, %struct.function* %16, i32 0, i32 15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %internal_arg_pointer, align 8
  %cmp26 = icmp eq %struct.rtx_def* %15, %17
  br i1 %cmp26, label %if.then.27, label %if.end

if.then.27:                                       ; preds = %lor.lhs.false.22, %lor.lhs.false.16, %lor.lhs.false.7, %lor.lhs.false, %if.else
  store i1 true, i1* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.22
  br label %if.end.28

if.end.28:                                        ; preds = %if.end, %if.then
  store i1 false, i1* %retval
  br label %return

return:                                           ; preds = %if.end.28, %if.then.27
  %18 = load i1, i1* %retval
  ret i1 %18
}

declare i32 @set_noop_p(%struct.rtx_def*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
